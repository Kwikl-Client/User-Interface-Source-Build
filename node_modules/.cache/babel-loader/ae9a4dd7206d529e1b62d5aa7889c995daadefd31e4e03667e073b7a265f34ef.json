{"ast":null,"code":"import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */function () {\n  function InsertHtml() {}\n  InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal, enterAction) {\n    var node;\n    if (typeof insertNode === 'string') {\n      var divNode = document.createElement('div');\n      divNode.innerHTML = insertNode;\n      node = isExternal ? divNode : divNode.firstChild;\n    } else {\n      if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) && insertNode.classList.contains('pasteContent'))) {\n        var divNode = document.createElement('div');\n        divNode.appendChild(insertNode);\n        node = divNode;\n      } else {\n        node = insertNode;\n      }\n    }\n    var nodeSelection = new NodeSelection();\n    var nodeCutter = new NodeCutter();\n    var range = nodeSelection.getRange(docElement);\n    if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 && range.startOffset === range.endOffset && editNode.textContent.length === 0 && (editNode.children[0].tagName === 'P' || editNode.children[0].tagName === 'DIV' || editNode.children[0].tagName === 'BR')) {\n      nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n    if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 && range.startOffset === range.endOffset && editNode.textContent.trim().length > 0) {\n      var focusNode = this.findFirstTextNode(range.startContainer);\n      if (!isNOU(focusNode)) {\n        nodeSelection.setSelectionText(docElement, focusNode, focusNode, 0, 0);\n        range = nodeSelection.getRange(docElement);\n      }\n    }\n    if (range.startContainer.nodeName === 'BR' && range.startOffset === 0 && range.startOffset === range.endOffset && range.startContainer === range.endContainer) {\n      var currentIndex = Array.prototype.slice.call(range.startContainer.parentElement.childNodes).indexOf(range.startContainer);\n      nodeSelection.setSelectionText(docElement, range.startContainer.parentElement, range.startContainer.parentElement, currentIndex, currentIndex);\n      range = nodeSelection.getRange(docElement);\n    }\n    var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 && range.startContainer === range.endContainer;\n    var isCollapsed = range.collapsed;\n    var nodes = this.getNodeCollection(range, nodeSelection, node);\n    var closestParentNode = node.nodeName.toLowerCase() === 'table' ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n    if (isExternal || !isNOU(node) && !isNOU(node.classList) && node.classList.contains('pasteContent')) {\n      this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction);\n      return;\n    }\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      var sibNode = preNode.previousSibling;\n      var parentNode = preNode.parentNode;\n      if (nodes.length === 1 || node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n      } else {\n        var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n      }\n      range.extractContents();\n      if (insertNode.tagName === 'TABLE') {\n        this.removeEmptyElements(editNode);\n      }\n      for (var index = 0; index < nodes.length; index++) {\n        if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n          if (nodes[index].nodeName === 'IMG') {\n            continue;\n          }\n          nodes[index].parentNode.removeChild(nodes[index]);\n        }\n      }\n      if (sibNode) {\n        InsertMethods.AppendBefore(node, sibNode, true);\n      } else {\n        var previousNode = null;\n        while (parentNode !== editNode && parentNode.firstChild && parentNode.textContent.trim() === '') {\n          var parentNode1 = parentNode.parentNode;\n          previousNode = parentNode;\n          parentNode = parentNode1;\n        }\n        if (previousNode !== null) {\n          parentNode = previousNode;\n        }\n        if (parentNode.firstChild && (parentNode !== editNode || node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer && parentNode === range.endContainer)) {\n          if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n            InsertMethods.AppendBefore(node, parentNode, false);\n            detach(parentNode);\n          } else {\n            InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n          }\n        } else if (isNOU(preNode.previousSibling) && insertNode.tagName === 'TABLE') {\n          parentNode.prepend(node);\n        } else {\n          parentNode.appendChild(node);\n        }\n      }\n      if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n      }\n    } else {\n      range.deleteContents();\n      if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n        range.startContainer.innerHTML = '';\n      }\n      if (Browser.isIE) {\n        var frag = docElement.createDocumentFragment();\n        frag.appendChild(node);\n        range.insertNode(frag);\n      } else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr' && range.endContainer.nodeName.toLowerCase() === 'hr') {\n        var paraElem = range.startContainer.nextElementSibling;\n        if (paraElem) {\n          if (paraElem.querySelector('br')) {\n            detach(paraElem.querySelector('br'));\n          }\n          paraElem.appendChild(node);\n        }\n      } else {\n        if (range.startContainer.nodeName === 'BR') {\n          range.startContainer.parentElement.insertBefore(node, range.startContainer);\n        } else {\n          range.insertNode(node);\n        }\n      }\n      if (node.nodeType !== 3 && node.childNodes.length > 0) {\n        nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n      } else if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionContents(docElement, node);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n      }\n    }\n  };\n  InsertHtml.findFirstTextNode = function (node) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return node;\n    }\n    for (var i = 0; i < node.childNodes.length; i++) {\n      var textNode = this.findFirstTextNode(node.childNodes[i]);\n      if (!isNOU(textNode)) {\n        return textNode;\n      }\n    }\n    return null;\n  };\n  InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction) {\n    var isCursor = range.startOffset === range.endOffset && range.startContainer === range.endContainer;\n    if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n      var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n    var lasNode;\n    var sibNode;\n    var isSingleNode;\n    var preNode;\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n      if (nodes.length === 1) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = true;\n      } else {\n        lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = false;\n      }\n    }\n    var containsBlockNode = false;\n    this.removingComments(node);\n    var allChildNodes = node.childNodes;\n    for (var i = 0; i < allChildNodes.length; i++) {\n      if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n        containsBlockNode = true;\n        break;\n      }\n    }\n    var lastSelectionNode;\n    var fragment = document.createDocumentFragment();\n    if (!containsBlockNode) {\n      if (!isCursor) {\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n        if (isSingleNode) {\n          preNode.parentNode.replaceChild(fragment, preNode);\n        } else {\n          range.deleteContents();\n          if (!isNOU(lasNode)) {\n            detach(lasNode);\n          }\n          // eslint-disable-next-line\n          !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n        }\n      } else {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n        if (range.startContainer.nodeType === 3 && nearestAnchor && closest(nearestAnchor, 'span')) {\n          var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n          if (immediateBlockNode.querySelectorAll('br').length > 0) {\n            detach(immediateBlockNode.querySelector('br'));\n          }\n          var rangeElement = closest(nearestAnchor, 'span');\n          rangeElement.appendChild(tempSpan);\n        } else {\n          range.insertNode(tempSpan);\n        }\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n        tempSpan.parentNode.replaceChild(fragment, tempSpan);\n      }\n    } else {\n      var parentElem = range.startContainer;\n      while (!isNOU(parentElem) && parentElem.nodeName !== 'PRE' && parentElem !== editNode) {\n        parentElem = parentElem.parentElement;\n      }\n      if (!isNOU(node) && !isNOU(parentElem) && parentElem.nodeName === 'PRE') {\n        range.insertNode(node);\n        lastSelectionNode = node.lastChild;\n      } else {\n        this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n        var isFirstTextNode = true;\n        var isPreviousInlineElem = void 0;\n        var paraElm = void 0;\n        var previousParent = void 0;\n        if (!this.contentsDeleted) {\n          range.deleteContents();\n        }\n        while (node.firstChild) {\n          if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n            detach(node.firstChild);\n            continue;\n          }\n          if (node.firstChild.nodeName === '#text' && isFirstTextNode || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode) {\n            lastSelectionNode = node.firstChild;\n            if (isNOU(node.previousElementSibling)) {\n              var firstParaElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n              node.parentElement.insertBefore(firstParaElm, node);\n            }\n            if (node.previousElementSibling.nodeName === 'BR') {\n              node.parentElement.insertBefore(node.firstChild, node);\n            } else {\n              node.previousElementSibling.appendChild(node.firstChild);\n            }\n          } else {\n            lastSelectionNode = node.firstChild;\n            if (node.firstChild.nodeName === '#text' || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0) {\n              if (!isPreviousInlineElem) {\n                paraElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n                paraElm.appendChild(node.firstChild);\n                fragment.appendChild(paraElm);\n              } else {\n                previousParent.appendChild(node.firstChild);\n                fragment.appendChild(previousParent);\n              }\n              previousParent = paraElm;\n              isPreviousInlineElem = true;\n            } else {\n              fragment.appendChild(node.firstChild);\n              isPreviousInlineElem = false;\n            }\n            isFirstTextNode = false;\n          }\n        }\n        node.parentNode.replaceChild(fragment, node);\n      }\n    }\n    if (lastSelectionNode.nodeName === '#text') {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    } else {\n      this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction);\n    }\n  };\n  InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode : lastSelectionNode.previousSibling : lastSelectionNode;\n    while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' && lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n      if (!isNOU(lastSelectionNode.lastChild) && lastSelectionNode.lastChild.nodeName === 'P' && lastSelectionNode.lastChild.innerHTML === '') {\n        var lineBreak = createElement('br');\n        lastSelectionNode.lastChild.appendChild(lineBreak);\n      }\n      lastSelectionNode = lastSelectionNode.lastChild;\n    }\n    lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n    if (lastSelectionNode.nodeName === 'IMG') {\n      this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n    } else {\n      nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n    }\n    this.removeEmptyElements(editNode);\n  };\n  InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n    var nodes = [];\n    if (range.startOffset === range.endOffset && range.startContainer === range.endContainer && range.startContainer.nodeName !== 'BR' && range.startContainer.childNodes.length > 0 && (range.startContainer.nodeName === 'TD' || range.startContainer.nodeType !== 3 && node.classList && node.classList.contains('pasteContent'))) {\n      nodes.push(range.startContainer.childNodes[range.endOffset]);\n    } else {\n      nodes = nodeSelection.getInsertNodeCollection(range);\n    }\n    return nodes;\n  };\n  InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n    if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) && range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n      if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n      }\n    } else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) && range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n      range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n    } else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3 && node.firstChild.nodeName === 'HR') {\n      if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.parentNode.insertBefore(node, range.startContainer);\n      }\n    } else {\n      var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n        blockNode = range.endContainer;\n        range.setEnd(blockNode, range.endContainer.textContent.length);\n      }\n      if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n        blockNode = range.startContainer;\n      }\n      if (blockNode.closest('LI') && node && node.firstElementChild && (node.firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n        var liNode = void 0;\n        while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n          liNode = node.firstElementChild.lastElementChild;\n          liNode.style.removeProperty('margin-left');\n          liNode.style.removeProperty('margin-top');\n          liNode.style.removeProperty('margin-bottom');\n          node.firstElementChild.insertAdjacentElement('afterend', liNode);\n        }\n      }\n      if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH' || blockNode.nodeName === 'TR') {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        range.insertNode(tempSpan);\n        tempSpan.parentNode.replaceChild(node, tempSpan);\n      } else {\n        var nodeSelection = new NodeSelection();\n        var currentNode = this.getNodeCollection(range, nodeSelection, node)[this.getNodeCollection(range, nodeSelection, node).length - 1];\n        var splitedElm = void 0;\n        if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR' || currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) && currentNode.parentElement.nodeName === 'LI') && !isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0) {\n          splitedElm = currentNode;\n          if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) && currentNode.nextSibling.nodeName === 'BR') {\n            detach(currentNode.nextSibling);\n          }\n        } else if ((currentNode.nodeName === '#text' || currentNode.nodeName === 'BR') && !isNOU(currentNode.parentElement) && (currentNode.parentElement.nodeName === 'LI' || blockNode === editNode && currentNode.parentElement === blockNode) && currentNode.parentElement.textContent.trim().length > 0) {\n          splitedElm = currentNode;\n          if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) && currentNode.nextSibling.nodeName === 'BR') {\n            detach(currentNode.nextSibling);\n          }\n          if (!range.collapsed) {\n            range.deleteContents();\n          }\n          range.insertNode(node);\n          this.contentsDeleted = true;\n          return;\n        } else {\n          splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n        }\n        splitedElm.parentNode.replaceChild(node, splitedElm);\n      }\n    }\n  };\n  InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction) {\n    lastSelectionNode.classList.add('lastNode');\n    editNode.innerHTML = updateTextNode(editNode.innerHTML, enterAction);\n    lastSelectionNode = editNode.querySelector('.lastNode');\n    if (!isNOU(lastSelectionNode)) {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n      lastSelectionNode.classList.remove('lastNode');\n      if (lastSelectionNode.classList.length === 0) {\n        lastSelectionNode.removeAttribute('class');\n      }\n    }\n  };\n  InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n    var focusNode = document.createTextNode(' ');\n    node.parentNode.insertBefore(focusNode, node.nextSibling);\n    nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n  };\n  // eslint-disable-next-line\n  InsertHtml.getImmediateBlockNode = function (node, editNode) {\n    do {\n      node = node.parentNode;\n    } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n    return node;\n  };\n  InsertHtml.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n  InsertHtml.findDetachEmptyElem = function (element) {\n    var removableElement;\n    if (!isNOU(element.parentElement)) {\n      var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g) && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n      if (!hasNbsp && element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true' && isNOU(element.parentElement.querySelector('img'))) {\n        removableElement = this.findDetachEmptyElem(element.parentElement);\n      } else {\n        removableElement = element;\n      }\n    } else {\n      removableElement = null;\n    }\n    return removableElement;\n  };\n  InsertHtml.removeEmptyElements = function (element) {\n    var emptyElements = element.querySelectorAll(':empty');\n    var nonSvgEmptyElements = Array.from(emptyElements).filter(function (element) {\n      // Check if the element is an SVG element or an ancestor of an SVG element\n      return !element.closest('svg') && !element.closest('canvas');\n    });\n    for (var i = 0; i < nonSvgEmptyElements.length; i++) {\n      var lineWithDiv = true;\n      if (nonSvgEmptyElements[i].tagName === 'DIV') {\n        lineWithDiv = nonSvgEmptyElements[i].style.borderBottom === 'none' || nonSvgEmptyElements[i].style.borderBottom === '' ? true : false;\n      }\n      if (CONSTANT.SELF_CLOSING_TAGS.indexOf(nonSvgEmptyElements[i].tagName.toLowerCase()) < 0 && lineWithDiv) {\n        var detachableElement = this.findDetachEmptyElem(nonSvgEmptyElements[i]);\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n  InsertHtml.closestEle = function (element, editNode) {\n    var el = element;\n    while (el && el.nodeType === 1) {\n      if (el.parentNode === editNode || !isNOU(el.parentNode.tagName) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1) {\n        return el;\n      }\n      el = el.parentNode;\n    }\n    return null;\n  };\n  /**\n   * Insert method\n   *\n   * @hidden\n    */\n  InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n  InsertHtml.contentsDeleted = false;\n  return InsertHtml;\n}();\nexport { InsertHtml };","map":{"version":3,"names":["NodeSelection","NodeCutter","CONSTANT","detach","Browser","isNullOrUndefined","isNOU","createElement","closest","InsertMethods","updateTextNode","InsertHtml","Insert","docElement","insertNode","editNode","isExternal","enterAction","node","divNode","document","innerHTML","firstChild","classList","contains","appendChild","nodeSelection","nodeCutter","range","getRange","startContainer","endContainer","startOffset","endOffset","textContent","length","children","tagName","setSelectionText","trim","focusNode","findFirstTextNode","nodeName","currentIndex","Array","prototype","slice","call","parentElement","childNodes","indexOf","isCursor","isCollapsed","collapsed","nodes","getNodeCollection","closestParentNode","toLowerCase","closestEle","parentNode","pasteInsertHTML","nodeType","Node","ELEMENT_NODE","TABLE_BLOCK_TAGS","toLocaleLowerCase","preNode","GetSpliceNode","sibNode","previousSibling","childElementCount","setSelectionContents","lasNode","extractContents","removeEmptyElements","index","removeChild","AppendBefore","previousNode","parentNode1","prepend","imageFocus","deleteContents","isIE","frag","createDocumentFragment","paraElem","nextElementSibling","querySelector","insertBefore","TEXT_NODE","i","textNode","currentBlockNode","getImmediateBlockNode","isSingleNode","containsBlockNode","removingComments","allChildNodes","BLOCK_TAGS","lastSelectionNode","fragment","replaceChild","tempSpan","className","nearestAnchor","immediateBlockNode","querySelectorAll","rangeElement","parentElem","lastChild","insertTempNode","isFirstTextNode","isPreviousInlineElem","paraElm","previousParent","contentsDeleted","inlineNode","previousElementSibling","firstParaElm","placeCursorEnd","cursorPos","lineBreak","push","getInsertNodeCollection","nextSibling","blockNode","setEnd","firstElementChild","liNode","lastElementChild","style","removeProperty","insertAdjacentElement","currentNode","splitedElm","add","remove","removeAttribute","createTextNode","elm","innerElement","replace","findDetachEmptyElem","element","removableElement","hasNbsp","match","contentEditable","emptyElements","nonSvgEmptyElements","from","filter","lineWithDiv","borderBottom","SELF_CLOSING_TAGS","detachableElement","el","IGNORE_BLOCK_TAGS"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/inserthtml.js"],"sourcesContent":["import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */ (function () {\n    function InsertHtml() {\n    }\n    InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal, enterAction) {\n        var node;\n        if (typeof insertNode === 'string') {\n            var divNode = document.createElement('div');\n            divNode.innerHTML = insertNode;\n            node = isExternal ? divNode : divNode.firstChild;\n        }\n        else {\n            if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) &&\n                insertNode.classList.contains('pasteContent'))) {\n                var divNode = document.createElement('div');\n                divNode.appendChild(insertNode);\n                node = divNode;\n            }\n            else {\n                node = insertNode;\n            }\n        }\n        var nodeSelection = new NodeSelection();\n        var nodeCutter = new NodeCutter();\n        var range = nodeSelection.getRange(docElement);\n        if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 &&\n            range.startOffset === range.endOffset && editNode.textContent.length === 0 &&\n            (editNode.children[0].tagName === 'P' || editNode.children[0].tagName === 'DIV' || (editNode.children[0].tagName === 'BR'))) {\n            nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 &&\n            range.startOffset === range.endOffset && editNode.textContent.trim().length > 0) {\n            var focusNode = this.findFirstTextNode(range.startContainer);\n            if (!isNOU(focusNode)) {\n                nodeSelection.setSelectionText(docElement, focusNode, focusNode, 0, 0);\n                range = nodeSelection.getRange(docElement);\n            }\n        }\n        if (range.startContainer.nodeName === 'BR' && range.startOffset === 0 && range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer) {\n            var currentIndex = Array.prototype.slice.call(range.startContainer.parentElement.childNodes).indexOf(range.startContainer);\n            nodeSelection.setSelectionText(docElement, range.startContainer.parentElement, range.startContainer.parentElement, currentIndex, currentIndex);\n            range = nodeSelection.getRange(docElement);\n        }\n        var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 &&\n            range.startContainer === range.endContainer;\n        var isCollapsed = range.collapsed;\n        var nodes = this.getNodeCollection(range, nodeSelection, node);\n        var closestParentNode = (node.nodeName.toLowerCase() === 'table') ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n        if (isExternal || (!isNOU(node) && !isNOU(node.classList) &&\n            node.classList.contains('pasteContent'))) {\n            this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction);\n            return;\n        }\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            var sibNode = preNode.previousSibling;\n            var parentNode = preNode.parentNode;\n            if (nodes.length === 1 || (node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0)) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n            }\n            else {\n                var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n            }\n            range.extractContents();\n            if (insertNode.tagName === 'TABLE') {\n                this.removeEmptyElements(editNode);\n            }\n            for (var index = 0; index < nodes.length; index++) {\n                if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n                    if (nodes[index].nodeName === 'IMG') {\n                        continue;\n                    }\n                    nodes[index].parentNode.removeChild(nodes[index]);\n                }\n            }\n            if (sibNode) {\n                InsertMethods.AppendBefore(node, sibNode, true);\n            }\n            else {\n                var previousNode = null;\n                while (parentNode !== editNode && parentNode.firstChild &&\n                    (parentNode.textContent.trim() === '')) {\n                    var parentNode1 = parentNode.parentNode;\n                    previousNode = parentNode;\n                    parentNode = parentNode1;\n                }\n                if (previousNode !== null) {\n                    parentNode = previousNode;\n                }\n                if (parentNode.firstChild && (parentNode !== editNode ||\n                    (node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer &&\n                        parentNode === range.endContainer))) {\n                    if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n                        InsertMethods.AppendBefore(node, parentNode, false);\n                        detach(parentNode);\n                    }\n                    else {\n                        InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n                    }\n                }\n                else if (isNOU(preNode.previousSibling) && insertNode.tagName === 'TABLE') {\n                    parentNode.prepend(node);\n                }\n                else {\n                    parentNode.appendChild(node);\n                }\n            }\n            if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n            }\n        }\n        else {\n            range.deleteContents();\n            if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n                range.startContainer.innerHTML = '';\n            }\n            if (Browser.isIE) {\n                var frag = docElement.createDocumentFragment();\n                frag.appendChild(node);\n                range.insertNode(frag);\n            }\n            else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr'\n                && range.endContainer.nodeName.toLowerCase() === 'hr') {\n                var paraElem = range.startContainer.nextElementSibling;\n                if (paraElem) {\n                    if (paraElem.querySelector('br')) {\n                        detach(paraElem.querySelector('br'));\n                    }\n                    paraElem.appendChild(node);\n                }\n            }\n            else {\n                if (range.startContainer.nodeName === 'BR') {\n                    range.startContainer.parentElement.insertBefore(node, range.startContainer);\n                }\n                else {\n                    range.insertNode(node);\n                }\n            }\n            if (node.nodeType !== 3 && node.childNodes.length > 0) {\n                nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n            }\n            else if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionContents(docElement, node);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n            }\n        }\n    };\n    InsertHtml.findFirstTextNode = function (node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            return node;\n        }\n        for (var i = 0; i < node.childNodes.length; i++) {\n            var textNode = this.findFirstTextNode(node.childNodes[i]);\n            if (!isNOU(textNode)) {\n                return textNode;\n            }\n        }\n        return null;\n    };\n    InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction) {\n        var isCursor = range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer;\n        if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n            var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        var lasNode;\n        var sibNode;\n        var isSingleNode;\n        var preNode;\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n            if (nodes.length === 1) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = true;\n            }\n            else {\n                lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = false;\n            }\n        }\n        var containsBlockNode = false;\n        this.removingComments(node);\n        var allChildNodes = node.childNodes;\n        for (var i = 0; i < allChildNodes.length; i++) {\n            if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n                containsBlockNode = true;\n                break;\n            }\n        }\n        var lastSelectionNode;\n        var fragment = document.createDocumentFragment();\n        if (!containsBlockNode) {\n            if (!isCursor) {\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                if (isSingleNode) {\n                    preNode.parentNode.replaceChild(fragment, preNode);\n                }\n                else {\n                    range.deleteContents();\n                    if (!isNOU(lasNode)) {\n                        detach(lasNode);\n                    }\n                    // eslint-disable-next-line\n                    !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n                }\n            }\n            else {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n                if (range.startContainer.nodeType === 3 && nearestAnchor && closest(nearestAnchor, 'span')) {\n                    var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n                    if (immediateBlockNode.querySelectorAll('br').length > 0) {\n                        detach(immediateBlockNode.querySelector('br'));\n                    }\n                    var rangeElement = closest(nearestAnchor, 'span');\n                    rangeElement.appendChild(tempSpan);\n                }\n                else {\n                    range.insertNode(tempSpan);\n                }\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                tempSpan.parentNode.replaceChild(fragment, tempSpan);\n            }\n        }\n        else {\n            var parentElem = range.startContainer;\n            while (!isNOU(parentElem) && parentElem.nodeName !== 'PRE' && parentElem !== editNode) {\n                parentElem = parentElem.parentElement;\n            }\n            if (!isNOU(node) && !isNOU(parentElem) && parentElem.nodeName === 'PRE') {\n                range.insertNode(node);\n                lastSelectionNode = node.lastChild;\n            }\n            else {\n                this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n                var isFirstTextNode = true;\n                var isPreviousInlineElem = void 0;\n                var paraElm = void 0;\n                var previousParent = void 0;\n                if (!this.contentsDeleted) {\n                    range.deleteContents();\n                }\n                while (node.firstChild) {\n                    if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n                        detach(node.firstChild);\n                        continue;\n                    }\n                    if (node.firstChild.nodeName === '#text' && isFirstTextNode ||\n                        (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode)) {\n                        lastSelectionNode = node.firstChild;\n                        if (isNOU(node.previousElementSibling)) {\n                            var firstParaElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n                            node.parentElement.insertBefore(firstParaElm, node);\n                        }\n                        if (node.previousElementSibling.nodeName === 'BR') {\n                            node.parentElement.insertBefore(node.firstChild, node);\n                        }\n                        else {\n                            node.previousElementSibling.appendChild(node.firstChild);\n                        }\n                    }\n                    else {\n                        lastSelectionNode = node.firstChild;\n                        if (node.firstChild.nodeName === '#text' ||\n                            (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                            if (!isPreviousInlineElem) {\n                                paraElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n                                paraElm.appendChild(node.firstChild);\n                                fragment.appendChild(paraElm);\n                            }\n                            else {\n                                previousParent.appendChild(node.firstChild);\n                                fragment.appendChild(previousParent);\n                            }\n                            previousParent = paraElm;\n                            isPreviousInlineElem = true;\n                        }\n                        else {\n                            fragment.appendChild(node.firstChild);\n                            isPreviousInlineElem = false;\n                        }\n                        isFirstTextNode = false;\n                    }\n                }\n                node.parentNode.replaceChild(fragment, node);\n            }\n        }\n        if (lastSelectionNode.nodeName === '#text') {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n        else {\n            this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction);\n        }\n    };\n    InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? (isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode\n            : lastSelectionNode.previousSibling) : lastSelectionNode;\n        while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' &&\n            lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n            if (!isNOU(lastSelectionNode.lastChild) && (lastSelectionNode.lastChild.nodeName === 'P' &&\n                lastSelectionNode.lastChild.innerHTML === '')) {\n                var lineBreak = createElement('br');\n                lastSelectionNode.lastChild.appendChild(lineBreak);\n            }\n            lastSelectionNode = lastSelectionNode.lastChild;\n        }\n        lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n        if (lastSelectionNode.nodeName === 'IMG') {\n            this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n        }\n        else {\n            nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n        }\n        this.removeEmptyElements(editNode);\n    };\n    InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n        var nodes = [];\n        if (range.startOffset === range.endOffset && range.startContainer === range.endContainer &&\n            range.startContainer.nodeName !== 'BR' && range.startContainer.childNodes.length > 0 &&\n            (range.startContainer.nodeName === 'TD' || (range.startContainer.nodeType !== 3 &&\n                node.classList && node.classList.contains('pasteContent')))) {\n            nodes.push(range.startContainer.childNodes[range.endOffset]);\n        }\n        else {\n            nodes = nodeSelection.getInsertNodeCollection(range);\n        }\n        return nodes;\n    };\n    InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n        if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) &&\n            range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n            if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n            }\n        }\n        else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) &&\n            range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n            range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n        }\n        else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3\n            && node.firstChild.nodeName === 'HR') {\n            if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.parentNode.insertBefore(node, range.startContainer);\n            }\n        }\n        else {\n            var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n                blockNode = range.endContainer;\n                range.setEnd(blockNode, range.endContainer.textContent.length);\n            }\n            if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n                blockNode = range.startContainer;\n            }\n            if (blockNode.closest('LI') && node && node.firstElementChild &&\n                ((node).firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n                var liNode = void 0;\n                while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n                    liNode = node.firstElementChild.lastElementChild;\n                    liNode.style.removeProperty('margin-left');\n                    liNode.style.removeProperty('margin-top');\n                    liNode.style.removeProperty('margin-bottom');\n                    node.firstElementChild.insertAdjacentElement('afterend', liNode);\n                }\n            }\n            if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH' || blockNode.nodeName === 'TR') {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                range.insertNode(tempSpan);\n                tempSpan.parentNode.replaceChild(node, tempSpan);\n            }\n            else {\n                var nodeSelection = new NodeSelection();\n                var currentNode = this.getNodeCollection(range, nodeSelection, node)[this.getNodeCollection(range, nodeSelection, node).length - 1];\n                var splitedElm = void 0;\n                if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR' ||\n                    (currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) && currentNode.parentElement.nodeName === 'LI')) &&\n                    (!isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0)) {\n                    splitedElm = currentNode;\n                    if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) &&\n                        currentNode.nextSibling.nodeName === 'BR') {\n                        detach(currentNode.nextSibling);\n                    }\n                }\n                else if ((currentNode.nodeName === '#text' || currentNode.nodeName === 'BR') && !isNOU(currentNode.parentElement) &&\n                    (currentNode.parentElement.nodeName === 'LI' || (blockNode === editNode && currentNode.parentElement === blockNode)) &&\n                    currentNode.parentElement.textContent.trim().length > 0) {\n                    splitedElm = currentNode;\n                    if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) &&\n                        currentNode.nextSibling.nodeName === 'BR') {\n                        detach(currentNode.nextSibling);\n                    }\n                    if (!range.collapsed) {\n                        range.deleteContents();\n                    }\n                    range.insertNode(node);\n                    this.contentsDeleted = true;\n                    return;\n                }\n                else {\n                    splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n                }\n                splitedElm.parentNode.replaceChild(node, splitedElm);\n            }\n        }\n    };\n    InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction) {\n        lastSelectionNode.classList.add('lastNode');\n        editNode.innerHTML = updateTextNode(editNode.innerHTML, enterAction);\n        lastSelectionNode = editNode.querySelector('.lastNode');\n        if (!isNOU(lastSelectionNode)) {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n            lastSelectionNode.classList.remove('lastNode');\n            if (lastSelectionNode.classList.length === 0) {\n                lastSelectionNode.removeAttribute('class');\n            }\n        }\n    };\n    InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n        var focusNode = document.createTextNode(' ');\n        node.parentNode.insertBefore(focusNode, node.nextSibling);\n        nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n    };\n    // eslint-disable-next-line\n    InsertHtml.getImmediateBlockNode = function (node, editNode) {\n        do {\n            node = node.parentNode;\n        } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n        return node;\n    };\n    InsertHtml.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    InsertHtml.findDetachEmptyElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g)\n                && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n            if (!hasNbsp && element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true' &&\n                isNOU(element.parentElement.querySelector('img'))) {\n                removableElement = this.findDetachEmptyElem(element.parentElement);\n            }\n            else {\n                removableElement = element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    InsertHtml.removeEmptyElements = function (element) {\n        var emptyElements = element.querySelectorAll(':empty');\n        var nonSvgEmptyElements = Array.from(emptyElements).filter(function (element) {\n            // Check if the element is an SVG element or an ancestor of an SVG element\n            return !element.closest('svg') && !element.closest('canvas');\n        });\n        for (var i = 0; i < nonSvgEmptyElements.length; i++) {\n            var lineWithDiv = true;\n            if (nonSvgEmptyElements[i].tagName === 'DIV') {\n                lineWithDiv = nonSvgEmptyElements[i].style.borderBottom === 'none' ||\n                    nonSvgEmptyElements[i].style.borderBottom === '' ? true : false;\n            }\n            if (CONSTANT.SELF_CLOSING_TAGS.indexOf(nonSvgEmptyElements[i].tagName.toLowerCase()) < 0 && lineWithDiv) {\n                var detachableElement = this.findDetachEmptyElem(nonSvgEmptyElements[i]);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    InsertHtml.closestEle = function (element, editNode) {\n        var el = element;\n        while (el && el.nodeType === 1) {\n            if (el.parentNode === editNode ||\n                (!isNOU(el.parentNode.tagName) &&\n                    CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1)) {\n                return el;\n            }\n            el = el.parentNode;\n        }\n        return null;\n    };\n    /**\n     * Insert method\n     *\n     * @hidden\n\n     */\n    InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n        'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n        'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n        'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg',\n        'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n    InsertHtml.contentsDeleted = false;\n    return InsertHtml;\n}());\nexport { InsertHtml };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}