{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */function (_super) {\n  __extends(PathElement, _super);\n  /**\n   * set the id for each element\n   */\n  function PathElement() {\n    var _this = _super.call(this) || this;\n    /**\n     * Gets or sets the geometry of the path element\n     */\n    _this.pathData = '';\n    /**\n     * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n     */\n    _this.transformPath = true;\n    /**\n     * Gets/Sets the equivalent path, that will have the origin as 0,0\n     */\n    _this.absolutePath = '';\n    /**   @private  */\n    _this.canMeasurePath = false;\n    //Private variables\n    /**   @private  */\n    _this.absoluteBounds = new Rect();\n    return _this;\n  }\n  Object.defineProperty(PathElement.prototype, \"data\", {\n    /**\n     * Gets the geometry of the path element\n     */\n    get: function () {\n      return this.pathData;\n    },\n    /**\n     * Sets the geometry of the path element\n     */\n    set: function (value) {\n      if (this.pathData !== value) {\n        this.pathData = value;\n        this.isDirt = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Measures the minimum space that is required to render the element\n   * @param availableSize\n   */\n  PathElement.prototype.measure = function (availableSize) {\n    //Performance issue - Avoiding measuring the connector path\n    if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n      this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n    } else if (this.isDirt && (this.transformPath || this.width === undefined || this.height === undefined) && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n      //Measure the element only whent the path data is changed/ size is not specified\n      this.absoluteBounds = measurePath(this.data ? this.data : '');\n    }\n    if (this.width === undefined) {\n      this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n    } else if (this.height === undefined) {\n      this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n    } else {\n      this.desiredSize = new Size(this.width, this.height);\n    }\n    this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n    this.canMeasurePath = false;\n    return this.desiredSize;\n  };\n  /**\n   * Arranges the path element\n   * @param desiredSize\n   */\n  PathElement.prototype.arrange = function (desiredSize) {\n    if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n      this.isDirt = true;\n      this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n      if (!this.staticSize) {\n        this.points = null;\n      }\n    }\n    this.actualSize = this.desiredSize;\n    this.updateBounds();\n    this.isDirt = false;\n    return this.actualSize;\n  };\n  /**\n   * Translates the path to 0,0 and scales the path based on the actual size\n   * @param pathData\n   * @param bounds\n   * @param actualSize\n   */\n  PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n    var isScale = false;\n    var newPathString = '';\n    var scaleX = -bounds.x;\n    var scaleY = -bounds.y;\n    var arrayCollection = [];\n    if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n      scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n      scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n      isScale = true;\n    }\n    arrayCollection = processPathData(pathData);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    if ((isScale || this.isDirt) && this.transformPath) {\n      newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n    } else {\n      newPathString = getPathString(arrayCollection);\n    }\n    isScale = false;\n    return newPathString;\n  };\n  return PathElement;\n}(DrawingElement);\nexport { PathElement };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Size","DrawingElement","Rect","measurePath","processPathData","splitArrayCollection","transformPath","getPathString","PathElement","_super","_this","call","pathData","absolutePath","canMeasurePath","absoluteBounds","defineProperty","get","set","value","isDirt","enumerable","configurable","measure","availableSize","staticSize","width","undefined","height","offsetX","pivot","x","offsetY","y","data","desiredSize","validateDesiredSize","arrange","actualSize","updatePath","points","updateBounds","bounds","isScale","newPathString","scaleX","scaleY","arrayCollection","Number"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-drawings/src/drawing/core/elements/path-element.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DrawingElement));\nexport { PathElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}