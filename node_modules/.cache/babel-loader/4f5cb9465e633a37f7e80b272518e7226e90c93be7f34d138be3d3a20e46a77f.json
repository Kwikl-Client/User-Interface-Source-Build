{"ast":null,"code":"import { isNullOrUndefined as isNOU, Internationalization, isBlazor } from '@syncfusion/ej2-base';\n/**\n * Exports util methods used by In-place editor.\n */\nvar intl = new Internationalization();\n/**\n * @param {string} type - specifies the string type\n * @param {valueType} val - specifies the value type\n * @param {modelType} model - specifies the model type\n * @returns {string} - returns the string\n */\nexport function parseValue(type, val, model) {\n  if (isNOU(val) || val === '') {\n    return '';\n  }\n  var result;\n  var tempFormat;\n  switch (type) {\n    case 'Color':\n      {\n        var hex = val;\n        result = hex.length > 7 ? hex.slice(0, -2) : hex;\n        break;\n      }\n    case 'Date':\n      tempFormat = model.format;\n      result = intl.formatDate(val, {\n        format: tempFormat,\n        type: type,\n        skeleton: isBlazor() ? 'd' : 'yMd'\n      });\n      break;\n    case 'DateRange':\n      {\n        tempFormat = model.format;\n        var date = val;\n        result = intl.formatDate(date[0], {\n          format: tempFormat,\n          type: type,\n          skeleton: isBlazor() ? 'd' : 'yMd'\n        }) + ' - ' + intl.formatDate(date[1], {\n          format: tempFormat,\n          type: type,\n          skeleton: isBlazor() ? 'd' : 'yMd'\n        });\n        break;\n      }\n    case 'DateTime':\n      tempFormat = model.format;\n      if (isNOU(tempFormat) || tempFormat === '') {\n        result = intl.formatDate(val, {\n          format: tempFormat,\n          type: type,\n          skeleton: isBlazor() ? 'd' : 'yMd'\n        }) + ' ' + intl.formatDate(val, {\n          format: tempFormat,\n          type: type,\n          skeleton: isBlazor() ? 't' : 'hm'\n        });\n      } else {\n        result = intl.formatDate(val, {\n          format: tempFormat,\n          type: type,\n          skeleton: isBlazor() ? 'd' : 'yMd'\n        });\n      }\n      break;\n    case 'Time':\n      tempFormat = model.format;\n      result = intl.formatDate(val, {\n        format: tempFormat,\n        type: type,\n        skeleton: isBlazor() ? 't' : 'hm'\n      });\n      break;\n    case 'Numeric':\n      {\n        tempFormat = isNOU(model.format) ? 'n2' : model.format;\n        var tempVal = isNOU(val) ? null : typeof val === 'number' ? val : intl.parseNumber(val);\n        result = intl.formatNumber(tempVal, {\n          format: tempFormat\n        });\n        break;\n      }\n    default:\n      result = val.toString();\n      break;\n  }\n  return result;\n}\n/**\n * @param {string} type - specifies the string value\n * @param {valueType} val - specifies the value type\n * @returns {valueType} - returns the value type\n */\nexport function getCompValue(type, val) {\n  if (isNOU(val) || val === '') {\n    return val;\n  }\n  if ((type === 'Date' || type === 'Time' || type === 'DateTime') && typeof val === 'string') {\n    val = new Date(val);\n  } else if (type === 'DateRange') {\n    if (typeof val === 'object' && typeof val[0] === 'string') {\n      val = [new Date(val[0]), new Date(val[1])];\n    } else if (typeof val === 'string') {\n      var temp = val.split('-');\n      val = [new Date(temp[0]), new Date(temp[1])];\n    }\n  }\n  return val;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string\n * @hidden\n */\nexport function encode(value) {\n  var data = [];\n  for (var i = value.length - 1; i >= 0; i--) {\n    data.unshift(['&#', value[i].charCodeAt(0), ';'].join(''));\n  }\n  return data.join('');\n}","map":{"version":3,"names":["isNullOrUndefined","isNOU","Internationalization","isBlazor","intl","parseValue","type","val","model","result","tempFormat","hex","length","slice","format","formatDate","skeleton","date","tempVal","parseNumber","formatNumber","toString","getCompValue","Date","temp","split","encode","value","data","i","unshift","charCodeAt","join"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-inplace-editor/src/inplace-editor/base/util.js"],"sourcesContent":["import { isNullOrUndefined as isNOU, Internationalization, isBlazor } from '@syncfusion/ej2-base';\n/**\n * Exports util methods used by In-place editor.\n */\nvar intl = new Internationalization();\n/**\n * @param {string} type - specifies the string type\n * @param {valueType} val - specifies the value type\n * @param {modelType} model - specifies the model type\n * @returns {string} - returns the string\n */\nexport function parseValue(type, val, model) {\n    if (isNOU(val) || val === '') {\n        return '';\n    }\n    var result;\n    var tempFormat;\n    switch (type) {\n        case 'Color': {\n            var hex = val;\n            result = (hex.length > 7) ? hex.slice(0, -2) : hex;\n            break;\n        }\n        case 'Date':\n            tempFormat = model.format;\n            result = intl.formatDate(val, { format: tempFormat, type: type, skeleton: isBlazor() ? 'd' : 'yMd' });\n            break;\n        case 'DateRange': {\n            tempFormat = model.format;\n            var date = val;\n            result = intl.formatDate(date[0], { format: tempFormat, type: type, skeleton: isBlazor() ? 'd' : 'yMd' }) + ' - '\n                + intl.formatDate(date[1], { format: tempFormat, type: type, skeleton: isBlazor() ? 'd' : 'yMd' });\n            break;\n        }\n        case 'DateTime':\n            tempFormat = model.format;\n            if (isNOU(tempFormat) || tempFormat === '') {\n                result = intl.formatDate(val, { format: tempFormat, type: type, skeleton: isBlazor() ? 'd' : 'yMd' }) + ' '\n                    + intl.formatDate(val, { format: tempFormat, type: type, skeleton: isBlazor() ? 't' : 'hm' });\n            }\n            else {\n                result = intl.formatDate(val, { format: tempFormat, type: type, skeleton: isBlazor() ? 'd' : 'yMd' });\n            }\n            break;\n        case 'Time':\n            tempFormat = model.format;\n            result = intl.formatDate(val, { format: tempFormat, type: type, skeleton: isBlazor() ? 't' : 'hm' });\n            break;\n        case 'Numeric': {\n            tempFormat = isNOU(model.format) ? 'n2' :\n                model.format;\n            var tempVal = isNOU(val) ? null : (typeof (val) === 'number' ? val : intl.parseNumber(val));\n            result = intl.formatNumber(tempVal, { format: tempFormat });\n            break;\n        }\n        default:\n            result = val.toString();\n            break;\n    }\n    return result;\n}\n/**\n * @param {string} type - specifies the string value\n * @param {valueType} val - specifies the value type\n * @returns {valueType} - returns the value type\n */\nexport function getCompValue(type, val) {\n    if (isNOU(val) || val === '') {\n        return val;\n    }\n    if ((type === 'Date' || type === 'Time' || type === 'DateTime') && typeof (val) === 'string') {\n        val = new Date(val);\n    }\n    else if (type === 'DateRange') {\n        if (typeof (val) === 'object' && typeof (val[0]) === 'string') {\n            val = [new Date(val[0]), new Date(val[1])];\n        }\n        else if (typeof (val) === 'string') {\n            var temp = val.split('-');\n            val = [new Date(temp[0]), new Date(temp[1])];\n        }\n    }\n    return val;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string\n * @hidden\n */\nexport function encode(value) {\n    var data = [];\n    for (var i = value.length - 1; i >= 0; i--) {\n        data.unshift(['&#', value[i].charCodeAt(0), ';'].join(''));\n    }\n    return data.join('');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}