{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n  var topValue = 0;\n  left = typeof left === 'undefined' || left === null ? 0 : left;\n  if (page.rotation === PdfRotationAngle.angle90) {\n    topValue = typeof height === 'undefined' || height === null ? 0 : left;\n  } else if (page.rotation === PdfRotationAngle.angle180) {\n    topValue = typeof height === 'undefined' || height === null ? 0 : height;\n  } else if (page.rotation === PdfRotationAngle.angle270) {\n    var size = page.size;\n    topValue = typeof height === 'undefined' || height === null ? 0 : size[0] - left;\n  }\n  return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n  var index = -1;\n  for (var i = 0; i < loadedDocument.pageCount; i++) {\n    var page = loadedDocument.getPage(i);\n    if (page._pageDictionary === pageDictionary) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n  var values = [];\n  if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n    values.push('hidden');\n  }\n  if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n    values.push('invisible');\n  }\n  if ((flag & PdfAnnotationFlag.locked) !== 0) {\n    values.push('locked');\n  }\n  if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n    values.push('norotate');\n  }\n  if ((flag & PdfAnnotationFlag.noView) !== 0) {\n    values.push('noview');\n  }\n  if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n    values.push('nozoom');\n  }\n  if ((flag & PdfAnnotationFlag.print) !== 0) {\n    values.push('print');\n  }\n  if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n    values.push('readonly');\n  }\n  if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n    values.push('togglenoview');\n  }\n  if ((flag & PdfAnnotationFlag.default) !== 0) {\n    values.push('default');\n  }\n  return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n  switch (flag) {\n    case 'hidden':\n      return PdfAnnotationFlag.hidden;\n    case 'invisible':\n      return PdfAnnotationFlag.invisible;\n    case 'locked':\n      return PdfAnnotationFlag.locked;\n    case 'norotate':\n      return PdfAnnotationFlag.noRotate;\n    case 'noview':\n      return PdfAnnotationFlag.noView;\n    case 'nozoom':\n      return PdfAnnotationFlag.noZoom;\n    case 'print':\n      return PdfAnnotationFlag.print;\n    case 'readonly':\n      return PdfAnnotationFlag.readOnly;\n    case 'togglenoview':\n      return PdfAnnotationFlag.toggleNoView;\n    default:\n      return PdfAnnotationFlag.default;\n  }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n  if (value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n    var encoding = void 0;\n    if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n      encoding = 'utf-8';\n    } else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n      encoding = 'utf-16le';\n    } else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n      encoding = 'utf-16be';\n    }\n    if (encoding) {\n      try {\n        return new TextDecoder(encoding, {\n          fatal: true\n        }).decode(_stringToBytes(value));\n      } catch (e) {} // eslint-disable-line\n    }\n  }\n  var buffer = [];\n  var translateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n  for (var i = 0; i < value.length; i++) {\n    var code = translateTable[value.charCodeAt(i)];\n    buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n  }\n  return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array\n */\nexport function _stringToBytes(value, isDirect) {\n  if (isDirect === void 0) {\n    isDirect = false;\n  }\n  var bytes = [];\n  for (var i = 0; i < value.length; ++i) {\n    bytes.push(value.charCodeAt(i) & 0xff);\n  }\n  return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {number[]} destination byte array.\n * @returns {number[]} Byte array\n */\nexport function _convertStringToBytes(value, destination) {\n  for (var i = 0; i < value.length; ++i) {\n    destination.push(value.charCodeAt(i) & 0xff);\n  }\n  return destination;\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n  if (first.length !== second.length) {\n    return false;\n  }\n  for (var i = 0; i < first.length; i++) {\n    if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n  return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n  var result = false;\n  if (value.length !== current.length) {\n    return true;\n  }\n  for (var i = 0; i < value.length; i++) {\n    if (value[i] !== current[i]) {\n      // eslint-disable-line\n      result = true;\n      break;\n    }\n  }\n  return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes) {\n  var length = bytes.length;\n  var max = 8192;\n  if (length < max) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var stringBuffer = [];\n  for (var i = 0; i < length; i += max) {\n    var chunkEnd = Math.min(i + max, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    stringBuffer.push(String.fromCharCode.apply(null, chunk));\n  }\n  return stringBuffer.join('');\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n  var output = [];\n  if (value !== null && typeof value !== 'undefined') {\n    for (var i = 0; i < value.length; i++) {\n      var code = value.charCodeAt(i);\n      output.push(code / 256 >>> 0);\n      output.push(code & 0xff);\n    }\n  }\n  var unicodeArray = new Uint8Array(output);\n  return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n  var nextHexByte;\n  var stringBuffer = [];\n  for (var i = 0; i < byteArray.length; i++) {\n    nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n    if (nextHexByte.length < 2) {\n      nextHexByte = '0' + nextHexByte;\n    }\n    stringBuffer.push(nextHexByte);\n  }\n  return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n  if (isDirect === void 0) {\n    isDirect = false;\n  }\n  var array = [];\n  if (hexString) {\n    for (var i = 0; i < hexString.length; i += 2) {\n      array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n    }\n  }\n  return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n  var result = '';\n  if (hexString && hexString[0] === '#') {\n    hexString = hexString.substring(1);\n    for (var i = 0; i < hexString.length; i += 2) {\n      result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n    }\n    return result;\n  }\n  return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n  if (isDirect === void 0) {\n    isDirect = false;\n  }\n  var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var chr1;\n  var chr2;\n  var chr3;\n  var enc1;\n  var enc2;\n  var enc3;\n  var enc4;\n  var i = 0;\n  var resultIndex = 0;\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n  var totalLength = input.length * 3 / 4;\n  if (input.charAt(input.length - 1) === key.charAt(64)) {\n    totalLength--;\n  }\n  var output = new Array(totalLength | 0);\n  while (i < input.length) {\n    enc1 = key.indexOf(input.charAt(i++));\n    enc2 = key.indexOf(input.charAt(i++));\n    enc3 = key.indexOf(input.charAt(i++));\n    enc4 = key.indexOf(input.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    if (resultIndex < totalLength) {\n      output[resultIndex++] = chr1;\n    }\n    if (resultIndex < totalLength) {\n      output[resultIndex++] = chr2;\n    }\n    if (resultIndex < totalLength) {\n      output[resultIndex++] = chr3;\n    }\n  }\n  return isDirect ? output : new Uint8Array(output);\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n  var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var output = '';\n  var currentChar = 0;\n  for (var i = 0; i < bytes.length; i++) {\n    if (i % 3 === 0) {\n      currentChar = bytes[Number.parseInt(i.toString(), 10)] >> 2;\n      output += key[Number.parseInt(currentChar.toString(), 10)];\n      currentChar = bytes[Number.parseInt(i.toString(), 10)] << 4 & 63;\n    } else if (i % 3 === 1) {\n      currentChar += bytes[Number.parseInt(i.toString(), 10)] >> 4;\n      output += key[Number.parseInt(currentChar.toString(), 10)];\n      currentChar = bytes[Number.parseInt(i.toString(), 10)] << 2 & 63;\n    } else if (i % 3 === 2) {\n      currentChar += bytes[Number.parseInt(i.toString(), 10)] >> 6;\n      output += key[Number.parseInt(currentChar.toString(), 10)];\n      currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n      output += key[Number.parseInt(currentChar.toString(), 10)];\n    }\n  }\n  if (bytes.length % 3 === 1) {\n    output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n  }\n  if (bytes.length % 3 === 2) {\n    output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n  }\n  return output;\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n  if (isArray === void 0) {\n    isArray = false;\n  }\n  if (stopWhenFound === void 0) {\n    stopWhenFound = true;\n  }\n  var parentKey = [];\n  for (var _i = 4; _i < arguments.length; _i++) {\n    parentKey[_i - 4] = arguments[_i];\n  }\n  var values; // eslint-disable-line\n  var refSet = new Set(); // eslint-disable-line\n  while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n    if (dictionary.objId) {\n      refSet.add(dictionary.objId);\n    }\n    var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    var index = 0;\n    var hasParent = false;\n    while (index < parentKey.length) {\n      var element = parentKey[index]; // eslint-disable-line\n      if (dictionary.has(element)) {\n        dictionary = dictionary.get(element);\n        hasParent = true;\n        break;\n      }\n      index++;\n    }\n    if (!hasParent) {\n      break;\n    }\n  }\n  return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n  var rectangle = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  var elements = dictionary.getArray('Rect');\n  if (elements && Array.isArray(elements)) {\n    var x1 = elements[0];\n    var y1 = elements[1];\n    var x2 = elements[2];\n    var y2 = elements[3];\n    if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n      rectangle.x = Math.min(x1, x2);\n      rectangle.y = Math.min(y1, y2);\n      rectangle.width = Math.max(x1, x2) - rectangle.x;\n      rectangle.height = Math.max(y1, y2) - rectangle.y;\n      if (isWidget) {\n        rectangle.height = parseFloat(rectangle.height.toFixed(3));\n        if (elements[1] < 0) {\n          rectangle.y = elements[1];\n          if (elements[1] > elements[3]) {\n            rectangle.y -= rectangle.height;\n          }\n        }\n      }\n    }\n  }\n  return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n  var rect;\n  if (dictionary.has('Rect')) {\n    rect = _parseRectangle(dictionary);\n    if (page) {\n      var size = page.size;\n      var mBox = page.mediaBox;\n      var cropBox = page.cropBox;\n      if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n        if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] || size[1] === cropBox[3]) && rect.x !== cropBox[0]) {\n          rect.x -= cropBox[0];\n          rect.y = cropBox[3] - (rect.y + rect.height);\n        } else {\n          rect.y = size[1] - (rect.y + rect.height);\n        }\n      } else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n        if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n          rect.x -= mBox[0];\n          rect.y = mBox[3] - (rect.y + rect.height);\n        } else {\n          rect.y = size[1] - (rect.y + rect.height);\n        }\n      } else {\n        rect.y = size[1] - (rect.y + rect.height);\n      }\n    } else {\n      rect.y = rect.y + rect.height;\n    }\n  }\n  return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n  return {\n    x: Math.min(value[0], value[2]),\n    y: Math.min(value[1], value[3]),\n    width: Math.abs(value[0] - value[2]),\n    height: Math.abs(value[1] - value[3])\n  };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n  return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n  var x = value[0];\n  var y = value[1];\n  var width = value[2];\n  var height = value[3];\n  if (page) {\n    var size = page.size;\n    var pageWidth = size[0];\n    var pageHeight = size[1];\n    var mBox = page.mediaBox;\n    var cropBox = page.cropBox;\n    if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n      if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n        x += cropBox[0];\n        y = cropBox[3] - (y + height);\n      } else {\n        y = pageHeight - (y + height);\n      }\n    } else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n      if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n        x -= mBox[0];\n        y = mBox[3] - (y + height);\n      } else {\n        y = pageHeight - (y + height);\n      }\n    } else {\n      y = pageHeight - (y + height);\n    }\n  }\n  return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n  var color = _getColorValue(colorString);\n  if (!color) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n    if (result) {\n      color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n    }\n  }\n  return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n  var color;\n  if (array) {\n    if (array.length === 1) {\n      var entry = array[0];\n      if (typeof entry !== 'undefined') {\n        var round = Math.round(entry * 255);\n        color = [round, round, round];\n      }\n    } else if (array.length === 3) {\n      var r = array[0];\n      var g = array[1];\n      var b = array[2];\n      if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n        color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n      }\n    } else if (array.length === 4) {\n      var c = array[0];\n      var m = array[1];\n      var y = array[2];\n      var k = array[3];\n      if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n        var fBlack = k * 255;\n        color = [Math.round(255 - Math.min(255, c * (255 - fBlack) + fBlack)), Math.round(255 - Math.min(255, m * (255 - fBlack) + fBlack)), Math.round(255 - Math.min(255, y * (255 - fBlack) + fBlack))];\n      }\n    }\n  }\n  return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n  var token = 'S';\n  switch (style) {\n    case PdfBorderStyle.dot:\n    case PdfBorderStyle.dashed:\n      token = 'D';\n      break;\n    case PdfBorderStyle.beveled:\n      token = 'B';\n      break;\n    case PdfBorderStyle.inset:\n      token = 'I';\n      break;\n    case PdfBorderStyle.underline:\n      token = 'U';\n      break;\n  }\n  return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n  var value = PdfBorderEffectStyle.solid;\n  switch (style) {\n    case 'C':\n      value = PdfBorderEffectStyle.cloudy;\n      break;\n  }\n  return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n  var value = 'None';\n  if (typeof style !== 'undefined') {\n    switch (style) {\n      case PdfLineEndingStyle.openArrow:\n        value = 'OpenArrow';\n        break;\n      case PdfLineEndingStyle.closedArrow:\n        value = 'ClosedArrow';\n        break;\n      case PdfLineEndingStyle.rOpenArrow:\n        value = 'ROpenArrow';\n        break;\n      case PdfLineEndingStyle.rClosedArrow:\n        value = 'RClosedArrow';\n        break;\n      case PdfLineEndingStyle.butt:\n        value = 'Butt';\n        break;\n      case PdfLineEndingStyle.diamond:\n        value = 'Diamond';\n        break;\n      case PdfLineEndingStyle.circle:\n        value = 'Circle';\n        break;\n      case PdfLineEndingStyle.square:\n        value = 'Square';\n        break;\n      case PdfLineEndingStyle.slash:\n        value = 'Slash';\n        break;\n    }\n  }\n  return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n  var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n  switch (style.toLowerCase()) {\n    case 'openarrow':\n      value = PdfLineEndingStyle.openArrow;\n      break;\n    case 'closedarrow':\n      value = PdfLineEndingStyle.closedArrow;\n      break;\n    case 'ropenarrow':\n      value = PdfLineEndingStyle.rOpenArrow;\n      break;\n    case 'rclosedarrow':\n      value = PdfLineEndingStyle.rClosedArrow;\n      break;\n    case 'butt':\n      value = PdfLineEndingStyle.butt;\n      break;\n    case 'diamond':\n      value = PdfLineEndingStyle.diamond;\n      break;\n    case 'circle':\n      value = PdfLineEndingStyle.circle;\n      break;\n    case 'square':\n      value = PdfLineEndingStyle.square;\n      break;\n    case 'slash':\n      value = PdfLineEndingStyle.slash;\n      break;\n  }\n  return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n  switch (mode) {\n    case 'P':\n      return PdfHighlightMode.push;\n    case 'N':\n      return PdfHighlightMode.noHighlighting;\n    case 'O':\n      return PdfHighlightMode.outline;\n    default:\n      return PdfHighlightMode.invert;\n  }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n  switch (mode) {\n    case PdfHighlightMode.push:\n      return _PdfName.get('P');\n    case PdfHighlightMode.noHighlighting:\n      return _PdfName.get('N');\n    case PdfHighlightMode.outline:\n      return _PdfName.get('O');\n    default:\n      return _PdfName.get('I');\n  }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n  var token = 'Normal';\n  switch (mode) {\n    case PdfBlendMode.multiply:\n      token = 'Multiply';\n      break;\n    case PdfBlendMode.screen:\n      token = 'Screen';\n      break;\n    case PdfBlendMode.overlay:\n      token = 'Overlay';\n      break;\n    case PdfBlendMode.darken:\n      token = 'Darken';\n      break;\n    case PdfBlendMode.lighten:\n      token = 'Lighten';\n      break;\n    case PdfBlendMode.colorDodge:\n      token = 'ColorDodge';\n      break;\n    case PdfBlendMode.colorBurn:\n      token = 'ColorBurn';\n      break;\n    case PdfBlendMode.hardLight:\n      token = 'HardLight';\n      break;\n    case PdfBlendMode.softLight:\n      token = 'SoftLight';\n      break;\n    case PdfBlendMode.difference:\n      token = 'Difference';\n      break;\n    case PdfBlendMode.exclusion:\n      token = 'Exclusion';\n      break;\n    case PdfBlendMode.hue:\n      token = 'Hue';\n      break;\n    case PdfBlendMode.saturation:\n      token = 'Saturation';\n      break;\n    case PdfBlendMode.color:\n      token = 'Color';\n      break;\n    case PdfBlendMode.luminosity:\n      token = 'Luminosity';\n      break;\n    default:\n      token = 'Normal';\n      break;\n  }\n  return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n  var style = PdfBlendMode.normal;\n  switch (token.name) {\n    case 'Multiply':\n      style = PdfBlendMode.multiply;\n      break;\n    case 'Screen':\n      style = PdfBlendMode.screen;\n      break;\n    case 'Overlay':\n      style = PdfBlendMode.overlay;\n      break;\n    case 'Darken':\n      style = PdfBlendMode.darken;\n      break;\n    case 'Lighten':\n      style = PdfBlendMode.lighten;\n      break;\n    case 'ColorDodge':\n      style = PdfBlendMode.colorDodge;\n      break;\n    case 'ColorBurn':\n      style = PdfBlendMode.colorBurn;\n      break;\n    case 'HardLight':\n      style = PdfBlendMode.hardLight;\n      break;\n    case 'SoftLight':\n      style = PdfBlendMode.softLight;\n      break;\n    case 'Difference':\n      style = PdfBlendMode.difference;\n      break;\n    case 'Exclusion':\n      style = PdfBlendMode.exclusion;\n      break;\n    case 'Hue':\n      style = PdfBlendMode.hue;\n      break;\n    case 'Saturation':\n      style = PdfBlendMode.saturation;\n      break;\n    case 'Color':\n      style = PdfBlendMode.color;\n      break;\n    case 'Luminosity':\n      style = PdfBlendMode.luminosity;\n      break;\n    default:\n      style = PdfBlendMode.normal;\n      break;\n  }\n  return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n  var returnString = value.toFixed(2);\n  if (returnString === '0.00') {\n    returnString = '.00';\n  }\n  return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n  var name = _PdfName.get(value);\n  if (dictionary.has('ProcSet')) {\n    var procset = dictionary.getArray('ProcSet');\n    if (procset && procset.indexOf(name) === -1) {\n      procset.push(name);\n      dictionary.update('ProcSet', procset);\n    }\n  } else {\n    dictionary.update('ProcSet', [name]);\n  }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n  return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n    var random = Math.random() * 16 | 0;\n    var result = c === 'a' ? random : random & 0x3 | 0x8;\n    return result.toString(16);\n  });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n  var buffer = [];\n  var start = 0;\n  for (var i = 0; i < value.length; i++) {\n    var char = value.charCodeAt(i);\n    if (char < 0x21 || char > 0x7e || char === 0x23 || char === 0x28 || char === 0x29 || char === 0x3c || char === 0x3e || char === 0x5b || char === 0x5d || char === 0x7b || char === 0x7d || char === 0x2f || char === 0x25) {\n      if (start < i) {\n        buffer.push(value.substring(start, i));\n      }\n      buffer.push(\"#\" + char.toString(16));\n      start = i + 1;\n    }\n  }\n  if (buffer.length === 0) {\n    return value;\n  }\n  if (start < value.length) {\n    buffer.push(value.substring(start, value.length));\n  }\n  return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n  if (x1 > x2) {\n    var swap = x1;\n    x1 = x2;\n    x2 = swap;\n  }\n  if (y2 > y1) {\n    var swap = y1;\n    y1 = y2;\n    y2 = swap;\n  }\n  var angle;\n  var count;\n  if (Math.abs(extent) <= 90) {\n    angle = extent;\n    count = 1;\n  } else {\n    count = Math.ceil(Math.abs(extent) / 90);\n    angle = extent / count;\n  }\n  var first = (x1 + x2) / 2;\n  var second = (y1 + y2) / 2;\n  var firstAngle = (x2 - x1) / 2;\n  var secondAngle = (y2 - y1) / 2;\n  var half = angle * (Math.PI / 360);\n  var value = Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half));\n  var points = [];\n  for (var i = 0; i < count; i++) {\n    var zero = (start + i * angle) * (Math.PI / 180);\n    var one = (start + (i + 1) * angle) * (Math.PI / 180);\n    var cosZero = Math.cos(zero);\n    var cosOne = Math.cos(one);\n    var sinZero = Math.sin(zero);\n    var sinOne = Math.sin(one);\n    if (angle > 0) {\n      points.push(first + firstAngle * cosZero);\n      points.push(second - secondAngle * sinZero);\n      points.push(first + firstAngle * (cosZero - value * sinZero));\n      points.push(second - secondAngle * (sinZero + value * cosZero));\n      points.push(first + firstAngle * (cosOne + value * sinOne));\n      points.push(second - secondAngle * (sinOne - value * cosOne));\n      points.push(first + firstAngle * cosOne);\n      points.push(second - secondAngle * sinOne);\n    } else {\n      points.push(first + firstAngle * cosZero);\n      points.push(second - secondAngle * sinZero);\n      points.push(first + firstAngle * (cosZero + value * sinZero));\n      points.push(second - secondAngle * (sinZero - value * cosZero));\n      points.push(first + firstAngle * (cosOne - value * sinOne));\n      points.push(second - secondAngle * (sinOne + value * cosOne));\n      points.push(first + firstAngle * cosOne);\n      points.push(second - secondAngle * sinOne);\n    }\n  }\n  return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n  var page;\n  for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n    var entry = document.getPage(i);\n    if (entry && entry._pageDictionary.has('Annots')) {\n      var annots = entry._pageDictionary.get('Annots');\n      if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n        for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n          var ref = annots[Number.parseInt(j.toString(), 10)];\n          if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n            page = entry;\n          }\n        }\n      }\n    }\n  }\n  return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n  var check = false;\n  if (dictionary.has('AS')) {\n    var state = dictionary.get('AS');\n    if (state) {\n      check = state.name !== 'Off';\n    } else {\n      var actual = dictionary.get('V');\n      if (actual) {\n        check = actual.name === _getItemValue(dictionary);\n      }\n    }\n  }\n  return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n  var itemValue = '';\n  var name;\n  if (itemDictionary.has('AS')) {\n    name = itemDictionary.get('AS');\n    if (name !== null && name.name !== 'Off') {\n      itemValue = name.name;\n    }\n  }\n  if (itemValue === '' && itemDictionary.has('AP')) {\n    var dictionary = itemDictionary.get('AP');\n    if (dictionary && dictionary.has('N')) {\n      var appearance = dictionary.get('N');\n      if (appearance instanceof _PdfBaseStream) {\n        appearance = appearance.dictionary;\n      }\n      if (appearance && appearance instanceof _PdfDictionary) {\n        var keys_1 = [];\n        appearance.forEach(function (key, value) {\n          keys_1.push(key);\n        });\n        for (var i = 0; i < keys_1.length; i++) {\n          if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n            itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n            break;\n          }\n        }\n      }\n    }\n  }\n  return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n  var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n  var template;\n  if (item._dictionary.has('AP')) {\n    var dictionary = item._dictionary.get('AP');\n    if (dictionary && dictionary.has('N')) {\n      var appearance = dictionary.get('N');\n      if (appearance && appearance instanceof _PdfBaseStream) {\n        appearance = appearance.dictionary;\n      }\n      if (appearance && appearance instanceof _PdfDictionary && value && value !== '' && appearance.has(value)) {\n        var stream = appearance.get(value);\n        var reference = appearance.getRaw(value);\n        if (reference) {\n          stream.reference = reference;\n        }\n        if (stream) {\n          template = new PdfTemplate(stream, item._crossReference);\n        }\n      }\n    }\n  }\n  return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n  var color;\n  switch (colorName) {\n    case 'transparent':\n      color = [255, 255, 255];\n      break;\n    case 'aliceblue':\n      color = [240, 248, 255];\n      break;\n    case 'antiquewhite':\n      color = [250, 235, 215];\n      break;\n    case 'aqua':\n      color = [0, 255, 255];\n      break;\n    case 'aquamarine':\n      color = [127, 255, 212];\n      break;\n    case 'azure':\n      color = [240, 255, 255];\n      break;\n    case 'beige':\n      color = [245, 245, 220];\n      break;\n    case 'bisque':\n      color = [255, 228, 196];\n      break;\n    case 'black':\n      color = [0, 0, 0];\n      break;\n    case 'blanchedalmond':\n      color = [255, 235, 205];\n      break;\n    case 'blue':\n      color = [0, 0, 255];\n      break;\n    case 'blueviolet':\n      color = [138, 43, 226];\n      break;\n    case 'brown':\n      color = [165, 42, 42];\n      break;\n    case 'burlywood':\n      color = [222, 184, 135];\n      break;\n    case 'cadetBlue':\n      color = [95, 158, 160];\n      break;\n    case 'chartreuse':\n      color = [127, 255, 0];\n      break;\n    case 'chocolate':\n      color = [210, 105, 30];\n      break;\n    case 'coral':\n      color = [255, 127, 80];\n      break;\n    case 'cornflowerblue':\n      color = [100, 149, 237];\n      break;\n    case 'cornsilk':\n      color = [255, 248, 220];\n      break;\n    case 'crimson':\n      color = [220, 20, 60];\n      break;\n    case 'cyan':\n      color = [0, 255, 255];\n      break;\n    case 'darkblue':\n      color = [0, 0, 139];\n      break;\n    case 'darkcyan':\n      color = [0, 139, 139];\n      break;\n    case 'darkgoldenrod':\n      color = [184, 134, 11];\n      break;\n    case 'darkgray':\n      color = [169, 169, 169];\n      break;\n    case 'darkgreen':\n      color = [0, 100, 0];\n      break;\n    case 'darkkhaki':\n      color = [189, 183, 107];\n      break;\n    case 'darkmagenta':\n      color = [139, 0, 139];\n      break;\n    case 'darkolivegreen':\n      color = [85, 107, 47];\n      break;\n    case 'darkorange':\n      color = [255, 140, 0];\n      break;\n    case 'darkorchid':\n      color = [153, 50, 204];\n      break;\n    case 'darkred':\n      color = [139, 0, 0];\n      break;\n    case 'darksalmon':\n      color = [233, 150, 122];\n      break;\n    case 'darkseagreen':\n      color = [143, 188, 139];\n      break;\n    case 'darkslateblue':\n      color = [72, 61, 139];\n      break;\n    case 'darkslategray':\n      color = [47, 79, 79];\n      break;\n    case 'darkturquoise':\n      color = [0, 206, 209];\n      break;\n    case 'darkviolet':\n      color = [148, 0, 211];\n      break;\n    case 'deeppink':\n      color = [255, 20, 147];\n      break;\n    case 'deepskyblue':\n      color = [0, 191, 255];\n      break;\n    case 'dimgray':\n      color = [105, 105, 105];\n      break;\n    case 'dodgerblue':\n      color = [30, 144, 255];\n      break;\n    case 'firebrick':\n      color = [178, 34, 34];\n      break;\n    case 'floralwhite':\n      color = [255, 250, 240];\n      break;\n    case 'forestgreen':\n      color = [34, 139, 34];\n      break;\n    case 'fuchsia':\n      color = [255, 0, 255];\n      break;\n    case 'gainsboro':\n      color = [220, 220, 220];\n      break;\n    case 'ghostwhite':\n      color = [248, 248, 255];\n      break;\n    case 'gold':\n      color = [255, 215, 0];\n      break;\n    case 'goldenrod':\n      color = [218, 165, 32];\n      break;\n    case 'gray':\n      color = [128, 128, 128];\n      break;\n    case 'green':\n      color = [0, 128, 0];\n      break;\n    case 'greenyellow':\n      color = [173, 255, 47];\n      break;\n    case 'honeydew':\n      color = [240, 255, 240];\n      break;\n    case 'hotpink':\n      color = [255, 105, 180];\n      break;\n    case 'indianred':\n      color = [205, 92, 92];\n      break;\n    case 'indigo':\n      color = [75, 0, 130];\n      break;\n    case 'ivory':\n      color = [255, 255, 240];\n      break;\n    case 'khaki':\n      color = [240, 230, 140];\n      break;\n    case 'lavender':\n      color = [230, 230, 250];\n      break;\n    case 'lavenderblush':\n      color = [255, 240, 245];\n      break;\n    case 'lawngreen':\n      color = [124, 252, 0];\n      break;\n    case 'lemonchiffon':\n      color = [255, 250, 205];\n      break;\n    case 'lightblue':\n      color = [173, 216, 230];\n      break;\n    case 'lightcoral':\n      color = [240, 128, 128];\n      break;\n    case 'lightcyan':\n      color = [224, 255, 255];\n      break;\n    case 'lightgoldenrodyellow':\n      color = [250, 250, 210];\n      break;\n    case 'lightgreen':\n      color = [144, 238, 144];\n      break;\n    case 'lightgray':\n      color = [211, 211, 211];\n      break;\n    case 'LightPink':\n      color = [255, 182, 193];\n      break;\n    case 'lightsalmon':\n      color = [255, 160, 122];\n      break;\n    case 'lightseagreen':\n      color = [32, 178, 170];\n      break;\n    case 'lightskyblue':\n      color = [135, 206, 250];\n      break;\n    case 'lightslategray':\n      color = [119, 136, 153];\n      break;\n    case 'lightsteelblue':\n      color = [176, 196, 222];\n      break;\n    case 'lightyellow':\n      color = [255, 255, 224];\n      break;\n    case 'lime':\n      color = [0, 255, 0];\n      break;\n    case 'limeGreen':\n      color = [50, 205, 50];\n      break;\n    case 'linen':\n      color = [250, 240, 230];\n      break;\n    case 'magenta':\n      color = [255, 0, 255];\n      break;\n    case 'maroon':\n      color = [128, 0, 0];\n      break;\n    case 'mediumaquamarine':\n      color = [102, 205, 170];\n      break;\n    case 'mediumblue':\n      color = [0, 0, 205];\n      break;\n    case 'mediumorchid':\n      color = [186, 85, 211];\n      break;\n    case 'mediumpurple':\n      color = [147, 112, 219];\n      break;\n    case 'mediumseagreen':\n      color = [60, 179, 113];\n      break;\n    case 'mediumslateblue':\n      color = [123, 104, 238];\n      break;\n    case 'mediumspringgreen':\n      color = [0, 250, 154];\n      break;\n    case 'mediumturquoise':\n      color = [72, 209, 204];\n      break;\n    case 'mediumvioletred':\n      color = [199, 21, 133];\n      break;\n    case 'midnightblue':\n      color = [25, 25, 112];\n      break;\n    case 'mintcream':\n      color = [245, 255, 250];\n      break;\n    case 'mistyrose':\n      color = [255, 228, 225];\n      break;\n    case 'moccasin':\n      color = [255, 228, 181];\n      break;\n    case 'navajowhite':\n      color = [255, 222, 173];\n      break;\n    case 'navy':\n      color = [0, 0, 128];\n      break;\n    case 'oldLace':\n      color = [253, 245, 230];\n      break;\n    case 'olive':\n      color = [128, 128, 0];\n      break;\n    case 'olivedrab':\n      color = [107, 142, 35];\n      break;\n    case 'orange':\n      color = [255, 165, 0];\n      break;\n    case 'orangered':\n      color = [255, 69, 0];\n      break;\n    case 'orchid':\n      color = [218, 112, 214];\n      break;\n    case 'palegoldenrod':\n      color = [238, 232, 170];\n      break;\n    case 'palegreen':\n      color = [152, 251, 152];\n      break;\n    case 'paleturquoise':\n      color = [175, 238, 238];\n      break;\n    case 'palebioletred':\n      color = [219, 112, 147];\n      break;\n    case 'papayawhip':\n      color = [255, 239, 213];\n      break;\n    case 'peachpuff':\n      color = [255, 218, 185];\n      break;\n    case 'peru':\n      color = [205, 133, 63];\n      break;\n    case 'pink':\n      color = [255, 192, 203];\n      break;\n    case 'plum':\n      color = [221, 160, 221];\n      break;\n    case 'powderblue':\n      color = [176, 224, 230];\n      break;\n    case 'purple':\n      color = [128, 0, 128];\n      break;\n    case 'red':\n      color = [255, 0, 0];\n      break;\n    case 'rosybrown':\n      color = [188, 143, 143];\n      break;\n    case 'royalblue':\n      color = [65, 105, 225];\n      break;\n    case 'saddlebrown':\n      color = [139, 69, 19];\n      break;\n    case 'salmon':\n      color = [250, 128, 114];\n      break;\n    case 'sandybrown':\n      color = [244, 164, 96];\n      break;\n    case 'seagreen':\n      color = [46, 139, 87];\n      break;\n    case 'seashell':\n      color = [255, 245, 238];\n      break;\n    case 'sienna':\n      color = [160, 82, 45];\n      break;\n    case 'silver':\n      color = [192, 192, 192];\n      break;\n    case 'skyblue':\n      color = [135, 206, 235];\n      break;\n    case 'slateblue':\n      color = [106, 90, 205];\n      break;\n    case 'slategray':\n      color = [112, 128, 144];\n      break;\n    case 'snow':\n      color = [255, 250, 250];\n      break;\n    case 'springgreen':\n      color = [0, 255, 127];\n      break;\n    case 'steelblue':\n      color = [70, 130, 180];\n      break;\n    case 'tan':\n      color = [210, 180, 140];\n      break;\n    case 'teal':\n      color = [0, 128, 128];\n      break;\n    case 'thistle':\n      color = [216, 191, 216];\n      break;\n    case 'tomato':\n      color = [255, 99, 71];\n      break;\n    case 'turquoise':\n      color = [64, 224, 208];\n      break;\n    case 'violet':\n      color = [238, 130, 238];\n      break;\n    case 'wheat':\n      color = [245, 222, 179];\n      break;\n    case 'white':\n      color = [255, 255, 255];\n      break;\n    case 'whitesmoke':\n      color = [245, 245, 245];\n      break;\n    case 'yellow':\n      color = [255, 255, 0];\n      break;\n    case 'yellowgreen':\n      color = [154, 205, 50];\n      break;\n  }\n  return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n  var box = template._content.dictionary.getArray('BBox');\n  if (box && typeof angle !== 'undefined' && angle !== null) {\n    if (angle === 0) {\n      template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n    } else {\n      var matrix = new _PdfTransformationMatrix();\n      matrix._rotate(angle);\n      template._content.dictionary.set('Matrix', matrix._matrix._elements);\n    }\n  }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n  var value = '4';\n  switch (style) {\n    case PdfCheckBoxStyle.circle:\n      value = 'l';\n      break;\n    case PdfCheckBoxStyle.cross:\n      value = '8';\n      break;\n    case PdfCheckBoxStyle.diamond:\n      value = 'u';\n      break;\n    case PdfCheckBoxStyle.square:\n      value = 'n';\n      break;\n    case PdfCheckBoxStyle.star:\n      value = 'H';\n      break;\n  }\n  return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n  var value = PdfCheckBoxStyle.check;\n  switch (style) {\n    case 'l':\n      value = PdfCheckBoxStyle.circle;\n      break;\n    case '8':\n      value = PdfCheckBoxStyle.cross;\n      break;\n    case 'u':\n      value = PdfCheckBoxStyle.diamond;\n      break;\n    case 'n':\n      value = PdfCheckBoxStyle.square;\n      break;\n    case 'H':\n      value = PdfCheckBoxStyle.star;\n      break;\n  }\n  return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n  var unit;\n  switch (unitString) {\n    case 'cm':\n      unit = PdfMeasurementUnit.centimeter;\n      break;\n    case 'in':\n      unit = PdfMeasurementUnit.inch;\n      break;\n    case 'mm':\n      unit = PdfMeasurementUnit.millimeter;\n      break;\n    case 'p':\n      unit = PdfMeasurementUnit.pica;\n      break;\n    case 'pt':\n      unit = PdfMeasurementUnit.point;\n      break;\n    default:\n      unit = PdfMeasurementUnit.centimeter;\n      break;\n  }\n  return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n  var type;\n  switch (text) {\n    case 'Highlight':\n      type = PdfTextMarkupAnnotationType.highlight;\n      break;\n    case 'Squiggly':\n      type = PdfTextMarkupAnnotationType.squiggly;\n      break;\n    case 'StrikeOut':\n      type = PdfTextMarkupAnnotationType.strikeOut;\n      break;\n    case 'Underline':\n      type = PdfTextMarkupAnnotationType.underline;\n      break;\n    default:\n      type = PdfTextMarkupAnnotationType.highlight;\n      break;\n  }\n  return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n  var token = 'Highlight';\n  switch (type) {\n    case PdfTextMarkupAnnotationType.highlight:\n      token = 'Highlight';\n      break;\n    case PdfTextMarkupAnnotationType.squiggly:\n      token = 'Squiggly';\n      break;\n    case PdfTextMarkupAnnotationType.strikeOut:\n      token = 'StrikeOut';\n      break;\n    case PdfTextMarkupAnnotationType.underline:\n      token = 'Underline';\n      break;\n    default:\n      token = 'Highlight';\n      break;\n  }\n  return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n  var unit;\n  switch (unitString) {\n    case 'cm':\n      unit = _PdfGraphicsUnit.centimeter;\n      break;\n    case 'in':\n      unit = _PdfGraphicsUnit.inch;\n      break;\n    case 'mm':\n      unit = _PdfGraphicsUnit.millimeter;\n      break;\n    case 'p':\n      unit = _PdfGraphicsUnit.pica;\n      break;\n    case 'pt':\n      unit = _PdfGraphicsUnit.point;\n      break;\n    default:\n      unit = _PdfGraphicsUnit.centimeter;\n      break;\n  }\n  return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n  var icon;\n  switch (iconString) {\n    case '#Approved':\n      icon = PdfRubberStampAnnotationIcon.approved;\n      break;\n    case '#AsIs':\n      icon = PdfRubberStampAnnotationIcon.asIs;\n      break;\n    case '#Completed':\n      icon = PdfRubberStampAnnotationIcon.completed;\n      break;\n    case '#Confidential':\n      icon = PdfRubberStampAnnotationIcon.confidential;\n      break;\n    case '#Departmental':\n      icon = PdfRubberStampAnnotationIcon.departmental;\n      break;\n    case '#Draft':\n      icon = PdfRubberStampAnnotationIcon.draft;\n      break;\n    case '#Experimental':\n      icon = PdfRubberStampAnnotationIcon.experimental;\n      break;\n    case '#Expired':\n      icon = PdfRubberStampAnnotationIcon.expired;\n      break;\n    case '#Final':\n      icon = PdfRubberStampAnnotationIcon.final;\n      break;\n    case '#ForComment':\n      icon = PdfRubberStampAnnotationIcon.forComment;\n      break;\n    case '#ForPublicRelease':\n      icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n      break;\n    case '#InformationOnly':\n      icon = PdfRubberStampAnnotationIcon.informationOnly;\n      break;\n    case '#NotApproved':\n      icon = PdfRubberStampAnnotationIcon.notApproved;\n      break;\n    case '#NotForPublicRelease':\n      icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n      break;\n    case '#PreliminaryResults':\n      icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n      break;\n    case '#Sold':\n      icon = PdfRubberStampAnnotationIcon.sold;\n      break;\n    case '#TopSecret':\n      icon = PdfRubberStampAnnotationIcon.topSecret;\n      break;\n    case '#Void':\n      icon = PdfRubberStampAnnotationIcon.void;\n      break;\n    default:\n      icon = PdfRubberStampAnnotationIcon.draft;\n      break;\n  }\n  return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n  var icon;\n  switch (iconString) {\n    case 'Note':\n      icon = PdfPopupIcon.note;\n      break;\n    case 'Comment':\n      icon = PdfPopupIcon.comment;\n      break;\n    case 'Help':\n      icon = PdfPopupIcon.help;\n      break;\n    case 'Insert':\n      icon = PdfPopupIcon.insert;\n      break;\n    case 'Key':\n      icon = PdfPopupIcon.key;\n      break;\n    case 'NewParagraph':\n      icon = PdfPopupIcon.newParagraph;\n      break;\n    case 'Paragraph':\n      icon = PdfPopupIcon.paragraph;\n      break;\n    default:\n      icon = PdfPopupIcon.note;\n      break;\n  }\n  return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n  var token = 'None';\n  switch (type) {\n    case PdfAnnotationState.none:\n      token = 'None';\n      break;\n    case PdfAnnotationState.accepted:\n      token = 'Accepted';\n      break;\n    case PdfAnnotationState.rejected:\n      token = 'Rejected';\n      break;\n    case PdfAnnotationState.cancel:\n      token = 'Cancelled';\n      break;\n    case PdfAnnotationState.completed:\n      token = 'Completed';\n      break;\n    case PdfAnnotationState.marked:\n      token = 'Marked';\n      break;\n    case PdfAnnotationState.unmarked:\n      token = 'Unmarked';\n      break;\n    case PdfAnnotationState.unknown:\n      token = 'Unknown';\n      break;\n    default:\n      token = 'None';\n      break;\n  }\n  return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n  var token = PdfAnnotationState.none;\n  switch (type) {\n    case 'None':\n      token = PdfAnnotationState.none;\n      break;\n    case 'Accepted':\n      token = PdfAnnotationState.accepted;\n      break;\n    case 'Rejected':\n      token = PdfAnnotationState.rejected;\n      break;\n    case 'Cancelled':\n      token = PdfAnnotationState.cancel;\n      break;\n    case 'Completed':\n      token = PdfAnnotationState.completed;\n      break;\n    case 'Marked':\n      token = PdfAnnotationState.marked;\n      break;\n    case 'Unmarked':\n      token = PdfAnnotationState.unmarked;\n      break;\n    case 'Unknown':\n      token = PdfAnnotationState.unknown;\n      break;\n  }\n  return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n  var token = 'None';\n  switch (type) {\n    case PdfAnnotationStateModel.none:\n      token = 'None';\n      break;\n    case PdfAnnotationStateModel.marked:\n      token = 'Marked';\n      break;\n    case PdfAnnotationStateModel.review:\n      token = 'Review';\n      break;\n    default:\n      token = 'None';\n      break;\n  }\n  return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n  var token = PdfAnnotationStateModel.none;\n  switch (type) {\n    case 'None':\n      token = PdfAnnotationStateModel.none;\n      break;\n    case 'Marked':\n      token = PdfAnnotationStateModel.marked;\n      break;\n    case 'Review':\n      token = PdfAnnotationStateModel.review;\n      break;\n  }\n  return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n  var icon;\n  switch (iconString) {\n    case 'PushPin':\n      icon = PdfAttachmentIcon.pushPin;\n      break;\n    case 'Tag':\n      icon = PdfAttachmentIcon.tag;\n      break;\n    case 'Graph':\n      icon = PdfAttachmentIcon.graph;\n      break;\n    case 'Paperclip':\n      icon = PdfAttachmentIcon.paperClip;\n      break;\n    default:\n      icon = PdfAttachmentIcon.pushPin;\n      break;\n  }\n  return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n  var intent;\n  switch (intentString) {\n    case 'None':\n      intent = PdfAnnotationIntent.none;\n      break;\n    case 'FreeTextCallout':\n      intent = PdfAnnotationIntent.freeTextCallout;\n      break;\n    case 'FreeTextTypeWriter':\n      intent = PdfAnnotationIntent.freeTextTypeWriter;\n      break;\n    default:\n      intent = PdfAnnotationIntent.none;\n      break;\n  }\n  return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n  var value = '';\n  switch (style) {\n    case PdfFontStyle.regular:\n      value = 'Regular';\n      break;\n    case PdfFontStyle.bold:\n      value = 'Bold';\n      break;\n    case PdfFontStyle.italic:\n      value = 'Italic';\n      break;\n    case PdfFontStyle.underline:\n      value = 'Underline';\n      break;\n    case PdfFontStyle.strikeout:\n      value = 'Strikeout';\n      break;\n    default:\n      value = 'Regular';\n      break;\n  }\n  return value;\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n  var result;\n  switch (input) {\n    case 'head2right':\n      result = '\\u27A2';\n      break;\n    case 'aacute':\n      result = 'a\\u0301';\n      break;\n    case 'eacute':\n      result = 'e\\u0301';\n      break;\n    case 'iacute':\n      result = 'i\\u0301';\n      break;\n    case 'oacute':\n      result = 'o\\u0301';\n      break;\n    case 'uacute':\n      result = 'u\\u0301';\n      break;\n    case 'circleright':\n      result = '\\u27B2';\n      break;\n    case 'bleft':\n      result = '\\u21E6';\n      break;\n    case 'bright':\n      result = '\\u21E8';\n      break;\n    case 'bup':\n      result = '\\u21E7';\n      break;\n    case 'bdown':\n      result = '\\u21E9';\n      break;\n    case 'barb4right':\n      result = '\\u2794';\n      break;\n    case 'bleftright':\n      result = '\\u2B04';\n      break;\n    case 'bupdown':\n      result = '\\u21F3';\n      break;\n    case 'bnw':\n      result = '\\u2B00';\n      break;\n    case 'bne':\n      result = '\\u2B01';\n      break;\n    case 'bsw':\n      result = '\\u2B03';\n      break;\n    case 'bse':\n      result = '\\u2B02';\n      break;\n    case 'bdash1':\n      result = '\\u25AD';\n      break;\n    case 'bdash2':\n      result = '\\u25AB';\n      break;\n    case 'xmarkbld':\n      result = '\\u2717';\n      break;\n    case 'checkbld':\n      result = '\\u2713';\n      break;\n    case 'boxxmarkbld':\n      result = '\\u2612';\n      break;\n    case 'boxcheckbld':\n      result = '\\u2611';\n      break;\n    case 'space':\n      result = '\\u0020';\n      break;\n    case 'pencil':\n      result = '\\u270F';\n      break;\n    case 'scissors':\n      result = '\\u2702';\n      break;\n    case 'scissorscutting':\n      result = '\\u2701';\n      break;\n    case 'readingglasses':\n      result = '\\u2701';\n      break;\n    case 'bell':\n      result = '\\u2701';\n      break;\n    case 'book':\n      result = '\\u2701';\n      break;\n    case 'telephonesolid':\n      result = '\\u2701';\n      break;\n    case 'telhandsetcirc':\n      result = '\\u2701';\n      break;\n    case 'envelopeback':\n      result = '\\u2701';\n      break;\n    case 'hourglass':\n      result = '\\u231B';\n      break;\n    case 'keyboard':\n      result = '\\u2328';\n      break;\n    case 'tapereel':\n      result = '\\u2707';\n      break;\n    case 'handwrite':\n      result = '\\u270D';\n      break;\n    case 'handv':\n      result = '\\u270C';\n      break;\n    case 'handptleft':\n      result = '\\u261C';\n      break;\n    case 'handptright':\n      result = '\\u261E';\n      break;\n    case 'handptup':\n      result = '\\u261D';\n      break;\n    case 'handptdown':\n      result = '\\u261F';\n      break;\n    case 'smileface':\n      result = '\\u263A';\n      break;\n    case 'frownface':\n      result = '\\u2639';\n      break;\n    case 'skullcrossbones':\n      result = '\\u2620';\n      break;\n    case 'flag':\n      result = '\\u2690';\n      break;\n    case 'pennant':\n      result = '\\u1F6A9';\n      break;\n    case 'airplane':\n      result = '\\u2708';\n      break;\n    case 'sunshine':\n      result = '\\u263C';\n      break;\n    case 'droplet':\n      result = '\\u1F4A7';\n      break;\n    case 'snowflake':\n      result = '\\u2744';\n      break;\n    case 'crossshadow':\n      result = '\\u271E';\n      break;\n    case 'crossmaltese':\n      result = '\\u2720';\n      break;\n    case 'starofdavid':\n      result = '\\u2721';\n      break;\n    case 'crescentstar':\n      result = '\\u262A';\n      break;\n    case 'yinyang':\n      result = '\\u262F';\n      break;\n    case 'om':\n      result = '\\u0950';\n      break;\n    case 'wheel':\n      result = '\\u2638';\n      break;\n    case 'aries':\n      result = '\\u2648';\n      break;\n    case 'taurus':\n      result = '\\u2649';\n      break;\n    case 'gemini':\n      result = '\\u264A';\n      break;\n    case 'cancer':\n      result = '\\u264B';\n      break;\n    case 'leo':\n      result = '\\u264C';\n      break;\n    case 'virgo':\n      result = '\\u264D';\n      break;\n    case 'libra':\n      result = '\\u264E';\n      break;\n    case 'scorpio':\n      result = '\\u264F';\n      break;\n    case 'saggitarius':\n      result = '\\u2650';\n      break;\n    case 'capricorn':\n      result = '\\u2651';\n      break;\n    case 'aquarius':\n      result = '\\u2652';\n      break;\n    case 'pisces':\n      result = '\\u2653';\n      break;\n    case 'ampersanditlc':\n      result = '\\u0026';\n      break;\n    case 'ampersandit':\n      result = '\\u0026';\n      break;\n    case 'circle6':\n      result = '\\u25CF';\n      break;\n    case 'circleshadowdwn':\n      result = '\\u274D';\n      break;\n    case 'square6':\n      result = '\\u25A0';\n      break;\n    case 'box3':\n      result = '\\u25A1';\n      break;\n    case 'boxshadowdwn':\n      result = '\\u2751';\n      break;\n    case 'boxshadowup':\n      result = '\\u2752';\n      break;\n    case 'lozenge4':\n      result = '\\u2B27';\n      break;\n    case 'lozenge6':\n      result = '\\u29EB';\n      break;\n    case 'rhombus6':\n      result = '\\u25C6';\n      break;\n    case 'xrhombus':\n      result = '\\u2756';\n      break;\n    case 'rhombus4':\n      result = '\\u2B25';\n      break;\n    case 'clear':\n      result = '\\u2327';\n      break;\n    case 'escape':\n      result = '\\u2353';\n      break;\n    case 'command':\n      result = '\\u2318';\n      break;\n    case 'rosette':\n      result = '\\u2740';\n      break;\n    case 'rosettesolid':\n      result = '\\u273F';\n      break;\n    case 'quotedbllftbld':\n      result = '\\u275D';\n      break;\n    case 'quotedblrtbld':\n      result = '\\u275E';\n      break;\n    case '.notdef':\n      result = '\\u25AF';\n      break;\n    case 'zerosans':\n      result = '\\u24EA';\n      break;\n    case 'onesans':\n      result = '\\u2460';\n      break;\n    case 'twosans':\n      result = '\\u2461';\n      break;\n    case 'threesans':\n      result = '\\u2462';\n      break;\n    case 'foursans':\n      result = '\\u2463';\n      break;\n    case 'fivesans':\n      result = '\\u2464';\n      break;\n    case 'sixsans':\n      result = '\\u2465';\n      break;\n    case 'sevensans':\n      result = '\\u2466';\n      break;\n    case 'eightsans':\n      result = '\\u2467';\n      break;\n    case 'ninesans':\n      result = '\\u2468';\n      break;\n    case 'tensans':\n      result = '\\u2469';\n      break;\n    case 'zerosansinv':\n      result = '\\u24FF';\n      break;\n    case 'onesansinv':\n      result = '\\u2776';\n      break;\n    case 'twosansinv':\n      result = '\\u2777';\n      break;\n    case 'threesansinv':\n      result = '\\u2778';\n      break;\n    case 'foursansinv':\n      result = '\\u2779';\n      break;\n    case 'circle2':\n      result = '\\u00B7';\n      break;\n    case 'circle4':\n      result = '\\u2022';\n      break;\n    case 'square2':\n      result = '\\u25AA';\n      break;\n    case 'ring2':\n      result = '\\u25CB';\n      break;\n    case 'ringbutton2':\n      result = '\\u25C9';\n      break;\n    case 'target':\n      result = '\\u25CE';\n      break;\n    case 'square4':\n      result = '\\u25AA';\n      break;\n    case 'box2':\n      result = '\\u25FB';\n      break;\n    case 'crosstar2':\n      result = '\\u2726';\n      break;\n    case 'pentastar2':\n      result = '\\u2605';\n      break;\n    case 'hexstar2':\n      result = '\\u2736';\n      break;\n    case 'octastar2':\n      result = '\\u2734';\n      break;\n    case 'dodecastar3':\n      result = '\\u2739';\n      break;\n    case 'octastar4':\n      result = '\\u2735';\n      break;\n    case 'registercircle':\n      result = '\\u2316';\n      break;\n    case 'cuspopen':\n      result = '\\u27E1';\n      break;\n    case 'cuspopen1':\n      result = '\\u2311';\n      break;\n    case 'circlestar':\n      result = '\\u2605';\n      break;\n    case 'starshadow':\n      result = '\\u2730';\n      break;\n    case 'deleteleft':\n      result = '\\u232B';\n      break;\n    case 'deleteright':\n      result = '\\u2326';\n      break;\n    case 'scissorsoutline':\n      result = '\\u2704';\n      break;\n    case 'telephone':\n      result = '\\u260F';\n      break;\n    case 'telhandset':\n      result = '\\u1F4DE';\n      break;\n    case 'handptlft1':\n      result = '\\u261C';\n      break;\n    case 'handptrt1':\n      result = '\\u261E';\n      break;\n    case 'handptlftsld1':\n      result = '\\u261A';\n      break;\n    case 'handptrtsld1':\n      result = '\\u261B';\n      break;\n    case 'handptup1':\n      result = '\\u261D';\n      break;\n    case 'handptdwn1':\n      result = '\\u261F';\n      break;\n    case 'xmark':\n      result = '\\u2717';\n      break;\n    case 'check':\n      result = '\\u2713';\n      break;\n    case 'boxcheck':\n      result = '\\u2611';\n      break;\n    case 'boxx':\n      result = '\\u2612';\n      break;\n    case 'boxxbld':\n      result = '\\u2612';\n      break;\n    case 'circlex':\n      result = '=\\u2314';\n      break;\n    case 'circlexbld':\n      result = '\\u2314';\n      break;\n    case 'prohibit':\n    case 'prohibitbld':\n      result = '\\u29B8';\n      break;\n    case 'ampersanditaldm':\n    case 'ampersandbld':\n    case 'ampersandsans':\n    case 'ampersandsandm':\n      result = '\\u0026';\n      break;\n    case 'interrobang':\n    case 'interrobangdm':\n    case 'interrobangsans':\n    case 'interrobngsandm':\n      result = '\\u203D';\n      break;\n    case 'sacute':\n      result = 'ś';\n      break;\n    case 'Sacute':\n      result = 'Ś';\n      break;\n    case 'eogonek':\n      result = 'ę';\n      break;\n    case 'cacute':\n      result = 'ć';\n      break;\n    case 'aogonek':\n      result = 'ą';\n      break;\n    default:\n      result = input;\n      break;\n  }\n  return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n  var result;\n  switch (input) {\n    case 'zero':\n      result = '0';\n      break;\n    case 'one':\n      result = '1';\n      break;\n    case 'two':\n      result = '2';\n      break;\n    case 'three':\n      result = '3';\n      break;\n    case 'four':\n      result = '4';\n      break;\n    case 'five':\n      result = '5';\n      break;\n    case 'six':\n      result = '6';\n      break;\n    case 'seven':\n      result = '7';\n      break;\n    case 'eight':\n      result = '8';\n      break;\n    case 'nine':\n      result = '9';\n      break;\n    case 'aacute':\n      result = 'á';\n      break;\n    case 'asciicircum':\n      result = '^';\n      break;\n    case 'asciitilde':\n      result = '~';\n      break;\n    case 'asterisk':\n      result = '*';\n      break;\n    case 'at':\n      result = '@';\n      break;\n    case 'atilde':\n      result = 'ã';\n      break;\n    case 'backslash':\n      result = '\\\\';\n      break;\n    case 'bar':\n      result = '|';\n      break;\n    case 'braceleft':\n      result = '{';\n      break;\n    case 'braceright':\n      result = '}';\n      break;\n    case 'bracketleft':\n      result = '[';\n      break;\n    case 'bracketright':\n      result = ']';\n      break;\n    case 'breve':\n      result = '˘';\n      break;\n    case 'brokenbar':\n      result = '|';\n      break;\n    case 'bullet3':\n      result = '•';\n      break;\n    case 'bullet':\n      result = '•';\n      break;\n    case 'caron':\n      result = 'ˇ';\n      break;\n    case 'ccedilla':\n      result = 'ç';\n      break;\n    case 'cedilla':\n      result = '¸';\n      break;\n    case 'cent':\n      result = '¢';\n      break;\n    case 'circumflex':\n      result = 'ˆ';\n      break;\n    case 'colon':\n      result = ':';\n      break;\n    case 'comma':\n      result = ',';\n      break;\n    case 'copyright':\n      result = '©';\n      break;\n    case 'currency1':\n      result = '¤';\n      break;\n    case 'dagger':\n      result = '†';\n      break;\n    case 'daggerdbl':\n      result = '‡';\n      break;\n    case 'degree':\n      result = '°';\n      break;\n    case 'dieresis':\n      result = '¨';\n      break;\n    case 'divide':\n      result = '÷';\n      break;\n    case 'dollar':\n      result = '$';\n      break;\n    case 'dotaccent':\n      result = '˙';\n      break;\n    case 'dotlessi':\n      result = 'ı';\n      break;\n    case 'eacute':\n      result = 'é';\n      break;\n    case 'middot':\n      result = '˙';\n      break;\n    case 'edieresis':\n      result = 'ë';\n      break;\n    case 'egrave':\n      result = 'è';\n      break;\n    case 'ellipsis':\n      result = '...';\n      break;\n    case 'emdash':\n      result = '—';\n      break;\n    case 'endash':\n      result = '–';\n      break;\n    case 'equal':\n      result = '=';\n      break;\n    case 'eth':\n      result = 'ð';\n      break;\n    case 'exclam':\n      result = '!';\n      break;\n    case 'exclamdown':\n      result = '¡';\n      break;\n    case 'florin':\n      result = 'ƒ';\n      break;\n    case 'fraction':\n      result = '⁄';\n      break;\n    case 'germandbls':\n      result = 'ß';\n      break;\n    case 'grave':\n      result = '`';\n      break;\n    case 'greater':\n      result = '>';\n      break;\n    case 'guillemotleft4':\n      result = '«';\n      break;\n    case 'guillemotright4':\n      result = '»';\n      break;\n    case 'guilsinglleft':\n      result = '‹';\n      break;\n    case 'guilsinglright':\n      result = '›';\n      break;\n    case 'hungarumlaut':\n      result = '˝';\n      break;\n    case 'hyphen5':\n      result = '-';\n      break;\n    case 'iacute':\n      result = 'í';\n      break;\n    case 'icircumflex':\n      result = 'î';\n      break;\n    case 'idieresis':\n      result = 'ï';\n      break;\n    case 'igrave':\n      result = 'ì';\n      break;\n    case 'less':\n      result = '<';\n      break;\n    case 'logicalnot':\n      result = '¬';\n      break;\n    case 'lslash':\n      result = 'ł';\n      break;\n    case 'Lslash':\n      result = 'Ł';\n      break;\n    case 'macron':\n      result = '¯';\n      break;\n    case 'minus':\n      result = '−';\n      break;\n    case 'mu':\n      result = 'μ';\n      break;\n    case 'multiply':\n      result = '×';\n      break;\n    case 'ntilde':\n      result = 'ñ';\n      break;\n    case 'numbersign':\n      result = '#';\n      break;\n    case 'oacute':\n      result = 'ó';\n      break;\n    case 'ocircumflex':\n      result = 'ô';\n      break;\n    case 'odieresis':\n      result = 'ö';\n      break;\n    case 'oe':\n      result = 'oe';\n      break;\n    case 'ogonek':\n      result = '˛';\n      break;\n    case 'ograve':\n      result = 'ò';\n      break;\n    case 'onehalf':\n      result = '1/2';\n      break;\n    case 'onequarter':\n      result = '1/4';\n      break;\n    case 'onesuperior':\n      result = '¹';\n      break;\n    case 'ordfeminine':\n      result = 'ª';\n      break;\n    case 'ordmasculine':\n      result = 'º';\n      break;\n    case 'otilde':\n      result = 'õ';\n      break;\n    case 'paragraph':\n      result = '¶';\n      break;\n    case 'parenleft':\n      result = '(';\n      break;\n    case 'parenright':\n      result = ')';\n      break;\n    case 'percent':\n      result = '%';\n      break;\n    case 'period':\n      result = '.';\n      break;\n    case 'periodcentered':\n      result = '·';\n      break;\n    case 'perthousand':\n      result = '‰';\n      break;\n    case 'plus':\n      result = '+';\n      break;\n    case 'plusminus':\n      result = '±';\n      break;\n    case 'question':\n      result = '?';\n      break;\n    case 'questiondown':\n      result = '¿';\n      break;\n    case 'quotedbl':\n      result = '\\'';\n      break;\n    case 'quotedblbase':\n      result = '„';\n      break;\n    case 'quotedblleft':\n      result = '“';\n      break;\n    case 'quotedblright':\n      result = '”';\n      break;\n    case 'quoteleft':\n      result = '‘';\n      break;\n    case 'quoteright':\n      result = '’';\n      break;\n    case 'quotesinglbase':\n      result = '‚';\n      break;\n    case 'quotesingle':\n      result = '\\'';\n      break;\n    case 'registered':\n      result = '®';\n      break;\n    case 'ring':\n      result = '˚';\n      break;\n    case 'scaron':\n      result = 'š';\n      break;\n    case 'section':\n      result = '§';\n      break;\n    case 'semicolon':\n      result = ';';\n      break;\n    case 'slash':\n      result = '/';\n      break;\n    case 'space6':\n      result = ' ';\n      break;\n    case 'space':\n      result = ' ';\n      break;\n    case 'udieresis':\n      result = 'ü';\n      break;\n    case 'uacute':\n      result = 'ú';\n      break;\n    case 'Ecircumflex':\n      result = 'Ê';\n      break;\n    case 'hyphen':\n      result = '-';\n      break;\n    case 'underscore':\n      result = '_';\n      break;\n    case 'adieresis':\n      result = 'ä';\n      break;\n    case 'ampersand':\n      result = '&';\n      break;\n    case 'Adieresis':\n      result = 'Ä';\n      break;\n    case 'Udieresis':\n      result = 'Ü';\n      break;\n    case 'ccaron':\n      result = 'č';\n      break;\n    case 'Scaron':\n      result = 'Š';\n      break;\n    case 'zcaron':\n      result = 'ž';\n      break;\n    case 'sterling':\n      result = '£';\n      break;\n    case 'agrave':\n      result = 'à';\n      break;\n    case 'ecircumflex':\n      result = 'ê';\n      break;\n    case 'acircumflex':\n      result = 'â';\n      break;\n    case 'Oacute':\n      result = 'Ó';\n      break;\n    default:\n      result = input;\n      break;\n  }\n  return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n  var name = '';\n  for (var i = 0; i < value.length; i++) {\n    var code = value.charCodeAt(i) & 0xff;\n    var entry = String.fromCharCode(code);\n    var hex = '';\n    switch (entry) {\n      case ' ':\n      case '%':\n      case '(':\n      case ')':\n      case '<':\n      case '>':\n      case '[':\n      case ']':\n      case '{':\n      case '}':\n      case '/':\n      case '#':\n        name += '#';\n        hex = code.toString(16).toUpperCase();\n        name += hex.length === 1 ? '0' + hex : hex;\n        break;\n      default:\n        if (code > 126 || code < 37) {\n          name += '#';\n          hex = code.toString(16).toUpperCase();\n          name += hex.length === 1 ? '0' + hex : hex;\n        } else {\n          name += entry;\n        }\n        break;\n    }\n  }\n  return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n  if (isReview) {\n    return annotation.reviewHistory;\n  } else {\n    return annotation.comments;\n  }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n  var flag = dictionary.get('F');\n  return (dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128);\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n  var flag = dictionary.get('F');\n  return !(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128);\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n  if (dictionary.has('F')) {\n    delete dictionary._map.F;\n    dictionary._updated = true;\n  }\n  switch (value) {\n    case PdfFormFieldVisibility.hidden:\n      dictionary.update('F', PdfAnnotationFlag.hidden);\n      break;\n    case PdfFormFieldVisibility.hiddenPrintable:\n      dictionary.update('F', PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n      break;\n    case PdfFormFieldVisibility.visible:\n      if (dictionary.has('DV')) {\n        delete dictionary._map.DV;\n        dictionary._updated = true;\n      }\n      if (dictionary.has('MK')) {\n        var mkDict = dictionary.get('MK');\n        if (mkDict && mkDict.has('BG')) {\n          delete mkDict._map.BG;\n          mkDict._updated = true;\n        }\n      }\n      break;\n  }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n  if (dictionary && dictionary.has(key)) {\n    var oldAppearance = dictionary.getRaw(key);\n    if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n      var appearance = dictionary.get(key); // eslint-disable-line\n      if (appearance) {\n        if (appearance instanceof _PdfReference) {\n          appearance = crossTable._fetch(appearance);\n        }\n        var appearanceDictionary = void 0;\n        if (appearance instanceof _PdfDictionary) {\n          appearanceDictionary = appearance;\n        } else if (appearance instanceof _PdfBaseStream) {\n          appearanceDictionary = appearance.dictionary;\n        }\n        if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n          _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n        }\n      }\n      crossTable._cacheMap.delete(oldAppearance);\n    }\n  }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n  if (resources && resources.size > 0) {\n    resources.forEach(function (key, value) {\n      if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n        if (value instanceof _PdfReference) {\n          var reference = value;\n          if (reference._isNew) {\n            var dictionary = resources.get(key);\n            if (dictionary && dictionary instanceof _PdfDictionary) {\n              if (key === 'XObject' && dictionary.has('Resources')) {\n                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n              }\n              crossTable._cacheMap.delete(reference);\n            }\n          }\n        } else if (value instanceof _PdfDictionary) {\n          if (value.has('Resources')) {\n            _removeDuplicateFromResources(value.get('Resources'), crossTable);\n          }\n          if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n            _removeDuplicateFromResources(value, crossTable);\n          }\n        }\n      }\n    });\n  }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n  var normalElement;\n  if (normal) {\n    if (normal instanceof _PdfDictionary) {\n      normalElement = normal;\n    } else if (normal instanceof _PdfStream) {\n      normalElement = normal.dictionary;\n    }\n  }\n  if (normalElement) {\n    _removeDuplicateReference(normalElement, crossReference, firstKey);\n    _removeDuplicateReference(normalElement, crossReference, secondKey);\n  }\n}\nvar BaseException = /** @class */function () {\n  function BaseException(message, name) {\n    this.message = message;\n    this.name = name;\n  }\n  return BaseException;\n}();\nexport { BaseException };\nvar FormatError = /** @class */function (_super) {\n  __extends(FormatError, _super);\n  function FormatError(message) {\n    return _super.call(this, message, 'FormatError') || this;\n  }\n  return FormatError;\n}(BaseException);\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */function (_super) {\n  __extends(ParserEndOfFileException, _super);\n  function ParserEndOfFileException(message) {\n    return _super.call(this, message, 'ParserEndOfFileException') || this;\n  }\n  return ParserEndOfFileException;\n}(BaseException);\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n  if (Object.prototype.toString.call(item) === '[object String]') {\n    return '$s' + item;\n  } else {\n    return '$o' + item.toString();\n  }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n  var fontFamily = '';\n  var fontSize;\n  var font;\n  var defaultAppearance;\n  if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n    if (widget && widget._dictionary.has('DA')) {\n      defaultAppearance = widget._dictionary.get('DA');\n    } else {\n      defaultAppearance = field._dictionary.get('DA');\n    }\n  }\n  if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n    var textCollection = defaultAppearance.split(' ');\n    for (var i = 0; i < textCollection.length; i++) {\n      if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n        fontFamily = textCollection[i - 2];\n        while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n          fontFamily = fontFamily.substring(1);\n        }\n        fontSize = Number.parseFloat(textCollection[i - 1]);\n      }\n    }\n  }\n  if (fontFamily) {\n    fontFamily = fontFamily.trim();\n  }\n  if (form && form._dictionary.has('DR')) {\n    var resources = form._dictionary.get('DR');\n    if (resources.has('Font')) {\n      var fonts = resources.get('Font');\n      if (fonts.has(fontFamily)) {\n        var fontDictionary = fonts.get(fontFamily);\n        if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n          var baseFont = fontDictionary.get('BaseFont');\n          var textFontStyle = PdfFontStyle.regular;\n          if (baseFont) {\n            defaultAppearance = baseFont.name;\n            textFontStyle = _getFontStyle(baseFont.name);\n            if (defaultAppearance.includes('-')) {\n              defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n            }\n            if (widget && widget._dictionary.has('DA')) {\n              font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n            } else if (field && field._dictionary.has('DA')) {\n              font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n            }\n          }\n        }\n      }\n    }\n  }\n  if ((font === null || typeof font === 'undefined') && fontSize) {\n    font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n  }\n  if (font === null || typeof font === 'undefined' || font && font.size === 1) {\n    if (widget) {\n      font = widget._circleCaptionFont;\n    } else if (field) {\n      font = field._circleCaptionFont;\n    }\n  }\n  return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n  var position = fontFamilyString.indexOf('-');\n  if (position < 0) {\n    position = fontFamilyString.indexOf(',');\n  }\n  var style = PdfFontStyle.regular;\n  if (position >= 0) {\n    var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n    switch (standardName) {\n      case 'Bold':\n      case 'BoldMT':\n        style = PdfFontStyle.bold;\n        break;\n      case 'Italic':\n      case 'ItalicMT':\n      case 'Oblique':\n      case 'It':\n        style = PdfFontStyle.italic;\n        break;\n      case 'BoldItalic':\n      case 'BoldItalicMT':\n      case 'BoldOblique':\n        style = PdfFontStyle.bold | PdfFontStyle.italic;\n        break;\n    }\n  }\n  return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n  var font;\n  var fontFamily = name ? name : '';\n  if (fontFamily.includes('-')) {\n    fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n  }\n  var fontSize = typeof size !== 'undefined' ? size : 1;\n  if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n    switch (fontFamily) {\n      case 'Helvetica':\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n        break;\n      case 'Courier':\n        font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n        break;\n      case 'Symbol':\n        font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n        break;\n      case 'Times':\n      case 'TimesRoman':\n        font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n        break;\n      case 'ZapfDingbats':\n        font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n        break;\n      case 'MonotypeSungLight':\n        font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n        break;\n      case 'SinoTypeSongLight':\n        font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n        break;\n      case 'MonotypeHeiMedium':\n        font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n        break;\n      case 'HanyangSystemsGothicMedium':\n        font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n        break;\n      case 'HanyangSystemsShinMyeongJoMedium':\n        font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n        break;\n      case 'HeiseiKakuGothicW5':\n        font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n        break;\n      case 'HeiseiMinchoW3':\n        font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n        break;\n      default:\n        if (annotation._dictionary.has('AP')) {\n          var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n          if (annotation._hasData) {\n            var base64String = _encode(fontData);\n            font = new PdfTrueTypeFont(base64String, fontSize, style);\n          }\n        }\n        break;\n    }\n  }\n  if (font === null || typeof font === 'undefined') {\n    if (annotation instanceof PdfAnnotation) {\n      if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n      } else {\n        font = annotation._circleCaptionFont;\n      }\n    } else if (annotation instanceof PdfField) {\n      font = annotation._circleCaptionFont;\n    }\n  }\n  return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n  var fontData;\n  var apperance = widgetDictionary.get('AP');\n  if (apperance && apperance.has('N')) {\n    var normal = apperance.get('N');\n    if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n      var resourcesDictionary = normal.dictionary.get('Resources');\n      if (resourcesDictionary && resourcesDictionary.has('Font')) {\n        var fontDictionary = resourcesDictionary.get('Font');\n        if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n          fontDictionary.forEach(function (key, value) {\n            if (value) {\n              var dictionary = crossReference._fetch(value);\n              if (dictionary && dictionary.has('DescendantFonts')) {\n                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                if (descendant && descendant.length > 0) {\n                  for (var i = 0; i < descendant.length; i++) {\n                    var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                      var fontDescriptor = descendantFont.get('FontDescriptor');\n                      if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                        var fontFile = fontDescriptor.get('FontFile2');\n                        if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                          fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                          if (fontData && fontData.length > 0) {\n                            annotation._hasData = true;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n  return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n  if (inkPointsCollection.length !== previousCollection.length) {\n    return false;\n  }\n  for (var i = 0; i < inkPointsCollection.length; i++) {\n    if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","_PdfDictionary","_PdfName","_PdfReference","PdfFormFieldVisibility","PdfAnnotationFlag","PdfCheckBoxStyle","PdfHighlightMode","PdfBorderStyle","PdfBorderEffectStyle","PdfLineEndingStyle","_PdfCheckFieldState","PdfMeasurementUnit","_PdfGraphicsUnit","PdfTextMarkupAnnotationType","PdfRotationAngle","PdfAnnotationState","PdfAnnotationStateModel","PdfPopupIcon","PdfRubberStampAnnotationIcon","PdfAttachmentIcon","PdfAnnotationIntent","PdfBlendMode","_PdfAnnotationType","_PdfTransformationMatrix","_PdfBaseStream","_PdfStream","PdfAnnotation","PdfTemplate","PdfField","PdfCjkFontFamily","PdfCjkStandardFont","PdfFontFamily","PdfFontStyle","PdfStandardFont","PdfTrueTypeFont","_checkRotation","page","height","left","topValue","rotation","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","i","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","value","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","length","code","String","fromCharCode","charAt","isDirect","bytes","Uint8Array","_convertStringToBytes","destination","_areArrayEqual","first","second","Number","parseInt","toString","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","max","apply","stringBuffer","chunkEnd","Math","min","chunk","subarray","_stringToUnicodeArray","output","unicodeArray","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decode","input","key","chr1","chr2","chr3","enc1","enc2","enc3","enc4","resultIndex","replace","totalLength","indexOf","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","_i","arguments","refSet","Set","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","c","m","k","fBlack","_mapBorderStyle","style","token","dot","dashed","beveled","inset","underline","_mapBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","start","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","j","ref","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","keys_1","forEach","_getStateTemplate","item","checked","_dictionary","template","stream","getRaw","_crossReference","colorName","_setMatrix","box","_content","set","matrix","_rotate","_matrix","_elements","_styleToString","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_mapRubberStampIcon","iconString","icon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","regular","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_encodeValue","hex","_getCommentsOrReview","annotation","isReview","reviewHistory","comments","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","BaseException","message","FormatError","_super","call","ParserEndOfFileException","_defaultToString","_obtainFontDetails","form","widget","field","fontFamily","fontSize","font","defaultAppearance","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","_getFontStyle","includes","_mapFont","helvetica","_circleCaptionFont","fontFamilyString","position","standardName","courier","symbol","timesRoman","zapfDingbats","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","_type","widgetAnnotation","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","end","_checkInkPoints","inkPointsCollection","previousCollection"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/utils.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array\n */\nexport function _stringToBytes(value, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var bytes = [];\n    for (var i = 0; i < value.length; ++i) {\n        bytes.push(value.charCodeAt(i) & 0xff);\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {number[]} destination byte array.\n * @returns {number[]} Byte array\n */\nexport function _convertStringToBytes(value, destination) {\n    for (var i = 0; i < value.length; ++i) {\n        destination.push(value.charCodeAt(i) & 0xff);\n    }\n    return destination;\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes) {\n    var length = bytes.length;\n    var max = 8192;\n    if (length < max) {\n        return String.fromCharCode.apply(null, bytes);\n    }\n    var stringBuffer = [];\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return isDirect ? output : new Uint8Array(output);\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = '';\n    var currentChar = 0;\n    for (var i = 0; i < bytes.length; i++) {\n        if (i % 3 === 0) {\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n        }\n        else if (i % 3 === 1) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n        }\n        else if (i % 3 === 2) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n        }\n    }\n    if (bytes.length % 3 === 1) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n    }\n    if (bytes.length % 3 === 2) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n    }\n    return output;\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = '';\n    switch (style) {\n        case PdfFontStyle.regular:\n            value = 'Regular';\n            break;\n        case PdfFontStyle.bold:\n            value = 'Bold';\n            break;\n        case PdfFontStyle.italic:\n            value = 'Italic';\n            break;\n        case PdfFontStyle.underline:\n            value = 'Underline';\n            break;\n        case PdfFontStyle.strikeout:\n            value = 'Strikeout';\n            break;\n        default:\n            value = 'Regular';\n            break;\n    }\n    return value;\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}