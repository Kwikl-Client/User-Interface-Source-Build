{"ast":null,"code":"var _jsxFileName = \"/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/src/components/cusComponents/modal/helpModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HelpModal({\n  isOpen,\n  onClose\n}) {\n  _s();\n  const [feedback, setFeedback] = useState('');\n  const handleSubmit = () => {\n    // Handle submission of feedback here\n    console.log('Feedback submitted:', feedback);\n    // You can add your logic to submit the feedback to your backend or perform any other action\n    // Clear the feedback input after submission\n    setFeedback('');\n    // Close the modal\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${isOpen ? 'open' : ''}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Help Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the help modal content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: feedback,\n        onChange: e => setFeedback(e.target.value),\n        placeholder: \"Enter your feedback...\",\n        rows: \"4\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(HelpModal, \"r3l5PovyxaFuXvMwSKF3o6WqgB0=\");\n_c = HelpModal;\nvar _c;\n$RefreshReg$(_c, \"HelpModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HelpModal","isOpen","onClose","_s","feedback","setFeedback","handleSubmit","console","log","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/src/components/cusComponents/modal/helpModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function HelpModal({ isOpen, onClose }) {\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    // Handle submission of feedback here\r\n    console.log('Feedback submitted:', feedback);\r\n    // You can add your logic to submit the feedback to your backend or perform any other action\r\n    // Clear the feedback input after submission\r\n    setFeedback('');\r\n    // Close the modal\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className={`modal ${isOpen ? 'open' : ''}`} onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <h2>Help Modal</h2>\r\n        <p>This is the help modal content.</p>\r\n        <textarea\r\n          value={feedback}\r\n          onChange={(e) => setFeedback(e.target.value)}\r\n          placeholder=\"Enter your feedback...\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n        />\r\n        <button onClick={handleSubmit}>Submit</button>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,QAAQ,CAAC;IAC5C;IACA;IACAC,WAAW,CAAC,EAAE,CAAC;IACf;IACAH,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEH,OAAA;IAAKU,SAAS,EAAG,SAAQR,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;IAACS,OAAO,EAAER,OAAQ;IAAAS,QAAA,eAChEZ,OAAA;MAAKU,SAAS,EAAC,eAAe;MAACC,OAAO,EAAGE,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAF,QAAA,gBACjEZ,OAAA;QAAAY,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBlB,OAAA;QAAAY,QAAA,EAAG;MAA+B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtClB,OAAA;QACEmB,KAAK,EAAEd,QAAS;QAChBe,QAAQ,EAAGP,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,wBAAwB;QACpCC,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFlB,OAAA;QAAQW,OAAO,EAAEJ,YAAa;QAAAK,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ClB,OAAA;QAAQW,OAAO,EAAER,OAAQ;QAAAS,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA9BuBH,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}