{"ast":null,"code":"import { TreeView as BaseTreeView } from '@syncfusion/ej2-navigations';\nimport { isNullOrUndefined as isNOU, select, setValue, getValue, Draggable } from '@syncfusion/ej2-base';\nimport { KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport * as CLS from '../base/classes';\nimport { read, Download, GetDetails, Delete } from '../common/operations';\nimport { createDialog } from '../pop-up/dialog';\nimport { updatePath, getPath, getDirectories } from '../common/utility';\nimport { createVirtualDragElement, dragStopHandler, dragStartHandler, draggingHandler, getDirectoryPath, getModule, getPathId } from '../common/index';\nimport { copyFiles, cutFiles, removeActive, pasteHandler, getParentPath, readDropPath } from '../common/index';\nimport { hasEditAccess, createDeniedDialog, hasDownloadAccess, getAccessClass } from '../common/index';\n/**\n * NavigationPane module\n */\nvar NavigationPane = /** @class */function () {\n  /**\n   * Constructor for the TreeView module\n   *\n   * @param {IFileManager} parent - specifies the parent element.\n   * @hidden\n   */\n  /* istanbul ignore next */\n  function NavigationPane(parent) {\n    this.removeNodes = [];\n    this.moveNames = [];\n    this.expandTree = false;\n    this.isDrag = false;\n    this.isPathDragged = false;\n    this.isRenameParent = false;\n    this.isRightClick = false;\n    this.isSameNodeClicked = false;\n    this.isNodeExpandCalled = false;\n    this.renameParent = null;\n    // Specifies the previously selected nodes in the treeview control.\n    this.previousSelected = null;\n    // Specifies whether the nodeClicked event of the treeview control is triggered or not.\n    this.isNodeClickCalled = false;\n    // Specifies whether to restrict node selection in the treeview control.\n    this.restrictSelecting = false;\n    this.parent = parent;\n    this.addEventListener();\n    this.keyConfigs = {\n      altEnter: 'alt+enter',\n      esc: 'escape',\n      del: 'delete',\n      ctrlX: this.parent.isMac ? 'cmd+x' : 'ctrl+x',\n      ctrlC: this.parent.isMac ? 'cmd+c' : 'ctrl+c',\n      ctrlV: this.parent.isMac ? 'cmd+v' : 'ctrl+v',\n      ctrlShiftN: 'ctrl+shift+n',\n      shiftF10: 'shift+F10',\n      f2: 'f2'\n    };\n  }\n  NavigationPane.prototype.onInit = function () {\n    if (!isNOU(this.treeObj)) {\n      return;\n    }\n    // eslint-disable-next-line\n    var rootData = getValue(this.parent.pathId[0], this.parent.feParent);\n    setValue('_fm_icon', 'e-fe-folder', rootData);\n    // eslint-disable-next-line\n    var attr = {};\n    var id = getValue('id', rootData);\n    if (!isNOU(id)) {\n      setValue('data-id', id, attr);\n    }\n    if (!hasEditAccess(rootData)) {\n      setValue('class', getAccessClass(rootData), attr);\n    }\n    if (!isNOU(attr)) {\n      setValue('_fm_htmlAttr', attr, rootData);\n    }\n    this.treeObj = new BaseTreeView({\n      fields: {\n        dataSource: [rootData],\n        id: '_fm_id',\n        parentID: '_fm_pId',\n        expanded: '_fm_expanded',\n        selected: '_fm_selected',\n        text: 'name',\n        hasChildren: 'hasChild',\n        iconCss: '_fm_icon',\n        htmlAttributes: '_fm_htmlAttr',\n        tooltip: 'name'\n      },\n      enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n      sortOrder: this.parent.navigationPaneSettings.sortOrder,\n      nodeSelecting: this.onNodeSelecting.bind(this),\n      nodeSelected: this.onNodeSelected.bind(this),\n      nodeExpanding: this.onNodeExpand.bind(this),\n      nodeClicked: this.onNodeClicked.bind(this),\n      allowEditing: true,\n      nodeEditing: this.onNodeEditing.bind(this),\n      drawNode: this.onDrowNode.bind(this),\n      enableRtl: this.parent.enableRtl,\n      dataBound: this.addDragDrop.bind(this)\n    });\n    this.treeObj.isStringTemplate = true;\n    this.treeObj.appendTo('#' + this.parent.element.id + CLS.TREE_ID);\n    this.wireEvents();\n  };\n  NavigationPane.prototype.addDragDrop = function () {\n    var _this = this;\n    if (!this.parent.isMobile && this.treeObj) {\n      if (this.parent.allowDragAndDrop) {\n        if (this.dragObj) {\n          this.dragObj.destroy();\n        }\n        this.dragObj = new Draggable(this.treeObj.element, {\n          cursorAt: this.parent.dragCursorPosition,\n          dragTarget: '.' + CLS.FULLROW,\n          distance: 5,\n          dragArea: this.parent.element,\n          drag: draggingHandler.bind(this, this.parent),\n          dragStart: function (args) {\n            dragStartHandler(_this.parent, args, _this.dragObj);\n          },\n          dragStop: dragStopHandler.bind(this, this.parent),\n          enableTailMode: true,\n          enableAutoScroll: false,\n          helper: this.dragHelper.bind(this)\n        });\n      } else if (!this.parent.allowDragAndDrop && this.dragObj) {\n        this.dragObj.destroy();\n      }\n    }\n  };\n  NavigationPane.prototype.dragHelper = function (args) {\n    var dragTarget = args.sender.target;\n    if (!dragTarget.classList.contains(CLS.FULLROW)) {\n      return null;\n    }\n    var dragLi = closest(dragTarget, 'li');\n    this.parent.dragPath = '';\n    this.parent.dragData = [];\n    this.parent.activeElements = [];\n    this.parent.activeElements = [dragLi];\n    this.parent.dragNodes = [];\n    getModule(this.parent, dragLi);\n    // eslint-disable-next-line\n    this.parent.dragData = this.getTreeData(dragLi);\n    this.parent.dragPath = this.getDragPath(dragLi, this.parent.dragData[0].name);\n    this.parent.dragNodes.push(this.parent.dragData[0].name);\n    createVirtualDragElement(this.parent);\n    return this.parent.virtualDragElement;\n  };\n  NavigationPane.prototype.getDragPath = function (dragLi, text) {\n    var path = this.getDropPath(dragLi, text);\n    return getParentPath(path);\n  };\n  NavigationPane.prototype.getDropPath = function (node, text) {\n    var id = node.getAttribute('data-id');\n    var newText = this.parent.hasId ? id : text;\n    return getPath(node, newText, this.parent.hasId);\n  };\n  NavigationPane.prototype.onDrowNode = function (args) {\n    var eventArgs = {\n      element: args.node,\n      fileDetails: args.nodeData,\n      module: 'NavigationPane'\n    };\n    this.parent.trigger('fileLoad', eventArgs);\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.addChild = function (files, target, prevent) {\n    // eslint-disable-next-line\n    var directories = getDirectories(files);\n    if (directories.length > 0 && (directories[0].filterPath == null || this.getTreeData(target)[0].filterPath == null || directories[0].filterPath !== this.getTreeData(target)[0].filterPath)) {\n      var length_1 = 0;\n      // eslint-disable-next-line\n      var folders = directories;\n      while (length_1 < directories.length) {\n        // eslint-disable-next-line\n        folders[length_1]._fm_icon = 'e-fe-folder';\n        // eslint-disable-next-line\n        var attr = {};\n        var id = getValue('id', folders[length_1]);\n        if (!isNOU(id)) {\n          setValue('data-id', id, attr);\n        }\n        if (!hasEditAccess(folders[length_1])) {\n          setValue('class', getAccessClass(folders[length_1]), attr);\n        }\n        if (!isNOU(attr)) {\n          setValue('_fm_htmlAttr', attr, folders[length_1]);\n        }\n        length_1++;\n      }\n      var element = select('[data-uid=\"' + target + '\"]', this.treeObj.element);\n      var childElements = select('ul', element);\n      if (isNOU(childElements)) {\n        // eslint-disable-next-line\n        this.treeObj.addNodes(directories, target, null, prevent);\n      }\n    }\n  };\n  // Node Selecting event handler\n  NavigationPane.prototype.onNodeSelecting = function (args) {\n    if (!args.isInteracted && !this.isRightClick && !this.isSameNodeClicked && !this.isPathDragged && !this.isRenameParent || this.restrictSelecting) {\n      this.restrictSelecting = false;\n      this.isNodeClickCalled = false;\n      return;\n    }\n    if (!this.renameParent) {\n      this.parent.activeModule = 'navigationpane';\n      // eslint-disable-next-line\n      var nodeData = this.getTreeData(getValue('id', args.nodeData));\n      if (args.node.getAttribute('data-uid') !== this.parent.pathId[this.parent.pathId.length - 1] && !this.isRightClick && !this.isNodeClickCalled || this.isSameNodeClicked) {\n        this.isNodeClickCalled = false;\n        if (!this.isSameNodeClicked) {\n          this.isSameNodeClicked = true;\n          var selecEventArgs = {\n            action: args.action,\n            fileDetails: nodeData[0],\n            isInteracted: args.isInteracted\n          };\n          this.parent.trigger('fileSelect', selecEventArgs);\n        }\n        if (!this.isRightClick) {\n          var eventArgs = {\n            cancel: false,\n            fileDetails: nodeData[0],\n            module: 'NavigationPane'\n          };\n          this.parent.trigger('fileOpen', eventArgs);\n          args.cancel = eventArgs.cancel;\n        }\n        if (args.cancel) {\n          this.restrictSelecting = this.isNodeClickCalled ? this.previousSelected[0] !== args.node.getAttribute('data-uid') : false;\n          this.isNodeClickCalled = true;\n          this.isSameNodeClicked = false;\n          this.previousSelected = this.treeObj.selectedNodes;\n          this.treeObj.selectedNodes = [args.node.getAttribute(\"data-uid\")];\n        }\n      } else if (this.previousSelected[0] !== args.node.getAttribute('data-uid')) {\n        var selecEventArgs = {\n          action: args.action,\n          fileDetails: nodeData[0],\n          isInteracted: this.isNodeClickCalled\n        };\n        this.parent.trigger('fileSelect', selecEventArgs);\n      }\n    }\n  };\n  // Opens the folder while clicking open context menu item in the treeview.\n  NavigationPane.prototype.openFileOnContextMenuClick = function (node) {\n    var data = this.treeObj.getTreeData(node);\n    // eslint-disable-next-line\n    this.parent.selectedItems = [];\n    this.parent.itemData = data;\n    this.activeNode = node;\n    this.parent.activeModule = 'navigationpane';\n    var eventArgs = {\n      cancel: false,\n      fileDetails: data[0],\n      module: 'NavigationPane'\n    };\n    this.parent.trigger('fileOpen', eventArgs);\n    this.isNodeClickCalled = true;\n    if (!eventArgs.cancel) {\n      updatePath(node, this.parent.itemData[0], this.parent);\n      read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n      this.parent.visitedItem = node;\n      this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n      this.treeObj.selectedNodes = [node.getAttribute('data-uid')];\n    }\n  };\n  NavigationPane.prototype.onNodeSelected = function (args) {\n    if (this.parent.breadcrumbbarModule && this.parent.breadcrumbbarModule.searchObj && !this.renameParent) {\n      this.parent.breadcrumbbarModule.searchObj.element.value = '';\n      this.parent.isFiltered = false;\n      this.isNodeClickCalled = false;\n    }\n    this.parent.searchedItems = [];\n    if (!args.isInteracted && !this.isRightClick && !this.isSameNodeClicked && !this.isPathDragged && !this.isRenameParent) {\n      this.parent.pathId = getPathId(args.node);\n      return;\n    }\n    this.activeNode = args.node;\n    this.parent.activeModule = 'navigationpane';\n    // eslint-disable-next-line\n    var nodeData = this.getTreeData(getValue('id', args.nodeData));\n    this.parent.selectedItems = [];\n    this.parent.itemData = nodeData;\n    var previousPath = this.parent.path;\n    var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n    if (!this.isRightClick && this.isSameNodeClicked) {\n      updatePath(args.node, this.parent.itemData[0], this.parent);\n    } else {\n      this.parent.pathId = getPathId(args.node);\n      this.parent.visitedItem = args.node;\n    }\n    if (args.node.querySelector('.' + CLS.ICONS) && args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n      this.expandNodeTarget = 'add';\n    }\n    if (previousPath !== this.parent.path) {\n      if (!this.isRightClick && this.isSameNodeClicked) {\n        read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n        this.isNodeClickCalled = true;\n      }\n      this.parent.visitedItem = args.node;\n    }\n    this.isPathDragged = this.isRenameParent = this.isRightClick = this.isSameNodeClicked = false;\n  };\n  /* istanbul ignore next */\n  // eslint-disable-next-line\n  NavigationPane.prototype.onPathDrag = function (args) {\n    this.isPathDragged = true;\n    this.selectResultNode(args[0]);\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onNodeExpand = function (args) {\n    if (!args.isInteracted && !this.isDrag) {\n      return;\n    }\n    if (args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n      var text = getValue('text', args.nodeData);\n      var id = args.node.getAttribute('data-id');\n      var isId = isNOU(id) ? false : true;\n      var newText = isNOU(id) ? text : id;\n      var path = getPath(args.node, newText, isId);\n      this.expandNodeTarget = args.node.getAttribute('data-uid');\n      this.parent.expandedId = this.expandNodeTarget;\n      this.parent.itemData = this.getTreeData(getValue('id', args.nodeData));\n      this.parent.pathId.push(getValue('id', args.nodeData));\n      read(this.parent, events.nodeExpand, path);\n      this.isNodeExpandCalled = true;\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onNodeExpanded = function (args) {\n    this.addChild(args.files, this.expandNodeTarget, false);\n    this.parent.expandedId = null;\n    this.isNodeExpandCalled = false;\n  };\n  NavigationPane.prototype.onNodeClicked = function (args) {\n    this.parent.activeModule = 'navigationpane';\n    this.previousSelected = this.treeObj.selectedNodes;\n    this.activeNode = args.node;\n    if (args.event.which === 3 && args.node.getAttribute('data-uid') !== this.treeObj.selectedNodes[0]) {\n      this.isRightClick = true;\n      this.isNodeClickCalled = true;\n      this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n    } else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && this.parent.selectedItems.length !== 0) {\n      this.parent.setProperties({\n        selectedItems: []\n      }, true);\n      var layout = this.parent.view === 'LargeIcons' ? 'largeiconsview' : 'detailsview';\n      this.parent.notify(events.modelChanged, {\n        module: layout,\n        newProp: {\n          selectedItems: []\n        }\n      });\n    } else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && !this.isNodeClickCalled && !this.isNodeExpandCalled) {\n      if (args.event.which === 3) {\n        this.isRightClick = true;\n      }\n      this.isSameNodeClicked = true;\n      this.isNodeClickCalled = true;\n      this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onNodeEditing = function (args) {\n    if (!isNOU(args.innerHtml)) {\n      args.cancel = true;\n    }\n  };\n  NavigationPane.prototype.onPathChanged = function (args) {\n    this.parent.isCut = false;\n    // eslint-disable-next-line\n    var currFiles = getValue(this.parent.pathId[this.parent.pathId.length - 1], this.parent.feFiles);\n    if (this.expandNodeTarget === 'add') {\n      var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n      var ul = !isNOU(sNode) ? select('.' + CLS.LIST_PARENT, sNode) : null;\n      if (isNOU(ul)) {\n        this.addChild(args.files, this.treeObj.selectedNodes[0], !this.expandTree);\n      }\n      this.expandNodeTarget = '';\n    }\n    this.expandTree = false;\n    if (isNOU(currFiles)) {\n      setValue(this.parent.pathId[this.parent.pathId.length - 1], args.files, this.parent.feFiles);\n    }\n    if (this.parent.uploadObj.directoryUpload && !this.parent.hasId) {\n      this.updateTree(args);\n    }\n  };\n  NavigationPane.prototype.updateTree = function (args) {\n    if (this.treeObj) {\n      var id = this.treeObj.selectedNodes[0];\n      this.updateTreeNode(args, id);\n    }\n  };\n  NavigationPane.prototype.updateTreeNode = function (args, id) {\n    var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1 ? false : true;\n    this.removeChildNodes(id);\n    this.addChild(args.files, id, !toExpand);\n  };\n  NavigationPane.prototype.removeChildNodes = function (id) {\n    var sNode = select('[data-uid=\"' + id + '\"]', this.treeObj.element);\n    var parent = select('.' + CLS.LIST_PARENT, sNode);\n    var childs = parent ? Array.prototype.slice.call(parent.children) : null;\n    if (childs) {\n      this.treeObj.removeNodes(childs);\n    }\n  };\n  NavigationPane.prototype.onOpenEnd = function (args) {\n    var sleId = this.parent.pathId[this.parent.pathId.length - 1];\n    this.treeObj.expandAll(this.treeObj.selectedNodes);\n    this.treeObj.selectedNodes = [sleId];\n    this.expandNodeTarget = 'add';\n    this.onPathChanged(args);\n  };\n  NavigationPane.prototype.onOpenInit = function (args) {\n    if (this.parent.activeModule === 'navigationpane') {\n      if (args.target.querySelector('.' + CLS.ICONS)) {\n        this.treeObj.expandAll(this.treeObj.selectedNodes);\n      }\n    }\n  };\n  NavigationPane.prototype.onInitialEnd = function (args) {\n    this.onInit();\n    this.addChild(args.files, getValue('_fm_id', args.cwd), false);\n  };\n  NavigationPane.prototype.onFinalizeEnd = function (args) {\n    this.onInit();\n    var id = getValue('_fm_id', args.cwd);\n    this.addChild(args.files, id, false);\n    this.treeObj.selectedNodes = [this.parent.pathId[this.parent.pathId.length - 1]];\n  };\n  NavigationPane.prototype.onCreateEnd = function (args) {\n    this.updateTree(args);\n  };\n  NavigationPane.prototype.onSelectedData = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateItemData();\n    }\n  };\n  NavigationPane.prototype.onDeleteInit = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateActionData();\n      var name_1 = getValue('name', this.parent.itemData[0]);\n      Delete(this.parent, [name_1], this.parent.path, 'delete');\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDeleteEnd = function (args) {\n    if (this.parent.activeModule === 'navigationpane') {\n      var selectedNode = this.treeObj.selectedNodes[0];\n      var selcetedEle = select('[data-uid=\"' + selectedNode + '\"]', this.treeObj.element);\n      var selectedNodeEle = closest(selcetedEle, '.' + CLS.LIST_PARENT).parentElement;\n      this.treeObj.selectedNodes = [selectedNodeEle.getAttribute('data-uid')];\n      this.treeObj.dataBind();\n    }\n    this.updateTree(args);\n  };\n  NavigationPane.prototype.onRefreshEnd = function (args) {\n    this.updateTree(args);\n  };\n  NavigationPane.prototype.onRenameInit = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateRenameData();\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onRenameEndParent = function (args) {\n    var id = this.renameParent ? this.renameParent : this.parent.pathId[this.parent.pathId.length - 1];\n    this.expandTree = this.treeObj.expandedNodes.indexOf(this.treeObj.selectedNodes[0]) !== -1;\n    this.updateTreeNode(args, id);\n    this.parent.expandedId = null;\n    if (this.renameParent) {\n      this.renameParent = null;\n    } else {\n      // eslint-disable-next-line\n      var resultData = [];\n      if (this.parent.hasId) {\n        resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n      } else {\n        // eslint-disable-next-line\n        var nData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.renameText, false));\n        if (nData.length > 0) {\n          resultData = new DataManager(nData).executeLocal(new Query().where('_fm_pId', 'equal', id, false));\n        }\n      }\n      if (resultData.length > 0) {\n        var id_1 = getValue(this.treeObj.fields.id, resultData[0]);\n        this.treeObj.selectedNodes = [id_1];\n        this.treeObj.dataBind();\n      }\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onRenameEnd = function (args) {\n    if (this.parent.breadcrumbbarModule.searchObj.element.value === '' && !this.parent.isFiltered) {\n      this.updateTree(args);\n    } else {\n      // eslint-disable-next-line\n      var data = this.treeObj.getTreeData();\n      // eslint-disable-next-line\n      var resultData = [];\n      if (this.parent.hasId) {\n        resultData = new DataManager(data).executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n      } else {\n        // eslint-disable-next-line\n        var nData = new DataManager(data).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.currentItemText, false));\n        if (nData.length > 0) {\n          resultData = new DataManager(nData).executeLocal(new Query().where('filterPath', 'equal', this.parent.filterPath, false));\n        }\n      }\n      if (resultData.length > 0) {\n        this.renameParent = getValue(this.treeObj.fields.parentID, resultData[0]);\n        this.parent.expandedId = this.renameParent;\n        this.parent.itemData = this.getTreeData(this.renameParent);\n        read(this.parent, events.renameEndParent, this.parent.filterPath.replace(/\\\\/g, '/'));\n      }\n    }\n  };\n  NavigationPane.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName() && e.module !== 'common') {\n      /* istanbul ignore next */\n      return;\n    }\n    for (var _i = 0, _a = Object.keys(e.newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'allowDragAndDrop':\n          this.addDragDrop();\n          break;\n        case 'navigationPaneSettings':\n          read(this.parent, events.finalizeEnd, '/');\n          if (e.oldProp.navigationPaneSettings.sortOrder !== e.newProp.navigationPaneSettings.sortOrder) {\n            this.treeObj.sortOrder = e.newProp.navigationPaneSettings.sortOrder;\n          }\n          break;\n      }\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDownLoadInit = function () {\n    this.doDownload();\n  };\n  NavigationPane.prototype.onSelectionChanged = function (e) {\n    this.treeObj.selectedNodes = [e.selectedNode];\n  };\n  NavigationPane.prototype.onClearPathInit = function (e) {\n    this.removeChildNodes(e.selectedNode);\n  };\n  NavigationPane.prototype.onDragEnd = function (args) {\n    var moveNames = [];\n    if (this.parent.isPasteError || this.parent.isSearchDrag) {\n      moveNames = this.getMoveNames(args.files, this.parent.isSearchDrag, this.parent.dragPath);\n    } else {\n      moveNames = this.moveNames;\n    }\n    this.treeObj.removeNodes(moveNames);\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.getMoveNames = function (files, flag, path) {\n    var moveNames = [];\n    for (var i = 0; i < files.length; i++) {\n      if (!files[i].isFile) {\n        if (!this.parent.hasId) {\n          var name_2 = files[i].previousName;\n          if (flag) {\n            path = path + files[i].previousName;\n            var index = path.lastIndexOf('/');\n            name_2 = path.substring(index + 1);\n            path = path.substring(0, index + 1);\n          }\n          // eslint-disable-next-line\n          var resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', name_2, false));\n          for (var j = 0; j < resultData.length; j++) {\n            var fPath = getValue('filterPath', resultData[j]);\n            fPath = fPath.replace(/\\\\/g, '/');\n            if (fPath === path) {\n              moveNames.push(getValue(this.treeObj.fields.id, resultData[j]));\n              break;\n            }\n          }\n        }\n      }\n    }\n    return moveNames;\n  };\n  NavigationPane.prototype.onCutEnd = function (args) {\n    var moveNames = [];\n    if (this.parent.isPasteError || this.parent.isSearchCut) {\n      this.moveNames = this.getMoveNames(args.files, this.parent.isSearchCut, this.parent.targetPath);\n    } else {\n      moveNames = this.moveNames;\n    }\n    this.treeObj.removeNodes(moveNames);\n  };\n  /* istanbul ignore next */\n  // eslint-disable-next-line\n  NavigationPane.prototype.selectResultNode = function (resultObj) {\n    if (!this.parent.hasId) {\n      var path = getValue('filterPath', resultObj);\n      var itemname = getValue('name', resultObj);\n      // eslint-disable-next-line\n      var data = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', itemname, false));\n      if (data.length > 0) {\n        // eslint-disable-next-line\n        var resultData = new DataManager(data).executeLocal(new Query().where('filterPath', 'equal', path, false));\n        if (resultData.length > 0) {\n          var id = getValue(this.treeObj.fields.id, resultData[0]);\n          this.treeObj.selectedNodes = [id];\n          this.treeObj.dataBind();\n        }\n      }\n    } else {\n      var selectedNode = this.treeObj.getTreeData().filter(function (obj) {\n        return obj.name === resultObj.name;\n      })[0];\n      this.treeObj.selectedNodes = [getValue('_fm_id', selectedNode)];\n      this.treeObj.dataBind();\n    }\n  };\n  NavigationPane.prototype.onDropPath = function (args) {\n    this.onpasteEnd(args);\n    this.selectResultNode(this.parent.dropData);\n    this.parent.isDropEnd = !this.parent.isPasteError;\n  };\n  NavigationPane.prototype.onpasteEnd = function (args) {\n    // eslint-disable-next-line\n    var resultData = [];\n    if (this.parent.hasId) {\n      resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where('id', 'equal', getValue('id', args.cwd), false));\n    } else {\n      // eslint-disable-next-line\n      var nData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', getValue('name', args.cwd), false));\n      if (nData.length > 0) {\n        resultData = new DataManager(nData).executeLocal(new Query().where('filterPath', 'equal', getValue('filterPath', args.cwd), false));\n      }\n    }\n    if (resultData.length > 0) {\n      var id = getValue(this.treeObj.fields.id, resultData[0]);\n      var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1;\n      this.removeChildNodes(id);\n      this.addChild(args.files, id, toExpand);\n    }\n    this.parent.expandedId = null;\n    this.onPathChanged(args);\n    if (this.parent.isDragDrop) {\n      this.checkDropPath(args);\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.checkDropPath = function (args) {\n    if (this.parent.hasId) {\n      this.parent.isDropEnd = !this.parent.isPasteError;\n      readDropPath(this.parent);\n      return;\n    }\n    if (this.parent.dropPath.indexOf(getDirectoryPath(this.parent, args)) === -1) {\n      this.parent.isDropEnd = false;\n      readDropPath(this.parent);\n    } else {\n      this.parent.isDropEnd = !this.parent.isPasteError;\n    }\n  };\n  NavigationPane.prototype.onpasteInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      this.updateItemData();\n    }\n    this.moveNames = [];\n    // eslint-disable-next-line\n    var obj = this.parent.isDragDrop ? this.parent.dragData : this.parent.actionRecords;\n    for (var i = 0; i < obj.length; i++) {\n      if (getValue('isFile', obj[i]) === false) {\n        this.moveNames.push(getValue('_fm_id', obj[i]));\n      }\n    }\n  };\n  NavigationPane.prototype.oncutCopyInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      this.parent.activeRecords = this.getTreeData(this.treeObj.selectedNodes[0]);\n      this.parent.activeElements = [this.activeNode];\n    }\n  };\n  NavigationPane.prototype.addEventListener = function () {\n    this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.downloadInit, this.onDownLoadInit, this);\n    this.parent.on(events.initialEnd, this.onInitialEnd, this);\n    this.parent.on(events.finalizeEnd, this.onFinalizeEnd, this);\n    this.parent.on(events.pathChanged, this.onPathChanged, this);\n    this.parent.on(events.pasteEnd, this.onpasteEnd, this);\n    this.parent.on(events.cutEnd, this.onCutEnd, this);\n    this.parent.on(events.pasteInit, this.onpasteInit, this);\n    this.parent.on(events.nodeExpand, this.onNodeExpanded, this);\n    this.parent.on(events.createEnd, this.onCreateEnd, this);\n    this.parent.on(events.selectedData, this.onSelectedData, this);\n    this.parent.on(events.deleteInit, this.onDeleteInit, this);\n    this.parent.on(events.deleteEnd, this.onDeleteEnd, this);\n    this.parent.on(events.refreshEnd, this.onRefreshEnd, this);\n    this.parent.on(events.updateTreeSelection, this.onSelectionChanged, this);\n    this.parent.on(events.openInit, this.onOpenInit, this);\n    this.parent.on(events.openEnd, this.onOpenEnd, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.renameInit, this.onRenameInit, this);\n    this.parent.on(events.renameEnd, this.onRenameEnd, this);\n    this.parent.on(events.renameEndParent, this.onRenameEndParent, this);\n    this.parent.on(events.clearPathInit, this.onClearPathInit, this);\n    this.parent.on(events.cutCopyInit, this.oncutCopyInit, this);\n    this.parent.on(events.dropInit, this.onDropInit, this);\n    this.parent.on(events.menuItemData, this.onMenuItemData, this);\n    this.parent.on(events.dragEnd, this.onDragEnd, this);\n    this.parent.on(events.dragging, this.onDragging, this);\n    this.parent.on(events.dropPath, this.onDropPath, this);\n    this.parent.on(events.detailsInit, this.onDetailsInit, this);\n    this.parent.on(events.pathDrag, this.onPathDrag, this);\n  };\n  NavigationPane.prototype.removeEventListener = function () {\n    this.parent.off(events.initialEnd, this.onInitialEnd);\n    this.parent.off(events.downloadInit, this.onDownLoadInit);\n    this.parent.off(events.finalizeEnd, this.onFinalizeEnd);\n    this.parent.off(events.selectedData, this.onSelectedData);\n    this.parent.off(events.modelChanged, this.onPropertyChanged);\n    this.parent.off(events.pathChanged, this.onPathChanged);\n    this.parent.off(events.pasteEnd, this.onpasteEnd);\n    this.parent.off(events.cutEnd, this.onCutEnd);\n    this.parent.off(events.pasteInit, this.onpasteInit);\n    this.parent.off(events.updateTreeSelection, this.onSelectionChanged);\n    this.parent.off(events.nodeExpand, this.onNodeExpanded);\n    this.parent.off(events.createEnd, this.onCreateEnd);\n    this.parent.off(events.refreshEnd, this.onRefreshEnd);\n    this.parent.off(events.openInit, this.onOpenInit);\n    this.parent.off(events.openEnd, this.onOpenEnd);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.renameInit, this.onRenameInit);\n    this.parent.off(events.renameEnd, this.onRenameEnd);\n    this.parent.off(events.renameEndParent, this.onRenameEndParent);\n    this.parent.off(events.clearPathInit, this.onClearPathInit);\n    this.parent.off(events.deleteInit, this.onDeleteInit);\n    this.parent.off(events.deleteEnd, this.onDeleteEnd);\n    this.parent.off(events.cutCopyInit, this.oncutCopyInit);\n    this.parent.off(events.dropInit, this.onDropInit);\n    this.parent.off(events.dragEnd, this.onDragEnd);\n    this.parent.off(events.dragging, this.onDragging);\n    this.parent.off(events.dropPath, this.onDropPath);\n    this.parent.off(events.detailsInit, this.onDetailsInit);\n    this.parent.off(events.menuItemData, this.onMenuItemData);\n    this.parent.off(events.pathDrag, this.onPathDrag);\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDetailsInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      // eslint-disable-next-line\n      var dataobj = this.getTreeData(this.treeObj.selectedNodes[0]);\n      this.parent.itemData = dataobj;\n    }\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.onMenuItemData = function (args) {\n    if (this.parent.activeModule === this.getModuleName()) {\n      var liEle = closest(args.target, 'li');\n      this.parent.itemData = this.getTreeData(liEle.getAttribute('data-uid'));\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDragging = function (args) {\n    var ele = closest(args.target, 'li');\n    if (ele.classList.contains('e-node-collapsed')) {\n      this.isDrag = true;\n      var level = parseInt(ele.getAttribute('aria-level'), 10);\n      this.treeObj.expandAll([ele.getAttribute('data-uid')], level + 1);\n      this.isDrag = false;\n    }\n  };\n  NavigationPane.prototype.onDropInit = function (args) {\n    if (this.parent.targetModule === this.getModuleName()) {\n      var dropLi = closest(args.target, 'li');\n      this.parent.dropData = this.getTreeData(dropLi)[0];\n      this.parent.dropPath = this.getDropPath(dropLi, getValue('name', this.parent.dropData));\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} - returns the module name.\n   * @private\n   */\n  NavigationPane.prototype.getModuleName = function () {\n    return 'navigationpane';\n  };\n  NavigationPane.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.removeEventListener();\n    if (this.treeObj) {\n      this.unWireEvents();\n      this.treeObj.destroy();\n    }\n  };\n  NavigationPane.prototype.wireEvents = function () {\n    this.keyboardModule = new KeyboardEvents(this.treeObj.element, {\n      keyAction: this.keyDown.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  };\n  NavigationPane.prototype.unWireEvents = function () {\n    this.keyboardModule.destroy();\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.keyDown = function (e) {\n    var action = e.action;\n    switch (action) {\n      case 'altEnter':\n        this.parent.notify(events.detailsInit, {});\n        GetDetails(this.parent, [], this.parent.path, 'details');\n        break;\n      case 'esc':\n        removeActive(this.parent);\n        break;\n      case 'del':\n        if (this.parent.pathId[0] !== this.activeNode.getAttribute('data-uid')) {\n          this.updateItemData();\n          if (!hasEditAccess(this.parent.itemData[0])) {\n            createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionEdit);\n          } else {\n            this.removeNodes = [];\n            createDialog(this.parent, 'Delete');\n          }\n        }\n        break;\n      case 'ctrlC':\n        copyFiles(this.parent);\n        break;\n      case 'ctrlV':\n        this.parent.folderPath = '';\n        pasteHandler(this.parent);\n        break;\n      case 'ctrlX':\n        cutFiles(this.parent);\n        break;\n      case 'shiftF10':\n        this.updateItemData();\n        if (!hasDownloadAccess(this.parent.itemData[0])) {\n          createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionDownload);\n          return;\n        }\n        if (this.parent.selectedItems.length !== 0) {\n          this.doDownload();\n        }\n        break;\n      case 'f2':\n        if (this.parent.selectedItems.length === 0) {\n          // eslint-disable-next-line\n          var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n          if (!hasEditAccess(data)) {\n            createDeniedDialog(this.parent, data, events.permissionEdit);\n          } else {\n            this.updateRenameData();\n            createDialog(this.parent, 'Rename');\n          }\n        }\n        break;\n    }\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.getTreeData = function (args) {\n    // eslint-disable-next-line\n    var data = this.treeObj.getTreeData(args);\n    for (var i = 0; i < data.length; i++) {\n      if (isNOU(getValue('hasChild', data[i]))) {\n        setValue('hasChild', false, data[i]);\n      }\n    }\n    return data;\n  };\n  NavigationPane.prototype.updateRenameData = function () {\n    this.updateItemData();\n    this.parent.currentItemText = getValue('name', this.parent.itemData[0]);\n  };\n  NavigationPane.prototype.updateItemData = function () {\n    // eslint-disable-next-line\n    var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n    this.parent.itemData = [data];\n    this.parent.isFile = false;\n  };\n  NavigationPane.prototype.updateActionData = function () {\n    this.updateItemData();\n    var newPath = getParentPath(this.parent.path);\n    this.parent.setProperties({\n      path: newPath\n    }, true);\n    this.parent.pathId.pop();\n    this.parent.pathNames.pop();\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.doDownload = function () {\n    var newPath = getParentPath(this.parent.path);\n    var itemId = this.treeObj.selectedNodes[0];\n    var name = itemId === this.parent.pathId[0] ? '' : getValue('name', this.parent.itemData[0]);\n    Download(this.parent, newPath, [name]);\n  };\n  return NavigationPane;\n}();\nexport { NavigationPane };","map":{"version":3,"names":["TreeView","BaseTreeView","isNullOrUndefined","isNOU","select","setValue","getValue","Draggable","KeyboardEvents","closest","DataManager","Query","events","CLS","read","Download","GetDetails","Delete","createDialog","updatePath","getPath","getDirectories","createVirtualDragElement","dragStopHandler","dragStartHandler","draggingHandler","getDirectoryPath","getModule","getPathId","copyFiles","cutFiles","removeActive","pasteHandler","getParentPath","readDropPath","hasEditAccess","createDeniedDialog","hasDownloadAccess","getAccessClass","NavigationPane","parent","removeNodes","moveNames","expandTree","isDrag","isPathDragged","isRenameParent","isRightClick","isSameNodeClicked","isNodeExpandCalled","renameParent","previousSelected","isNodeClickCalled","restrictSelecting","addEventListener","keyConfigs","altEnter","esc","del","ctrlX","isMac","ctrlC","ctrlV","ctrlShiftN","shiftF10","f2","prototype","onInit","treeObj","rootData","pathId","feParent","attr","id","fields","dataSource","parentID","expanded","selected","text","hasChildren","iconCss","htmlAttributes","tooltip","enableHtmlSanitizer","sortOrder","navigationPaneSettings","nodeSelecting","onNodeSelecting","bind","nodeSelected","onNodeSelected","nodeExpanding","onNodeExpand","nodeClicked","onNodeClicked","allowEditing","nodeEditing","onNodeEditing","drawNode","onDrowNode","enableRtl","dataBound","addDragDrop","isStringTemplate","appendTo","element","TREE_ID","wireEvents","_this","isMobile","allowDragAndDrop","dragObj","destroy","cursorAt","dragCursorPosition","dragTarget","FULLROW","distance","dragArea","drag","dragStart","args","dragStop","enableTailMode","enableAutoScroll","helper","dragHelper","sender","target","classList","contains","dragLi","dragPath","dragData","activeElements","dragNodes","getTreeData","getDragPath","name","push","virtualDragElement","path","getDropPath","node","getAttribute","newText","hasId","eventArgs","fileDetails","nodeData","module","trigger","addChild","files","prevent","directories","length","filterPath","length_1","folders","_fm_icon","childElements","addNodes","isInteracted","activeModule","selecEventArgs","action","cancel","selectedNodes","openFileOnContextMenuClick","data","selectedItems","itemData","activeNode","pasteEnd","pathChanged","visitedItem","breadcrumbbarModule","searchObj","value","isFiltered","searchedItems","previousPath","sNode","querySelector","ICONS","LIST_ITEM","expandNodeTarget","onPathDrag","selectResultNode","isId","expandedId","nodeExpand","onNodeExpanded","event","which","setProperties","layout","view","notify","modelChanged","newProp","innerHtml","onPathChanged","isCut","currFiles","feFiles","ul","LIST_PARENT","uploadObj","directoryUpload","updateTree","updateTreeNode","toExpand","expandedNodes","indexOf","removeChildNodes","childs","Array","slice","call","children","onOpenEnd","sleId","expandAll","onOpenInit","onInitialEnd","cwd","onFinalizeEnd","onCreateEnd","onSelectedData","updateItemData","onDeleteInit","updateActionData","name_1","onDeleteEnd","selectedNode","selcetedEle","selectedNodeEle","parentElement","dataBind","onRefreshEnd","onRenameInit","updateRenameData","onRenameEndParent","resultData","executeLocal","where","renamedId","nData","renameText","id_1","onRenameEnd","currentItemText","renameEndParent","replace","onPropertyChanged","e","getModuleName","_i","_a","Object","keys","prop","finalizeEnd","oldProp","onDownLoadInit","doDownload","onSelectionChanged","onClearPathInit","onDragEnd","isPasteError","isSearchDrag","getMoveNames","flag","i","isFile","name_2","previousName","index","lastIndexOf","substring","j","fPath","onCutEnd","isSearchCut","targetPath","resultObj","itemname","filter","obj","onDropPath","onpasteEnd","dropData","isDropEnd","isDragDrop","checkDropPath","dropPath","onpasteInit","actionRecords","oncutCopyInit","activeRecords","on","downloadInit","initialEnd","cutEnd","pasteInit","createEnd","selectedData","deleteInit","deleteEnd","refreshEnd","updateTreeSelection","openInit","openEnd","renameInit","renameEnd","clearPathInit","cutCopyInit","dropInit","onDropInit","menuItemData","onMenuItemData","dragEnd","dragging","onDragging","detailsInit","onDetailsInit","pathDrag","removeEventListener","off","dataobj","liEle","ele","level","parseInt","targetModule","dropLi","isDestroyed","unWireEvents","keyboardModule","keyAction","keyDown","eventName","permissionEdit","folderPath","permissionDownload","newPath","pop","pathNames","itemId"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-filemanager/src/file-manager/layout/navigation-pane.js"],"sourcesContent":["import { TreeView as BaseTreeView } from '@syncfusion/ej2-navigations';\nimport { isNullOrUndefined as isNOU, select, setValue, getValue, Draggable } from '@syncfusion/ej2-base';\nimport { KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport * as CLS from '../base/classes';\nimport { read, Download, GetDetails, Delete } from '../common/operations';\nimport { createDialog } from '../pop-up/dialog';\nimport { updatePath, getPath, getDirectories } from '../common/utility';\nimport { createVirtualDragElement, dragStopHandler, dragStartHandler, draggingHandler, getDirectoryPath, getModule, getPathId } from '../common/index';\nimport { copyFiles, cutFiles, removeActive, pasteHandler, getParentPath, readDropPath } from '../common/index';\nimport { hasEditAccess, createDeniedDialog, hasDownloadAccess, getAccessClass } from '../common/index';\n/**\n * NavigationPane module\n */\nvar NavigationPane = /** @class */ (function () {\n    /**\n     * Constructor for the TreeView module\n     *\n     * @param {IFileManager} parent - specifies the parent element.\n     * @hidden\n     */\n    /* istanbul ignore next */\n    function NavigationPane(parent) {\n        this.removeNodes = [];\n        this.moveNames = [];\n        this.expandTree = false;\n        this.isDrag = false;\n        this.isPathDragged = false;\n        this.isRenameParent = false;\n        this.isRightClick = false;\n        this.isSameNodeClicked = false;\n        this.isNodeExpandCalled = false;\n        this.renameParent = null;\n        // Specifies the previously selected nodes in the treeview control.\n        this.previousSelected = null;\n        // Specifies whether the nodeClicked event of the treeview control is triggered or not.\n        this.isNodeClickCalled = false;\n        // Specifies whether to restrict node selection in the treeview control.\n        this.restrictSelecting = false;\n        this.parent = parent;\n        this.addEventListener();\n        this.keyConfigs = {\n            altEnter: 'alt+enter',\n            esc: 'escape',\n            del: 'delete',\n            ctrlX: this.parent.isMac ? 'cmd+x' : 'ctrl+x',\n            ctrlC: this.parent.isMac ? 'cmd+c' : 'ctrl+c',\n            ctrlV: this.parent.isMac ? 'cmd+v' : 'ctrl+v',\n            ctrlShiftN: 'ctrl+shift+n',\n            shiftF10: 'shift+F10',\n            f2: 'f2'\n        };\n    }\n    NavigationPane.prototype.onInit = function () {\n        if (!isNOU(this.treeObj)) {\n            return;\n        }\n        // eslint-disable-next-line\n        var rootData = getValue(this.parent.pathId[0], this.parent.feParent);\n        setValue('_fm_icon', 'e-fe-folder', rootData);\n        // eslint-disable-next-line\n        var attr = {};\n        var id = getValue('id', rootData);\n        if (!isNOU(id)) {\n            setValue('data-id', id, attr);\n        }\n        if (!hasEditAccess(rootData)) {\n            setValue('class', getAccessClass(rootData), attr);\n        }\n        if (!isNOU(attr)) {\n            setValue('_fm_htmlAttr', attr, rootData);\n        }\n        this.treeObj = new BaseTreeView({\n            fields: {\n                dataSource: [rootData], id: '_fm_id', parentID: '_fm_pId', expanded: '_fm_expanded', selected: '_fm_selected', text: 'name',\n                hasChildren: 'hasChild', iconCss: '_fm_icon', htmlAttributes: '_fm_htmlAttr', tooltip: 'name'\n            },\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            sortOrder: this.parent.navigationPaneSettings.sortOrder,\n            nodeSelecting: this.onNodeSelecting.bind(this),\n            nodeSelected: this.onNodeSelected.bind(this),\n            nodeExpanding: this.onNodeExpand.bind(this),\n            nodeClicked: this.onNodeClicked.bind(this),\n            allowEditing: true,\n            nodeEditing: this.onNodeEditing.bind(this),\n            drawNode: this.onDrowNode.bind(this),\n            enableRtl: this.parent.enableRtl,\n            dataBound: this.addDragDrop.bind(this)\n        });\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parent.element.id + CLS.TREE_ID);\n        this.wireEvents();\n    };\n    NavigationPane.prototype.addDragDrop = function () {\n        var _this = this;\n        if (!this.parent.isMobile && this.treeObj) {\n            if (this.parent.allowDragAndDrop) {\n                if (this.dragObj) {\n                    this.dragObj.destroy();\n                }\n                this.dragObj = new Draggable(this.treeObj.element, {\n                    cursorAt: this.parent.dragCursorPosition,\n                    dragTarget: '.' + CLS.FULLROW,\n                    distance: 5,\n                    dragArea: this.parent.element,\n                    drag: draggingHandler.bind(this, this.parent),\n                    dragStart: function (args) {\n                        dragStartHandler(_this.parent, args, _this.dragObj);\n                    },\n                    dragStop: dragStopHandler.bind(this, this.parent),\n                    enableTailMode: true,\n                    enableAutoScroll: false,\n                    helper: this.dragHelper.bind(this)\n                });\n            }\n            else if (!this.parent.allowDragAndDrop && this.dragObj) {\n                this.dragObj.destroy();\n            }\n        }\n    };\n    NavigationPane.prototype.dragHelper = function (args) {\n        var dragTarget = args.sender.target;\n        if (!dragTarget.classList.contains(CLS.FULLROW)) {\n            return null;\n        }\n        var dragLi = closest(dragTarget, 'li');\n        this.parent.dragPath = '';\n        this.parent.dragData = [];\n        this.parent.activeElements = [];\n        this.parent.activeElements = [dragLi];\n        this.parent.dragNodes = [];\n        getModule(this.parent, dragLi);\n        // eslint-disable-next-line\n        this.parent.dragData = this.getTreeData(dragLi);\n        this.parent.dragPath = this.getDragPath(dragLi, this.parent.dragData[0].name);\n        this.parent.dragNodes.push(this.parent.dragData[0].name);\n        createVirtualDragElement(this.parent);\n        return this.parent.virtualDragElement;\n    };\n    NavigationPane.prototype.getDragPath = function (dragLi, text) {\n        var path = this.getDropPath(dragLi, text);\n        return getParentPath(path);\n    };\n    NavigationPane.prototype.getDropPath = function (node, text) {\n        var id = node.getAttribute('data-id');\n        var newText = this.parent.hasId ? id : text;\n        return getPath(node, newText, this.parent.hasId);\n    };\n    NavigationPane.prototype.onDrowNode = function (args) {\n        var eventArgs = {\n            element: args.node,\n            fileDetails: args.nodeData,\n            module: 'NavigationPane'\n        };\n        this.parent.trigger('fileLoad', eventArgs);\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.addChild = function (files, target, prevent) {\n        // eslint-disable-next-line\n        var directories = getDirectories(files);\n        if (directories.length > 0 &&\n            (directories[0].filterPath == null || this.getTreeData(target)[0].filterPath == null || directories[0].filterPath !== this.getTreeData(target)[0].filterPath)) {\n            var length_1 = 0;\n            // eslint-disable-next-line\n            var folders = directories;\n            while (length_1 < directories.length) {\n                // eslint-disable-next-line\n                folders[length_1]._fm_icon = 'e-fe-folder';\n                // eslint-disable-next-line\n                var attr = {};\n                var id = getValue('id', folders[length_1]);\n                if (!isNOU(id)) {\n                    setValue('data-id', id, attr);\n                }\n                if (!hasEditAccess(folders[length_1])) {\n                    setValue('class', getAccessClass(folders[length_1]), attr);\n                }\n                if (!isNOU(attr)) {\n                    setValue('_fm_htmlAttr', attr, folders[length_1]);\n                }\n                length_1++;\n            }\n            var element = select('[data-uid=\"' + target + '\"]', this.treeObj.element);\n            var childElements = select('ul', element);\n            if (isNOU(childElements)) {\n                // eslint-disable-next-line\n                this.treeObj.addNodes(directories, target, null, prevent);\n            }\n        }\n    };\n    // Node Selecting event handler\n    NavigationPane.prototype.onNodeSelecting = function (args) {\n        if (!args.isInteracted && !this.isRightClick && !this.isSameNodeClicked && !this.isPathDragged && !this.isRenameParent || this.restrictSelecting) {\n            this.restrictSelecting = false;\n            this.isNodeClickCalled = false;\n            return;\n        }\n        if (!this.renameParent) {\n            this.parent.activeModule = 'navigationpane';\n            // eslint-disable-next-line\n            var nodeData = this.getTreeData(getValue('id', args.nodeData));\n            if (args.node.getAttribute('data-uid') !== this.parent.pathId[this.parent.pathId.length - 1] && !this.isRightClick && !this.isNodeClickCalled || this.isSameNodeClicked) {\n                this.isNodeClickCalled = false;\n                if (!this.isSameNodeClicked) {\n                    this.isSameNodeClicked = true;\n                    var selecEventArgs = { action: args.action, fileDetails: nodeData[0], isInteracted: args.isInteracted };\n                    this.parent.trigger('fileSelect', selecEventArgs);\n                }\n                if (!this.isRightClick) {\n                    var eventArgs = { cancel: false, fileDetails: nodeData[0], module: 'NavigationPane' };\n                    this.parent.trigger('fileOpen', eventArgs);\n                    args.cancel = eventArgs.cancel;\n                }\n                if (args.cancel) {\n                    this.restrictSelecting = this.isNodeClickCalled ? this.previousSelected[0] !== args.node.getAttribute('data-uid') : false;\n                    this.isNodeClickCalled = true;\n                    this.isSameNodeClicked = false;\n                    this.previousSelected = this.treeObj.selectedNodes;\n                    this.treeObj.selectedNodes = [args.node.getAttribute(\"data-uid\")];\n                }\n            }\n            else if (this.previousSelected[0] !== args.node.getAttribute('data-uid')) {\n                var selecEventArgs = { action: args.action, fileDetails: nodeData[0], isInteracted: this.isNodeClickCalled };\n                this.parent.trigger('fileSelect', selecEventArgs);\n            }\n        }\n    };\n    // Opens the folder while clicking open context menu item in the treeview.\n    NavigationPane.prototype.openFileOnContextMenuClick = function (node) {\n        var data = this.treeObj.getTreeData(node);\n        // eslint-disable-next-line\n        this.parent.selectedItems = [];\n        this.parent.itemData = data;\n        this.activeNode = node;\n        this.parent.activeModule = 'navigationpane';\n        var eventArgs = { cancel: false, fileDetails: data[0], module: 'NavigationPane' };\n        this.parent.trigger('fileOpen', eventArgs);\n        this.isNodeClickCalled = true;\n        if (!eventArgs.cancel) {\n            updatePath(node, this.parent.itemData[0], this.parent);\n            read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n            this.parent.visitedItem = node;\n            this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n            this.treeObj.selectedNodes = [node.getAttribute('data-uid')];\n        }\n    };\n    NavigationPane.prototype.onNodeSelected = function (args) {\n        if (this.parent.breadcrumbbarModule && this.parent.breadcrumbbarModule.searchObj && !this.renameParent) {\n            this.parent.breadcrumbbarModule.searchObj.element.value = '';\n            this.parent.isFiltered = false;\n            this.isNodeClickCalled = false;\n        }\n        this.parent.searchedItems = [];\n        if (!args.isInteracted && !this.isRightClick && !this.isSameNodeClicked && !this.isPathDragged && !this.isRenameParent) {\n            this.parent.pathId = getPathId(args.node);\n            return;\n        }\n        this.activeNode = args.node;\n        this.parent.activeModule = 'navigationpane';\n        // eslint-disable-next-line\n        var nodeData = this.getTreeData(getValue('id', args.nodeData));\n        this.parent.selectedItems = [];\n        this.parent.itemData = nodeData;\n        var previousPath = this.parent.path;\n        var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n        if (!this.isRightClick && this.isSameNodeClicked) {\n            updatePath(args.node, this.parent.itemData[0], this.parent);\n        }\n        else {\n            this.parent.pathId = getPathId(args.node);\n            this.parent.visitedItem = args.node;\n        }\n        if (args.node.querySelector('.' + CLS.ICONS) && args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n            this.expandNodeTarget = 'add';\n        }\n        if (previousPath !== this.parent.path) {\n            if (!this.isRightClick && this.isSameNodeClicked) {\n                read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n                this.isNodeClickCalled = true;\n            }\n            this.parent.visitedItem = args.node;\n        }\n        this.isPathDragged = this.isRenameParent = this.isRightClick = this.isSameNodeClicked = false;\n    };\n    /* istanbul ignore next */\n    // eslint-disable-next-line\n    NavigationPane.prototype.onPathDrag = function (args) {\n        this.isPathDragged = true;\n        this.selectResultNode(args[0]);\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeExpand = function (args) {\n        if (!args.isInteracted && !this.isDrag) {\n            return;\n        }\n        if (args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n            var text = getValue('text', args.nodeData);\n            var id = args.node.getAttribute('data-id');\n            var isId = isNOU(id) ? false : true;\n            var newText = isNOU(id) ? text : id;\n            var path = getPath(args.node, newText, isId);\n            this.expandNodeTarget = args.node.getAttribute('data-uid');\n            this.parent.expandedId = this.expandNodeTarget;\n            this.parent.itemData = this.getTreeData(getValue('id', args.nodeData));\n            this.parent.pathId.push(getValue('id', args.nodeData));\n            read(this.parent, events.nodeExpand, path);\n            this.isNodeExpandCalled = true;\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeExpanded = function (args) {\n        this.addChild(args.files, this.expandNodeTarget, false);\n        this.parent.expandedId = null;\n        this.isNodeExpandCalled = false;\n    };\n    NavigationPane.prototype.onNodeClicked = function (args) {\n        this.parent.activeModule = 'navigationpane';\n        this.previousSelected = this.treeObj.selectedNodes;\n        this.activeNode = args.node;\n        if ((args.event.which === 3) && (args.node.getAttribute('data-uid') !== this.treeObj.selectedNodes[0])) {\n            this.isRightClick = true;\n            this.isNodeClickCalled = true;\n            this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n        }\n        else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && this.parent.selectedItems.length !== 0) {\n            this.parent.setProperties({ selectedItems: [] }, true);\n            var layout = (this.parent.view === 'LargeIcons') ? 'largeiconsview' : 'detailsview';\n            this.parent.notify(events.modelChanged, { module: layout, newProp: { selectedItems: [] } });\n        }\n        else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && !this.isNodeClickCalled && !this.isNodeExpandCalled) {\n            if (args.event.which === 3) {\n                this.isRightClick = true;\n            }\n            this.isSameNodeClicked = true;\n            this.isNodeClickCalled = true;\n            this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeEditing = function (args) {\n        if (!isNOU(args.innerHtml)) {\n            args.cancel = true;\n        }\n    };\n    NavigationPane.prototype.onPathChanged = function (args) {\n        this.parent.isCut = false;\n        // eslint-disable-next-line\n        var currFiles = getValue(this.parent.pathId[this.parent.pathId.length - 1], this.parent.feFiles);\n        if (this.expandNodeTarget === 'add') {\n            var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n            var ul = (!isNOU(sNode)) ? select('.' + CLS.LIST_PARENT, sNode) : null;\n            if (isNOU(ul)) {\n                this.addChild(args.files, this.treeObj.selectedNodes[0], !this.expandTree);\n            }\n            this.expandNodeTarget = '';\n        }\n        this.expandTree = false;\n        if (isNOU(currFiles)) {\n            setValue(this.parent.pathId[this.parent.pathId.length - 1], args.files, this.parent.feFiles);\n        }\n        if (this.parent.uploadObj.directoryUpload && !(this.parent.hasId)) {\n            this.updateTree(args);\n        }\n    };\n    NavigationPane.prototype.updateTree = function (args) {\n        if (this.treeObj) {\n            var id = this.treeObj.selectedNodes[0];\n            this.updateTreeNode(args, id);\n        }\n    };\n    NavigationPane.prototype.updateTreeNode = function (args, id) {\n        var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1 ? false : true;\n        this.removeChildNodes(id);\n        this.addChild(args.files, id, !toExpand);\n    };\n    NavigationPane.prototype.removeChildNodes = function (id) {\n        var sNode = select('[data-uid=\"' + id + '\"]', this.treeObj.element);\n        var parent = select('.' + CLS.LIST_PARENT, sNode);\n        var childs = parent ? Array.prototype.slice.call(parent.children) : null;\n        if (childs) {\n            this.treeObj.removeNodes(childs);\n        }\n    };\n    NavigationPane.prototype.onOpenEnd = function (args) {\n        var sleId = this.parent.pathId[this.parent.pathId.length - 1];\n        this.treeObj.expandAll(this.treeObj.selectedNodes);\n        this.treeObj.selectedNodes = [sleId];\n        this.expandNodeTarget = 'add';\n        this.onPathChanged(args);\n    };\n    NavigationPane.prototype.onOpenInit = function (args) {\n        if (this.parent.activeModule === 'navigationpane') {\n            if (args.target.querySelector('.' + CLS.ICONS)) {\n                this.treeObj.expandAll(this.treeObj.selectedNodes);\n            }\n        }\n    };\n    NavigationPane.prototype.onInitialEnd = function (args) {\n        this.onInit();\n        this.addChild(args.files, getValue('_fm_id', args.cwd), false);\n    };\n    NavigationPane.prototype.onFinalizeEnd = function (args) {\n        this.onInit();\n        var id = getValue('_fm_id', args.cwd);\n        this.addChild(args.files, id, false);\n        this.treeObj.selectedNodes = [this.parent.pathId[this.parent.pathId.length - 1]];\n    };\n    NavigationPane.prototype.onCreateEnd = function (args) {\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onSelectedData = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateItemData();\n        }\n    };\n    NavigationPane.prototype.onDeleteInit = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateActionData();\n            var name_1 = getValue('name', this.parent.itemData[0]);\n            Delete(this.parent, [name_1], this.parent.path, 'delete');\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDeleteEnd = function (args) {\n        if (this.parent.activeModule === 'navigationpane') {\n            var selectedNode = this.treeObj.selectedNodes[0];\n            var selcetedEle = select('[data-uid=\"' + selectedNode + '\"]', this.treeObj.element);\n            var selectedNodeEle = closest(selcetedEle, '.' + CLS.LIST_PARENT).parentElement;\n            this.treeObj.selectedNodes = [selectedNodeEle.getAttribute('data-uid')];\n            this.treeObj.dataBind();\n        }\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onRefreshEnd = function (args) {\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onRenameInit = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateRenameData();\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onRenameEndParent = function (args) {\n        var id = this.renameParent ? this.renameParent : this.parent.pathId[this.parent.pathId.length - 1];\n        this.expandTree = this.treeObj.expandedNodes.indexOf(this.treeObj.selectedNodes[0]) !== -1;\n        this.updateTreeNode(args, id);\n        this.parent.expandedId = null;\n        if (this.renameParent) {\n            this.renameParent = null;\n        }\n        else {\n            // eslint-disable-next-line\n            var resultData = [];\n            if (this.parent.hasId) {\n                resultData = new DataManager(this.treeObj.getTreeData()).\n                    executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n            }\n            else {\n                // eslint-disable-next-line\n                var nData = new DataManager(this.treeObj.getTreeData()).\n                    executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.renameText, false));\n                if (nData.length > 0) {\n                    resultData = new DataManager(nData).\n                        executeLocal(new Query().where('_fm_pId', 'equal', id, false));\n                }\n            }\n            if (resultData.length > 0) {\n                var id_1 = getValue(this.treeObj.fields.id, resultData[0]);\n                this.treeObj.selectedNodes = [id_1];\n                this.treeObj.dataBind();\n            }\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onRenameEnd = function (args) {\n        if (this.parent.breadcrumbbarModule.searchObj.element.value === '' && !this.parent.isFiltered) {\n            this.updateTree(args);\n        }\n        else {\n            // eslint-disable-next-line\n            var data = this.treeObj.getTreeData();\n            // eslint-disable-next-line\n            var resultData = [];\n            if (this.parent.hasId) {\n                resultData = new DataManager(data).\n                    executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n            }\n            else {\n                // eslint-disable-next-line\n                var nData = new DataManager(data).\n                    executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.currentItemText, false));\n                if (nData.length > 0) {\n                    resultData = new DataManager(nData).\n                        executeLocal(new Query().where('filterPath', 'equal', this.parent.filterPath, false));\n                }\n            }\n            if (resultData.length > 0) {\n                this.renameParent = getValue(this.treeObj.fields.parentID, resultData[0]);\n                this.parent.expandedId = this.renameParent;\n                this.parent.itemData = this.getTreeData(this.renameParent);\n                read(this.parent, events.renameEndParent, this.parent.filterPath.replace(/\\\\/g, '/'));\n            }\n        }\n    };\n    NavigationPane.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName() && e.module !== 'common') {\n            /* istanbul ignore next */\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(e.newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowDragAndDrop':\n                    this.addDragDrop();\n                    break;\n                case 'navigationPaneSettings':\n                    read(this.parent, events.finalizeEnd, '/');\n                    if (e.oldProp.navigationPaneSettings.sortOrder !== e.newProp.navigationPaneSettings.sortOrder) {\n                        this.treeObj.sortOrder = e.newProp.navigationPaneSettings.sortOrder;\n                    }\n                    break;\n            }\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDownLoadInit = function () {\n        this.doDownload();\n    };\n    NavigationPane.prototype.onSelectionChanged = function (e) {\n        this.treeObj.selectedNodes = [e.selectedNode];\n    };\n    NavigationPane.prototype.onClearPathInit = function (e) {\n        this.removeChildNodes(e.selectedNode);\n    };\n    NavigationPane.prototype.onDragEnd = function (args) {\n        var moveNames = [];\n        if (this.parent.isPasteError || this.parent.isSearchDrag) {\n            moveNames = this.getMoveNames(args.files, this.parent.isSearchDrag, this.parent.dragPath);\n        }\n        else {\n            moveNames = this.moveNames;\n        }\n        this.treeObj.removeNodes(moveNames);\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.getMoveNames = function (files, flag, path) {\n        var moveNames = [];\n        for (var i = 0; i < files.length; i++) {\n            if (!files[i].isFile) {\n                if (!this.parent.hasId) {\n                    var name_2 = (files[i].previousName);\n                    if (flag) {\n                        path = path + files[i].previousName;\n                        var index = path.lastIndexOf('/');\n                        name_2 = path.substring(index + 1);\n                        path = path.substring(0, index + 1);\n                    }\n                    // eslint-disable-next-line\n                    var resultData = new DataManager(this.treeObj.getTreeData()).\n                        executeLocal(new Query().where(this.treeObj.fields.text, 'equal', name_2, false));\n                    for (var j = 0; j < resultData.length; j++) {\n                        var fPath = getValue('filterPath', resultData[j]);\n                        fPath = fPath.replace(/\\\\/g, '/');\n                        if (fPath === path) {\n                            moveNames.push(getValue(this.treeObj.fields.id, resultData[j]));\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return moveNames;\n    };\n    NavigationPane.prototype.onCutEnd = function (args) {\n        var moveNames = [];\n        if (this.parent.isPasteError || this.parent.isSearchCut) {\n            this.moveNames = this.getMoveNames(args.files, this.parent.isSearchCut, this.parent.targetPath);\n        }\n        else {\n            moveNames = this.moveNames;\n        }\n        this.treeObj.removeNodes(moveNames);\n    };\n    /* istanbul ignore next */\n    // eslint-disable-next-line\n    NavigationPane.prototype.selectResultNode = function (resultObj) {\n        if (!this.parent.hasId) {\n            var path = getValue('filterPath', resultObj);\n            var itemname = getValue('name', resultObj);\n            // eslint-disable-next-line\n            var data = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where(this.treeObj.fields.text, 'equal', itemname, false));\n            if (data.length > 0) {\n                // eslint-disable-next-line\n                var resultData = new DataManager(data).\n                    executeLocal(new Query().where('filterPath', 'equal', path, false));\n                if (resultData.length > 0) {\n                    var id = getValue(this.treeObj.fields.id, resultData[0]);\n                    this.treeObj.selectedNodes = [id];\n                    this.treeObj.dataBind();\n                }\n            }\n        }\n        else {\n            var selectedNode = this.treeObj.getTreeData().filter(function (obj) { return obj.name === resultObj.name; })[0];\n            this.treeObj.selectedNodes = [getValue('_fm_id', selectedNode)];\n            this.treeObj.dataBind();\n        }\n    };\n    NavigationPane.prototype.onDropPath = function (args) {\n        this.onpasteEnd(args);\n        this.selectResultNode(this.parent.dropData);\n        this.parent.isDropEnd = !this.parent.isPasteError;\n    };\n    NavigationPane.prototype.onpasteEnd = function (args) {\n        // eslint-disable-next-line\n        var resultData = [];\n        if (this.parent.hasId) {\n            resultData = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where('id', 'equal', getValue('id', args.cwd), false));\n        }\n        else {\n            // eslint-disable-next-line\n            var nData = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where(this.treeObj.fields.text, 'equal', getValue('name', args.cwd), false));\n            if (nData.length > 0) {\n                resultData = new DataManager(nData).\n                    executeLocal(new Query().where('filterPath', 'equal', getValue('filterPath', args.cwd), false));\n            }\n        }\n        if (resultData.length > 0) {\n            var id = getValue(this.treeObj.fields.id, resultData[0]);\n            var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1;\n            this.removeChildNodes(id);\n            this.addChild(args.files, id, toExpand);\n        }\n        this.parent.expandedId = null;\n        this.onPathChanged(args);\n        if (this.parent.isDragDrop) {\n            this.checkDropPath(args);\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.checkDropPath = function (args) {\n        if (this.parent.hasId) {\n            this.parent.isDropEnd = !this.parent.isPasteError;\n            readDropPath(this.parent);\n            return;\n        }\n        if ((this.parent.dropPath.indexOf(getDirectoryPath(this.parent, args)) === -1)) {\n            this.parent.isDropEnd = false;\n            readDropPath(this.parent);\n        }\n        else {\n            this.parent.isDropEnd = !this.parent.isPasteError;\n        }\n    };\n    NavigationPane.prototype.onpasteInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            this.updateItemData();\n        }\n        this.moveNames = [];\n        // eslint-disable-next-line\n        var obj = this.parent.isDragDrop ? this.parent.dragData : this.parent.actionRecords;\n        for (var i = 0; i < obj.length; i++) {\n            if (getValue('isFile', obj[i]) === false) {\n                this.moveNames.push(getValue('_fm_id', obj[i]));\n            }\n        }\n    };\n    NavigationPane.prototype.oncutCopyInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            this.parent.activeRecords = this.getTreeData(this.treeObj.selectedNodes[0]);\n            this.parent.activeElements = [this.activeNode];\n        }\n    };\n    NavigationPane.prototype.addEventListener = function () {\n        this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.downloadInit, this.onDownLoadInit, this);\n        this.parent.on(events.initialEnd, this.onInitialEnd, this);\n        this.parent.on(events.finalizeEnd, this.onFinalizeEnd, this);\n        this.parent.on(events.pathChanged, this.onPathChanged, this);\n        this.parent.on(events.pasteEnd, this.onpasteEnd, this);\n        this.parent.on(events.cutEnd, this.onCutEnd, this);\n        this.parent.on(events.pasteInit, this.onpasteInit, this);\n        this.parent.on(events.nodeExpand, this.onNodeExpanded, this);\n        this.parent.on(events.createEnd, this.onCreateEnd, this);\n        this.parent.on(events.selectedData, this.onSelectedData, this);\n        this.parent.on(events.deleteInit, this.onDeleteInit, this);\n        this.parent.on(events.deleteEnd, this.onDeleteEnd, this);\n        this.parent.on(events.refreshEnd, this.onRefreshEnd, this);\n        this.parent.on(events.updateTreeSelection, this.onSelectionChanged, this);\n        this.parent.on(events.openInit, this.onOpenInit, this);\n        this.parent.on(events.openEnd, this.onOpenEnd, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.renameInit, this.onRenameInit, this);\n        this.parent.on(events.renameEnd, this.onRenameEnd, this);\n        this.parent.on(events.renameEndParent, this.onRenameEndParent, this);\n        this.parent.on(events.clearPathInit, this.onClearPathInit, this);\n        this.parent.on(events.cutCopyInit, this.oncutCopyInit, this);\n        this.parent.on(events.dropInit, this.onDropInit, this);\n        this.parent.on(events.menuItemData, this.onMenuItemData, this);\n        this.parent.on(events.dragEnd, this.onDragEnd, this);\n        this.parent.on(events.dragging, this.onDragging, this);\n        this.parent.on(events.dropPath, this.onDropPath, this);\n        this.parent.on(events.detailsInit, this.onDetailsInit, this);\n        this.parent.on(events.pathDrag, this.onPathDrag, this);\n    };\n    NavigationPane.prototype.removeEventListener = function () {\n        this.parent.off(events.initialEnd, this.onInitialEnd);\n        this.parent.off(events.downloadInit, this.onDownLoadInit);\n        this.parent.off(events.finalizeEnd, this.onFinalizeEnd);\n        this.parent.off(events.selectedData, this.onSelectedData);\n        this.parent.off(events.modelChanged, this.onPropertyChanged);\n        this.parent.off(events.pathChanged, this.onPathChanged);\n        this.parent.off(events.pasteEnd, this.onpasteEnd);\n        this.parent.off(events.cutEnd, this.onCutEnd);\n        this.parent.off(events.pasteInit, this.onpasteInit);\n        this.parent.off(events.updateTreeSelection, this.onSelectionChanged);\n        this.parent.off(events.nodeExpand, this.onNodeExpanded);\n        this.parent.off(events.createEnd, this.onCreateEnd);\n        this.parent.off(events.refreshEnd, this.onRefreshEnd);\n        this.parent.off(events.openInit, this.onOpenInit);\n        this.parent.off(events.openEnd, this.onOpenEnd);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.renameInit, this.onRenameInit);\n        this.parent.off(events.renameEnd, this.onRenameEnd);\n        this.parent.off(events.renameEndParent, this.onRenameEndParent);\n        this.parent.off(events.clearPathInit, this.onClearPathInit);\n        this.parent.off(events.deleteInit, this.onDeleteInit);\n        this.parent.off(events.deleteEnd, this.onDeleteEnd);\n        this.parent.off(events.cutCopyInit, this.oncutCopyInit);\n        this.parent.off(events.dropInit, this.onDropInit);\n        this.parent.off(events.dragEnd, this.onDragEnd);\n        this.parent.off(events.dragging, this.onDragging);\n        this.parent.off(events.dropPath, this.onDropPath);\n        this.parent.off(events.detailsInit, this.onDetailsInit);\n        this.parent.off(events.menuItemData, this.onMenuItemData);\n        this.parent.off(events.pathDrag, this.onPathDrag);\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDetailsInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            // eslint-disable-next-line\n            var dataobj = this.getTreeData(this.treeObj.selectedNodes[0]);\n            this.parent.itemData = dataobj;\n        }\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.onMenuItemData = function (args) {\n        if (this.parent.activeModule === this.getModuleName()) {\n            var liEle = closest(args.target, 'li');\n            this.parent.itemData = this.getTreeData(liEle.getAttribute('data-uid'));\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDragging = function (args) {\n        var ele = closest(args.target, 'li');\n        if (ele.classList.contains('e-node-collapsed')) {\n            this.isDrag = true;\n            var level = parseInt(ele.getAttribute('aria-level'), 10);\n            this.treeObj.expandAll([ele.getAttribute('data-uid')], level + 1);\n            this.isDrag = false;\n        }\n    };\n    NavigationPane.prototype.onDropInit = function (args) {\n        if (this.parent.targetModule === this.getModuleName()) {\n            var dropLi = closest(args.target, 'li');\n            this.parent.dropData = this.getTreeData(dropLi)[0];\n            this.parent.dropPath = this.getDropPath(dropLi, getValue('name', this.parent.dropData));\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - returns the module name.\n     * @private\n     */\n    NavigationPane.prototype.getModuleName = function () {\n        return 'navigationpane';\n    };\n    NavigationPane.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n        if (this.treeObj) {\n            this.unWireEvents();\n            this.treeObj.destroy();\n        }\n    };\n    NavigationPane.prototype.wireEvents = function () {\n        this.keyboardModule = new KeyboardEvents(this.treeObj.element, {\n            keyAction: this.keyDown.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    };\n    NavigationPane.prototype.unWireEvents = function () {\n        this.keyboardModule.destroy();\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.keyDown = function (e) {\n        var action = e.action;\n        switch (action) {\n            case 'altEnter':\n                this.parent.notify(events.detailsInit, {});\n                GetDetails(this.parent, [], this.parent.path, 'details');\n                break;\n            case 'esc':\n                removeActive(this.parent);\n                break;\n            case 'del':\n                if (this.parent.pathId[0] !== this.activeNode.getAttribute('data-uid')) {\n                    this.updateItemData();\n                    if (!hasEditAccess(this.parent.itemData[0])) {\n                        createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionEdit);\n                    }\n                    else {\n                        this.removeNodes = [];\n                        createDialog(this.parent, 'Delete');\n                    }\n                }\n                break;\n            case 'ctrlC':\n                copyFiles(this.parent);\n                break;\n            case 'ctrlV':\n                this.parent.folderPath = '';\n                pasteHandler(this.parent);\n                break;\n            case 'ctrlX':\n                cutFiles(this.parent);\n                break;\n            case 'shiftF10':\n                this.updateItemData();\n                if (!hasDownloadAccess(this.parent.itemData[0])) {\n                    createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionDownload);\n                    return;\n                }\n                if (this.parent.selectedItems.length !== 0) {\n                    this.doDownload();\n                }\n                break;\n            case 'f2':\n                if (this.parent.selectedItems.length === 0) {\n                    // eslint-disable-next-line\n                    var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n                    if (!hasEditAccess(data)) {\n                        createDeniedDialog(this.parent, data, events.permissionEdit);\n                    }\n                    else {\n                        this.updateRenameData();\n                        createDialog(this.parent, 'Rename');\n                    }\n                }\n                break;\n        }\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.getTreeData = function (args) {\n        // eslint-disable-next-line\n        var data = this.treeObj.getTreeData(args);\n        for (var i = 0; i < data.length; i++) {\n            if (isNOU(getValue('hasChild', data[i]))) {\n                setValue('hasChild', false, data[i]);\n            }\n        }\n        return data;\n    };\n    NavigationPane.prototype.updateRenameData = function () {\n        this.updateItemData();\n        this.parent.currentItemText = getValue('name', this.parent.itemData[0]);\n    };\n    NavigationPane.prototype.updateItemData = function () {\n        // eslint-disable-next-line\n        var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n        this.parent.itemData = [data];\n        this.parent.isFile = false;\n    };\n    NavigationPane.prototype.updateActionData = function () {\n        this.updateItemData();\n        var newPath = getParentPath(this.parent.path);\n        this.parent.setProperties({ path: newPath }, true);\n        this.parent.pathId.pop();\n        this.parent.pathNames.pop();\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.doDownload = function () {\n        var newPath = getParentPath(this.parent.path);\n        var itemId = this.treeObj.selectedNodes[0];\n        var name = (itemId === this.parent.pathId[0]) ? '' : getValue('name', this.parent.itemData[0]);\n        Download(this.parent, newPath, [name]);\n    };\n    return NavigationPane;\n}());\nexport { NavigationPane };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}