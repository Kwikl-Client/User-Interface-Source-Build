{"ast":null,"code":"import { extend, addClass, removeClass, setValue, closest, select, EventHandler } from '@syncfusion/ej2-base';\nimport { remove, classList } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { parentsUntil, refreshForeignData, getObject, addRemoveEventListener } from '../base/util';\nimport { getCellByColAndRowIndex, addFixedColumnBorder } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport * as literals from '../base/string-literals';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */function () {\n  function BatchEdit(parent, serviceLocator, renderer) {\n    this.cellDetails = {};\n    this.originalCell = {};\n    this.cloneCell = {};\n    this.editNext = false;\n    this.preventSaveCell = false;\n    this.initialRender = true;\n    this.validationColObj = [];\n    /** @hidden */\n    this.addBatchRow = false;\n    this.prevEditedBatchCell = false;\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.renderer = renderer;\n    this.focus = serviceLocator.getService('focus');\n    this.addEventListener();\n  }\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  BatchEdit.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.evtHandlers = [{\n      event: events.click,\n      handler: this.clickHandler\n    }, {\n      event: events.dblclick,\n      handler: this.dblClickHandler\n    }, {\n      event: events.beforeCellFocused,\n      handler: this.onBeforeCellFocused\n    }, {\n      event: events.cellFocused,\n      handler: this.onCellFocused\n    }, {\n      event: events.doubleTap,\n      handler: this.dblClickHandler\n    }, {\n      event: events.keyPressed,\n      handler: this.keyDownHandler\n    }, {\n      event: events.editNextValCell,\n      handler: this.editNextValCell\n    }, {\n      event: events.destroy,\n      handler: this.destroy\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    EventHandler.add(this.parent.element, 'mousedown', this.mouseDownHandler, this);\n    this.dataBoundFunction = this.dataBound.bind(this);\n    this.batchCancelFunction = this.batchCancel.bind(this);\n    this.parent.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.parent.addEventListener(events.batchCancel, this.batchCancelFunction);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  BatchEdit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n    EventHandler.remove(this.parent.element, 'mousedown', this.mouseDownHandler);\n    this.parent.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.parent.removeEventListener(events.batchCancel, this.batchCancelFunction);\n  };\n  BatchEdit.prototype.batchCancel = function () {\n    this.parent.focusModule.restoreFocus();\n  };\n  BatchEdit.prototype.dataBound = function () {\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  BatchEdit.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  BatchEdit.prototype.mouseDownHandler = function (e) {\n    if (!isNullOrUndefined(this.parent.element.querySelector('.e-gridform'))) {\n      this.mouseDownElement = e.target;\n    } else {\n      this.mouseDownElement = undefined;\n    }\n  };\n  BatchEdit.prototype.clickHandler = function (e) {\n    if (!parentsUntil(e.target, this.parent.element.id + '_add', true)) {\n      if (this.parent.isEdit && closest(this.form, 'td') !== closest(e.target, 'td') && isNullOrUndefined(this.mouseDownElement) || this.mouseDownElement === e.target) {\n        this.saveCell();\n        this.editNextValCell();\n      }\n      if (parentsUntil(e.target, literals.rowCell) && !this.parent.isEdit) {\n        this.setCellIdx(e.target);\n      }\n    }\n  };\n  BatchEdit.prototype.dblClickHandler = function (e) {\n    var target = parentsUntil(e.target, literals.rowCell);\n    var tr = parentsUntil(e.target, literals.row);\n    var rowIndex = tr && parseInt(tr.getAttribute(literals.dataRowIndex), 10);\n    var colIndex = target && parseInt(target.getAttribute(literals.dataColIndex), 10);\n    if (!isNullOrUndefined(target) && !isNullOrUndefined(rowIndex) && !isNaN(colIndex) && !target.parentElement.classList.contains(literals.editedRow) && this.parent.getColumns()[parseInt(colIndex.toString(), 10)].allowEditing) {\n      this.editCell(rowIndex, this.parent.getColumns()[parseInt(colIndex.toString(), 10)].field, this.isAddRow(rowIndex));\n    }\n  };\n  BatchEdit.prototype.onBeforeCellFocused = function (e) {\n    if (this.parent.isEdit && this.validateFormObj() && (e.byClick || ['tab', 'shiftTab', 'enter', 'shiftEnter'].indexOf(e.keyArgs.action) > -1)) {\n      e.cancel = true;\n      if (e.byClick) {\n        e.clickArgs.preventDefault();\n      } else {\n        e.keyArgs.preventDefault();\n      }\n    }\n  };\n  BatchEdit.prototype.onCellFocused = function (e) {\n    var clear = (!e.container.isContent || !e.container.isDataCell) && !(this.parent.frozenRows && e.container.isHeader);\n    if (this.parent.focusModule.active) {\n      this.prevEditedBatchCell = this.parent.focusModule.active.matrix.current.toString() === this.prevEditedBatchCellMatrix().toString();\n      this.crtRowIndex = [].slice.call(this.parent.focusModule.active.getTable().rows).indexOf(closest(e.element, 'tr'));\n    }\n    if (!e.byKey || clear) {\n      if (this.parent.isEdit && clear) {\n        this.saveCell();\n      }\n      return;\n    }\n    var _a = e.container.indexes,\n      rowIndex = _a[0],\n      cellIndex = _a[1];\n    var actualIndex = e.element.getAttribute('data-colindex') ? parseInt(e.element.getAttribute('data-colindex')) : cellIndex;\n    if (actualIndex !== cellIndex) {\n      cellIndex = actualIndex;\n    }\n    if (this.parent.frozenRows && e.container.isContent) {\n      rowIndex += (this.parent.getContent().querySelector('.e-hiddenrow') ? 0 : this.parent.frozenRows) + this.parent.getHeaderContent().querySelectorAll('.e-insertedrow').length;\n    }\n    var isEdit = this.parent.isEdit;\n    if (!this.parent.element.getElementsByClassName('e-popup-open').length) {\n      isEdit = isEdit && !this.validateFormObj();\n      switch (e.keyArgs.action) {\n        case 'tab':\n        case 'shiftTab':\n          // eslint-disable-next-line no-case-declarations\n          var indent = this.parent.isRowDragable() && this.parent.isDetail() ? 2 : this.parent.isRowDragable() || this.parent.isDetail() ? 1 : 0;\n          // eslint-disable-next-line no-case-declarations\n          var col = this.parent.getColumns()[cellIndex - indent];\n          if (col && !this.parent.isEdit) {\n            this.editCell(rowIndex, col.field);\n          }\n          if (isEdit || this.parent.isLastCellPrimaryKey) {\n            this.editCellFromIndex(rowIndex, cellIndex);\n          }\n          break;\n        case 'enter':\n        case 'shiftEnter':\n          e.keyArgs.preventDefault();\n          // eslint-disable-next-line no-case-declarations\n          var args = {\n            cancel: false,\n            keyArgs: e.keyArgs\n          };\n          this.parent.notify('beforeFocusCellEdit', args);\n          if (!args.cancel && isEdit) {\n            this.editCell(rowIndex, this.cellDetails.column.field);\n          }\n          break;\n        case 'f2':\n          this.editCellFromIndex(rowIndex, cellIndex);\n          this.focus.focus();\n          break;\n      }\n    }\n  };\n  BatchEdit.prototype.isAddRow = function (index) {\n    return this.parent.getDataRows()[parseInt(index.toString(), 10)].classList.contains('e-insertedrow');\n  };\n  BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {\n    this.cellDetails.rowIndex = rowIdx;\n    this.cellDetails.cellIndex = cellIdx;\n    this.editCell(rowIdx, this.parent.getColumns()[parseInt(cellIdx.toString(), 10)].field, this.isAddRow(rowIdx));\n  };\n  BatchEdit.prototype.closeEdit = function () {\n    var gObj = this.parent;\n    var rows = this.parent.getRowsObject();\n    var argument = {\n      cancel: false,\n      batchChanges: this.getBatchChanges()\n    };\n    gObj.notify(events.beforeBatchCancel, argument);\n    if (argument.cancel) {\n      return;\n    }\n    if (gObj.isEdit) {\n      this.saveCell(true);\n    }\n    this.isAdded = false;\n    gObj.clearSelection();\n    for (var i = 0; i < rows.length; i++) {\n      var isInsert = false;\n      var isDirty = rows[parseInt(i.toString(), 10)].isDirty;\n      isInsert = this.removeBatchElementChanges(rows[parseInt(i.toString(), 10)], isDirty);\n      if (isInsert) {\n        rows.splice(i, 1);\n      }\n      if (isInsert) {\n        i--;\n      }\n    }\n    if (!gObj.getContentTable().querySelector('tr.e-row')) {\n      gObj.renderModule.renderEmptyRow();\n    }\n    var args = {\n      requestType: 'batchCancel',\n      rows: this.parent.getRowsObject()\n    };\n    gObj.notify(events.batchCancel, {\n      rows: this.parent.getRowsObject().length ? this.parent.getRowsObject() : [new Row({\n        isDataRow: true,\n        cells: [new Cell({\n          isDataCell: true,\n          visible: true\n        })]\n      })]\n    });\n    gObj.selectRow(this.cellDetails.rowIndex);\n    this.refreshRowIdx();\n    gObj.notify(events.toolbarRefresh, {});\n    this.parent.notify(events.tooltipDestroy, {});\n    args = {\n      requestType: 'batchCancel',\n      rows: this.parent.getRowsObject()\n    };\n    gObj.trigger(events.batchCancel, args);\n  };\n  BatchEdit.prototype.removeBatchElementChanges = function (row, isDirty) {\n    var gObj = this.parent;\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n    var isInstertedRemoved = false;\n    if (isDirty) {\n      row.isDirty = isDirty;\n      var tr = gObj.getRowElementByUID(row.uid);\n      if (tr) {\n        if (tr.classList.contains('e-insertedrow')) {\n          remove(tr);\n          isInstertedRemoved = true;\n        } else {\n          refreshForeignData(row, this.parent.getForeignKeyColumns(), row.data);\n          delete row.changes;\n          delete row.edit;\n          row.isDirty = false;\n          classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n          rowRenderer.refresh(row, gObj.getColumns(), false);\n        }\n        if (this.parent.aggregates.length > 0) {\n          var type = 'type';\n          var editType = [];\n          editType[\"\" + type] = 'cancel';\n          this.parent.notify(events.refreshFooterRenderer, editType);\n          if (this.parent.groupSettings.columns.length > 0) {\n            this.parent.notify(events.groupAggregates, editType);\n          }\n        }\n      }\n    }\n    return isInstertedRemoved;\n  };\n  BatchEdit.prototype.deleteRecord = function (fieldname, data) {\n    this.saveCell();\n    if (this.validateFormObj()) {\n      this.saveCell(true);\n    }\n    this.isAdded = false;\n    this.bulkDelete(fieldname, data);\n    if (this.parent.aggregates.length > 0) {\n      this.parent.notify(events.refreshFooterRenderer, {});\n      if (this.parent.groupSettings.columns.length > 0) {\n        this.parent.notify(events.groupAggregates, {});\n      }\n    }\n  };\n  BatchEdit.prototype.addRecord = function (data) {\n    this.bulkAddRow(data);\n  };\n  BatchEdit.prototype.endEdit = function () {\n    if (this.parent.isEdit && this.validateFormObj()) {\n      return;\n    }\n    this.batchSave();\n  };\n  BatchEdit.prototype.validateFormObj = function () {\n    return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();\n  };\n  BatchEdit.prototype.batchSave = function () {\n    var gObj = this.parent;\n    var deletedRecords = 'deletedRecords';\n    if (gObj.isCheckBoxSelection) {\n      var checkAllBox = gObj.element.querySelector('.e-checkselectall').parentElement;\n      if (checkAllBox.classList.contains('e-checkbox-disabled') && gObj.pageSettings.totalRecordsCount > gObj.currentViewData.length) {\n        removeClass([checkAllBox], ['e-checkbox-disabled']);\n      }\n    }\n    this.saveCell();\n    if (gObj.isEdit || this.editNextValCell() || gObj.isEdit) {\n      return;\n    }\n    var changes = this.getBatchChanges();\n    if (this.parent.selectionSettings.type === 'Multiple' && changes[\"\" + deletedRecords].length && this.parent.selectionSettings.persistSelection) {\n      changes[\"\" + deletedRecords] = this.removeSelectedData;\n      this.removeSelectedData = [];\n    }\n    var original = {\n      changedRecords: this.parent.getRowsObject().filter(function (row) {\n        return row.isDirty && ['add', 'delete'].indexOf(row.edit) === -1;\n      }).map(function (row) {\n        return row.data;\n      })\n    };\n    var args = {\n      batchChanges: changes,\n      cancel: false\n    };\n    gObj.trigger(events.beforeBatchSave, args, function (beforeBatchSaveArgs) {\n      if (beforeBatchSaveArgs.cancel) {\n        return;\n      }\n      gObj.showSpinner();\n      gObj.notify(events.bulkSave, {\n        changes: changes,\n        original: original\n      });\n    });\n  };\n  BatchEdit.prototype.getBatchChanges = function () {\n    var changes = {\n      addedRecords: [],\n      deletedRecords: [],\n      changedRecords: []\n    };\n    var rows = this.parent.getRowsObject();\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n      if (row.isDirty) {\n        switch (row.edit) {\n          case 'add':\n            changes.addedRecords.push(row.changes);\n            break;\n          case 'delete':\n            changes.deletedRecords.push(row.data);\n            break;\n          default:\n            changes.changedRecords.push(row.changes);\n        }\n      }\n    }\n    return changes;\n  };\n  /**\n   * @param {string} uid - specifes the uid\n   * @returns {void}\n   * @hidden\n   */\n  BatchEdit.prototype.removeRowObjectFromUID = function (uid) {\n    var rows = this.parent.getRowsObject();\n    var i = 0;\n    for (var len = rows.length; i < len; i++) {\n      if (rows[parseInt(i.toString(), 10)].uid === uid) {\n        break;\n      }\n    }\n    rows.splice(i, 1);\n  };\n  /**\n   * @param {Row<Column>} row - specifies the row object\n   * @param {freezeTable} newTableName - specifies the table name\n   * @returns {void}\n   * @hidden\n   */\n  BatchEdit.prototype.addRowObject = function (row) {\n    var gObj = this.parent;\n    var isTop = gObj.editSettings.newRowPosition === 'Top';\n    var rowClone = row.clone();\n    if (isTop) {\n      gObj.getRowsObject().unshift(rowClone);\n    } else {\n      gObj.getRowsObject().push(rowClone);\n    }\n  };\n  // tslint:disable-next-line:max-func-body-length\n  BatchEdit.prototype.bulkDelete = function (fieldname, data) {\n    var _this = this;\n    this.removeSelectedData = [];\n    var gObj = this.parent;\n    var index = gObj.selectedRowIndex;\n    var selectedRows = gObj.getSelectedRows();\n    var args = {\n      primaryKey: this.parent.getPrimaryKeyFieldNames(),\n      rowIndex: index,\n      rowData: data ? data : gObj.getSelectedRecords()[0],\n      cancel: false\n    };\n    if (data) {\n      args.row = gObj.editModule.deleteRowUid ? gObj.getRowElementByUID(gObj.editModule.deleteRowUid) : gObj.getRows()[gObj.getCurrentViewRecords().indexOf(data)];\n    } else {\n      args.row = selectedRows[0];\n    }\n    if (!args.row) {\n      return;\n    }\n    // tslint:disable-next-line:max-func-body-length\n    gObj.trigger(events.beforeBatchDelete, args, function (beforeBatchDeleteArgs) {\n      if (beforeBatchDeleteArgs.cancel) {\n        return;\n      }\n      _this.removeSelectedData = gObj.getSelectedRecords();\n      gObj.clearSelection();\n      beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row ? beforeBatchDeleteArgs.row : data ? gObj.getRows()[parseInt(index.toString(), 10)] : selectedRows[0];\n      if (selectedRows.length === 1 || data) {\n        var uid = beforeBatchDeleteArgs.row.getAttribute('data-uid');\n        uid = data && _this.parent.editModule.deleteRowUid ? uid = _this.parent.editModule.deleteRowUid : uid;\n        if (beforeBatchDeleteArgs.row.classList.contains('e-insertedrow')) {\n          _this.removeRowObjectFromUID(uid);\n          remove(beforeBatchDeleteArgs.row);\n        } else {\n          var rowObj = gObj.getRowObjectFromUID(uid);\n          rowObj.isDirty = true;\n          rowObj.edit = 'delete';\n          classList(beforeBatchDeleteArgs.row, ['e-hiddenrow', 'e-updatedtd'], []);\n          if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n            gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n          }\n        }\n        delete beforeBatchDeleteArgs.row;\n      } else {\n        if (data) {\n          index = parseInt(beforeBatchDeleteArgs.row.getAttribute(literals.dataRowIndex), 10);\n        }\n        for (var i = 0; i < selectedRows.length; i++) {\n          var uniqueid = selectedRows[parseInt(i.toString(), 10)].getAttribute('data-uid');\n          if (selectedRows[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n            _this.removeRowObjectFromUID(uniqueid);\n            remove(selectedRows[parseInt(i.toString(), 10)]);\n          } else {\n            classList(selectedRows[parseInt(i.toString(), 10)], ['e-hiddenrow', 'e-updatedtd'], []);\n            var selectedRow = gObj.getRowObjectFromUID(uniqueid);\n            selectedRow.isDirty = true;\n            selectedRow.edit = 'delete';\n            delete selectedRows[parseInt(i.toString(), 10)];\n            if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n              gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n            }\n          }\n        }\n      }\n      _this.refreshRowIdx();\n      if (data) {\n        gObj.editModule.deleteRowUid = undefined;\n      }\n      if (!gObj.isCheckBoxSelection) {\n        gObj.selectRow(index);\n      }\n      gObj.trigger(events.batchDelete, beforeBatchDeleteArgs);\n      gObj.notify(events.batchDelete, {\n        rows: _this.parent.getRowsObject()\n      });\n      gObj.notify(events.toolbarRefresh, {});\n    });\n  };\n  BatchEdit.prototype.refreshRowIdx = function () {\n    var gObj = this.parent;\n    var rows = gObj.getAllDataRows(true);\n    var dataObjects = gObj.getRowsObject();\n    for (var i = 0, j = 0, len = rows.length; i < len; i++) {\n      if (rows[parseInt(i.toString(), 10)].classList.contains(literals.row) && !rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow')) {\n        rows[parseInt(i.toString(), 10)].setAttribute(literals.dataRowIndex, j.toString());\n        rows[parseInt(i.toString(), 10)].setAttribute(literals.ariaRowIndex, (j + 1).toString());\n        dataObjects[parseInt(i.toString(), 10)].index = j;\n        j++;\n      } else {\n        rows[parseInt(i.toString(), 10)].removeAttribute(literals.dataRowIndex);\n        rows[parseInt(i.toString(), 10)].removeAttribute(literals.ariaRowIndex);\n        dataObjects[parseInt(i.toString(), 10)].index = -1;\n      }\n    }\n  };\n  BatchEdit.prototype.bulkAddRow = function (data) {\n    var _this = this;\n    var gObj = this.parent;\n    if (!gObj.editSettings.allowAdding) {\n      if (gObj.isEdit) {\n        this.saveCell();\n      }\n      return;\n    }\n    if (gObj.isEdit) {\n      this.saveCell();\n      this.parent.notify(events.editNextValCell, {});\n    }\n    if (this.initialRender) {\n      var visibleColumns = gObj.getVisibleColumns();\n      for (var i = 0; i < visibleColumns.length; i++) {\n        if (visibleColumns[parseInt(i.toString(), 10)].validationRules && visibleColumns[parseInt(i.toString(), 10)].validationRules['required']) {\n          var obj = {\n            field: visibleColumns[parseInt(i.toString(), 10)]['field'].slice(),\n            cellIdx: i\n          };\n          this.validationColObj.push(obj);\n        }\n      }\n      this.initialRender = false;\n    }\n    this.parent.element.classList.add('e-editing');\n    var defaultData = data ? data : this.getDefaultData();\n    var args = {\n      defaultData: defaultData,\n      primaryKey: gObj.getPrimaryKeyFieldNames(),\n      cancel: false\n    };\n    gObj.trigger(events.beforeBatchAdd, args, function (beforeBatchAddArgs) {\n      if (beforeBatchAddArgs.cancel) {\n        return;\n      }\n      _this.isAdded = true;\n      gObj.clearSelection();\n      var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n      var model = new RowModelGenerator(_this.parent);\n      var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n      var tr = row.render(modelData[0], gObj.getColumns());\n      addFixedColumnBorder(tr);\n      var col;\n      var index;\n      for (var i = 0; i < _this.parent.groupSettings.columns.length; i++) {\n        tr.insertBefore(_this.parent.createElement('td', {\n          className: 'e-indentcell'\n        }), tr.firstChild);\n        modelData[0].cells.unshift(new Cell({\n          cellType: CellType.Indent\n        }));\n      }\n      var tbody = gObj.getContentTable().querySelector(literals.tbody);\n      tr.classList.add('e-insertedrow');\n      if (tbody.querySelector('.e-emptyrow')) {\n        var emptyRow = tbody.querySelector('.e-emptyrow');\n        emptyRow.parentNode.removeChild(emptyRow);\n        if (gObj.frozenRows && gObj.element.querySelector('.e-frozenrow-empty')) {\n          gObj.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n        }\n      }\n      if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n        tbody = gObj.getHeaderTable().querySelector(literals.tbody);\n      } else {\n        tbody = gObj.getContentTable().querySelector(literals.tbody);\n      }\n      if (_this.parent.editSettings.newRowPosition === 'Top') {\n        tbody.insertBefore(tr, tbody.firstChild);\n      } else {\n        tbody.appendChild(tr);\n      }\n      addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n      modelData[0].isDirty = true;\n      modelData[0].changes = extend({}, {}, modelData[0].data, true);\n      modelData[0].edit = 'add';\n      _this.addRowObject(modelData[0]);\n      _this.refreshRowIdx();\n      _this.focus.forgetPrevious();\n      gObj.notify(events.batchAdd, {\n        rows: _this.parent.getRowsObject()\n      });\n      var changes = _this.getBatchChanges();\n      var btmIdx = _this.getBottomIndex();\n      if (_this.parent.editSettings.newRowPosition === 'Top') {\n        gObj.selectRow(0);\n      } else {\n        gObj.selectRow(btmIdx);\n      }\n      if (!data) {\n        index = _this.findNextEditableCell(0, true);\n        col = gObj.getColumns()[parseInt(index.toString(), 10)];\n        if (_this.parent.editSettings.newRowPosition === 'Top') {\n          _this.editCell(0, col.field, true);\n        } else {\n          _this.editCell(btmIdx, col.field, true);\n        }\n      }\n      if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n        _this.parent.notify(events.refreshFooterRenderer, {});\n      }\n      var args1 = {\n        defaultData: beforeBatchAddArgs.defaultData,\n        row: tr,\n        columnObject: col,\n        columnIndex: index,\n        primaryKey: beforeBatchAddArgs.primaryKey,\n        cell: !isNullOrUndefined(index) ? tr.cells[parseInt(index.toString(), 10)] : undefined\n      };\n      gObj.trigger(events.batchAdd, args1);\n    });\n  };\n  BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd, isValOnly) {\n    var cols = this.parent.getColumns();\n    var endIndex = cols.length;\n    var validation;\n    for (var i = columnIndex; i < endIndex; i++) {\n      validation = isValOnly ? isNullOrUndefined(cols[parseInt(i.toString(), 10)].validationRules) : false;\n      // if (!isAdd && this.checkNPCell(cols[parseInt(i.toString(), 10)])) {\n      //     return i;\n      // } else \n      if (isAdd && (!cols[parseInt(i.toString(), 10)].template || cols[parseInt(i.toString(), 10)].field) && cols[parseInt(i.toString(), 10)].allowEditing && cols[parseInt(i.toString(), 10)].visible && !(cols[parseInt(i.toString(), 10)].isIdentity && cols[parseInt(i.toString(), 10)].isPrimaryKey) && !validation) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  BatchEdit.prototype.getDefaultData = function () {\n    var gObj = this.parent;\n    var data = {};\n    var dValues = {\n      'number': 0,\n      'string': null,\n      'boolean': false,\n      'date': null,\n      'datetime': null\n    };\n    for (var _i = 0, _a = gObj.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n      if (col.field) {\n        setValue(col.field, Object.keys(col).indexOf('defaultValue') >= 0 ? col.defaultValue : dValues[col.type], data);\n      }\n    }\n    return data;\n  };\n  BatchEdit.prototype.setCellIdx = function (target) {\n    var gLen = 0;\n    if (this.parent.allowGrouping) {\n      gLen = this.parent.groupSettings.columns.length;\n    }\n    this.cellDetails.cellIndex = target.cellIndex - gLen;\n    this.cellDetails.rowIndex = parseInt(target.getAttribute('index'), 10);\n  };\n  BatchEdit.prototype.editCell = function (index, field, isAdd) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    this.index = index;\n    this.field = field;\n    this.isAdd = isAdd;\n    var checkEdit = gObj.isEdit && !(this.cellDetails.column.field === field && this.cellDetails.rowIndex === index && this.parent.getDataRows().length - 1 !== index && this.prevEditedBatchCell);\n    if (gObj.editSettings.allowEditing) {\n      if (!checkEdit && (col.allowEditing || !col.allowEditing && gObj.focusModule.active && gObj.focusModule.active.getTable().rows[this.crtRowIndex] && gObj.focusModule.active.getTable().rows[this.crtRowIndex].classList.contains('e-insertedrow'))) {\n        this.editCellExtend(index, field, isAdd);\n      } else if (checkEdit) {\n        this.editNext = true;\n        this.saveCell();\n      }\n    }\n  };\n  BatchEdit.prototype.editCellExtend = function (index, field, isAdd) {\n    var _this = this;\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    var keys = gObj.getPrimaryKeyFieldNames();\n    if (gObj.isEdit) {\n      return;\n    }\n    var rowData = extend({}, {}, this.getDataByIndex(index), true);\n    var row = gObj.getDataRows()[parseInt(index.toString(), 10)];\n    rowData = extend({}, {}, this.getDataByIndex(index), true);\n    if (keys[0] === col.field && !row.classList.contains('e-insertedrow') || col.columns || col.isPrimaryKey && col.isIdentity || col.commands) {\n      this.parent.isLastCellPrimaryKey = true;\n      return;\n    }\n    this.parent.isLastCellPrimaryKey = false;\n    this.parent.element.classList.add('e-editing');\n    var rowObj = gObj.getRowObjectFromUID(row.getAttribute('data-uid'));\n    var cells = [].slice.apply(row.cells);\n    var args = {\n      columnName: col.field,\n      isForeignKey: !isNullOrUndefined(col.foreignKeyValue),\n      primaryKey: keys,\n      rowData: rowData,\n      validationRules: extend({}, col.validationRules ? col.validationRules : {}),\n      value: getObject(col.field, rowData),\n      type: !isAdd ? 'edit' : 'add',\n      cancel: false,\n      foreignKeyData: rowObj && rowObj.foreignKeyData\n    };\n    args.cell = cells[this.getColIndex(cells, this.getCellIdx(col.uid))];\n    args.row = row;\n    args.columnObject = col;\n    if (!args.cell) {\n      return;\n    }\n    gObj.trigger(events.cellEdit, args, function (cellEditArgs) {\n      if (cellEditArgs.cancel) {\n        return;\n      }\n      cellEditArgs.cell = cellEditArgs.cell ? cellEditArgs.cell : cells[_this.getColIndex(cells, _this.getCellIdx(col.uid))];\n      cellEditArgs.row = cellEditArgs.row ? cellEditArgs.row : row;\n      cellEditArgs.columnObject = cellEditArgs.columnObject ? cellEditArgs.columnObject : col;\n      // cellEditArgs.columnObject.index = isNullOrUndefined(cellEditArgs.columnObject.index) ? 0 : cellEditArgs.columnObject.index;\n      _this.cellDetails = {\n        rowData: rowData,\n        column: col,\n        value: cellEditArgs.value,\n        isForeignKey: cellEditArgs.isForeignKey,\n        rowIndex: index,\n        cellIndex: parseInt(cellEditArgs.cell.getAttribute(literals.dataColIndex), 10),\n        foreignKeyData: cellEditArgs.foreignKeyData\n      };\n      if (cellEditArgs.cell.classList.contains('e-updatedtd')) {\n        _this.isColored = true;\n        cellEditArgs.cell.classList.remove('e-updatedtd');\n      }\n      gObj.isEdit = true;\n      gObj.clearSelection();\n      if (!gObj.isCheckBoxSelection || !gObj.isPersistSelection) {\n        gObj.selectRow(_this.cellDetails.rowIndex, true);\n      }\n      _this.renderer.update(cellEditArgs);\n      _this.parent.notify(events.batchEditFormRendered, cellEditArgs);\n      _this.form = select('#' + gObj.element.id + 'EditForm', gObj.element);\n      gObj.editModule.applyFormValidation([col]);\n      _this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    });\n  };\n  BatchEdit.prototype.updateCell = function (rowIndex, field, value) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    var index = gObj.getColumnIndexByField(field);\n    if (col && !col.isPrimaryKey && col.allowEditing) {\n      var td_1 = getCellByColAndRowIndex(this.parent, col, rowIndex, index);\n      var rowObj_1 = gObj.getRowObjectFromUID(td_1.parentElement.getAttribute('data-uid'));\n      if (gObj.isEdit || !rowObj_1.changes && (!(value instanceof Date) && rowObj_1.data[\"\" + field] !== value || value instanceof Date && new Date(rowObj_1.data[\"\" + field]).toString() !== new Date(value).toString()) || rowObj_1.changes && (!(value instanceof Date) && rowObj_1.changes[\"\" + field] !== value || value instanceof Date && new Date(rowObj_1.changes[\"\" + field]).toString() !== new Date(value).toString())) {\n        this.refreshTD(td_1, col, rowObj_1, value);\n        var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj && this.parent.parentDetails.parentInstObj.isReact;\n        if ((this.parent.isReact && this.parent.requireTemplateRef || isReactChild && this.parent.parentDetails.parentInstObj.requireTemplateRef) && col.template) {\n          var thisRef_1 = this;\n          var newReactTd_1 = this.newReactTd;\n          thisRef_1.parent.renderTemplates(function () {\n            thisRef_1.parent.trigger(events.queryCellInfo, {\n              cell: newReactTd_1 || td_1,\n              column: col,\n              data: rowObj_1.changes\n            });\n          });\n        } else if ((this.parent.isReact || isReactChild) && col.template) {\n          this.parent.renderTemplates();\n          this.parent.trigger(events.queryCellInfo, {\n            cell: this.newReactTd || td_1,\n            column: col,\n            data: rowObj_1.changes\n          });\n        } else {\n          this.parent.trigger(events.queryCellInfo, {\n            cell: this.newReactTd || td_1,\n            column: col,\n            data: rowObj_1.changes\n          });\n        }\n      }\n    }\n  };\n  BatchEdit.prototype.setChanges = function (rowObj, field, value) {\n    if (!rowObj.changes) {\n      rowObj.changes = extend({}, {}, rowObj.data, true);\n    }\n    if (!isNullOrUndefined(field)) {\n      if (typeof value === 'string') {\n        value = this.parent.sanitize(value);\n      }\n      DataUtil.setValue(field, value, rowObj.changes);\n    }\n    if (rowObj.data[\"\" + field] !== value) {\n      var type = this.parent.getColumnByField(field).type;\n      if (type === 'date' || type === 'datetime') {\n        if (new Date(rowObj.data[\"\" + field]).toString() !== new Date(value).toString()) {\n          rowObj.isDirty = true;\n        }\n      } else {\n        rowObj.isDirty = true;\n      }\n    }\n  };\n  BatchEdit.prototype.updateRow = function (index, data) {\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var col = keys_1[_i];\n      this.updateCell(index, col, data[\"\" + col]);\n    }\n  };\n  BatchEdit.prototype.getCellIdx = function (uid) {\n    var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;\n    if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n      cIdx++;\n    }\n    if (this.parent.isRowDragable()) {\n      cIdx++;\n    }\n    return cIdx;\n  };\n  BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {\n    var cell = new CellRenderer(this.parent, this.serviceLocator);\n    value = column.type === 'number' && !isNullOrUndefined(value) ? parseFloat(value) : value;\n    if (rowObj) {\n      this.setChanges(rowObj, column.field, value);\n      refreshForeignData(rowObj, this.parent.getForeignKeyColumns(), rowObj.changes);\n    }\n    var rowcell = rowObj ? rowObj.cells : undefined;\n    var parentElement;\n    var cellIndex;\n    if (this.parent.isReact) {\n      parentElement = td.parentElement;\n      cellIndex = td.cellIndex;\n    }\n    var index = 0;\n    if (rowObj) {\n      cell.refreshTD(td, rowcell[this.getCellIdx(column.uid) - index], rowObj.changes, {\n        'index': this.getCellIdx(column.uid)\n      });\n    }\n    if (this.parent.isReact) {\n      this.newReactTd = parentElement.cells[parseInt(cellIndex.toString(), 10)];\n      parentElement.cells[parseInt(cellIndex.toString(), 10)].classList.add('e-updatedtd');\n    } else {\n      td.classList.add('e-updatedtd');\n    }\n    td.classList.add('e-updatedtd');\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n  BatchEdit.prototype.getColIndex = function (cells, index) {\n    var cIdx = 0;\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n      cIdx = this.parent.groupSettings.columns.length;\n    }\n    if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n      cIdx++;\n    }\n    if (this.parent.isRowDragable()) {\n      cIdx++;\n    }\n    for (var m = 0; m < cells.length; m++) {\n      var colIndex = parseInt(cells[parseInt(m.toString(), 10)].getAttribute(literals.dataColIndex), 10);\n      if (colIndex === index - cIdx) {\n        return m;\n      }\n    }\n    return -1;\n  };\n  BatchEdit.prototype.editNextValCell = function () {\n    var gObj = this.parent;\n    var insertedRows = gObj.element.querySelectorAll('.e-insertedrow');\n    var isSingleInsert = insertedRows.length === 1 ? true : false;\n    if (isSingleInsert && this.isAdded && !gObj.isEdit) {\n      var btmIdx = this.getBottomIndex();\n      for (var i = this.cellDetails.cellIndex; i < gObj.getColumns().length; i++) {\n        if (gObj.isEdit) {\n          return;\n        }\n        var index = this.findNextEditableCell(this.cellDetails.cellIndex + 1, true, true);\n        var col = gObj.getColumns()[parseInt(index.toString(), 10)];\n        if (col) {\n          if (this.parent.editSettings.newRowPosition === 'Bottom') {\n            this.editCell(btmIdx, col.field, true);\n          } else {\n            var args = {\n              index: 0,\n              column: col\n            };\n            this.parent.notify(events.nextCellIndex, args);\n            this.editCell(args.index, col.field, true);\n          }\n          this.saveCell();\n        }\n      }\n      if (!gObj.isEdit) {\n        this.isAdded = false;\n      }\n    } else if (!isSingleInsert && this.isAdded && !gObj.isEdit) {\n      var editRowIdx = 0;\n      if (gObj.editSettings.newRowPosition === 'Bottom') {\n        var changes = this.getBatchChanges();\n        editRowIdx = gObj.getCurrentViewRecords().length - changes[literals.deletedRecords].length;\n      }\n      for (var i = 0; i < insertedRows.length; i++) {\n        if (!gObj.isEdit) {\n          for (var j = 0; j < this.validationColObj.length; j++) {\n            if (gObj.isEdit) {\n              break;\n            } else if (insertedRows[parseInt(i.toString(), 10)].querySelectorAll('td:not(.e-hide)')[this.validationColObj[parseInt(j.toString(), 10)].cellIdx].innerHTML === '') {\n              this.editCell(parseInt(insertedRows[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10), this.validationColObj[parseInt(j.toString(), 10)].field);\n              if (this.validateFormObj()) {\n                this.saveCell();\n              }\n            }\n          }\n        } else {\n          break;\n        }\n      }\n      if (!gObj.isEdit) {\n        this.isAdded = false;\n      }\n    }\n  };\n  BatchEdit.prototype.escapeCellEdit = function () {\n    var args = this.generateCellArgs();\n    args.value = args.previousValue;\n    if (args.value || !this.cellDetails.column.validationRules) {\n      this.successCallBack(args, args.cell.parentElement, args.column, true)(args);\n    }\n  };\n  BatchEdit.prototype.generateCellArgs = function () {\n    var gObj = this.parent;\n    this.parent.element.classList.remove('e-editing');\n    var column = this.cellDetails.column;\n    var obj = {};\n    obj[column.field] = getObject(column.field, this.cellDetails.rowData);\n    var editedData = gObj.editModule.getCurrentEditedData(this.form, obj);\n    var cloneEditedData = extend({}, editedData);\n    editedData = extend({}, editedData, this.cellDetails.rowData);\n    var value = getObject(column.field, cloneEditedData);\n    if (!isNullOrUndefined(column.field) && !isUndefined(value)) {\n      setValue(column.field, value, editedData);\n    }\n    var args = {\n      columnName: column.field,\n      value: getObject(column.field, editedData),\n      rowData: this.cellDetails.rowData,\n      column: column,\n      previousValue: this.cellDetails.value,\n      isForeignKey: this.cellDetails.isForeignKey,\n      cancel: false\n    };\n    args.cell = this.form.parentElement;\n    args.columnObject = column;\n    return args;\n  };\n  BatchEdit.prototype.saveCell = function (isForceSave) {\n    if (this.preventSaveCell || !this.form) {\n      return;\n    }\n    var gObj = this.parent;\n    if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {\n      return;\n    }\n    this.preventSaveCell = true;\n    var args = this.generateCellArgs();\n    var tr = args.cell.parentElement;\n    var col = args.column;\n    args.cell.removeAttribute('aria-label');\n    if (!isForceSave) {\n      gObj.trigger(events.cellSave, args, this.successCallBack(args, tr, col));\n      gObj.notify(events.batchForm, {\n        formObj: this.form\n      });\n    } else {\n      this.successCallBack(args, tr, col)(args);\n    }\n  };\n  BatchEdit.prototype.successCallBack = function (cellSaveArgs, tr, column, isEscapeCellEdit) {\n    var _this = this;\n    return function (cellSaveArgs) {\n      var gObj = _this.parent;\n      cellSaveArgs.cell = cellSaveArgs.cell ? cellSaveArgs.cell : _this.form.parentElement;\n      cellSaveArgs.columnObject = cellSaveArgs.columnObject ? cellSaveArgs.columnObject : column;\n      // cellSaveArgs.columnObject.index = isNullOrUndefined(cellSaveArgs.columnObject.index) ? 0 : cellSaveArgs.columnObject.index;\n      if (cellSaveArgs.cancel) {\n        _this.preventSaveCell = false;\n        if (_this.editNext) {\n          _this.editNext = false;\n          if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n            return;\n          }\n          _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n        }\n        return;\n      }\n      gObj.editModule.destroyWidgets([column]);\n      gObj.isEdit = false;\n      gObj.editModule.destroyForm();\n      _this.parent.notify(events.tooltipDestroy, {});\n      var rowObj = gObj.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      _this.refreshTD(cellSaveArgs.cell, column, rowObj, cellSaveArgs.value);\n      if (_this.parent.isReact) {\n        cellSaveArgs.cell = _this.newReactTd;\n      }\n      removeClass([tr], [literals.editedRow, 'e-batchrow']);\n      removeClass([cellSaveArgs.cell], ['e-editedbatchcell', 'e-boolcell']);\n      if (!isNullOrUndefined(cellSaveArgs.value) && cellSaveArgs.value.toString() === (!isNullOrUndefined(_this.cellDetails.value) ? _this.cellDetails.value : '').toString() && !_this.isColored || isNullOrUndefined(cellSaveArgs.value) && isNullOrUndefined(rowObj.data[column.field]) && isNullOrUndefined(_this.cellDetails.value) && !cellSaveArgs.cell.parentElement.classList.contains('e-insertedrow')) {\n        cellSaveArgs.cell.classList.remove('e-updatedtd');\n      }\n      if (isNullOrUndefined(isEscapeCellEdit)) {\n        var isReactCompiler = gObj.isReact && column.template && typeof column.template !== 'string';\n        var isReactChild = gObj.parentDetails && gObj.parentDetails.parentInstObj && gObj.parentDetails.parentInstObj.isReact;\n        if (isReactCompiler || isReactChild) {\n          if (gObj.requireTemplateRef) {\n            gObj.renderTemplates(function () {\n              gObj.trigger(events.cellSaved, cellSaveArgs);\n            });\n          } else {\n            gObj.renderTemplates();\n            gObj.trigger(events.cellSaved, cellSaveArgs);\n          }\n        } else {\n          gObj.trigger(events.cellSaved, cellSaveArgs);\n        }\n      }\n      gObj.notify(events.toolbarRefresh, {});\n      _this.isColored = false;\n      if (_this.parent.aggregates.length > 0) {\n        if (!(_this.parent.isReact || _this.parent.isVue)) {\n          _this.parent.notify(events.refreshFooterRenderer, {});\n        }\n        if (_this.parent.groupSettings.columns.length > 0 && !_this.isAddRow(_this.cellDetails.rowIndex)) {\n          _this.parent.notify(events.groupAggregates, {});\n        }\n        if (_this.parent.isReact || _this.parent.isVue) {\n          _this.parent.notify(events.refreshFooterRenderer, {});\n        }\n      }\n      _this.preventSaveCell = false;\n      if (_this.editNext) {\n        _this.editNext = false;\n        if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field && _this.prevEditedBatchCell) {\n          return;\n        }\n        var col = gObj.getColumnByField(_this.field);\n        if (col && (col.allowEditing || !col.allowEditing && gObj.focusModule.active && gObj.focusModule.active.getTable().rows[_this.crtRowIndex] && gObj.focusModule.active.getTable().rows[_this.crtRowIndex].classList.contains('e-insertedrow'))) {\n          _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n        }\n      }\n      if (isEscapeCellEdit) {\n        gObj.notify(events.restoreFocus, {});\n      }\n    };\n  };\n  BatchEdit.prototype.prevEditedBatchCellMatrix = function () {\n    var editedBatchCellMatrix = [];\n    var gObj = this.parent;\n    var editedBatchCell = gObj.focusModule.active.getTable().querySelector('.e-editedbatchcell');\n    if (editedBatchCell) {\n      var tr = editedBatchCell.parentElement;\n      var rowIndex = [].slice.call(this.parent.focusModule.active.getTable().rows).indexOf(tr);\n      var cellIndex = [].slice.call(tr.cells).indexOf(editedBatchCell);\n      editedBatchCellMatrix = [rowIndex, cellIndex];\n    }\n    return editedBatchCellMatrix;\n  };\n  BatchEdit.prototype.getDataByIndex = function (index) {\n    var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[parseInt(index.toString(), 10)].getAttribute('data-uid'));\n    return row.changes ? row.changes : row.data;\n  };\n  BatchEdit.prototype.keyDownHandler = function (e) {\n    if (this.addBatchRow || (e.action === 'tab' || e.action === 'shiftTab') && this.parent.isEdit) {\n      var gObj = this.parent;\n      var btmIdx = this.getBottomIndex();\n      var rowcell = parentsUntil(e.target, literals.rowCell);\n      if (this.addBatchRow || rowcell && !this.parent.isReact) {\n        var cell = void 0;\n        if (rowcell) {\n          cell = rowcell.querySelector('.e-field');\n        }\n        if (this.addBatchRow || cell) {\n          var visibleColumns = this.parent.getVisibleColumns();\n          var columnIndex = e.action === 'tab' ? visibleColumns.length - 1 : 0;\n          if (this.addBatchRow || visibleColumns[parseInt(columnIndex.toString(), 10)].field === cell.getAttribute('id').slice(this.parent.element.id.length)) {\n            if (this.cellDetails.rowIndex === btmIdx && e.action === 'tab') {\n              if (gObj.editSettings.newRowPosition === 'Top') {\n                gObj.editSettings.newRowPosition = 'Bottom';\n                this.addRecord();\n                gObj.editSettings.newRowPosition = 'Top';\n              } else {\n                this.addRecord();\n              }\n              this.addBatchRow = false;\n            } else {\n              this.saveCell();\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  BatchEdit.prototype.addCancelWhilePaging = function () {\n    if (this.validateFormObj()) {\n      this.parent.notify(events.destroyForm, {});\n      this.parent.isEdit = false;\n      this.editNext = false;\n      this.mouseDownElement = undefined;\n      this.isColored = false;\n    }\n  };\n  BatchEdit.prototype.getBottomIndex = function () {\n    var changes = this.getBatchChanges();\n    return this.parent.getCurrentViewRecords().length + changes[literals.addedRecords].length - changes[literals.deletedRecords].length - 1;\n  };\n  return BatchEdit;\n}();\nexport { BatchEdit };","map":{"version":3,"names":["extend","addClass","removeClass","setValue","closest","select","EventHandler","remove","classList","isNullOrUndefined","isUndefined","CellType","parentsUntil","refreshForeignData","getObject","addRemoveEventListener","getCellByColAndRowIndex","addFixedColumnBorder","events","RowRenderer","CellRenderer","Row","Cell","RowModelGenerator","DataUtil","literals","BatchEdit","parent","serviceLocator","renderer","cellDetails","originalCell","cloneCell","editNext","preventSaveCell","initialRender","validationColObj","addBatchRow","prevEditedBatchCell","focus","getService","addEventListener","prototype","isDestroyed","evtHandlers","event","click","handler","clickHandler","dblclick","dblClickHandler","beforeCellFocused","onBeforeCellFocused","cellFocused","onCellFocused","doubleTap","keyPressed","keyDownHandler","editNextValCell","destroy","add","element","mouseDownHandler","dataBoundFunction","dataBound","bind","batchCancelFunction","batchCancel","removeEventListener","focusModule","restoreFocus","notify","toolbarRefresh","e","querySelector","mouseDownElement","target","undefined","id","isEdit","form","saveCell","rowCell","setCellIdx","tr","row","rowIndex","parseInt","getAttribute","dataRowIndex","colIndex","dataColIndex","isNaN","parentElement","contains","editedRow","getColumns","toString","allowEditing","editCell","field","isAddRow","validateFormObj","byClick","indexOf","keyArgs","action","cancel","clickArgs","preventDefault","clear","container","isContent","isDataCell","frozenRows","isHeader","active","matrix","current","prevEditedBatchCellMatrix","crtRowIndex","slice","call","getTable","rows","byKey","_a","indexes","cellIndex","actualIndex","getContent","getHeaderContent","querySelectorAll","length","getElementsByClassName","indent","isRowDragable","isDetail","col","isLastCellPrimaryKey","editCellFromIndex","args","column","index","getDataRows","rowIdx","cellIdx","closeEdit","gObj","getRowsObject","argument","batchChanges","getBatchChanges","beforeBatchCancel","isAdded","clearSelection","i","isInsert","isDirty","removeBatchElementChanges","splice","getContentTable","renderModule","renderEmptyRow","requestType","isDataRow","cells","visible","selectRow","refreshRowIdx","tooltipDestroy","trigger","rowRenderer","isInstertedRemoved","getRowElementByUID","uid","getForeignKeyColumns","data","changes","edit","refresh","aggregates","type","editType","refreshFooterRenderer","groupSettings","columns","groupAggregates","deleteRecord","fieldname","bulkDelete","addRecord","bulkAddRow","endEdit","batchSave","editModule","formObj","validate","deletedRecords","isCheckBoxSelection","checkAllBox","pageSettings","totalRecordsCount","currentViewData","selectionSettings","persistSelection","removeSelectedData","original","changedRecords","filter","map","beforeBatchSave","beforeBatchSaveArgs","showSpinner","bulkSave","addedRecords","_i","rows_1","push","removeRowObjectFromUID","len","addRowObject","isTop","editSettings","newRowPosition","rowClone","clone","unshift","_this","selectedRowIndex","selectedRows","getSelectedRows","primaryKey","getPrimaryKeyFieldNames","rowData","getSelectedRecords","deleteRowUid","getRows","getCurrentViewRecords","beforeBatchDelete","beforeBatchDeleteArgs","rowObj","getRowObjectFromUID","getHeaderTable","tbody","appendChild","getRowByIndex","uniqueid","selectedRow","batchDelete","getAllDataRows","dataObjects","j","setAttribute","ariaRowIndex","removeAttribute","allowAdding","visibleColumns","getVisibleColumns","validationRules","obj","defaultData","getDefaultData","beforeBatchAdd","beforeBatchAddArgs","model","modelData","generateRows","render","insertBefore","createElement","className","firstChild","cellType","Indent","emptyRow","parentNode","removeChild","forgetPrevious","batchAdd","btmIdx","getBottomIndex","findNextEditableCell","args1","columnObject","columnIndex","cell","isAdd","isValOnly","cols","endIndex","validation","template","isIdentity","isPrimaryKey","dValues","columnModel","Object","keys","defaultValue","gLen","allowGrouping","getColumnByField","checkEdit","editCellExtend","getDataByIndex","commands","apply","columnName","isForeignKey","foreignKeyValue","value","foreignKeyData","getColIndex","getCellIdx","cellEdit","cellEditArgs","isColored","isPersistSelection","update","batchEditFormRendered","applyFormValidation","style","display","updateCell","getColumnIndexByField","td_1","rowObj_1","Date","refreshTD","isReactChild","parentDetails","parentInstObj","isReact","requireTemplateRef","thisRef_1","newReactTd_1","newReactTd","renderTemplates","queryCellInfo","setChanges","sanitize","updateRow","keys_1","cIdx","getColumnIndexByUid","detailTemplate","childGrid","td","parseFloat","rowcell","m","insertedRows","isSingleInsert","nextCellIndex","editRowIdx","innerHTML","escapeCellEdit","generateCellArgs","previousValue","successCallBack","editedData","getCurrentEditedData","cloneEditedData","isForceSave","cellSave","batchForm","cellSaveArgs","isEscapeCellEdit","destroyWidgets","destroyForm","isReactCompiler","cellSaved","isVue","editedBatchCellMatrix","editedBatchCell","addCancelWhilePaging"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-grids/src/grid/actions/batch-edit.js"],"sourcesContent":["import { extend, addClass, removeClass, setValue, closest, select, EventHandler } from '@syncfusion/ej2-base';\nimport { remove, classList } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { parentsUntil, refreshForeignData, getObject, addRemoveEventListener, } from '../base/util';\nimport { getCellByColAndRowIndex, addFixedColumnBorder } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport * as literals from '../base/string-literals';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent, serviceLocator, renderer) {\n        this.cellDetails = {};\n        this.originalCell = {};\n        this.cloneCell = {};\n        this.editNext = false;\n        this.preventSaveCell = false;\n        this.initialRender = true;\n        this.validationColObj = [];\n        /** @hidden */\n        this.addBatchRow = false;\n        this.prevEditedBatchCell = false;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.renderer = renderer;\n        this.focus = serviceLocator.getService('focus');\n        this.addEventListener();\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.click, handler: this.clickHandler },\n            { event: events.dblclick, handler: this.dblClickHandler },\n            { event: events.beforeCellFocused, handler: this.onBeforeCellFocused },\n            { event: events.cellFocused, handler: this.onCellFocused },\n            { event: events.doubleTap, handler: this.dblClickHandler },\n            { event: events.keyPressed, handler: this.keyDownHandler },\n            { event: events.editNextValCell, handler: this.editNextValCell },\n            { event: events.destroy, handler: this.destroy }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n        EventHandler.add(this.parent.element, 'mousedown', this.mouseDownHandler, this);\n        this.dataBoundFunction = this.dataBound.bind(this);\n        this.batchCancelFunction = this.batchCancel.bind(this);\n        this.parent.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.parent.addEventListener(events.batchCancel, this.batchCancelFunction);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n        EventHandler.remove(this.parent.element, 'mousedown', this.mouseDownHandler);\n        this.parent.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.parent.removeEventListener(events.batchCancel, this.batchCancelFunction);\n    };\n    BatchEdit.prototype.batchCancel = function () {\n        this.parent.focusModule.restoreFocus();\n    };\n    BatchEdit.prototype.dataBound = function () {\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    BatchEdit.prototype.mouseDownHandler = function (e) {\n        if (!isNullOrUndefined(this.parent.element.querySelector('.e-gridform'))) {\n            this.mouseDownElement = e.target;\n        }\n        else {\n            this.mouseDownElement = undefined;\n        }\n    };\n    BatchEdit.prototype.clickHandler = function (e) {\n        if (!parentsUntil(e.target, this.parent.element.id + '_add', true)) {\n            if ((this.parent.isEdit && closest(this.form, 'td') !== closest(e.target, 'td'))\n                && isNullOrUndefined(this.mouseDownElement) || this.mouseDownElement === e.target) {\n                this.saveCell();\n                this.editNextValCell();\n            }\n            if (parentsUntil(e.target, literals.rowCell) && !this.parent.isEdit) {\n                this.setCellIdx(e.target);\n            }\n        }\n    };\n    BatchEdit.prototype.dblClickHandler = function (e) {\n        var target = parentsUntil(e.target, literals.rowCell);\n        var tr = parentsUntil(e.target, literals.row);\n        var rowIndex = tr && parseInt(tr.getAttribute(literals.dataRowIndex), 10);\n        var colIndex = target && parseInt(target.getAttribute(literals.dataColIndex), 10);\n        if (!isNullOrUndefined(target) && !isNullOrUndefined(rowIndex) && !isNaN(colIndex)\n            && !target.parentElement.classList.contains(literals.editedRow) &&\n            this.parent.getColumns()[parseInt(colIndex.toString(), 10)].allowEditing) {\n            this.editCell(rowIndex, this.parent.getColumns()[parseInt(colIndex.toString(), 10)].field, this.isAddRow(rowIndex));\n        }\n    };\n    BatchEdit.prototype.onBeforeCellFocused = function (e) {\n        if (this.parent.isEdit && this.validateFormObj() &&\n            (e.byClick || (['tab', 'shiftTab', 'enter', 'shiftEnter'].indexOf(e.keyArgs.action) > -1))) {\n            e.cancel = true;\n            if (e.byClick) {\n                e.clickArgs.preventDefault();\n            }\n            else {\n                e.keyArgs.preventDefault();\n            }\n        }\n    };\n    BatchEdit.prototype.onCellFocused = function (e) {\n        var clear = (!e.container.isContent || !e.container.isDataCell) && !(this.parent.frozenRows && e.container.isHeader);\n        if (this.parent.focusModule.active) {\n            this.prevEditedBatchCell = this.parent.focusModule.active.matrix.current.toString() === this.prevEditedBatchCellMatrix()\n                .toString();\n            this.crtRowIndex = [].slice.call(this.parent.focusModule.active.getTable().rows).indexOf(closest(e.element, 'tr'));\n        }\n        if (!e.byKey || clear) {\n            if ((this.parent.isEdit && clear)) {\n                this.saveCell();\n            }\n            return;\n        }\n        var _a = e.container.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var actualIndex = e.element.getAttribute('data-colindex') ? parseInt(e.element.getAttribute('data-colindex')) : cellIndex;\n        if (actualIndex !== cellIndex) {\n            cellIndex = actualIndex;\n        }\n        if (this.parent.frozenRows && e.container.isContent) {\n            rowIndex += ((this.parent.getContent().querySelector('.e-hiddenrow') ? 0 : this.parent.frozenRows) +\n                this.parent.getHeaderContent().querySelectorAll('.e-insertedrow').length);\n        }\n        var isEdit = this.parent.isEdit;\n        if (!this.parent.element.getElementsByClassName('e-popup-open').length) {\n            isEdit = isEdit && !this.validateFormObj();\n            switch (e.keyArgs.action) {\n                case 'tab':\n                case 'shiftTab':\n                    // eslint-disable-next-line no-case-declarations\n                    var indent = this.parent.isRowDragable() && this.parent.isDetail() ? 2 :\n                        this.parent.isRowDragable() || this.parent.isDetail() ? 1 : 0;\n                    // eslint-disable-next-line no-case-declarations\n                    var col = this.parent.getColumns()[cellIndex - indent];\n                    if (col && !this.parent.isEdit) {\n                        this.editCell(rowIndex, col.field);\n                    }\n                    if (isEdit || this.parent.isLastCellPrimaryKey) {\n                        this.editCellFromIndex(rowIndex, cellIndex);\n                    }\n                    break;\n                case 'enter':\n                case 'shiftEnter':\n                    e.keyArgs.preventDefault();\n                    // eslint-disable-next-line no-case-declarations\n                    var args = { cancel: false, keyArgs: e.keyArgs };\n                    this.parent.notify('beforeFocusCellEdit', args);\n                    if (!args.cancel && isEdit) {\n                        this.editCell(rowIndex, this.cellDetails.column.field);\n                    }\n                    break;\n                case 'f2':\n                    this.editCellFromIndex(rowIndex, cellIndex);\n                    this.focus.focus();\n                    break;\n            }\n        }\n    };\n    BatchEdit.prototype.isAddRow = function (index) {\n        return this.parent.getDataRows()[parseInt(index.toString(), 10)].classList.contains('e-insertedrow');\n    };\n    BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {\n        this.cellDetails.rowIndex = rowIdx;\n        this.cellDetails.cellIndex = cellIdx;\n        this.editCell(rowIdx, this.parent.getColumns()[parseInt(cellIdx.toString(), 10)].field, this.isAddRow(rowIdx));\n    };\n    BatchEdit.prototype.closeEdit = function () {\n        var gObj = this.parent;\n        var rows = this.parent.getRowsObject();\n        var argument = { cancel: false, batchChanges: this.getBatchChanges() };\n        gObj.notify(events.beforeBatchCancel, argument);\n        if (argument.cancel) {\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        gObj.clearSelection();\n        for (var i = 0; i < rows.length; i++) {\n            var isInsert = false;\n            var isDirty = rows[parseInt(i.toString(), 10)].isDirty;\n            isInsert = this.removeBatchElementChanges(rows[parseInt(i.toString(), 10)], isDirty);\n            if (isInsert) {\n                rows.splice(i, 1);\n            }\n            if (isInsert) {\n                i--;\n            }\n        }\n        if (!gObj.getContentTable().querySelector('tr.e-row')) {\n            gObj.renderModule.renderEmptyRow();\n        }\n        var args = {\n            requestType: 'batchCancel', rows: this.parent.getRowsObject()\n        };\n        gObj.notify(events.batchCancel, {\n            rows: this.parent.getRowsObject().length ? this.parent.getRowsObject() :\n                [new Row({ isDataRow: true, cells: [new Cell({ isDataCell: true, visible: true })] })]\n        });\n        gObj.selectRow(this.cellDetails.rowIndex);\n        this.refreshRowIdx();\n        gObj.notify(events.toolbarRefresh, {});\n        this.parent.notify(events.tooltipDestroy, {});\n        args = { requestType: 'batchCancel', rows: this.parent.getRowsObject() };\n        gObj.trigger(events.batchCancel, args);\n    };\n    BatchEdit.prototype.removeBatchElementChanges = function (row, isDirty) {\n        var gObj = this.parent;\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n        var isInstertedRemoved = false;\n        if (isDirty) {\n            row.isDirty = isDirty;\n            var tr = gObj.getRowElementByUID(row.uid);\n            if (tr) {\n                if (tr.classList.contains('e-insertedrow')) {\n                    remove(tr);\n                    isInstertedRemoved = true;\n                }\n                else {\n                    refreshForeignData(row, this.parent.getForeignKeyColumns(), row.data);\n                    delete row.changes;\n                    delete row.edit;\n                    row.isDirty = false;\n                    classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n                    rowRenderer.refresh(row, gObj.getColumns(), false);\n                }\n                if (this.parent.aggregates.length > 0) {\n                    var type = 'type';\n                    var editType = [];\n                    editType[\"\" + type] = 'cancel';\n                    this.parent.notify(events.refreshFooterRenderer, editType);\n                    if (this.parent.groupSettings.columns.length > 0) {\n                        this.parent.notify(events.groupAggregates, editType);\n                    }\n                }\n            }\n        }\n        return isInstertedRemoved;\n    };\n    BatchEdit.prototype.deleteRecord = function (fieldname, data) {\n        this.saveCell();\n        if (this.validateFormObj()) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        this.bulkDelete(fieldname, data);\n        if (this.parent.aggregates.length > 0) {\n            this.parent.notify(events.refreshFooterRenderer, {});\n            if (this.parent.groupSettings.columns.length > 0) {\n                this.parent.notify(events.groupAggregates, {});\n            }\n        }\n    };\n    BatchEdit.prototype.addRecord = function (data) {\n        this.bulkAddRow(data);\n    };\n    BatchEdit.prototype.endEdit = function () {\n        if (this.parent.isEdit && this.validateFormObj()) {\n            return;\n        }\n        this.batchSave();\n    };\n    BatchEdit.prototype.validateFormObj = function () {\n        return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();\n    };\n    BatchEdit.prototype.batchSave = function () {\n        var gObj = this.parent;\n        var deletedRecords = 'deletedRecords';\n        if (gObj.isCheckBoxSelection) {\n            var checkAllBox = gObj.element.querySelector('.e-checkselectall').parentElement;\n            if (checkAllBox.classList.contains('e-checkbox-disabled') &&\n                gObj.pageSettings.totalRecordsCount > gObj.currentViewData.length) {\n                removeClass([checkAllBox], ['e-checkbox-disabled']);\n            }\n        }\n        this.saveCell();\n        if (gObj.isEdit || this.editNextValCell() || gObj.isEdit) {\n            return;\n        }\n        var changes = this.getBatchChanges();\n        if (this.parent.selectionSettings.type === 'Multiple' && changes[\"\" + deletedRecords].length &&\n            this.parent.selectionSettings.persistSelection) {\n            changes[\"\" + deletedRecords] = this.removeSelectedData;\n            this.removeSelectedData = [];\n        }\n        var original = {\n            changedRecords: this.parent.getRowsObject()\n                .filter(function (row) { return row.isDirty && ['add', 'delete'].indexOf(row.edit) === -1; })\n                .map(function (row) { return row.data; })\n        };\n        var args = { batchChanges: changes, cancel: false };\n        gObj.trigger(events.beforeBatchSave, args, function (beforeBatchSaveArgs) {\n            if (beforeBatchSaveArgs.cancel) {\n                return;\n            }\n            gObj.showSpinner();\n            gObj.notify(events.bulkSave, { changes: changes, original: original });\n        });\n    };\n    BatchEdit.prototype.getBatchChanges = function () {\n        var changes = {\n            addedRecords: [],\n            deletedRecords: [],\n            changedRecords: []\n        };\n        var rows = this.parent.getRowsObject();\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.isDirty) {\n                switch (row.edit) {\n                    case 'add':\n                        changes.addedRecords.push(row.changes);\n                        break;\n                    case 'delete':\n                        changes.deletedRecords.push(row.data);\n                        break;\n                    default:\n                        changes.changedRecords.push(row.changes);\n                }\n            }\n        }\n        return changes;\n    };\n    /**\n     * @param {string} uid - specifes the uid\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeRowObjectFromUID = function (uid) {\n        var rows = this.parent.getRowsObject();\n        var i = 0;\n        for (var len = rows.length; i < len; i++) {\n            if (rows[parseInt(i.toString(), 10)].uid === uid) {\n                break;\n            }\n        }\n        rows.splice(i, 1);\n    };\n    /**\n     * @param {Row<Column>} row - specifies the row object\n     * @param {freezeTable} newTableName - specifies the table name\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addRowObject = function (row) {\n        var gObj = this.parent;\n        var isTop = gObj.editSettings.newRowPosition === 'Top';\n        var rowClone = row.clone();\n        if (isTop) {\n            gObj.getRowsObject().unshift(rowClone);\n        }\n        else {\n            gObj.getRowsObject().push(rowClone);\n        }\n    };\n    // tslint:disable-next-line:max-func-body-length\n    BatchEdit.prototype.bulkDelete = function (fieldname, data) {\n        var _this = this;\n        this.removeSelectedData = [];\n        var gObj = this.parent;\n        var index = gObj.selectedRowIndex;\n        var selectedRows = gObj.getSelectedRows();\n        var args = {\n            primaryKey: this.parent.getPrimaryKeyFieldNames(),\n            rowIndex: index,\n            rowData: data ? data : gObj.getSelectedRecords()[0],\n            cancel: false\n        };\n        if (data) {\n            args.row = gObj.editModule.deleteRowUid ? gObj.getRowElementByUID(gObj.editModule.deleteRowUid)\n                : gObj.getRows()[gObj.getCurrentViewRecords().indexOf(data)];\n        }\n        else {\n            args.row = selectedRows[0];\n        }\n        if (!args.row) {\n            return;\n        }\n        // tslint:disable-next-line:max-func-body-length\n        gObj.trigger(events.beforeBatchDelete, args, function (beforeBatchDeleteArgs) {\n            if (beforeBatchDeleteArgs.cancel) {\n                return;\n            }\n            _this.removeSelectedData = gObj.getSelectedRecords();\n            gObj.clearSelection();\n            beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row ?\n                beforeBatchDeleteArgs.row : data ? gObj.getRows()[parseInt(index.toString(), 10)] : selectedRows[0];\n            if (selectedRows.length === 1 || data) {\n                var uid = beforeBatchDeleteArgs.row.getAttribute('data-uid');\n                uid = data && _this.parent.editModule.deleteRowUid ? uid = _this.parent.editModule.deleteRowUid : uid;\n                if (beforeBatchDeleteArgs.row.classList.contains('e-insertedrow')) {\n                    _this.removeRowObjectFromUID(uid);\n                    remove(beforeBatchDeleteArgs.row);\n                }\n                else {\n                    var rowObj = gObj.getRowObjectFromUID(uid);\n                    rowObj.isDirty = true;\n                    rowObj.edit = 'delete';\n                    classList(beforeBatchDeleteArgs.row, ['e-hiddenrow', 'e-updatedtd'], []);\n                    if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n                        gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                    }\n                }\n                delete beforeBatchDeleteArgs.row;\n            }\n            else {\n                if (data) {\n                    index = parseInt(beforeBatchDeleteArgs.row.getAttribute(literals.dataRowIndex), 10);\n                }\n                for (var i = 0; i < selectedRows.length; i++) {\n                    var uniqueid = selectedRows[parseInt(i.toString(), 10)].getAttribute('data-uid');\n                    if (selectedRows[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n                        _this.removeRowObjectFromUID(uniqueid);\n                        remove(selectedRows[parseInt(i.toString(), 10)]);\n                    }\n                    else {\n                        classList(selectedRows[parseInt(i.toString(), 10)], ['e-hiddenrow', 'e-updatedtd'], []);\n                        var selectedRow = gObj.getRowObjectFromUID(uniqueid);\n                        selectedRow.isDirty = true;\n                        selectedRow.edit = 'delete';\n                        delete selectedRows[parseInt(i.toString(), 10)];\n                        if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n                            gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                        }\n                    }\n                }\n            }\n            _this.refreshRowIdx();\n            if (data) {\n                gObj.editModule.deleteRowUid = undefined;\n            }\n            if (!gObj.isCheckBoxSelection) {\n                gObj.selectRow(index);\n            }\n            gObj.trigger(events.batchDelete, beforeBatchDeleteArgs);\n            gObj.notify(events.batchDelete, { rows: _this.parent.getRowsObject() });\n            gObj.notify(events.toolbarRefresh, {});\n        });\n    };\n    BatchEdit.prototype.refreshRowIdx = function () {\n        var gObj = this.parent;\n        var rows = gObj.getAllDataRows(true);\n        var dataObjects = gObj.getRowsObject();\n        for (var i = 0, j = 0, len = rows.length; i < len; i++) {\n            if (rows[parseInt(i.toString(), 10)].classList.contains(literals.row) && !rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow')) {\n                rows[parseInt(i.toString(), 10)].setAttribute(literals.dataRowIndex, j.toString());\n                rows[parseInt(i.toString(), 10)].setAttribute(literals.ariaRowIndex, (j + 1).toString());\n                dataObjects[parseInt(i.toString(), 10)].index = j;\n                j++;\n            }\n            else {\n                rows[parseInt(i.toString(), 10)].removeAttribute(literals.dataRowIndex);\n                rows[parseInt(i.toString(), 10)].removeAttribute(literals.ariaRowIndex);\n                dataObjects[parseInt(i.toString(), 10)].index = -1;\n            }\n        }\n    };\n    BatchEdit.prototype.bulkAddRow = function (data) {\n        var _this = this;\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowAdding) {\n            if (gObj.isEdit) {\n                this.saveCell();\n            }\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell();\n            this.parent.notify(events.editNextValCell, {});\n        }\n        if (this.initialRender) {\n            var visibleColumns = gObj.getVisibleColumns();\n            for (var i = 0; i < visibleColumns.length; i++) {\n                if (visibleColumns[parseInt(i.toString(), 10)].validationRules &&\n                    visibleColumns[parseInt(i.toString(), 10)].validationRules['required']) {\n                    var obj = { field: (visibleColumns[parseInt(i.toString(), 10)]['field']).slice(), cellIdx: i };\n                    this.validationColObj.push(obj);\n                }\n            }\n            this.initialRender = false;\n        }\n        this.parent.element.classList.add('e-editing');\n        var defaultData = data ? data : this.getDefaultData();\n        var args = {\n            defaultData: defaultData,\n            primaryKey: gObj.getPrimaryKeyFieldNames(),\n            cancel: false\n        };\n        gObj.trigger(events.beforeBatchAdd, args, function (beforeBatchAddArgs) {\n            if (beforeBatchAddArgs.cancel) {\n                return;\n            }\n            _this.isAdded = true;\n            gObj.clearSelection();\n            var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n            var model = new RowModelGenerator(_this.parent);\n            var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n            var tr = row.render(modelData[0], gObj.getColumns());\n            addFixedColumnBorder(tr);\n            var col;\n            var index;\n            for (var i = 0; i < _this.parent.groupSettings.columns.length; i++) {\n                tr.insertBefore(_this.parent.createElement('td', { className: 'e-indentcell' }), tr.firstChild);\n                modelData[0].cells.unshift(new Cell({ cellType: CellType.Indent }));\n            }\n            var tbody = gObj.getContentTable().querySelector(literals.tbody);\n            tr.classList.add('e-insertedrow');\n            if (tbody.querySelector('.e-emptyrow')) {\n                var emptyRow = tbody.querySelector('.e-emptyrow');\n                emptyRow.parentNode.removeChild(emptyRow);\n                if (gObj.frozenRows && gObj.element.querySelector('.e-frozenrow-empty')) {\n                    gObj.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n                }\n            }\n            if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n                tbody = gObj.getHeaderTable().querySelector(literals.tbody);\n            }\n            else {\n                tbody = gObj.getContentTable().querySelector(literals.tbody);\n            }\n            if (_this.parent.editSettings.newRowPosition === 'Top') {\n                tbody.insertBefore(tr, tbody.firstChild);\n            }\n            else {\n                tbody.appendChild(tr);\n            }\n            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n            modelData[0].isDirty = true;\n            modelData[0].changes = extend({}, {}, modelData[0].data, true);\n            modelData[0].edit = 'add';\n            _this.addRowObject(modelData[0]);\n            _this.refreshRowIdx();\n            _this.focus.forgetPrevious();\n            gObj.notify(events.batchAdd, { rows: _this.parent.getRowsObject() });\n            var changes = _this.getBatchChanges();\n            var btmIdx = _this.getBottomIndex();\n            if (_this.parent.editSettings.newRowPosition === 'Top') {\n                gObj.selectRow(0);\n            }\n            else {\n                gObj.selectRow(btmIdx);\n            }\n            if (!data) {\n                index = _this.findNextEditableCell(0, true);\n                col = gObj.getColumns()[parseInt(index.toString(), 10)];\n                if (_this.parent.editSettings.newRowPosition === 'Top') {\n                    _this.editCell(0, col.field, true);\n                }\n                else {\n                    _this.editCell(btmIdx, col.field, true);\n                }\n            }\n            if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n                _this.parent.notify(events.refreshFooterRenderer, {});\n            }\n            var args1 = {\n                defaultData: beforeBatchAddArgs.defaultData, row: tr,\n                columnObject: col, columnIndex: index, primaryKey: beforeBatchAddArgs.primaryKey,\n                cell: !isNullOrUndefined(index) ? tr.cells[parseInt(index.toString(), 10)] : undefined\n            };\n            gObj.trigger(events.batchAdd, args1);\n        });\n    };\n    BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd, isValOnly) {\n        var cols = this.parent.getColumns();\n        var endIndex = cols.length;\n        var validation;\n        for (var i = columnIndex; i < endIndex; i++) {\n            validation = isValOnly ? isNullOrUndefined(cols[parseInt(i.toString(), 10)].validationRules) : false;\n            // if (!isAdd && this.checkNPCell(cols[parseInt(i.toString(), 10)])) {\n            //     return i;\n            // } else \n            if (isAdd && (!cols[parseInt(i.toString(), 10)].template || cols[parseInt(i.toString(), 10)].field)\n                && cols[parseInt(i.toString(), 10)].allowEditing && cols[parseInt(i.toString(), 10)].visible &&\n                !(cols[parseInt(i.toString(), 10)].isIdentity && cols[parseInt(i.toString(), 10)].isPrimaryKey) && !validation) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.getDefaultData = function () {\n        var gObj = this.parent;\n        var data = {};\n        var dValues = { 'number': 0, 'string': null, 'boolean': false, 'date': null, 'datetime': null };\n        for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.field) {\n                setValue(col.field, Object.keys(col).indexOf('defaultValue') >= 0 ? col.defaultValue : dValues[col.type], data);\n            }\n        }\n        return data;\n    };\n    BatchEdit.prototype.setCellIdx = function (target) {\n        var gLen = 0;\n        if (this.parent.allowGrouping) {\n            gLen = this.parent.groupSettings.columns.length;\n        }\n        this.cellDetails.cellIndex = target.cellIndex - gLen;\n        this.cellDetails.rowIndex = parseInt(target.getAttribute('index'), 10);\n    };\n    BatchEdit.prototype.editCell = function (index, field, isAdd) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        this.index = index;\n        this.field = field;\n        this.isAdd = isAdd;\n        var checkEdit = gObj.isEdit && !(this.cellDetails.column.field === field\n            && (this.cellDetails.rowIndex === index && this.parent.getDataRows().length - 1 !== index && this.prevEditedBatchCell));\n        if (gObj.editSettings.allowEditing) {\n            if (!checkEdit && (col.allowEditing || (!col.allowEditing && gObj.focusModule.active\n                && gObj.focusModule.active.getTable().rows[this.crtRowIndex]\n                && gObj.focusModule.active.getTable().rows[this.crtRowIndex].classList.contains('e-insertedrow')))) {\n                this.editCellExtend(index, field, isAdd);\n            }\n            else if (checkEdit) {\n                this.editNext = true;\n                this.saveCell();\n            }\n        }\n    };\n    BatchEdit.prototype.editCellExtend = function (index, field, isAdd) {\n        var _this = this;\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var keys = gObj.getPrimaryKeyFieldNames();\n        if (gObj.isEdit) {\n            return;\n        }\n        var rowData = extend({}, {}, this.getDataByIndex(index), true);\n        var row = gObj.getDataRows()[parseInt(index.toString(), 10)];\n        rowData = extend({}, {}, this.getDataByIndex(index), true);\n        if ((keys[0] === col.field && !row.classList.contains('e-insertedrow')) || col.columns ||\n            (col.isPrimaryKey && col.isIdentity) || col.commands) {\n            this.parent.isLastCellPrimaryKey = true;\n            return;\n        }\n        this.parent.isLastCellPrimaryKey = false;\n        this.parent.element.classList.add('e-editing');\n        var rowObj = gObj.getRowObjectFromUID(row.getAttribute('data-uid'));\n        var cells = [].slice.apply(row.cells);\n        var args = {\n            columnName: col.field, isForeignKey: !isNullOrUndefined(col.foreignKeyValue),\n            primaryKey: keys, rowData: rowData,\n            validationRules: extend({}, col.validationRules ? col.validationRules : {}),\n            value: getObject(col.field, rowData),\n            type: !isAdd ? 'edit' : 'add', cancel: false,\n            foreignKeyData: rowObj && rowObj.foreignKeyData\n        };\n        args.cell = cells[this.getColIndex(cells, this.getCellIdx(col.uid))];\n        args.row = row;\n        args.columnObject = col;\n        if (!args.cell) {\n            return;\n        }\n        gObj.trigger(events.cellEdit, args, function (cellEditArgs) {\n            if (cellEditArgs.cancel) {\n                return;\n            }\n            cellEditArgs.cell = cellEditArgs.cell ? cellEditArgs.cell : cells[_this.getColIndex(cells, _this.getCellIdx(col.uid))];\n            cellEditArgs.row = cellEditArgs.row ? cellEditArgs.row : row;\n            cellEditArgs.columnObject = cellEditArgs.columnObject ? cellEditArgs.columnObject : col;\n            // cellEditArgs.columnObject.index = isNullOrUndefined(cellEditArgs.columnObject.index) ? 0 : cellEditArgs.columnObject.index;\n            _this.cellDetails = {\n                rowData: rowData, column: col, value: cellEditArgs.value, isForeignKey: cellEditArgs.isForeignKey, rowIndex: index,\n                cellIndex: parseInt(cellEditArgs.cell.getAttribute(literals.dataColIndex), 10),\n                foreignKeyData: cellEditArgs.foreignKeyData\n            };\n            if (cellEditArgs.cell.classList.contains('e-updatedtd')) {\n                _this.isColored = true;\n                cellEditArgs.cell.classList.remove('e-updatedtd');\n            }\n            gObj.isEdit = true;\n            gObj.clearSelection();\n            if (!gObj.isCheckBoxSelection || !gObj.isPersistSelection) {\n                gObj.selectRow(_this.cellDetails.rowIndex, true);\n            }\n            _this.renderer.update(cellEditArgs);\n            _this.parent.notify(events.batchEditFormRendered, cellEditArgs);\n            _this.form = select('#' + gObj.element.id + 'EditForm', gObj.element);\n            gObj.editModule.applyFormValidation([col]);\n            _this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        });\n    };\n    BatchEdit.prototype.updateCell = function (rowIndex, field, value) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var index = gObj.getColumnIndexByField(field);\n        if (col && !col.isPrimaryKey && col.allowEditing) {\n            var td_1 = getCellByColAndRowIndex(this.parent, col, rowIndex, index);\n            var rowObj_1 = gObj.getRowObjectFromUID(td_1.parentElement.getAttribute('data-uid'));\n            if (gObj.isEdit ||\n                (!rowObj_1.changes && ((!(value instanceof Date) && rowObj_1.data[\"\" + field] !== value) ||\n                    ((value instanceof Date) && new Date(rowObj_1.data[\"\" + field]).toString() !== new Date(value).toString()))) ||\n                (rowObj_1.changes && ((!(value instanceof Date) && rowObj_1.changes[\"\" + field] !== value) ||\n                    ((value instanceof Date) && new Date(rowObj_1.changes[\"\" + field]).toString() !== new Date(value).toString())))) {\n                this.refreshTD(td_1, col, rowObj_1, value);\n                var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                    this.parent.parentDetails.parentInstObj.isReact;\n                if (((this.parent.isReact && this.parent.requireTemplateRef) || (isReactChild &&\n                    this.parent.parentDetails.parentInstObj.requireTemplateRef)) && col.template) {\n                    var thisRef_1 = this;\n                    var newReactTd_1 = this.newReactTd;\n                    thisRef_1.parent.renderTemplates(function () {\n                        thisRef_1.parent.trigger(events.queryCellInfo, {\n                            cell: newReactTd_1 || td_1, column: col, data: rowObj_1.changes\n                        });\n                    });\n                }\n                else if ((this.parent.isReact || isReactChild) && col.template) {\n                    this.parent.renderTemplates();\n                    this.parent.trigger(events.queryCellInfo, {\n                        cell: this.newReactTd || td_1, column: col, data: rowObj_1.changes\n                    });\n                }\n                else {\n                    this.parent.trigger(events.queryCellInfo, {\n                        cell: this.newReactTd || td_1, column: col, data: rowObj_1.changes\n                    });\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.setChanges = function (rowObj, field, value) {\n        if (!rowObj.changes) {\n            rowObj.changes = extend({}, {}, rowObj.data, true);\n        }\n        if (!isNullOrUndefined(field)) {\n            if (typeof value === 'string') {\n                value = this.parent.sanitize(value);\n            }\n            DataUtil.setValue(field, value, rowObj.changes);\n        }\n        if (rowObj.data[\"\" + field] !== value) {\n            var type = this.parent.getColumnByField(field).type;\n            if ((type === 'date' || type === 'datetime')) {\n                if (new Date(rowObj.data[\"\" + field]).toString() !== new Date(value).toString()) {\n                    rowObj.isDirty = true;\n                }\n            }\n            else {\n                rowObj.isDirty = true;\n            }\n        }\n    };\n    BatchEdit.prototype.updateRow = function (index, data) {\n        var keys = Object.keys(data);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var col = keys_1[_i];\n            this.updateCell(index, col, data[\"\" + col]);\n        }\n    };\n    BatchEdit.prototype.getCellIdx = function (uid) {\n        var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;\n        if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        return cIdx;\n    };\n    BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {\n        var cell = new CellRenderer(this.parent, this.serviceLocator);\n        value = column.type === 'number' && !isNullOrUndefined(value) ? parseFloat(value) : value;\n        if (rowObj) {\n            this.setChanges(rowObj, column.field, value);\n            refreshForeignData(rowObj, this.parent.getForeignKeyColumns(), rowObj.changes);\n        }\n        var rowcell = rowObj ? rowObj.cells : undefined;\n        var parentElement;\n        var cellIndex;\n        if (this.parent.isReact) {\n            parentElement = td.parentElement;\n            cellIndex = td.cellIndex;\n        }\n        var index = 0;\n        if (rowObj) {\n            cell.refreshTD(td, rowcell[this.getCellIdx(column.uid) - index], rowObj.changes, { 'index': this.getCellIdx(column.uid) });\n        }\n        if (this.parent.isReact) {\n            this.newReactTd = parentElement.cells[parseInt(cellIndex.toString(), 10)];\n            parentElement.cells[parseInt(cellIndex.toString(), 10)].classList.add('e-updatedtd');\n        }\n        else {\n            td.classList.add('e-updatedtd');\n        }\n        td.classList.add('e-updatedtd');\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    BatchEdit.prototype.getColIndex = function (cells, index) {\n        var cIdx = 0;\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n            cIdx = this.parent.groupSettings.columns.length;\n        }\n        if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        for (var m = 0; m < cells.length; m++) {\n            var colIndex = parseInt(cells[parseInt(m.toString(), 10)].getAttribute(literals.dataColIndex), 10);\n            if (colIndex === index - cIdx) {\n                return m;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.editNextValCell = function () {\n        var gObj = this.parent;\n        var insertedRows = gObj.element.querySelectorAll('.e-insertedrow');\n        var isSingleInsert = insertedRows.length === 1 ? true : false;\n        if (isSingleInsert && this.isAdded && !gObj.isEdit) {\n            var btmIdx = this.getBottomIndex();\n            for (var i = this.cellDetails.cellIndex; i < gObj.getColumns().length; i++) {\n                if (gObj.isEdit) {\n                    return;\n                }\n                var index = this.findNextEditableCell(this.cellDetails.cellIndex + 1, true, true);\n                var col = gObj.getColumns()[parseInt(index.toString(), 10)];\n                if (col) {\n                    if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                        this.editCell(btmIdx, col.field, true);\n                    }\n                    else {\n                        var args = { index: 0, column: col };\n                        this.parent.notify(events.nextCellIndex, args);\n                        this.editCell(args.index, col.field, true);\n                    }\n                    this.saveCell();\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n        else if (!isSingleInsert && this.isAdded && !gObj.isEdit) {\n            var editRowIdx = 0;\n            if (gObj.editSettings.newRowPosition === 'Bottom') {\n                var changes = this.getBatchChanges();\n                editRowIdx = gObj.getCurrentViewRecords().length - changes[literals.deletedRecords].length;\n            }\n            for (var i = 0; i < insertedRows.length; i++) {\n                if (!gObj.isEdit) {\n                    for (var j = 0; j < this.validationColObj.length; j++) {\n                        if (gObj.isEdit) {\n                            break;\n                        }\n                        else if (insertedRows[parseInt(i.toString(), 10)].querySelectorAll('td:not(.e-hide)')[this.validationColObj[parseInt(j.toString(), 10)].cellIdx].innerHTML === '') {\n                            this.editCell(parseInt(insertedRows[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10), this.validationColObj[parseInt(j.toString(), 10)].field);\n                            if (this.validateFormObj()) {\n                                this.saveCell();\n                            }\n                        }\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.escapeCellEdit = function () {\n        var args = this.generateCellArgs();\n        args.value = args.previousValue;\n        if (args.value || !this.cellDetails.column.validationRules) {\n            this.successCallBack(args, args.cell.parentElement, args.column, true)(args);\n        }\n    };\n    BatchEdit.prototype.generateCellArgs = function () {\n        var gObj = this.parent;\n        this.parent.element.classList.remove('e-editing');\n        var column = this.cellDetails.column;\n        var obj = {};\n        obj[column.field] = getObject(column.field, this.cellDetails.rowData);\n        var editedData = gObj.editModule.getCurrentEditedData(this.form, obj);\n        var cloneEditedData = extend({}, editedData);\n        editedData = extend({}, editedData, this.cellDetails.rowData);\n        var value = getObject(column.field, cloneEditedData);\n        if (!isNullOrUndefined(column.field) && !isUndefined(value)) {\n            setValue(column.field, value, editedData);\n        }\n        var args = {\n            columnName: column.field,\n            value: getObject(column.field, editedData),\n            rowData: this.cellDetails.rowData,\n            column: column,\n            previousValue: this.cellDetails.value,\n            isForeignKey: this.cellDetails.isForeignKey,\n            cancel: false\n        };\n        args.cell = this.form.parentElement;\n        args.columnObject = column;\n        return args;\n    };\n    BatchEdit.prototype.saveCell = function (isForceSave) {\n        if (this.preventSaveCell || !this.form) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {\n            return;\n        }\n        this.preventSaveCell = true;\n        var args = this.generateCellArgs();\n        var tr = args.cell.parentElement;\n        var col = args.column;\n        args.cell.removeAttribute('aria-label');\n        if (!isForceSave) {\n            gObj.trigger(events.cellSave, args, this.successCallBack(args, tr, col));\n            gObj.notify(events.batchForm, { formObj: this.form });\n        }\n        else {\n            this.successCallBack(args, tr, col)(args);\n        }\n    };\n    BatchEdit.prototype.successCallBack = function (cellSaveArgs, tr, column, isEscapeCellEdit) {\n        var _this = this;\n        return function (cellSaveArgs) {\n            var gObj = _this.parent;\n            cellSaveArgs.cell = cellSaveArgs.cell ? cellSaveArgs.cell : _this.form.parentElement;\n            cellSaveArgs.columnObject = cellSaveArgs.columnObject ? cellSaveArgs.columnObject : column;\n            // cellSaveArgs.columnObject.index = isNullOrUndefined(cellSaveArgs.columnObject.index) ? 0 : cellSaveArgs.columnObject.index;\n            if (cellSaveArgs.cancel) {\n                _this.preventSaveCell = false;\n                if (_this.editNext) {\n                    _this.editNext = false;\n                    if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n                        return;\n                    }\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n                return;\n            }\n            gObj.editModule.destroyWidgets([column]);\n            gObj.isEdit = false;\n            gObj.editModule.destroyForm();\n            _this.parent.notify(events.tooltipDestroy, {});\n            var rowObj = gObj.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            _this.refreshTD(cellSaveArgs.cell, column, rowObj, cellSaveArgs.value);\n            if (_this.parent.isReact) {\n                cellSaveArgs.cell = _this.newReactTd;\n            }\n            removeClass([tr], [literals.editedRow, 'e-batchrow']);\n            removeClass([cellSaveArgs.cell], ['e-editedbatchcell', 'e-boolcell']);\n            if (!isNullOrUndefined(cellSaveArgs.value) && cellSaveArgs.value.toString() ===\n                (!isNullOrUndefined(_this.cellDetails.value) ? _this.cellDetails.value : '').toString() && !_this.isColored\n                || (isNullOrUndefined(cellSaveArgs.value) && isNullOrUndefined(rowObj.data[column.field]) &&\n                    isNullOrUndefined(_this.cellDetails.value) && !cellSaveArgs.cell.parentElement.classList.contains('e-insertedrow'))) {\n                cellSaveArgs.cell.classList.remove('e-updatedtd');\n            }\n            if (isNullOrUndefined(isEscapeCellEdit)) {\n                var isReactCompiler = gObj.isReact && column.template && typeof (column.template) !== 'string';\n                var isReactChild = gObj.parentDetails && gObj.parentDetails.parentInstObj\n                    && gObj.parentDetails.parentInstObj.isReact;\n                if (isReactCompiler || isReactChild) {\n                    if (gObj.requireTemplateRef) {\n                        gObj.renderTemplates(function () {\n                            gObj.trigger(events.cellSaved, cellSaveArgs);\n                        });\n                    }\n                    else {\n                        gObj.renderTemplates();\n                        gObj.trigger(events.cellSaved, cellSaveArgs);\n                    }\n                }\n                else {\n                    gObj.trigger(events.cellSaved, cellSaveArgs);\n                }\n            }\n            gObj.notify(events.toolbarRefresh, {});\n            _this.isColored = false;\n            if (_this.parent.aggregates.length > 0) {\n                if (!(_this.parent.isReact || _this.parent.isVue)) {\n                    _this.parent.notify(events.refreshFooterRenderer, {});\n                }\n                if (_this.parent.groupSettings.columns.length > 0 && !_this.isAddRow(_this.cellDetails.rowIndex)) {\n                    _this.parent.notify(events.groupAggregates, {});\n                }\n                if (_this.parent.isReact || _this.parent.isVue) {\n                    _this.parent.notify(events.refreshFooterRenderer, {});\n                }\n            }\n            _this.preventSaveCell = false;\n            if (_this.editNext) {\n                _this.editNext = false;\n                if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field && _this.prevEditedBatchCell) {\n                    return;\n                }\n                var col = gObj.getColumnByField(_this.field);\n                if (col && (col.allowEditing || (!col.allowEditing && gObj.focusModule.active\n                    && gObj.focusModule.active.getTable().rows[_this.crtRowIndex]\n                    && gObj.focusModule.active.getTable().rows[_this.crtRowIndex].classList.contains('e-insertedrow')))) {\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n            }\n            if (isEscapeCellEdit) {\n                gObj.notify(events.restoreFocus, {});\n            }\n        };\n    };\n    BatchEdit.prototype.prevEditedBatchCellMatrix = function () {\n        var editedBatchCellMatrix = [];\n        var gObj = this.parent;\n        var editedBatchCell = gObj.focusModule.active.getTable().querySelector('.e-editedbatchcell');\n        if (editedBatchCell) {\n            var tr = editedBatchCell.parentElement;\n            var rowIndex = [].slice.call(this.parent.focusModule.active.getTable().rows).indexOf(tr);\n            var cellIndex = [].slice.call(tr.cells).indexOf(editedBatchCell);\n            editedBatchCellMatrix = [rowIndex, cellIndex];\n        }\n        return editedBatchCellMatrix;\n    };\n    BatchEdit.prototype.getDataByIndex = function (index) {\n        var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[parseInt(index.toString(), 10)].getAttribute('data-uid'));\n        return row.changes ? row.changes : row.data;\n    };\n    BatchEdit.prototype.keyDownHandler = function (e) {\n        if (this.addBatchRow || ((e.action === 'tab' || e.action === 'shiftTab') && this.parent.isEdit)) {\n            var gObj = this.parent;\n            var btmIdx = this.getBottomIndex();\n            var rowcell = parentsUntil(e.target, literals.rowCell);\n            if (this.addBatchRow || (rowcell && !this.parent.isReact)) {\n                var cell = void 0;\n                if (rowcell) {\n                    cell = rowcell.querySelector('.e-field');\n                }\n                if (this.addBatchRow || cell) {\n                    var visibleColumns = this.parent.getVisibleColumns();\n                    var columnIndex = e.action === 'tab' ? visibleColumns.length - 1 : 0;\n                    if (this.addBatchRow\n                        || visibleColumns[parseInt(columnIndex.toString(), 10)].field === cell.getAttribute('id').slice(this.parent.element.id.length)) {\n                        if (this.cellDetails.rowIndex === btmIdx && e.action === 'tab') {\n                            if (gObj.editSettings.newRowPosition === 'Top') {\n                                gObj.editSettings.newRowPosition = 'Bottom';\n                                this.addRecord();\n                                gObj.editSettings.newRowPosition = 'Top';\n                            }\n                            else {\n                                this.addRecord();\n                            }\n                            this.addBatchRow = false;\n                        }\n                        else {\n                            this.saveCell();\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addCancelWhilePaging = function () {\n        if (this.validateFormObj()) {\n            this.parent.notify(events.destroyForm, {});\n            this.parent.isEdit = false;\n            this.editNext = false;\n            this.mouseDownElement = undefined;\n            this.isColored = false;\n        }\n    };\n    BatchEdit.prototype.getBottomIndex = function () {\n        var changes = this.getBatchChanges();\n        return this.parent.getCurrentViewRecords().length + changes[literals.addedRecords].length -\n            changes[literals.deletedRecords].length - 1;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}