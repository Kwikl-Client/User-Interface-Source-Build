{"ast":null,"code":"import { ChildProperty, compile as baseTemplateComplier, setValue, Internationalization, isUndefined } from '@syncfusion/ej2-base';\nimport { extend as baseExtend, isNullOrUndefined, getValue, classList } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, addClass, attributes, remove, createElement, removeClass } from '@syncfusion/ej2-base';\nimport { isObject, select, selectAll } from '@syncfusion/ej2-base';\nimport { DataUtil, Query, DataManager, Predicate, UrlAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { Column } from '../models/column';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { Print } from '../actions/print';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\nimport * as literals from '../base/string-literals';\n//https://typescript.codeplex.com/discussions/401501\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {Object} target - specifies the target\n * @param  {string} checkFor - specifies the checkfors\n * @returns {boolean} returns the boolean\n * @hidden\n */\nexport function doesImplementInterface(target, checkFor) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return target.prototype && checkFor in target.prototype;\n}\n/**\n * Function to get value from provided data\n *\n * @param  {string} field - specifies the field\n * @param  {Object} data - specifies the data\n * @param  {ColumnModel} column - specifies the column\n * @returns {Object} returns the object\n * @hidden\n */\n// eslint-disable-next-line\nexport function valueAccessor(field, data, column) {\n  return isNullOrUndefined(field) || field === '' ? '' : DataUtil.getObject(field, data);\n}\n/**\n * Defines the method used to apply custom header cell values from external function and display this on each header cell rendered.\n *\n * @param  {string} field - specifies the field\n * @param  {ColumnModel} column - specifies the column\n * @returns {object} headerValueAccessor\n * @hidden\n */\nexport function headerValueAccessor(field, column) {\n  return isNullOrUndefined(field) || field === '' ? '' : DataUtil.getObject(field, column);\n}\n/**\n * The function used to update Dom using requestAnimationFrame.\n *\n * @param {Function} updateFunction - Function that contains the actual action\n * @param {object} callBack - defines the callback\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function getUpdateUsingRaf(updateFunction, callBack) {\n  requestAnimationFrame(function () {\n    try {\n      callBack(null, updateFunction());\n    } catch (e) {\n      callBack(e);\n    }\n  });\n}\n/**\n * @hidden\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @returns {boolean} Returns isExportColumns\n */\nexport function isExportColumns(exportProperties) {\n  return !isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.columns) && exportProperties.columns.length > 0;\n}\n/**\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function updateColumnTypeForExportColumns(exportProperties, gObj) {\n  var exportColumns = exportProperties.columns;\n  var gridColumns = gObj.columns;\n  for (var i = 0; i < exportColumns.length; i++) {\n    if (gridColumns.length - 1 >= i) {\n      if (gridColumns[parseInt(i.toString(), 10)].columns) {\n        for (var j = 0; j < gridColumns[parseInt(i.toString(), 10)].columns.length; j++) {\n          exportColumns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)].type = gridColumns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)].type;\n        }\n      } else {\n        exportColumns[parseInt(i.toString(), 10)].type = gridColumns[parseInt(i.toString(), 10)].type;\n      }\n    }\n  }\n}\n/**\n * @hidden\n * @param {IGrid} grid - Defines the grid\n * @returns {void}\n */\nexport function updatecloneRow(grid) {\n  var nRows = [];\n  var actualRows = grid.vRows;\n  for (var i = 0; i < actualRows.length; i++) {\n    if (actualRows[parseInt(i.toString(), 10)].isDataRow) {\n      nRows.push(actualRows[parseInt(i.toString(), 10)]);\n    } else if (!actualRows[parseInt(i.toString(), 10)].isDataRow) {\n      nRows.push(actualRows[parseInt(i.toString(), 10)]);\n      if (!actualRows[parseInt(i.toString(), 10)].isExpand && actualRows[parseInt(i.toString(), 10)].isCaptionRow) {\n        i += getCollapsedRowsCount(actualRows[parseInt(i.toString(), 10)], grid);\n      }\n    }\n  }\n  grid.vcRows = nRows;\n}\nvar count = 0;\n/**\n * @hidden\n * @param {Row<Column>} val - Defines the value\n * @param {IGrid} grid - Defines the grid\n * @returns {number} Returns the collapsed row count\n */\nexport function getCollapsedRowsCount(val, grid) {\n  count = 0;\n  var gSummary = 'gSummary';\n  var total = 'count';\n  var gLen = grid.groupSettings.columns.length;\n  var records = 'records';\n  var items = 'items';\n  var value = val[\"\" + gSummary];\n  var dataRowCnt = 0;\n  var agrCnt = 'aggregatesCount';\n  if (value === val.data[\"\" + total]) {\n    if (grid.groupSettings.columns.length && !isNullOrUndefined(val[\"\" + agrCnt]) && val[\"\" + agrCnt]) {\n      if (grid.groupSettings.columns.length !== 1) {\n        count += val.indent !== 0 && value < 2 ? val[\"\" + gSummary] * (gLen - val.indent + (gLen - val.indent) * val[\"\" + agrCnt]) : val[\"\" + gSummary] * (gLen - val.indent + (gLen - val.indent - 1) * val[\"\" + agrCnt]) + val[\"\" + agrCnt];\n      } else if (grid.groupSettings.columns.length === 1) {\n        count += val[\"\" + gSummary] * (gLen - val.indent) + val[\"\" + agrCnt];\n      }\n    } else if (grid.groupSettings.columns.length) {\n      if (grid.groupSettings.columns.length !== 1) {\n        count += val[\"\" + gSummary] * (grid.groupSettings.columns.length - val.indent);\n      } else {\n        count += val[\"\" + gSummary];\n      }\n    }\n    return count;\n  } else {\n    for (var i = 0, len = val.data[\"\" + items].length; i < len; i++) {\n      var gLevel = val.data[\"\" + items][parseInt(i.toString(), 10)];\n      count += gLevel[\"\" + items].length + (gLen !== grid.columns.length && !isNullOrUndefined(gLevel[\"\" + items][\"\" + records]) ? gLevel[\"\" + items][\"\" + records].length : 0);\n      dataRowCnt += !isNullOrUndefined(gLevel[\"\" + items][\"\" + records]) && !isNullOrUndefined(val[\"\" + agrCnt]) ? gLevel[\"\" + items][\"\" + records].length : gLevel[\"\" + items].length;\n      if (gLevel[\"\" + items].GroupGuid && gLevel[\"\" + items].childLevels !== 0) {\n        recursive(gLevel);\n      }\n    }\n    count += val.data[\"\" + items].length;\n    if (!isNullOrUndefined(val[\"\" + agrCnt])) {\n      if (val[\"\" + agrCnt] && count && dataRowCnt !== 0) {\n        count += (count - dataRowCnt) * val[\"\" + agrCnt] + val[\"\" + agrCnt];\n      }\n    }\n  }\n  return count;\n}\n/**\n * @param {Object[]} row - Defines the row\n * @returns {void}\n * @hidden\n */\nexport function recursive(row) {\n  var items = 'items';\n  var rCount = 'count';\n  for (var j = 0, length_1 = row[\"\" + items].length; j < length_1; j++) {\n    var nLevel = row[\"\" + items][parseInt(j.toString(), 10)];\n    count += nLevel[\"\" + rCount];\n    if (nLevel[\"\" + items].childLevels !== 0) {\n      recursive(nLevel);\n    }\n  }\n}\n/**\n * @param {Object[]} collection - Defines the array\n * @param {Object} predicate - Defines the predicate\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateArrayOrObject(collection, predicate) {\n  var result = [];\n  for (var i = 0, len = collection.length; i < len; i++) {\n    var pred = predicate(collection[parseInt(i.toString(), 10)], i);\n    if (!isNullOrUndefined(pred)) {\n      result.push(pred);\n    }\n  }\n  return result;\n}\n/**\n * @param {Object[]} array - Defines the array\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateExtend(array) {\n  var obj = [];\n  for (var i = 0; i < array.length; i++) {\n    obj.push(baseExtend({}, getActualProperties(array[parseInt(i.toString(), 10)]), {}, true));\n  }\n  return obj;\n}\n/**\n * @param {string | Function} template - Defines the template\n * @returns {Function} Returns the function\n * @hidden\n */\nexport function templateCompiler(template) {\n  if (template) {\n    try {\n      var validSelector = template[0] !== '<';\n      if (typeof template === 'function') {\n        return baseTemplateComplier(template);\n      } else if (validSelector && document.querySelectorAll(template).length) {\n        return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n      } else {\n        return baseTemplateComplier(template);\n      }\n    } catch (e) {\n      return baseTemplateComplier(template);\n    }\n  }\n  return undefined;\n}\n/**\n * @param {Element} node - Defines the column\n * @param {Object} customAttributes - Defines the index\n * @returns {void}\n * @hidden\n */\nexport function setStyleAndAttributes(node, customAttributes) {\n  var copyAttr = {};\n  var literals = ['style', 'class'];\n  //Dont touch the original object - make a copy\n  baseExtend(copyAttr, customAttributes, {});\n  if ('style' in copyAttr) {\n    setStyleAttribute(node, copyAttr[literals[0]]);\n    delete copyAttr[literals[0]];\n  }\n  if ('class' in copyAttr) {\n    addClass([node], copyAttr[literals[1]]);\n    delete copyAttr[literals[1]];\n  }\n  attributes(node, copyAttr);\n}\n/**\n * @param {Object} copied - Defines the column\n * @param {Object} first - Defines the inndex\n * @param {Object} second - Defines the second object\n * @param {string[]} exclude - Defines the exclude\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function extend(copied, first, second, exclude) {\n  var moved = baseExtend(copied, first, second);\n  var values = Object.keys(moved);\n  for (var i = 0; i < values.length; i++) {\n    if (exclude && exclude.indexOf(values[parseInt(i.toString(), 10)]) !== -1) {\n      delete moved[values[parseInt(i.toString(), 10)]];\n    }\n  }\n  return moved;\n}\n/**\n * @param {Column[]} columnModel - Defines the column\n * @param {number} ind - Defines the inndex\n * @returns {number} - Returns the columnindex\n * @hidden\n */\nexport function setColumnIndex(columnModel, ind) {\n  if (ind === void 0) {\n    ind = 0;\n  }\n  for (var i = 0, len = columnModel.length; i < len; i++) {\n    if (columnModel[parseInt(i.toString(), 10)].columns) {\n      columnModel[parseInt(i.toString(), 10)].index = isNullOrUndefined(columnModel[parseInt(i.toString(), 10)].index) ? ind : columnModel[parseInt(i.toString(), 10)].index;\n      ind++;\n      ind = setColumnIndex(columnModel[parseInt(i.toString(), 10)].columns, ind);\n    } else {\n      columnModel[parseInt(i.toString(), 10)].index = isNullOrUndefined(columnModel[parseInt(i.toString(), 10)].index) ? ind : columnModel[parseInt(i.toString(), 10)].index;\n      ind++;\n    }\n  }\n  return ind;\n}\n/**\n * @param {Column[] | string[] | ColumnModel[]} columns - Defines the column\n * @param {boolean} autoWidth - Defines the autowidth\n * @param {IGrid} gObj - Defines the class name\n * @returns {Column} - Returns the columns\n * @hidden\n */\nexport function prepareColumns(columns, autoWidth, gObj) {\n  for (var c = 0, len = columns.length; c < len; c++) {\n    var column = void 0;\n    if (typeof columns[parseInt(c.toString(), 10)] === 'string') {\n      column = new Column({\n        field: columns[parseInt(c.toString(), 10)]\n      }, gObj);\n    } else if (!(columns[parseInt(c.toString(), 10)] instanceof Column) || columns[parseInt(c.toString(), 10)].columns) {\n      if (!columns[parseInt(c.toString(), 10)].columns) {\n        column = new Column(columns[parseInt(c.toString(), 10)], gObj);\n      } else {\n        columns[parseInt(c.toString(), 10)].columns = prepareColumns(columns[parseInt(c.toString(), 10)].columns, null, gObj);\n        column = new Column(columns[parseInt(c.toString(), 10)], gObj);\n      }\n    } else {\n      column = columns[parseInt(c.toString(), 10)];\n    }\n    if (column.type && column.type.toLowerCase() === 'checkbox') {\n      column.allowReordering = false;\n    }\n    column.headerText = isNullOrUndefined(column.headerText) ? column.foreignKeyValue || column.field || '' : column.headerText;\n    column.foreignKeyField = column.foreignKeyField || column.field;\n    column.valueAccessor = (typeof column.valueAccessor === 'string' ? getValue(column.valueAccessor, window) : column.valueAccessor) || valueAccessor;\n    column.width = autoWidth && isNullOrUndefined(column.width) ? 200 : column.width;\n    if (isNullOrUndefined(column.visible)) {\n      column.visible = true;\n    }\n    columns[parseInt(c.toString(), 10)] = column;\n  }\n  return columns;\n}\n/**\n * @param {HTMLElement} popUp - Defines the popup element\n * @param {MouseEvent | TouchEvent} e - Defines the moouse event\n * @param {string} className - Defines the class name\n * @returns {void}\n * @hidden\n */\nexport function setCssInGridPopUp(popUp, e, className) {\n  var popUpSpan = popUp.querySelector('span');\n  var position = popUp.parentElement.getBoundingClientRect();\n  var targetPosition = e.target.getBoundingClientRect();\n  popUpSpan.className = className;\n  popUp.style.display = '';\n  var isBottomTail = (isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY : e.clientY) > popUp.offsetHeight + 10;\n  popUp.style.top = targetPosition.top - position.top + (isBottomTail ? -(popUp.offsetHeight + 10) : popUp.offsetHeight + 10) + 'px'; //10px for tail element\n  popUp.style.left = getPopupLeftPosition(popUp, e, targetPosition, position.left) + 'px';\n  if (isBottomTail) {\n    popUp.querySelector('.e-downtail').style.display = '';\n    popUp.querySelector('.e-uptail').style.display = 'none';\n  } else {\n    popUp.querySelector('.e-downtail').style.display = 'none';\n    popUp.querySelector('.e-uptail').style.display = '';\n  }\n}\n/**\n * @param {HTMLElement} popup - Defines the popup element\n * @param {MouseEvent | TouchEvent} e  - Defines the mouse event\n * @param {Object} targetPosition - Defines the target position\n * @param {number} targetPosition.top - Defines the top position\n * @param {number} targetPosition.left  - Defines the left position\n * @param {number} targetPosition.right  - Defines the right position\n * @param {number} left - Defines the left position\n * @returns {number} Returns the popup left position\n * @hidden\n */\nfunction getPopupLeftPosition(popup, e, targetPosition, left) {\n  var width = popup.offsetWidth / 2;\n  var x = getPosition(e).x;\n  if (x - targetPosition.left < width) {\n    return targetPosition.left - left;\n  } else if (targetPosition.right - x < width) {\n    return targetPosition.right - left - width * 2;\n  } else {\n    return x - left - width;\n  }\n}\n/**\n * @param {Object} obj - Defines the object\n * @returns {Object} Returns the Properties\n * @hidden\n */\nexport function getActualProperties(obj) {\n  if (obj instanceof ChildProperty) {\n    return getValue('properties', obj);\n  } else {\n    return obj;\n  }\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the string selector\n * @param {boolean} isID - Defines the isID\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function parentsUntil(elem, selector, isID) {\n  var parent = elem;\n  while (parent) {\n    if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n      break;\n    }\n    parent = parent.parentElement;\n  }\n  return parent;\n}\n/**\n * @param {Element} element - Defines the element\n * @param {Element} elements - Defines the element\n * @returns {number} Returns the element index\n * @hidden\n */\nexport function getElementIndex(element, elements) {\n  var index = -1;\n  for (var i = 0, len = elements.length; i < len; i++) {\n    if (elements[parseInt(i.toString(), 10)].isEqualNode(element)) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n}\n/**\n * @param {Object} value - Defines the value\n * @param {Object} collection - defines the collection\n * @returns {number} Returns the array\n * @hidden\n */\nexport function inArray(value, collection) {\n  for (var i = 0, len = collection.length; i < len; i++) {\n    if (collection[parseInt(i.toString(), 10)] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n/**\n * @param {Object} collection - Defines the collection\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getActualPropFromColl(collection) {\n  var coll = [];\n  for (var i = 0, len = collection.length; i < len; i++) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (collection[parseInt(i.toString(), 10)].hasOwnProperty('properties')) {\n      coll.push(collection[parseInt(i.toString(), 10)].properties);\n    } else {\n      coll.push(collection[parseInt(i.toString(), 10)]);\n    }\n  }\n  return coll;\n}\n/**\n * @param {Element} target - Defines the target element\n * @param {string} selector - Defines the selector\n * @returns {void}\n * @hidden\n */\nexport function removeElement(target, selector) {\n  var elements = [].slice.call(target.querySelectorAll(selector));\n  for (var i = 0; i < elements.length; i++) {\n    remove(elements[parseInt(i.toString(), 10)]);\n  }\n}\n/**\n * @param {MouseEvent | TouchEvent} e Defines the mouse event\n * @returns {IPosition} Returns the position\n * @hidden\n */\nexport function getPosition(e) {\n  var position = {};\n  position.x = isNullOrUndefined(e.clientX) ? e.changedTouches[0].clientX : e.clientX;\n  position.y = isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY : e.clientY;\n  return position;\n}\nvar uid = 0;\n/**\n * @param {string} prefix - Defines the prefix string\n * @returns {string} Returns the uid\n * @hidden\n */\nexport function getUid(prefix) {\n  return prefix + uid++;\n}\n/**\n * @param {Element | DocumentFragment} elem - Defines the element\n * @param {Element[] | NodeList} children - Defines the Element\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function appendChildren(elem, children) {\n  for (var i = 0, len = children.length; i < len; i++) {\n    if (len === children.length) {\n      elem.appendChild(children[parseInt(i.toString(), 10)]);\n    } else {\n      elem.appendChild(children[0]);\n    }\n  }\n  return elem;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the selector\n * @param {boolean} isID - Defines isID\n * @returns {Element} Return the element\n * @hidden\n */\nexport function parents(elem, selector, isID) {\n  var parent = elem;\n  var parents = [];\n  while (parent) {\n    if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\n/**\n * @param {AggregateType | string} type - Defines the type\n * @param {Object} data - Defines the data\n * @param {AggregateColumnModel} column - Defines the column\n * @param {Object} context - Defines the context\n * @returns {Object} Returns the calculated aggragate\n * @hidden\n */\nexport function calculateAggregate(type, data, column, context) {\n  if (type === 'Custom') {\n    var temp = column.customAggregate;\n    if (typeof temp === 'string') {\n      temp = getValue(temp, window);\n    }\n    return temp ? temp.call(context, data, column) : '';\n  }\n  return column.field in data || data instanceof Array ? DataUtil.aggregates[type.toLowerCase()](data, column.field) : null;\n}\n/** @hidden */\nvar scrollWidth = null;\n/** @hidden\n * @returns {number} - Returns the scrollbarwidth\n */\nexport function getScrollBarWidth() {\n  if (scrollWidth !== null) {\n    return scrollWidth;\n  }\n  var divNode = document.createElement('div');\n  var value = 0;\n  divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n  document.body.appendChild(divNode);\n  value = divNode.offsetWidth - divNode.clientWidth | 0;\n  document.body.removeChild(divNode);\n  return scrollWidth = value;\n}\n/** @hidden */\nvar rowHeight;\n/**\n * @param {HTMLElement} element - Defines the element\n * @returns {number} Returns the roww height\n * @hidden\n */\nexport function getRowHeight(element) {\n  if (rowHeight !== undefined) {\n    return rowHeight;\n  }\n  var table = createElement('table', {\n    className: literals.table,\n    styles: 'visibility: hidden',\n    attrs: {\n      role: 'grid'\n    }\n  });\n  table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n  element.appendChild(table);\n  var rect = table.querySelector('td').getBoundingClientRect();\n  element.removeChild(table);\n  rowHeight = Math.ceil(rect.height);\n  return rowHeight;\n}\n/** @hidden */\nvar actualRowHeight;\n/**\n * @param {HTMLElement} element - Defines the HTMl element\n * @returns {number} Returns the row height\n * @hidden\n */\nexport function getActualRowHeight(element) {\n  if (actualRowHeight !== undefined) {\n    return rowHeight;\n  }\n  var table = createElement('table', {\n    className: literals.table,\n    styles: 'visibility: hidden',\n    attrs: {\n      role: 'grid'\n    }\n  });\n  table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n  element.appendChild(table);\n  var rect = table.querySelector('tr').getBoundingClientRect();\n  element.removeChild(table);\n  return rect.height;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {boolean} - Returns is complex field\n * @hidden\n */\nexport function isComplexField(field) {\n  return field.split('.').length > 1;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the get complex field ID\n * @hidden\n */\nexport function getComplexFieldID(field) {\n  if (field === void 0) {\n    field = '';\n  }\n  return field.replace(/\\./g, '___');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the parsed column field id\n * @hidden\n */\nexport function getParsedFieldID(field) {\n  if (field === void 0) {\n    field = '';\n  }\n  return field.replace(/[^a-zA-Z0-9_.]/g, '\\\\$&');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the set complex field ID\n * @hidden\n */\nexport function setComplexFieldID(field) {\n  if (field === void 0) {\n    field = '';\n  }\n  return field.replace(/___/g, '.');\n}\n/**\n * @param {Column} col - Defines the column\n * @param {string} type - Defines the type\n * @param {Element} elem - Defines th element\n * @returns {boolean} Returns is Editable\n * @hidden\n */\nexport function isEditable(col, type, elem) {\n  var row = parentsUntil(elem, literals.row);\n  var isOldRow = !row ? true : row && !row.classList.contains('e-insertedrow');\n  if (type === 'beginEdit' && isOldRow) {\n    if (col.isIdentity || col.isPrimaryKey || !col.allowEditing) {\n      return false;\n    }\n    return true;\n  } else if (type === 'add' && col.isIdentity) {\n    return false;\n  } else {\n    if (isOldRow && !col.allowEditing && !col.isIdentity && !col.isPrimaryKey) {\n      return false;\n    }\n    return true;\n  }\n}\n/**\n * @param {IGrid} inst - Defines the IGrid\n * @returns {boolean} Returns is action prevent in boolean\n * @hidden\n */\nexport function isActionPrevent(inst) {\n  var dlg = select('#' + inst.element.id + 'EditConfirm', inst.element);\n  return inst.editSettings.mode === 'Batch' && (selectAll('.e-updatedtd', inst.element).length || selectAll('.e-gridform.e-formvalidator', inst.element).length) && inst.editSettings.showConfirmDialog && (dlg ? dlg.classList.contains('e-popup-close') : true);\n}\n/**\n * @param {any} elem - Defines the element\n * @param {boolean} action - Defines the boolean for action\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function wrap(elem, action) {\n  var clName = 'e-wrap';\n  elem = elem instanceof Array ? elem : [elem];\n  for (var i = 0; i < elem.length; i++) {\n    if (action) {\n      elem[parseInt(i.toString(), 10)].classList.add(clName);\n    } else {\n      elem[parseInt(i.toString(), 10)].classList.remove(clName);\n    }\n  }\n}\n/**\n * @param {ServiceLocator} serviceLocator - Defines the service locator\n * @param {Column} column  - Defines the column\n * @returns {void}\n * @hidden\n */\nexport function setFormatter(serviceLocator, column) {\n  var fmtr = serviceLocator.getService('valueFormatter');\n  var format = 'format';\n  var args;\n  if (column.type === 'date' || column.type === 'datetime' || column.type === 'dateonly') {\n    args = {\n      type: column.type === 'dateonly' ? 'date' : column.type,\n      skeleton: column.format\n    };\n    if (typeof column.format === 'string' && column.format !== 'yMd') {\n      args[\"\" + format] = column.format;\n    }\n  }\n  switch (column.type) {\n    case 'date':\n      column.setFormatter(fmtr.getFormatFunction(args));\n      column.setParser(fmtr.getParserFunction(args));\n      break;\n    case 'dateonly':\n      column.setFormatter(fmtr.getFormatFunction(args));\n      column.setParser(fmtr.getParserFunction(args));\n      break;\n    case 'datetime':\n      column.setFormatter(fmtr.getFormatFunction(args));\n      column.setParser(fmtr.getParserFunction(args));\n      break;\n    case 'number':\n      column.setFormatter(fmtr.getFormatFunction({\n        format: column.format\n      }));\n      column.setParser(fmtr.getParserFunction({\n        format: column.format\n      }));\n      break;\n  }\n}\n/**\n * @param {Element} cells - Defines the cell element\n * @param {boolean} add - Defines the add\n * @param {string} args - Defines the args\n * @returns {void}\n * @hidden\n */\nexport function addRemoveActiveClasses(cells, add) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  for (var i = 0, len = cells.length; i < len; i++) {\n    if (add) {\n      classList(cells[parseInt(i.toString(), 10)], args.slice(), []);\n      cells[parseInt(i.toString(), 10)].setAttribute('aria-selected', 'true');\n    } else {\n      classList(cells[parseInt(i.toString(), 10)], [], args.slice());\n      cells[parseInt(i.toString(), 10)].removeAttribute('aria-selected');\n    }\n  }\n}\n/**\n * @param {string} result - Defines th string\n * @returns {string} Returns the distinct staing values\n * @hidden\n */\nexport function distinctStringValues(result) {\n  var temp = {};\n  var res = [];\n  for (var i = 0; i < result.length; i++) {\n    if (!(result[parseInt(i.toString(), 10)] in temp)) {\n      res.push(result[parseInt(i.toString(), 10)].toString());\n      temp[result[parseInt(i.toString(), 10)]] = 1;\n    }\n  }\n  return res;\n}\n/**\n * @param {Element} target - Defines the target\n * @param {Dialog} dialogObj - Defines the dialog\n * @returns {void}\n * @hidden\n */\nexport function getFilterMenuPostion(target, dialogObj) {\n  var elementVisible = dialogObj.element.style.display;\n  dialogObj.element.style.display = 'block';\n  var dlgWidth = dialogObj.width;\n  var newpos = calculateRelativeBasedPosition(target, dialogObj.element);\n  dialogObj.element.style.display = elementVisible;\n  dialogObj.element.style.top = newpos.top + target.getBoundingClientRect().height - 5 + 'px';\n  var leftPos = newpos.left - dlgWidth + target.clientWidth;\n  if (leftPos < 1) {\n    dialogObj.element.style.left = dlgWidth + leftPos - 16 + 'px'; // right calculation\n  } else {\n    dialogObj.element.style.left = leftPos + -4 + 'px';\n  }\n}\n/**\n * @param {Object} args - Defines the args\n * @param {Popup} args.popup - Defines the args for popup\n * @param {Dialog} dialogObj - Defines the dialog obj\n * @returns {void}\n * @hidden\n */\nexport function getZIndexCalcualtion(args, dialogObj) {\n  args.popup.element.style.zIndex = (dialogObj.zIndex + 1).toString();\n}\n/**\n * @param {Element} elem - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function toogleCheckbox(elem) {\n  var span = elem.querySelector('.e-frame');\n  var input = span.previousSibling;\n  if (span.classList.contains('e-check')) {\n    input.checked = false;\n    classList(span, ['e-uncheck'], ['e-check']);\n  } else {\n    input.checked = true;\n    classList(span, ['e-check'], ['e-uncheck']);\n  }\n}\n/**\n * @param {HTMLInputElement} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function setChecked(elem, checked) {\n  elem.checked = checked;\n}\n/**\n * @param {string} uid - Defines the string\n * @param {Element} elem - Defines the Element\n * @param {string} className - Defines the classname\n * @returns {Element} Returns the box wrap\n * @hidden\n */\nexport function createCboxWithWrap(uid, elem, className) {\n  var div = createElement('div', {\n    className: className\n  });\n  div.appendChild(elem);\n  div.setAttribute('uid', uid);\n  return div;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function removeAddCboxClasses(elem, checked) {\n  removeClass([elem], ['e-check', 'e-stop', 'e-uncheck']);\n  if (checked) {\n    elem.classList.add('e-check');\n  } else {\n    elem.classList.add('e-uncheck');\n  }\n}\n/**\n * Refresh the Row model's foreign data.\n *\n * @param {IRow<Column>} row - Grid Row model object.\n * @param {Column[]} columns - Foreign columns array.\n * @param {Object} data - Updated Row data.\n * @returns {void}\n * @hidden\n */\nexport function refreshForeignData(row, columns, data) {\n  for (var i = 0; i < columns.length; i++) {\n    setValue(columns[parseInt(i.toString(), 10)].field, getForeignData(columns[parseInt(i.toString(), 10)], data), row.foreignKeyData);\n  }\n  var cells = row.cells;\n  for (var i = 0; i < cells.length; i++) {\n    if (cells[parseInt(i.toString(), 10)].isForeignKey) {\n      setValue('foreignKeyData', getValue(cells[parseInt(i.toString(), 10)].column.field, row.foreignKeyData), cells[parseInt(i.toString(), 10)]);\n    }\n  }\n}\n/**\n * Get the foreign data for the corresponding cell value.\n *\n * @param {Column} column - Foreign Key column\n * @param {Object} data - Row data.\n * @param {string | number} lValue - cell value.\n * @param {Object} foreignKeyData - foreign data source.\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getForeignData(column, data, lValue, foreignKeyData) {\n  var fField = column.foreignKeyField;\n  var key = !isNullOrUndefined(lValue) ? lValue : valueAccessor(column.field, data, column);\n  key = isNullOrUndefined(key) ? '' : key;\n  var query = new Query();\n  var fdata = foreignKeyData || (column.dataSource instanceof DataManager && column.dataSource.dataSource.json.length ? column.dataSource.dataSource.json : column.columnData);\n  if (key.getDay) {\n    query.where(getDatePredicate({\n      field: fField,\n      operator: 'equal',\n      value: key,\n      matchCase: false\n    }));\n  } else {\n    query.where(fField, '==', key, false);\n  }\n  return new DataManager(fdata).executeLocal(query);\n}\n/**\n * To use to get the column's object by the foreign key value.\n *\n * @param {string} foreignKeyValue - Defines ForeignKeyValue.\n * @param {Column[]} columns - Array of column object.\n * @returns {Column} Returns the element\n * @hidden\n */\nexport function getColumnByForeignKeyValue(foreignKeyValue, columns) {\n  var column;\n  return columns.some(function (col) {\n    column = col;\n    return col.foreignKeyValue === foreignKeyValue;\n  }) && column;\n}\n/**\n * @param {number} value - Defines the date or month value\n * @returns {string} Returns string\n * @hidden\n */\nexport function padZero(value) {\n  if (value < 10) {\n    return '0' + value;\n  }\n  return String(value);\n}\n/**\n * @param {PredicateModel} filterObject - Defines the filterObject\n * @param {string} type - Defines the type\n * @param {boolean} isExecuteLocal - Defines whether the data actions performed in client and used for dateonly type field\n * @returns {Predicate} Returns the Predicate\n * @hidden\n */\nexport function getDatePredicate(filterObject, type, isExecuteLocal) {\n  var datePredicate;\n  var prevDate;\n  var nextDate;\n  var prevObj = baseExtend({}, getActualProperties(filterObject));\n  var nextObj = baseExtend({}, getActualProperties(filterObject));\n  if (isNullOrUndefined(filterObject.value) || filterObject.value === '') {\n    datePredicate = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n    return datePredicate;\n  }\n  var value = new Date(filterObject.value);\n  if (type === 'dateonly' && !isExecuteLocal) {\n    if (typeof prevObj.value === 'string') {\n      prevObj.value = new Date(prevObj.value);\n    }\n    var dateOnlyString = prevObj.value.getFullYear() + '-' + padZero(prevObj.value.getMonth() + 1) + '-' + padZero(prevObj.value.getDate());\n    var predicates = new Predicate(prevObj.field, prevObj.operator, dateOnlyString, false);\n    datePredicate = predicates;\n  } else {\n    if (filterObject.operator === 'equal' || filterObject.operator === 'notequal') {\n      if (type === 'datetime') {\n        prevDate = new Date(value.setSeconds(value.getSeconds() - 1));\n        nextDate = new Date(value.setSeconds(value.getSeconds() + 2));\n        filterObject.value = new Date(value.setSeconds(nextDate.getSeconds() - 1));\n      } else {\n        prevDate = new Date(value.setHours(0) - 1);\n        nextDate = new Date(value.setHours(24));\n      }\n      prevObj.value = prevDate;\n      nextObj.value = nextDate;\n      if (filterObject.operator === 'equal') {\n        prevObj.operator = 'greaterthan';\n        nextObj.operator = 'lessthan';\n      } else if (filterObject.operator === 'notequal') {\n        prevObj.operator = 'lessthanorequal';\n        nextObj.operator = 'greaterthanorequal';\n      }\n      var predicateSt = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n      var predicateEnd = new Predicate(nextObj.field, nextObj.operator, nextObj.value, false);\n      datePredicate = filterObject.operator === 'equal' ? predicateSt.and(predicateEnd) : predicateSt.or(predicateEnd);\n    } else {\n      if (type === 'date' && (filterObject.operator === 'lessthanorequal' || filterObject.operator === 'greaterthan')) {\n        prevObj.value = new Date(value.setHours(24) - 1);\n      }\n      if (typeof prevObj.value === 'string') {\n        prevObj.value = new Date(prevObj.value);\n      }\n      var predicates = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n      datePredicate = predicates;\n    }\n  }\n  if (filterObject.setProperties) {\n    filterObject.setProperties({\n      ejpredicate: datePredicate\n    }, true);\n  } else {\n    filterObject.ejpredicate = datePredicate;\n  }\n  return datePredicate;\n}\n/**\n * @param {IGrid} grid - Defines the IGrid\n * @returns {boolean} Returns true if group adaptive is true\n * @hidden\n */\nexport function isGroupAdaptive(grid) {\n  return grid.enableVirtualization && grid.groupSettings.columns.length > 0 && grid.isVirtualAdaptive && !grid.groupSettings.enableLazyLoading;\n}\n/**\n * @param {string} field - Defines the Field\n * @param {Object} object - Defines the objec\n * @returns {any} Returns the object\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObject(field, object) {\n  if (field === void 0) {\n    field = '';\n  }\n  if (field) {\n    var value = object;\n    var splits = field.split('.');\n    for (var i = 0; i < splits.length && !isNullOrUndefined(value); i++) {\n      value = value[splits[parseInt(i.toString(), 10)]];\n      if (isUndefined(value)) {\n        var newCase = splits[parseInt(i.toString(), 10)].charAt(0).toUpperCase() + splits[parseInt(i.toString(), 10)].slice(1);\n        value = object[\"\" + newCase] || object[(\"\" + newCase).charAt(0).toLowerCase() + (\"\" + newCase).slice(1)];\n      }\n    }\n    return value;\n  }\n}\n/**\n * @param {string | Object} format - defines the format\n * @param {string} colType - Defines the coltype\n * @returns {string} Returns the custom Data format\n * @hidden\n */\nexport function getCustomDateFormat(format, colType) {\n  var intl = new Internationalization();\n  var formatvalue;\n  var formatter = 'format';\n  var type = 'type';\n  if (colType === 'date') {\n    formatvalue = typeof format === 'object' ? intl.getDatePattern({\n      type: format[\"\" + type] ? format[\"\" + type] : 'date',\n      format: format[\"\" + formatter]\n    }, false) : intl.getDatePattern({\n      type: 'dateTime',\n      skeleton: format\n    }, false);\n  } else {\n    formatvalue = typeof format === 'object' ? intl.getDatePattern({\n      type: format[\"\" + type] ? format[\"\" + type] : 'dateTime',\n      format: format[\"\" + formatter]\n    }, false) : intl.getDatePattern({\n      type: 'dateTime',\n      skeleton: format\n    }, false);\n  }\n  return formatvalue;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getExpandedState(gObj, hierarchyPrintMode) {\n  var rows = gObj.getRowsObject();\n  var obj = {};\n  for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n    var row = rows_1[_i];\n    if (row.isExpand && !row.isDetailRow) {\n      var index = gObj.allowPaging && gObj.printMode === 'AllPages' ? row.index + gObj.pageSettings.currentPage * gObj.pageSettings.pageSize - gObj.pageSettings.pageSize : row.index;\n      if (!isNullOrUndefined(index)) {\n        obj[parseInt(index.toString(), 10)] = {};\n        obj[parseInt(index.toString(), 10)].isExpand = true;\n        if (gObj.childGrid) {\n          obj[parseInt(index.toString(), 10)].gridModel = getPrintGridModel(row.childGrid, hierarchyPrintMode);\n          obj[parseInt(index.toString(), 10)].gridModel.query = gObj.childGrid.query;\n        }\n      }\n    }\n  }\n  return obj;\n}\n/**\n * @param {IGrid} gObj - Defines the grid objct\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {IGrid} Returns the IGrid\n * @hidden\n */\nexport function getPrintGridModel(gObj, hierarchyPrintMode) {\n  if (hierarchyPrintMode === void 0) {\n    hierarchyPrintMode = 'Expanded';\n  }\n  var printGridModel = {};\n  if (!gObj) {\n    return printGridModel;\n  }\n  for (var _i = 0, _a = Print.printGridProp; _i < _a.length; _i++) {\n    var key = _a[_i];\n    if (key === 'columns') {\n      printGridModel[\"\" + key] = getActualPropFromColl(gObj.getColumns());\n    } else if (key === 'allowPaging') {\n      printGridModel[\"\" + key] = gObj.printMode === 'CurrentPage';\n    } else {\n      printGridModel[\"\" + key] = getActualProperties(gObj[\"\" + key]);\n    }\n  }\n  printGridModel['enableHover'] = false;\n  if ((gObj.childGrid || gObj.detailTemplate) && hierarchyPrintMode !== 'None') {\n    printGridModel.expandedRows = getExpandedState(gObj, hierarchyPrintMode);\n  }\n  return printGridModel;\n}\n/**\n * @param {Object} copied - Defines the copied object\n * @param {Object} first - Defines the first object\n * @param {Object} second - Defines the second object\n * @param {boolean} deep - Defines the deep\n * @returns {Object} Returns the extended object\n * @hidden\n */\nexport function extendObjWithFn(copied, first, second, deep) {\n  var res = copied || {};\n  var len = arguments.length;\n  if (deep) {\n    len = len - 1;\n  }\n  for (var i = 1; i < len; i++) {\n    // eslint-disable-next-line prefer-rest-params\n    if (!arguments[parseInt(i.toString(), 10)]) {\n      continue;\n    }\n    // eslint-disable-next-line prefer-rest-params\n    var obj1 = arguments[parseInt(i.toString(), 10)];\n    var keys = Object.keys(Object.getPrototypeOf(obj1)).length ? Object.keys(obj1).concat(getPrototypesOfObj(obj1)) : Object.keys(obj1);\n    for (var i_1 = 0; i_1 < keys.length; i_1++) {\n      var source = res[keys[parseInt(i_1.toString(), 10)]];\n      var cpy = obj1[keys[parseInt(i_1.toString(), 10)]];\n      var cln = void 0;\n      if (deep && (isObject(cpy) || Array.isArray(cpy))) {\n        if (isObject(cpy)) {\n          cln = source ? source : {};\n          res[keys[parseInt(i_1.toString(), 10)]] = baseExtend({}, cln, cpy, deep);\n        } else {\n          cln = source ? source : [];\n          res[keys[parseInt(i_1.toString(), 10)]] = baseExtend([], cln, cpy, deep);\n        }\n      } else {\n        res[keys[parseInt(i_1.toString(), 10)]] = cpy;\n      }\n    }\n  }\n  return res;\n}\n/**\n * @param {Object} obj - Defines the obj\n * @returns {string[]} Returns the string\n * @hidden\n */\nfunction getPrototypesOfObj(obj) {\n  var keys = [];\n  while (Object.getPrototypeOf(obj) && Object.keys(Object.getPrototypeOf(obj)).length) {\n    keys = keys.concat(Object.keys(Object.getPrototypeOf(obj)));\n    obj = Object.getPrototypeOf(obj);\n  }\n  return keys;\n}\n/**\n * @param {Column[]} column - Defines the Column\n * @returns {number} Returns the column Depth\n * @hidden\n */\nexport function measureColumnDepth(column) {\n  var max = 0;\n  for (var i = 0; i < column.length; i++) {\n    var depth = checkDepth(column[parseInt(i.toString(), 10)], 0);\n    if (max < depth) {\n      max = depth;\n    }\n  }\n  return max + 1;\n}\n/**\n * @param {Column} col - Defines the Column\n * @param {number} index - Defines the index\n * @returns {number} Returns the depth\n * @hidden\n */\nexport function checkDepth(col, index) {\n  var max = index;\n  var indices = [];\n  if (col.columns) {\n    index++;\n    for (var i = 0; i < col.columns.length; i++) {\n      indices[parseInt(i.toString(), 10)] = checkDepth(col.columns[parseInt(i.toString(), 10)], index);\n    }\n    for (var j = 0; j < indices.length; j++) {\n      if (max < indices[parseInt(j.toString(), 10)]) {\n        max = indices[parseInt(j.toString(), 10)];\n      }\n    }\n    index = max;\n  }\n  return index;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {PredicateModel[]} filteredCols - Defines the PredicateModel\n * @returns {void}\n * @hidden\n */\nexport function refreshFilteredColsUid(gObj, filteredCols) {\n  for (var i = 0; i < filteredCols.length; i++) {\n    filteredCols[parseInt(i.toString(), 10)].uid = filteredCols[parseInt(i.toString(), 10)].isForeignKey ? getColumnByForeignKeyValue(filteredCols[parseInt(i.toString(), 10)].field, gObj.getForeignKeyColumns()).uid : gObj.enableColumnVirtualization ? getColumnModelByFieldName(gObj, filteredCols[parseInt(i.toString(), 10)].field).uid : gObj.getColumnByField(filteredCols[parseInt(i.toString(), 10)].field).uid;\n  }\n}\n/** @hidden */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Global;\n(function (Global) {\n  // eslint-disable-next-line prefer-const\n  Global.timer = null;\n})(Global || (Global = {}));\n/**\n * @param {Element} element - Defines the element\n * @returns {Object} Returns the transform values\n * @hidden\n */\nexport function getTransformValues(element) {\n  var style = document.defaultView.getComputedStyle(element, null);\n  var transformV = style.getPropertyValue('transform');\n  var replacedTv = transformV.replace(/,/g, '');\n  var translateX = parseFloat(replacedTv.split(' ')[4]);\n  var translateY = parseFloat(replacedTv.split(' ')[5]);\n  return {\n    width: translateX,\n    height: translateY\n  };\n}\n/**\n * @param {Element} rootElement - Defines the root Element\n * @param {Element} element - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function applyBiggerTheme(rootElement, element) {\n  if (rootElement.classList.contains('e-bigger')) {\n    element.classList.add('e-bigger');\n  }\n}\n/**\n * @param {IGrid} gObj - Defines grid object\n * @returns {number}  - Returns scroll width\n * @hidden\n */\nexport function getScrollWidth(gObj) {\n  var scrollElem = gObj.getContent().firstElementChild;\n  return scrollElem.scrollWidth > scrollElem.offsetWidth ? getScrollBarWidth() : 0;\n}\n/**\n * @param {IGrid} gObj - Defines grid object\n * @param {number} idx - Defines the index\n * @returns {number} Returns colSpan index\n * @hidden\n */\nexport function resetColspanGroupCaption(gObj, idx) {\n  var colspan = 0;\n  var cols = gObj.getColumns();\n  var width = idx * 30;\n  if (gObj.isRowDragable()) {\n    colspan++;\n    width += 30;\n  }\n  colspan += gObj.groupSettings.columns.length - idx;\n  width += 30 * (gObj.groupSettings.columns.length - idx);\n  for (var i = 0; i < cols.length; i++) {\n    if (cols[parseInt(i.toString(), 10)].visible) {\n      width += parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10);\n      colspan++;\n    }\n    if (width > parseInt(gObj.width.toString(), 10) - getScrollWidth(gObj)) {\n      colspan--;\n      break;\n    }\n  }\n  return colspan;\n}\n/**\n * @param {HTMLElement} tr - Defines the tr Element\n * @param {IGrid} gObj - Defines grid object\n * @returns {void}\n * @hidden\n */\nexport function groupCaptionRowLeftRightPos(tr, gObj) {\n  var width = 0;\n  for (var j = 0; j < tr.childNodes.length; j++) {\n    var td = tr.childNodes[parseInt(j.toString(), 10)];\n    td.classList.add('e-leftfreeze');\n    applyStickyLeftRightPosition(td, width, gObj.enableRtl, 'Left');\n    if (td.classList.contains('e-indentcell') || td.classList.contains('e-recordplusexpand') || td.classList.contains('e-recordpluscollapse')) {\n      width += 30;\n    }\n    if (td.classList.contains('e-groupcaption')) {\n      var colspan = parseInt(td.getAttribute('colspan'), 10);\n      if (gObj.isRowDragable()) {\n        colspan--;\n        width += 30;\n      }\n      colspan = colspan - (gObj.groupSettings.columns.length - j);\n      width = width + 30 * (gObj.groupSettings.columns.length - j);\n      var cols = gObj.getColumns();\n      for (var i = 0; i < cols.length; i++) {\n        if (parseInt(td.getAttribute('colspan'), 10) > 1 && parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10) + width > parseInt(gObj.width.toString(), 10) - getScrollWidth(gObj)) {\n          var newColspan = resetColspanGroupCaption(gObj, j);\n          td.setAttribute('colspan', newColspan.toString());\n          break;\n        }\n        if (cols[parseInt(i.toString(), 10)].visible) {\n          width += parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10);\n          colspan--;\n        }\n        if (colspan === 0) {\n          break;\n        }\n      }\n    }\n    if (td.classList.contains('e-summarycell')) {\n      var uid_1 = td.getAttribute('e-mappinguid');\n      var column = gObj.getColumnByUid(uid_1);\n      width += parseInt(column.width.toString(), 10);\n    }\n  }\n}\n/**\n * @param {Element} row - Defines row element\n * @param {IGrid} gridObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function ensureLastRow(row, gridObj) {\n  var cntOffset = gridObj.getContent().firstElementChild.offsetHeight;\n  return row && row.getBoundingClientRect().top > cntOffset;\n}\n/**\n * @param {Element} row - Defines row element\n * @param {number} rowTop - Defines row top number\n * @returns {boolean} Returns first row is true\n * @hidden\n */\nexport function ensureFirstRow(row, rowTop) {\n  return row && row.getBoundingClientRect().top < rowTop;\n}\n/**\n * @param {number} index - Defines index\n * @param {IGrid} gObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function isRowEnteredInGrid(index, gObj) {\n  var rowHeight = gObj.getRowHeight();\n  var startIndex = gObj.getContent().firstElementChild.scrollTop / rowHeight;\n  var endIndex = startIndex + gObj.getContent().firstElementChild.offsetHeight / rowHeight;\n  return index < endIndex && index > startIndex;\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} data - Defines the query\n * @returns {number} Returns the edited data index\n * @hidden\n */\nexport function getEditedDataIndex(gObj, data) {\n  var keyField = gObj.getPrimaryKeyFieldNames()[0];\n  var dataIndex;\n  gObj.getCurrentViewRecords().filter(function (e, index) {\n    if (keyField.includes('.')) {\n      var currentValue = getObject(keyField, e);\n      var originalValue = getObject(keyField, data);\n      if (currentValue === originalValue) {\n        dataIndex = index;\n      }\n    } else {\n      if (e[\"\" + keyField] === data[\"\" + keyField]) {\n        dataIndex = index;\n      }\n    }\n  });\n  return dataIndex;\n}\n/**\n * @param {Object} args - Defines the argument\n * @param {Query} query - Defines the query\n * @returns {FilterStateObj} Returns the filter state object\n * @hidden\n */\nexport function eventPromise(args, query) {\n  var state = getStateEventArgument(query);\n  var def = new Deferred();\n  state.dataSource = def.resolve;\n  state.action = args;\n  return {\n    state: state,\n    deffered: def\n  };\n}\n/**\n * @param {Query} query - Defines the query\n * @returns {Object} Returns the state event argument\n * @hidden\n */\nexport function getStateEventArgument(query) {\n  var adaptr = new UrlAdaptor();\n  var dm = new DataManager({\n    url: '',\n    adaptor: new UrlAdaptor()\n  });\n  var state = adaptr.processQuery(dm, query);\n  var data = JSON.parse(state.data);\n  return data;\n}\n/**\n * @param {IGrid} gObj - Defines the Igrid\n * @returns {boolean} Returns the ispercentageWidth\n * @hidden\n */\nexport function ispercentageWidth(gObj) {\n  var columns = gObj.getVisibleColumns();\n  var percentageCol = 0;\n  var undefinedWidthCol = 0;\n  for (var i = 0; i < columns.length; i++) {\n    if (isUndefined(columns[parseInt(i.toString(), 10)].width)) {\n      undefinedWidthCol++;\n    } else if (columns[parseInt(i.toString(), 10)].width.toString().indexOf('%') !== -1) {\n      percentageCol++;\n    }\n  }\n  return (gObj.width === 'auto' || typeof gObj.width === 'string' && gObj.width.indexOf('%') !== -1) && !gObj.groupSettings.showGroupedColumn && gObj.groupSettings.columns.length && percentageCol && !undefinedWidthCol;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {Row<Column>[]} rows - Defines the row\n * @param {HTMLTableRowElement[]} rowElms - Row elements\n * @param {number} index - Row index\n * @param {number} startRowIndex - Start Row Index\n * @returns {void}\n * @hidden\n */\nexport function resetRowIndex(gObj, rows, rowElms, index, startRowIndex) {\n  var startIndex = index ? index : 0;\n  for (var i = startRowIndex ? startRowIndex : 0; i < rows.length; i++) {\n    if (rows[parseInt(i.toString(), 10)] && rows[parseInt(i.toString(), 10)].isDataRow) {\n      rows[parseInt(i.toString(), 10)].index = startIndex;\n      rows[parseInt(i.toString(), 10)].isAltRow = gObj.enableAltRow ? startIndex % 2 !== 0 : false;\n      rowElms[parseInt(i.toString(), 10)].setAttribute(literals.dataRowIndex, startIndex.toString());\n      rowElms[parseInt(i.toString(), 10)].setAttribute(literals.ariaRowIndex, (startIndex + 1).toString());\n      if (rows[parseInt(i.toString(), 10)].isAltRow) {\n        rowElms[parseInt(i.toString(), 10)].classList.add('e-altrow');\n      } else {\n        rowElms[parseInt(i.toString(), 10)].classList.remove('e-altrow');\n      }\n      for (var j = 0; j < rowElms[parseInt(i.toString(), 10)].cells.length; j++) {\n        rowElms[parseInt(i.toString(), 10)].cells[parseInt(j.toString(), 10)].setAttribute('index', startIndex.toString());\n      }\n      startIndex++;\n    }\n  }\n  if (!rows.length) {\n    gObj.renderModule.emptyRow(true);\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} changes - Defines the changes\n * @param {string} type - Defines the type\n * @param {string} keyField - Defines the keyfield\n * @returns {void}\n * @hidden\n */\nexport function compareChanges(gObj, changes, type, keyField) {\n  var newArray = gObj.dataToBeUpdated[\"\" + type].concat(changes[\"\" + type]).reduce(function (r, o) {\n    r[o[\"\" + keyField]] = r[o[\"\" + keyField]] === undefined ? o : Object.assign(r[o[\"\" + keyField]], o);\n    return r;\n  }, {});\n  gObj.dataToBeUpdated[\"\" + type] = Object.keys(newArray).map(function (k) {\n    return newArray[\"\" + k];\n  });\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function setRowElements(gObj) {\n  gObj.contentModule.rowElements = [].slice.call(gObj.element.querySelectorAll('.e-row:not(.e-addedrow)'));\n}\n/**\n * @param {Element} row - Defines the row\n * @param {number} start - Defines the start index\n * @param {number} end - Defines the end index\n * @returns {void}\n * @hidden\n */\nexport function sliceElements(row, start, end) {\n  var cells = row.children;\n  var len = cells.length;\n  var k = 0;\n  for (var i = 0; i < len; i++, k++) {\n    if (i >= start && i < end) {\n      continue;\n    }\n    row.removeChild(row.children[parseInt(k.toString(), 10)]);\n    k--;\n  }\n}\n/**\n * @param {Column} column - Defines the column\n * @param {string} uid - Defines the uid\n * @returns {boolean} Returns is child column\n * @hidden\n */\nexport function isChildColumn(column, uid) {\n  var uids = [];\n  uids.push(column.uid);\n  pushuid(column, uids);\n  if (uids.indexOf(uid) > -1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * @param {Column} column - Defines the column\n * @param {string[]} uids - Defines the uid\n * @returns {void}\n * @hidden\n */\nexport function pushuid(column, uids) {\n  for (var i = 0; i < column.columns.length; i++) {\n    if (column.columns[parseInt(i.toString(), 10)].uid) {\n      uids.push(column.columns[parseInt(i.toString(), 10)].uid);\n    }\n    if (column.columns[parseInt(i.toString(), 10)].columns && column.columns[parseInt(i.toString(), 10)].columns.length) {\n      pushuid(column.columns[parseInt(i.toString(), 10)], uids);\n    }\n  }\n}\n/**\n * @param {Column} column - Defines the column\n * @returns {string} Returns the direction\n * @hidden\n */\nexport function frozenDirection(column) {\n  if (column.columns[0].freeze || column.columns[0].isFrozen) {\n    if (column.columns[0].freeze === 'Left' || column.columns[0].isFrozen) {\n      return 'Left';\n    } else if (column.columns[0].freeze === 'Right') {\n      return 'Right';\n    } else if (column.columns[0].freeze === 'Fixed') {\n      return 'Fixed';\n    } else {\n      return 'None';\n    }\n  } else {\n    if (column.columns[0].columns && column.columns[0].columns.length) {\n      return frozenDirection(column.columns[0]);\n    } else {\n      return 'None';\n    }\n  }\n}\n/**\n * @param {Element} row - Defines the row\n * @returns {void}\n * @hidden\n */\nexport function addFixedColumnBorder(row) {\n  if (row.querySelector('.e-fixedfreeze')) {\n    var cells = [].slice.call(row.querySelectorAll('.e-filterbarcell:not(.e-hide),.e-summarycell:not(.e-hide),.e-headercell:not(.e-hide),.e-rowcell:not(.e-hide)'));\n    for (var j = 0; j < cells.length; j++) {\n      if (cells[parseInt(j.toString(), 10)].classList.contains('e-fixedfreeze') && (!cells[j - 1] || cells[j - 1] && !cells[j - 1].classList.contains('e-fixedfreeze'))) {\n        cells[parseInt(j.toString(), 10)].classList.add('e-freezeleftborder');\n      }\n      if (cells[parseInt(j.toString(), 10)].classList.contains('e-fixedfreeze') && (!cells[j + 1] || cells[j + 1] && !cells[j + 1].classList.contains('e-fixedfreeze'))) {\n        cells[parseInt(j.toString(), 10)].classList.add('e-freezerightborder');\n      }\n    }\n  }\n}\n/**\n * @param {HTMLElement} node - Defines the row\n * @param {number} width - Defines the width\n * @param {boolean} isRtl - Boolean property\n * @param {string} position - Defines the position\n * @returns {void}\n * @hidden\n */\nexport function applyStickyLeftRightPosition(node, width, isRtl, position) {\n  if (position === 'Left') {\n    if (isRtl) {\n      node.style.right = width + 'px';\n    } else {\n      node.style.left = width + 'px';\n    }\n  }\n  if (position === 'Right') {\n    if (isRtl) {\n      node.style.left = width + 'px';\n    } else {\n      node.style.right = width + 'px';\n    }\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @param {Column} column - Defines the column\n * @param {Element} node - Defines the Element\n * @returns {void}\n * @hidden\n */\nexport function addStickyColumnPosition(gObj, column, node) {\n  if (column.freeze === 'Left' || column.isFrozen) {\n    node.classList.add('e-leftfreeze');\n    if (column.border === 'Left') {\n      node.classList.add('e-freezeleftborder');\n    }\n    if (column.index === 0) {\n      applyStickyLeftRightPosition(node, gObj.getIndentCount() * 30, gObj.enableRtl, 'Left');\n      if (gObj.enableColumnVirtualization) {\n        column.valueX = gObj.getIndentCount() * 30;\n      }\n    } else {\n      var cols = gObj.getColumns();\n      var width = gObj.getIndentCount() * 30;\n      for (var i = 0; i < cols.length; i++) {\n        if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n          break;\n        }\n        if (cols[parseInt(i.toString(), 10)].visible) {\n          width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n        }\n      }\n      applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Left');\n      if (gObj.enableColumnVirtualization) {\n        column.valueX = width;\n      }\n    }\n  } else if (column.freeze === 'Right') {\n    node.classList.add('e-rightfreeze');\n    var cols = gObj.getColumns();\n    if (column.border === 'Right') {\n      node.classList.add('e-freezerightborder');\n    }\n    if (column.index === cols[cols.length - 1].index) {\n      var width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n      applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Right');\n      if (gObj.enableColumnVirtualization) {\n        column.valueX = width;\n      }\n    } else {\n      var width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n      for (var i = cols.length - 1; i >= 0; i--) {\n        if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n          break;\n        }\n        if (cols[parseInt(i.toString(), 10)].visible) {\n          width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n        }\n      }\n      applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Right');\n      if (gObj.enableColumnVirtualization) {\n        column.valueX = width;\n      }\n    }\n  } else if (column.freeze === 'Fixed') {\n    node.classList.add('e-fixedfreeze');\n    var cols = gObj.getColumns();\n    var width = 0;\n    if (gObj.getVisibleFrozenLeftCount()) {\n      width = gObj.getIndentCount() * 30;\n    } else if (gObj.getFrozenMode() === 'Right') {\n      width = gObj.groupSettings.columns.length * 30;\n    }\n    for (var i = 0; i < cols.length; i++) {\n      if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n        break;\n      }\n      if (cols[parseInt(i.toString(), 10)].freeze === 'Left' || cols[parseInt(i.toString(), 10)].isFrozen || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n        if (cols[parseInt(i.toString(), 10)].visible) {\n          width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n        }\n      }\n    }\n    applyStickyLeftRightPosition(node, width - 1, gObj.enableRtl, 'Left');\n    width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n    for (var i = cols.length - 1; i >= 0; i--) {\n      if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n        break;\n      }\n      if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n        if (cols[parseInt(i.toString(), 10)].visible) {\n          width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n        }\n      }\n    }\n    applyStickyLeftRightPosition(node, width - 1, gObj.enableRtl, 'Right');\n  } else {\n    node.classList.add('e-unfreeze');\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid Object\n * @param {Column} col - Defines the column\n * @param {number} rowIndex - Defines the rowindex\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function getCellsByTableName(gObj, col, rowIndex) {\n  return [].slice.call(gObj.getDataRows()[parseInt(rowIndex.toString(), 10)].getElementsByClassName(literals.rowCell));\n}\n/**\n * @param {IGrid} gObj - Defines the column\n * @param {Column} col - Defines the index\n * @param {number} rowIndex - Defines the rules\n * @param {number} index - Defines the movable column rules\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getCellByColAndRowIndex(gObj, col, rowIndex, index) {\n  return getCellsByTableName(gObj, col, rowIndex)[parseInt(index.toString(), 10)];\n}\n/**\n * @param {Column} col - Defines the column\n * @param {number} index - Defines the index\n * @param {Object} rules - Defines the rules\n * @param {Object} mRules - Defines the movable column rules\n * @param {Object} frRules - Defines the Frozen rules\n * @param {number} len - Defines the length\n * @param {boolean} isCustom - Defines custom form validation\n * @returns {void}\n * @hidden\n */\nexport function setValidationRuels(col, index, rules, mRules, frRules, len, isCustom) {\n  if (isCustom) {\n    rules[getComplexFieldID(col.field)] = col.validationRules;\n  } else {\n    if (col.getFreezeTableName() === literals.frozenLeft || !index && col.getFreezeTableName() === literals.frozenRight || len === 1) {\n      rules[getComplexFieldID(col.field)] = col.validationRules;\n    } else if (col.getFreezeTableName() === 'movable' || !col.getFreezeTableName()) {\n      mRules[getComplexFieldID(col.field)] = col.validationRules;\n    } else if (col.getFreezeTableName() === literals.frozenRight) {\n      frRules[getComplexFieldID(col.field)] = col.validationRules;\n    }\n  }\n}\n/**\n * @param {string} numberFormat - Format\n * @param {string} type - Value type\n * @param {boolean} isExcel - Boolean property\n * @param {string} currencyCode - Specifies the currency code to be used for formatting.\n * @returns {string} returns formated value\n * @hidden\n */\nexport function getNumberFormat(numberFormat, type, isExcel, currencyCode) {\n  var format;\n  var intl = new Internationalization();\n  if (type === 'number') {\n    try {\n      format = intl.getNumberPattern({\n        format: numberFormat,\n        currency: currencyCode,\n        useGrouping: true\n      }, true);\n    } catch (error) {\n      format = numberFormat;\n    }\n  } else if (type === 'date' || type === 'time' || type === 'datetime') {\n    try {\n      format = intl.getDatePattern({\n        skeleton: numberFormat,\n        type: type\n      }, isExcel);\n      if (isNullOrUndefined(format)) {\n        // eslint-disable-next-line\n        throw 'error';\n      }\n    } catch (error) {\n      try {\n        format = intl.getDatePattern({\n          format: numberFormat,\n          type: type\n        }, isExcel);\n      } catch (error) {\n        format = numberFormat;\n      }\n    }\n  } else {\n    format = numberFormat;\n  }\n  if (type !== 'number') {\n    var patternRegex = /G|H|c|'| a|yy|y|EEEE|E/g;\n    var mtch_1 = {\n      'G': '',\n      'H': 'h',\n      'c': 'd',\n      '\\'': '\"',\n      ' a': ' AM/PM',\n      'yy': 'yy',\n      'y': 'yyyy',\n      'EEEE': 'dddd',\n      'E': 'ddd'\n    };\n    format = format.replace(patternRegex, function (pattern) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return mtch_1[\"\" + pattern];\n    });\n  }\n  return format;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @returns {void}\n * @hidden\n */\nexport function addBiggerDialog(gObj) {\n  if (gObj.enableAdaptiveUI) {\n    var dialogs = document.getElementsByClassName('e-responsive-dialog');\n    for (var i = 0; i < dialogs.length; i++) {\n      dialogs[parseInt(i.toString(), 10)].classList.add('e-bigger');\n    }\n  }\n}\n/**\n * @param {string} value - specifies the trr\n * @param {Object} mapObject - specifies the idx\n * @returns {Object | string} returns object or string\n * @hidden\n */\nexport function performComplexDataOperation(value, mapObject) {\n  var returnObj;\n  var length = value.split('.').length;\n  var splits = value.split('.');\n  var duplicateMap = mapObject;\n  for (var i = 0; i < length; i++) {\n    returnObj = duplicateMap[splits[parseInt(i.toString(), 10)]];\n    duplicateMap = returnObj;\n  }\n  return returnObj;\n}\n/**\n * @param {Object} tr - specifies the trr\n * @param {number} idx - specifies the idx\n * @param {string} displayVal - specifies the displayval\n * @param {Row<Column>} rows - specifies the rows\n * @param {IGrid} parent - Grid instance\n * @param {boolean} isContent - check for content renderer\n * @returns {void}\n * @hidden\n */\nexport function setDisplayValue(tr, idx, displayVal, rows, parent, isContent) {\n  var trs = Object.keys(tr);\n  var actualIndex = idx;\n  for (var i = 0; i < trs.length; i++) {\n    var td = tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)];\n    if (parent && !parent.isFrozenGrid() && !parent.isRowDragable()) {\n      td = !isNullOrUndefined(td) && parseInt(td.getAttribute('data-colindex'), 10) === idx ? td : tr[parseInt(i.toString(), 10)].querySelector(\"td[data-colindex=\\\"\" + idx + \"\\\"]\");\n      if (isNullOrUndefined(td)) {\n        continue;\n      } else {\n        idx = parent.getContentTable().querySelector('.e-detailrowcollapse, .e-detailrowexpand') ? td.cellIndex - 1 : td.cellIndex;\n      }\n    }\n    if (tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell').length && td) {\n      setStyleAttribute(tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)], {\n        'display': displayVal\n      });\n      if (tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)].classList.contains('e-hide')) {\n        removeClass([tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)]], ['e-hide']);\n      }\n      if (isContent && parent.isRowDragable()) {\n        var index = idx + 1;\n        rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(index.toString(), 10)].visible = displayVal === '' ? true : false;\n      } else {\n        if (!isNullOrUndefined(rows[trs[parseInt(i.toString(), 10)]])) {\n          rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(idx.toString(), 10)].visible = displayVal === '' ? true : false;\n          if (rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(idx.toString(), 10)].visible === false) {\n            tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)].classList.add('e-hide');\n          }\n        }\n      }\n      idx = actualIndex;\n    }\n  }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function addRemoveEventListener(parent, evt, isOn, module) {\n  for (var _i = 0, evt_1 = evt; _i < evt_1.length; _i++) {\n    var inst = evt_1[_i];\n    if (isOn) {\n      parent.on(inst.event, inst.handler, module);\n    } else {\n      parent.off(inst.event, inst.handler);\n    }\n  }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function createEditElement(parent, column, classNames, attr) {\n  var complexFieldName = getComplexFieldID(column.field);\n  attr = Object.assign(attr, {\n    id: parent.element.id + complexFieldName,\n    name: complexFieldName,\n    'e-mappinguid': column.uid\n  });\n  return parent.createElement('input', {\n    className: classNames,\n    attrs: attr\n  });\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} uid - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByUid(gObj, uid) {\n  var column;\n  for (var _i = 0, _a = gObj.columnModel; _i < _a.length; _i++) {\n    var col = _a[_i];\n    if (col.uid === uid) {\n      column = col;\n      break;\n    }\n  }\n  return column;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} field - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByFieldName(gObj, field) {\n  var column;\n  if (!gObj.columnModel) {\n    gObj.getColumns();\n  }\n  for (var _i = 0, _a = gObj.columnModel; _i < _a.length; _i++) {\n    var col = _a[_i];\n    if (col.field === field) {\n      column = col;\n      break;\n    }\n  }\n  return column;\n}\n/**\n * @param {string} id - Defines component id\n * @param {string[]} evts - Defines events\n * @param {object} handlers - Defines event handlers\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function registerEventHandlers(id, evts, handlers, instance) {\n  instance.eventHandlers[\"\" + id] = {};\n  for (var i = 0; i < evts.length; i++) {\n    instance.eventHandlers[\"\" + id][evts[parseInt(i.toString(), 10)]] = handlers[evts[parseInt(i.toString(), 10)]];\n  }\n}\n/**\n * @param {any} component - Defines component instance\n * @param {string[]} evts - Defines events\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function removeEventHandlers(component, evts, instance) {\n  for (var i = 0; i < evts.length; i++) {\n    if (component.isDestroyed) {\n      break;\n    }\n    component.removeEventListener(evts[parseInt(i.toString(), 10)], instance.eventHandlers[component.element.id][evts[parseInt(i.toString(), 10)]]);\n  }\n}\n/**\n * @param {IGrid | IXLFilter} parent - Defines parent instance\n * @param {string[]} templates - Defines the templates name which are needs to clear\n * @returns {void}\n * @hidden\n */\nexport function clearReactVueTemplates(parent, templates) {\n  parent.destroyTemplate(templates);\n  if (parent.isReact) {\n    parent.renderTemplates();\n  }\n}\n/**\n *\n * @param { Element } row - Defines row element\n * @returns { number } row index\n */\nexport function getRowIndexFromElement(row) {\n  return parseInt(row.getAttribute(literals.dataRowIndex), 10);\n}\n/**\n *\n * @param { string[] } fields - Defines grouped fields\n * @param { values } values - Defines caption keys\n * @param { any } instance - Defines dynamic class instance\n * @returns { Predicate } returns filter predicate\n */\n// eslint-disable-next-line\nexport function generateExpandPredicates(fields, values, instance) {\n  var filterCols = [];\n  for (var i = 0; i < fields.length; i++) {\n    var column = instance.parent.getColumnByField(fields[parseInt(i.toString(), 10)]);\n    var value = values[parseInt(i.toString(), 10)] === 'null' ? null : values[parseInt(i.toString(), 10)];\n    var pred = {\n      field: fields[parseInt(i.toString(), 10)],\n      predicate: 'or',\n      uid: column.uid,\n      operator: 'equal',\n      type: column.type,\n      matchCase: instance.allowCaseSensitive,\n      ignoreAccent: instance.parent.filterSettings.ignoreAccent\n    };\n    if (value === '' || isNullOrUndefined(value)) {\n      filterCols = filterCols.concat(CheckBoxFilterBase.generateNullValuePredicates(pred));\n    } else {\n      filterCols.push(extend({}, {\n        value: value\n      }, pred));\n    }\n  }\n  return CheckBoxFilterBase.getPredicate(filterCols);\n}\n/**\n *\n * @param { Predicate } pred - Defines filter predicate\n * @returns { Predicate[] } Returns formed predicate\n */\nexport function getPredicates(pred) {\n  var predicateList = [];\n  for (var _i = 0, _a = Object.keys(pred); _i < _a.length; _i++) {\n    var prop = _a[_i];\n    predicateList.push(pred[\"\" + prop]);\n  }\n  return predicateList;\n}\n/**\n *\n * @param { number } index - Defines group caption indent\n * @param { Row<Column>[] } rowsObject - Defines rows object\n * @returns { { fields: string[], keys: string[] } } Returns grouped keys and values\n */\nexport function getGroupKeysAndFields(index, rowsObject) {\n  var fields = [];\n  var keys = [];\n  for (var i = index; i >= 0; i--) {\n    if (rowsObject[parseInt(i.toString(), 10)].isCaptionRow && fields.indexOf(rowsObject[parseInt(i.toString(), 10)].data.field) === -1 && (rowsObject[parseInt(i.toString(), 10)].indent < rowsObject[parseInt(index.toString(), 10)].indent || i === index)) {\n      fields.push(rowsObject[parseInt(i.toString(), 10)].data.field);\n      keys.push(rowsObject[parseInt(i.toString(), 10)].data.key);\n      if (rowsObject[parseInt(i.toString(), 10)].indent === 0) {\n        break;\n      }\n    }\n  }\n  return {\n    fields: fields,\n    keys: keys\n  };\n}\n// eslint-disable-next-line\n/**\n *\n * @param { number[][] } checkActiveMatrix - Defines matrix to check\n * @param { number[] } checkCellIndex - Defines index to check\n * @param { boolean } next - Defines select next or previous index\n * @returns { number[] } - Returns next active current index\n */\nexport function findCellIndex(checkActiveMatrix, checkCellIndex, next) {\n  var activeMatrix = checkActiveMatrix;\n  var cellIndex = checkCellIndex;\n  var currentCellIndexPass = false;\n  if (next) {\n    for (var i = cellIndex[0]; i < activeMatrix.length; i++) {\n      var rowCell = activeMatrix[parseInt(i.toString(), 10)];\n      for (var j = 0; j < rowCell.length; j++) {\n        if (currentCellIndexPass && activeMatrix[parseInt(i.toString(), 10)][parseInt(j.toString(), 10)] === 1) {\n          cellIndex = [i, j];\n          return cellIndex;\n        }\n        if (!currentCellIndexPass && cellIndex.toString() === [i, j].toString()) {\n          currentCellIndexPass = true;\n        }\n      }\n    }\n  } else {\n    for (var i = cellIndex[0]; i >= 0; i--) {\n      var rowCell = activeMatrix[parseInt(i.toString(), 10)];\n      for (var j = rowCell.length - 1; j >= 0; j--) {\n        if (currentCellIndexPass && activeMatrix[parseInt(i.toString(), 10)][parseInt(j.toString(), 10)] === 1) {\n          cellIndex = [i, j];\n          return cellIndex;\n        }\n        if (!currentCellIndexPass && cellIndex.toString() === [i, j].toString()) {\n          currentCellIndexPass = true;\n        }\n      }\n    }\n  }\n  return cellIndex;\n}\n/**\n *\n * @param { string } string - Defines string need to capitalized first letter\n * @returns { string } - Returns capitalized first letter string\n */\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","map":{"version":3,"names":["ChildProperty","compile","baseTemplateComplier","setValue","Internationalization","isUndefined","extend","baseExtend","isNullOrUndefined","getValue","classList","setStyleAttribute","addClass","attributes","remove","createElement","removeClass","isObject","select","selectAll","DataUtil","Query","DataManager","Predicate","UrlAdaptor","Deferred","Column","calculateRelativeBasedPosition","Print","CheckBoxFilterBase","literals","doesImplementInterface","target","checkFor","prototype","valueAccessor","field","data","column","getObject","headerValueAccessor","getUpdateUsingRaf","updateFunction","callBack","requestAnimationFrame","e","isExportColumns","exportProperties","columns","length","updateColumnTypeForExportColumns","gObj","exportColumns","gridColumns","i","parseInt","toString","j","type","updatecloneRow","grid","nRows","actualRows","vRows","isDataRow","push","isExpand","isCaptionRow","getCollapsedRowsCount","vcRows","count","val","gSummary","total","gLen","groupSettings","records","items","value","dataRowCnt","agrCnt","indent","len","gLevel","GroupGuid","childLevels","recursive","row","rCount","length_1","nLevel","iterateArrayOrObject","collection","predicate","result","pred","iterateExtend","array","obj","getActualProperties","templateCompiler","template","validSelector","document","querySelectorAll","querySelector","innerHTML","trim","undefined","setStyleAndAttributes","node","customAttributes","copyAttr","copied","first","second","exclude","moved","values","Object","keys","indexOf","setColumnIndex","columnModel","ind","index","prepareColumns","autoWidth","c","toLowerCase","allowReordering","headerText","foreignKeyValue","foreignKeyField","window","width","visible","setCssInGridPopUp","popUp","className","popUpSpan","position","parentElement","getBoundingClientRect","targetPosition","style","display","isBottomTail","clientY","changedTouches","offsetHeight","top","left","getPopupLeftPosition","popup","offsetWidth","x","getPosition","right","parentsUntil","elem","selector","isID","parent","id","contains","getElementIndex","element","elements","isEqualNode","inArray","getActualPropFromColl","coll","hasOwnProperty","properties","removeElement","slice","call","clientX","y","uid","getUid","prefix","appendChildren","children","appendChild","parents","calculateAggregate","context","temp","customAggregate","Array","aggregates","scrollWidth","getScrollBarWidth","divNode","cssText","body","clientWidth","removeChild","rowHeight","getRowHeight","table","styles","attrs","role","rect","Math","ceil","height","actualRowHeight","getActualRowHeight","isComplexField","split","getComplexFieldID","replace","getParsedFieldID","setComplexFieldID","isEditable","col","isOldRow","isIdentity","isPrimaryKey","allowEditing","isActionPrevent","inst","dlg","editSettings","mode","showConfirmDialog","wrap","action","clName","add","setFormatter","serviceLocator","fmtr","getService","format","args","skeleton","getFormatFunction","setParser","getParserFunction","addRemoveActiveClasses","cells","_i","arguments","setAttribute","removeAttribute","distinctStringValues","res","getFilterMenuPostion","dialogObj","elementVisible","dlgWidth","newpos","leftPos","getZIndexCalcualtion","zIndex","toogleCheckbox","span","input","previousSibling","checked","setChecked","createCboxWithWrap","div","removeAddCboxClasses","refreshForeignData","getForeignData","foreignKeyData","isForeignKey","lValue","fField","key","query","fdata","dataSource","json","columnData","getDay","where","getDatePredicate","operator","matchCase","executeLocal","getColumnByForeignKeyValue","some","padZero","String","filterObject","isExecuteLocal","datePredicate","prevDate","nextDate","prevObj","nextObj","Date","dateOnlyString","getFullYear","getMonth","getDate","predicates","setSeconds","getSeconds","setHours","predicateSt","predicateEnd","and","or","setProperties","ejpredicate","isGroupAdaptive","enableVirtualization","isVirtualAdaptive","enableLazyLoading","object","splits","newCase","charAt","toUpperCase","getCustomDateFormat","colType","intl","formatvalue","formatter","getDatePattern","getExpandedState","hierarchyPrintMode","rows","getRowsObject","rows_1","isDetailRow","allowPaging","printMode","pageSettings","currentPage","pageSize","childGrid","gridModel","getPrintGridModel","printGridModel","_a","printGridProp","getColumns","detailTemplate","expandedRows","extendObjWithFn","deep","obj1","getPrototypeOf","concat","getPrototypesOfObj","i_1","source","cpy","cln","isArray","measureColumnDepth","max","depth","checkDepth","indices","refreshFilteredColsUid","filteredCols","getForeignKeyColumns","enableColumnVirtualization","getColumnModelByFieldName","getColumnByField","Global","timer","getTransformValues","defaultView","getComputedStyle","transformV","getPropertyValue","replacedTv","translateX","parseFloat","translateY","applyBiggerTheme","rootElement","getScrollWidth","scrollElem","getContent","firstElementChild","resetColspanGroupCaption","idx","colspan","cols","isRowDragable","groupCaptionRowLeftRightPos","tr","childNodes","td","applyStickyLeftRightPosition","enableRtl","getAttribute","newColspan","uid_1","getColumnByUid","ensureLastRow","gridObj","cntOffset","ensureFirstRow","rowTop","isRowEnteredInGrid","startIndex","scrollTop","endIndex","getEditedDataIndex","keyField","getPrimaryKeyFieldNames","dataIndex","getCurrentViewRecords","filter","includes","currentValue","originalValue","eventPromise","state","getStateEventArgument","def","resolve","deffered","adaptr","dm","url","adaptor","processQuery","JSON","parse","ispercentageWidth","getVisibleColumns","percentageCol","undefinedWidthCol","showGroupedColumn","resetRowIndex","rowElms","startRowIndex","isAltRow","enableAltRow","dataRowIndex","ariaRowIndex","renderModule","emptyRow","compareChanges","changes","newArray","dataToBeUpdated","reduce","r","o","assign","map","k","setRowElements","contentModule","rowElements","sliceElements","start","end","isChildColumn","uids","pushuid","frozenDirection","freeze","isFrozen","addFixedColumnBorder","isRtl","addStickyColumnPosition","border","getIndentCount","valueX","getFrozenMode","getVisibleFrozenLeftCount","getCellsByTableName","rowIndex","getDataRows","getElementsByClassName","rowCell","getCellByColAndRowIndex","setValidationRuels","rules","mRules","frRules","isCustom","validationRules","getFreezeTableName","frozenLeft","frozenRight","getNumberFormat","numberFormat","isExcel","currencyCode","getNumberPattern","currency","useGrouping","error","patternRegex","mtch_1","pattern","addBiggerDialog","enableAdaptiveUI","dialogs","performComplexDataOperation","mapObject","returnObj","duplicateMap","setDisplayValue","displayVal","isContent","trs","actualIndex","isFrozenGrid","getContentTable","cellIndex","addRemoveEventListener","evt","isOn","module","evt_1","on","event","handler","off","createEditElement","classNames","attr","complexFieldName","name","getColumnModelByUid","registerEventHandlers","evts","handlers","instance","eventHandlers","removeEventHandlers","component","isDestroyed","removeEventListener","clearReactVueTemplates","templates","destroyTemplate","isReact","renderTemplates","getRowIndexFromElement","generateExpandPredicates","fields","filterCols","allowCaseSensitive","ignoreAccent","filterSettings","generateNullValuePredicates","getPredicate","getPredicates","predicateList","prop","getGroupKeysAndFields","rowsObject","findCellIndex","checkActiveMatrix","checkCellIndex","next","activeMatrix","currentCellIndexPass","capitalizeFirstLetter","string"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js"],"sourcesContent":["import { ChildProperty, compile as baseTemplateComplier, setValue, Internationalization, isUndefined } from '@syncfusion/ej2-base';\nimport { extend as baseExtend, isNullOrUndefined, getValue, classList } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, addClass, attributes, remove, createElement, removeClass } from '@syncfusion/ej2-base';\nimport { isObject, select, selectAll } from '@syncfusion/ej2-base';\nimport { DataUtil, Query, DataManager, Predicate, UrlAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { Column } from '../models/column';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { Print } from '../actions/print';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\nimport * as literals from '../base/string-literals';\n//https://typescript.codeplex.com/discussions/401501\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {Object} target - specifies the target\n * @param  {string} checkFor - specifies the checkfors\n * @returns {boolean} returns the boolean\n * @hidden\n */\nexport function doesImplementInterface(target, checkFor) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return target.prototype && checkFor in target.prototype;\n}\n/**\n * Function to get value from provided data\n *\n * @param  {string} field - specifies the field\n * @param  {Object} data - specifies the data\n * @param  {ColumnModel} column - specifies the column\n * @returns {Object} returns the object\n * @hidden\n */\n// eslint-disable-next-line\nexport function valueAccessor(field, data, column) {\n    return (isNullOrUndefined(field) || field === '') ? '' : DataUtil.getObject(field, data);\n}\n/**\n * Defines the method used to apply custom header cell values from external function and display this on each header cell rendered.\n *\n * @param  {string} field - specifies the field\n * @param  {ColumnModel} column - specifies the column\n * @returns {object} headerValueAccessor\n * @hidden\n */\nexport function headerValueAccessor(field, column) {\n    return (isNullOrUndefined(field) || field === '') ? '' : DataUtil.getObject(field, column);\n}\n/**\n * The function used to update Dom using requestAnimationFrame.\n *\n * @param {Function} updateFunction - Function that contains the actual action\n * @param {object} callBack - defines the callback\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function getUpdateUsingRaf(updateFunction, callBack) {\n    requestAnimationFrame(function () {\n        try {\n            callBack(null, updateFunction());\n        }\n        catch (e) {\n            callBack(e);\n        }\n    });\n}\n/**\n * @hidden\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @returns {boolean} Returns isExportColumns\n */\nexport function isExportColumns(exportProperties) {\n    return !isNullOrUndefined(exportProperties) &&\n        !isNullOrUndefined(exportProperties.columns) && exportProperties.columns.length > 0;\n}\n/**\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function updateColumnTypeForExportColumns(exportProperties, gObj) {\n    var exportColumns = exportProperties.columns;\n    var gridColumns = gObj.columns;\n    for (var i = 0; i < exportColumns.length; i++) {\n        if (gridColumns.length - 1 >= i) {\n            if (gridColumns[parseInt(i.toString(), 10)].columns) {\n                for (var j = 0; j < gridColumns[parseInt(i.toString(), 10)].columns.length; j++) {\n                    exportColumns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)]\n                        .type = gridColumns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)].type;\n                }\n            }\n            else {\n                exportColumns[parseInt(i.toString(), 10)].type = gridColumns[parseInt(i.toString(), 10)].type;\n            }\n        }\n    }\n}\n/**\n * @hidden\n * @param {IGrid} grid - Defines the grid\n * @returns {void}\n */\nexport function updatecloneRow(grid) {\n    var nRows = [];\n    var actualRows = grid.vRows;\n    for (var i = 0; i < actualRows.length; i++) {\n        if (actualRows[parseInt(i.toString(), 10)].isDataRow) {\n            nRows.push(actualRows[parseInt(i.toString(), 10)]);\n        }\n        else if (!actualRows[parseInt(i.toString(), 10)].isDataRow) {\n            nRows.push(actualRows[parseInt(i.toString(), 10)]);\n            if (!actualRows[parseInt(i.toString(), 10)].isExpand && actualRows[parseInt(i.toString(), 10)].isCaptionRow) {\n                i += getCollapsedRowsCount(actualRows[parseInt(i.toString(), 10)], grid);\n            }\n        }\n    }\n    grid.vcRows = nRows;\n}\nvar count = 0;\n/**\n * @hidden\n * @param {Row<Column>} val - Defines the value\n * @param {IGrid} grid - Defines the grid\n * @returns {number} Returns the collapsed row count\n */\nexport function getCollapsedRowsCount(val, grid) {\n    count = 0;\n    var gSummary = 'gSummary';\n    var total = 'count';\n    var gLen = grid.groupSettings.columns.length;\n    var records = 'records';\n    var items = 'items';\n    var value = val[\"\" + gSummary];\n    var dataRowCnt = 0;\n    var agrCnt = 'aggregatesCount';\n    if (value === val.data[\"\" + total]) {\n        if (grid.groupSettings.columns.length && !isNullOrUndefined(val[\"\" + agrCnt]) && val[\"\" + agrCnt]) {\n            if (grid.groupSettings.columns.length !== 1) {\n                count += (val.indent !== 0 && (value) < 2) ? (val[\"\" + gSummary] * ((gLen - val.indent) + (gLen - val.indent) * val[\"\" + agrCnt])) :\n                    (val[\"\" + gSummary] * ((gLen - val.indent) + (gLen - val.indent - 1) * val[\"\" + agrCnt])) + val[\"\" + agrCnt];\n            }\n            else if (grid.groupSettings.columns.length === 1) {\n                count += (val[\"\" + gSummary] * (gLen - val.indent)) + val[\"\" + agrCnt];\n            }\n        }\n        else if (grid.groupSettings.columns.length) {\n            if (grid.groupSettings.columns.length !== 1) {\n                count += val[\"\" + gSummary] * (grid.groupSettings.columns.length - val.indent);\n            }\n            else {\n                count += val[\"\" + gSummary];\n            }\n        }\n        return count;\n    }\n    else {\n        for (var i = 0, len = val.data[\"\" + items].length; i < len; i++) {\n            var gLevel = val.data[\"\" + items][parseInt(i.toString(), 10)];\n            count += gLevel[\"\" + items].length + ((gLen !== grid.columns.length) &&\n                !isNullOrUndefined(gLevel[\"\" + items][\"\" + records]) ? gLevel[\"\" + items][\"\" + records].length : 0);\n            dataRowCnt += (!isNullOrUndefined(gLevel[\"\" + items][\"\" + records]) && !isNullOrUndefined(val[\"\" + agrCnt])) ? gLevel[\"\" + items][\"\" + records].length :\n                gLevel[\"\" + items].length;\n            if (gLevel[\"\" + items].GroupGuid && gLevel[\"\" + items].childLevels !== 0) {\n                recursive(gLevel);\n            }\n        }\n        count += val.data[\"\" + items].length;\n        if (!isNullOrUndefined(val[\"\" + agrCnt])) {\n            if (val[\"\" + agrCnt] && count && dataRowCnt !== 0) {\n                count += ((count - dataRowCnt) * val[\"\" + agrCnt]) + val[\"\" + agrCnt];\n            }\n        }\n    }\n    return count;\n}\n/**\n * @param {Object[]} row - Defines the row\n * @returns {void}\n * @hidden\n */\nexport function recursive(row) {\n    var items = 'items';\n    var rCount = 'count';\n    for (var j = 0, length_1 = row[\"\" + items].length; j < length_1; j++) {\n        var nLevel = row[\"\" + items][parseInt(j.toString(), 10)];\n        count += nLevel[\"\" + rCount];\n        if (nLevel[\"\" + items].childLevels !== 0) {\n            recursive(nLevel);\n        }\n    }\n}\n/**\n * @param {Object[]} collection - Defines the array\n * @param {Object} predicate - Defines the predicate\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateArrayOrObject(collection, predicate) {\n    var result = [];\n    for (var i = 0, len = collection.length; i < len; i++) {\n        var pred = predicate(collection[parseInt(i.toString(), 10)], i);\n        if (!isNullOrUndefined(pred)) {\n            result.push(pred);\n        }\n    }\n    return result;\n}\n/**\n * @param {Object[]} array - Defines the array\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateExtend(array) {\n    var obj = [];\n    for (var i = 0; i < array.length; i++) {\n        obj.push(baseExtend({}, getActualProperties(array[parseInt(i.toString(), 10)]), {}, true));\n    }\n    return obj;\n}\n/**\n * @param {string | Function} template - Defines the template\n * @returns {Function} Returns the function\n * @hidden\n */\nexport function templateCompiler(template) {\n    if (template) {\n        try {\n            var validSelector = template[0] !== '<';\n            if (typeof template === 'function') {\n                return baseTemplateComplier(template);\n            }\n            else if (validSelector && document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            else {\n                return baseTemplateComplier(template);\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/**\n * @param {Element} node - Defines the column\n * @param {Object} customAttributes - Defines the index\n * @returns {void}\n * @hidden\n */\nexport function setStyleAndAttributes(node, customAttributes) {\n    var copyAttr = {};\n    var literals = ['style', 'class'];\n    //Dont touch the original object - make a copy\n    baseExtend(copyAttr, customAttributes, {});\n    if ('style' in copyAttr) {\n        setStyleAttribute(node, copyAttr[literals[0]]);\n        delete copyAttr[literals[0]];\n    }\n    if ('class' in copyAttr) {\n        addClass([node], copyAttr[literals[1]]);\n        delete copyAttr[literals[1]];\n    }\n    attributes(node, copyAttr);\n}\n/**\n * @param {Object} copied - Defines the column\n * @param {Object} first - Defines the inndex\n * @param {Object} second - Defines the second object\n * @param {string[]} exclude - Defines the exclude\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function extend(copied, first, second, exclude) {\n    var moved = baseExtend(copied, first, second);\n    var values = Object.keys(moved);\n    for (var i = 0; i < values.length; i++) {\n        if (exclude && exclude.indexOf(values[parseInt(i.toString(), 10)]) !== -1) {\n            delete moved[values[parseInt(i.toString(), 10)]];\n        }\n    }\n    return moved;\n}\n/**\n * @param {Column[]} columnModel - Defines the column\n * @param {number} ind - Defines the inndex\n * @returns {number} - Returns the columnindex\n * @hidden\n */\nexport function setColumnIndex(columnModel, ind) {\n    if (ind === void 0) { ind = 0; }\n    for (var i = 0, len = columnModel.length; i < len; i++) {\n        if (columnModel[parseInt(i.toString(), 10)].columns) {\n            columnModel[parseInt(i.toString(), 10)].index = isNullOrUndefined(columnModel[parseInt(i.toString(), 10)].index) ? ind\n                : columnModel[parseInt(i.toString(), 10)].index;\n            ind++;\n            ind = setColumnIndex(columnModel[parseInt(i.toString(), 10)].columns, ind);\n        }\n        else {\n            columnModel[parseInt(i.toString(), 10)].index = isNullOrUndefined(columnModel[parseInt(i.toString(), 10)].index) ? ind\n                : columnModel[parseInt(i.toString(), 10)].index;\n            ind++;\n        }\n    }\n    return ind;\n}\n/**\n * @param {Column[] | string[] | ColumnModel[]} columns - Defines the column\n * @param {boolean} autoWidth - Defines the autowidth\n * @param {IGrid} gObj - Defines the class name\n * @returns {Column} - Returns the columns\n * @hidden\n */\nexport function prepareColumns(columns, autoWidth, gObj) {\n    for (var c = 0, len = columns.length; c < len; c++) {\n        var column = void 0;\n        if (typeof columns[parseInt(c.toString(), 10)] === 'string') {\n            column = new Column({ field: columns[parseInt(c.toString(), 10)] }, gObj);\n        }\n        else if (!(columns[parseInt(c.toString(), 10)] instanceof Column) || columns[parseInt(c.toString(), 10)].columns) {\n            if (!columns[parseInt(c.toString(), 10)].columns) {\n                column = new Column(columns[parseInt(c.toString(), 10)], gObj);\n            }\n            else {\n                columns[parseInt(c.toString(), 10)].columns = prepareColumns(columns[parseInt(c.toString(), 10)].columns, null, gObj);\n                column = new Column(columns[parseInt(c.toString(), 10)], gObj);\n            }\n        }\n        else {\n            column = columns[parseInt(c.toString(), 10)];\n        }\n        if (column.type && column.type.toLowerCase() === 'checkbox') {\n            column.allowReordering = false;\n        }\n        column.headerText = isNullOrUndefined(column.headerText) ? column.foreignKeyValue || column.field || '' : column.headerText;\n        column.foreignKeyField = column.foreignKeyField || column.field;\n        column.valueAccessor = (typeof column.valueAccessor === 'string' ? getValue(column.valueAccessor, window)\n            : column.valueAccessor) || valueAccessor;\n        column.width = autoWidth && isNullOrUndefined(column.width) ? 200 : column.width;\n        if (isNullOrUndefined(column.visible)) {\n            column.visible = true;\n        }\n        columns[parseInt(c.toString(), 10)] = column;\n    }\n    return columns;\n}\n/**\n * @param {HTMLElement} popUp - Defines the popup element\n * @param {MouseEvent | TouchEvent} e - Defines the moouse event\n * @param {string} className - Defines the class name\n * @returns {void}\n * @hidden\n */\nexport function setCssInGridPopUp(popUp, e, className) {\n    var popUpSpan = popUp.querySelector('span');\n    var position = popUp.parentElement.getBoundingClientRect();\n    var targetPosition = e.target.getBoundingClientRect();\n    popUpSpan.className = className;\n    popUp.style.display = '';\n    var isBottomTail = (isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY :\n        e.clientY) > popUp.offsetHeight + 10;\n    popUp.style.top = targetPosition.top - position.top +\n        (isBottomTail ? -(popUp.offsetHeight + 10) : popUp.offsetHeight + 10) + 'px'; //10px for tail element\n    popUp.style.left = getPopupLeftPosition(popUp, e, targetPosition, position.left) + 'px';\n    if (isBottomTail) {\n        popUp.querySelector('.e-downtail').style.display = '';\n        popUp.querySelector('.e-uptail').style.display = 'none';\n    }\n    else {\n        popUp.querySelector('.e-downtail').style.display = 'none';\n        popUp.querySelector('.e-uptail').style.display = '';\n    }\n}\n/**\n * @param {HTMLElement} popup - Defines the popup element\n * @param {MouseEvent | TouchEvent} e  - Defines the mouse event\n * @param {Object} targetPosition - Defines the target position\n * @param {number} targetPosition.top - Defines the top position\n * @param {number} targetPosition.left  - Defines the left position\n * @param {number} targetPosition.right  - Defines the right position\n * @param {number} left - Defines the left position\n * @returns {number} Returns the popup left position\n * @hidden\n */\nfunction getPopupLeftPosition(popup, e, targetPosition, left) {\n    var width = popup.offsetWidth / 2;\n    var x = getPosition(e).x;\n    if (x - targetPosition.left < width) {\n        return targetPosition.left - left;\n    }\n    else if (targetPosition.right - x < width) {\n        return targetPosition.right - left - width * 2;\n    }\n    else {\n        return x - left - width;\n    }\n}\n/**\n * @param {Object} obj - Defines the object\n * @returns {Object} Returns the Properties\n * @hidden\n */\nexport function getActualProperties(obj) {\n    if (obj instanceof ChildProperty) {\n        return getValue('properties', obj);\n    }\n    else {\n        return obj;\n    }\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the string selector\n * @param {boolean} isID - Defines the isID\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return parent;\n}\n/**\n * @param {Element} element - Defines the element\n * @param {Element} elements - Defines the element\n * @returns {number} Returns the element index\n * @hidden\n */\nexport function getElementIndex(element, elements) {\n    var index = -1;\n    for (var i = 0, len = elements.length; i < len; i++) {\n        if (elements[parseInt(i.toString(), 10)].isEqualNode(element)) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @param {Object} value - Defines the value\n * @param {Object} collection - defines the collection\n * @returns {number} Returns the array\n * @hidden\n */\nexport function inArray(value, collection) {\n    for (var i = 0, len = collection.length; i < len; i++) {\n        if (collection[parseInt(i.toString(), 10)] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * @param {Object} collection - Defines the collection\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getActualPropFromColl(collection) {\n    var coll = [];\n    for (var i = 0, len = collection.length; i < len; i++) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (collection[parseInt(i.toString(), 10)].hasOwnProperty('properties')) {\n            coll.push(collection[parseInt(i.toString(), 10)].properties);\n        }\n        else {\n            coll.push(collection[parseInt(i.toString(), 10)]);\n        }\n    }\n    return coll;\n}\n/**\n * @param {Element} target - Defines the target element\n * @param {string} selector - Defines the selector\n * @returns {void}\n * @hidden\n */\nexport function removeElement(target, selector) {\n    var elements = [].slice.call(target.querySelectorAll(selector));\n    for (var i = 0; i < elements.length; i++) {\n        remove(elements[parseInt(i.toString(), 10)]);\n    }\n}\n/**\n * @param {MouseEvent | TouchEvent} e Defines the mouse event\n * @returns {IPosition} Returns the position\n * @hidden\n */\nexport function getPosition(e) {\n    var position = {};\n    position.x = (isNullOrUndefined(e.clientX) ? e.changedTouches[0].clientX :\n        e.clientX);\n    position.y = (isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY :\n        e.clientY);\n    return position;\n}\nvar uid = 0;\n/**\n * @param {string} prefix - Defines the prefix string\n * @returns {string} Returns the uid\n * @hidden\n */\nexport function getUid(prefix) {\n    return prefix + uid++;\n}\n/**\n * @param {Element | DocumentFragment} elem - Defines the element\n * @param {Element[] | NodeList} children - Defines the Element\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function appendChildren(elem, children) {\n    for (var i = 0, len = children.length; i < len; i++) {\n        if (len === children.length) {\n            elem.appendChild(children[parseInt(i.toString(), 10)]);\n        }\n        else {\n            elem.appendChild(children[0]);\n        }\n    }\n    return elem;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the selector\n * @param {boolean} isID - Defines isID\n * @returns {Element} Return the element\n * @hidden\n */\nexport function parents(elem, selector, isID) {\n    var parent = elem;\n    var parents = [];\n    while (parent) {\n        if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n            parents.push(parent);\n        }\n        parent = parent.parentElement;\n    }\n    return parents;\n}\n/**\n * @param {AggregateType | string} type - Defines the type\n * @param {Object} data - Defines the data\n * @param {AggregateColumnModel} column - Defines the column\n * @param {Object} context - Defines the context\n * @returns {Object} Returns the calculated aggragate\n * @hidden\n */\nexport function calculateAggregate(type, data, column, context) {\n    if (type === 'Custom') {\n        var temp = column.customAggregate;\n        if (typeof temp === 'string') {\n            temp = getValue(temp, window);\n        }\n        return temp ? temp.call(context, data, column) : '';\n    }\n    return (column.field in data || data instanceof Array) ? DataUtil.aggregates[type.toLowerCase()](data, column.field) : null;\n}\n/** @hidden */\nvar scrollWidth = null;\n/** @hidden\n * @returns {number} - Returns the scrollbarwidth\n */\nexport function getScrollBarWidth() {\n    if (scrollWidth !== null) {\n        return scrollWidth;\n    }\n    var divNode = document.createElement('div');\n    var value = 0;\n    divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n    document.body.appendChild(divNode);\n    value = (divNode.offsetWidth - divNode.clientWidth) | 0;\n    document.body.removeChild(divNode);\n    return scrollWidth = value;\n}\n/** @hidden */\nvar rowHeight;\n/**\n * @param {HTMLElement} element - Defines the element\n * @returns {number} Returns the roww height\n * @hidden\n */\nexport function getRowHeight(element) {\n    if (rowHeight !== undefined) {\n        return rowHeight;\n    }\n    var table = createElement('table', { className: literals.table, styles: 'visibility: hidden', attrs: { role: 'grid' } });\n    table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n    element.appendChild(table);\n    var rect = table.querySelector('td').getBoundingClientRect();\n    element.removeChild(table);\n    rowHeight = Math.ceil(rect.height);\n    return rowHeight;\n}\n/** @hidden */\nvar actualRowHeight;\n/**\n * @param {HTMLElement} element - Defines the HTMl element\n * @returns {number} Returns the row height\n * @hidden\n */\nexport function getActualRowHeight(element) {\n    if (actualRowHeight !== undefined) {\n        return rowHeight;\n    }\n    var table = createElement('table', { className: literals.table, styles: 'visibility: hidden', attrs: { role: 'grid' } });\n    table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n    element.appendChild(table);\n    var rect = table.querySelector('tr').getBoundingClientRect();\n    element.removeChild(table);\n    return rect.height;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {boolean} - Returns is complex field\n * @hidden\n */\nexport function isComplexField(field) {\n    return field.split('.').length > 1;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the get complex field ID\n * @hidden\n */\nexport function getComplexFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/\\./g, '___');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the parsed column field id\n * @hidden\n */\nexport function getParsedFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/[^a-zA-Z0-9_.]/g, '\\\\$&');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the set complex field ID\n * @hidden\n */\nexport function setComplexFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/___/g, '.');\n}\n/**\n * @param {Column} col - Defines the column\n * @param {string} type - Defines the type\n * @param {Element} elem - Defines th element\n * @returns {boolean} Returns is Editable\n * @hidden\n */\nexport function isEditable(col, type, elem) {\n    var row = parentsUntil(elem, literals.row);\n    var isOldRow = !row ? true : row && !row.classList.contains('e-insertedrow');\n    if (type === 'beginEdit' && isOldRow) {\n        if (col.isIdentity || col.isPrimaryKey || !col.allowEditing) {\n            return false;\n        }\n        return true;\n    }\n    else if (type === 'add' && col.isIdentity) {\n        return false;\n    }\n    else {\n        if (isOldRow && !col.allowEditing && !col.isIdentity && !col.isPrimaryKey) {\n            return false;\n        }\n        return true;\n    }\n}\n/**\n * @param {IGrid} inst - Defines the IGrid\n * @returns {boolean} Returns is action prevent in boolean\n * @hidden\n */\nexport function isActionPrevent(inst) {\n    var dlg = select('#' + inst.element.id + 'EditConfirm', inst.element);\n    return inst.editSettings.mode === 'Batch' &&\n        (selectAll('.e-updatedtd', inst.element).length || selectAll('.e-gridform.e-formvalidator', inst.element).length)\n        && inst.editSettings.showConfirmDialog && (dlg ? dlg.classList.contains('e-popup-close') : true);\n}\n/**\n * @param {any} elem - Defines the element\n * @param {boolean} action - Defines the boolean for action\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function wrap(elem, action) {\n    var clName = 'e-wrap';\n    elem = elem instanceof Array ? elem : [elem];\n    for (var i = 0; i < elem.length; i++) {\n        if (action) {\n            elem[parseInt(i.toString(), 10)].classList.add(clName);\n        }\n        else {\n            elem[parseInt(i.toString(), 10)].classList.remove(clName);\n        }\n    }\n}\n/**\n * @param {ServiceLocator} serviceLocator - Defines the service locator\n * @param {Column} column  - Defines the column\n * @returns {void}\n * @hidden\n */\nexport function setFormatter(serviceLocator, column) {\n    var fmtr = serviceLocator.getService('valueFormatter');\n    var format = 'format';\n    var args;\n    if (column.type === 'date' || column.type === 'datetime' || column.type === 'dateonly') {\n        args = { type: column.type === 'dateonly' ? 'date' : column.type, skeleton: column.format };\n        if ((typeof (column.format) === 'string') && column.format !== 'yMd') {\n            args[\"\" + format] = column.format;\n        }\n    }\n    switch (column.type) {\n        case 'date':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'dateonly':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'datetime':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'number':\n            column.setFormatter(fmtr.getFormatFunction({ format: column.format }));\n            column.setParser(fmtr.getParserFunction({ format: column.format }));\n            break;\n    }\n}\n/**\n * @param {Element} cells - Defines the cell element\n * @param {boolean} add - Defines the add\n * @param {string} args - Defines the args\n * @returns {void}\n * @hidden\n */\nexport function addRemoveActiveClasses(cells, add) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    for (var i = 0, len = cells.length; i < len; i++) {\n        if (add) {\n            classList(cells[parseInt(i.toString(), 10)], args.slice(), []);\n            cells[parseInt(i.toString(), 10)].setAttribute('aria-selected', 'true');\n        }\n        else {\n            classList(cells[parseInt(i.toString(), 10)], [], args.slice());\n            cells[parseInt(i.toString(), 10)].removeAttribute('aria-selected');\n        }\n    }\n}\n/**\n * @param {string} result - Defines th string\n * @returns {string} Returns the distinct staing values\n * @hidden\n */\nexport function distinctStringValues(result) {\n    var temp = {};\n    var res = [];\n    for (var i = 0; i < result.length; i++) {\n        if (!(result[parseInt(i.toString(), 10)] in temp)) {\n            res.push(result[parseInt(i.toString(), 10)].toString());\n            temp[result[parseInt(i.toString(), 10)]] = 1;\n        }\n    }\n    return res;\n}\n/**\n * @param {Element} target - Defines the target\n * @param {Dialog} dialogObj - Defines the dialog\n * @returns {void}\n * @hidden\n */\nexport function getFilterMenuPostion(target, dialogObj) {\n    var elementVisible = dialogObj.element.style.display;\n    dialogObj.element.style.display = 'block';\n    var dlgWidth = dialogObj.width;\n    var newpos = calculateRelativeBasedPosition(target, dialogObj.element);\n    dialogObj.element.style.display = elementVisible;\n    dialogObj.element.style.top = (newpos.top + target.getBoundingClientRect().height) - 5 + 'px';\n    var leftPos = ((newpos.left - dlgWidth) + target.clientWidth);\n    if (leftPos < 1) {\n        dialogObj.element.style.left = (dlgWidth + leftPos) - 16 + 'px'; // right calculation\n    }\n    else {\n        dialogObj.element.style.left = leftPos + -4 + 'px';\n    }\n}\n/**\n * @param {Object} args - Defines the args\n * @param {Popup} args.popup - Defines the args for popup\n * @param {Dialog} dialogObj - Defines the dialog obj\n * @returns {void}\n * @hidden\n */\nexport function getZIndexCalcualtion(args, dialogObj) {\n    args.popup.element.style.zIndex = (dialogObj.zIndex + 1).toString();\n}\n/**\n * @param {Element} elem - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function toogleCheckbox(elem) {\n    var span = elem.querySelector('.e-frame');\n    var input = span.previousSibling;\n    if (span.classList.contains('e-check')) {\n        input.checked = false;\n        classList(span, ['e-uncheck'], ['e-check']);\n    }\n    else {\n        input.checked = true;\n        classList(span, ['e-check'], ['e-uncheck']);\n    }\n}\n/**\n * @param {HTMLInputElement} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function setChecked(elem, checked) {\n    elem.checked = checked;\n}\n/**\n * @param {string} uid - Defines the string\n * @param {Element} elem - Defines the Element\n * @param {string} className - Defines the classname\n * @returns {Element} Returns the box wrap\n * @hidden\n */\nexport function createCboxWithWrap(uid, elem, className) {\n    var div = createElement('div', { className: className });\n    div.appendChild(elem);\n    div.setAttribute('uid', uid);\n    return div;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function removeAddCboxClasses(elem, checked) {\n    removeClass([elem], ['e-check', 'e-stop', 'e-uncheck']);\n    if (checked) {\n        elem.classList.add('e-check');\n    }\n    else {\n        elem.classList.add('e-uncheck');\n    }\n}\n/**\n * Refresh the Row model's foreign data.\n *\n * @param {IRow<Column>} row - Grid Row model object.\n * @param {Column[]} columns - Foreign columns array.\n * @param {Object} data - Updated Row data.\n * @returns {void}\n * @hidden\n */\nexport function refreshForeignData(row, columns, data) {\n    for (var i = 0; i < columns.length; i++) {\n        setValue(columns[parseInt(i.toString(), 10)].field, getForeignData(columns[parseInt(i.toString(), 10)], data), row.foreignKeyData);\n    }\n    var cells = row.cells;\n    for (var i = 0; i < cells.length; i++) {\n        if (cells[parseInt(i.toString(), 10)].isForeignKey) {\n            setValue('foreignKeyData', getValue(cells[parseInt(i.toString(), 10)].column.field, row.foreignKeyData), cells[parseInt(i.toString(), 10)]);\n        }\n    }\n}\n/**\n * Get the foreign data for the corresponding cell value.\n *\n * @param {Column} column - Foreign Key column\n * @param {Object} data - Row data.\n * @param {string | number} lValue - cell value.\n * @param {Object} foreignKeyData - foreign data source.\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getForeignData(column, data, lValue, foreignKeyData) {\n    var fField = column.foreignKeyField;\n    var key = (!isNullOrUndefined(lValue) ? lValue : valueAccessor(column.field, data, column));\n    key = isNullOrUndefined(key) ? '' : key;\n    var query = new Query();\n    var fdata = foreignKeyData || ((column.dataSource instanceof DataManager) && column.dataSource.dataSource.json.length ?\n        column.dataSource.dataSource.json : column.columnData);\n    if (key.getDay) {\n        query.where(getDatePredicate({ field: fField, operator: 'equal', value: key, matchCase: false }));\n    }\n    else {\n        query.where(fField, '==', key, false);\n    }\n    return new DataManager(fdata).executeLocal(query);\n}\n/**\n * To use to get the column's object by the foreign key value.\n *\n * @param {string} foreignKeyValue - Defines ForeignKeyValue.\n * @param {Column[]} columns - Array of column object.\n * @returns {Column} Returns the element\n * @hidden\n */\nexport function getColumnByForeignKeyValue(foreignKeyValue, columns) {\n    var column;\n    return columns.some(function (col) {\n        column = col;\n        return col.foreignKeyValue === foreignKeyValue;\n    }) && column;\n}\n/**\n * @param {number} value - Defines the date or month value\n * @returns {string} Returns string\n * @hidden\n */\nexport function padZero(value) {\n    if (value < 10) {\n        return '0' + value;\n    }\n    return String(value);\n}\n/**\n * @param {PredicateModel} filterObject - Defines the filterObject\n * @param {string} type - Defines the type\n * @param {boolean} isExecuteLocal - Defines whether the data actions performed in client and used for dateonly type field\n * @returns {Predicate} Returns the Predicate\n * @hidden\n */\nexport function getDatePredicate(filterObject, type, isExecuteLocal) {\n    var datePredicate;\n    var prevDate;\n    var nextDate;\n    var prevObj = baseExtend({}, getActualProperties(filterObject));\n    var nextObj = baseExtend({}, getActualProperties(filterObject));\n    if (isNullOrUndefined(filterObject.value) || filterObject.value === '') {\n        datePredicate = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n        return datePredicate;\n    }\n    var value = new Date(filterObject.value);\n    if (type === 'dateonly' && !isExecuteLocal) {\n        if (typeof (prevObj.value) === 'string') {\n            prevObj.value = new Date(prevObj.value);\n        }\n        var dateOnlyString = prevObj.value.getFullYear() + '-' + padZero(prevObj.value.getMonth() + 1) + '-' + padZero(prevObj.value.getDate());\n        var predicates = new Predicate(prevObj.field, prevObj.operator, dateOnlyString, false);\n        datePredicate = predicates;\n    }\n    else {\n        if (filterObject.operator === 'equal' || filterObject.operator === 'notequal') {\n            if (type === 'datetime') {\n                prevDate = new Date(value.setSeconds(value.getSeconds() - 1));\n                nextDate = new Date(value.setSeconds(value.getSeconds() + 2));\n                filterObject.value = new Date(value.setSeconds(nextDate.getSeconds() - 1));\n            }\n            else {\n                prevDate = new Date(value.setHours(0) - 1);\n                nextDate = new Date(value.setHours(24));\n            }\n            prevObj.value = prevDate;\n            nextObj.value = nextDate;\n            if (filterObject.operator === 'equal') {\n                prevObj.operator = 'greaterthan';\n                nextObj.operator = 'lessthan';\n            }\n            else if (filterObject.operator === 'notequal') {\n                prevObj.operator = 'lessthanorequal';\n                nextObj.operator = 'greaterthanorequal';\n            }\n            var predicateSt = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n            var predicateEnd = new Predicate(nextObj.field, nextObj.operator, nextObj.value, false);\n            datePredicate = filterObject.operator === 'equal' ? predicateSt.and(predicateEnd) : predicateSt.or(predicateEnd);\n        }\n        else {\n            if (type === 'date' && (filterObject.operator === 'lessthanorequal' || filterObject.operator === 'greaterthan')) {\n                prevObj.value = new Date(value.setHours(24) - 1);\n            }\n            if (typeof (prevObj.value) === 'string') {\n                prevObj.value = new Date(prevObj.value);\n            }\n            var predicates = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n            datePredicate = predicates;\n        }\n    }\n    if (filterObject.setProperties) {\n        filterObject.setProperties({ ejpredicate: datePredicate }, true);\n    }\n    else {\n        filterObject.ejpredicate = datePredicate;\n    }\n    return datePredicate;\n}\n/**\n * @param {IGrid} grid - Defines the IGrid\n * @returns {boolean} Returns true if group adaptive is true\n * @hidden\n */\nexport function isGroupAdaptive(grid) {\n    return grid.enableVirtualization && grid.groupSettings.columns.length > 0 && grid.isVirtualAdaptive &&\n        !grid.groupSettings.enableLazyLoading;\n}\n/**\n * @param {string} field - Defines the Field\n * @param {Object} object - Defines the objec\n * @returns {any} Returns the object\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObject(field, object) {\n    if (field === void 0) { field = ''; }\n    if (field) {\n        var value = object;\n        var splits = field.split('.');\n        for (var i = 0; i < splits.length && !isNullOrUndefined(value); i++) {\n            value = value[splits[parseInt(i.toString(), 10)]];\n            if (isUndefined(value)) {\n                var newCase = splits[parseInt(i.toString(), 10)].charAt(0).toUpperCase()\n                    + splits[parseInt(i.toString(), 10)].slice(1);\n                value = object[\"\" + newCase] || object[(\"\" + newCase).charAt(0).toLowerCase() + (\"\" + newCase).slice(1)];\n            }\n        }\n        return value;\n    }\n}\n/**\n * @param {string | Object} format - defines the format\n * @param {string} colType - Defines the coltype\n * @returns {string} Returns the custom Data format\n * @hidden\n */\nexport function getCustomDateFormat(format, colType) {\n    var intl = new Internationalization();\n    var formatvalue;\n    var formatter = 'format';\n    var type = 'type';\n    if (colType === 'date') {\n        formatvalue = typeof (format) === 'object' ?\n            intl.getDatePattern({ type: format[\"\" + type] ? format[\"\" + type] : 'date', format: format[\"\" + formatter] }, false) :\n            intl.getDatePattern({ type: 'dateTime', skeleton: format }, false);\n    }\n    else {\n        formatvalue = typeof (format) === 'object' ?\n            intl.getDatePattern({ type: format[\"\" + type] ? format[\"\" + type] : 'dateTime', format: format[\"\" + formatter] }, false) :\n            intl.getDatePattern({ type: 'dateTime', skeleton: format }, false);\n    }\n    return formatvalue;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getExpandedState(gObj, hierarchyPrintMode) {\n    var rows = gObj.getRowsObject();\n    var obj = {};\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n        var row = rows_1[_i];\n        if (row.isExpand && !row.isDetailRow) {\n            var index = gObj.allowPaging && gObj.printMode === 'AllPages' ? row.index +\n                (gObj.pageSettings.currentPage * gObj.pageSettings.pageSize) - gObj.pageSettings.pageSize : row.index;\n            if (!isNullOrUndefined(index)) {\n                obj[parseInt(index.toString(), 10)] = {};\n                obj[parseInt(index.toString(), 10)].isExpand = true;\n                if (gObj.childGrid) {\n                    obj[parseInt(index.toString(), 10)].gridModel = getPrintGridModel(row.childGrid, hierarchyPrintMode);\n                    obj[parseInt(index.toString(), 10)].gridModel.query = gObj.childGrid.query;\n                }\n            }\n        }\n    }\n    return obj;\n}\n/**\n * @param {IGrid} gObj - Defines the grid objct\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {IGrid} Returns the IGrid\n * @hidden\n */\nexport function getPrintGridModel(gObj, hierarchyPrintMode) {\n    if (hierarchyPrintMode === void 0) { hierarchyPrintMode = 'Expanded'; }\n    var printGridModel = {};\n    if (!gObj) {\n        return printGridModel;\n    }\n    for (var _i = 0, _a = Print.printGridProp; _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (key === 'columns') {\n            printGridModel[\"\" + key] = getActualPropFromColl(gObj.getColumns());\n        }\n        else if (key === 'allowPaging') {\n            printGridModel[\"\" + key] = gObj.printMode === 'CurrentPage';\n        }\n        else {\n            printGridModel[\"\" + key] = getActualProperties(gObj[\"\" + key]);\n        }\n    }\n    printGridModel['enableHover'] = false;\n    if ((gObj.childGrid || gObj.detailTemplate) && hierarchyPrintMode !== 'None') {\n        printGridModel.expandedRows = getExpandedState(gObj, hierarchyPrintMode);\n    }\n    return printGridModel;\n}\n/**\n * @param {Object} copied - Defines the copied object\n * @param {Object} first - Defines the first object\n * @param {Object} second - Defines the second object\n * @param {boolean} deep - Defines the deep\n * @returns {Object} Returns the extended object\n * @hidden\n */\nexport function extendObjWithFn(copied, first, second, deep) {\n    var res = copied || {};\n    var len = arguments.length;\n    if (deep) {\n        len = len - 1;\n    }\n    for (var i = 1; i < len; i++) {\n        // eslint-disable-next-line prefer-rest-params\n        if (!arguments[parseInt(i.toString(), 10)]) {\n            continue;\n        }\n        // eslint-disable-next-line prefer-rest-params\n        var obj1 = arguments[parseInt(i.toString(), 10)];\n        var keys = Object.keys(Object.getPrototypeOf(obj1)).length ?\n            Object.keys(obj1).concat(getPrototypesOfObj(obj1)) : Object.keys(obj1);\n        for (var i_1 = 0; i_1 < keys.length; i_1++) {\n            var source = res[keys[parseInt(i_1.toString(), 10)]];\n            var cpy = obj1[keys[parseInt(i_1.toString(), 10)]];\n            var cln = void 0;\n            if (deep && (isObject(cpy) || Array.isArray(cpy))) {\n                if (isObject(cpy)) {\n                    cln = source ? source : {};\n                    res[keys[parseInt(i_1.toString(), 10)]] = baseExtend({}, cln, cpy, deep);\n                }\n                else {\n                    cln = source ? source : [];\n                    res[keys[parseInt(i_1.toString(), 10)]] = baseExtend([], cln, cpy, deep);\n                }\n            }\n            else {\n                res[keys[parseInt(i_1.toString(), 10)]] = cpy;\n            }\n        }\n    }\n    return res;\n}\n/**\n * @param {Object} obj - Defines the obj\n * @returns {string[]} Returns the string\n * @hidden\n */\nfunction getPrototypesOfObj(obj) {\n    var keys = [];\n    while (Object.getPrototypeOf(obj) && Object.keys(Object.getPrototypeOf(obj)).length) {\n        keys = keys.concat(Object.keys(Object.getPrototypeOf(obj)));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return keys;\n}\n/**\n * @param {Column[]} column - Defines the Column\n * @returns {number} Returns the column Depth\n * @hidden\n */\nexport function measureColumnDepth(column) {\n    var max = 0;\n    for (var i = 0; i < column.length; i++) {\n        var depth = checkDepth(column[parseInt(i.toString(), 10)], 0);\n        if (max < depth) {\n            max = depth;\n        }\n    }\n    return max + 1;\n}\n/**\n * @param {Column} col - Defines the Column\n * @param {number} index - Defines the index\n * @returns {number} Returns the depth\n * @hidden\n */\nexport function checkDepth(col, index) {\n    var max = index;\n    var indices = [];\n    if (col.columns) {\n        index++;\n        for (var i = 0; i < col.columns.length; i++) {\n            indices[parseInt(i.toString(), 10)] = checkDepth(col.columns[parseInt(i.toString(), 10)], index);\n        }\n        for (var j = 0; j < indices.length; j++) {\n            if (max < indices[parseInt(j.toString(), 10)]) {\n                max = indices[parseInt(j.toString(), 10)];\n            }\n        }\n        index = max;\n    }\n    return index;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {PredicateModel[]} filteredCols - Defines the PredicateModel\n * @returns {void}\n * @hidden\n */\nexport function refreshFilteredColsUid(gObj, filteredCols) {\n    for (var i = 0; i < filteredCols.length; i++) {\n        filteredCols[parseInt(i.toString(), 10)].uid = filteredCols[parseInt(i.toString(), 10)].isForeignKey ?\n            getColumnByForeignKeyValue(filteredCols[parseInt(i.toString(), 10)].field, gObj.getForeignKeyColumns()).uid\n            : gObj.enableColumnVirtualization ? getColumnModelByFieldName(gObj, filteredCols[parseInt(i.toString(), 10)].field).uid\n                : gObj.getColumnByField(filteredCols[parseInt(i.toString(), 10)].field).uid;\n    }\n}\n/** @hidden */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Global;\n(function (Global) {\n    // eslint-disable-next-line prefer-const\n    Global.timer = null;\n})(Global || (Global = {}));\n/**\n * @param {Element} element - Defines the element\n * @returns {Object} Returns the transform values\n * @hidden\n */\nexport function getTransformValues(element) {\n    var style = document.defaultView.getComputedStyle(element, null);\n    var transformV = style.getPropertyValue('transform');\n    var replacedTv = transformV.replace(/,/g, '');\n    var translateX = parseFloat((replacedTv).split(' ')[4]);\n    var translateY = parseFloat((replacedTv).split(' ')[5]);\n    return { width: translateX, height: translateY };\n}\n/**\n * @param {Element} rootElement - Defines the root Element\n * @param {Element} element - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function applyBiggerTheme(rootElement, element) {\n    if (rootElement.classList.contains('e-bigger')) {\n        element.classList.add('e-bigger');\n    }\n}\n/**\n * @param {IGrid} gObj - Defines grid object\n * @returns {number}  - Returns scroll width\n * @hidden\n */\nexport function getScrollWidth(gObj) {\n    var scrollElem = gObj.getContent().firstElementChild;\n    return scrollElem.scrollWidth > scrollElem.offsetWidth ? getScrollBarWidth() : 0;\n}\n/**\n * @param {IGrid} gObj - Defines grid object\n * @param {number} idx - Defines the index\n * @returns {number} Returns colSpan index\n * @hidden\n */\nexport function resetColspanGroupCaption(gObj, idx) {\n    var colspan = 0;\n    var cols = gObj.getColumns();\n    var width = idx * 30;\n    if (gObj.isRowDragable()) {\n        colspan++;\n        width += 30;\n    }\n    colspan += (gObj.groupSettings.columns.length - idx);\n    width += (30 * (gObj.groupSettings.columns.length - idx));\n    for (var i = 0; i < cols.length; i++) {\n        if (cols[parseInt(i.toString(), 10)].visible) {\n            width += parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10);\n            colspan++;\n        }\n        if (width > (parseInt(gObj.width.toString(), 10) - getScrollWidth(gObj))) {\n            colspan--;\n            break;\n        }\n    }\n    return colspan;\n}\n/**\n * @param {HTMLElement} tr - Defines the tr Element\n * @param {IGrid} gObj - Defines grid object\n * @returns {void}\n * @hidden\n */\nexport function groupCaptionRowLeftRightPos(tr, gObj) {\n    var width = 0;\n    for (var j = 0; j < tr.childNodes.length; j++) {\n        var td = tr.childNodes[parseInt(j.toString(), 10)];\n        td.classList.add('e-leftfreeze');\n        applyStickyLeftRightPosition(td, width, gObj.enableRtl, 'Left');\n        if (td.classList.contains('e-indentcell') || td.classList.contains('e-recordplusexpand') ||\n            td.classList.contains('e-recordpluscollapse')) {\n            width += 30;\n        }\n        if (td.classList.contains('e-groupcaption')) {\n            var colspan = parseInt(td.getAttribute('colspan'), 10);\n            if (gObj.isRowDragable()) {\n                colspan--;\n                width += 30;\n            }\n            colspan = colspan - (gObj.groupSettings.columns.length - j);\n            width = width + (30 * (gObj.groupSettings.columns.length - j));\n            var cols = gObj.getColumns();\n            for (var i = 0; i < cols.length; i++) {\n                if ((parseInt(td.getAttribute('colspan'), 10) > 1) &&\n                    (parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10)\n                        + width) > (parseInt(gObj.width.toString(), 10) - getScrollWidth(gObj))) {\n                    var newColspan = resetColspanGroupCaption(gObj, j);\n                    td.setAttribute('colspan', newColspan.toString());\n                    break;\n                }\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10);\n                    colspan--;\n                }\n                if (colspan === 0) {\n                    break;\n                }\n            }\n        }\n        if (td.classList.contains('e-summarycell')) {\n            var uid_1 = td.getAttribute('e-mappinguid');\n            var column = gObj.getColumnByUid(uid_1);\n            width += parseInt(column.width.toString(), 10);\n        }\n    }\n}\n/**\n * @param {Element} row - Defines row element\n * @param {IGrid} gridObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function ensureLastRow(row, gridObj) {\n    var cntOffset = gridObj.getContent().firstElementChild.offsetHeight;\n    return row && row.getBoundingClientRect().top > cntOffset;\n}\n/**\n * @param {Element} row - Defines row element\n * @param {number} rowTop - Defines row top number\n * @returns {boolean} Returns first row is true\n * @hidden\n */\nexport function ensureFirstRow(row, rowTop) {\n    return row && row.getBoundingClientRect().top < rowTop;\n}\n/**\n * @param {number} index - Defines index\n * @param {IGrid} gObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function isRowEnteredInGrid(index, gObj) {\n    var rowHeight = gObj.getRowHeight();\n    var startIndex = gObj.getContent().firstElementChild.scrollTop / rowHeight;\n    var endIndex = startIndex + (gObj.getContent().firstElementChild.offsetHeight / rowHeight);\n    return index < endIndex && index > startIndex;\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} data - Defines the query\n * @returns {number} Returns the edited data index\n * @hidden\n */\nexport function getEditedDataIndex(gObj, data) {\n    var keyField = gObj.getPrimaryKeyFieldNames()[0];\n    var dataIndex;\n    gObj.getCurrentViewRecords().filter(function (e, index) {\n        if (keyField.includes('.')) {\n            var currentValue = getObject(keyField, e);\n            var originalValue = getObject(keyField, data);\n            if (currentValue === originalValue) {\n                dataIndex = index;\n            }\n        }\n        else {\n            if (e[\"\" + keyField] === data[\"\" + keyField]) {\n                dataIndex = index;\n            }\n        }\n    });\n    return dataIndex;\n}\n/**\n * @param {Object} args - Defines the argument\n * @param {Query} query - Defines the query\n * @returns {FilterStateObj} Returns the filter state object\n * @hidden\n */\nexport function eventPromise(args, query) {\n    var state = getStateEventArgument(query);\n    var def = new Deferred();\n    state.dataSource = def.resolve;\n    state.action = args;\n    return { state: state, deffered: def };\n}\n/**\n * @param {Query} query - Defines the query\n * @returns {Object} Returns the state event argument\n * @hidden\n */\nexport function getStateEventArgument(query) {\n    var adaptr = new UrlAdaptor();\n    var dm = new DataManager({ url: '', adaptor: new UrlAdaptor });\n    var state = adaptr.processQuery(dm, query);\n    var data = JSON.parse(state.data);\n    return data;\n}\n/**\n * @param {IGrid} gObj - Defines the Igrid\n * @returns {boolean} Returns the ispercentageWidth\n * @hidden\n */\nexport function ispercentageWidth(gObj) {\n    var columns = gObj.getVisibleColumns();\n    var percentageCol = 0;\n    var undefinedWidthCol = 0;\n    for (var i = 0; i < columns.length; i++) {\n        if (isUndefined(columns[parseInt(i.toString(), 10)].width)) {\n            undefinedWidthCol++;\n        }\n        else if (columns[parseInt(i.toString(), 10)].width.toString().indexOf('%') !== -1) {\n            percentageCol++;\n        }\n    }\n    return (gObj.width === 'auto' || typeof (gObj.width) === 'string' && gObj.width.indexOf('%') !== -1) &&\n        !gObj.groupSettings.showGroupedColumn && gObj.groupSettings.columns.length\n        && percentageCol && !undefinedWidthCol;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {Row<Column>[]} rows - Defines the row\n * @param {HTMLTableRowElement[]} rowElms - Row elements\n * @param {number} index - Row index\n * @param {number} startRowIndex - Start Row Index\n * @returns {void}\n * @hidden\n */\nexport function resetRowIndex(gObj, rows, rowElms, index, startRowIndex) {\n    var startIndex = index ? index : 0;\n    for (var i = startRowIndex ? startRowIndex : 0; i < rows.length; i++) {\n        if (rows[parseInt(i.toString(), 10)] && rows[parseInt(i.toString(), 10)].isDataRow) {\n            rows[parseInt(i.toString(), 10)].index = startIndex;\n            rows[parseInt(i.toString(), 10)].isAltRow = gObj.enableAltRow ? startIndex % 2 !== 0 : false;\n            rowElms[parseInt(i.toString(), 10)].setAttribute(literals.dataRowIndex, startIndex.toString());\n            rowElms[parseInt(i.toString(), 10)].setAttribute(literals.ariaRowIndex, (startIndex + 1).toString());\n            if (rows[parseInt(i.toString(), 10)].isAltRow) {\n                rowElms[parseInt(i.toString(), 10)].classList.add('e-altrow');\n            }\n            else {\n                rowElms[parseInt(i.toString(), 10)].classList.remove('e-altrow');\n            }\n            for (var j = 0; j < rowElms[parseInt(i.toString(), 10)].cells.length; j++) {\n                rowElms[parseInt(i.toString(), 10)].cells[parseInt(j.toString(), 10)].setAttribute('index', startIndex.toString());\n            }\n            startIndex++;\n        }\n    }\n    if (!rows.length) {\n        gObj.renderModule.emptyRow(true);\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} changes - Defines the changes\n * @param {string} type - Defines the type\n * @param {string} keyField - Defines the keyfield\n * @returns {void}\n * @hidden\n */\nexport function compareChanges(gObj, changes, type, keyField) {\n    var newArray = gObj.dataToBeUpdated[\"\" + type].concat(changes[\"\" + type]).reduce(function (r, o) {\n        r[o[\"\" + keyField]] = r[o[\"\" + keyField]] === undefined ? o : Object.assign(r[o[\"\" + keyField]], o);\n        return r;\n    }, {});\n    gObj.dataToBeUpdated[\"\" + type] = Object.keys(newArray).map(function (k) { return newArray[\"\" + k]; });\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function setRowElements(gObj) {\n    (gObj).contentModule.rowElements =\n        [].slice.call(gObj.element.querySelectorAll('.e-row:not(.e-addedrow)'));\n}\n/**\n * @param {Element} row - Defines the row\n * @param {number} start - Defines the start index\n * @param {number} end - Defines the end index\n * @returns {void}\n * @hidden\n */\nexport function sliceElements(row, start, end) {\n    var cells = row.children;\n    var len = cells.length;\n    var k = 0;\n    for (var i = 0; i < len; i++, k++) {\n        if (i >= start && i < end) {\n            continue;\n        }\n        row.removeChild(row.children[parseInt(k.toString(), 10)]);\n        k--;\n    }\n}\n/**\n * @param {Column} column - Defines the column\n * @param {string} uid - Defines the uid\n * @returns {boolean} Returns is child column\n * @hidden\n */\nexport function isChildColumn(column, uid) {\n    var uids = [];\n    uids.push(column.uid);\n    pushuid(column, uids);\n    if (uids.indexOf(uid) > -1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * @param {Column} column - Defines the column\n * @param {string[]} uids - Defines the uid\n * @returns {void}\n * @hidden\n */\nexport function pushuid(column, uids) {\n    for (var i = 0; i < column.columns.length; i++) {\n        if (column.columns[parseInt(i.toString(), 10)].uid) {\n            uids.push(column.columns[parseInt(i.toString(), 10)].uid);\n        }\n        if (column.columns[parseInt(i.toString(), 10)].columns &&\n            column.columns[parseInt(i.toString(), 10)].columns.length) {\n            pushuid(column.columns[parseInt(i.toString(), 10)], uids);\n        }\n    }\n}\n/**\n * @param {Column} column - Defines the column\n * @returns {string} Returns the direction\n * @hidden\n */\nexport function frozenDirection(column) {\n    if (column.columns[0].freeze || column.columns[0].isFrozen) {\n        if (column.columns[0].freeze === 'Left' || column.columns[0].isFrozen) {\n            return 'Left';\n        }\n        else if (column.columns[0].freeze === 'Right') {\n            return 'Right';\n        }\n        else if (column.columns[0].freeze === 'Fixed') {\n            return 'Fixed';\n        }\n        else {\n            return 'None';\n        }\n    }\n    else {\n        if (column.columns[0].columns && column.columns[0].columns.length) {\n            return frozenDirection(column.columns[0]);\n        }\n        else {\n            return 'None';\n        }\n    }\n}\n/**\n * @param {Element} row - Defines the row\n * @returns {void}\n * @hidden\n */\nexport function addFixedColumnBorder(row) {\n    if (row.querySelector('.e-fixedfreeze')) {\n        var cells = [].slice.call(row.querySelectorAll('.e-filterbarcell:not(.e-hide),.e-summarycell:not(.e-hide),.e-headercell:not(.e-hide),.e-rowcell:not(.e-hide)'));\n        for (var j = 0; j < cells.length; j++) {\n            if (cells[parseInt(j.toString(), 10)].classList.contains('e-fixedfreeze') && (!(cells[j - 1]) ||\n                (cells[j - 1] && !cells[j - 1].classList.contains('e-fixedfreeze')))) {\n                cells[parseInt(j.toString(), 10)].classList.add('e-freezeleftborder');\n            }\n            if (cells[parseInt(j.toString(), 10)].classList.contains('e-fixedfreeze') && (!(cells[j + 1]) ||\n                (cells[j + 1] && !cells[j + 1].classList.contains('e-fixedfreeze')))) {\n                cells[parseInt(j.toString(), 10)].classList.add('e-freezerightborder');\n            }\n        }\n    }\n}\n/**\n * @param {HTMLElement} node - Defines the row\n * @param {number} width - Defines the width\n * @param {boolean} isRtl - Boolean property\n * @param {string} position - Defines the position\n * @returns {void}\n * @hidden\n */\nexport function applyStickyLeftRightPosition(node, width, isRtl, position) {\n    if (position === 'Left') {\n        if (isRtl) {\n            node.style.right = width + 'px';\n        }\n        else {\n            node.style.left = width + 'px';\n        }\n    }\n    if (position === 'Right') {\n        if (isRtl) {\n            node.style.left = width + 'px';\n        }\n        else {\n            node.style.right = width + 'px';\n        }\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @param {Column} column - Defines the column\n * @param {Element} node - Defines the Element\n * @returns {void}\n * @hidden\n */\nexport function addStickyColumnPosition(gObj, column, node) {\n    if (column.freeze === 'Left' || column.isFrozen) {\n        node.classList.add('e-leftfreeze');\n        if (column.border === 'Left') {\n            node.classList.add('e-freezeleftborder');\n        }\n        if (column.index === 0) {\n            applyStickyLeftRightPosition(node, (gObj.getIndentCount() * 30), gObj.enableRtl, 'Left');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = (gObj.getIndentCount() * 30);\n            }\n        }\n        else {\n            var cols = gObj.getColumns();\n            var width = gObj.getIndentCount() * 30;\n            for (var i = 0; i < cols.length; i++) {\n                if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                    break;\n                }\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n            applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Left');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = width;\n            }\n        }\n    }\n    else if (column.freeze === 'Right') {\n        node.classList.add('e-rightfreeze');\n        var cols = gObj.getColumns();\n        if (column.border === 'Right') {\n            node.classList.add('e-freezerightborder');\n        }\n        if (column.index === cols[cols.length - 1].index) {\n            var width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n            applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Right');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = width;\n            }\n        }\n        else {\n            var width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n            for (var i = cols.length - 1; i >= 0; i--) {\n                if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                    break;\n                }\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n            applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Right');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = width;\n            }\n        }\n    }\n    else if (column.freeze === 'Fixed') {\n        node.classList.add('e-fixedfreeze');\n        var cols = gObj.getColumns();\n        var width = 0;\n        if (gObj.getVisibleFrozenLeftCount()) {\n            width = gObj.getIndentCount() * 30;\n        }\n        else if (gObj.getFrozenMode() === 'Right') {\n            width = gObj.groupSettings.columns.length * 30;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                break;\n            }\n            if ((cols[parseInt(i.toString(), 10)].freeze === 'Left' || cols[parseInt(i.toString(), 10)].isFrozen) ||\n                cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n        }\n        applyStickyLeftRightPosition(node, (width - 1), gObj.enableRtl, 'Left');\n        width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n        for (var i = cols.length - 1; i >= 0; i--) {\n            if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                break;\n            }\n            if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n        }\n        applyStickyLeftRightPosition(node, (width - 1), gObj.enableRtl, 'Right');\n    }\n    else {\n        node.classList.add('e-unfreeze');\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid Object\n * @param {Column} col - Defines the column\n * @param {number} rowIndex - Defines the rowindex\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function getCellsByTableName(gObj, col, rowIndex) {\n    return [].slice.call(gObj.getDataRows()[parseInt(rowIndex.toString(), 10)].getElementsByClassName(literals.rowCell));\n}\n/**\n * @param {IGrid} gObj - Defines the column\n * @param {Column} col - Defines the index\n * @param {number} rowIndex - Defines the rules\n * @param {number} index - Defines the movable column rules\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getCellByColAndRowIndex(gObj, col, rowIndex, index) {\n    return getCellsByTableName(gObj, col, rowIndex)[parseInt(index.toString(), 10)];\n}\n/**\n * @param {Column} col - Defines the column\n * @param {number} index - Defines the index\n * @param {Object} rules - Defines the rules\n * @param {Object} mRules - Defines the movable column rules\n * @param {Object} frRules - Defines the Frozen rules\n * @param {number} len - Defines the length\n * @param {boolean} isCustom - Defines custom form validation\n * @returns {void}\n * @hidden\n */\nexport function setValidationRuels(col, index, rules, mRules, frRules, len, isCustom) {\n    if (isCustom) {\n        rules[getComplexFieldID(col.field)] = col.validationRules;\n    }\n    else {\n        if (col.getFreezeTableName() === literals.frozenLeft\n            || (!index && col.getFreezeTableName() === literals.frozenRight) || len === 1) {\n            rules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n        else if (col.getFreezeTableName() === 'movable' || !col.getFreezeTableName()) {\n            mRules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n        else if (col.getFreezeTableName() === literals.frozenRight) {\n            frRules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n    }\n}\n/**\n * @param {string} numberFormat - Format\n * @param {string} type - Value type\n * @param {boolean} isExcel - Boolean property\n * @param {string} currencyCode - Specifies the currency code to be used for formatting.\n * @returns {string} returns formated value\n * @hidden\n */\nexport function getNumberFormat(numberFormat, type, isExcel, currencyCode) {\n    var format;\n    var intl = new Internationalization();\n    if (type === 'number') {\n        try {\n            format = intl.getNumberPattern({ format: numberFormat, currency: currencyCode, useGrouping: true }, true);\n        }\n        catch (error) {\n            format = numberFormat;\n        }\n    }\n    else if (type === 'date' || type === 'time' || type === 'datetime') {\n        try {\n            format = intl.getDatePattern({ skeleton: numberFormat, type: type }, isExcel);\n            if (isNullOrUndefined(format)) {\n                // eslint-disable-next-line\n                throw 'error';\n            }\n        }\n        catch (error) {\n            try {\n                format = intl.getDatePattern({ format: numberFormat, type: type }, isExcel);\n            }\n            catch (error) {\n                format = numberFormat;\n            }\n        }\n    }\n    else {\n        format = numberFormat;\n    }\n    if (type !== 'number') {\n        var patternRegex = /G|H|c|'| a|yy|y|EEEE|E/g;\n        var mtch_1 = { 'G': '', 'H': 'h', 'c': 'd', '\\'': '\"', ' a': ' AM/PM', 'yy': 'yy', 'y': 'yyyy', 'EEEE': 'dddd', 'E': 'ddd' };\n        format = format.replace(patternRegex, function (pattern) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return mtch_1[\"\" + pattern];\n        });\n    }\n    return format;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @returns {void}\n * @hidden\n */\nexport function addBiggerDialog(gObj) {\n    if (gObj.enableAdaptiveUI) {\n        var dialogs = document.getElementsByClassName('e-responsive-dialog');\n        for (var i = 0; i < dialogs.length; i++) {\n            dialogs[parseInt(i.toString(), 10)].classList.add('e-bigger');\n        }\n    }\n}\n/**\n * @param {string} value - specifies the trr\n * @param {Object} mapObject - specifies the idx\n * @returns {Object | string} returns object or string\n * @hidden\n */\nexport function performComplexDataOperation(value, mapObject) {\n    var returnObj;\n    var length = value.split('.').length;\n    var splits = value.split('.');\n    var duplicateMap = mapObject;\n    for (var i = 0; i < length; i++) {\n        returnObj = duplicateMap[splits[parseInt(i.toString(), 10)]];\n        duplicateMap = returnObj;\n    }\n    return returnObj;\n}\n/**\n * @param {Object} tr - specifies the trr\n * @param {number} idx - specifies the idx\n * @param {string} displayVal - specifies the displayval\n * @param {Row<Column>} rows - specifies the rows\n * @param {IGrid} parent - Grid instance\n * @param {boolean} isContent - check for content renderer\n * @returns {void}\n * @hidden\n */\nexport function setDisplayValue(tr, idx, displayVal, rows, parent, isContent) {\n    var trs = Object.keys(tr);\n    var actualIndex = idx;\n    for (var i = 0; i < trs.length; i++) {\n        var td = tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)];\n        if (parent && !parent.isFrozenGrid() && !parent.isRowDragable()) {\n            td = (!isNullOrUndefined(td) && (parseInt(td.getAttribute('data-colindex'), 10) === idx))\n                ? td : tr[parseInt(i.toString(), 10)].querySelector(\"td[data-colindex=\\\"\" + idx + \"\\\"]\");\n            if (isNullOrUndefined(td)) {\n                continue;\n            }\n            else {\n                idx = (parent.getContentTable().querySelector('.e-detailrowcollapse, .e-detailrowexpand')) ?\n                    (td.cellIndex - 1) : td.cellIndex;\n            }\n        }\n        if (tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell').length && td) {\n            setStyleAttribute(tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            if (tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)].classList.contains('e-hide')) {\n                removeClass([tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)]], ['e-hide']);\n            }\n            if (isContent && parent.isRowDragable()) {\n                var index = idx + 1;\n                rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(index.toString(), 10)].visible = displayVal === '' ? true : false;\n            }\n            else {\n                if (!isNullOrUndefined(rows[trs[parseInt(i.toString(), 10)]])) {\n                    rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(idx.toString(), 10)].visible = displayVal === '' ? true : false;\n                    if (rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(idx.toString(), 10)].visible === false) {\n                        tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)].classList.add('e-hide');\n                    }\n                }\n            }\n            idx = actualIndex;\n        }\n    }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function addRemoveEventListener(parent, evt, isOn, module) {\n    for (var _i = 0, evt_1 = evt; _i < evt_1.length; _i++) {\n        var inst = evt_1[_i];\n        if (isOn) {\n            parent.on(inst.event, inst.handler, module);\n        }\n        else {\n            parent.off(inst.event, inst.handler);\n        }\n    }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function createEditElement(parent, column, classNames, attr) {\n    var complexFieldName = getComplexFieldID(column.field);\n    attr = Object.assign(attr, {\n        id: parent.element.id + complexFieldName,\n        name: complexFieldName, 'e-mappinguid': column.uid\n    });\n    return parent.createElement('input', {\n        className: classNames, attrs: attr\n    });\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} uid - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByUid(gObj, uid) {\n    var column;\n    for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (col.uid === uid) {\n            column = col;\n            break;\n        }\n    }\n    return column;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} field - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByFieldName(gObj, field) {\n    var column;\n    if (!gObj.columnModel) {\n        gObj.getColumns();\n    }\n    for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (col.field === field) {\n            column = col;\n            break;\n        }\n    }\n    return column;\n}\n/**\n * @param {string} id - Defines component id\n * @param {string[]} evts - Defines events\n * @param {object} handlers - Defines event handlers\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function registerEventHandlers(id, evts, handlers, instance) {\n    instance.eventHandlers[\"\" + id] = {};\n    for (var i = 0; i < evts.length; i++) {\n        instance.eventHandlers[\"\" + id][evts[parseInt(i.toString(), 10)]] = handlers[evts[parseInt(i.toString(), 10)]];\n    }\n}\n/**\n * @param {any} component - Defines component instance\n * @param {string[]} evts - Defines events\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function removeEventHandlers(component, evts, instance) {\n    for (var i = 0; i < evts.length; i++) {\n        if (component.isDestroyed) {\n            break;\n        }\n        component.removeEventListener(evts[parseInt(i.toString(), 10)], instance.eventHandlers[component.element.id][evts[parseInt(i.toString(), 10)]]);\n    }\n}\n/**\n * @param {IGrid | IXLFilter} parent - Defines parent instance\n * @param {string[]} templates - Defines the templates name which are needs to clear\n * @returns {void}\n * @hidden\n */\nexport function clearReactVueTemplates(parent, templates) {\n    parent.destroyTemplate(templates);\n    if (parent.isReact) {\n        parent.renderTemplates();\n    }\n}\n/**\n *\n * @param { Element } row - Defines row element\n * @returns { number } row index\n */\nexport function getRowIndexFromElement(row) {\n    return parseInt(row.getAttribute(literals.dataRowIndex), 10);\n}\n/**\n *\n * @param { string[] } fields - Defines grouped fields\n * @param { values } values - Defines caption keys\n * @param { any } instance - Defines dynamic class instance\n * @returns { Predicate } returns filter predicate\n */\n// eslint-disable-next-line\nexport function generateExpandPredicates(fields, values, instance) {\n    var filterCols = [];\n    for (var i = 0; i < fields.length; i++) {\n        var column = instance.parent.getColumnByField(fields[parseInt(i.toString(), 10)]);\n        var value = values[parseInt(i.toString(), 10)] === 'null' ? null : values[parseInt(i.toString(), 10)];\n        var pred = {\n            field: fields[parseInt(i.toString(), 10)], predicate: 'or', uid: column.uid, operator: 'equal', type: column.type,\n            matchCase: instance.allowCaseSensitive, ignoreAccent: instance.parent.filterSettings.ignoreAccent\n        };\n        if (value === '' || isNullOrUndefined(value)) {\n            filterCols = filterCols.concat(CheckBoxFilterBase.generateNullValuePredicates(pred));\n        }\n        else {\n            filterCols.push(extend({}, { value: value }, pred));\n        }\n    }\n    return CheckBoxFilterBase.getPredicate(filterCols);\n}\n/**\n *\n * @param { Predicate } pred - Defines filter predicate\n * @returns { Predicate[] } Returns formed predicate\n */\nexport function getPredicates(pred) {\n    var predicateList = [];\n    for (var _i = 0, _a = Object.keys(pred); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        predicateList.push(pred[\"\" + prop]);\n    }\n    return predicateList;\n}\n/**\n *\n * @param { number } index - Defines group caption indent\n * @param { Row<Column>[] } rowsObject - Defines rows object\n * @returns { { fields: string[], keys: string[] } } Returns grouped keys and values\n */\nexport function getGroupKeysAndFields(index, rowsObject) {\n    var fields = [];\n    var keys = [];\n    for (var i = index; i >= 0; i--) {\n        if (rowsObject[parseInt(i.toString(), 10)].isCaptionRow\n            && fields.indexOf(rowsObject[parseInt(i.toString(), 10)].data.field) === -1\n            && (rowsObject[parseInt(i.toString(), 10)].indent < rowsObject[parseInt(index.toString(), 10)].indent || i === index)) {\n            fields.push(rowsObject[parseInt(i.toString(), 10)].data.field);\n            keys.push(rowsObject[parseInt(i.toString(), 10)].data.key);\n            if (rowsObject[parseInt(i.toString(), 10)].indent === 0) {\n                break;\n            }\n        }\n    }\n    return { fields: fields, keys: keys };\n}\n// eslint-disable-next-line\n/**\n *\n * @param { number[][] } checkActiveMatrix - Defines matrix to check\n * @param { number[] } checkCellIndex - Defines index to check\n * @param { boolean } next - Defines select next or previous index\n * @returns { number[] } - Returns next active current index\n */\nexport function findCellIndex(checkActiveMatrix, checkCellIndex, next) {\n    var activeMatrix = checkActiveMatrix;\n    var cellIndex = checkCellIndex;\n    var currentCellIndexPass = false;\n    if (next) {\n        for (var i = cellIndex[0]; i < activeMatrix.length; i++) {\n            var rowCell = activeMatrix[parseInt(i.toString(), 10)];\n            for (var j = 0; j < rowCell.length; j++) {\n                if (currentCellIndexPass && activeMatrix[parseInt(i.toString(), 10)][parseInt(j.toString(), 10)] === 1) {\n                    cellIndex = [i, j];\n                    return cellIndex;\n                }\n                if (!currentCellIndexPass && cellIndex.toString() === [i, j].toString()) {\n                    currentCellIndexPass = true;\n                }\n            }\n        }\n    }\n    else {\n        for (var i = cellIndex[0]; i >= 0; i--) {\n            var rowCell = activeMatrix[parseInt(i.toString(), 10)];\n            for (var j = rowCell.length - 1; j >= 0; j--) {\n                if (currentCellIndexPass && activeMatrix[parseInt(i.toString(), 10)][parseInt(j.toString(), 10)] === 1) {\n                    cellIndex = [i, j];\n                    return cellIndex;\n                }\n                if (!currentCellIndexPass && cellIndex.toString() === [i, j].toString()) {\n                    currentCellIndexPass = true;\n                }\n            }\n        }\n    }\n    return cellIndex;\n}\n/**\n *\n * @param { string } string - Defines string need to capitalized first letter\n * @returns { string } - Returns capitalized first letter string\n */\nexport function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}