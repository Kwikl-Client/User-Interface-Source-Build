{"ast":null,"code":"/**\n * Defines util methods used by Rich Text Editor.\n */\nimport { isNullOrUndefined as isNOU, addClass, removeClass, selectAll, createElement } from '@syncfusion/ej2-base';\nimport { Browser, detach, SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nimport * as classes from '../base/classes';\nimport * as CONSTANT from '../base/constant';\nimport * as model from '../models/items';\nimport { toolsLocale, fontNameLocale, formatsLocale, numberFormatListLocale, bulletFormatListLocale, defaultLocale } from '../models/default-locale';\nvar undoRedoItems = ['Undo', 'Redo'];\nvar inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n/**\n * @param {string} val - specifies the string value\n * @param {string} items - specifies the value\n * @returns {number} - returns the number value\n * @hidden\n */\nexport function getIndex(val, items) {\n  var index = -1;\n  items.some(function (item, i) {\n    if (typeof item === 'string' && val === item.toLocaleLowerCase()) {\n      index = i;\n      return true;\n    }\n    return false;\n  });\n  return index;\n}\n/**\n * @param {Element} element - specifies the element\n * @param {string} className - specifies the string value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function hasClass(element, className) {\n  var hasClass = false;\n  if (element.classList.contains(className)) {\n    hasClass = true;\n  }\n  return hasClass;\n}\n/**\n * @param {IDropDownItemModel} items - specifies the item model\n * @param {string} value - specifies the string value\n * @param {string} type - specifies the string value\n * @param {string} returnType - specifies the return type\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function getDropDownValue(items, value, type, returnType) {\n  var data;\n  var result;\n  for (var k = 0; k < items.length; k++) {\n    if (type === 'value' && items[k].value.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n      data = items[k];\n      break;\n    } else if (type === 'text' && items[k].text.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n      data = items[k];\n      break;\n    } else if (type === 'subCommand' && items[k].subCommand.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n      data = items[k];\n      break;\n    }\n  }\n  if (!isNOU(data)) {\n    switch (returnType) {\n      case 'text':\n        result = data.text;\n        break;\n      case 'value':\n        result = data.value;\n        break;\n      case 'iconCss':\n        result = data.iconCss;\n        break;\n    }\n  }\n  return result;\n}\n/**\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function isIDevice() {\n  var result = false;\n  if (Browser.isDevice && Browser.isIos) {\n    result = true;\n  }\n  return result;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function getFormattedFontSize(value) {\n  if (isNOU(value)) {\n    return '';\n  }\n  return value;\n}\n/**\n * @param {MouseEvent} e - specifies the mouse event\n * @param {HTMLElement} parentElement - specifies the parent element\n * @param {boolean} isIFrame - specifies the boolean value\n * @returns {number} - returns the number\n * @hidden\n */\nexport function pageYOffset(e, parentElement, isIFrame) {\n  var y = 0;\n  if (isIFrame) {\n    y = window.pageYOffset + parentElement.getBoundingClientRect().top + e.clientY;\n  } else {\n    y = e.pageY;\n  }\n  return y;\n}\n/**\n * @param {string} item - specifies the string\n * @param {ServiceLocator} serviceLocator - specifies the service locator\n * @returns {string} - returns the string\n * @hidden\n */\nexport function getTooltipText(item, serviceLocator) {\n  var i10n = serviceLocator.getService('rteLocale');\n  var itemLocale = toolsLocale[\"\" + item];\n  var tooltipText = i10n.getConstant(itemLocale);\n  return tooltipText;\n}\nexport function getTooltipTextDropdownItems(item, serviceLocator, localeItems, rteObj) {\n  if (localeItems) {\n    var i10n = serviceLocator.getService('rteLocale');\n    for (var i = 0; i < localeItems.length; i++) {\n      var itemLocale = localeItems[i].value.toLocaleLowerCase();\n      var numberValue = localeItems[i].locale;\n      var numberLocale = defaultLocale[\"\" + numberValue].toLocaleLowerCase();\n      if (item === itemLocale || item === numberLocale) {\n        var tooltipText = localeItems[i].locale;\n        return i10n.getConstant(tooltipText);\n      }\n    }\n  } else {\n    var fontsize = rteObj.fontSize.items;\n    for (var i = 0; i < fontsize.length; i++) {\n      if (item === rteObj.fontSize.items[i].value) {\n        var fontSize = rteObj.fontSize.items[i].text;\n        return fontSize;\n      }\n    }\n  }\n  return '';\n}\nexport function getQuickToolbarTooltipText(item) {\n  var keys = Object.keys(defaultLocale);\n  for (var i = 0; i < keys.length; i++) {\n    var tooltipText = defaultLocale[\"\" + keys[i]];\n    if (item === tooltipText) {\n      return tooltipText;\n    }\n  }\n  return '';\n}\n/**\n * @param {ISetToolbarStatusArgs} e - specifies the e element\n * @param {boolean} isPopToolbar - specifies the boolean value\n * @param {IRichTextEditor} self - specifies the parent element\n * @returns {void}\n * @hidden\n */\nexport function setToolbarStatus(e, isPopToolbar, self) {\n  updateDropDownFontFormatLocale(self);\n  var dropDown = e.dropDownModule;\n  var data = e.args;\n  var keys = Object.keys(e.args);\n  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n    var key = keys_1[_i];\n    for (var j = 0; j < e.tbItems.length; j++) {\n      var item = e.tbItems[j].subCommand;\n      var itemStr = item && item.toLocaleLowerCase();\n      if (item && itemStr === key || item === 'UL' && key === 'unorderedlist' || item === 'OL' && key === 'orderedlist' || itemStr === 'pre' && key === 'insertcode' || item === 'NumberFormatList' && key === 'numberFormatList' || item === 'BulletFormatList' && key === 'bulletFormatList') {\n        if (typeof data[\"\" + key] === 'boolean') {\n          if (data[\"\" + key] === true) {\n            addClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n          } else {\n            removeClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n          }\n        } else if ((typeof data[\"\" + key] === 'string' || data[\"\" + key] === null) && getIndex(key, e.parent.toolbarSettings.items) >= -1) {\n          var value = data[\"\" + key] ? data[\"\" + key] : '';\n          var result = '';\n          switch (key) {\n            case 'formats':\n              {\n                if (isNOU(dropDown.formatDropDown) || isPopToolbar || !isNOU(dropDown.formatDropDown) && dropDown.formatDropDown.isDestroyed) {\n                  break;\n                }\n                var formatItems = e.parent.format.types;\n                var formatContent = isNOU(e.parent.format.default) ? formatItems[0].text : e.parent.format.default;\n                result = value === 'empty' ? '' : getDropDownValue(formatItems, value, 'subCommand', 'text');\n                dropDown.formatDropDown.content = '<span style=\"display: inline-flex;' + 'width:' + e.parent.format.width + '\" >' + '<span class=\"e-rte-dropdown-btn-text' + (isNOU(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">' + (isNOU(result) ? formatContent : result) + '</span></span>';\n                dropDown.formatDropDown.dataBind();\n                break;\n              }\n            case 'alignments':\n              {\n                if (isNOU(dropDown.alignDropDown) || !isNOU(dropDown.alignDropDown) && dropDown.alignDropDown.isDestroyed) {\n                  break;\n                }\n                var alignItems = model.alignmentItems;\n                result = getDropDownValue(alignItems, value, 'subCommand', 'iconCss');\n                dropDown.alignDropDown.iconCss = isNOU(result) ? 'e-icons e-justify-left' : result;\n                dropDown.alignDropDown.dataBind();\n                break;\n              }\n            case 'fontname':\n              {\n                if (isNOU(dropDown.fontNameDropDown) || isPopToolbar || !isNOU(dropDown.fontNameDropDown) && dropDown.fontNameDropDown.isDestroyed) {\n                  break;\n                }\n                var fontNameItems = e.parent.fontFamily.items;\n                result = value === 'empty' ? '' : getDropDownValue(fontNameItems, value, 'value', 'text');\n                var fontNameContent = isNOU(e.parent.fontFamily.default) ? fontNameItems[0].text : e.parent.fontFamily.default;\n                var name_1 = isNOU(result) ? fontNameContent : result;\n                dropDown.fontNameDropDown.content = '<span style=\"display: inline-flex;' + 'width:' + e.parent.fontFamily.width + '\" >' + '<span class=\"e-rte-dropdown-btn-text' + (isNOU(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">' + name_1 + '</span></span>';\n                dropDown.fontNameDropDown.dataBind();\n                break;\n              }\n            case 'fontsize':\n              {\n                if (isNOU(dropDown.fontSizeDropDown) || !isNOU(dropDown.fontSizeDropDown) && dropDown.fontSizeDropDown.isDestroyed) {\n                  break;\n                }\n                var fontSizeItems = e.parent.fontSize.items;\n                var fontSizeContent = isNOU(e.parent.fontSize.default) ? fontSizeItems[1].text : e.parent.fontSize.default;\n                result = value === 'empty' ? '' : getDropDownValue(fontSizeItems, value === '' ? fontSizeContent.replace(/\\s/g, '') : value, 'value', 'text');\n                dropDown.fontSizeDropDown.content = '<span style=\"display: inline-flex;' + 'width:' + e.parent.fontSize.width + '\" >' + '<span class=\"e-rte-dropdown-btn-text' + (isNOU(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">' + getFormattedFontSize(result) + '</span></span>';\n                dropDown.fontSizeDropDown.dataBind();\n                break;\n              }\n            case 'bulletFormatList':\n            case 'numberFormatList':\n              {\n                removeClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n              }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {string} items - specifies the string value\n * @returns {string[]} - returns the array value\n * @hidden\n */\nexport function getCollection(items) {\n  if (typeof items === 'object') {\n    return items;\n  } else {\n    return [items];\n  }\n}\n/**\n * @param {string[]} items - specifies the array of string value\n * @param {IToolbarItemModel} toolbarItems - specifies the tool bar model\n * @returns {number} - returns the number\n * @hidden\n */\nexport function getTBarItemsIndex(items, toolbarItems) {\n  var itemsIndex = [];\n  for (var i = 0; i < items.length; i++) {\n    for (var j = 0; j < toolbarItems.length; j++) {\n      if (toolbarItems[j].type === 'Separator') {\n        continue;\n      } else {\n        if ((items[i] === 'OrderedList' || items[i] === 'NumberFormatList') && toolbarItems[j].subCommand === 'OL') {\n          itemsIndex.push(j);\n          break;\n        } else if ((items[i] === 'UnorderedList' || items[i] === 'BulletFormatList') && toolbarItems[j].subCommand === 'UL') {\n          itemsIndex.push(j);\n          break;\n        } else if (items[i] === 'InsertCode' && toolbarItems[j].subCommand === 'Pre') {\n          itemsIndex.push(j);\n          break;\n        } else if (items[i] === 'FileManager' && toolbarItems[j].subCommand === 'File') {\n          itemsIndex.push(j);\n          break;\n        } else if (typeof items[i] === 'object' && items[i].command === 'Custom') {\n          itemsIndex.push(i);\n          break;\n        } else if (items[i] === toolbarItems[j].subCommand) {\n          itemsIndex.push(j);\n          break;\n        }\n      }\n    }\n  }\n  return itemsIndex;\n}\n/**\n * @param {BaseToolbar} baseToolbar - specifies the base\n * @param {boolean} undoRedoStatus - specifies the boolean value\n * @returns {void}\n * @hidden\n */\nexport function updateUndoRedoStatus(baseToolbar, undoRedoStatus) {\n  var i = 0;\n  var trgItems = getTBarItemsIndex(getCollection(undoRedoItems), baseToolbar.toolbarObj.items);\n  var tbItems = selectAll('.' + classes.CLS_TB_ITEM, baseToolbar.toolbarObj.element);\n  var keys = Object.keys(undoRedoStatus);\n  for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n    var key = keys_2[_i];\n    var target = tbItems[trgItems[i]];\n    if (target) {\n      baseToolbar.toolbarObj.enableItems(target, undoRedoStatus[\"\" + key]);\n    }\n    i++;\n  }\n}\n/**\n * To dispatch the event manually\n *\n * @param {Element} element - specifies the element.\n * @param {string} type - specifies the string type.\n * @returns {void}\n * @hidden\n\n */\nexport function dispatchEvent(element, type) {\n  var evt = document.createEvent('HTMLEvents');\n  evt.initEvent(type, false, true);\n  element.dispatchEvent(evt);\n}\n/**\n * To parse the HTML\n *\n * @param {string} value - specifies the string value\n * @returns {DocumentFragment} - returns the document\n * @hidden\n */\nexport function parseHtml(value) {\n  var tempNode = createElement('template');\n  tempNode.innerHTML = value;\n  if (tempNode.content instanceof DocumentFragment) {\n    return tempNode.content;\n  } else {\n    return document.createRange().createContextualFragment(value);\n  }\n}\n/**\n * @param {Document} docElement - specifies the document element\n * @param {Element} node - specifies the node\n * @returns {Node[]} - returns the node array\n * @hidden\n */\nexport function getTextNodesUnder(docElement, node) {\n  var nodes = [];\n  for (node = node.firstChild; node; node = node.nextSibling) {\n    if (node.nodeType === 3) {\n      nodes.push(node);\n    } else {\n      nodes = nodes.concat(getTextNodesUnder(docElement, node));\n    }\n  }\n  return nodes;\n}\n/**\n * @param {IToolsItemConfigs} obj - specifies the configuration\n * @returns {void}\n * @hidden\n */\nexport function toObjectLowerCase(obj) {\n  var convertedValue = {};\n  var keys = Object.keys(obj);\n  for (var i = 0; i < Object.keys(obj).length; i++) {\n    convertedValue[keys[i].toLocaleLowerCase()] = obj[keys[i]];\n  }\n  return convertedValue;\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the string\n * @hidden\n */\nexport function getEditValue(value, rteObj) {\n  var val;\n  if (value !== null && value !== '') {\n    val = rteObj.enableHtmlEncode ? updateTextNode(decode(value), rteObj) : updateTextNode(value, rteObj);\n    rteObj.setProperties({\n      value: val\n    }, true);\n  } else {\n    if (rteObj.enterKey === 'DIV') {\n      val = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n    } else if (rteObj.enterKey === 'BR') {\n      val = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n    } else {\n      val = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n    }\n  }\n  return val;\n}\n/**\n * @param {string} value - specifies the value\n * @param {IRichTextEditor} rteObj - specifies the rich text editor instance.\n * @returns {string} - returns the string\n * @hidden\n */\nexport function updateTextNode(value, rteObj) {\n  var tempNode = document.createElement('div');\n  var resultElm = document.createElement('div');\n  var childNodes = tempNode.childNodes;\n  tempNode.innerHTML = value;\n  tempNode.setAttribute('class', 'tempDiv');\n  if (childNodes.length > 0) {\n    var isPreviousInlineElem = void 0;\n    var previousParent = void 0;\n    var insertElem = void 0;\n    while (tempNode.firstChild) {\n      var emptyBlockElem = tempNode.querySelectorAll(CONSTANT.blockEmptyNodes);\n      for (var i = 0; i < emptyBlockElem.length; i++) {\n        emptyBlockElem[i].innerHTML = '<br>';\n      }\n      // To handle the Empty block node with \\n\n      var allPNodes = tempNode.querySelectorAll('p');\n      for (var i = 0; i < allPNodes.length; i++) {\n        if (allPNodes[i].textContent.trim().length === 0 && allPNodes[i].childNodes.length === 1 && allPNodes[i].childNodes[0].nodeName === '#text' && isNOU(allPNodes[i].childNodes[0].textContent.match(/\\u00a0/g))) {\n          allPNodes[i].innerHTML = '<br>';\n        }\n      }\n      var emptyInlineElem = tempNode.querySelectorAll(CONSTANT.inlineEmptyNodes);\n      for (var i = 0; i < emptyInlineElem.length; i++) {\n        emptyInlineElem[i].innerHTML = '&ZeroWidthSpace;';\n      }\n      if (rteObj.enterKey !== 'BR' && (tempNode.firstChild.nodeName === '#text' && (tempNode.firstChild.textContent.indexOf('\\n') < 0 || tempNode.firstChild.textContent.trim() !== '') || inlineNode.indexOf(tempNode.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n        if (!isPreviousInlineElem) {\n          if (rteObj.enterKey === 'DIV') {\n            insertElem = createElement('div');\n          } else {\n            insertElem = createElement('p');\n          }\n          resultElm.appendChild(insertElem);\n          insertElem.appendChild(tempNode.firstChild);\n        } else {\n          previousParent.appendChild(tempNode.firstChild);\n        }\n        previousParent = insertElem;\n        isPreviousInlineElem = true;\n      } else if (tempNode.firstChild.nodeName === '#text' && (tempNode.firstChild.textContent === '\\n' || tempNode.firstChild.textContent.indexOf('\\n') >= 0 && tempNode.firstChild.textContent.trim() === '')) {\n        detach(tempNode.firstChild);\n      } else {\n        resultElm.appendChild(tempNode.firstChild);\n        isPreviousInlineElem = false;\n      }\n    }\n    var imageElm = resultElm.querySelectorAll('img');\n    for (var i = 0; i < imageElm.length; i++) {\n      if (!imageElm[i].classList.contains(classes.CLS_RTE_IMAGE)) {\n        imageElm[i].classList.add(classes.CLS_RTE_IMAGE);\n      }\n      if (!(imageElm[i].classList.contains(classes.CLS_IMGINLINE) || imageElm[i].classList.contains(classes.CLS_IMGBREAK))) {\n        imageElm[i].classList.add(classes.CLS_IMGINLINE);\n      }\n    }\n  }\n  return resultElm.innerHTML;\n}\n/**\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the value based on enter configuration.\n * @hidden\n */\nexport function getDefaultValue(rteObj) {\n  var currentVal;\n  if (rteObj.enterKey === 'DIV') {\n    currentVal = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n  } else if (rteObj.enterKey === 'BR') {\n    currentVal = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n  } else {\n    currentVal = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n  }\n  return currentVal;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function isEditableValueEmpty(value) {\n  return value === '<p><br></p>' || value === '&lt;p&gt;&lt;br&gt;&lt;/p&gt;' || value === '<div><br></div>' || value === '&lt;div&gt;&lt;br&gt;&lt;/div&gt;' || value === '<br>' || value === '&lt;br&gt;' || value === '' ? true : false;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string\n * @hidden\n */\nexport function decode(value) {\n  return value.replace(/&amp;/g, '&').replace(/&amp;lt;/g, '<').replace(/&lt;/g, '<').replace(/&amp;gt;/g, '>').replace(/&gt;/g, '>').replace(/&nbsp;/g, ' ').replace(/&amp;nbsp;/g, ' ').replace(/&quot;/g, '');\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} parent - specifies the rte\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function sanitizeHelper(value, parent) {\n  if (parent.enableHtmlSanitizer) {\n    var item = SanitizeHtmlHelper.beforeSanitize();\n    if (item.selectors.tags[2] && item.selectors.tags[2].indexOf('iframe') > -1) {\n      item.selectors.tags[2] = 'iframe:not(.e-rte-embed-url)';\n    }\n    var beforeEvent = {\n      cancel: false,\n      helper: null\n    };\n    extend(item, item, beforeEvent);\n    parent.trigger('beforeSanitizeHtml', item);\n    if (item.cancel && !isNOU(item.helper)) {\n      value = item.helper(value);\n    } else if (!item.cancel) {\n      value = SanitizeHtmlHelper.serializeValue(item, value);\n    }\n  }\n  return value;\n}\n/**\n * @param {string} dataUrl - specifies the string value\n * @returns {BaseToolbar} - returns the value\n * @hidden\n */\n//Converting the base64 url to blob\nexport function convertToBlob(dataUrl) {\n  var arr = dataUrl.split(',');\n  var mime = arr[0].match(/:(.*?);/)[1];\n  var bstr = atob(arr[1]);\n  var n = bstr.length;\n  var u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], {\n    type: mime\n  });\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @param {string} localeItems - specifies the locale items\n * @param {IDropDownItemModel} item - specifies the dropdown item\n * @returns {string} - returns the value\n * @hidden\n */\nexport function getLocaleFontFormat(self, localeItems, item) {\n  for (var i = 0; localeItems.length > i; i++) {\n    if (localeItems[i].value === item.value || localeItems[i].value === item.subCommand) {\n      return self.localeObj.getConstant(localeItems[i].locale);\n    }\n  }\n  return item.text;\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @returns {void}\n * @hidden\n */\nexport function updateDropDownFontFormatLocale(self) {\n  model.fontFamily.forEach(function (item, i) {\n    model.fontFamily[i].text = getLocaleFontFormat(self, fontNameLocale, model.fontFamily[i]);\n  });\n  model.formatItems.forEach(function (item, i) {\n    model.formatItems[i].text = getLocaleFontFormat(self, formatsLocale, model.formatItems[i]);\n  });\n  model.numberFormatList.forEach(function (item, i) {\n    model.numberFormatList[i].text = getLocaleFontFormat(self, numberFormatListLocale, model.numberFormatList[i]);\n  });\n  model.bulletFormatList.forEach(function (item, i) {\n    model.bulletFormatList[i].text = getLocaleFontFormat(self, bulletFormatListLocale, model.bulletFormatList[i]);\n  });\n}","map":{"version":3,"names":["isNullOrUndefined","isNOU","addClass","removeClass","selectAll","createElement","Browser","detach","SanitizeHtmlHelper","extend","classes","CONSTANT","model","toolsLocale","fontNameLocale","formatsLocale","numberFormatListLocale","bulletFormatListLocale","defaultLocale","undoRedoItems","inlineNode","getIndex","val","items","index","some","item","i","toLocaleLowerCase","hasClass","element","className","classList","contains","getDropDownValue","value","type","returnType","data","result","k","length","text","subCommand","iconCss","isIDevice","isDevice","isIos","getFormattedFontSize","pageYOffset","e","parentElement","isIFrame","y","window","getBoundingClientRect","top","clientY","pageY","getTooltipText","serviceLocator","i10n","getService","itemLocale","tooltipText","getConstant","getTooltipTextDropdownItems","localeItems","rteObj","numberValue","locale","numberLocale","fontsize","fontSize","getQuickToolbarTooltipText","keys","Object","setToolbarStatus","isPopToolbar","self","updateDropDownFontFormatLocale","dropDown","dropDownModule","args","_i","keys_1","key","j","tbItems","itemStr","tbElements","CLS_ACTIVE","parent","toolbarSettings","formatDropDown","isDestroyed","formatItems","format","types","formatContent","default","content","width","cssClass","dataBind","alignDropDown","alignItems","alignmentItems","fontNameDropDown","fontNameItems","fontFamily","fontNameContent","name_1","fontSizeDropDown","fontSizeItems","fontSizeContent","replace","getCollection","getTBarItemsIndex","toolbarItems","itemsIndex","push","command","updateUndoRedoStatus","baseToolbar","undoRedoStatus","trgItems","toolbarObj","CLS_TB_ITEM","keys_2","target","enableItems","dispatchEvent","evt","document","createEvent","initEvent","parseHtml","tempNode","innerHTML","DocumentFragment","createRange","createContextualFragment","getTextNodesUnder","docElement","node","nodes","firstChild","nextSibling","nodeType","concat","toObjectLowerCase","obj","convertedValue","getEditValue","enableHtmlEncode","updateTextNode","decode","setProperties","enterKey","resultElm","childNodes","setAttribute","isPreviousInlineElem","previousParent","insertElem","emptyBlockElem","querySelectorAll","blockEmptyNodes","allPNodes","textContent","trim","nodeName","match","emptyInlineElem","inlineEmptyNodes","indexOf","appendChild","imageElm","CLS_RTE_IMAGE","add","CLS_IMGINLINE","CLS_IMGBREAK","getDefaultValue","currentVal","isEditableValueEmpty","sanitizeHelper","enableHtmlSanitizer","beforeSanitize","selectors","tags","beforeEvent","cancel","helper","trigger","serializeValue","convertToBlob","dataUrl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","getLocaleFontFormat","localeObj","forEach","numberFormatList","bulletFormatList"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/util.js"],"sourcesContent":["/**\n * Defines util methods used by Rich Text Editor.\n */\nimport { isNullOrUndefined as isNOU, addClass, removeClass, selectAll, createElement } from '@syncfusion/ej2-base';\nimport { Browser, detach, SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nimport * as classes from '../base/classes';\nimport * as CONSTANT from '../base/constant';\nimport * as model from '../models/items';\nimport { toolsLocale, fontNameLocale, formatsLocale, numberFormatListLocale, bulletFormatListLocale, defaultLocale } from '../models/default-locale';\nvar undoRedoItems = ['Undo', 'Redo'];\nvar inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n    'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n    'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n    'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'svg',\n    'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n/**\n * @param {string} val - specifies the string value\n * @param {string} items - specifies the value\n * @returns {number} - returns the number value\n * @hidden\n */\nexport function getIndex(val, items) {\n    var index = -1;\n    items.some(function (item, i) {\n        if (typeof item === 'string' && val === item.toLocaleLowerCase()) {\n            index = i;\n            return true;\n        }\n        return false;\n    });\n    return index;\n}\n/**\n * @param {Element} element - specifies the element\n * @param {string} className - specifies the string value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function hasClass(element, className) {\n    var hasClass = false;\n    if (element.classList.contains(className)) {\n        hasClass = true;\n    }\n    return hasClass;\n}\n/**\n * @param {IDropDownItemModel} items - specifies the item model\n * @param {string} value - specifies the string value\n * @param {string} type - specifies the string value\n * @param {string} returnType - specifies the return type\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function getDropDownValue(items, value, type, returnType) {\n    var data;\n    var result;\n    for (var k = 0; k < items.length; k++) {\n        if (type === 'value' && items[k].value.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n        else if (type === 'text' && items[k].text.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n        else if (type === 'subCommand' && items[k].subCommand.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n    }\n    if (!isNOU(data)) {\n        switch (returnType) {\n            case 'text':\n                result = data.text;\n                break;\n            case 'value':\n                result = data.value;\n                break;\n            case 'iconCss':\n                result = data.iconCss;\n                break;\n        }\n    }\n    return result;\n}\n/**\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function isIDevice() {\n    var result = false;\n    if (Browser.isDevice && Browser.isIos) {\n        result = true;\n    }\n    return result;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function getFormattedFontSize(value) {\n    if (isNOU(value)) {\n        return '';\n    }\n    return value;\n}\n/**\n * @param {MouseEvent} e - specifies the mouse event\n * @param {HTMLElement} parentElement - specifies the parent element\n * @param {boolean} isIFrame - specifies the boolean value\n * @returns {number} - returns the number\n * @hidden\n */\nexport function pageYOffset(e, parentElement, isIFrame) {\n    var y = 0;\n    if (isIFrame) {\n        y = window.pageYOffset + parentElement.getBoundingClientRect().top + e.clientY;\n    }\n    else {\n        y = e.pageY;\n    }\n    return y;\n}\n/**\n * @param {string} item - specifies the string\n * @param {ServiceLocator} serviceLocator - specifies the service locator\n * @returns {string} - returns the string\n * @hidden\n */\nexport function getTooltipText(item, serviceLocator) {\n    var i10n = serviceLocator.getService('rteLocale');\n    var itemLocale = toolsLocale[\"\" + item];\n    var tooltipText = i10n.getConstant(itemLocale);\n    return tooltipText;\n}\nexport function getTooltipTextDropdownItems(item, serviceLocator, localeItems, rteObj) {\n    if (localeItems) {\n        var i10n = serviceLocator.getService('rteLocale');\n        for (var i = 0; i < localeItems.length; i++) {\n            var itemLocale = localeItems[i].value.toLocaleLowerCase();\n            var numberValue = localeItems[i].locale;\n            var numberLocale = defaultLocale[\"\" + numberValue].toLocaleLowerCase();\n            if (item === itemLocale || item === numberLocale) {\n                var tooltipText = localeItems[i].locale;\n                return i10n.getConstant(tooltipText);\n            }\n        }\n    }\n    else {\n        var fontsize = rteObj.fontSize.items;\n        for (var i = 0; i < fontsize.length; i++) {\n            if (item === rteObj.fontSize.items[i].value) {\n                var fontSize = rteObj.fontSize.items[i].text;\n                return fontSize;\n            }\n        }\n    }\n    return '';\n}\nexport function getQuickToolbarTooltipText(item) {\n    var keys = Object.keys(defaultLocale);\n    for (var i = 0; i < keys.length; i++) {\n        var tooltipText = defaultLocale[\"\" + keys[i]];\n        if (item === tooltipText) {\n            return tooltipText;\n        }\n    }\n    return '';\n}\n/**\n * @param {ISetToolbarStatusArgs} e - specifies the e element\n * @param {boolean} isPopToolbar - specifies the boolean value\n * @param {IRichTextEditor} self - specifies the parent element\n * @returns {void}\n * @hidden\n */\nexport function setToolbarStatus(e, isPopToolbar, self) {\n    updateDropDownFontFormatLocale(self);\n    var dropDown = e.dropDownModule;\n    var data = e.args;\n    var keys = Object.keys(e.args);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        for (var j = 0; j < e.tbItems.length; j++) {\n            var item = e.tbItems[j].subCommand;\n            var itemStr = item && item.toLocaleLowerCase();\n            if (item && (itemStr === key) || (item === 'UL' && key === 'unorderedlist') || (item === 'OL' && key === 'orderedlist') ||\n                (itemStr === 'pre' && key === 'insertcode') || (item === 'NumberFormatList' && key === 'numberFormatList' ||\n                item === 'BulletFormatList' && key === 'bulletFormatList')) {\n                if (typeof data[\"\" + key] === 'boolean') {\n                    if (data[\"\" + key] === true) {\n                        addClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n                    }\n                    else {\n                        removeClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n                    }\n                }\n                else if ((typeof data[\"\" + key] === 'string' || data[\"\" + key] === null) &&\n                    getIndex(key, e.parent.toolbarSettings.items) >= -1) {\n                    var value = ((data[\"\" + key]) ? data[\"\" + key] : '');\n                    var result = '';\n                    switch (key) {\n                        case 'formats': {\n                            if (isNOU(dropDown.formatDropDown) || isPopToolbar ||\n                                (!isNOU(dropDown.formatDropDown) && dropDown.formatDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var formatItems = e.parent.format.types;\n                            var formatContent = isNOU(e.parent.format.default) ? formatItems[0].text :\n                                e.parent.format.default;\n                            result = value === 'empty' ? '' : getDropDownValue(formatItems, value, 'subCommand', 'text');\n                            dropDown.formatDropDown.content = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.format.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + (isNOU(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">'\n                                + (isNOU(result) ? formatContent : result) +\n                                '</span></span>');\n                            dropDown.formatDropDown.dataBind();\n                            break;\n                        }\n                        case 'alignments': {\n                            if (isNOU(dropDown.alignDropDown) ||\n                                (!isNOU(dropDown.alignDropDown) && dropDown.alignDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var alignItems = model.alignmentItems;\n                            result = getDropDownValue(alignItems, value, 'subCommand', 'iconCss');\n                            dropDown.alignDropDown.iconCss = isNOU(result) ? 'e-icons e-justify-left' : result;\n                            dropDown.alignDropDown.dataBind();\n                            break;\n                        }\n                        case 'fontname': {\n                            if (isNOU(dropDown.fontNameDropDown) || isPopToolbar ||\n                                (!isNOU(dropDown.fontNameDropDown) && dropDown.fontNameDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var fontNameItems = e.parent.fontFamily.items;\n                            result = value === 'empty' ? '' : getDropDownValue(fontNameItems, value, 'value', 'text');\n                            var fontNameContent = isNOU(e.parent.fontFamily.default) ? fontNameItems[0].text :\n                                e.parent.fontFamily.default;\n                            var name_1 = (isNOU(result) ? fontNameContent : result);\n                            dropDown.fontNameDropDown.content = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.fontFamily.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + (isNOU(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">'\n                                + name_1 + '</span></span>');\n                            dropDown.fontNameDropDown.dataBind();\n                            break;\n                        }\n                        case 'fontsize': {\n                            if (isNOU(dropDown.fontSizeDropDown) ||\n                                (!isNOU(dropDown.fontSizeDropDown) && dropDown.fontSizeDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var fontSizeItems = e.parent.fontSize.items;\n                            var fontSizeContent = isNOU(e.parent.fontSize.default) ? fontSizeItems[1].text :\n                                e.parent.fontSize.default;\n                            result = value === 'empty' ? '' : getDropDownValue(fontSizeItems, (value === '' ? fontSizeContent.replace(/\\s/g, '') : value), 'value', 'text');\n                            dropDown.fontSizeDropDown.content = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.fontSize.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + (isNOU(e.parent.cssClass) ? '' : ' ' + e.parent.cssClass) + '\">'\n                                + getFormattedFontSize(result) + '</span></span>');\n                            dropDown.fontSizeDropDown.dataBind();\n                            break;\n                        }\n                        case 'bulletFormatList':\n                        case 'numberFormatList': {\n                            removeClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {string} items - specifies the string value\n * @returns {string[]} - returns the array value\n * @hidden\n */\nexport function getCollection(items) {\n    if (typeof items === 'object') {\n        return items;\n    }\n    else {\n        return [items];\n    }\n}\n/**\n * @param {string[]} items - specifies the array of string value\n * @param {IToolbarItemModel} toolbarItems - specifies the tool bar model\n * @returns {number} - returns the number\n * @hidden\n */\nexport function getTBarItemsIndex(items, toolbarItems) {\n    var itemsIndex = [];\n    for (var i = 0; i < items.length; i++) {\n        for (var j = 0; j < toolbarItems.length; j++) {\n            if (toolbarItems[j].type === 'Separator') {\n                continue;\n            }\n            else {\n                if ((items[i] === 'OrderedList' || items[i] === 'NumberFormatList') && toolbarItems[j].subCommand === 'OL') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if ((items[i] === 'UnorderedList' || items[i] === 'BulletFormatList') && toolbarItems[j].subCommand === 'UL') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'InsertCode' && toolbarItems[j].subCommand === 'Pre') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'FileManager' && toolbarItems[j].subCommand === 'File') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (typeof (items[i]) === 'object' && items[i].command === 'Custom') {\n                    itemsIndex.push(i);\n                    break;\n                }\n                else if (items[i] === toolbarItems[j].subCommand) {\n                    itemsIndex.push(j);\n                    break;\n                }\n            }\n        }\n    }\n    return itemsIndex;\n}\n/**\n * @param {BaseToolbar} baseToolbar - specifies the base\n * @param {boolean} undoRedoStatus - specifies the boolean value\n * @returns {void}\n * @hidden\n */\nexport function updateUndoRedoStatus(baseToolbar, undoRedoStatus) {\n    var i = 0;\n    var trgItems = getTBarItemsIndex(getCollection(undoRedoItems), baseToolbar.toolbarObj.items);\n    var tbItems = selectAll('.' + classes.CLS_TB_ITEM, baseToolbar.toolbarObj.element);\n    var keys = Object.keys(undoRedoStatus);\n    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var key = keys_2[_i];\n        var target = tbItems[trgItems[i]];\n        if (target) {\n            baseToolbar.toolbarObj.enableItems(target, undoRedoStatus[\"\" + key]);\n        }\n        i++;\n    }\n}\n/**\n * To dispatch the event manually\n *\n * @param {Element} element - specifies the element.\n * @param {string} type - specifies the string type.\n * @returns {void}\n * @hidden\n\n */\nexport function dispatchEvent(element, type) {\n    var evt = document.createEvent('HTMLEvents');\n    evt.initEvent(type, false, true);\n    element.dispatchEvent(evt);\n}\n/**\n * To parse the HTML\n *\n * @param {string} value - specifies the string value\n * @returns {DocumentFragment} - returns the document\n * @hidden\n */\nexport function parseHtml(value) {\n    var tempNode = createElement('template');\n    tempNode.innerHTML = value;\n    if (tempNode.content instanceof DocumentFragment) {\n        return tempNode.content;\n    }\n    else {\n        return document.createRange().createContextualFragment(value);\n    }\n}\n/**\n * @param {Document} docElement - specifies the document element\n * @param {Element} node - specifies the node\n * @returns {Node[]} - returns the node array\n * @hidden\n */\nexport function getTextNodesUnder(docElement, node) {\n    var nodes = [];\n    for (node = node.firstChild; node; node = node.nextSibling) {\n        if (node.nodeType === 3) {\n            nodes.push(node);\n        }\n        else {\n            nodes = nodes.concat(getTextNodesUnder(docElement, node));\n        }\n    }\n    return nodes;\n}\n/**\n * @param {IToolsItemConfigs} obj - specifies the configuration\n * @returns {void}\n * @hidden\n */\nexport function toObjectLowerCase(obj) {\n    var convertedValue = {};\n    var keys = Object.keys(obj);\n    for (var i = 0; i < Object.keys(obj).length; i++) {\n        convertedValue[keys[i].toLocaleLowerCase()] = obj[keys[i]];\n    }\n    return convertedValue;\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the string\n * @hidden\n */\nexport function getEditValue(value, rteObj) {\n    var val;\n    if (value !== null && value !== '') {\n        val = rteObj.enableHtmlEncode ? updateTextNode(decode(value), rteObj) : updateTextNode(value, rteObj);\n        rteObj.setProperties({ value: val }, true);\n    }\n    else {\n        if (rteObj.enterKey === 'DIV') {\n            val = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n        }\n        else if (rteObj.enterKey === 'BR') {\n            val = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n        }\n        else {\n            val = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n        }\n    }\n    return val;\n}\n/**\n * @param {string} value - specifies the value\n * @param {IRichTextEditor} rteObj - specifies the rich text editor instance.\n * @returns {string} - returns the string\n * @hidden\n */\nexport function updateTextNode(value, rteObj) {\n    var tempNode = document.createElement('div');\n    var resultElm = document.createElement('div');\n    var childNodes = tempNode.childNodes;\n    tempNode.innerHTML = value;\n    tempNode.setAttribute('class', 'tempDiv');\n    if (childNodes.length > 0) {\n        var isPreviousInlineElem = void 0;\n        var previousParent = void 0;\n        var insertElem = void 0;\n        while (tempNode.firstChild) {\n            var emptyBlockElem = tempNode.querySelectorAll(CONSTANT.blockEmptyNodes);\n            for (var i = 0; i < emptyBlockElem.length; i++) {\n                emptyBlockElem[i].innerHTML = '<br>';\n            }\n            // To handle the Empty block node with \\n\n            var allPNodes = tempNode.querySelectorAll('p');\n            for (var i = 0; i < allPNodes.length; i++) {\n                if (allPNodes[i].textContent.trim().length === 0 && allPNodes[i].childNodes.length === 1\n                    && allPNodes[i].childNodes[0].nodeName === '#text' &&\n                    isNOU(allPNodes[i].childNodes[0].textContent.match(/\\u00a0/g))) {\n                    allPNodes[i].innerHTML = '<br>';\n                }\n            }\n            var emptyInlineElem = tempNode.querySelectorAll(CONSTANT.inlineEmptyNodes);\n            for (var i = 0; i < emptyInlineElem.length; i++) {\n                emptyInlineElem[i].innerHTML = '&ZeroWidthSpace;';\n            }\n            if (rteObj.enterKey !== 'BR' && ((tempNode.firstChild.nodeName === '#text' &&\n                (tempNode.firstChild.textContent.indexOf('\\n') < 0 || tempNode.firstChild.textContent.trim() !== '')) ||\n                inlineNode.indexOf(tempNode.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                if (!isPreviousInlineElem) {\n                    if (rteObj.enterKey === 'DIV') {\n                        insertElem = createElement('div');\n                    }\n                    else {\n                        insertElem = createElement('p');\n                    }\n                    resultElm.appendChild(insertElem);\n                    insertElem.appendChild(tempNode.firstChild);\n                }\n                else {\n                    previousParent.appendChild(tempNode.firstChild);\n                }\n                previousParent = insertElem;\n                isPreviousInlineElem = true;\n            }\n            else if (tempNode.firstChild.nodeName === '#text' && (tempNode.firstChild.textContent === '\\n' ||\n                (tempNode.firstChild.textContent.indexOf('\\n') >= 0 && tempNode.firstChild.textContent.trim() === ''))) {\n                detach(tempNode.firstChild);\n            }\n            else {\n                resultElm.appendChild(tempNode.firstChild);\n                isPreviousInlineElem = false;\n            }\n        }\n        var imageElm = resultElm.querySelectorAll('img');\n        for (var i = 0; i < imageElm.length; i++) {\n            if (!imageElm[i].classList.contains(classes.CLS_RTE_IMAGE)) {\n                imageElm[i].classList.add(classes.CLS_RTE_IMAGE);\n            }\n            if (!(imageElm[i].classList.contains(classes.CLS_IMGINLINE) ||\n                imageElm[i].classList.contains(classes.CLS_IMGBREAK))) {\n                imageElm[i].classList.add(classes.CLS_IMGINLINE);\n            }\n        }\n    }\n    return resultElm.innerHTML;\n}\n/**\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the value based on enter configuration.\n * @hidden\n */\nexport function getDefaultValue(rteObj) {\n    var currentVal;\n    if (rteObj.enterKey === 'DIV') {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n    }\n    else if (rteObj.enterKey === 'BR') {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n    }\n    else {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n    }\n    return currentVal;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function isEditableValueEmpty(value) {\n    return (value === '<p><br></p>' || value === '&lt;p&gt;&lt;br&gt;&lt;/p&gt;'\n        || value === '<div><br></div>' || value === '&lt;div&gt;&lt;br&gt;&lt;/div&gt;'\n        || value === '<br>' || value === '&lt;br&gt;'\n        || value === '') ? true : false;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string\n * @hidden\n */\nexport function decode(value) {\n    return value.replace(/&amp;/g, '&').replace(/&amp;lt;/g, '<')\n        .replace(/&lt;/g, '<').replace(/&amp;gt;/g, '>')\n        .replace(/&gt;/g, '>').replace(/&nbsp;/g, ' ')\n        .replace(/&amp;nbsp;/g, ' ').replace(/&quot;/g, '');\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} parent - specifies the rte\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function sanitizeHelper(value, parent) {\n    if (parent.enableHtmlSanitizer) {\n        var item = SanitizeHtmlHelper.beforeSanitize();\n        if (item.selectors.tags[2] && item.selectors.tags[2].indexOf('iframe') > -1) {\n            item.selectors.tags[2] = 'iframe:not(.e-rte-embed-url)';\n        }\n        var beforeEvent = {\n            cancel: false,\n            helper: null\n        };\n        extend(item, item, beforeEvent);\n        parent.trigger('beforeSanitizeHtml', item);\n        if (item.cancel && !isNOU(item.helper)) {\n            value = item.helper(value);\n        }\n        else if (!item.cancel) {\n            value = SanitizeHtmlHelper.serializeValue(item, value);\n        }\n    }\n    return value;\n}\n/**\n * @param {string} dataUrl - specifies the string value\n * @returns {BaseToolbar} - returns the value\n * @hidden\n */\n//Converting the base64 url to blob\nexport function convertToBlob(dataUrl) {\n    var arr = dataUrl.split(',');\n    var mime = arr[0].match(/:(.*?);/)[1];\n    var bstr = atob(arr[1]);\n    var n = bstr.length;\n    var u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], { type: mime });\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @param {string} localeItems - specifies the locale items\n * @param {IDropDownItemModel} item - specifies the dropdown item\n * @returns {string} - returns the value\n * @hidden\n */\nexport function getLocaleFontFormat(self, localeItems, item) {\n    for (var i = 0; localeItems.length > i; i++) {\n        if (localeItems[i].value === item.value || localeItems[i].value === item.subCommand) {\n            return self.localeObj.getConstant(localeItems[i].locale);\n        }\n    }\n    return item.text;\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @returns {void}\n * @hidden\n */\nexport function updateDropDownFontFormatLocale(self) {\n    model.fontFamily.forEach(function (item, i) {\n        model.fontFamily[i].text = getLocaleFontFormat(self, fontNameLocale, model.fontFamily[i]);\n    });\n    model.formatItems.forEach(function (item, i) {\n        model.formatItems[i].text = getLocaleFontFormat(self, formatsLocale, model.formatItems[i]);\n    });\n    model.numberFormatList.forEach(function (item, i) {\n        model.numberFormatList[i].text = getLocaleFontFormat(self, numberFormatListLocale, model.numberFormatList[i]);\n    });\n    model.bulletFormatList.forEach(function (item, i) {\n        model.bulletFormatList[i].text = getLocaleFontFormat(self, bulletFormatListLocale, model.bulletFormatList[i]);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}