{"ast":null,"code":"import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\n/**\n * The `Search` module is used to handle search action.\n */\nvar Search = /** @class */function () {\n  /**\n   * Constructor for Grid search module.\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @hidden\n   */\n  function Search(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  /**\n   * Searches Grid records by given key.\n   *\n   * > You can customize the default search action by using [`searchSettings`](./searchsettings/).\n   *\n   * @param  {string} searchString - Defines the key.\n   * @returns {void}\n   */\n  Search.prototype.search = function (searchString) {\n    var gObj = this.parent;\n    searchString = isNullOrUndefined(searchString) ? '' : searchString;\n    if (isActionPrevent(gObj)) {\n      gObj.notify(events.preventBatch, {\n        instance: this,\n        handler: this.search,\n        arg1: searchString\n      });\n      return;\n    }\n    if (searchString !== gObj.searchSettings.key) {\n      // Check searchString is decimal or integer and parseFloat to remove trailing zeros\n      /* eslint-disable-next-line */\n      gObj.searchSettings.key = /^\\d+(\\.\\d+)?$/.test(searchString) ? parseFloat(searchString).toString() : searchString.toString();\n      gObj.dataBind();\n    } else if (this.refreshSearch) {\n      gObj.refresh();\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Search.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.searchComplete, this.onSearchComplete, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.actionCompleteFunc = this.onActionComplete.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.cancelBegin, this.cancelBeginEvent, this);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Search.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n    this.parent.off(events.searchComplete, this.onSearchComplete);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.cancelBegin, this.cancelBeginEvent);\n  };\n  /**\n   * To destroy the print\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Search.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @param {NotifyArgs} e - specfies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n  Search.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n    if (!isNullOrUndefined(e.properties.key)) {\n      this.parent.notify(events.modelChanged, {\n        requestType: 'searching',\n        type: events.actionBegin,\n        searchString: this.parent.searchSettings.key\n      });\n    } else {\n      this.parent.notify(events.modelChanged, {\n        requestType: 'searching',\n        type: events.actionBegin\n      });\n    }\n  };\n  /**\n   * The function used to trigger onActionComplete\n   *\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n  Search.prototype.onSearchComplete = function (e) {\n    this.parent.trigger(events.actionComplete, extend(e, {\n      searchString: this.parent.searchSettings.key,\n      requestType: 'searching',\n      type: events.actionComplete\n    }));\n  };\n  /**\n   * The function used to store the requestType\n   *\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n  Search.prototype.onActionComplete = function (e) {\n    this.refreshSearch = e.requestType !== 'searching';\n  };\n  Search.prototype.cancelBeginEvent = function (e) {\n    if (e.requestType === 'searching') {\n      this.parent.setProperties({\n        searchSettings: {\n          key: ''\n        }\n      }, true);\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n  Search.prototype.getModuleName = function () {\n    return 'search';\n  };\n  return Search;\n}();\nexport { Search };","map":{"version":3,"names":["extend","isNullOrUndefined","events","isActionPrevent","Search","parent","addEventListener","prototype","search","searchString","gObj","notify","preventBatch","instance","handler","arg1","searchSettings","key","test","parseFloat","toString","dataBind","refreshSearch","refresh","isDestroyed","on","inBoundModelChanged","onPropertyChanged","searchComplete","onSearchComplete","destroy","actionCompleteFunc","onActionComplete","bind","actionComplete","cancelBegin","cancelBeginEvent","removeEventListener","off","e","module","getModuleName","properties","modelChanged","requestType","type","actionBegin","trigger","setProperties"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-grids/src/grid/actions/search.js"],"sourcesContent":["import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\n/**\n * The `Search` module is used to handle search action.\n */\nvar Search = /** @class */ (function () {\n    /**\n     * Constructor for Grid search module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @hidden\n     */\n    function Search(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Searches Grid records by given key.\n     *\n     * > You can customize the default search action by using [`searchSettings`](./searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    Search.prototype.search = function (searchString) {\n        var gObj = this.parent;\n        searchString = isNullOrUndefined(searchString) ? '' : searchString;\n        if (isActionPrevent(gObj)) {\n            gObj.notify(events.preventBatch, { instance: this, handler: this.search, arg1: searchString });\n            return;\n        }\n        if (searchString !== gObj.searchSettings.key) {\n            // Check searchString is decimal or integer and parseFloat to remove trailing zeros\n            /* eslint-disable-next-line */\n            gObj.searchSettings.key = /^\\d+(\\.\\d+)?$/.test(searchString) ? parseFloat(searchString).toString() : searchString.toString();\n            gObj.dataBind();\n        }\n        else if (this.refreshSearch) {\n            gObj.refresh();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.searchComplete, this.onSearchComplete, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.actionCompleteFunc = this.onActionComplete.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.cancelBegin, this.cancelBeginEvent, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n        this.parent.off(events.searchComplete, this.onSearchComplete);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.cancelBegin, this.cancelBeginEvent);\n    };\n    /**\n     * To destroy the print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {NotifyArgs} e - specfies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        if (!isNullOrUndefined(e.properties.key)) {\n            this.parent.notify(events.modelChanged, {\n                requestType: 'searching', type: events.actionBegin, searchString: this.parent.searchSettings.key\n            });\n        }\n        else {\n            this.parent.notify(events.modelChanged, {\n                requestType: 'searching', type: events.actionBegin\n            });\n        }\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onSearchComplete = function (e) {\n        this.parent.trigger(events.actionComplete, extend(e, {\n            searchString: this.parent.searchSettings.key, requestType: 'searching', type: events.actionComplete\n        }));\n    };\n    /**\n     * The function used to store the requestType\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onActionComplete = function (e) {\n        this.refreshSearch = e.requestType !== 'searching';\n    };\n    Search.prototype.cancelBeginEvent = function (e) {\n        if (e.requestType === 'searching') {\n            this.parent.setProperties({ searchSettings: { key: '' } }, true);\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Search.prototype.getModuleName = function () {\n        return 'search';\n    };\n    return Search;\n}());\nexport { Search };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}