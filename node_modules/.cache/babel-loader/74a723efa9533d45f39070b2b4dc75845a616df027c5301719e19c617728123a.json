{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */function (_super) {\n  __extends(Container, _super);\n  function Container() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    //private members    \n    _this.desiredBounds = undefined;\n    /** @private */\n    _this.measureChildren = true;\n    /**   @private  */\n    _this.prevRotateAngle = 0;\n    return _this;\n  }\n  /**\n   * returns whether the container has child elements or not\n   */\n  Container.prototype.hasChildren = function () {\n    if (this.children !== undefined && this.children.length > 0) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Measures the minimum space that the container requires\n   *\n   * @param availableSize\n   */\n  Container.prototype.measure = function (availableSize) {\n    // measure the element and find the desired size\n    this.desiredBounds = undefined;\n    var desired = undefined;\n    var child;\n    var center = {\n      x: 0,\n      y: 0\n    };\n    var y;\n    var x;\n    var childBounds;\n    if (this.hasChildren()) {\n      //Measuring the children\n      for (var i = 0; i < this.children.length; i++) {\n        child = this.children[parseInt(i.toString(), 10)];\n        if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n          availableSize.width = child.bounds.width;\n        }\n        if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n          availableSize.height = child.bounds.height;\n        }\n        var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n        if (this.measureChildren || force || child instanceof Container && child.measureChildren !== undefined) {\n          child.measure(availableSize);\n        }\n        childBounds = this.GetChildrenBounds(child);\n        if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n          if (this.desiredBounds === undefined) {\n            this.desiredBounds = childBounds;\n          } else {\n            this.desiredBounds.uniteRect(childBounds);\n          }\n        } else if (this.actualSize && !this.actualSize.width && !this.actualSize.height && !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n          if (this.desiredBounds === undefined) {\n            this.desiredBounds = child.bounds;\n          } else {\n            this.desiredBounds.uniteRect(child.bounds);\n          }\n        }\n      }\n      if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n        var offsetPt = {\n          x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n          y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n        };\n        var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n        this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n        this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n      }\n      if (this.desiredBounds) {\n        desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n      }\n    }\n    desired = this.validateDesiredSize(desired, availableSize);\n    this.stretchChildren(desired);\n    this.desiredSize = desired;\n    return desired;\n  };\n  /**\n   * Arranges the container and its children\n   * @param desiredSize\n   */\n  Container.prototype.arrange = function (desiredSize) {\n    var child;\n    var bounds;\n    var childBounds = this.desiredBounds;\n    if (childBounds) {\n      var x = this.offsetX;\n      var y = this.offsetY;\n      this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n      this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n      // container has rotateAngle\n      if (this.hasChildren()) {\n        //Measuring the children\n        for (var i = 0; i < this.children.length; i++) {\n          child = this.children[parseInt(i.toString(), 10)];\n          var arrange = false;\n          if (child.horizontalAlignment === 'Stretch') {\n            child.offsetX = this.offsetX;\n            child.parentTransform = this.parentTransform + this.rotateAngle;\n            arrange = true;\n          }\n          if (child.verticalAlignment === 'Stretch') {\n            child.offsetY = this.offsetY;\n            child.parentTransform = this.parentTransform + this.rotateAngle;\n            arrange = true;\n          }\n          if (arrange || this.measureChildren || child instanceof Container && child.measureChildren !== undefined) {\n            child.arrange(child.desiredSize);\n          }\n        }\n      }\n    }\n    this.actualSize = desiredSize;\n    this.updateBounds();\n    this.prevRotateAngle = this.rotateAngle;\n    return desiredSize;\n  };\n  //protected methods\n  /**\n   * Stretches the child elements based on the size of the container\n   * @param size\n   */\n  Container.prototype.stretchChildren = function (size) {\n    if (this.hasChildren()) {\n      for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n          child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n        }\n        if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n          child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n        }\n        if (child instanceof Container) {\n          child.stretchChildren(child.desiredSize);\n        }\n      }\n    }\n  };\n  /**\n   * Finds the offset of the child element with respect to the container\n   * @param child\n   * @param center\n   */\n  Container.prototype.findChildOffsetFromCenter = function (child, center) {\n    var topLeft = {\n      x: center.x - child.desiredSize.width / 2,\n      y: center.y - child.desiredSize.height / 2\n    };\n    var offset = getOffset(topLeft, child);\n    //Rotate based on child rotate angle\n    offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n    //Rotate based on parent pivot\n    offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n    child.offsetX = offset.x;\n    child.offsetY = offset.y;\n  };\n  //private methods - check its need\n  Container.prototype.GetChildrenBounds = function (child) {\n    var childBounds;\n    var childSize;\n    childSize = child.desiredSize.clone();\n    var diffAngle = child.rotateAngle - this.rotateAngle;\n    var refPoint = {\n      x: child.offsetX,\n      y: child.offsetY\n    };\n    var left = refPoint.x - childSize.width * child.pivot.x;\n    var top = refPoint.y - childSize.height * child.pivot.y;\n    var right = left + childSize.width;\n    var bottom = top + childSize.height;\n    var topLeft = {\n      x: left,\n      y: top\n    };\n    var topRight = {\n      x: right,\n      y: top\n    };\n    var bottomLeft = {\n      x: left,\n      y: bottom\n    };\n    var bottomRight = {\n      x: right,\n      y: bottom\n    };\n    topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n    topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n    bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n    bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n    if (this.rotateAngle !== 0) {\n      topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n      topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n      bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n      bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n    }\n    return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n  };\n  return Container;\n}(DrawingElement);\nexport { Container };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","DrawingElement","Size","Rect","rotatePoint","getOffset","Container","_super","_this","apply","arguments","desiredBounds","undefined","measureChildren","prevRotateAngle","hasChildren","children","length","measure","availableSize","desired","child","center","x","y","childBounds","i","parseInt","toString","horizontalAlignment","width","bounds","verticalAlignment","height","force","GetChildrenBounds","uniteRect","actualSize","preventContainer","rotateAngle","offsetPt","pivot","newPoint","validateDesiredSize","stretchChildren","desiredSize","arrange","offsetX","offsetY","parentTransform","updateBounds","size","_i","_a","margin","left","right","top","bottom","findChildOffsetFromCenter","topLeft","offset","childSize","clone","diffAngle","refPoint","topRight","bottomLeft","bottomRight","toBounds"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-drawings/src/drawing/core/containers/container.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[parseInt(i.toString(), 10)];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[parseInt(i.toString(), 10)];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DrawingElement));\nexport { Container };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACJ,SAASI,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,WAAW,EAAEC,SAAS,QAAQ,yBAAyB;AAChE;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC7CpB,SAAS,CAACmB,SAAS,EAAEC,MAAM,CAAC;EAC5B,SAASD,SAASA,CAAA,EAAG;IACjB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpE;IACAF,KAAK,CAACG,aAAa,GAAGC,SAAS;IAC/B;IACAJ,KAAK,CAACK,eAAe,GAAG,IAAI;IAC5B;IACAL,KAAK,CAACM,eAAe,GAAG,CAAC;IACzB,OAAON,KAAK;EAChB;EACA;AACJ;AACA;EACIF,SAAS,CAACP,SAAS,CAACgB,WAAW,GAAG,YAAY;IAC1C,IAAI,IAAI,CAACC,QAAQ,KAAKJ,SAAS,IAAI,IAAI,CAACI,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MACzD,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIX,SAAS,CAACP,SAAS,CAACmB,OAAO,GAAG,UAAUC,aAAa,EAAE;IACnD;IACA,IAAI,CAACR,aAAa,GAAGC,SAAS;IAC9B,IAAIQ,OAAO,GAAGR,SAAS;IACvB,IAAIS,KAAK;IACT,IAAIC,MAAM,GAAG;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC3B,IAAIA,CAAC;IACL,IAAID,CAAC;IACL,IAAIE,WAAW;IACf,IAAI,IAAI,CAACV,WAAW,CAAC,CAAC,EAAE;MACpB;MACA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACV,QAAQ,CAACC,MAAM,EAAES,CAAC,EAAE,EAAE;QAC3CL,KAAK,GAAG,IAAI,CAACL,QAAQ,CAACW,QAAQ,CAACD,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAIP,KAAK,CAACQ,mBAAmB,KAAK,SAAS,IAAI,CAACV,aAAa,CAACW,KAAK,EAAE;UACjEX,aAAa,CAACW,KAAK,GAAGT,KAAK,CAACU,MAAM,CAACD,KAAK;QAC5C;QACA,IAAIT,KAAK,CAACW,iBAAiB,KAAK,SAAS,IAAI,CAACb,aAAa,CAACc,MAAM,EAAE;UAChEd,aAAa,CAACc,MAAM,GAAGZ,KAAK,CAACU,MAAM,CAACE,MAAM;QAC9C;QACA,IAAIC,KAAK,GAAGb,KAAK,CAACQ,mBAAmB,KAAK,SAAS,IAAIR,KAAK,CAACW,iBAAiB,KAAK,SAAS;QAC5F,IAAI,IAAI,CAACnB,eAAe,IAAIqB,KAAK,IAAKb,KAAK,YAAYf,SAAS,IAAIe,KAAK,CAACR,eAAe,KAAKD,SAAU,EAAE;UACtGS,KAAK,CAACH,OAAO,CAACC,aAAa,CAAC;QAChC;QACAM,WAAW,GAAG,IAAI,CAACU,iBAAiB,CAACd,KAAK,CAAC;QAC3C,IAAIA,KAAK,CAACQ,mBAAmB,KAAK,SAAS,IAAIR,KAAK,CAACW,iBAAiB,KAAK,SAAS,EAAE;UAClF,IAAI,IAAI,CAACrB,aAAa,KAAKC,SAAS,EAAE;YAClC,IAAI,CAACD,aAAa,GAAGc,WAAW;UACpC,CAAC,MACI;YACD,IAAI,CAACd,aAAa,CAACyB,SAAS,CAACX,WAAW,CAAC;UAC7C;QACJ,CAAC,MACI,IAAI,IAAI,CAACY,UAAU,IAAI,CAAC,IAAI,CAACA,UAAU,CAACP,KAAK,IAAI,CAAC,IAAI,CAACO,UAAU,CAACJ,MAAM,IACzE,CAACZ,KAAK,CAACiB,gBAAgB,IAAIjB,KAAK,CAACQ,mBAAmB,KAAK,SAAS,IAAIR,KAAK,CAACW,iBAAiB,KAAK,SAAS,EAAE;UAC7G,IAAI,IAAI,CAACrB,aAAa,KAAKC,SAAS,EAAE;YAClC,IAAI,CAACD,aAAa,GAAGU,KAAK,CAACU,MAAM;UACrC,CAAC,MACI;YACD,IAAI,CAACpB,aAAa,CAACyB,SAAS,CAACf,KAAK,CAACU,MAAM,CAAC;UAC9C;QACJ;MACJ;MACA,IAAI,IAAI,CAACpB,aAAa,KAAKC,SAAS,IAAI,IAAI,CAAC2B,WAAW,KAAK,CAAC,EAAE;QAC5D,IAAIC,QAAQ,GAAG;UACXjB,CAAC,EAAE,IAAI,CAACZ,aAAa,CAACY,CAAC,GAAG,IAAI,CAACZ,aAAa,CAACmB,KAAK,GAAG,IAAI,CAACW,KAAK,CAAClB,CAAC;UACjEC,CAAC,EAAE,IAAI,CAACb,aAAa,CAACa,CAAC,GAAG,IAAI,CAACb,aAAa,CAACsB,MAAM,GAAG,IAAI,CAACQ,KAAK,CAACjB;QACrE,CAAC;QACD,IAAIkB,QAAQ,GAAGtC,WAAW,CAAC,IAAI,CAACmC,WAAW,EAAE3B,SAAS,EAAEA,SAAS,EAAE4B,QAAQ,CAAC;QAC5E,IAAI,CAAC7B,aAAa,CAACY,CAAC,GAAGmB,QAAQ,CAACnB,CAAC,GAAG,IAAI,CAACZ,aAAa,CAACmB,KAAK,GAAG,IAAI,CAACW,KAAK,CAAClB,CAAC;QAC3E,IAAI,CAACZ,aAAa,CAACa,CAAC,GAAGkB,QAAQ,CAAClB,CAAC,GAAG,IAAI,CAACb,aAAa,CAACsB,MAAM,GAAG,IAAI,CAACQ,KAAK,CAACjB,CAAC;MAChF;MACA,IAAI,IAAI,CAACb,aAAa,EAAE;QACpBS,OAAO,GAAG,IAAIlB,IAAI,CAAC,IAAI,CAACS,aAAa,CAACmB,KAAK,EAAE,IAAI,CAACnB,aAAa,CAACsB,MAAM,CAAC;MAC3E;IACJ;IACAb,OAAO,GAAG,IAAI,CAACuB,mBAAmB,CAACvB,OAAO,EAAED,aAAa,CAAC;IAC1D,IAAI,CAACyB,eAAe,CAACxB,OAAO,CAAC;IAC7B,IAAI,CAACyB,WAAW,GAAGzB,OAAO;IAC1B,OAAOA,OAAO;EAClB,CAAC;EACD;AACJ;AACA;AACA;EACId,SAAS,CAACP,SAAS,CAAC+C,OAAO,GAAG,UAAUD,WAAW,EAAE;IACjD,IAAIxB,KAAK;IACT,IAAIU,MAAM;IACV,IAAIN,WAAW,GAAG,IAAI,CAACd,aAAa;IACpC,IAAIc,WAAW,EAAE;MACb,IAAIF,CAAC,GAAG,IAAI,CAACwB,OAAO;MACpB,IAAIvB,CAAC,GAAG,IAAI,CAACwB,OAAO;MACpB,IAAI,CAACD,OAAO,GAAGtB,WAAW,CAACF,CAAC,GAAGE,WAAW,CAACK,KAAK,GAAG,IAAI,CAACW,KAAK,CAAClB,CAAC;MAC/D,IAAI,CAACyB,OAAO,GAAGvB,WAAW,CAACD,CAAC,GAAGC,WAAW,CAACQ,MAAM,GAAG,IAAI,CAACQ,KAAK,CAACjB,CAAC;MAChE;MACA,IAAI,IAAI,CAACT,WAAW,CAAC,CAAC,EAAE;QACpB;QACA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACV,QAAQ,CAACC,MAAM,EAAES,CAAC,EAAE,EAAE;UAC3CL,KAAK,GAAG,IAAI,CAACL,QAAQ,CAACW,QAAQ,CAACD,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UACjD,IAAIkB,OAAO,GAAG,KAAK;UACnB,IAAIzB,KAAK,CAACQ,mBAAmB,KAAK,SAAS,EAAE;YACzCR,KAAK,CAAC0B,OAAO,GAAG,IAAI,CAACA,OAAO;YAC5B1B,KAAK,CAAC4B,eAAe,GAAG,IAAI,CAACA,eAAe,GAAG,IAAI,CAACV,WAAW;YAC/DO,OAAO,GAAG,IAAI;UAClB;UACA,IAAIzB,KAAK,CAACW,iBAAiB,KAAK,SAAS,EAAE;YACvCX,KAAK,CAAC2B,OAAO,GAAG,IAAI,CAACA,OAAO;YAC5B3B,KAAK,CAAC4B,eAAe,GAAG,IAAI,CAACA,eAAe,GAAG,IAAI,CAACV,WAAW;YAC/DO,OAAO,GAAG,IAAI;UAClB;UACA,IAAIA,OAAO,IAAI,IAAI,CAACjC,eAAe,IAAKQ,KAAK,YAAYf,SAAS,IAAIe,KAAK,CAACR,eAAe,KAAKD,SAAU,EAAE;YACxGS,KAAK,CAACyB,OAAO,CAACzB,KAAK,CAACwB,WAAW,CAAC;UACpC;QACJ;MACJ;IACJ;IACA,IAAI,CAACR,UAAU,GAAGQ,WAAW;IAC7B,IAAI,CAACK,YAAY,CAAC,CAAC;IACnB,IAAI,CAACpC,eAAe,GAAG,IAAI,CAACyB,WAAW;IACvC,OAAOM,WAAW;EACtB,CAAC;EACD;EACA;AACJ;AACA;AACA;EACIvC,SAAS,CAACP,SAAS,CAAC6C,eAAe,GAAG,UAAUO,IAAI,EAAE;IAClD,IAAI,IAAI,CAACpC,WAAW,CAAC,CAAC,EAAE;MACpB,KAAK,IAAIqC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,IAAI,CAACrC,QAAQ,EAAEoC,EAAE,GAAGC,EAAE,CAACpC,MAAM,EAAEmC,EAAE,EAAE,EAAE;QACvD,IAAI/B,KAAK,GAAGgC,EAAE,CAACD,EAAE,CAAC;QAClB,IAAI/B,KAAK,CAACQ,mBAAmB,KAAK,SAAS,IAAIR,KAAK,CAACwB,WAAW,CAACf,KAAK,KAAKlB,SAAS,EAAE;UAClFS,KAAK,CAACwB,WAAW,CAACf,KAAK,GAAGqB,IAAI,CAACrB,KAAK,GAAGT,KAAK,CAACiC,MAAM,CAACC,IAAI,GAAGlC,KAAK,CAACiC,MAAM,CAACE,KAAK;QACjF;QACA,IAAInC,KAAK,CAACW,iBAAiB,KAAK,SAAS,IAAIX,KAAK,CAACwB,WAAW,CAACZ,MAAM,KAAKrB,SAAS,EAAE;UACjFS,KAAK,CAACwB,WAAW,CAACZ,MAAM,GAAGkB,IAAI,CAAClB,MAAM,GAAGZ,KAAK,CAACiC,MAAM,CAACG,GAAG,GAAGpC,KAAK,CAACiC,MAAM,CAACI,MAAM;QACnF;QACA,IAAIrC,KAAK,YAAYf,SAAS,EAAE;UAC5Be,KAAK,CAACuB,eAAe,CAACvB,KAAK,CAACwB,WAAW,CAAC;QAC5C;MACJ;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIvC,SAAS,CAACP,SAAS,CAAC4D,yBAAyB,GAAG,UAAUtC,KAAK,EAAEC,MAAM,EAAE;IACrE,IAAIsC,OAAO,GAAG;MAAErC,CAAC,EAAED,MAAM,CAACC,CAAC,GAAGF,KAAK,CAACwB,WAAW,CAACf,KAAK,GAAG,CAAC;MAAEN,CAAC,EAAEF,MAAM,CAACE,CAAC,GAAGH,KAAK,CAACwB,WAAW,CAACZ,MAAM,GAAG;IAAE,CAAC;IACvG,IAAI4B,MAAM,GAAGxD,SAAS,CAACuD,OAAO,EAAEvC,KAAK,CAAC;IACtC;IACAwC,MAAM,GAAGzD,WAAW,CAACiB,KAAK,CAACkB,WAAW,EAAEjB,MAAM,CAACC,CAAC,EAAED,MAAM,CAACE,CAAC,EAAEqC,MAAM,CAAC;IACnE;IACAA,MAAM,GAAGzD,WAAW,CAAC,IAAI,CAACmC,WAAW,GAAG,IAAI,CAACU,eAAe,EAAE,IAAI,CAACF,OAAO,EAAE,IAAI,CAACC,OAAO,EAAEa,MAAM,CAAC;IACjGxC,KAAK,CAAC0B,OAAO,GAAGc,MAAM,CAACtC,CAAC;IACxBF,KAAK,CAAC2B,OAAO,GAAGa,MAAM,CAACrC,CAAC;EAC5B,CAAC;EACD;EACAlB,SAAS,CAACP,SAAS,CAACoC,iBAAiB,GAAG,UAAUd,KAAK,EAAE;IACrD,IAAII,WAAW;IACf,IAAIqC,SAAS;IACbA,SAAS,GAAGzC,KAAK,CAACwB,WAAW,CAACkB,KAAK,CAAC,CAAC;IACrC,IAAIC,SAAS,GAAG3C,KAAK,CAACkB,WAAW,GAAG,IAAI,CAACA,WAAW;IACpD,IAAI0B,QAAQ,GAAG;MAAE1C,CAAC,EAAEF,KAAK,CAAC0B,OAAO;MAAEvB,CAAC,EAAEH,KAAK,CAAC2B;IAAQ,CAAC;IACrD,IAAIO,IAAI,GAAGU,QAAQ,CAAC1C,CAAC,GAAGuC,SAAS,CAAChC,KAAK,GAAGT,KAAK,CAACoB,KAAK,CAAClB,CAAC;IACvD,IAAIkC,GAAG,GAAGQ,QAAQ,CAACzC,CAAC,GAAGsC,SAAS,CAAC7B,MAAM,GAAGZ,KAAK,CAACoB,KAAK,CAACjB,CAAC;IACvD,IAAIgC,KAAK,GAAGD,IAAI,GAAGO,SAAS,CAAChC,KAAK;IAClC,IAAI4B,MAAM,GAAGD,GAAG,GAAGK,SAAS,CAAC7B,MAAM;IACnC,IAAI2B,OAAO,GAAG;MAAErC,CAAC,EAAEgC,IAAI;MAAE/B,CAAC,EAAEiC;IAAI,CAAC;IACjC,IAAIS,QAAQ,GAAG;MAAE3C,CAAC,EAAEiC,KAAK;MAAEhC,CAAC,EAAEiC;IAAI,CAAC;IACnC,IAAIU,UAAU,GAAG;MAAE5C,CAAC,EAAEgC,IAAI;MAAE/B,CAAC,EAAEkC;IAAO,CAAC;IACvC,IAAIU,WAAW,GAAG;MAAE7C,CAAC,EAAEiC,KAAK;MAAEhC,CAAC,EAAEkC;IAAO,CAAC;IACzCE,OAAO,GAAGxD,WAAW,CAACiB,KAAK,CAACkB,WAAW,EAAElB,KAAK,CAAC0B,OAAO,EAAE1B,KAAK,CAAC2B,OAAO,EAAEY,OAAO,CAAC;IAC/EM,QAAQ,GAAG9D,WAAW,CAACiB,KAAK,CAACkB,WAAW,EAAElB,KAAK,CAAC0B,OAAO,EAAE1B,KAAK,CAAC2B,OAAO,EAAEkB,QAAQ,CAAC;IACjFC,UAAU,GAAG/D,WAAW,CAACiB,KAAK,CAACkB,WAAW,EAAElB,KAAK,CAAC0B,OAAO,EAAE1B,KAAK,CAAC2B,OAAO,EAAEmB,UAAU,CAAC;IACrFC,WAAW,GAAGhE,WAAW,CAACiB,KAAK,CAACkB,WAAW,EAAElB,KAAK,CAAC0B,OAAO,EAAE1B,KAAK,CAAC2B,OAAO,EAAEoB,WAAW,CAAC;IACvF,IAAI,IAAI,CAAC7B,WAAW,KAAK,CAAC,EAAE;MACxBqB,OAAO,GAAGxD,WAAW,CAAC,CAAC,IAAI,CAACmC,WAAW,EAAE3B,SAAS,EAAEA,SAAS,EAAEgD,OAAO,CAAC;MACvEM,QAAQ,GAAG9D,WAAW,CAAC,CAAC,IAAI,CAACmC,WAAW,EAAE3B,SAAS,EAAEA,SAAS,EAAEsD,QAAQ,CAAC;MACzEC,UAAU,GAAG/D,WAAW,CAAC,CAAC,IAAI,CAACmC,WAAW,EAAE3B,SAAS,EAAEA,SAAS,EAAEuD,UAAU,CAAC;MAC7EC,WAAW,GAAGhE,WAAW,CAAC,CAAC,IAAI,CAACmC,WAAW,EAAE3B,SAAS,EAAEA,SAAS,EAAEwD,WAAW,CAAC;IACnF;IACA,OAAOjE,IAAI,CAACkE,QAAQ,CAAC,CAACT,OAAO,EAAEM,QAAQ,EAAEC,UAAU,EAAEC,WAAW,CAAC,CAAC;EACtE,CAAC;EACD,OAAO9D,SAAS;AACpB,CAAC,CAACL,cAAc,CAAE;AAClB,SAASK,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}