{"ast":null,"code":"import { LineTool } from '../index';\nimport { ZOrderPageTable, PdfAnnotationBase, PdfFormFieldBase } from './pdf-annotation';\nimport { Rect, Point, identityMatrix, rotateMatrix, getDiagramElement, ThumbsConstraints, scaleMatrix, cornersPointsBeforeRotation, ImageElement } from '@syncfusion/ej2-drawings';\nimport { DrawingElement } from '@syncfusion/ej2-drawings';\nimport { PathElement } from '@syncfusion/ej2-drawings';\nimport { createMeasureElements } from '@syncfusion/ej2-drawings';\nimport { randomId } from '@syncfusion/ej2-drawings';\nimport { Size, transformPointByMatrix, RotateTransform, TextElement } from '@syncfusion/ej2-drawings';\nimport { Canvas, refreshDiagramElements, DrawingRenderer } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { SvgRenderer } from '@syncfusion/ej2-drawings';\nimport { isLineShapes, setElementStype, findPointsLength, getBaseShapeAttributes, isLeader, cloneObject } from './drawing-util';\nimport { getConnectorPoints, updateSegmentElement, getSegmentElement, updateDecoratorElement, getDecoratorElement, clipDecorators, initDistanceLabel, initLeaders, initLeader, getPolygonPath, initPerimeterLabel } from './connector-util';\nimport { isNullOrUndefined, isBlazor, Browser } from '@syncfusion/ej2-base';\nimport { DiagramHtmlElement } from './html-element';\n/**\n * Renderer module is used to render basic diagram elements\n *\n * @hidden\n */\nvar Drawing = /** @class */function () {\n  function Drawing(viewer) {\n    this.isDynamicStamps = false;\n    this.pdfViewer = viewer;\n    this.renderer = new DrawingRenderer('this.pdfViewer.element.id', false);\n    this.svgRenderer = new SvgRenderer();\n  }\n  /**\n   * @private\n   * @param {PdfViewer} viewer - Specified the pdfViewer element.\n   * @returns {void}\n   */\n  Drawing.prototype.renderLabels = function (viewer) {\n    var annotations = viewer.annotations;\n    if (annotations) {\n      for (var i = 0; i < annotations.length; i++) {\n        var annotation = annotations[parseInt(i.toString(), 10)];\n        this.initObject(annotation);\n      }\n    }\n  };\n  Drawing.prototype.createNewZindexTable = function (pageId) {\n    var zIndexTable = new ZOrderPageTable();\n    this.pdfViewer.zIndex++;\n    zIndexTable.pageId = this.pdfViewer.zIndex;\n    this.pdfViewer.zIndexTable.push(zIndexTable);\n    return zIndexTable;\n  };\n  /**\n   * @private\n   * @param {number} pageId - Specified the page Id.\n   * @returns {ZOrderPageTable} - Returns the ZOrder page table.\n   */\n  Drawing.prototype.getPageTable = function (pageId) {\n    var zIndexTable;\n    if (this.pdfViewer.zIndexTable.length !== undefined) {\n      var notFound = true;\n      for (var i = 0; i < this.pdfViewer.zIndexTable.length; i++) {\n        if (this.pdfViewer.zIndexTable[parseInt(i.toString(), 10)].pageId === pageId) {\n          notFound = false;\n          zIndexTable = this.pdfViewer.zIndexTable[parseInt(i.toString(), 10)];\n          break;\n        }\n      }\n      if (notFound) {\n        zIndexTable = this.createNewZindexTable(pageId);\n        zIndexTable.pageId = pageId;\n      }\n    } else {\n      zIndexTable = this.createNewZindexTable(pageId);\n    }\n    return zIndexTable;\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the page index value.\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {void}\n   */\n  Drawing.prototype.setZIndex = function (index, obj) {\n    if (obj.pageIndex !== undefined) {\n      var pageTable = this.getPageTable(obj.pageIndex);\n      if (obj.zIndex === -1) {\n        pageTable.zIndex++;\n        obj.zIndex = pageTable.zIndex;\n        pageTable.objects.push(obj);\n      } else {\n        var index_1 = obj.zIndex;\n        var tabelLength = pageTable.objects.length;\n        obj.zIndex = tabelLength++;\n        pageTable.objects.push(obj);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n   * @returns {PdfAnnotationBaseModel | PdfFormFieldBaseModel} - Returns the annotaion or form fields model.\n   */\n  Drawing.prototype.initObject = function (obj) {\n    //Move the common properties like zindex and id to an abstract class\n    this.setZIndex(this.pdfViewer.zIndex, obj);\n    createMeasureElements();\n    if (!isLineShapes(obj)) {\n      this.initNode(obj);\n    } else {\n      this.initLine(obj);\n      obj.wrapper.measure(new Size(undefined, undefined));\n      obj.wrapper.arrange(obj.wrapper.desiredSize);\n    }\n    if (obj.wrapper === null) {\n      //Init default wrapper\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.pdfViewer.nameTable[obj.id] = obj;\n    if (obj.formFieldAnnotationType) {\n      this.nodePropertyChange(obj, {\n        bounds: {\n          width: obj.bounds.width,\n          height: obj.bounds.height\n        }\n      });\n    }\n    //Add some methodologies to add the children of group to name table\n    return obj;\n  };\n  Drawing.prototype.initNode = function (obj) {\n    var canvas = this.initContainer(obj);\n    var content;\n    if (!canvas.children) {\n      canvas.children = [];\n    }\n    if (!content) {\n      content = this.init(obj, canvas);\n    }\n    //canvas.children.push(content);\n    canvas.rotateAngle = obj.rotateAngle;\n    // eslint-disable-next-line max-len\n    canvas.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n    canvas.arrange(canvas.desiredSize);\n    if (this.isDynamicStamps) {\n      this.pdfViewer.annotation.stampAnnotationModule.updateSessionStorage(obj, null, 'dynamicStamp');\n      this.isDynamicStamps = false;\n    }\n  };\n  /**\n   * Allows to initialize the UI of a node\n   */\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n   * @param {Container} canvas - Specified the canvas element.\n   * @returns {DrawingElement} - Returns the drawing element.\n   */\n  Drawing.prototype.init = function (obj, canvas) {\n    var content;\n    content = new DrawingElement();\n    var pathContent;\n    var basicElement;\n    var isStamp = false;\n    // eslint-disable-next-line\n    var annotationSettings = this.pdfViewer.annotationModule ? this.pdfViewer.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n    var isAnnotationSet = false;\n    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n      isAnnotationSet = true;\n    }\n    if (obj.formFieldAnnotationType) {\n      content = this.initFormFields(obj, content, canvas);\n    } else {\n      // eslint-disable-next-line max-len\n      content = this.initAnnotationObject(obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight);\n    }\n    content.id = obj.id + '_content';\n    content.relativeMode = 'Object';\n    if (obj.shapeAnnotationType !== 'Stamp') {\n      if (obj.bounds.width !== undefined) {\n        content.width = obj.bounds.width;\n        if (isAnnotationSet) {\n          if (content.width < annotationMinWidth || content.width > annotationMaxWidth) {\n            if (content.width < annotationMinWidth) {\n              content.width = annotationMinWidth;\n            }\n            if (content.width > annotationMaxWidth) {\n              content.width = annotationMaxWidth;\n            }\n          }\n        }\n      }\n      content.horizontalAlignment = 'Stretch';\n      if (obj.bounds.height !== undefined) {\n        content.height = obj.bounds.height;\n        if (isAnnotationSet) {\n          if (content.height < annotationMinHeight || content.width > annotationMaxHeight) {\n            if (content.height < annotationMinHeight) {\n              content.height = annotationMinHeight;\n            }\n            if (content.height > annotationMaxHeight) {\n              content.height = annotationMaxHeight;\n            }\n          }\n        }\n      }\n      setElementStype(obj, content);\n      if (this.pdfViewer.viewerBase.drawSignatureWithTool && obj.shapeAnnotationType === 'SignatureText') {\n        content.style.strokeWidth = 0;\n      }\n    }\n    content.isRectElement = true;\n    content.verticalAlignment = 'Stretch';\n    return content;\n  };\n  Drawing.prototype.initFormFields = function (obj, content, canvas) {\n    switch (obj.formFieldAnnotationType) {\n      case 'Textbox':\n      case 'PasswordField':\n      case 'Checkbox':\n      case 'RadioButton':\n      case 'DropdownList':\n      case 'ListBox':\n      case 'SignatureField':\n      case 'InitialField':\n        // eslint-disable-next-line\n        var htmlContent = new DiagramHtmlElement();\n        content = htmlContent;\n        content.id = obj.id + '_content';\n        canvas.children.push(content);\n        break;\n    }\n    return content;\n  };\n  // eslint-disable-next-line\n  Drawing.prototype.initAnnotationObject = function (obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight) {\n    switch (obj.shapeAnnotationType) {\n      case 'Ellipse':\n        pathContent = new PathElement();\n        pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' + 'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n        content = pathContent;\n        canvas.children.push(content);\n        if (obj.enableShapeLabel) {\n          var textLabel = this.textElement(obj);\n          textLabel.content = obj.labelContent;\n          textLabel.style.color = obj.fontColor;\n          textLabel.style.strokeColor = obj.labelBorderColor;\n          textLabel.style.fill = obj.labelFillColor;\n          textLabel.style.fontSize = obj.fontSize;\n          textLabel.style.fontFamily = obj.fontFamily;\n          textLabel.style.opacity = obj.labelOpacity;\n          canvas.children.push(textLabel);\n        }\n        break;\n      case 'Path':\n        pathContent = new PathElement();\n        pathContent.data = obj.data;\n        content = pathContent;\n        canvas.children.push(content);\n        break;\n      case 'HandWrittenSignature':\n      case 'Ink':\n        pathContent = new PathElement();\n        pathContent.data = obj.data;\n        pathContent.style.strokeColor = obj.strokeColor;\n        pathContent.style.strokeWidth = obj.thickness;\n        pathContent.style.opacity = obj.opacity;\n        content = pathContent;\n        canvas.children.push(content);\n        break;\n      case 'Polygon':\n        pathContent = new PathElement();\n        pathContent.data = getPolygonPath(obj.vertexPoints);\n        content = pathContent;\n        canvas.children.push(content);\n        break;\n      case 'Stamp':\n        isStamp = true;\n        this.isDynamicStamps = true;\n        if (obj && obj.annotationAddMode && (obj.annotationAddMode === 'Existing Annotation' || obj.annotationAddMode === 'Imported Annotation')) {\n          obj.bounds.width = obj.bounds.width - 20;\n          obj.bounds.height = obj.bounds.height - 20;\n        }\n        if (obj.isDynamicStamp) {\n          canvas.horizontalAlignment = 'Left';\n          basicElement = new DrawingElement();\n          content = basicElement;\n          content.cornerRadius = 10;\n          content.style.fill = obj.stampFillColor;\n          content.style.strokeColor = obj.stampStrokeColor;\n          canvas.children.push(content);\n          var textele_1 = this.textElement(obj);\n          textele_1 = new TextElement();\n          textele_1.style.fontFamily = 'Helvetica';\n          textele_1.style.fontSize = 14;\n          textele_1.style.italic = true;\n          textele_1.style.bold = true;\n          textele_1.style.color = obj.fillColor;\n          textele_1.rotateValue = undefined;\n          textele_1.content = obj.dynamicText;\n          textele_1.relativeMode = 'Point';\n          textele_1.margin.left = 10;\n          textele_1.margin.bottom = -7;\n          textele_1.setOffsetWithRespectToBounds(0, 0.57, null);\n          textele_1.relativeMode = 'Point';\n          canvas.children.push(textele_1);\n          // eslint-disable-next-line\n          var pathContent1 = new PathElement();\n          pathContent1.id = randomId() + '_stamp';\n          pathContent1.data = obj.data;\n          pathContent1.width = obj.bounds.width;\n          if (isAnnotationSet && obj.bounds.width > annotationMaxWidth) {\n            pathContent1.width = annotationMaxWidth;\n            obj.bounds.width = annotationMaxWidth;\n          }\n          pathContent1.height = obj.bounds.height / 2;\n          if (isAnnotationSet && obj.bounds.height > annotationMaxHeight) {\n            pathContent1.height = annotationMaxHeight / 2;\n            obj.bounds.height = annotationMaxHeight / 2;\n          }\n          pathContent1.rotateValue = undefined;\n          pathContent1.margin.left = 10;\n          pathContent1.margin.bottom = -5;\n          pathContent1.relativeMode = 'Point';\n          pathContent1.setOffsetWithRespectToBounds(0, 0.1, null);\n          // eslint-disable-next-line\n          var content1 = pathContent1;\n          pathContent1.style.fill = obj.fillColor;\n          pathContent1.style.strokeColor = obj.strokeColor;\n          pathContent1.style.opacity = obj.opacity;\n          content.width = obj.bounds.width + 20;\n          content.height = obj.bounds.height + 20;\n          content.style.opacity = obj.opacity;\n          canvas.children.push(content1);\n        } else {\n          canvas.horizontalAlignment = 'Left';\n          basicElement = new DrawingElement();\n          content = basicElement;\n          content.cornerRadius = 10;\n          content.style.fill = obj.stampFillColor;\n          content.style.strokeColor = obj.stampStrokeColor;\n          canvas.children.push(content);\n          // eslint-disable-next-line\n          var pathContent1 = new PathElement();\n          pathContent1.id = randomId() + '_stamp';\n          pathContent1.data = obj.data;\n          pathContent1.width = obj.bounds.width;\n          if (isAnnotationSet && obj.bounds.width > annotationMaxWidth) {\n            pathContent1.width = annotationMaxWidth;\n            obj.bounds.width = annotationMaxWidth;\n          }\n          pathContent1.height = obj.bounds.height;\n          if (isAnnotationSet && obj.bounds.height > annotationMaxHeight) {\n            pathContent1.height = annotationMaxHeight;\n            obj.bounds.height = annotationMaxHeight;\n          }\n          pathContent1.minWidth = pathContent1.width / 2;\n          pathContent1.minHeight = pathContent1.height / 2;\n          // eslint-disable-next-line\n          var content1 = pathContent1;\n          pathContent1.style.fill = obj.fillColor;\n          pathContent1.style.strokeColor = obj.strokeColor;\n          pathContent1.style.opacity = obj.opacity;\n          content.width = obj.bounds.width + 20;\n          content.height = obj.bounds.height + 20;\n          content.minWidth = pathContent1.width / 2;\n          content.minHeight = pathContent1.height / 2;\n          content.style.opacity = obj.opacity;\n          canvas.children.push(content1);\n          canvas.minHeight = content.minHeight + 20;\n          canvas.minWidth = content.minWidth + 20;\n        }\n        break;\n      case 'Image':\n      case 'SignatureImage':\n        // eslint-disable-next-line\n        var pathContent11 = new ImageElement();\n        pathContent11.source = obj.data;\n        content = pathContent11;\n        content.style.strokeWidth = 0;\n        canvas.children.push(content);\n        break;\n      case 'Rectangle':\n        basicElement = new DrawingElement();\n        content = basicElement;\n        canvas.children.push(content);\n        if (obj.enableShapeLabel) {\n          var textLabel = this.textElement(obj);\n          textLabel.content = obj.labelContent;\n          textLabel.style.color = obj.fontColor;\n          textLabel.style.strokeColor = obj.labelBorderColor;\n          textLabel.style.fill = obj.labelFillColor;\n          textLabel.style.fontSize = obj.fontSize;\n          textLabel.style.fontFamily = obj.fontFamily;\n          textLabel.style.opacity = obj.labelOpacity;\n          canvas.children.push(textLabel);\n        }\n        break;\n      case 'Perimeter':\n        pathContent = new PathElement();\n        pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' + 'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n        content = pathContent;\n        setElementStype(obj, pathContent);\n        canvas.children.push(content);\n        basicElement = new DrawingElement();\n        basicElement.id = 'perimeter_' + randomId();\n        basicElement.height = .2;\n        basicElement.width = .2;\n        basicElement.transform = RotateTransform.Self;\n        basicElement.horizontalAlignment = 'Stretch';\n        this.setNodePosition(basicElement, obj);\n        basicElement.rotateAngle = obj.rotateAngle;\n        setElementStype(obj, basicElement);\n        canvas.children.push(basicElement);\n        // eslint-disable-next-line\n        var textele = this.textElement(obj);\n        textele = new TextElement();\n        textele.content = textele.content = findPointsLength([{\n          x: obj.bounds.x,\n          y: obj.bounds.y\n        }, {\n          x: obj.bounds.x + obj.bounds.width,\n          y: obj.bounds.y + obj.bounds.height\n        }]).toString();\n        textele.rotateValue = {\n          y: -10,\n          angle: obj.rotateAngle\n        };\n        canvas.children.push(textele);\n        break;\n      case 'Radius':\n        pathContent = new PathElement();\n        pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' + 'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n        content = pathContent;\n        setElementStype(obj, pathContent);\n        canvas.children.push(content);\n        basicElement = new DrawingElement();\n        basicElement.id = 'radius_' + randomId();\n        basicElement.height = .2;\n        basicElement.width = obj.bounds.width / 2;\n        basicElement.transform = RotateTransform.Self;\n        this.setNodePosition(basicElement, obj);\n        basicElement.rotateAngle = obj.rotateAngle;\n        setElementStype(obj, basicElement);\n        canvas.children.push(basicElement);\n        // eslint-disable-next-line\n        var radiusTextEle = this.textElement(obj);\n        if (obj.enableShapeLabel) {\n          radiusTextEle.style.color = obj.fontColor;\n          radiusTextEle.style.strokeColor = obj.labelBorderColor;\n          radiusTextEle.style.fill = obj.labelFillColor;\n          radiusTextEle.style.fontSize = obj.fontSize;\n          radiusTextEle.style.fontFamily = obj.fontFamily;\n          radiusTextEle.style.opacity = obj.labelOpacity;\n        }\n        // eslint-disable-next-line\n        var length_1 = findPointsLength([{\n          x: obj.bounds.x,\n          y: obj.bounds.y\n        }, {\n          x: obj.bounds.x + obj.bounds.width,\n          y: obj.bounds.y + obj.bounds.height\n        }]);\n        if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n          radiusTextEle.content = obj.notes;\n        } else {\n          // eslint-disable-next-line max-len\n          radiusTextEle.content = this.pdfViewer.annotation.measureAnnotationModule.setConversion(obj.bounds.width / 2 * this.pdfViewer.annotation.measureAnnotationModule.pixelToPointFactor, obj);\n        }\n        radiusTextEle.rotateValue = {\n          y: -10,\n          x: obj.bounds.width / 4,\n          angle: obj.rotateAngle\n        };\n        canvas.children.push(radiusTextEle);\n        break;\n      case 'StickyNotes':\n        // eslint-disable-next-line\n        var pathContent2 = new ImageElement();\n        pathContent2.source = obj.data;\n        pathContent2.width = obj.bounds.width;\n        pathContent2.height = obj.bounds.height;\n        pathContent2.style.strokeColor = obj.strokeColor;\n        pathContent2.style.strokeWidth = 0;\n        content = pathContent2;\n        canvas.children.push(content);\n        break;\n      case 'SignatureText':\n        //eslint-disable-next-line\n        var rectElements = new DrawingElement();\n        rectElements.style.strokeWidth = 0;\n        content = rectElements;\n        content.style.strokeWidth = 0;\n        canvas.style.strokeWidth = 0;\n        canvas.children.push(content);\n        // eslint-disable-next-line\n        var signatureText = this.textElement(obj);\n        signatureText.style.fontFamily = obj.fontFamily;\n        signatureText.style.fontSize = obj.fontSize;\n        signatureText.style.textAlign = 'Left';\n        signatureText.rotateValue = undefined;\n        signatureText.content = obj.data;\n        signatureText.style.strokeWidth = 0;\n        canvas.children.push(signatureText);\n        break;\n      case 'FreeText':\n        // eslint-disable-next-line\n        var rectElement = new DrawingElement();\n        content = rectElement;\n        canvas.children.push(content);\n        // eslint-disable-next-line\n        var freeTextEle = this.textElement(obj);\n        freeTextEle = new TextElement();\n        freeTextEle.style.fontFamily = obj.fontFamily;\n        freeTextEle.style.fontSize = obj.fontSize;\n        freeTextEle.style.textAlign = 'Left';\n        if (obj.textAlign.toLowerCase() === 'center') {\n          freeTextEle.style.textAlign = 'Center';\n        } else if (obj.textAlign.toLowerCase() === 'right') {\n          freeTextEle.style.textAlign = 'Right';\n        } else if (obj.textAlign.toLowerCase() === 'justify') {\n          freeTextEle.style.textAlign = 'Justify';\n        }\n        freeTextEle.style.color = obj.fontColor;\n        freeTextEle.style.bold = obj.font.isBold;\n        freeTextEle.style.italic = obj.font.isItalic;\n        if (obj.font.isUnderline === true) {\n          freeTextEle.style.textDecoration = 'Underline';\n        } else if (obj.font.isStrikeout === true) {\n          freeTextEle.style.textDecoration = 'LineThrough';\n        }\n        freeTextEle.rotateValue = undefined;\n        freeTextEle.content = obj.dynamicText;\n        freeTextEle.style.opacity = obj.opacity;\n        freeTextEle.margin.left = 4;\n        freeTextEle.margin.right = 5;\n        freeTextEle.margin.top = 5 * (obj.fontSize / 16);\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n          freeTextEle.style.textWrapping = 'Wrap';\n        } else {\n          freeTextEle.style.textWrapping = 'WrapWithOverflow';\n        }\n        freeTextEle.relativeMode = 'Point';\n        freeTextEle.setOffsetWithRespectToBounds(0, 0, null);\n        freeTextEle.relativeMode = 'Point';\n        canvas.children.push(freeTextEle);\n        break;\n    }\n    content.id = obj.id + '_content';\n    content.relativeMode = 'Object';\n    if (!isStamp) {\n      if (obj.bounds.width !== undefined) {\n        content.width = obj.bounds.width;\n        if (isAnnotationSet) {\n          if (content.width < annotationMinWidth || content.width > annotationMaxWidth) {\n            if (content.width < annotationMinWidth) {\n              content.width = annotationMinWidth;\n            }\n            if (content.width > annotationMaxWidth) {\n              content.width = annotationMaxWidth;\n            }\n          }\n        }\n      }\n      content.horizontalAlignment = 'Stretch';\n      if (obj.bounds.height !== undefined) {\n        content.height = obj.bounds.height;\n        if (isAnnotationSet) {\n          if (content.height < annotationMinHeight || content.width > annotationMaxHeight) {\n            if (content.height < annotationMinHeight) {\n              content.height = annotationMinHeight;\n            }\n            if (content.height > annotationMaxHeight) {\n              content.height = annotationMaxHeight;\n            }\n          }\n        }\n      }\n      setElementStype(obj, content);\n    }\n    content.isRectElement = true;\n    content.verticalAlignment = 'Stretch';\n    return content;\n  };\n  Drawing.prototype.textElement = function (obj) {\n    var textele = new TextElement();\n    setElementStype(obj, textele);\n    textele.horizontalAlignment = 'Center';\n    obj.shapeAnnotationType === 'SignatureText' ? textele.verticalAlignment = 'Center' : textele.verticalAlignment = 'Top';\n    textele.relativeMode = 'Object';\n    textele.setOffsetWithRespectToBounds(.5, .5, 'Absolute');\n    return textele;\n  };\n  /**\n   * @private\n   * @param {DrawingElement} obj - Specified the drawing element.\n   * @param {PdfAnnotationBaseModel} node - Specified the node element.\n   * @returns {void}\n   */\n  Drawing.prototype.setNodePosition = function (obj, node) {\n    if (node.shapeAnnotationType === 'Perimeter') {\n      obj.offsetX = node.bounds.x + node.bounds.width / 2;\n      obj.offsetY = node.bounds.y + node.bounds.height / 2;\n    } else if (node.shapeAnnotationType === 'Radius') {\n      // eslint-disable-next-line max-len\n      var trasPoint = {\n        x: node.bounds.x + node.bounds.width / 2 + node.bounds.width / 4,\n        y: node.bounds.y + node.bounds.height / 2\n      };\n      var center = {\n        x: node.bounds.x + node.bounds.width / 2,\n        y: node.bounds.y + node.bounds.height / 2\n      };\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n      var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n      var newPoint1 = {\n        x: rotatedPoint.x,\n        y: rotatedPoint.y\n      };\n      obj.offsetX = newPoint1.x;\n      obj.offsetY = newPoint1.y;\n      obj.width = node.bounds.width / 2;\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {Container} - Returns the container element.\n   */\n  Drawing.prototype.initContainer = function (obj) {\n    if (!obj.id) {\n      obj.id = randomId();\n    }\n    // Creates canvas element\n    var canvas = new Canvas();\n    canvas.id = obj.id;\n    canvas.offsetX = obj.bounds.x + obj.bounds.width * 0.5;\n    canvas.offsetY = obj.bounds.y + obj.bounds.height * 0.5;\n    canvas.style.fill = 'transparent';\n    canvas.style.strokeColor = 'transparent';\n    canvas.rotateAngle = obj.rotateAngle;\n    obj.wrapper = canvas;\n    return canvas;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {Canvas} - Returns the canvas element.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Drawing.prototype.initLine = function (obj) {\n    if (!obj.id) {\n      obj.id = randomId();\n    }\n    var bpmnElement;\n    var container = new Canvas();\n    var segment = new PathElement();\n    segment.id = obj.id + '_path';\n    var srcDecorator = new PathElement();\n    var targetDecorator = new PathElement();\n    if (obj.vertexPoints.length) {\n      obj.sourcePoint = obj.vertexPoints[0];\n      obj.targetPoint = obj.vertexPoints[obj.vertexPoints.length - 1];\n      for (var i = 0; i < obj.vertexPoints.length; i++) {\n        if (i !== 0 && i !== obj.vertexPoints.length - 1) {\n          obj.segments.push(obj.vertexPoints[parseInt(i.toString(), 10)]);\n        }\n      }\n    }\n    segment = getSegmentElement(obj, segment);\n    var points = [];\n    points = getConnectorPoints(obj);\n    //  points = this.clipDecorators(this, points);\n    var leaders = [];\n    var labels = [];\n    if (obj.shapeAnnotationType === 'Distance') {\n      leaders = initLeaders(obj, points);\n      labels = initDistanceLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n    }\n    if ((obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead') && obj.measureType === 'Perimeter') {\n      labels = initPerimeterLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n    }\n    if (obj.enableShapeLabel === true && !(obj.shapeAnnotationType === 'Distance') && !(obj.measureType === 'Perimeter')) {\n      var angle = Point.findAngle(points[0], points[1]);\n      var textele = this.textElement(obj);\n      textele.id = randomId();\n      if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n        textele.content = obj.notes;\n      } else {\n        textele.content = obj.labelContent;\n      }\n      textele.style.strokeColor = obj.labelBorderColor;\n      textele.style.fill = obj.labelFillColor;\n      textele.style.fontSize = obj.fontSize;\n      textele.style.color = obj.fontColor;\n      textele.style.fontFamily = obj.fontFamily;\n      textele.style.opacity = obj.labelOpacity;\n      textele.rotateValue = {\n        y: -10,\n        angle: angle\n      };\n      labels.push(textele);\n    }\n    points = clipDecorators(obj, points);\n    var bounds = Rect.toBounds(points);\n    container.width = bounds.width;\n    container.height = bounds.height;\n    container.offsetX = bounds.x + container.pivot.x * bounds.width;\n    container.offsetY = bounds.y + container.pivot.y * bounds.height;\n    var anglePoints = obj.vertexPoints;\n    var accessContent = 'getDescription';\n    // eslint-disable-next-line max-len\n    if (obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead' || obj.shapeAnnotationType === 'Distance') {\n      srcDecorator = getDecoratorElement(obj, points[0], anglePoints[1], true);\n      targetDecorator = getDecoratorElement(obj, points[points.length - 1], anglePoints[anglePoints.length - 2], false);\n    }\n    srcDecorator.id = obj.id + '_srcDec';\n    targetDecorator.id = obj.id + '_tarDec';\n    /* eslint-disable @typescript-eslint/dot-notation */\n    segment.style['fill'] = 'transparent';\n    container.style.strokeColor = 'transparent';\n    container.style.fill = 'transparent';\n    container.style.strokeWidth = 0;\n    container.children = [];\n    setElementStype(obj, segment);\n    container.children.push(segment);\n    if (leaders.length > 0) {\n      for (var i = 0; i < leaders.length; i++) {\n        container.children.push(leaders[parseInt(i.toString(), 10)]);\n      }\n    }\n    if (labels.length > 0) {\n      for (var i = 0; i < labels.length; i++) {\n        container.children.push(labels[parseInt(i.toString(), 10)]);\n      }\n    }\n    container.children.push(srcDecorator);\n    container.children.push(targetDecorator);\n    if (obj.shapeAnnotationType === 'LineWidthArrowHead') {\n      container.children[1].width = 12 * obj.thickness;\n      container.children[1].height = 12 * obj.thickness;\n      container.children[2].width = 12 * obj.thickness;\n      container.children[2].height = 12 * obj.thickness;\n    }\n    container.id = obj.id;\n    container.offsetX = segment.offsetX;\n    container.offsetY = segment.offsetY;\n    container.width = segment.width;\n    container.height = segment.height;\n    points = getConnectorPoints(obj);\n    obj.wrapper = container;\n    return container;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {PdfAnnotationBaseModel} - Returns the added annotaion object.\n   */\n  Drawing.prototype.add = function (obj) {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n    if (obj.formFieldAnnotationType && this.pdfViewer.formDesignerModule) {\n      obj = new PdfFormFieldBase(this.pdfViewer, 'formFields', obj, true);\n      obj = this.initObject(obj);\n      this.pdfViewer.formFields.push(obj);\n    } else {\n      obj = new PdfAnnotationBase(this.pdfViewer, 'annotations', obj, true);\n      obj = this.initObject(obj);\n      this.pdfViewer.annotations.push(obj);\n    }\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    return obj;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {void}\n   */\n  Drawing.prototype.remove = function (obj) {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n    var index = obj.pageIndex;\n    for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n      var annotation = this.pdfViewer.annotations[parseInt(i.toString(), 10)];\n      if (annotation.id && (annotation.id === obj.id || annotation.id.split('_')[0] === obj.id) || annotation.wrapper && annotation.wrapper.id === obj.id) {\n        this.pdfViewer.annotations.splice(i, 1);\n        var objects = this.getPageObjects(obj.pageIndex);\n        for (var j = 0; j < objects.length; j++) {\n          if (objects[parseInt(j.toString(), 10)].id === obj.id) {\n            objects.splice(j, 1);\n            if (obj.shapeAnnotationType === 'Path' || obj.shapeAnnotationType === 'SignatureImage' || obj.shapeAnnotationType === 'SignatureText') {\n              this.refreshCanvasDiagramLayer(undefined, index, obj.id);\n            } else {\n              this.pdfViewer.renderDrawing(undefined, index);\n            }\n          }\n        }\n        // need to add code snippet to remove from z index table   \n      }\n    }\n    for (var i = 0; i < this.pdfViewer.formFields.length; i++) {\n      var element = this.pdfViewer.formFields[parseInt(i.toString(), 10)];\n      if (element.id === obj.id || element.wrapper.id === obj.id) {\n        this.pdfViewer.formFields.splice(i, 1);\n        if (this.pdfViewer.formDesignerModule && obj.formFieldAnnotationType) {\n          this.pdfViewer.formFieldCollection.splice(i, 1);\n        }\n        var objects = this.getPageObjects(obj.pageIndex);\n        for (var j = 0; j < objects.length; j++) {\n          if (objects[parseInt(j.toString(), 10)].id === obj.id) {\n            objects.splice(j, 1);\n            break;\n          }\n          if (objects[parseInt(j.toString(), 10)] && objects[parseInt(j.toString(), 10)].id && objects[parseInt(j.toString(), 10)].id.indexOf(obj.id) !== -1) {\n            objects.splice(j, 1);\n          }\n        }\n      }\n    }\n    if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton' || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n      for (var i = 0; i < this.pdfViewer.formFieldCollections.length; i++) {\n        // eslint-disable-next-line\n        var element = this.pdfViewer.formFieldCollections[i];\n        if (element.id === obj.id) {\n          this.pdfViewer.formFieldCollections.splice(i, 1);\n        }\n      }\n    }\n    if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton' || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n      // eslint-disable-next-line\n      var inputField = document.getElementById('form_field_' + obj.id + '_content_html_element');\n      if (inputField) {\n        inputField.remove();\n        this.pdfViewer.renderDrawing(undefined, index);\n        var field = {\n          // eslint-disable-next-line\n          name: obj.name,\n          id: obj.id,\n          value: obj.value,\n          fontFamily: obj.fontFamily,\n          fontSize: obj.fontSize,\n          fontStyle: obj.fontStyle,\n          // eslint-disable-next-line\n          color: obj.color,\n          backgroundColor: obj.backgroundColor,\n          alignment: obj.alignment,\n          isReadonly: obj.isReadonly,\n          visibility: obj.visibility,\n          // eslint-disable-next-line\n          maxLength: obj.maxLength,\n          isRequired: obj.isRequired,\n          isPrint: obj.isPrint,\n          rotation: obj.rotateAngle,\n          tooltip: obj.tooltip,\n          // eslint-disable-next-line\n          options: obj.options,\n          isChecked: obj.isChecked,\n          isSelected: obj.isSelected\n        };\n        this.pdfViewer.fireFormFieldRemoveEvent('formFieldRemove', field, obj.pageIndex);\n        this.pdfViewer.formDesignerModule.removeFieldsFromAnnotationCollections(obj.id);\n      }\n    }\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n  };\n  /**\n   * @private\n   * @param {number} pageIndex - Specified the page index.\n   * @returns {PdfAnnotationBaseModel[]} - Returns the annotation base model collections.\n   */\n  Drawing.prototype.getPageObjects = function (pageIndex) {\n    var pageTable = this.getPageTable(pageIndex);\n    return pageTable.objects;\n  };\n  /**\n   * @private\n   * @param {HTMLCanvasElement} diagramLayer - Specified the diagram layer element.\n   * @param {number} pageIndex - Specified the page index.\n   * @param {string} objectId - Specified the object id.\n   * @returns {void}\n   */\n  Drawing.prototype.refreshCanvasDiagramLayer = function (diagramLayer, pageIndex, objectId) {\n    if (!diagramLayer) {\n      diagramLayer = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n    }\n    if (diagramLayer) {\n      var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n      var width = diagramLayer.width / zoom;\n      var height = diagramLayer.height / zoom;\n      var ctx = diagramLayer.getContext('2d');\n      ctx.lineCap = \"round\";\n      ctx.lineJoin = \"round\";\n      if (zoom < 1) {\n        ctx.lineWidth = ctx.lineWidth / zoom;\n      }\n      var devicePixelRatio_1 = this.pdfViewer.viewerBase.getWindowDevicePixelRatio();\n      var zoomRatio = zoom * devicePixelRatio_1;\n      if (!Browser.isDevice || Browser.isDevice && zoom <= 0.7) {\n        ctx.setTransform(zoomRatio, 0, 0, zoomRatio, 0, 0);\n      } else {\n        ctx.setTransform(zoom, 0, 0, zoom, 0, 0);\n      }\n      ctx.clearRect(0, 0, width, height);\n      var objects = this.getPageObjects(pageIndex);\n      for (var i = 0; i < objects.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var renderElement = void 0;\n        if (diagramLayer.id === this.pdfViewer.element.id + '_print_annotation_layer_' + pageIndex) {\n          if (objects[parseInt(i.toString(), 10)].isPrint) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            renderElement = this.pdfViewer.nameTable[objects[parseInt(i.toString(), 10)].id].wrapper;\n            if (!isNullOrUndefined(renderElement)) {\n              refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n            }\n          }\n        } else {\n          // eslint-disable-next-line\n          renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n          refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the page index.\n   * @returns {void}\n   */\n  Drawing.prototype.clearHighlighter = function (index) {\n    var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id + index + '_diagramAdornerLayer', index);\n    if (adornerSvg) {\n      var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n      if (highlighter) {\n        highlighter.parentNode.removeChild(highlighter);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {string} diagramId - Specified the diagram id.\n   * @param {number} index - Specified the page index.\n   * @returns {SVGSVGElement} Return the svg element.\n   */\n  Drawing.prototype.getSelectorElement = function (diagramId, index) {\n    var adornerLayer = null;\n    var adornerSvg = this.getAdornerLayerSvg(diagramId, index);\n    if (adornerSvg) {\n      adornerLayer = adornerSvg.getElementById(diagramId + index + '_SelectorElement');\n    }\n    return adornerLayer;\n  };\n  /**\n   * @private\n   * @param {string} diagramId - Specified the diagram id.\n   * @param {number} index - Specified the page index.\n   * @returns {SVGSVGElement} Return the svg element.\n   */\n  Drawing.prototype.getAdornerLayerSvg = function (diagramId, index) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n    // eslint-disable-next-line\n    var elementcoll;\n    if (diagramElement) {\n      elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n      adornerLayerSvg = elementcoll[0];\n    }\n    return adornerLayerSvg;\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the page index.\n   * @returns {void}\n   */\n  Drawing.prototype.clearSelectorLayer = function (index) {\n    var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id, index);\n    if (adornerSvg) {\n      var selectionRect = adornerSvg.getElementById(this.pdfViewer.adornerSvgLayer.id + '_selected_region');\n      if (selectionRect) {\n        selectionRect.parentNode.removeChild(selectionRect);\n      }\n      this.clearHighlighter(index);\n      var childNodes = this.getSelectorElement(this.pdfViewer.element.id, index).childNodes;\n      var child = void 0;\n      for (var i = childNodes.length; i > 0; i--) {\n        child = childNodes[i - 1];\n        child.parentNode.removeChild(child);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} select - Specified the select value.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector element.\n   * @param {PdfAnnotationBaseModel} helper - Specified the annotation helper element.\n   * @param {boolean} isSelect - Specified the is select or not.\n   * @returns {void}\n   */\n  // eslint-disable-next-line max-len\n  Drawing.prototype.renderSelector = function (select, currentSelector, helper, isSelect) {\n    if (!helper || isSelect) {\n      var size = new Size();\n      var selectorModel = this.pdfViewer.selectedItems;\n      this.clearSelectorLayer(select);\n      if (selectorModel.wrapper) {\n        selectorModel.wrapper.measure(size);\n        var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n        selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n        selectorModel.width = selectorModel.wrapper.actualSize.width;\n        selectorModel.height = selectorModel.wrapper.actualSize.height;\n        selectorModel.offsetX = selectorModel.wrapper.offsetX;\n        selectorModel.offsetY = selectorModel.wrapper.offsetY;\n        if (selectorModel.annotations.length === 1) {\n          selectorModel.rotateAngle = selectorModel.annotations[0].rotateAngle;\n          selectorModel.wrapper.rotateAngle = selectorModel.annotations[0].rotateAngle;\n          //selectorModel.pivot = selectorModel.annotations[0].pivot;\n        }\n        var bounds = selectorModel.wrapper.bounds;\n        // eslint-disable-next-line\n        var selectorElement = void 0;\n        if (selectorModel.formFields.length) {\n          for (var i = 0; i < selectorModel.formFields.length; i++) {\n            var node = selectorModel.formFields[parseInt(i.toString(), 10)];\n            selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n            if (selectorElement && node.pageIndex === select && this.pdfViewer.designerMode) {\n              this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n            }\n            if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n              // eslint-disable-next-line max-len\n              if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                var field = {\n                  // eslint-disable-next-line\n                  name: node.name,\n                  id: node.id,\n                  value: node.value,\n                  fontFamily: node.fontFamily,\n                  fontSize: node.fontSize,\n                  fontStyle: node.fontStyle,\n                  color: node.color,\n                  backgroundColor: node.backgroundColor,\n                  alignment: node.alignment,\n                  isReadonly: node.isReadonly,\n                  visibility: node.visibility,\n                  // eslint-disable-next-line\n                  maxLength: node.maxLength,\n                  isRequired: node.isRequired,\n                  isPrint: node.isPrint,\n                  rotation: node.rotateAngle,\n                  tooltip: node.tooltip,\n                  // eslint-disable-next-line\n                  options: node.options,\n                  isChecked: node.isChecked,\n                  isSelected: node.isSelected\n                };\n                this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n              }\n            }\n          }\n        }\n        if (selectorModel.annotations.length) {\n          for (var j = 0; j < selectorModel.annotations.length; j++) {\n            var node = selectorModel.annotations[parseInt(j.toString(), 10)];\n            selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n            var constraints = true;\n            if (selectorElement && node.pageIndex === select) {\n              if (node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'Line' || node.shapeAnnotationType === 'LineWidthArrowHead' || node.shapeAnnotationType === 'Polygon') {\n                this.renderEndPointHandle(node, selectorElement, selectorModel.thumbsConstraints, {\n                  scale: zoom,\n                  tx: 0,\n                  ty: 0\n                }, undefined, undefined, true, currentSelector);\n              } else {\n                if (node.shapeAnnotationType === 'StickyNotes') {\n                  this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                } else {\n                  if (this.pdfViewer.tool !== 'Stamp') {\n                    // eslint-disable-next-line\n                    var isSignature = node.shapeAnnotationType === 'Path' || node.formFieldAnnotationType === 'SignatureField' || node.formFieldAnnotationType === 'InitialField';\n                    this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, node.shapeAnnotationType === 'Stamp', false, isSignature, node.shapeAnnotationType === 'FreeText' || node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureImage' || node.shapeAnnotationType === 'Image' || node.shapeAnnotationType === 'SignatureText', currentSelector);\n                  }\n                }\n              }\n              if (!this.pdfViewer.viewerBase.isNewSignatureAdded && (node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureText' || node.shapeAnnotationType === 'SignatureImage')) {\n                this.pdfViewer.annotationModule.selectSignature(node.signatureName, node.pageIndex, node);\n              }\n              if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                // eslint-disable-next-line max-len\n                if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                  this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                  var field = {\n                    // eslint-disable-next-line\n                    value: node.value,\n                    fontFamily: node.fontFamily,\n                    fontSize: node.fontSize,\n                    fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color,\n                    backgroundColor: node.backgroundColor,\n                    alignment: node.alignment,\n                    isReadonly: node.isReadonly,\n                    visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength,\n                    isRequired: node.isRequired,\n                    isPrint: node.isPrint,\n                    rotation: node.rotateAngle,\n                    tooltip: node.tooltip,\n                    // eslint-disable-next-line\n                    options: node.options,\n                    isChecked: node.isChecked,\n                    isSelected: node.isSelected\n                  };\n                  this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                }\n              }\n              if (node.annotName !== '' && node.annotName !== 'SignatureText') {\n                if (helper && node === helper && !node.formFieldAnnotationType) {\n                  // eslint-disable-next-line max-len\n                  if (!this.pdfViewer.viewerBase.isAddComment && !this.pdfViewer.viewerBase.isAnnotationSelect && !this.pdfViewer.viewerBase.isAnnotationMouseDown && !this.pdfViewer.viewerBase.isAnnotationMouseMove && !this.pdfViewer.viewerBase.isInkAdded && !this.pdfViewer.viewerBase.isNewStamp) {\n                    this.pdfViewer.viewerBase.isAnnotationSelect = true;\n                    this.pdfViewer.annotationModule.annotationSelect(node.annotName, node.pageIndex, node);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Rotates the given nodes/connectors by the given angle\n   *\n   * @private\n   * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the objects to be rotated.\n   * @param {number} angle - Specified the angle by which the objects have to be rotated.\n   * @param {PointModel} pivot - Specified the reference point with reference to which the objects have to be rotated.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n   * @returns {void}\n   */\n  // eslint-disable-next-line max-len\n  Drawing.prototype.rotate = function (obj, angle, pivot, currentSelector) {\n    var checkBoundaryConstraints;\n    if (obj) {\n      pivot = pivot || {\n        x: obj.wrapper.offsetX,\n        y: obj.wrapper.offsetY\n      };\n      if (obj instanceof Selector) {\n        obj.rotateAngle += angle;\n        obj.wrapper.rotateAngle += angle;\n        var objects = [];\n        objects = objects.concat(obj.annotations);\n        this.rotateObjects(obj, objects, angle, pivot, null, currentSelector);\n      } else {\n        this.rotateObjects(obj, [obj], angle, pivot);\n      }\n    }\n    return checkBoundaryConstraints;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | SelectorModel} parent - Specified the annotation object.\n   * @param {PdfAnnotationBaseModel[]} objects - Specified the annotation objects.\n   * @param {number} angle - Specified the annotation angle.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @param {boolean} includeParent - Specified the include parent value.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n   * @returns {void}\n   */\n  Drawing.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent, currentSelector) {\n    pivot = pivot || {};\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, pivot.x, pivot.y);\n    for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n      var obj = objects_1[_i];\n      if (obj instanceof PdfAnnotationBase) {\n        if (includeParent !== false || parent !== obj) {\n          obj.rotateAngle += angle;\n          obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n          var newOffset = transformPointByMatrix(matrix, {\n            x: obj.wrapper.offsetX,\n            y: obj.wrapper.offsetY\n          });\n          obj.wrapper.offsetX = newOffset.x;\n          obj.wrapper.offsetY = newOffset.y;\n          this.nodePropertyChange(obj, {\n            rotateAngle: obj.rotateAngle\n          });\n        }\n        this.renderSelector(obj.pageIndex, currentSelector);\n      }\n    }\n  };\n  Drawing.prototype.getParentSvg = function (element, targetElement, canvas) {\n    if (element && element.id) {\n      if (targetElement && targetElement === 'selector') {\n        return this.pdfViewer.adornerSvgLayer;\n      }\n    }\n    return canvas;\n  };\n  Drawing.prototype.shownBorder = function () {\n    var isSelectInAllowed = false;\n    if (this.pdfViewer.annotationModule) {\n      var annotation = this.pdfViewer.selectedItems.annotations[0];\n      var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n      var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n      isSelectInAllowed = !isNullOrUndefined(allowedInteraction) && (allowedInteraction.includes('Select') || !isLock);\n    }\n    return isSelectInAllowed;\n  };\n  /**\n   * @private\n   * @param {DrawingElement} selector - Specified the annotation selector object.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {Transforms} transform - Specfied the transform value.\n   * @param {number} enableNode - Specified the node number.\n   * @param {boolean} isBorderTickness - Specified is thickness or not.\n   * @param {boolean} isSwimlane - Specified is swimlane annotation or not.\n   * @param {boolean} isSticky - Specified is sticky annotation or not.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.renderBorder = function (selector, canvas, currentSelector, transform, enableNode, isBorderTickness, isSwimlane, isSticky) {\n    var wrapper = selector;\n    var options = getBaseShapeAttributes(wrapper, transform);\n    transform = transform || {\n      scale: 1,\n      tx: 0,\n      ty: 0\n    };\n    if (!isSticky) {\n      options.x *= transform.scale;\n      options.y *= transform.scale;\n      options.width *= transform.scale;\n      options.height *= transform.scale;\n      options.fill = 'transparent';\n      // eslint-disable-next-line max-len\n      var shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        // eslint-disable-next-line\n        var annotationSelector = JSON.parse(currentSelector);\n        var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n        // eslint-disable-next-line max-len\n        var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n        if (lineDash.length > 2) {\n          lineDash = [lineDash[0], lineDash[1]];\n        }\n        options.dashArray = lineDash.toString();\n      } else {\n        if (!this.pdfViewer.designerMode) {\n          if (shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText' || shapeType === 'SignatureImage' || shapeType === 'Ink') {\n            // eslint-disable-next-line\n            var formField = this.pdfViewer.nameTable[selector.id.split('_')[0]];\n            var isFormFieldSign = this.pdfViewer.viewerBase.checkSignatureFormField(selector.id);\n            // if (isFormFieldSign && options.width + 21 !== formField.bounds.width && options.height + 21 !== formField.bounds.height) {\n            //     if (this.pdfViewer.signatureFitMode === 'Default') {\n            //         let selectorBounds: any = this.pdfViewer.formFieldsModule.getDefaultBoundsforSign(formField.bounds);\n            //         options.x = selectorBounds.x; options.y = selectorBounds.y; options.width = selectorBounds.width; options.height = selectorBounds.height;\n            //     } else {\n            //         options.x = formField.bounds.x; options.y = formField.bounds.y; options.width = formField.bounds.width; options.height = formField.bounds.height;\n            //     }\n            // }\n            this.getSignBorder(shapeType, options, isFormFieldSign);\n          } else {\n            this.getBorderSelector(shapeType, options);\n          }\n        }\n      }\n      options.class = 'e-pv-diagram-border';\n      if (isSwimlane) {\n        options.class += ' e-diagram-lane';\n      }\n      options.id = 'borderRect';\n      options.id = 'borderRect';\n      if (!enableNode) {\n        options.class += ' e-disabled';\n      }\n      if (isBorderTickness) {\n        options.class += ' e-thick-border';\n      }\n      options.cornerRadius = 0;\n    } else {\n      options.x *= transform.scale;\n      options.y *= transform.scale;\n      options.width *= transform.scale;\n      options.height *= transform.scale;\n      // eslint-disable-next-line max-len\n      var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        var annotationSelector = JSON.parse(currentSelector);\n        var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n        // eslint-disable-next-line max-len\n        var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n        if (lineDash.length > 2) {\n          lineDash = [lineDash[0], lineDash[1]];\n        }\n        options.dashArray = lineDash.toString();\n      } else {\n        this.getBorderSelector(shapeType, options);\n      }\n    }\n    var checkBorder = this.shownBorder();\n    if (checkBorder) {\n      var parentSvg = this.getParentSvg(selector, 'selector');\n      // eslint-disable-next-line max-len\n      this.svgRenderer.drawRectangle(canvas, options, this.pdfViewer.element.id, undefined, true, parentSvg);\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n   * @param {BaseAttributes} options - Specified the options value.\n   * @param {boolean} isFormFieldSign - Specified is form field sign or not.\n   * @returns {void}\n   */\n  Drawing.prototype.getSignBorder = function (type, options, isFormFieldSign) {\n    if (!isFormFieldSign && (type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n      var borderColor = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash.length > 2) {\n        lineDash = [lineDash[0], lineDash[1]];\n      }\n      options.dashArray = lineDash.toString();\n    } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n      var borderColor = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash.length > 2) {\n        lineDash = [lineDash[0], lineDash[1]];\n      }\n      options.dashArray = lineDash.toString();\n    } else {\n      var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n      var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n      options.stroke = borderColor;\n      options.strokeWidth = annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n      // eslint-disable-next-line max-len\n      var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n      if (lineDash.length > 2) {\n        lineDash = [lineDash[0], lineDash[1]];\n      }\n      options.dashArray = lineDash.toString();\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n   * @param {BaseAttributes} options - Specified the base attributes.\n   * @returns {void}\n   */\n  Drawing.prototype.getBorderSelector = function (type, options) {\n    var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n    var borderColor = isNullOrUndefined(annotationSelector.selectionBorderColor) || annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n    options.stroke = borderColor;\n    // eslint-disable-next-line max-len\n    options.strokeWidth = isNullOrUndefined(annotationSelector.selectionBorderThickness) || annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n    // eslint-disable-next-line max-len\n    var lineDash = isNullOrUndefined(annotationSelector.selectorLineDashArray) || annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n    if (lineDash.length > 2) {\n      lineDash = [lineDash[0], lineDash[1]];\n    }\n    options.dashArray = lineDash.toString();\n    if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n      var borderColor_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_1;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash_1.length > 2) {\n        lineDash_1 = [lineDash_1[0], lineDash_1[1]];\n      }\n      options.dashArray = lineDash_1.toString();\n    } else if ((type === 'Textbox' || type === 'Checkbox' || type === 'RadioButton' || type === 'SignatureField' || type === 'InitialField' || type === 'DropdownList' || type === 'ListBox' || type === 'PasswordField') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n      var borderColor_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_2;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash_2.length > 2) {\n        lineDash_2 = [lineDash_2[0], lineDash_2[1]];\n      }\n      options.dashArray = lineDash_2.toString();\n    } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n      var borderColor_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_3;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash_3.length > 2) {\n        lineDash_3 = [lineDash_3[0], lineDash_3[1]];\n      }\n      options.dashArray = lineDash_3.toString();\n    } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n      var borderColor_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_4;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash_4.length > 2) {\n        lineDash_4 = [lineDash_4[0], lineDash_4[1]];\n      }\n      options.dashArray = lineDash_4.toString();\n    } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n      var borderColor_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_5;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash_5.length > 2) {\n        lineDash_5 = [lineDash_5[0], lineDash_5[1]];\n      }\n      options.dashArray = lineDash_5.toString();\n    } else if (type === 'StickyNotes' && this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) {\n      var borderColor_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_6;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [6, 3] : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash_6.length > 2) {\n        lineDash_6 = [lineDash_6[0], lineDash_6[1]];\n      }\n      options.dashArray = lineDash_6.toString();\n    } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n      var borderColor_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_7;\n      // eslint-disable-next-line max-len\n      var thickness = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness;\n      // eslint-disable-next-line max-len\n      var lineDash_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray;\n      if (lineDash_7.length > 2) {\n        lineDash_7 = [lineDash_7[0], lineDash_7[1]];\n      }\n      options.dashArray = lineDash_7.toString();\n    }\n  };\n  /**\n   * @private\n   * @param {string} id - Specified the annotaion id.\n   * @param {DrawingElement} selector - Specified the drawing element.\n   * @param {number} cx - Specified the cx number.\n   * @param {number} cy - Specified the cy number.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the html canvas element.\n   * @param {boolean} visible - Specified the annotation visible or not.\n   * @param {number} enableSelector - Specified the enable selector value.\n   * @param {Transforms} t - Specified the transforms value.\n   * @param {boolean} connected - Specified is connected or not.\n   * @param {boolean} canMask - Specified is mask or not.\n   * @param {Object} ariaLabel - Specified the aria label object.\n   * @param {number} count - Specified the count value.\n   * @param {string} className - Specified the class name.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector settings.\n   * @returns {void}\n   */\n  Drawing.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className, currentSelector) {\n    var wrapper = selector;\n    var radius = 7;\n    var newPoint = {\n      x: cx,\n      y: cy\n    };\n    t = t || {\n      scale: 1,\n      tx: 0,\n      ty: 0\n    };\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n      newPoint = transformPointByMatrix(matrix, newPoint);\n    }\n    var options = getBaseShapeAttributes(wrapper);\n    var shapeType;\n    if (this.pdfViewer.selectedItems.annotations.length > 0 && this.pdfViewer.selectedItems.annotations[0].measureType) {\n      shapeType = this.pdfViewer.selectedItems.annotations[0].measureType;\n    } else if (this.pdfViewer.selectedItems.formFields.length > 0) {\n      shapeType = this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n    } else {\n      shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n    }\n    this.getResizerColors(shapeType, options, currentSelector, t);\n    this.getShapeSize(shapeType, options, currentSelector, t);\n    options.strokeWidth = 1;\n    if (count !== undefined) {\n      radius = 5;\n      options.id = 'segmentEnd_' + count;\n    }\n    options.centerX = (newPoint.x + t.tx) * t.scale;\n    options.centerY = (newPoint.y + t.ty) * t.scale;\n    options.angle = 0;\n    options.id = id;\n    options.visible = visible;\n    options.class = className;\n    options.opacity = 1;\n    if (connected) {\n      options.class += ' e-connected';\n    }\n    if (canMask) {\n      options.visible = false;\n    }\n    options.x = newPoint.x * t.scale - options.width / 2;\n    options.y = newPoint.y * t.scale - options.height / 2;\n    var parentSvg = this.getParentSvg(selector, 'selector');\n    if (this.getShape(shapeType, currentSelector) === 'Square') {\n      this.svgRenderer.drawRectangle(canvas, options, id, undefined, true, parentSvg);\n    } else if (this.getShape(shapeType, currentSelector) === 'Circle') {\n      this.svgRenderer.drawCircle(canvas, options, 1);\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n   * @param {CircleAttributes} options - Specified the circle attributes value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {Transforms} t - Specified the transforms value.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.getShapeSize = function (type, options, currentSelector, t) {\n    if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n      // eslint-disable-next-line\n      var annotationSelector = JSON.parse(currentSelector);\n      // eslint-disable-next-line max-len\n      options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n      // eslint-disable-next-line max-len\n      options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n      // eslint-disable-next-line max-len\n      options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n    } else {\n      // eslint-disable-next-line\n      var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n      // eslint-disable-next-line max-len\n      options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n      // eslint-disable-next-line max-len\n      options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n      // eslint-disable-next-line max-len\n      options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n      if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) / 2;\n        // eslint-disable-next-line max-len\n        options.width = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n        // eslint-disable-next-line max-len\n        options.height = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @returns {AnnotationSelectorSettingsModel} - Specified the annotation selector settings model.\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.getShape = function (type, currentSelector) {\n    // eslint-disable-next-line\n    var shapeType;\n    {\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        // eslint-disable-next-line\n        var annotationSelector = JSON.parse(currentSelector);\n        shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n      } else {\n        // eslint-disable-next-line\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n        shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n        if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape;\n        } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape;\n        }\n      }\n      return shapeType;\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n   * @param {CircleAttributes} options - Specified the circle attributes value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {Transforms} t - Specified the transforms value.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.getResizerColors = function (type, options, currentSelector, t) {\n    if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n      // eslint-disable-next-line\n      var annotationSelector = JSON.parse(currentSelector);\n      options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n      options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n    } else {\n      // eslint-disable-next-line\n      var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n      options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n      options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n      if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor;\n      } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor;\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {DrawingElement} wrapper - Specified the drawing element.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n   * @param {Transforms} transform - Specified the transform value.\n   * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n   * @param {boolean} canMask - Specified the is mask or not.\n   * @returns {void}\n   */\n  Drawing.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n    var element = new PathElement();\n    var newPoint;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n    var pivotY = top;\n    pivotX = (pivotX + transform.tx) * transform.scale;\n    pivotY = (pivotY + transform.ty) * transform.scale;\n    newPoint = {\n      x: pivotX,\n      y: pivotY - 25\n    };\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n      newPoint = transformPointByMatrix(matrix, newPoint);\n    }\n    var options = getBaseShapeAttributes(wrapper);\n    options.stroke = 'black';\n    options.strokeWidth = 1;\n    options.opacity = 1;\n    options.fill = '#FF4081';\n    options.centerX = newPoint.x;\n    options.centerY = newPoint.y;\n    options.radius = 4;\n    options.angle = 0;\n    options.visible = true;\n    options.class = 'e-diagram-rotate-handle';\n    options.id = 'rotateThumb';\n    var checkBorder = this.shownBorder();\n    if (checkBorder) this.svgRenderer.drawCircle(canvas, options, ThumbsConstraints.Rotate, {\n      'aria-label': 'Thumb to rotate the selected object'\n    });\n    var circleHandle = canvas.querySelector('#' + options.id);\n    if (circleHandle) {\n      circleHandle.setAttribute('role', 'separator');\n    }\n  };\n  /**\n   * @private\n   * @param {DrawingElement} element - Specified the drawing element.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n   * @param {ThumbsConstraints} constraints - Specified the thumbs constraints element.\n   * @param {number} currentZoom - Specified the current zoom value.\n   * @param {boolean} canMask - Specified the is mask or not.\n   * @param {number} enableNode - Specified the node number.\n   * @param {boolean} nodeConstraints - Specified the node constraints or not.\n   * @param {boolean} isStamp - Specified is stamp or not.\n   * @param {boolean} isSticky - Specified is sticky or not.\n   * @param {boolean} isPath - Specified is path or not.\n   * @param {boolean} isFreeText - Specified is free text or not.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector settings value.\n   * @returns {void}\n   */\n  Drawing.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, canMask, enableNode, nodeConstraints, isStamp, isSticky, isPath, isFreeText, currentSelector) {\n    var left = element.offsetX - element.actualSize.width * element.pivot.x;\n    var top = element.offsetY - element.actualSize.height * element.pivot.y;\n    var height = element.actualSize.height;\n    var width = element.actualSize.width;\n    var transform = {\n      scale: currentZoom,\n      tx: 0,\n      ty: 0\n    };\n    if (isStamp) {\n      this.renderPivotLine(element, canvas, transform);\n      this.renderRotateThumb(element, canvas, transform);\n    }\n    if (isFreeText) {\n      isStamp = true;\n    }\n    this.renderBorder(element, canvas, currentSelector, transform, enableNode, nodeConstraints, true, isSticky);\n    var nodeWidth = element.actualSize.width * currentZoom;\n    var nodeHeight = element.actualSize.height * currentZoom;\n    // eslint-disable-next-line max-len\n    var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n    var allowPermission = false;\n    if (!this.pdfViewer.formDesignerModule) {\n      // eslint-disable-next-line\n      var annotation = this.pdfViewer.selectedItems.annotations[0];\n      // eslint-disable-next-line\n      var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n      var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n      if ((isLock || annotation.annotationSettings.isLock) && this.getAllowedInteractions(allowedInteraction)) {\n        allowPermission = true;\n      }\n      if (allowedInteraction[0] === 'Select') {\n        allowPermission = false;\n      }\n    }\n    var resizerLocation = this.getResizerLocation(shapeType, currentSelector);\n    if (resizerLocation < 1 || resizerLocation > 3) {\n      resizerLocation = 3;\n    }\n    var isNodeShape = false;\n    if (this.pdfViewer.selectedItems.annotations[0] && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ellipse' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Radius' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Rectangle' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ink')) {\n      isNodeShape = true;\n    }\n    if (!this.pdfViewer.viewerBase.checkSignatureFormField(element.id) && !nodeConstraints && !isSticky && !isPath && !allowPermission) {\n      if (isStamp || isNodeShape && nodeWidth >= 40 && nodeHeight >= 40 && (resizerLocation === 1 || resizerLocation === 3)) {\n        //Hide corners when the size is less than 40\n        this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on top left side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-northwest', currentSelector);\n        this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on top right side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-northeast', currentSelector);\n        this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on bottom left side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-southwest', currentSelector);\n        this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on bottom right side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-southeast', currentSelector);\n      }\n      // eslint-disable-next-line max-len\n      if (!isStamp && !isNodeShape || isNodeShape && (resizerLocation === 2 || resizerLocation === 3 || !(nodeWidth >= 40 && nodeHeight >= 40) && resizerLocation === 1)) {\n        this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on top side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n        this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on bottom side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n        this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on left side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n        this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on right side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n      }\n    }\n    if (shapeType === 'Textbox' || shapeType === 'Checkbox' || shapeType === 'RadioButton' || shapeType === 'SignatureField' || shapeType === 'InitialField' || shapeType === 'DropdownList' || shapeType === 'ListBox' || shapeType === 'PasswordField') {\n      this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on top side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n      this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on bottom side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n      this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on left side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n      this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on right side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n    }\n  };\n  // eslint-disable-next-line\n  Drawing.prototype.getAllowedInteractions = function (allowedInteraction) {\n    if (allowedInteraction && allowedInteraction.length > 0) {\n      for (var i = 0; i < allowedInteraction.length; i++) {\n        if (allowedInteraction[0] !== 'None' && allowedInteraction[parseInt(i.toString(), 10)] === 'Resize') {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation base model.\n   * @param {any} currentSelector - Specified the current selector value\n   * @returns {AnnotationResizerLocation} - Returns the annotation resizer location value.\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.getResizerLocation = function (type, currentSelector) {\n    // eslint-disable-next-line\n    var resizerLocation;\n    {\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        // eslint-disable-next-line\n        var annotationSelector = JSON.parse(currentSelector);\n        // eslint-disable-next-line max-len\n        resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n      } else {\n        // eslint-disable-next-line\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n        // eslint-disable-next-line max-len\n        resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n        if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Distance') {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation;\n        } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation;\n        }\n      }\n      return resizerLocation;\n    }\n  };\n  /**\n   * @private\n   * @param {DrawingElement} element - Specified the drawing element.\n   * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n   * @param {Transforms} transform - Specified the transform values.\n   * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n   * @param {boolean} canMask - Specified is mask value or not.\n   * @returns {void}\n   */\n  Drawing.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n    var wrapper = element;\n    var dashArray = '2,3';\n    var visible = true;\n    if (canMask) {\n      visible = false;\n    }\n    var options = getBaseShapeAttributes(wrapper, transform);\n    options.fill = 'None';\n    options.stroke = 'black';\n    options.strokeWidth = 1;\n    options.dashArray = dashArray;\n    options.visible = visible;\n    var scale = transform.scale;\n    options.x *= scale;\n    options.y *= scale;\n    options.width *= scale;\n    options.height *= scale;\n    options.id = 'pivotLine';\n    options.class = 'e-diagram-pivot-line';\n    var startPoint = {\n      x: wrapper.actualSize.width * wrapper.pivot.x * scale,\n      y: -20\n    };\n    var endPoint = {\n      x: wrapper.actualSize.width * wrapper.pivot.x * scale,\n      y: 0\n    };\n    options.startPoint = startPoint;\n    options.endPoint = endPoint;\n    var checkBorder = this.shownBorder();\n    if (checkBorder) this.svgRenderer.drawLine(canvas, options);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} selector - Specified the annotation element.\n   * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n   * @param {SelectorConstraints} constraints - Specified the selector constraints value.\n   * @param {Transforms} transform - Specified the transform values.\n   * @param {boolean} connectedSource - Specified is connected source or not.\n   * @param {boolean} connectedTarget - Specified is connected target or not.\n   * @param {boolean} isSegmentEditing - Specified is segment editing or not.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n   * @returns {void}\n   */\n  Drawing.prototype.renderEndPointHandle = function (selector, canvas, constraints, transform, connectedSource, connectedTarget, isSegmentEditing, currentSelector) {\n    transform = transform || {\n      tx: 0,\n      ty: 0,\n      scale: 1\n    };\n    var sourcePoint = selector.sourcePoint;\n    var targetPoint = selector.targetPoint;\n    var wrapper = selector.wrapper;\n    var i;\n    var checkBorder = this.shownBorder();\n    if (checkBorder) {\n      for (i = 0; i < selector.vertexPoints.length; i++) {\n        var segment = selector.vertexPoints[parseInt(i.toString(), 10)];\n        this.renderCircularHandle('segementThumb_' + (i + 1), wrapper, segment.x, segment.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n      }\n    }\n    var leaderCount = 0;\n    if (selector.shapeAnnotationType === 'Distance') {\n      for (i = 0; i < selector.wrapper.children.length; i++) {\n        var segment = selector.wrapper.children[parseInt(i.toString(), 10)];\n        var newPoint1 = void 0;\n        var angle = Point.findAngle(selector.sourcePoint, selector.targetPoint);\n        if (segment.id.indexOf('leader') > -1) {\n          var center = selector.wrapper.children[0].bounds.center;\n          if (leaderCount === 0) {\n            newPoint1 = {\n              x: selector.sourcePoint.x,\n              y: selector.sourcePoint.y - selector.leaderHeight\n            };\n            center = sourcePoint;\n          } else {\n            newPoint1 = {\n              x: selector.targetPoint.x,\n              y: selector.targetPoint.y - selector.leaderHeight\n            };\n            center = targetPoint;\n          }\n          var matrix = identityMatrix();\n          rotateMatrix(matrix, angle, center.x, center.y);\n          if (checkBorder) {\n            var rotatedPoint = transformPointByMatrix(matrix, {\n              x: newPoint1.x,\n              y: newPoint1.y\n            });\n            this.renderCircularHandle('leaderThumb_' + (i + 1), wrapper, rotatedPoint.x, rotatedPoint.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n          }\n          leaderCount++;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  Drawing.prototype.initSelectorWrapper = function () {\n    var selectorModel = this.pdfViewer.selectedItems;\n    selectorModel.init(this);\n  };\n  /**\n   * @private\n   * @param {string[]} objArray - Specified the annotation object array.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {boolean} multipleSelection - Specified the multiple selection or not.\n   * @param {boolean} preventUpdate - Specified the prevent update or not.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.select = function (objArray, currentSelector, multipleSelection, preventUpdate) {\n    var selectorModel = this.pdfViewer.selectedItems;\n    for (var i = 0; i < objArray.length; i++) {\n      // eslint-disable-next-line\n      var obj = this.pdfViewer.nameTable[objArray[i]];\n      if (obj.formFieldAnnotationType && this.pdfViewer.designerMode) {\n        selectorModel.formFields.push(obj);\n        this.initSelectorWrapper();\n        selectorModel.wrapper.children.push(obj.wrapper);\n        this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n      } else if (obj && !obj.formFieldAnnotationType) {\n        if (!(obj instanceof Selector) && obj.wrapper.visible && this.pdfViewer.annotationModule) {\n          // eslint-disable-next-line\n          var annotationSettings = void 0;\n          if (obj.annotationSettings) {\n            if (!isNullOrUndefined(annotationSettings) && !isNullOrUndefined(annotationSettings.isLock)) {\n              annotationSettings.isLock = JSON.parse(annotationSettings.isLock);\n            }\n          } else if (!obj.formFieldAnnotationType) {\n            annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(obj, true);\n            obj.annotationSettings = annotationSettings;\n          }\n          var isLock = !obj.formFieldAnnotationType ? annotationSettings ? annotationSettings.isLock : false : false;\n          if (annotationSettings && annotationSettings.isLock && this.pdfViewer.annotationModule.checkAllowedInteractions('Select', obj)) {\n            isLock = false;\n          }\n          selectorModel.annotations.push(obj);\n          var checkBorder = this.shownBorder();\n          if (checkBorder) {\n            this.initSelectorWrapper();\n            selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n            selectorModel.wrapper.children.push(obj.wrapper);\n            if (!preventUpdate) {\n              this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {number} pageIndex - Specified the page index value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.dragSelectedObjects = function (tx, ty, pageIndex, currentSelector, helper) {\n    var obj = this.pdfViewer.selectedItems;\n    this.drag(obj, tx, ty, currentSelector, helper);\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.drag = function (obj, tx, ty, currentSelector, helper) {\n    if (obj instanceof Selector) {\n      if (obj.annotations.length) {\n        for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n          var node = _a[_i];\n          this.drag(node, tx, ty, currentSelector, helper);\n          this.renderSelector(node.pageIndex, currentSelector, helper);\n        }\n      } else if (obj.formFields.length) {\n        for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n          var node = _c[_b];\n          this.drag(node, tx, ty, currentSelector, helper);\n          this.renderSelector(node.pageIndex, currentSelector, helper);\n        }\n      }\n    } else {\n      this.dragAnnotation(obj, tx, ty);\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @returns {void}\n   */\n  Drawing.prototype.dragAnnotation = function (obj, tx, ty) {\n    var tempNode;\n    var elements = [];\n    // eslint-disable-next-line\n    var oldValues = {\n      x: obj.wrapper.offsetX,\n      y: obj.wrapper.offsetY\n    };\n    //bug (EJ2-62649) : fixed an issue with difficulty on moving/ resizing free text annotation that added in edge of viewer\n    var newDiff = this.moveInsideViewer(obj, tx, ty);\n    obj.wrapper.offsetX += newDiff.tx;\n    obj.wrapper.offsetY += newDiff.ty;\n    if (isLineShapes(obj) || obj.shapeAnnotationType === 'Polygon') {\n      if (obj.wrapper.children.length) {\n        var nodes = obj.wrapper.children;\n        for (var i = 0; i < nodes.length; i++) {\n          nodes[parseInt(i.toString(), 10)].offsetX += tx;\n          nodes[parseInt(i.toString(), 10)].offsetY += ty;\n        }\n      }\n      this.dragControlPoint(obj, tx, ty, true);\n    }\n    this.nodePropertyChange(obj, {\n      bounds: {\n        x: obj.wrapper.offsetX,\n        y: obj.wrapper.offsetY\n      }\n    });\n    obj.wrapper.measureChildren = false;\n    // eslint-disable-next-line\n    var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + obj.pageIndex);\n    // eslint-disable-next-line\n    this.pdfViewer.renderDrawing(canvas, obj.pageIndex);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {boolean} preventUpdate - Specified the prevent update or not.\n   * @param {number} segmentNumber - Specified the segment value.\n   * @returns {boolean} - Returns true or false.\n   */\n  Drawing.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n    // eslint-disable-next-line\n    var connector = this.pdfViewer.nameTable[obj.id];\n    for (var i = 0; i < connector.vertexPoints.length; i++) {\n      connector.vertexPoints[parseInt(i.toString(), 10)].x += tx;\n      connector.vertexPoints[parseInt(i.toString(), 10)].y += ty;\n    }\n    if (!preventUpdate) {\n      this.updateEndPoint(connector);\n    }\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n   * @returns {void}\n   */\n  Drawing.prototype.updateEndPoint = function (connector) {\n    this.nodePropertyChange(connector, {\n      vertexPoints: connector.vertexPoints\n    });\n    this.renderSelector(connector.pageIndex);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} actualObject - Specified the actual annotaion object.\n   * @param {PdfAnnotationBaseModel} node - Specified the node annotation object.\n   * @returns {void}\n   */\n  Drawing.prototype.nodePropertyChange = function (actualObject, node) {\n    var existingBounds = actualObject.wrapper.outerBounds;\n    var existingInnerBounds = actualObject.wrapper.bounds;\n    var updateConnector = false;\n    var i;\n    var j;\n    var offsetX;\n    var offsetY;\n    var update;\n    var tx;\n    var ty;\n    if (node.bounds) {\n      if (node.bounds.width !== undefined) {\n        actualObject.bounds.width = actualObject.wrapper.width = node.bounds.width;\n      }\n      if (node.bounds.height !== undefined) {\n        actualObject.bounds.height = actualObject.wrapper.height = node.bounds.height;\n      }\n      if (node.bounds.x !== undefined) {\n        actualObject.bounds.x = node.bounds.x - actualObject.bounds.width * 0.5;\n        actualObject.wrapper.offsetX = node.bounds.x;\n        update = true;\n        updateConnector = true;\n      }\n      if (node.bounds.y !== undefined) {\n        actualObject.bounds.y = node.bounds.y - actualObject.bounds.height * 0.5;\n        actualObject.wrapper.offsetY = node.bounds.y;\n        update = true;\n        updateConnector = true;\n      }\n      if (node.leaderHeight !== undefined) {\n        actualObject.leaderHeight = node.leaderHeight;\n        this.updateConnector(actualObject, actualObject.vertexPoints);\n      }\n      if (actualObject.wrapper.children.length) {\n        var children = actualObject.wrapper.children;\n        for (var i_1 = 0; i_1 < children.length; i_1++) {\n          if (children[parseInt(i_1.toString(), 10)].id) {\n            var names = children[parseInt(i_1.toString(), 10)].id.split('_');\n            if (names.length && (names.indexOf('perimeter') > -1 || names.indexOf('radius') > -1)) {\n              this.setNodePosition(children[parseInt(i_1.toString(), 10)], actualObject);\n            } else if (names.length && names.indexOf('srcDec') > -1) {\n              children[parseInt(i_1.toString(), 10)].offsetX = actualObject.vertexPoints[0].x;\n              children[parseInt(i_1.toString(), 10)].offsetY = actualObject.vertexPoints[0].y;\n            } else if (names.length && names.indexOf('tarDec') > -1) {\n              children[parseInt(i_1.toString(), 10)].offsetX = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].x;\n              children[parseInt(i_1.toString(), 10)].offsetY = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].y;\n            } else if (names.length && names.indexOf('stamp') > -1) {\n              // eslint-disable-next-line\n              var ratio = 0;\n              var heightRatio = 2;\n              if (actualObject.wrapper.width !== undefined && actualObject.wrapper.height !== undefined) {\n                ratio = 20;\n                heightRatio = 2.9;\n              }\n              if (actualObject.isDynamicStamp) {\n                children[parseInt(i_1.toString(), 10)].width = actualObject.bounds.width - ratio;\n                children[parseInt(i_1.toString(), 10)].height = actualObject.bounds.height / 2 - ratio;\n                // eslint-disable-next-line\n                var element = children[1];\n                // eslint-disable-next-line\n                var annotationSettings = this.pdfViewer.stampSettings ? this.pdfViewer.stampSettings : this.pdfViewer.annotationSettings;\n                // eslint-disable-next-line max-len\n                if (annotationSettings && (annotationSettings.maxHeight || annotationSettings.maxWidth) && actualObject.bounds.height > 60) {\n                  if (ratio != 0) {\n                    element.style.fontSize = actualObject.bounds.width / ratio;\n                  } else {\n                    element.style.fontSize = actualObject.wrapper.bounds.width / 20;\n                  }\n                } else {\n                  if (ratio != 0) {\n                    element.style.fontSize = this.fontSizeCalculation(actualObject, element, actualObject.bounds.width - 20);\n                  } else {\n                    element.style.fontSize = this.fontSizeCalculation(actualObject, element, actualObject.wrapper.bounds.width - 20);\n                  }\n                }\n                if (ratio !== 0) {\n                  element.margin.bottom = -(children[parseInt(i_1.toString(), 10)].height / 2);\n                }\n              } else {\n                children[parseInt(i_1.toString(), 10)].width = actualObject.bounds.width - ratio;\n                children[parseInt(i_1.toString(), 10)].height = actualObject.bounds.height - ratio;\n              }\n              children[parseInt(i_1.toString(), 10)].offsetX = actualObject.wrapper.offsetX;\n              children[parseInt(i_1.toString(), 10)].offsetY = actualObject.wrapper.offsetX;\n              children[parseInt(i_1.toString(), 10)].isDirt = true;\n            }\n          }\n        }\n      }\n    }\n    if (node.sourceDecoraterShapes !== undefined) {\n      actualObject.sourceDecoraterShapes = node.sourceDecoraterShapes;\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n    if (node.isReadonly !== undefined && actualObject.shapeAnnotationType === 'FreeText') {\n      actualObject.isReadonly = node.isReadonly;\n    }\n    if (node.taregetDecoraterShapes !== undefined) {\n      actualObject.taregetDecoraterShapes = node.taregetDecoraterShapes;\n      update = true;\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n    if (node.fillColor !== undefined) {\n      actualObject.fillColor = node.fillColor;\n      actualObject.wrapper.children[0].style.fill = node.fillColor;\n      if ((actualObject.enableShapeLabel || actualObject.measureType) && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_2 = 0; i_2 < children.length; i_2++) {\n          if (children[parseInt(i_2.toString(), 10)].textNodes) {\n            if (actualObject.enableShapeLabel) {\n              actualObject.labelFillColor = node.fillColor;\n              children[parseInt(i_2.toString(), 10)].style.fill = node.fillColor;\n            }\n            if (actualObject.measureType) {\n              children[parseInt(i_2.toString(), 10)].style.fill = node.fillColor;\n            }\n          }\n        }\n      }\n      update = true;\n    }\n    if (actualObject.enableShapeLabel && node.labelFillColor !== undefined) {\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_3 = 0; i_3 < children.length; i_3++) {\n          if (children[parseInt(i_3.toString(), 10)].textNodes) {\n            actualObject.labelFillColor = node.labelFillColor;\n            children[parseInt(i_3.toString(), 10)].style.fill = node.labelFillColor;\n          }\n        }\n      }\n    }\n    if (node.opacity !== undefined) {\n      if (actualObject.shapeAnnotationType === 'Stamp' || actualObject.shapeAnnotationType === 'FreeText') {\n        actualObject.wrapper.children[1].style.opacity = node.opacity;\n        if (actualObject.wrapper.children[2]) {\n          actualObject.wrapper.children[2].style.opacity = node.opacity;\n        }\n      } else {\n        if (actualObject.shapeAnnotationType === 'StickyNotes') {\n          // eslint-disable-next-line\n          this.pdfViewer.nameTable[actualObject.annotName].wrapper.children[0].style.opacity = node.opacity;\n        }\n        actualObject.opacity = node.opacity;\n      }\n      actualObject.wrapper.children[0].style.opacity = node.opacity;\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_4 = 0; i_4 < children.length; i_4++) {\n          if (children[parseInt(i_4.toString(), 10)].textNodes) {\n            children[parseInt(i_4.toString(), 10)].style.opacity = node.labelOpacity;\n          }\n        }\n      }\n      update = true;\n      updateConnector = true;\n    }\n    if (actualObject.enableShapeLabel && node.labelOpacity !== undefined) {\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_5 = 0; i_5 < children.length; i_5++) {\n          if (children[parseInt(i_5.toString(), 10)].textNodes) {\n            children[parseInt(i_5.toString(), 10)].style.opacity = node.labelOpacity;\n          }\n        }\n      }\n    }\n    if (node.rotateAngle !== undefined) {\n      actualObject.rotateAngle = node.rotateAngle;\n      actualObject.wrapper.rotateAngle = node.rotateAngle;\n      update = true;\n      updateConnector = true;\n    }\n    if (node.strokeColor !== undefined) {\n      actualObject.strokeColor = node.strokeColor;\n      actualObject.wrapper.children[0].style.strokeColor = node.strokeColor;\n      update = true;\n      if (actualObject.shapeAnnotationType === 'Radius' && actualObject.wrapper.children[1]) {\n        actualObject.wrapper.children[1].style.strokeColor = node.strokeColor;\n      }\n      updateConnector = true;\n    }\n    if (node.fontColor !== undefined) {\n      actualObject.fontColor = node.fontColor;\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.color = node.fontColor;\n        if (actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n        } else {\n          children[1].horizontalAlignment = 'Auto';\n        }\n      }\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_6 = 0; i_6 < children.length; i_6++) {\n          if (children[parseInt(i_6.toString(), 10)].textNodes) {\n            children[parseInt(i_6.toString(), 10)].style.color = node.fontColor;\n          }\n        }\n      }\n      update = true;\n      updateConnector = true;\n    }\n    if (node.fontFamily !== undefined) {\n      actualObject.fontFamily = node.fontFamily;\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.fontFamily = node.fontFamily;\n      }\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_7 = 0; i_7 < children.length; i_7++) {\n          if (children[parseInt(i_7.toString(), 10)].textNodes) {\n            children[parseInt(i_7.toString(), 10)].style.fontFamily = node.fontFamily;\n          }\n        }\n      }\n      update = true;\n      updateConnector = true;\n    }\n    if (node.fontSize !== undefined) {\n      actualObject.fontSize = node.fontSize;\n      if ((actualObject.shapeAnnotationType === 'FreeText' || actualObject.shapeAnnotationType === 'SignatureText') && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.fontSize = node.fontSize;\n        if (actualObject.shapeAnnotationType === 'SignatureText') {\n          actualObject.wrapper.children[1].bounds.width = actualObject.bounds.width;\n          actualObject.wrapper.children[1].desiredSize.width = actualObject.bounds.width;\n          actualObject.wrapper.children[1].actualSize.width = actualObject.bounds.width;\n          children[1].horizontalAlignment = 'Center';\n          children[1].verticalAlignment = 'Center';\n          children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n        }\n      }\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_8 = 0; i_8 < children.length; i_8++) {\n          if (children[parseInt(i_8.toString(), 10)].textNodes) {\n            children[parseInt(i_8.toString(), 10)].style.fontSize = node.fontSize;\n          }\n        }\n      }\n      update = true;\n      updateConnector = true;\n    }\n    if (node.font !== undefined) {\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        if (node.font.isBold !== undefined) {\n          children[1].style.bold = node.font.isBold;\n          actualObject.font.isBold = node.font.isBold;\n        }\n        if (node.font.isItalic !== undefined) {\n          children[1].style.italic = node.font.isItalic;\n          actualObject.font.isItalic = node.font.isItalic;\n        }\n        if (node.font.isUnderline !== undefined) {\n          if (node.font.isUnderline) {\n            actualObject.font.isStrikeout = false;\n          }\n          if (node.font.isUnderline === true) {\n            children[1].style.textDecoration = 'Underline';\n          } else {\n            if (!node.font.isStrikeout) {\n              children[1].style.textDecoration = 'None';\n            }\n          }\n          actualObject.font.isUnderline = node.font.isUnderline;\n        }\n        if (node.font.isStrikeout !== undefined) {\n          if (node.font.isStrikeout) {\n            actualObject.font.isUnderline = false;\n          }\n          if (node.font.isStrikeout === true) {\n            children[1].style.textDecoration = 'LineThrough';\n          } else {\n            if (!node.font.isUnderline) {\n              children[1].style.textDecoration = 'None';\n            }\n          }\n          actualObject.font.isStrikeout = node.font.isStrikeout;\n        }\n      }\n      update = true;\n      updateConnector = true;\n    }\n    if (node.textAlign !== undefined) {\n      actualObject.textAlign = node.textAlign;\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.textAlign = node.textAlign;\n        if (children[1].childNodes.length === 1) {\n          if (actualObject.textAlign === 'Justify') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Right') {\n            children[1].horizontalAlignment = 'Right';\n            children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n          } else if (actualObject.textAlign === 'Left') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Center') {\n            children[1].horizontalAlignment = 'Center';\n            children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n          }\n        } else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n        } else {\n          children[1].horizontalAlignment = 'Auto';\n        }\n      }\n      update = true;\n      updateConnector = true;\n    }\n    if (node.thickness !== undefined) {\n      actualObject.thickness = node.thickness;\n      actualObject.wrapper.children[0].style.strokeWidth = node.thickness;\n      if (actualObject.shapeAnnotationType === 'LineWidthArrowHead') {\n        actualObject.wrapper.children[1].width = 12 * node.thickness;\n        actualObject.wrapper.children[1].height = 12 * node.thickness;\n        actualObject.wrapper.children[2].width = 12 * node.thickness;\n        actualObject.wrapper.children[2].height = 12 * node.thickness;\n      }\n      if (actualObject.shapeAnnotationType === 'Radius' && actualObject.wrapper.children[1]) {\n        actualObject.wrapper.children[1].style.strokeWidth = node.thickness;\n      }\n      update = true;\n      updateConnector = true;\n    }\n    if (node.borderDashArray !== undefined) {\n      actualObject.borderDashArray = node.borderDashArray;\n      actualObject.wrapper.children[0].style.strokeDashArray = node.borderDashArray;\n    }\n    if (node.borderStyle !== undefined) {\n      actualObject.borderStyle = node.borderStyle;\n    }\n    if (node.author !== undefined) {\n      actualObject.author = node.author;\n    }\n    if (node.modifiedDate !== undefined) {\n      actualObject.modifiedDate = node.modifiedDate;\n    }\n    if (node.subject !== undefined) {\n      actualObject.subject = node.subject;\n    }\n    if (node.vertexPoints !== undefined) {\n      actualObject.vertexPoints = node.vertexPoints;\n      // eslint-disable-next-line\n      this.pdfViewer.nameTable[actualObject.id].vertexPoints = node.vertexPoints;\n      this.updateConnector(actualObject, node.vertexPoints);\n    }\n    if (node.leaderHeight !== undefined && actualObject.shapeAnnotationType !== 'Polygon') {\n      actualObject.leaderHeight = node.leaderHeight;\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n    if (node.notes !== undefined) {\n      actualObject.notes = node.notes;\n    }\n    if (node.annotName !== undefined) {\n      actualObject.annotName = node.annotName;\n    }\n    if (actualObject.shapeAnnotationType === 'Distance') {\n      for (i = 0; i < actualObject.wrapper.children.length; i++) {\n        // eslint-disable-next-line\n        var segment = actualObject.wrapper.children[i];\n        // eslint-disable-next-line\n        var points = getConnectorPoints(actualObject);\n        if (segment.id.indexOf('leader1') > -1) {\n          this.setLineDistance(actualObject, points, segment, false);\n        }\n        if (segment.id.indexOf('leader2') > -1) {\n          this.setLineDistance(actualObject, points, segment, true);\n        }\n      }\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n    if (actualObject.shapeAnnotationType === 'Polygon' && node.vertexPoints) {\n      actualObject.data = getPolygonPath(actualObject.vertexPoints);\n      // eslint-disable-next-line\n      var path = actualObject.wrapper.children[0];\n      path.data = actualObject.data;\n      path.canMeasurePath = true;\n    }\n    if (isLineShapes(actualObject)) {\n      for (var i_9 = 0; i_9 < actualObject.wrapper.children.length; i_9++) {\n        // eslint-disable-next-line\n        var childElement = actualObject.wrapper.children[i_9];\n        if (!childElement.textNodes) {\n          setElementStype(actualObject, actualObject.wrapper.children[parseInt(i_9.toString(), 10)]);\n        }\n        if (actualObject.enableShapeLabel === true) {\n          if (actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof TextElement) {\n            actualObject.wrapper.children[parseInt(i_9.toString(), 10)].style.fill = actualObject.labelFillColor;\n          }\n          if (actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof PathElement && actualObject.measureType === 'Perimeter') {\n            actualObject.wrapper.children[parseInt(i_9.toString(), 10)].style.fill = 'transparent';\n          }\n        } else {\n          if (actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof PathElement && actualObject.measureType === 'Perimeter' || actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof TextElement) {\n            actualObject.wrapper.children[parseInt(i_9.toString(), 10)].style.fill = 'transparent';\n          }\n        }\n      }\n    }\n    if (actualObject && (actualObject.shapeAnnotationType === 'FreeText' || actualObject.enableShapeLabel === true)) {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        for (var i_10 = 0; i_10 < children.length; i_10++) {\n          if (children[parseInt(i_10.toString(), 10)].textNodes) {\n            if (actualObject.shapeAnnotationType === 'FreeText') {\n              if (node.dynamicText) {\n                children[parseInt(i_10.toString(), 10)].content = node.dynamicText;\n                actualObject.dynamicText = node.dynamicText;\n              } else {\n                children[parseInt(i_10.toString(), 10)].content = actualObject.dynamicText;\n              }\n              children[parseInt(i_10.toString(), 10)].width = actualObject.bounds.width;\n            } else if (actualObject.enableShapeLabel === true && actualObject.measureType) {\n              if (node.labelContent) {\n                children[parseInt(i_10.toString(), 10)].content = node.labelContent;\n                actualObject.labelContent = node.labelContent;\n              } else {\n                children[parseInt(i_10.toString(), 10)].content = actualObject.labelContent;\n              }\n              actualObject.notes = children[parseInt(i_10.toString(), 10)].content;\n            } else if (actualObject.enableShapeLabel === true) {\n              if (node.labelContent) {\n                children[parseInt(i_10.toString(), 10)].content = node.labelContent;\n                actualObject.labelContent = node.labelContent;\n              } else {\n                children[parseInt(i_10.toString(), 10)].content = actualObject.labelContent;\n              }\n              actualObject.notes = children[parseInt(i_10.toString(), 10)].content;\n            }\n            children[parseInt(i_10.toString(), 10)].isDirt = true;\n          }\n          /** set text node width less than the parent */\n        }\n      }\n    }\n    if (actualObject && actualObject.shapeAnnotationType === \"SignatureText\" && actualObject.wrapper) {\n      if (actualObject.wrapper.children && actualObject.wrapper.children.length > 1) {\n        actualObject.wrapper.children[1].isDirt = true;\n      }\n    }\n    if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && this.pdfViewer.annotationModule.stickyNotesAnnotationModule.textFromCommentPanel) {\n      actualObject.wrapper.width = undefined;\n      actualObject.wrapper.height = undefined;\n      actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n      this.pdfViewer.annotationModule.stickyNotesAnnotationModule.textFromCommentPanel = false;\n    } else {\n      actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n    }\n    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n    if (actualObject && actualObject.formFieldAnnotationType) {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children[0];\n        children.actualSize.width = actualObject.wrapper.desiredSize.width;\n        children.actualSize.height = actualObject.wrapper.desiredSize.height;\n      }\n    }\n    if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && actualObject.subject === 'Text Box') {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n        } else if (children[1].childNodes.length === 1) {\n          if (actualObject.textAlign === 'Justify') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Right') {\n            children[1].horizontalAlignment = 'Right';\n            children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n          } else if (actualObject.textAlign === 'Left') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Center') {\n            children[1].horizontalAlignment = 'Center';\n            children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n          }\n        }\n        for (var i_11 = 0; i_11 < children.length; i_11++) {\n          if (children[parseInt(i_11.toString(), 10)].textNodes && children[parseInt(i_11.toString(), 10)].textNodes.length > 0) {\n            children[parseInt(i_11.toString(), 10)].isDirt = true;\n            var childNodeHeight = children[parseInt(i_11.toString(), 10)].textNodes.length * children[parseInt(i_11.toString(), 10)].textNodes[0].dy;\n            var heightDiff = actualObject.bounds.height - childNodeHeight;\n            if (heightDiff > 0 && heightDiff < children[parseInt(i_11.toString(), 10)].textNodes[0].dy) {\n              childNodeHeight = childNodeHeight + children[parseInt(i_11.toString(), 10)].textNodes[0].dy;\n            }\n            if (childNodeHeight > actualObject.bounds.height) {\n              var contString = '';\n              for (var index = 0; index < children[parseInt(i_11.toString(), 10)].textNodes.length; index++) {\n                // eslint-disable-next-line\n                var childHeight = children[i_11].textNodes[0].dy * (index + 1);\n                // eslint-disable-next-line\n                childHeight = childHeight;\n                contString = contString + children[parseInt(i_11.toString(), 10)].textNodes[parseInt(index.toString(), 10)].text;\n              }\n              children[parseInt(i_11.toString(), 10)].content = contString;\n            }\n          }\n          /** set text node width less than the parent */\n          children[parseInt(i_11.toString(), 10)].width = actualObject.bounds.width;\n        }\n      }\n      actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n      actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n    }\n    this.pdfViewer.renderDrawing(undefined, actualObject.pageIndex);\n    if (actualObject && actualObject.shapeAnnotationType === 'FreeText') {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        if (children[1].childNodes.length === 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Left';\n          children[1].setOffsetWithRespectToBounds(0.5, 0, null);\n        } else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n          children[1].setOffsetWithRespectToBounds(0, 0, null);\n        }\n      }\n    }\n  };\n  Drawing.prototype.fontSizeCalculation = function (actualObject, element, boundsWidth) {\n    var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + actualObject.pageIndex);\n    var context = canvas.getContext(\"2d\");\n    var textwidth = 0;\n    var newsize = 0;\n    var fontStyle = '';\n    if (element.style.italic && element.style.bold) {\n      fontStyle = 'bold italic ';\n    } else if (element.style.bold) {\n      fontStyle = 'bold ';\n    } else if (element.style.italic) {\n      fontStyle = 'italic ';\n    }\n    while (boundsWidth > textwidth) {\n      context.font = fontStyle + newsize + 'px ' + element.style.fontFamily;\n      textwidth = context.measureText(actualObject.dynamicText).width;\n      newsize += 0.1;\n    }\n    newsize -= 0.1;\n    return newsize;\n  };\n  // eslint-disable-next-line\n  Drawing.prototype.setLineDistance = function (actualObject, points, segment, leader) {\n    var node1;\n    if (leader) {\n      node1 = initLeader(actualObject, points[1], points[0], leader);\n    } else {\n      node1 = initLeader(actualObject, points[0], points[1], leader);\n    }\n    segment.data = node1.data;\n    segment.offsetX = node1.offsetX;\n    segment.offsetY = node1.offsetY;\n    segment.rotateAngle = node1.rotateAngle;\n    segment.width = node1.width;\n    segment.height = node1.height;\n    segment.pivot = node1.pivot;\n    segment.canMeasurePath = true;\n    segment.isDirt = true;\n  };\n  /**\n   * @private\n   * @param {number} sx - Specified the sx value.\n   * @param {number} sy - Specified the sy value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @returns {boolean} - Returns true or false.\n   */\n  Drawing.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n    var obj = this.pdfViewer.selectedItems;\n    return this.scale(obj, sx, sy, pivot);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the annotaion object.\n   * @param {number} sx - Specified the sx value.\n   * @param {number} sy - Specified the sy value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @returns {boolean} - Returns true or false.\n   */\n  Drawing.prototype.scale = function (obj, sx, sy, pivot) {\n    var checkBoundaryConstraints = true;\n    if (obj instanceof Selector) {\n      if (obj.annotations && obj.annotations.length) {\n        for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n          var node = _a[_i];\n          checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n        }\n      } else if (obj.formFields && obj.formFields.length) {\n        for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n          var node = _c[_b];\n          checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n        }\n      }\n    } else {\n      checkBoundaryConstraints = this.scaleAnnotation(obj, sx, sy, pivot, undefined);\n    }\n    return checkBoundaryConstraints;\n  };\n  /**\n   * @private\n   * @param {number} sw - Specified the sw value.\n   * @param {number} sh - Specified the sh value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @param {IElement} obj - Specified the annotation object.\n   * @param {DrawingElement} element - Specified the annotation element.\n   * @param {IElement} refObject - Specified the annotation reference object.\n   * @returns {void}\n   */\n  Drawing.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n    sw = sw < 0 ? 1 : sw;\n    sh = sh < 0 ? 1 : sh;\n    if (sw !== 1 || sh !== 1) {\n      var width = void 0;\n      var height = void 0;\n      if (!isLineShapes(obj)) {\n        var node = obj;\n        var isResize = void 0;\n        var bound = void 0;\n        width = node.wrapper.actualSize.width * sw;\n        height = node.wrapper.actualSize.height * sh;\n        if (isResize) {\n          width = Math.max(width, bound.right - node.wrapper.bounds.x);\n          height = Math.max(height, bound.bottom - node.wrapper.bounds.y);\n        }\n        sw = width / node.wrapper.actualSize.width;\n        sh = height / node.wrapper.actualSize.height;\n      }\n      var matrix = identityMatrix();\n      if (!refObject) {\n        refObject = obj;\n      }\n      var refWrapper = refObject.wrapper;\n      rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n      scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n      rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n      if (!isLineShapes(obj)) {\n        var node = obj;\n        var newPosition = transformPointByMatrix(matrix, {\n          x: node.wrapper.offsetX,\n          y: node.wrapper.offsetY\n        });\n        if (width > 0) {\n          node.wrapper.width = width;\n          node.wrapper.offsetX = newPosition.x;\n        }\n        if (height > 0) {\n          node.wrapper.height = height;\n          node.wrapper.offsetY = newPosition.y;\n        }\n        this.nodePropertyChange(obj, {\n          bounds: {\n            width: node.wrapper.width,\n            height: node.wrapper.height,\n            x: node.wrapper.offsetX,\n            y: node.wrapper.offsetY\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} sw - Specified the sw value.\n   * @param {number} sh - Specified the sh value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @param {IElement} refObject - Specified the reference object.\n   * @returns {boolean} - Returns true or false.\n   */\n  Drawing.prototype.scaleAnnotation = function (obj, sw, sh, pivot, refObject) {\n    // eslint-disable-next-line\n    var node = this.pdfViewer.nameTable[obj.id];\n    var tempNode = node;\n    var elements = [];\n    var element = node.wrapper;\n    if (!refObject) {\n      refObject = obj;\n    }\n    var refWrapper = refObject.wrapper;\n    var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n    var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n    var refPoint = this.getShapePoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n    if (element.actualSize.width !== undefined && element.actualSize.height !== undefined) {\n      this.scaleObject(sw, sh, refPoint, node, element, refObject);\n    }\n    // eslint-disable-next-line max-len\n    var constraints = this.checkBoundaryConstraints(undefined, undefined, obj.pageIndex, obj.wrapper.bounds);\n    if (!constraints) {\n      this.scaleObject(1 / sw, 1 / sh, refPoint, node, element, refObject);\n      //bug (EJ2-62649) : fixed an issue with difficulty on moving/ resizing free text annotation that added in edge of viewer \n      // eslint-disable-next-line\n      if (obj.shapeAnnotationType === 'FreeText' && (obj.id.slice(0, 9) === 'free_text' || obj.id.slice(0, 8) === 'freetext')) {\n        var newDiff = this.moveInsideViewer(obj);\n        this.nodePropertyChange(obj, {\n          bounds: {\n            width: obj.wrapper.width,\n            height: obj.wrapper.height,\n            x: obj.wrapper.offsetX + newDiff.tx,\n            y: obj.wrapper.offsetY + newDiff.ty\n          }\n        });\n      }\n    }\n    return constraints;\n  };\n  //bug (EJ2-62649) : Implemnted method for calculating optimal bound for free text annotation that outside viewer container \n  Drawing.prototype.moveInsideViewer = function (obj, tx, ty) {\n    tx = tx ? tx : 0;\n    ty = ty ? ty : 0;\n    if (obj.shapeAnnotationType === 'FreeText' && (obj.id.slice(0, 9) === 'free_text' || obj.id.slice(0, 8) === 'freetext')) {\n      // eslint-disable-next-line\n      var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + obj.pageIndex);\n      if (canvas) {\n        var bounds = obj.wrapper.bounds;\n        var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n        var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n        var right = bounds.right;\n        var left = bounds.left;\n        var top_1 = bounds.top;\n        var bottom = bounds.bottom;\n        // eslint-disable-next-line\n        if (!(right + tx <= width - 3 && left + tx >= 1 && bottom + ty <= height - 3 && top_1 + ty >= 1)) {\n          var txNew = 0;\n          var tyNew = 0;\n          if (!(right <= width - 3)) {\n            txNew = width - right - 3;\n          }\n          if (!(left >= 1)) {\n            txNew = txNew - left + 1;\n          }\n          if (!(bottom <= height - 3)) {\n            tyNew = height - bottom - 3;\n          }\n          if (!(top_1 >= 1)) {\n            tyNew = tyNew - top_1 + 1;\n          }\n          if (txNew !== 0) {\n            tx = txNew;\n          }\n          if (tyNew !== 0) {\n            ty = tyNew;\n          }\n        }\n      }\n    }\n    return {\n      tx: tx,\n      ty: ty\n    };\n  };\n  /**\n   * @private\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {number} pageIndex - Specified the page index value.\n   * @param {Rect} nodeBounds - Specified the node bounds value.\n   * @param {boolean} isStamp - Specified the annotation is stamp or not.\n   * @param {boolean} isSkip - Specified the annotaion is skip or not.\n   * @returns {boolean} - Returns true or false.\n   */\n  // eslint-disable-next-line max-len\n  Drawing.prototype.checkBoundaryConstraints = function (tx, ty, pageIndex, nodeBounds, isStamp, isSkip) {\n    var selectorBounds = !nodeBounds ? this.pdfViewer.selectedItems.wrapper.bounds : undefined;\n    var bounds = nodeBounds;\n    // eslint-disable-next-line\n    var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n    var heightDifference = 1;\n    if (canvas) {\n      var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n      var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n      var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n      var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n      var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n      var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n      if (isStamp) {\n        heightDifference = 50;\n        if (this.pdfViewer.viewerBase.eventArgs && this.pdfViewer.viewerBase.eventArgs.source) {\n          if (this.RestrictStamp(this.pdfViewer.viewerBase.eventArgs.source)) {\n            return false;\n          }\n        }\n      }\n      if (right <= width - 3 || left >= 1 && bottom <= height - 3 && top_2 >= heightDifference || isSkip) {\n        return true;\n      }\n    }\n    return false;\n  };\n  // eslint-disable-next-line\n  Drawing.prototype.RestrictStamp = function (source) {\n    // eslint-disable-next-line max-len\n    if (source && source.pageIndex !== undefined && this.pdfViewer.viewerBase.activeElements && source.pageIndex !== this.pdfViewer.viewerBase.activeElements.activePageID) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @private\n   * @param {DrawingElement} shapeElement - Specified the shape element.\n   * @returns {Rect} - Returns the rectangle object.\n   */\n  Drawing.prototype.getShapeBounds = function (shapeElement) {\n    var shapeBounds = new Rect();\n    var shapeCorners = cornersPointsBeforeRotation(shapeElement);\n    var shapeMiddleLeft = shapeCorners.middleLeft;\n    var shapeTopCenter = shapeCorners.topCenter;\n    var shapeBottomCenter = shapeCorners.bottomCenter;\n    var shapeMiddleRight = shapeCorners.middleRight;\n    var shapeTopLeft = shapeCorners.topLeft;\n    var shapeTopRight = shapeCorners.topRight;\n    var shapeBottomLeft = shapeCorners.bottomLeft;\n    var shapeBottomRight = shapeCorners.bottomRight;\n    shapeElement.corners = {\n      topLeft: shapeTopLeft,\n      topCenter: shapeTopCenter,\n      topRight: shapeTopRight,\n      middleLeft: shapeMiddleLeft,\n      middleRight: shapeMiddleRight,\n      bottomLeft: shapeBottomLeft,\n      bottomCenter: shapeBottomCenter,\n      bottomRight: shapeBottomRight\n    };\n    if (shapeElement.rotateAngle !== 0 || shapeElement.parentTransform !== 0) {\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, shapeElement.rotateAngle + shapeElement.parentTransform, shapeElement.offsetX, shapeElement.offsetY);\n      shapeElement.corners.topLeft = shapeTopLeft = transformPointByMatrix(matrix, shapeTopLeft);\n      shapeElement.corners.topCenter = shapeTopCenter = transformPointByMatrix(matrix, shapeTopCenter);\n      shapeElement.corners.topRight = shapeTopRight = transformPointByMatrix(matrix, shapeTopRight);\n      shapeElement.corners.middleLeft = shapeMiddleLeft = transformPointByMatrix(matrix, shapeMiddleLeft);\n      shapeElement.corners.middleRight = shapeMiddleRight = transformPointByMatrix(matrix, shapeMiddleRight);\n      shapeElement.corners.bottomLeft = shapeBottomLeft = transformPointByMatrix(matrix, shapeBottomLeft);\n      shapeElement.corners.bottomCenter = shapeBottomCenter = transformPointByMatrix(matrix, shapeBottomCenter);\n      shapeElement.corners.bottomRight = shapeBottomRight = transformPointByMatrix(matrix, shapeBottomRight);\n      //Set corners based on rotate angle\n    }\n    shapeBounds = Rect.toBounds([shapeTopLeft, shapeTopRight, shapeBottomLeft, shapeBottomRight]);\n    shapeElement.corners.left = shapeBounds.left;\n    shapeElement.corners.right = shapeBounds.right;\n    shapeElement.corners.top = shapeBounds.top;\n    shapeElement.corners.bottom = shapeBounds.bottom;\n    shapeElement.corners.center = shapeBounds.center;\n    shapeElement.corners.width = shapeBounds.width;\n    shapeElement.corners.height = shapeBounds.height;\n    return shapeBounds;\n  };\n  /**\n   * @private\n   * @param {number} x - Specified the x value.\n   * @param {number} y - Specified the y value.\n   * @param {number} w - Specified the w value.\n   * @param {number} h - Specified the h value.\n   * @param {number} angle - Specified the angle value.\n   * @param {number} offsetX - Specified the offset x value.\n   * @param {number} offsetY - Specified the offset y value.\n   * @param {PointModel} cornerPoint - Specified the corner point value.\n   * @returns {PointModel} - Returns the point model.\n   */\n  Drawing.prototype.getShapePoint = function (x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivotPoint = {\n      x: 0,\n      y: 0\n    };\n    var transformMatrix = identityMatrix();\n    rotateMatrix(transformMatrix, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n      case 1:\n        switch (cornerPoint.y) {\n          case 1:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w,\n              y: y + h\n            });\n            break;\n          case 0:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w,\n              y: y\n            });\n            break;\n          case 0.5:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w,\n              y: y + h / 2\n            });\n            break;\n        }\n        break;\n      case 0:\n        switch (cornerPoint.y) {\n          case 0.5:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x,\n              y: y + h / 2\n            });\n            break;\n          case 1:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x,\n              y: y + h\n            });\n            break;\n          case 0:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x,\n              y: y\n            });\n            break;\n        }\n        break;\n      case 0.5:\n        switch (cornerPoint.y) {\n          case 0:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w / 2,\n              y: y\n            });\n            break;\n          case 0.5:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w / 2,\n              y: y + h / 2\n            });\n            break;\n          case 1:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w / 2,\n              y: y + h\n            });\n            break;\n        }\n        break;\n    }\n    return {\n      x: pivotPoint.x,\n      y: pivotPoint.y\n    };\n  };\n  /**\n   * @private\n   * @param {string} endPoint - Specified the end point value.\n   * @param {IElement} obj - Specified the annotaion object.\n   * @param {PointModel} point - Specified the annotation points.\n   * @param {PointModel} segment - Specified the annotaion segment.\n   * @param {IElement} target - Specified the target element.\n   * @param {string} targetPortId - Specified the target port id.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @returns {boolean} - Returns true or false.\n   */\n  // eslint-disable-next-line\n  Drawing.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId, currentSelector) {\n    var selectorModel;\n    var connector;\n    var node;\n    var tx;\n    var segmentPoint;\n    var ty;\n    var index;\n    // eslint-disable-next-line\n    var checkBezierThumb = false;\n    if (obj instanceof Selector) {\n      selectorModel = obj;\n      connector = selectorModel.annotations[0];\n    } else {\n      connector = obj;\n    }\n    point = {\n      x: point.x / this.pdfViewer.viewerBase.getZoomFactor(),\n      y: point.y / this.pdfViewer.viewerBase.getZoomFactor()\n    };\n    if (this.checkBoundaryConstraints(undefined, undefined, connector.pageIndex, connector.wrapper.bounds)) {\n      if (connector.shapeAnnotationType === 'Distance') {\n        var leader = isLeader(connector, endPoint);\n        if (endPoint === 'Leader0') {\n          if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n            connector.vertexPoints[0].x = point.x;\n            connector.vertexPoints[0].y = point.y;\n          } else {\n            tx = point.x - leader.point.x;\n            ty = point.y - leader.point.y;\n            connector.vertexPoints[0].x += tx;\n            connector.vertexPoints[0].y += ty;\n          }\n        } else if (endPoint === 'Leader1') {\n          var length_2 = connector.vertexPoints.length - 1;\n          if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n            connector.vertexPoints[parseInt(length_2.toString(), 10)].x = point.x;\n            connector.vertexPoints[parseInt(length_2.toString(), 10)].y = point.y;\n          } else {\n            tx = point.x - leader.point.x;\n            ty = point.y - leader.point.y;\n            connector.vertexPoints[parseInt(length_2.toString(), 10)].x += tx;\n            connector.vertexPoints[parseInt(length_2.toString(), 10)].y += ty;\n          }\n        } else {\n          // eslint-disable-next-line\n          var angle = Point.findAngle(connector.sourcePoint, connector.targetPoint);\n          // eslint-disable-next-line\n          var center = obj.wrapper.children[0].bounds.center;\n          // eslint-disable-next-line\n          var matrix = identityMatrix();\n          rotateMatrix(matrix, -angle, center.x, center.y);\n          // eslint-disable-next-line\n          var rotatedPoint = transformPointByMatrix(matrix, {\n            x: point.x,\n            y: point.y\n          });\n          if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n            // eslint-disable-next-line\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -angle, center.x, center.y);\n            // eslint-disable-next-line\n            var rotatedPoint1 = transformPointByMatrix(matrix, connector.vertexPoints[0]);\n            // eslint-disable-next-line\n            var rotatedPoint2 = transformPointByMatrix(matrix, connector.vertexPoints[connector.vertexPoints.length - 1]);\n            ty = rotatedPoint.y - rotatedPoint1.y;\n            if (connector.leaderHeight === 0 && connector.leaderHeight != null) {\n              connector.leaderHeight = this.pdfViewer.distanceSettings.leaderLength;\n            } else {\n              connector.leaderHeight += ty;\n              rotatedPoint1.y += ty;\n              rotatedPoint2.y += ty;\n              // eslint-disable-next-line\n              var matrix = identityMatrix();\n              rotateMatrix(matrix, angle, center.x, center.y);\n              connector.vertexPoints[0] = transformPointByMatrix(matrix, rotatedPoint1);\n              connector.vertexPoints[connector.vertexPoints.length - 1] = transformPointByMatrix(matrix, rotatedPoint2);\n            }\n          }\n        }\n      } else if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n        var i = Number(endPoint.split('_')[1]);\n        tx = point.x - connector.vertexPoints[parseInt(i.toString(), 10)].x;\n        ty = point.y - connector.vertexPoints[parseInt(i.toString(), 10)].y;\n        connector.vertexPoints[parseInt(i.toString(), 10)].x += tx;\n        connector.vertexPoints[parseInt(i.toString(), 10)].y += ty;\n        if (connector.vertexPoints.length > 2 && obj.measureType !== 'Perimeter') {\n          if (parseFloat(endPoint.split('_')[1]) === 0) {\n            connector.vertexPoints[connector.vertexPoints.length - 1].x += tx;\n            connector.vertexPoints[connector.vertexPoints.length - 1].y += ty;\n          } else if (parseFloat(endPoint.split('_')[1]) === connector.vertexPoints.length - 1) {\n            connector.vertexPoints[0].x += tx;\n            connector.vertexPoints[0].y += ty;\n          }\n        }\n      }\n      this.nodePropertyChange(connector, {\n        vertexPoints: connector.vertexPoints\n      });\n      this.renderSelector(connector.pageIndex, currentSelector);\n    }\n    this.pdfViewer.renderDrawing();\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the y value.\n   * @param {number} i - Specified the index value.\n   * @returns {boolean} - Returns true or false.\n   */\n  Drawing.prototype.dragSourceEnd = function (obj, tx, ty, i) {\n    // eslint-disable-next-line\n    var connector = this.pdfViewer.nameTable[obj.id];\n    connector.vertexPoints[parseInt(i.toString(), 10)].x += tx;\n    connector.vertexPoints[parseInt(i.toString(), 10)].y += ty;\n    this.pdfViewer.renderDrawing();\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n   * @param {PointModel[]} points - Specified the points value.\n   * @returns {void}\n   */\n  Drawing.prototype.updateConnector = function (connector, points) {\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.vertexPoints = points;\n    updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    var srcPoint = connector.sourcePoint;\n    var anglePoint = connector.vertexPoints;\n    //  points = this.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    for (var i = 0; i < connector.wrapper.children.length; i++) {\n      element = connector.wrapper.children[parseInt(i.toString(), 10)];\n      if (connector.shapeAnnotationType !== 'Polygon') {\n        if (element.id.indexOf('srcDec') > -1) {\n          updateDecoratorElement(connector, element, points[0], anglePoint[1], true);\n        }\n        targetPoint = connector.targetPoint;\n        if (element.id.indexOf('tarDec') > -1) {\n          updateDecoratorElement(connector, element, points[points.length - 1], anglePoint[anglePoint.length - 2], false);\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {Object} - Returns the object.\n   */\n  Drawing.prototype.copy = function () {\n    var annotationSettings;\n    if (!isNullOrUndefined(this.pdfViewer.annotationModule)) {\n      annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(this.pdfViewer.selectedItems.annotations[0]);\n    }\n    if ((this.pdfViewer.formDesignerModule && !this.pdfViewer.formDesigner.isPropertyDialogOpen || this.pdfViewer.annotationModule) && (this.pdfViewer.designerMode || this.pdfViewer.enableAnnotation) && (this.pdfViewer.selectedItems.formFields.length !== 0 || this.pdfViewer.selectedItems.annotations.length !== 0 && !isNullOrUndefined(annotationSettings) && !annotationSettings.isLock)) {\n      this.pdfViewer.clipboardData.pasteIndex = 1;\n      this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n    }\n    var isSearchboxDialogOpen;\n    var searchBoxId = document.getElementById(this.pdfViewer.element.id + \"_search_box\");\n    if (searchBoxId) {\n      isSearchboxDialogOpen = searchBoxId.style.display !== \"none\";\n    }\n    if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isPropertyDialogOpen || isSearchboxDialogOpen) {\n      this.pdfViewer.clipboardData.clipObject = {};\n    }\n    return this.pdfViewer.clipboardData.clipObject;\n  };\n  /**\n   * @private\n   * @returns {Object[]} - Returns the object array.\n   */\n  Drawing.prototype.copyObjects = function () {\n    var selectedItems = [];\n    var obj = [];\n    this.pdfViewer.clipboardData.childTable = {};\n    if (this.pdfViewer.selectedItems.annotations.length > 0) {\n      selectedItems = this.pdfViewer.selectedItems.annotations;\n      for (var j = 0; j < selectedItems.length; j++) {\n        var element = cloneObject(selectedItems[parseInt(j.toString(), 10)]);\n        obj.push(element);\n      }\n    }\n    if (this.pdfViewer.selectedItems.formFields.length > 0) {\n      selectedItems = this.pdfViewer.selectedItems.formFields;\n      for (var j = 0; j < selectedItems.length; j++) {\n        var element = cloneObject(selectedItems[parseInt(j.toString(), 10)]);\n        obj.push(element);\n      }\n    }\n    if (this.pdfViewer.clipboardData.pasteIndex === 0) {\n      for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n        var item = selectedItems_1[_i];\n        // eslint-disable-next-line\n        if (this.pdfViewer.nameTable[item.id]) {\n          if (!item.formFieldAnnotationType) {\n            if (item.annotName) this.pdfViewer.annotationModule.deleteAnnotationById(item.annotName);else this.pdfViewer.annotationModule.deleteAnnotation();\n          } else {\n            this.pdfViewer.clearSelection(item.pageIndex);\n            this.pdfViewer.formDesignerModule.deleteFormField(item.id);\n          }\n        }\n      }\n      //this.endGroupAction();\n    }\n    this.sortByZIndex(obj, 'zIndex');\n    return obj;\n  };\n  Drawing.prototype.getNewObject = function (obj) {\n    var newObj;\n    var newobjs = [];\n    this.pdfViewer.clipboardData.pasteIndex = 1;\n    for (var i = 0; i < obj.length; i++) {\n      newObj = cloneObject(obj[parseInt(i.toString(), 10)]);\n      newobjs.push(newObj);\n    }\n    return newobjs;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel[]} obj - Specified the annotation object.\n   * @param {number} index - Specified the annotation index.\n   * @returns {void}\n   */\n  Drawing.prototype.paste = function (obj, index) {\n    var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n    var fieldId;\n    if (obj || this.pdfViewer.clipboardData.clipObject) {\n      var copiedItems = obj ? this.getNewObject(obj) : this.pdfViewer.clipboardData.clipObject;\n      if (copiedItems) {\n        var objectTable = {};\n        if (this.pdfViewer.clipboardData.pasteIndex !== 0) {\n          this.pdfViewer.clearSelection(index);\n        }\n        for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n          var copy = copiedItems_1[_i];\n          fieldId = copy.id;\n          copy.id += randomId();\n          var fieldName = this.splitFormFieldName(copy);\n          var maxNumber = 0; // this.pdfViewer.formFieldCollection.length;\n          if (this.pdfViewer.formDesigner) {\n            this.pdfViewer.formDesigner.setFormFieldIndex();\n            maxNumber = this.pdfViewer.formDesigner.formFieldIndex;\n            copy.name = fieldName + maxNumber;\n          }\n          // eslint-disable-next-line\n          objectTable[copy.id] = copy;\n        }\n        for (var j = 0; j < copiedItems.length; j++) {\n          var copy = copiedItems[parseInt(j.toString(), 10)];\n          var pageDiv = this.pdfViewer.viewerBase.getElement('_pageDiv_' + copy.pageIndex);\n          // eslint-disable-next-line\n          var events = event;\n          if (events && !events.clientX && !events.clientY) {\n            events = {\n              clientX: this.pdfViewer.viewerBase.mouseLeft,\n              clientY: this.pdfViewer.viewerBase.mouseTop\n            };\n          }\n          if (isBlazor()) {\n            events = this.pdfViewer.viewerBase.mouseDownEvent;\n          }\n          if (isLineShapes(copy)) {\n            this.calculateCopyPosition(copy, pageDiv, events);\n          } else {\n            if (pageDiv) {\n              var pageCurrentRect = pageDiv.getBoundingClientRect();\n              copy.bounds.x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n              copy.bounds.y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n            }\n          }\n          var newNode = cloneObject(copy);\n          if (this.pdfViewer.viewerBase.contextMenuModule.previousAction !== 'Cut') {\n            newNode.id += randomId();\n            if (this.pdfViewer.annotationModule && newNode.shapeAnnotationType !== 'HandWrittenSignature') {\n              newNode.annotName = newNode.id;\n              // eslint-disable-next-line max-len\n              this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], false);\n            }\n            if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n              this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n            }\n            if (!newNode.formFieldAnnotationType) {\n              this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(false), null, newNode, 'Addition', '', newNode, newNode);\n            }\n          } else {\n            if (this.pdfViewer.annotationModule) {\n              // eslint-disable-next-line max-len\n              this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], true);\n            }\n            if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n              this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n            }\n          }\n          var addedAnnot = this.add(newNode);\n          if (this.pdfViewer.formDesigner && addedAnnot.formFieldAnnotationType && this.pdfViewer.annotation) {\n            this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(true), null, addedAnnot, 'Addition', '', addedAnnot, addedAnnot);\n          }\n          if ((newNode.shapeAnnotationType === 'FreeText' || newNode.enableShapeLabel) && addedAnnot) {\n            this.nodePropertyChange(addedAnnot, {});\n          }\n          if (addedAnnot.formFieldAnnotationType && addedAnnot.pageIndex === index) {\n            this.pdfViewer.formFieldCollection.push(addedAnnot);\n            // eslint-disable-next-line max-len\n            var formField = {\n              id: addedAnnot.id,\n              name: addedAnnot.name,\n              value: addedAnnot.value,\n              type: addedAnnot.formFieldAnnotationType,\n              isReadOnly: addedAnnot.isReadonly,\n              fontFamily: addedAnnot.fontFamily,\n              // eslint-disable-next-line max-len\n              fontSize: addedAnnot.fontSize,\n              fontStyle: addedAnnot.fontStyle,\n              color: addedAnnot.color,\n              backgroundColor: addedAnnot.backgroundColor,\n              // eslint-disable-next-line max-len\n              alignment: addedAnnot.alignment,\n              visibility: addedAnnot.visibility,\n              maxLength: addedAnnot.maxLength,\n              isRequired: addedAnnot.isRequired,\n              // eslint-disable-next-line max-len\n              isPrint: addedAnnot.isPrint,\n              isSelected: addedAnnot.isSelected,\n              isChecked: addedAnnot.isChecked,\n              tooltip: addedAnnot.tooltip,\n              bounds: addedAnnot.bounds,\n              thickness: addedAnnot.thickness,\n              borderColor: addedAnnot.borderColor,\n              signatureIndicatorSettings: addedAnnot.signatureIndicatorSettings,\n              insertSpaces: addedAnnot.insertSpaces,\n              isMultiline: addedAnnot.isMultiline,\n              isTransparent: addedAnnot.isTransparent,\n              options: addedAnnot.options,\n              pageIndex: addedAnnot.pageIndex,\n              pageNumber: addedAnnot.pageNumber,\n              rotateAngle: addedAnnot.rotateAngle,\n              signatureType: addedAnnot.signatureType,\n              zIndex: addedAnnot.zIndex,\n              selectedIndex: addedAnnot.selectedIndex\n            };\n            if (addedAnnot.options && addedAnnot.options.length > 0) {\n              formField.options = addedAnnot.options;\n            }\n            this.pdfViewer.formFieldCollections.push(formField);\n            // eslint-disable-next-line max-len\n            this.pdfViewer.formDesigner.drawHTMLContent(addedAnnot.formFieldAnnotationType, addedAnnot.wrapper.children[0], addedAnnot, addedAnnot.pageIndex, this.pdfViewer, fieldId);\n          }\n          this.pdfViewer.select([newNode.id], this.pdfViewer.annotationSelectorSettings);\n          if (!addedAnnot.formFieldAnnotationType) {\n            this.pdfViewer.annotationModule.triggerAnnotationAddEvent(newNode);\n          }\n          ;\n        }\n      }\n      this.pdfViewer.renderDrawing(undefined, index);\n      this.pdfViewer.clipboardData.pasteIndex++;\n    }\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n  };\n  Drawing.prototype.splitFormFieldName = function (obj) {\n    // eslint-disable-next-line\n    var field = null;\n    if (obj) {\n      switch (obj.formFieldAnnotationType) {\n        case 'Textbox':\n          field = \"Textbox\";\n          break;\n        case 'PasswordField':\n          field = \"Password\";\n          break;\n        case 'Checkbox':\n          field = \"Check Box\";\n          break;\n        case 'RadioButton':\n          field = \"Radio Button\";\n          break;\n        case 'DropdownList':\n          field = \"Dropdown\";\n          break;\n        case 'ListBox':\n          field = \"List Box\";\n          break;\n        case 'SignatureField':\n          field = \"Signature\";\n          break;\n        case 'InitialField':\n          field = \"Initial\";\n          break;\n      }\n    }\n    return field;\n  };\n  Drawing.prototype.calculateCopyPosition = function (copy, pageDiv, events) {\n    var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    for (var i = 0; i < copy.vertexPoints.length; i++) {\n      if (pageDiv) {\n        if (i === 0) {\n          var pageCurrentRect = pageDiv.getBoundingClientRect();\n          x1 = copy.vertexPoints[parseInt(i.toString(), 10)].x;\n          y1 = copy.vertexPoints[parseInt(i.toString(), 10)].y;\n          copy.vertexPoints[parseInt(i.toString(), 10)].x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n          copy.vertexPoints[parseInt(i.toString(), 10)].y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n          x2 = copy.vertexPoints[parseInt(i.toString(), 10)].x;\n          y2 = copy.vertexPoints[parseInt(i.toString(), 10)].y;\n        } else {\n          copy.vertexPoints[parseInt(i.toString(), 10)].x += x2 - x1;\n          copy.vertexPoints[parseInt(i.toString(), 10)].y += y2 - y1;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the annotaion index.\n   * @returns {void}\n   */\n  Drawing.prototype.cut = function (index) {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n    if (this.pdfViewer.annotationModule) {\n      this.pdfViewer.annotationModule.removedAnnotationCollection = [];\n    }\n    if ((this.pdfViewer.formDesignerModule && !this.pdfViewer.formDesigner.isPropertyDialogOpen || this.pdfViewer.selectedItems.annotations.length > 0) && (this.pdfViewer.designerMode || this.pdfViewer.selectedItems.annotations.length > 0) && (this.pdfViewer.selectedItems.formFields.length !== 0 || this.pdfViewer.selectedItems.annotations.length !== 0)) {\n      this.pdfViewer.clipboardData.pasteIndex = 0;\n      this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n      this.pdfViewer.renderDrawing(undefined, index);\n      this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    }\n    var isSearchboxDialogOpen;\n    var searchBoxId = document.getElementById(this.pdfViewer.element.id + \"_search_box\");\n    if (searchBoxId) {\n      isSearchboxDialogOpen = searchBoxId.style.display !== \"none\";\n    }\n    if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isPropertyDialogOpen || isSearchboxDialogOpen) {\n      this.pdfViewer.clipboardData.clipObject = {};\n    }\n  };\n  /**\n   * @private\n   * @param {Object[]} nodeArray - Specified the node array.\n   * @param {string} sortID - Specified the sort id.\n   * @returns {Object[]} - Returns the node array.\n   */\n  Drawing.prototype.sortByZIndex = function (nodeArray, sortID) {\n    var id = sortID ? sortID : 'zIndex';\n    nodeArray = nodeArray.sort(function (a, b) {\n      // eslint-disable-next-line\n      return a[id] - b[id];\n    });\n    return nodeArray;\n  };\n  return Drawing;\n}();\nexport { Drawing };","map":{"version":3,"names":["LineTool","ZOrderPageTable","PdfAnnotationBase","PdfFormFieldBase","Rect","Point","identityMatrix","rotateMatrix","getDiagramElement","ThumbsConstraints","scaleMatrix","cornersPointsBeforeRotation","ImageElement","DrawingElement","PathElement","createMeasureElements","randomId","Size","transformPointByMatrix","RotateTransform","TextElement","Canvas","refreshDiagramElements","DrawingRenderer","Selector","SvgRenderer","isLineShapes","setElementStype","findPointsLength","getBaseShapeAttributes","isLeader","cloneObject","getConnectorPoints","updateSegmentElement","getSegmentElement","updateDecoratorElement","getDecoratorElement","clipDecorators","initDistanceLabel","initLeaders","initLeader","getPolygonPath","initPerimeterLabel","isNullOrUndefined","isBlazor","Browser","DiagramHtmlElement","Drawing","viewer","isDynamicStamps","pdfViewer","renderer","svgRenderer","prototype","renderLabels","annotations","i","length","annotation","parseInt","toString","initObject","createNewZindexTable","pageId","zIndexTable","zIndex","push","getPageTable","undefined","notFound","setZIndex","index","obj","pageIndex","pageTable","objects","index_1","tabelLength","initNode","initLine","wrapper","measure","arrange","desiredSize","nameTable","id","formFieldAnnotationType","nodePropertyChange","bounds","width","height","canvas","initContainer","content","children","init","rotateAngle","stampAnnotationModule","updateSessionStorage","pathContent","basicElement","isStamp","annotationSettings","annotationModule","findAnnotationSettings","annotationMaxHeight","annotationMaxWidth","annotationMinHeight","annotationMinWidth","minWidth","maxWidth","minHeight","maxHeight","isAnnotationSet","initFormFields","initAnnotationObject","relativeMode","shapeAnnotationType","horizontalAlignment","viewerBase","drawSignatureWithTool","style","strokeWidth","isRectElement","verticalAlignment","htmlContent","data","enableShapeLabel","textLabel","textElement","labelContent","color","fontColor","strokeColor","labelBorderColor","fill","labelFillColor","fontSize","fontFamily","opacity","labelOpacity","thickness","vertexPoints","annotationAddMode","isDynamicStamp","cornerRadius","stampFillColor","stampStrokeColor","textele_1","italic","bold","fillColor","rotateValue","dynamicText","margin","left","bottom","setOffsetWithRespectToBounds","pathContent1","content1","pathContent11","source","transform","Self","setNodePosition","textele","x","y","angle","radiusTextEle","length_1","enableImportAnnotationMeasurement","notes","measureAnnotationModule","setConversion","pixelToPointFactor","pathContent2","rectElements","signatureText","textAlign","rectElement","freeTextEle","toLowerCase","font","isBold","isItalic","isUnderline","textDecoration","isStrikeout","right","top","freeTextSettings","enableAutoFit","textWrapping","node","offsetX","offsetY","trasPoint","center","matrix","rotatedPoint","newPoint1","bpmnElement","container","segment","srcDecorator","targetDecorator","sourcePoint","targetPoint","segments","points","leaders","labels","measureType","findAngle","toBounds","pivot","anglePoints","accessContent","add","allowServerDataBind","allowServerDataBinding","enableServerDataBinding","formDesignerModule","formFields","remove","split","splice","getPageObjects","j","refreshCanvasDiagramLayer","renderDrawing","element","formFieldCollection","indexOf","formFieldCollections","inputField","document","getElementById","field","name","value","fontStyle","backgroundColor","alignment","isReadonly","visibility","maxLength","isRequired","isPrint","rotation","tooltip","options","isChecked","isSelected","fireFormFieldRemoveEvent","removeFieldsFromAnnotationCollections","diagramLayer","objectId","zoom","getZoomFactor","ctx","getContext","lineCap","lineJoin","lineWidth","devicePixelRatio_1","getWindowDevicePixelRatio","zoomRatio","isDevice","setTransform","clearRect","renderElement","clearHighlighter","adornerSvg","getAdornerLayerSvg","highlighter","parentNode","removeChild","getSelectorElement","diagramId","adornerLayer","adornerLayerSvg","diagramElement","elementcoll","getElementsByClassName","clearSelectorLayer","selectionRect","adornerSvgLayer","childNodes","child","renderSelector","select","currentSelector","helper","isSelect","size","selectorModel","selectedItems","actualSize","selectorElement","designerMode","renderResizeHandle","thumbsConstraints","isFormFieldSelect","isFormFieldMouseDown","isFormFieldMouseMove","fireFormFieldSelectEvent","isProgrammaticSelection","constraints","renderEndPointHandle","scale","tx","ty","tool","isSignature","isNewSignatureAdded","selectSignature","signatureName","annotName","isAddComment","isAnnotationSelect","isAnnotationMouseDown","isAnnotationMouseMove","isInkAdded","isNewStamp","annotationSelect","rotate","checkBoundaryConstraints","concat","rotateObjects","parent","includeParent","_i","objects_1","newOffset","getParentSvg","targetElement","shownBorder","isSelectInAllowed","allowedInteraction","updateAnnotationAllowedInteractions","isLock","checkIsLockSettings","includes","renderBorder","selector","enableNode","isBorderTickness","isSwimlane","isSticky","shapeType","annotationSelector","JSON","parse","borderColor","selectionBorderColor","stroke","selectionBorderThickness","lineDash","selectorLineDashArray","dashArray","formField","isFormFieldSign","checkSignatureFormField","getSignBorder","getBorderSelector","class","checkBorder","parentSvg","drawRectangle","type","handWrittenSignatureSettings","annotationSelectorSettings","inkAnnotationSettings","rectangleSettings","borderColor_1","lineDash_1","borderColor_2","lineDash_2","circleSettings","borderColor_3","lineDash_3","radiusSettings","borderColor_4","lineDash_4","borderColor_5","lineDash_5","stickyNotesSettings","borderColor_6","lineDash_6","stampSettings","borderColor_7","lineDash_7","renderCircularHandle","cx","cy","visible","enableSelector","t","connected","canMask","ariaLabel","count","className","radius","newPoint","parentTransform","getResizerColors","getShapeSize","centerX","centerY","getShape","drawCircle","resizerSize","lineSettings","arrowSettings","distanceSettings","polygonSettings","perimeterSettings","areaSettings","volumeSettings","resizerShape","resizerBorderColor","resizerFillColor","renderRotateThumb","selectorConstraints","pivotX","pivotY","Rotate","circleHandle","querySelector","setAttribute","currentZoom","nodeConstraints","isPath","isFreeText","renderPivotLine","nodeWidth","nodeHeight","allowPermission","getAllowedInteractions","resizerLocation","getResizerLocation","isNodeShape","ResizeNorthWest","ResizeNorthEast","ResizeSouthWest","ResizeSouthEast","ResizeNorth","ResizeSouth","ResizeWest","ResizeEast","startPoint","endPoint","drawLine","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","leaderCount","leaderHeight","initSelectorWrapper","objArray","multipleSelection","preventUpdate","checkAllowedInteractions","dragSelectedObjects","drag","_a","_b","_c","dragAnnotation","tempNode","elements","oldValues","newDiff","moveInsideViewer","nodes","dragControlPoint","measureChildren","segmentNumber","connector","updateEndPoint","actualObject","existingBounds","outerBounds","existingInnerBounds","updateConnector","update","i_1","names","ratio","heightRatio","fontSizeCalculation","isDirt","sourceDecoraterShapes","taregetDecoraterShapes","i_2","textNodes","i_3","i_4","i_5","i_6","i_7","i_8","borderDashArray","strokeDashArray","borderStyle","author","modifiedDate","subject","setLineDistance","path","canMeasurePath","i_9","childElement","i_10","stickyNotesAnnotationModule","textFromCommentPanel","i_11","childNodeHeight","dy","heightDiff","contString","childHeight","text","boundsWidth","context","textwidth","newsize","measureText","leader","node1","scaleSelectedItems","sx","sy","scaleAnnotation","scaleObject","sw","sh","refObject","isResize","bound","Math","max","refWrapper","newPosition","refPoint","getShapePoint","slice","clientWidth","clientHeight","top_1","txNew","tyNew","nodeBounds","isSkip","selectorBounds","heightDifference","top_2","eventArgs","RestrictStamp","activeElements","activePageID","getShapeBounds","shapeElement","shapeBounds","shapeCorners","shapeMiddleLeft","middleLeft","shapeTopCenter","topCenter","shapeBottomCenter","bottomCenter","shapeMiddleRight","middleRight","shapeTopLeft","topLeft","shapeTopRight","topRight","shapeBottomLeft","bottomLeft","shapeBottomRight","bottomRight","corners","w","h","cornerPoint","pivotPoint","transformMatrix","dragConnectorEnds","point","target","targetPortId","segmentPoint","checkBezierThumb","length_2","rotatedPoint1","rotatedPoint2","leaderLength","Number","parseFloat","dragSourceEnd","tarDecorator","srcPoint","anglePoint","copy","formDesigner","isPropertyDialogOpen","enableAnnotation","clipboardData","pasteIndex","clipObject","copyObjects","isSearchboxDialogOpen","searchBoxId","display","childTable","selectedItems_1","item","deleteAnnotationById","deleteAnnotation","clearSelection","deleteFormField","sortByZIndex","getNewObject","newObj","newobjs","paste","zoomfactor","fieldId","copiedItems","objectTable","copiedItems_1","fieldName","splitFormFieldName","maxNumber","setFormFieldIndex","formFieldIndex","pageDiv","getElement","events","event","clientX","clientY","mouseLeft","mouseTop","mouseDownEvent","calculateCopyPosition","pageCurrentRect","getBoundingClientRect","newNode","contextMenuModule","previousAction","updateAnnotationCollection","signatureModule","storeSignatureData","addAction","getActivePage","addedAnnot","isReadOnly","signatureIndicatorSettings","insertSpaces","isMultiline","isTransparent","pageNumber","signatureType","selectedIndex","drawHTMLContent","triggerAnnotationAddEvent","x1","y1","x2","y2","cut","removedAnnotationCollection","nodeArray","sortID","sort","a","b"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing.js"],"sourcesContent":["import { LineTool } from '../index';\nimport { ZOrderPageTable, PdfAnnotationBase, PdfFormFieldBase } from './pdf-annotation';\nimport { Rect, Point, identityMatrix, rotateMatrix, getDiagramElement, ThumbsConstraints, scaleMatrix, cornersPointsBeforeRotation, ImageElement } from '@syncfusion/ej2-drawings';\nimport { DrawingElement } from '@syncfusion/ej2-drawings';\nimport { PathElement } from '@syncfusion/ej2-drawings';\nimport { createMeasureElements } from '@syncfusion/ej2-drawings';\nimport { randomId } from '@syncfusion/ej2-drawings';\nimport { Size, transformPointByMatrix, RotateTransform, TextElement } from '@syncfusion/ej2-drawings';\nimport { Canvas, refreshDiagramElements, DrawingRenderer } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { SvgRenderer } from '@syncfusion/ej2-drawings';\nimport { isLineShapes, setElementStype, findPointsLength, getBaseShapeAttributes, isLeader, cloneObject } from './drawing-util';\nimport { getConnectorPoints, updateSegmentElement, getSegmentElement, updateDecoratorElement, getDecoratorElement, clipDecorators, initDistanceLabel, initLeaders, initLeader, getPolygonPath, initPerimeterLabel } from './connector-util';\nimport { isNullOrUndefined, isBlazor, Browser } from '@syncfusion/ej2-base';\nimport { DiagramHtmlElement } from './html-element';\n/**\n * Renderer module is used to render basic diagram elements\n *\n * @hidden\n */\nvar Drawing = /** @class */ (function () {\n    function Drawing(viewer) {\n        this.isDynamicStamps = false;\n        this.pdfViewer = viewer;\n        this.renderer = new DrawingRenderer('this.pdfViewer.element.id', false);\n        this.svgRenderer = new SvgRenderer();\n    }\n    /**\n     * @private\n     * @param {PdfViewer} viewer - Specified the pdfViewer element.\n     * @returns {void}\n     */\n    Drawing.prototype.renderLabels = function (viewer) {\n        var annotations = viewer.annotations;\n        if (annotations) {\n            for (var i = 0; i < annotations.length; i++) {\n                var annotation = annotations[parseInt(i.toString(), 10)];\n                this.initObject(annotation);\n            }\n        }\n    };\n    Drawing.prototype.createNewZindexTable = function (pageId) {\n        var zIndexTable = new ZOrderPageTable();\n        this.pdfViewer.zIndex++;\n        zIndexTable.pageId = this.pdfViewer.zIndex;\n        this.pdfViewer.zIndexTable.push(zIndexTable);\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} pageId - Specified the page Id.\n     * @returns {ZOrderPageTable} - Returns the ZOrder page table.\n     */\n    Drawing.prototype.getPageTable = function (pageId) {\n        var zIndexTable;\n        if (this.pdfViewer.zIndexTable.length !== undefined) {\n            var notFound = true;\n            for (var i = 0; i < this.pdfViewer.zIndexTable.length; i++) {\n                if (this.pdfViewer.zIndexTable[parseInt(i.toString(), 10)].pageId === pageId) {\n                    notFound = false;\n                    zIndexTable = this.pdfViewer.zIndexTable[parseInt(i.toString(), 10)];\n                    break;\n                }\n            }\n            if (notFound) {\n                zIndexTable = this.createNewZindexTable(pageId);\n                zIndexTable.pageId = pageId;\n            }\n        }\n        else {\n            zIndexTable = this.createNewZindexTable(pageId);\n        }\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index value.\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.setZIndex = function (index, obj) {\n        if (obj.pageIndex !== undefined) {\n            var pageTable = this.getPageTable(obj.pageIndex);\n            if (obj.zIndex === -1) {\n                pageTable.zIndex++;\n                obj.zIndex = pageTable.zIndex;\n                pageTable.objects.push(obj);\n            }\n            else {\n                var index_1 = obj.zIndex;\n                var tabelLength = pageTable.objects.length;\n                obj.zIndex = tabelLength++;\n                pageTable.objects.push(obj);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel | PdfFormFieldBaseModel} - Returns the annotaion or form fields model.\n     */\n    Drawing.prototype.initObject = function (obj) {\n        //Move the common properties like zindex and id to an abstract class\n        this.setZIndex(this.pdfViewer.zIndex, obj);\n        createMeasureElements();\n        if (!isLineShapes(obj)) {\n            this.initNode(obj);\n        }\n        else {\n            this.initLine(obj);\n            obj.wrapper.measure(new Size(undefined, undefined));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n        }\n        if (obj.wrapper === null) {\n            //Init default wrapper\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.pdfViewer.nameTable[obj.id] = obj;\n        if (obj.formFieldAnnotationType) {\n            this.nodePropertyChange(obj, { bounds: { width: obj.bounds.width, height: obj.bounds.height } });\n        }\n        //Add some methodologies to add the children of group to name table\n        return obj;\n    };\n    Drawing.prototype.initNode = function (obj) {\n        var canvas = this.initContainer(obj);\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (!content) {\n            content = this.init(obj, canvas);\n        }\n        //canvas.children.push(content);\n        canvas.rotateAngle = obj.rotateAngle;\n        // eslint-disable-next-line max-len\n        canvas.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n        canvas.arrange(canvas.desiredSize);\n        if (this.isDynamicStamps) {\n            this.pdfViewer.annotation.stampAnnotationModule.updateSessionStorage(obj, null, 'dynamicStamp');\n            this.isDynamicStamps = false;\n        }\n    };\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @param {Container} canvas - Specified the canvas element.\n     * @returns {DrawingElement} - Returns the drawing element.\n     */\n    Drawing.prototype.init = function (obj, canvas) {\n        var content;\n        content = new DrawingElement();\n        var pathContent;\n        var basicElement;\n        var isStamp = false;\n        // eslint-disable-next-line\n        var annotationSettings = this.pdfViewer.annotationModule ? this.pdfViewer.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        var isAnnotationSet = false;\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            isAnnotationSet = true;\n        }\n        if (obj.formFieldAnnotationType) {\n            content = this.initFormFields(obj, content, canvas);\n        }\n        else {\n            // eslint-disable-next-line max-len\n            content = this.initAnnotationObject(obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight);\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (obj.shapeAnnotationType !== 'Stamp') {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            setElementStype(obj, content);\n            if (this.pdfViewer.viewerBase.drawSignatureWithTool && obj.shapeAnnotationType === 'SignatureText') {\n                content.style.strokeWidth = 0;\n            }\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.initFormFields = function (obj, content, canvas) {\n        switch (obj.formFieldAnnotationType) {\n            case 'Textbox':\n            case 'PasswordField':\n            case 'Checkbox':\n            case 'RadioButton':\n            case 'DropdownList':\n            case 'ListBox':\n            case 'SignatureField':\n            case 'InitialField':\n                // eslint-disable-next-line\n                var htmlContent = new DiagramHtmlElement();\n                content = htmlContent;\n                content.id = obj.id + '_content';\n                canvas.children.push(content);\n                break;\n        }\n        return content;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.initAnnotationObject = function (obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight) {\n        switch (obj.shapeAnnotationType) {\n            case 'Ellipse':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Path':\n                pathContent = new PathElement();\n                pathContent.data = obj.data;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'HandWrittenSignature':\n            case 'Ink':\n                pathContent = new PathElement();\n                pathContent.data = obj.data;\n                pathContent.style.strokeColor = obj.strokeColor;\n                pathContent.style.strokeWidth = obj.thickness;\n                pathContent.style.opacity = obj.opacity;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Polygon':\n                pathContent = new PathElement();\n                pathContent.data = getPolygonPath(obj.vertexPoints);\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Stamp':\n                isStamp = true;\n                this.isDynamicStamps = true;\n                if (obj && obj.annotationAddMode && (obj.annotationAddMode === 'Existing Annotation' || obj.annotationAddMode === 'Imported Annotation')) {\n                    obj.bounds.width = obj.bounds.width - 20;\n                    obj.bounds.height = obj.bounds.height - 20;\n                }\n                if (obj.isDynamicStamp) {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    var textele_1 = this.textElement(obj);\n                    textele_1 = new TextElement();\n                    textele_1.style.fontFamily = 'Helvetica';\n                    textele_1.style.fontSize = 14;\n                    textele_1.style.italic = true;\n                    textele_1.style.bold = true;\n                    textele_1.style.color = obj.fillColor;\n                    textele_1.rotateValue = undefined;\n                    textele_1.content = obj.dynamicText;\n                    textele_1.relativeMode = 'Point';\n                    textele_1.margin.left = 10;\n                    textele_1.margin.bottom = -7;\n                    textele_1.setOffsetWithRespectToBounds(0, 0.57, null);\n                    textele_1.relativeMode = 'Point';\n                    canvas.children.push(textele_1);\n                    // eslint-disable-next-line\n                    var pathContent1 = new PathElement();\n                    pathContent1.id = randomId() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height / 2;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight / 2;\n                        obj.bounds.height = annotationMaxHeight / 2;\n                    }\n                    pathContent1.rotateValue = undefined;\n                    pathContent1.margin.left = 10;\n                    pathContent1.margin.bottom = -5;\n                    pathContent1.relativeMode = 'Point';\n                    pathContent1.setOffsetWithRespectToBounds(0, 0.1, null);\n                    // eslint-disable-next-line\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                }\n                else {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    // eslint-disable-next-line\n                    var pathContent1 = new PathElement();\n                    pathContent1.id = randomId() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight;\n                        obj.bounds.height = annotationMaxHeight;\n                    }\n                    pathContent1.minWidth = pathContent1.width / 2;\n                    pathContent1.minHeight = pathContent1.height / 2;\n                    // eslint-disable-next-line\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.minWidth = pathContent1.width / 2;\n                    content.minHeight = pathContent1.height / 2;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                    canvas.minHeight = content.minHeight + 20;\n                    canvas.minWidth = content.minWidth + 20;\n                }\n                break;\n            case 'Image':\n            case 'SignatureImage':\n                // eslint-disable-next-line\n                var pathContent11 = new ImageElement();\n                pathContent11.source = obj.data;\n                content = pathContent11;\n                content.style.strokeWidth = 0;\n                canvas.children.push(content);\n                break;\n            case 'Rectangle':\n                basicElement = new DrawingElement();\n                content = basicElement;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Perimeter':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                setElementStype(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new DrawingElement();\n                basicElement.id = 'perimeter_' + randomId();\n                basicElement.height = .2;\n                basicElement.width = .2;\n                basicElement.transform = RotateTransform.Self;\n                basicElement.horizontalAlignment = 'Stretch';\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                setElementStype(obj, basicElement);\n                canvas.children.push(basicElement);\n                // eslint-disable-next-line\n                var textele = this.textElement(obj);\n                textele = new TextElement();\n                textele.content = textele.content = findPointsLength([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]).toString();\n                textele.rotateValue = { y: -10, angle: obj.rotateAngle };\n                canvas.children.push(textele);\n                break;\n            case 'Radius':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                setElementStype(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new DrawingElement();\n                basicElement.id = 'radius_' + randomId();\n                basicElement.height = .2;\n                basicElement.width = obj.bounds.width / 2;\n                basicElement.transform = RotateTransform.Self;\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                setElementStype(obj, basicElement);\n                canvas.children.push(basicElement);\n                // eslint-disable-next-line\n                var radiusTextEle = this.textElement(obj);\n                if (obj.enableShapeLabel) {\n                    radiusTextEle.style.color = obj.fontColor;\n                    radiusTextEle.style.strokeColor = obj.labelBorderColor;\n                    radiusTextEle.style.fill = obj.labelFillColor;\n                    radiusTextEle.style.fontSize = obj.fontSize;\n                    radiusTextEle.style.fontFamily = obj.fontFamily;\n                    radiusTextEle.style.opacity = obj.labelOpacity;\n                }\n                // eslint-disable-next-line\n                var length_1 = findPointsLength([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]);\n                if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                    radiusTextEle.content = obj.notes;\n                }\n                else {\n                    // eslint-disable-next-line max-len\n                    radiusTextEle.content = this.pdfViewer.annotation.measureAnnotationModule.setConversion((obj.bounds.width / 2) * this.pdfViewer.annotation.measureAnnotationModule.pixelToPointFactor, obj);\n                }\n                radiusTextEle.rotateValue = { y: -10, x: obj.bounds.width / 4, angle: obj.rotateAngle };\n                canvas.children.push(radiusTextEle);\n                break;\n            case 'StickyNotes':\n                // eslint-disable-next-line\n                var pathContent2 = new ImageElement();\n                pathContent2.source = obj.data;\n                pathContent2.width = obj.bounds.width;\n                pathContent2.height = obj.bounds.height;\n                pathContent2.style.strokeColor = obj.strokeColor;\n                pathContent2.style.strokeWidth = 0;\n                content = pathContent2;\n                canvas.children.push(content);\n                break;\n            case 'SignatureText':\n                //eslint-disable-next-line\n                var rectElements = new DrawingElement();\n                rectElements.style.strokeWidth = 0;\n                content = rectElements;\n                content.style.strokeWidth = 0;\n                canvas.style.strokeWidth = 0;\n                canvas.children.push(content);\n                // eslint-disable-next-line\n                var signatureText = this.textElement(obj);\n                signatureText.style.fontFamily = obj.fontFamily;\n                signatureText.style.fontSize = obj.fontSize;\n                signatureText.style.textAlign = 'Left';\n                signatureText.rotateValue = undefined;\n                signatureText.content = obj.data;\n                signatureText.style.strokeWidth = 0;\n                canvas.children.push(signatureText);\n                break;\n            case 'FreeText':\n                // eslint-disable-next-line\n                var rectElement = new DrawingElement();\n                content = rectElement;\n                canvas.children.push(content);\n                // eslint-disable-next-line\n                var freeTextEle = this.textElement(obj);\n                freeTextEle = new TextElement();\n                freeTextEle.style.fontFamily = obj.fontFamily;\n                freeTextEle.style.fontSize = obj.fontSize;\n                freeTextEle.style.textAlign = 'Left';\n                if (obj.textAlign.toLowerCase() === 'center') {\n                    freeTextEle.style.textAlign = 'Center';\n                }\n                else if (obj.textAlign.toLowerCase() === 'right') {\n                    freeTextEle.style.textAlign = 'Right';\n                }\n                else if (obj.textAlign.toLowerCase() === 'justify') {\n                    freeTextEle.style.textAlign = 'Justify';\n                }\n                freeTextEle.style.color = obj.fontColor;\n                freeTextEle.style.bold = obj.font.isBold;\n                freeTextEle.style.italic = obj.font.isItalic;\n                if (obj.font.isUnderline === true) {\n                    freeTextEle.style.textDecoration = 'Underline';\n                }\n                else if (obj.font.isStrikeout === true) {\n                    freeTextEle.style.textDecoration = 'LineThrough';\n                }\n                freeTextEle.rotateValue = undefined;\n                freeTextEle.content = obj.dynamicText;\n                freeTextEle.style.opacity = obj.opacity;\n                freeTextEle.margin.left = 4;\n                freeTextEle.margin.right = 5;\n                freeTextEle.margin.top = 5 * (obj.fontSize / 16);\n                if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n                    freeTextEle.style.textWrapping = 'Wrap';\n                }\n                else {\n                    freeTextEle.style.textWrapping = 'WrapWithOverflow';\n                }\n                freeTextEle.relativeMode = 'Point';\n                freeTextEle.setOffsetWithRespectToBounds(0, 0, null);\n                freeTextEle.relativeMode = 'Point';\n                canvas.children.push(freeTextEle);\n                break;\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (!isStamp) {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            setElementStype(obj, content);\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.textElement = function (obj) {\n        var textele = new TextElement();\n        setElementStype(obj, textele);\n        textele.horizontalAlignment = 'Center';\n        obj.shapeAnnotationType === 'SignatureText' ? textele.verticalAlignment = 'Center' : textele.verticalAlignment = 'Top';\n        textele.relativeMode = 'Object';\n        textele.setOffsetWithRespectToBounds(.5, .5, 'Absolute');\n        return textele;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} obj - Specified the drawing element.\n     * @param {PdfAnnotationBaseModel} node - Specified the node element.\n     * @returns {void}\n     */\n    Drawing.prototype.setNodePosition = function (obj, node) {\n        if (node.shapeAnnotationType === 'Perimeter') {\n            obj.offsetX = node.bounds.x + node.bounds.width / 2;\n            obj.offsetY = node.bounds.y + node.bounds.height / 2;\n        }\n        else if (node.shapeAnnotationType === 'Radius') {\n            // eslint-disable-next-line max-len\n            var trasPoint = { x: node.bounds.x + (node.bounds.width / 2) + (node.bounds.width / 4), y: node.bounds.y + (node.bounds.height / 2) };\n            var center = { x: (node.bounds.x + (node.bounds.width / 2)), y: (node.bounds.y + (node.bounds.height / 2)) };\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n            var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n            var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y };\n            obj.offsetX = newPoint1.x;\n            obj.offsetY = newPoint1.y;\n            obj.width = node.bounds.width / 2;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Container} - Returns the container element.\n     */\n    Drawing.prototype.initContainer = function (obj) {\n        if (!obj.id) {\n            obj.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = new Canvas();\n        canvas.id = obj.id;\n        canvas.offsetX = obj.bounds.x + (obj.bounds.width * 0.5);\n        canvas.offsetY = obj.bounds.y + (obj.bounds.height * 0.5);\n        canvas.style.fill = 'transparent';\n        canvas.style.strokeColor = 'transparent';\n        canvas.rotateAngle = obj.rotateAngle;\n        obj.wrapper = canvas;\n        return canvas;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Canvas} - Returns the canvas element.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Drawing.prototype.initLine = function (obj) {\n        if (!obj.id) {\n            obj.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = obj.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        if (obj.vertexPoints.length) {\n            obj.sourcePoint = obj.vertexPoints[0];\n            obj.targetPoint = obj.vertexPoints[obj.vertexPoints.length - 1];\n            for (var i = 0; i < obj.vertexPoints.length; i++) {\n                if (i !== 0 && i !== obj.vertexPoints.length - 1) {\n                    obj.segments.push(obj.vertexPoints[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        segment = getSegmentElement(obj, segment);\n        var points = [];\n        points = getConnectorPoints(obj);\n        //  points = this.clipDecorators(this, points);\n        var leaders = [];\n        var labels = [];\n        if (obj.shapeAnnotationType === 'Distance') {\n            leaders = initLeaders(obj, points);\n            labels = initDistanceLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if ((obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead') && obj.measureType === 'Perimeter') {\n            labels = initPerimeterLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if (obj.enableShapeLabel === true && !(obj.shapeAnnotationType === 'Distance') && !(obj.measureType === 'Perimeter')) {\n            var angle = Point.findAngle(points[0], points[1]);\n            var textele = this.textElement(obj);\n            textele.id = randomId();\n            if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                textele.content = obj.notes;\n            }\n            else {\n                textele.content = obj.labelContent;\n            }\n            textele.style.strokeColor = obj.labelBorderColor;\n            textele.style.fill = obj.labelFillColor;\n            textele.style.fontSize = obj.fontSize;\n            textele.style.color = obj.fontColor;\n            textele.style.fontFamily = obj.fontFamily;\n            textele.style.opacity = obj.labelOpacity;\n            textele.rotateValue = { y: -10, angle: angle };\n            labels.push(textele);\n        }\n        points = clipDecorators(obj, points);\n        var bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        var anglePoints = obj.vertexPoints;\n        var accessContent = 'getDescription';\n        // eslint-disable-next-line max-len\n        if (obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead' || obj.shapeAnnotationType === 'Distance') {\n            srcDecorator = getDecoratorElement(obj, points[0], anglePoints[1], true);\n            targetDecorator = getDecoratorElement(obj, points[points.length - 1], anglePoints[anglePoints.length - 2], false);\n        }\n        srcDecorator.id = obj.id + '_srcDec';\n        targetDecorator.id = obj.id + '_tarDec';\n        /* eslint-disable @typescript-eslint/dot-notation */\n        segment.style['fill'] = 'transparent';\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [];\n        setElementStype(obj, segment);\n        container.children.push(segment);\n        if (leaders.length > 0) {\n            for (var i = 0; i < leaders.length; i++) {\n                container.children.push(leaders[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (labels.length > 0) {\n            for (var i = 0; i < labels.length; i++) {\n                container.children.push(labels[parseInt(i.toString(), 10)]);\n            }\n        }\n        container.children.push(srcDecorator);\n        container.children.push(targetDecorator);\n        if (obj.shapeAnnotationType === 'LineWidthArrowHead') {\n            container.children[1].width = 12 * obj.thickness;\n            container.children[1].height = 12 * obj.thickness;\n            container.children[2].width = 12 * obj.thickness;\n            container.children[2].height = 12 * obj.thickness;\n        }\n        container.id = obj.id;\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        points = getConnectorPoints(obj);\n        obj.wrapper = container;\n        return container;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel} - Returns the added annotaion object.\n     */\n    Drawing.prototype.add = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (obj.formFieldAnnotationType && this.pdfViewer.formDesignerModule) {\n            obj = new PdfFormFieldBase(this.pdfViewer, 'formFields', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.formFields.push(obj);\n        }\n        else {\n            obj = new PdfAnnotationBase(this.pdfViewer, 'annotations', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.annotations.push(obj);\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n        return obj;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.remove = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        var index = obj.pageIndex;\n        for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n            var annotation = this.pdfViewer.annotations[parseInt(i.toString(), 10)];\n            if ((annotation.id && (annotation.id === obj.id || annotation.id.split('_')[0] === obj.id)) || (annotation.wrapper && annotation.wrapper.id === obj.id)) {\n                this.pdfViewer.annotations.splice(i, 1);\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[parseInt(j.toString(), 10)].id === obj.id) {\n                        objects.splice(j, 1);\n                        if (obj.shapeAnnotationType === 'Path' || obj.shapeAnnotationType === 'SignatureImage' || obj.shapeAnnotationType === 'SignatureText') {\n                            this.refreshCanvasDiagramLayer(undefined, index, obj.id);\n                        }\n                        else {\n                            this.pdfViewer.renderDrawing(undefined, index);\n                        }\n                    }\n                }\n                // need to add code snippet to remove from z index table   \n            }\n        }\n        for (var i = 0; i < this.pdfViewer.formFields.length; i++) {\n            var element = this.pdfViewer.formFields[parseInt(i.toString(), 10)];\n            if (element.id === obj.id || element.wrapper.id === obj.id) {\n                this.pdfViewer.formFields.splice(i, 1);\n                if (this.pdfViewer.formDesignerModule && obj.formFieldAnnotationType) {\n                    this.pdfViewer.formFieldCollection.splice(i, 1);\n                }\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[parseInt(j.toString(), 10)].id === obj.id) {\n                        objects.splice(j, 1);\n                        break;\n                    }\n                    if (objects[parseInt(j.toString(), 10)] && objects[parseInt(j.toString(), 10)].id && objects[parseInt(j.toString(), 10)].id.indexOf(obj.id) !== -1) {\n                        objects.splice(j, 1);\n                    }\n                }\n            }\n        }\n        if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton'\n            || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n            for (var i = 0; i < this.pdfViewer.formFieldCollections.length; i++) {\n                // eslint-disable-next-line\n                var element = this.pdfViewer.formFieldCollections[i];\n                if (element.id === obj.id) {\n                    this.pdfViewer.formFieldCollections.splice(i, 1);\n                }\n            }\n        }\n        if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton'\n            || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n            // eslint-disable-next-line\n            var inputField = document.getElementById('form_field_' + obj.id + '_content_html_element');\n            if (inputField) {\n                inputField.remove();\n                this.pdfViewer.renderDrawing(undefined, index);\n                var field = {\n                    // eslint-disable-next-line\n                    name: obj.name, id: obj.id, value: obj.value, fontFamily: obj.fontFamily, fontSize: obj.fontSize, fontStyle: obj.fontStyle,\n                    // eslint-disable-next-line\n                    color: obj.color, backgroundColor: obj.backgroundColor, alignment: obj.alignment, isReadonly: obj.isReadonly, visibility: obj.visibility,\n                    // eslint-disable-next-line\n                    maxLength: obj.maxLength, isRequired: obj.isRequired, isPrint: obj.isPrint, rotation: obj.rotateAngle, tooltip: obj.tooltip,\n                    // eslint-disable-next-line\n                    options: obj.options, isChecked: obj.isChecked, isSelected: obj.isSelected\n                };\n                this.pdfViewer.fireFormFieldRemoveEvent('formFieldRemove', field, obj.pageIndex);\n                this.pdfViewer.formDesignerModule.removeFieldsFromAnnotationCollections(obj.id);\n            }\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @private\n     * @param {number} pageIndex - Specified the page index.\n     * @returns {PdfAnnotationBaseModel[]} - Returns the annotation base model collections.\n     */\n    Drawing.prototype.getPageObjects = function (pageIndex) {\n        var pageTable = this.getPageTable(pageIndex);\n        return pageTable.objects;\n    };\n    /**\n     * @private\n     * @param {HTMLCanvasElement} diagramLayer - Specified the diagram layer element.\n     * @param {number} pageIndex - Specified the page index.\n     * @param {string} objectId - Specified the object id.\n     * @returns {void}\n     */\n    Drawing.prototype.refreshCanvasDiagramLayer = function (diagramLayer, pageIndex, objectId) {\n        if (!diagramLayer) {\n            diagramLayer = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        }\n        if (diagramLayer) {\n            var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n            var width = diagramLayer.width / zoom;\n            var height = diagramLayer.height / zoom;\n            var ctx = diagramLayer.getContext('2d');\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            if (zoom < 1) {\n                ctx.lineWidth = ctx.lineWidth / zoom;\n            }\n            var devicePixelRatio_1 = this.pdfViewer.viewerBase.getWindowDevicePixelRatio();\n            var zoomRatio = zoom * devicePixelRatio_1;\n            if (!Browser.isDevice || (Browser.isDevice && zoom <= 0.7)) {\n                ctx.setTransform(zoomRatio, 0, 0, zoomRatio, 0, 0);\n            }\n            else {\n                ctx.setTransform(zoom, 0, 0, zoom, 0, 0);\n            }\n            ctx.clearRect(0, 0, width, height);\n            var objects = this.getPageObjects(pageIndex);\n            for (var i = 0; i < objects.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var renderElement = void 0;\n                if (diagramLayer.id === this.pdfViewer.element.id + '_print_annotation_layer_' + pageIndex) {\n                    if (objects[parseInt(i.toString(), 10)].isPrint) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        renderElement = this.pdfViewer.nameTable[objects[parseInt(i.toString(), 10)].id].wrapper;\n                        if (!isNullOrUndefined(renderElement)) {\n                            refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n                        }\n                    }\n                }\n                else {\n                    // eslint-disable-next-line\n                    renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n                    refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearHighlighter = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id + index + '_diagramAdornerLayer', index);\n        if (adornerSvg) {\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n            if (highlighter) {\n                highlighter.parentNode.removeChild(highlighter);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getSelectorElement = function (diagramId, index) {\n        var adornerLayer = null;\n        var adornerSvg = this.getAdornerLayerSvg(diagramId, index);\n        if (adornerSvg) {\n            adornerLayer = adornerSvg.getElementById(diagramId + index + '_SelectorElement');\n        }\n        return adornerLayer;\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getAdornerLayerSvg = function (diagramId, index) {\n        var adornerLayerSvg = null;\n        var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n        // eslint-disable-next-line\n        var elementcoll;\n        if (diagramElement) {\n            elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n            adornerLayerSvg = elementcoll[0];\n        }\n        return adornerLayerSvg;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearSelectorLayer = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id, index);\n        if (adornerSvg) {\n            var selectionRect = adornerSvg.getElementById(this.pdfViewer.adornerSvgLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter(index);\n            var childNodes = this.getSelectorElement(this.pdfViewer.element.id, index).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} select - Specified the select value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector element.\n     * @param {PdfAnnotationBaseModel} helper - Specified the annotation helper element.\n     * @param {boolean} isSelect - Specified the is select or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.renderSelector = function (select, currentSelector, helper, isSelect) {\n        if (!helper || isSelect) {\n            var size = new Size();\n            var selectorModel = this.pdfViewer.selectedItems;\n            this.clearSelectorLayer(select);\n            if (selectorModel.wrapper) {\n                selectorModel.wrapper.measure(size);\n                var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                if (selectorModel.annotations.length === 1) {\n                    selectorModel.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    //selectorModel.pivot = selectorModel.annotations[0].pivot;\n                }\n                var bounds = selectorModel.wrapper.bounds;\n                // eslint-disable-next-line\n                var selectorElement = void 0;\n                if (selectorModel.formFields.length) {\n                    for (var i = 0; i < selectorModel.formFields.length; i++) {\n                        var node = selectorModel.formFields[parseInt(i.toString(), 10)];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        if (selectorElement && node.pageIndex === select && this.pdfViewer.designerMode) {\n                            this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                        }\n                        if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                            // eslint-disable-next-line max-len\n                            if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                var field = {\n                                    // eslint-disable-next-line\n                                    name: node.name, id: node.id, value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle, color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                                    // eslint-disable-next-line\n                                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                    // eslint-disable-next-line\n                                    options: node.options, isChecked: node.isChecked, isSelected: node.isSelected\n                                };\n                                this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                            }\n                        }\n                    }\n                }\n                if (selectorModel.annotations.length) {\n                    for (var j = 0; j < selectorModel.annotations.length; j++) {\n                        var node = selectorModel.annotations[parseInt(j.toString(), 10)];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        var constraints = true;\n                        if (selectorElement && node.pageIndex === select) {\n                            if (node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'Line' ||\n                                node.shapeAnnotationType === 'LineWidthArrowHead' || node.shapeAnnotationType === 'Polygon') {\n                                this.renderEndPointHandle(node, selectorElement, selectorModel.thumbsConstraints, { scale: zoom, tx: 0, ty: 0 }, undefined, undefined, true, currentSelector);\n                            }\n                            else {\n                                if (node.shapeAnnotationType === 'StickyNotes') {\n                                    this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                                }\n                                else {\n                                    if (this.pdfViewer.tool !== 'Stamp') {\n                                        // eslint-disable-next-line\n                                        var isSignature = node.shapeAnnotationType === 'Path' || node.formFieldAnnotationType === 'SignatureField' || node.formFieldAnnotationType === 'InitialField';\n                                        this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, node.shapeAnnotationType === 'Stamp', false, isSignature, (node.shapeAnnotationType === 'FreeText' || node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureImage' || node.shapeAnnotationType === 'Image' || node.shapeAnnotationType === 'SignatureText'), currentSelector);\n                                    }\n                                }\n                            }\n                            if (!this.pdfViewer.viewerBase.isNewSignatureAdded && (node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureText' || node.shapeAnnotationType === 'SignatureImage')) {\n                                this.pdfViewer.annotationModule.selectSignature(node.signatureName, node.pageIndex, node);\n                            }\n                            if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                                // eslint-disable-next-line max-len\n                                if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                    this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                    var field = {\n                                        // eslint-disable-next-line\n                                        value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                                        // eslint-disable-next-line\n                                        color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                                        // eslint-disable-next-line\n                                        maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                        // eslint-disable-next-line\n                                        options: node.options, isChecked: node.isChecked, isSelected: node.isSelected\n                                    };\n                                    this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                                }\n                            }\n                            if (node.annotName !== '' && node.annotName !== 'SignatureText') {\n                                if (helper && (node === helper) && !node.formFieldAnnotationType) {\n                                    // eslint-disable-next-line max-len\n                                    if (!this.pdfViewer.viewerBase.isAddComment && !this.pdfViewer.viewerBase.isAnnotationSelect && !this.pdfViewer.viewerBase.isAnnotationMouseDown && !this.pdfViewer.viewerBase.isAnnotationMouseMove && !this.pdfViewer.viewerBase.isInkAdded && !this.pdfViewer.viewerBase.isNewStamp) {\n                                        this.pdfViewer.viewerBase.isAnnotationSelect = true;\n                                        this.pdfViewer.annotationModule.annotationSelect(node.annotName, node.pageIndex, node);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     *\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the objects to be rotated.\n     * @param {number} angle - Specified the angle by which the objects have to be rotated.\n     * @param {PointModel} pivot - Specified the reference point with reference to which the objects have to be rotated.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.rotate = function (obj, angle, pivot, currentSelector) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var objects = [];\n                objects = objects.concat(obj.annotations);\n                this.rotateObjects(obj, objects, angle, pivot, null, currentSelector);\n            }\n            else {\n                this.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} parent - Specified the annotation object.\n     * @param {PdfAnnotationBaseModel[]} objects - Specified the annotation objects.\n     * @param {number} angle - Specified the annotation angle.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {boolean} includeParent - Specified the include parent value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent, currentSelector) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (obj instanceof PdfAnnotationBase) {\n                if (includeParent !== false || parent !== obj) {\n                    obj.rotateAngle += angle;\n                    obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                    var newOffset = transformPointByMatrix(matrix, { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n                    obj.wrapper.offsetX = newOffset.x;\n                    obj.wrapper.offsetY = newOffset.y;\n                    this.nodePropertyChange(obj, { rotateAngle: obj.rotateAngle });\n                }\n                this.renderSelector(obj.pageIndex, currentSelector);\n            }\n        }\n    };\n    Drawing.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (element && element.id) {\n            if (targetElement && targetElement === 'selector') {\n                return this.pdfViewer.adornerSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    Drawing.prototype.shownBorder = function () {\n        var isSelectInAllowed = false;\n        if (this.pdfViewer.annotationModule) {\n            var annotation = this.pdfViewer.selectedItems.annotations[0];\n            var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n            isSelectInAllowed = !isNullOrUndefined(allowedInteraction) && (allowedInteraction.includes('Select') || !isLock);\n        }\n        return isSelectInAllowed;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} selector - Specified the annotation selector object.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} transform - Specfied the transform value.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} isBorderTickness - Specified is thickness or not.\n     * @param {boolean} isSwimlane - Specified is swimlane annotation or not.\n     * @param {boolean} isSticky - Specified is sticky annotation or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.renderBorder = function (selector, canvas, currentSelector, transform, enableNode, isBorderTickness, isSwimlane, isSticky) {\n        var wrapper = selector;\n        var options = getBaseShapeAttributes(wrapper, transform);\n        transform = transform || { scale: 1, tx: 0, ty: 0 };\n        if (!isSticky) {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            options.fill = 'transparent';\n            // eslint-disable-next-line max-len\n            var shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                // eslint-disable-next-line max-len\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else {\n                if (!this.pdfViewer.designerMode) {\n                    if ((shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText' || shapeType === 'SignatureImage') || shapeType === 'Ink') {\n                        // eslint-disable-next-line\n                        var formField = this.pdfViewer.nameTable[selector.id.split('_')[0]];\n                        var isFormFieldSign = this.pdfViewer.viewerBase.checkSignatureFormField(selector.id);\n                        // if (isFormFieldSign && options.width + 21 !== formField.bounds.width && options.height + 21 !== formField.bounds.height) {\n                        //     if (this.pdfViewer.signatureFitMode === 'Default') {\n                        //         let selectorBounds: any = this.pdfViewer.formFieldsModule.getDefaultBoundsforSign(formField.bounds);\n                        //         options.x = selectorBounds.x; options.y = selectorBounds.y; options.width = selectorBounds.width; options.height = selectorBounds.height;\n                        //     } else {\n                        //         options.x = formField.bounds.x; options.y = formField.bounds.y; options.width = formField.bounds.width; options.height = formField.bounds.height;\n                        //     }\n                        // }\n                        this.getSignBorder(shapeType, options, isFormFieldSign);\n                    }\n                    else {\n                        this.getBorderSelector(shapeType, options);\n                    }\n                }\n            }\n            options.class = 'e-pv-diagram-border';\n            if (isSwimlane) {\n                options.class += ' e-diagram-lane';\n            }\n            options.id = 'borderRect';\n            options.id = 'borderRect';\n            if (!enableNode) {\n                options.class += ' e-disabled';\n            }\n            if (isBorderTickness) {\n                options.class += ' e-thick-border';\n            }\n            options.cornerRadius = 0;\n        }\n        else {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            // eslint-disable-next-line max-len\n            var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType\n                : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                // eslint-disable-next-line max-len\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else {\n                this.getBorderSelector(shapeType, options);\n            }\n        }\n        var checkBorder = this.shownBorder();\n        if (checkBorder) {\n            var parentSvg = this.getParentSvg(selector, 'selector');\n            // eslint-disable-next-line max-len\n            this.svgRenderer.drawRectangle(canvas, options, this.pdfViewer.element.id, undefined, true, parentSvg);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the options value.\n     * @param {boolean} isFormFieldSign - Specified is form field sign or not.\n     * @returns {void}\n     */\n    Drawing.prototype.getSignBorder = function (type, options, isFormFieldSign) {\n        if (!isFormFieldSign && (type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n            var borderColor = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n            var borderColor = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else {\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n            options.stroke = borderColor;\n            options.strokeWidth = annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n            // eslint-disable-next-line max-len\n            var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the base attributes.\n     * @returns {void}\n     */\n    Drawing.prototype.getBorderSelector = function (type, options) {\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n        var borderColor = isNullOrUndefined(annotationSelector.selectionBorderColor) || annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        // eslint-disable-next-line max-len\n        options.strokeWidth = isNullOrUndefined(annotationSelector.selectionBorderThickness) || annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n        // eslint-disable-next-line max-len\n        var lineDash = isNullOrUndefined(annotationSelector.selectorLineDashArray) || annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n        if (lineDash.length > 2) {\n            lineDash = [lineDash[0], lineDash[1]];\n        }\n        options.dashArray = lineDash.toString();\n        if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_1;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_1.length > 2) {\n                lineDash_1 = [lineDash_1[0], lineDash_1[1]];\n            }\n            options.dashArray = lineDash_1.toString();\n        }\n        else if ((type === 'Textbox' || type === 'Checkbox' || type === 'RadioButton' || type === 'SignatureField' || type === 'InitialField' || type === 'DropdownList' || type === 'ListBox' || type === 'PasswordField') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_2;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_2.length > 2) {\n                lineDash_2 = [lineDash_2[0], lineDash_2[1]];\n            }\n            options.dashArray = lineDash_2.toString();\n        }\n        else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n            var borderColor_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_3;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_3.length > 2) {\n                lineDash_3 = [lineDash_3[0], lineDash_3[1]];\n            }\n            options.dashArray = lineDash_3.toString();\n        }\n        else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n            var borderColor_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_4;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_4.length > 2) {\n                lineDash_4 = [lineDash_4[0], lineDash_4[1]];\n            }\n            options.dashArray = lineDash_4.toString();\n        }\n        else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n            var borderColor_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_5;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_5.length > 2) {\n                lineDash_5 = [lineDash_5[0], lineDash_5[1]];\n            }\n            options.dashArray = lineDash_5.toString();\n        }\n        else if (type === 'StickyNotes' && this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) {\n            var borderColor_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_6;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [6, 3] : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_6.length > 2) {\n                lineDash_6 = [lineDash_6[0], lineDash_6[1]];\n            }\n            options.dashArray = lineDash_6.toString();\n        }\n        else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n            var borderColor_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_7;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_7.length > 2) {\n                lineDash_7 = [lineDash_7[0], lineDash_7[1]];\n            }\n            options.dashArray = lineDash_7.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {string} id - Specified the annotaion id.\n     * @param {DrawingElement} selector - Specified the drawing element.\n     * @param {number} cx - Specified the cx number.\n     * @param {number} cy - Specified the cy number.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the html canvas element.\n     * @param {boolean} visible - Specified the annotation visible or not.\n     * @param {number} enableSelector - Specified the enable selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @param {boolean} connected - Specified is connected or not.\n     * @param {boolean} canMask - Specified is mask or not.\n     * @param {Object} ariaLabel - Specified the aria label object.\n     * @param {number} count - Specified the count value.\n     * @param {string} className - Specified the class name.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector settings.\n     * @returns {void}\n     */\n    Drawing.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className, currentSelector) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        t = t || { scale: 1, tx: 0, ty: 0 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = getBaseShapeAttributes(wrapper);\n        var shapeType;\n        if (this.pdfViewer.selectedItems.annotations.length > 0 && this.pdfViewer.selectedItems.annotations[0].measureType) {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].measureType;\n        }\n        else if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            shapeType = this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        }\n        else {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n        }\n        this.getResizerColors(shapeType, options, currentSelector, t);\n        this.getShapeSize(shapeType, options, currentSelector, t);\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        options.opacity = 1;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        options.x = (newPoint.x * t.scale) - (options.width / 2);\n        options.y = (newPoint.y * t.scale) - (options.height / 2);\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        if (this.getShape(shapeType, currentSelector) === 'Square') {\n            this.svgRenderer.drawRectangle(canvas, options, id, undefined, true, parentSvg);\n        }\n        else if (this.getShape(shapeType, currentSelector) === 'Circle') {\n            this.svgRenderer.drawCircle(canvas, options, 1);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getShapeSize = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            // eslint-disable-next-line\n            var annotationSelector = JSON.parse(currentSelector);\n            // eslint-disable-next-line max-len\n            options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n            // eslint-disable-next-line max-len\n            options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            // eslint-disable-next-line max-len\n            options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n        }\n        else {\n            // eslint-disable-next-line\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            // eslint-disable-next-line max-len\n            options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n            // eslint-disable-next-line max-len\n            options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            // eslint-disable-next-line max-len\n            options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {AnnotationSelectorSettingsModel} - Specified the annotation selector settings model.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getShape = function (type, currentSelector) {\n        // eslint-disable-next-line\n        var shapeType;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n            }\n            else {\n                // eslint-disable-next-line\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape;\n                }\n            }\n            return shapeType;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getResizerColors = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            // eslint-disable-next-line\n            var annotationSelector = JSON.parse(currentSelector);\n            options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n        }\n        else {\n            // eslint-disable-next-line\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} wrapper - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform value.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX, y: pivotY - 25 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = getBaseShapeAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.opacity = 1;\n        options.fill = '#FF4081';\n        options.centerX = newPoint.x;\n        options.centerY = newPoint.y;\n        options.radius = 4;\n        options.angle = 0;\n        options.visible = true;\n        options.class = 'e-diagram-rotate-handle';\n        options.id = 'rotateThumb';\n        var checkBorder = this.shownBorder();\n        if (checkBorder)\n            this.svgRenderer.drawCircle(canvas, options, ThumbsConstraints.Rotate, { 'aria-label': 'Thumb to rotate the selected object' });\n        var circleHandle = canvas.querySelector('#' + options.id);\n        if (circleHandle) {\n            circleHandle.setAttribute('role', 'separator');\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {ThumbsConstraints} constraints - Specified the thumbs constraints element.\n     * @param {number} currentZoom - Specified the current zoom value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} nodeConstraints - Specified the node constraints or not.\n     * @param {boolean} isStamp - Specified is stamp or not.\n     * @param {boolean} isSticky - Specified is sticky or not.\n     * @param {boolean} isPath - Specified is path or not.\n     * @param {boolean} isFreeText - Specified is free text or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector settings value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, canMask, enableNode, nodeConstraints, isStamp, isSticky, isPath, isFreeText, currentSelector) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        var transform = { scale: currentZoom, tx: 0, ty: 0 };\n        if (isStamp) {\n            this.renderPivotLine(element, canvas, transform);\n            this.renderRotateThumb(element, canvas, transform);\n        }\n        if (isFreeText) {\n            isStamp = true;\n        }\n        this.renderBorder(element, canvas, currentSelector, transform, enableNode, nodeConstraints, true, isSticky);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        // eslint-disable-next-line max-len\n        var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        var allowPermission = false;\n        if (!this.pdfViewer.formDesignerModule) {\n            // eslint-disable-next-line\n            var annotation = this.pdfViewer.selectedItems.annotations[0];\n            // eslint-disable-next-line\n            var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n            if ((isLock || annotation.annotationSettings.isLock) && this.getAllowedInteractions(allowedInteraction)) {\n                allowPermission = true;\n            }\n            if (allowedInteraction[0] === 'Select') {\n                allowPermission = false;\n            }\n        }\n        var resizerLocation = this.getResizerLocation(shapeType, currentSelector);\n        if (resizerLocation < 1 || resizerLocation > 3) {\n            resizerLocation = 3;\n        }\n        var isNodeShape = false;\n        if (this.pdfViewer.selectedItems.annotations[0] && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ellipse' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Radius' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Rectangle' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ink')) {\n            isNodeShape = true;\n        }\n        if (!this.pdfViewer.viewerBase.checkSignatureFormField(element.id) && !nodeConstraints && !isSticky && !isPath && !allowPermission) {\n            if (isStamp || (isNodeShape && (nodeWidth >= 40 && nodeHeight >= 40) && (resizerLocation === 1 || resizerLocation === 3))) {\n                //Hide corners when the size is less than 40\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-pv-diagram-resize-handle e-northwest', currentSelector);\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-pv-diagram-resize-handle e-northeast', currentSelector);\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-pv-diagram-resize-handle e-southwest', currentSelector);\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-pv-diagram-resize-handle e-southeast', currentSelector);\n            }\n            // eslint-disable-next-line max-len\n            if ((!isStamp && !isNodeShape) || (isNodeShape && (resizerLocation === 2 || resizerLocation === 3 || (!(nodeWidth >= 40 && nodeHeight >= 40) && resizerLocation === 1)))) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n            }\n        }\n        if ((shapeType === 'Textbox' || shapeType === 'Checkbox' || shapeType === 'RadioButton' || shapeType === 'SignatureField' || shapeType === 'InitialField' || shapeType === 'DropdownList' ||\n            shapeType === 'ListBox' || shapeType === 'PasswordField')) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n        }\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.getAllowedInteractions = function (allowedInteraction) {\n        if (allowedInteraction && allowedInteraction.length > 0) {\n            for (var i = 0; i < allowedInteraction.length; i++) {\n                if (allowedInteraction[0] !== 'None' && allowedInteraction[parseInt(i.toString(), 10)] === 'Resize') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation base model.\n     * @param {any} currentSelector - Specified the current selector value\n     * @returns {AnnotationResizerLocation} - Returns the annotation resizer location value.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getResizerLocation = function (type, currentSelector) {\n        // eslint-disable-next-line\n        var resizerLocation;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                // eslint-disable-next-line max-len\n                resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n            }\n            else {\n                // eslint-disable-next-line\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                // eslint-disable-next-line max-len\n                resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Distance') {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation;\n                }\n            }\n            return resizerLocation;\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified is mask value or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = true;\n        if (canMask) {\n            visible = false;\n        }\n        var options = getBaseShapeAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        var checkBorder = this.shownBorder();\n        if (checkBorder)\n            this.svgRenderer.drawLine(canvas, options);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} selector - Specified the annotation element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {SelectorConstraints} constraints - Specified the selector constraints value.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {boolean} connectedSource - Specified is connected source or not.\n     * @param {boolean} connectedTarget - Specified is connected target or not.\n     * @param {boolean} isSegmentEditing - Specified is segment editing or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderEndPointHandle = function (selector, canvas, constraints, transform, connectedSource, connectedTarget, isSegmentEditing, currentSelector) {\n        transform = transform || { tx: 0, ty: 0, scale: 1 };\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var checkBorder = this.shownBorder();\n        if (checkBorder) {\n            for (i = 0; i < selector.vertexPoints.length; i++) {\n                var segment = selector.vertexPoints[parseInt(i.toString(), 10)];\n                this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.x, segment.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n            }\n        }\n        var leaderCount = 0;\n        if (selector.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < selector.wrapper.children.length; i++) {\n                var segment = selector.wrapper.children[parseInt(i.toString(), 10)];\n                var newPoint1 = void 0;\n                var angle = Point.findAngle(selector.sourcePoint, selector.targetPoint);\n                if (segment.id.indexOf('leader') > -1) {\n                    var center = selector.wrapper.children[0].bounds.center;\n                    if (leaderCount === 0) {\n                        newPoint1 = { x: selector.sourcePoint.x, y: selector.sourcePoint.y - selector.leaderHeight };\n                        center = sourcePoint;\n                    }\n                    else {\n                        newPoint1 = { x: selector.targetPoint.x, y: selector.targetPoint.y - selector.leaderHeight };\n                        center = targetPoint;\n                    }\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, angle, center.x, center.y);\n                    if (checkBorder) {\n                        var rotatedPoint = transformPointByMatrix(matrix, { x: newPoint1.x, y: newPoint1.y });\n                        this.renderCircularHandle(('leaderThumb_' + (i + 1)), wrapper, rotatedPoint.x, rotatedPoint.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n                    }\n                    leaderCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Drawing.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.pdfViewer.selectedItems;\n        selectorModel.init(this);\n    };\n    /**\n     * @private\n     * @param {string[]} objArray - Specified the annotation object array.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {boolean} multipleSelection - Specified the multiple selection or not.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.select = function (objArray, currentSelector, multipleSelection, preventUpdate) {\n        var selectorModel = this.pdfViewer.selectedItems;\n        for (var i = 0; i < objArray.length; i++) {\n            // eslint-disable-next-line\n            var obj = this.pdfViewer.nameTable[objArray[i]];\n            if (obj.formFieldAnnotationType && this.pdfViewer.designerMode) {\n                selectorModel.formFields.push(obj);\n                this.initSelectorWrapper();\n                selectorModel.wrapper.children.push(obj.wrapper);\n                this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n            }\n            else if (obj && !obj.formFieldAnnotationType) {\n                if (!(obj instanceof Selector) && obj.wrapper.visible && this.pdfViewer.annotationModule) {\n                    // eslint-disable-next-line\n                    var annotationSettings = void 0;\n                    if (obj.annotationSettings) {\n                        if (!isNullOrUndefined(annotationSettings) && !isNullOrUndefined(annotationSettings.isLock)) {\n                            annotationSettings.isLock = JSON.parse(annotationSettings.isLock);\n                        }\n                    }\n                    else if (!obj.formFieldAnnotationType) {\n                        annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(obj, true);\n                        obj.annotationSettings = annotationSettings;\n                    }\n                    var isLock = !obj.formFieldAnnotationType ? (annotationSettings ? annotationSettings.isLock : false) : false;\n                    if (annotationSettings && annotationSettings.isLock && this.pdfViewer.annotationModule.checkAllowedInteractions('Select', obj)) {\n                        isLock = false;\n                    }\n                    selectorModel.annotations.push(obj);\n                    var checkBorder = this.shownBorder();\n                    if (checkBorder) {\n                        this.initSelectorWrapper();\n                        selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                        selectorModel.wrapper.children.push(obj.wrapper);\n                        if (!preventUpdate) {\n                            this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.dragSelectedObjects = function (tx, ty, pageIndex, currentSelector, helper) {\n        var obj = this.pdfViewer.selectedItems;\n        this.drag(obj, tx, ty, currentSelector, helper);\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.drag = function (obj, tx, ty, currentSelector, helper) {\n        if (obj instanceof Selector) {\n            if (obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n            else if (obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n        }\n        else {\n            this.dragAnnotation(obj, tx, ty);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @returns {void}\n     */\n    Drawing.prototype.dragAnnotation = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        // eslint-disable-next-line\n        var oldValues = { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n        //bug (EJ2-62649) : fixed an issue with difficulty on moving/ resizing free text annotation that added in edge of viewer\n        var newDiff = this.moveInsideViewer(obj, tx, ty);\n        obj.wrapper.offsetX += newDiff.tx;\n        obj.wrapper.offsetY += newDiff.ty;\n        if (isLineShapes(obj) || obj.shapeAnnotationType === 'Polygon') {\n            if (obj.wrapper.children.length) {\n                var nodes = obj.wrapper.children;\n                for (var i = 0; i < nodes.length; i++) {\n                    nodes[parseInt(i.toString(), 10)].offsetX += tx;\n                    nodes[parseInt(i.toString(), 10)].offsetY += ty;\n                }\n            }\n            this.dragControlPoint(obj, tx, ty, true);\n        }\n        this.nodePropertyChange(obj, { bounds: { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY } });\n        obj.wrapper.measureChildren = false;\n        // eslint-disable-next-line\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + obj.pageIndex);\n        // eslint-disable-next-line\n        this.pdfViewer.renderDrawing(canvas, obj.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @param {number} segmentNumber - Specified the segment value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        // eslint-disable-next-line\n        var connector = this.pdfViewer.nameTable[obj.id];\n        for (var i = 0; i < connector.vertexPoints.length; i++) {\n            (connector.vertexPoints[parseInt(i.toString(), 10)]).x += tx;\n            (connector.vertexPoints[parseInt(i.toString(), 10)]).y += ty;\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @returns {void}\n     */\n    Drawing.prototype.updateEndPoint = function (connector) {\n        this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n        this.renderSelector(connector.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} actualObject - Specified the actual annotaion object.\n     * @param {PdfAnnotationBaseModel} node - Specified the node annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.nodePropertyChange = function (actualObject, node) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.bounds) {\n            if (node.bounds.width !== undefined) {\n                actualObject.bounds.width = actualObject.wrapper.width = node.bounds.width;\n            }\n            if (node.bounds.height !== undefined) {\n                actualObject.bounds.height = actualObject.wrapper.height = node.bounds.height;\n            }\n            if (node.bounds.x !== undefined) {\n                actualObject.bounds.x = node.bounds.x - (actualObject.bounds.width * 0.5);\n                actualObject.wrapper.offsetX = node.bounds.x;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.bounds.y !== undefined) {\n                actualObject.bounds.y = node.bounds.y - (actualObject.bounds.height * 0.5);\n                actualObject.wrapper.offsetY = node.bounds.y;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.leaderHeight !== undefined) {\n                actualObject.leaderHeight = node.leaderHeight;\n                this.updateConnector(actualObject, actualObject.vertexPoints);\n            }\n            if (actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                for (var i_1 = 0; i_1 < children.length; i_1++) {\n                    if (children[parseInt(i_1.toString(), 10)].id) {\n                        var names = children[parseInt(i_1.toString(), 10)].id.split('_');\n                        if (names.length && (names.indexOf('perimeter') > -1 || names.indexOf('radius') > -1)) {\n                            this.setNodePosition(children[parseInt(i_1.toString(), 10)], actualObject);\n                        }\n                        else if (names.length && (names.indexOf('srcDec') > -1)) {\n                            children[parseInt(i_1.toString(), 10)].offsetX = actualObject.vertexPoints[0].x;\n                            children[parseInt(i_1.toString(), 10)].offsetY = actualObject.vertexPoints[0].y;\n                        }\n                        else if (names.length && names.indexOf('tarDec') > -1) {\n                            children[parseInt(i_1.toString(), 10)].offsetX = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].x;\n                            children[parseInt(i_1.toString(), 10)].offsetY = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].y;\n                        }\n                        else if (names.length && (names.indexOf('stamp') > -1)) {\n                            // eslint-disable-next-line\n                            var ratio = 0;\n                            var heightRatio = 2;\n                            if (actualObject.wrapper.width !== undefined && actualObject.wrapper.height !== undefined) {\n                                ratio = 20;\n                                heightRatio = 2.9;\n                            }\n                            if (actualObject.isDynamicStamp) {\n                                children[parseInt(i_1.toString(), 10)].width = actualObject.bounds.width - ratio;\n                                children[parseInt(i_1.toString(), 10)].height = (actualObject.bounds.height / 2) - ratio;\n                                // eslint-disable-next-line\n                                var element = children[1];\n                                // eslint-disable-next-line\n                                var annotationSettings = this.pdfViewer.stampSettings ? this.pdfViewer.stampSettings : this.pdfViewer.annotationSettings;\n                                // eslint-disable-next-line max-len\n                                if (annotationSettings && (annotationSettings.maxHeight || annotationSettings.maxWidth) && (actualObject.bounds.height > 60)) {\n                                    if (ratio != 0) {\n                                        element.style.fontSize = (actualObject.bounds.width / ratio);\n                                    }\n                                    else {\n                                        element.style.fontSize = (actualObject.wrapper.bounds.width / 20);\n                                    }\n                                }\n                                else {\n                                    if (ratio != 0) {\n                                        element.style.fontSize = this.fontSizeCalculation(actualObject, element, (actualObject.bounds.width - 20));\n                                    }\n                                    else {\n                                        element.style.fontSize = this.fontSizeCalculation(actualObject, element, (actualObject.wrapper.bounds.width - 20));\n                                    }\n                                }\n                                if (ratio !== 0) {\n                                    element.margin.bottom = -(children[parseInt(i_1.toString(), 10)].height / 2);\n                                }\n                            }\n                            else {\n                                children[parseInt(i_1.toString(), 10)].width = actualObject.bounds.width - ratio;\n                                children[parseInt(i_1.toString(), 10)].height = actualObject.bounds.height - ratio;\n                            }\n                            children[parseInt(i_1.toString(), 10)].offsetX = actualObject.wrapper.offsetX;\n                            children[parseInt(i_1.toString(), 10)].offsetY = actualObject.wrapper.offsetX;\n                            children[parseInt(i_1.toString(), 10)].isDirt = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.sourceDecoraterShapes !== undefined) {\n            actualObject.sourceDecoraterShapes = node.sourceDecoraterShapes;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.isReadonly !== undefined && actualObject.shapeAnnotationType === 'FreeText') {\n            actualObject.isReadonly = node.isReadonly;\n        }\n        if (node.taregetDecoraterShapes !== undefined) {\n            actualObject.taregetDecoraterShapes = node.taregetDecoraterShapes;\n            update = true;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.fillColor !== undefined) {\n            actualObject.fillColor = node.fillColor;\n            actualObject.wrapper.children[0].style.fill = node.fillColor;\n            if ((actualObject.enableShapeLabel || actualObject.measureType) && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_2 = 0; i_2 < children.length; i_2++) {\n                    if (children[parseInt(i_2.toString(), 10)].textNodes) {\n                        if (actualObject.enableShapeLabel) {\n                            actualObject.labelFillColor = node.fillColor;\n                            children[parseInt(i_2.toString(), 10)].style.fill = node.fillColor;\n                        }\n                        if (actualObject.measureType) {\n                            children[parseInt(i_2.toString(), 10)].style.fill = node.fillColor;\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelFillColor !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_3 = 0; i_3 < children.length; i_3++) {\n                    if (children[parseInt(i_3.toString(), 10)].textNodes) {\n                        actualObject.labelFillColor = node.labelFillColor;\n                        children[parseInt(i_3.toString(), 10)].style.fill = node.labelFillColor;\n                    }\n                }\n            }\n        }\n        if (node.opacity !== undefined) {\n            if (actualObject.shapeAnnotationType === 'Stamp' || actualObject.shapeAnnotationType === 'FreeText') {\n                actualObject.wrapper.children[1].style.opacity = node.opacity;\n                if (actualObject.wrapper.children[2]) {\n                    actualObject.wrapper.children[2].style.opacity = node.opacity;\n                }\n            }\n            else {\n                if (actualObject.shapeAnnotationType === 'StickyNotes') {\n                    // eslint-disable-next-line\n                    this.pdfViewer.nameTable[actualObject.annotName].wrapper.children[0].style.opacity = node.opacity;\n                }\n                actualObject.opacity = node.opacity;\n            }\n            actualObject.wrapper.children[0].style.opacity = node.opacity;\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_4 = 0; i_4 < children.length; i_4++) {\n                    if (children[parseInt(i_4.toString(), 10)].textNodes) {\n                        children[parseInt(i_4.toString(), 10)].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelOpacity !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_5 = 0; i_5 < children.length; i_5++) {\n                    if (children[parseInt(i_5.toString(), 10)].textNodes) {\n                        children[parseInt(i_5.toString(), 10)].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            actualObject.rotateAngle = node.rotateAngle;\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.strokeColor !== undefined) {\n            actualObject.strokeColor = node.strokeColor;\n            actualObject.wrapper.children[0].style.strokeColor = node.strokeColor;\n            update = true;\n            if (actualObject.shapeAnnotationType === 'Radius' && actualObject.wrapper.children[1]) {\n                actualObject.wrapper.children[1].style.strokeColor = node.strokeColor;\n            }\n            updateConnector = true;\n        }\n        if (node.fontColor !== undefined) {\n            actualObject.fontColor = node.fontColor;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.color = node.fontColor;\n                if (actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else {\n                    children[1].horizontalAlignment = 'Auto';\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_6 = 0; i_6 < children.length; i_6++) {\n                    if (children[parseInt(i_6.toString(), 10)].textNodes) {\n                        children[parseInt(i_6.toString(), 10)].style.color = node.fontColor;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontFamily !== undefined) {\n            actualObject.fontFamily = node.fontFamily;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.fontFamily = node.fontFamily;\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_7 = 0; i_7 < children.length; i_7++) {\n                    if (children[parseInt(i_7.toString(), 10)].textNodes) {\n                        children[parseInt(i_7.toString(), 10)].style.fontFamily = node.fontFamily;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontSize !== undefined) {\n            actualObject.fontSize = node.fontSize;\n            if ((actualObject.shapeAnnotationType === 'FreeText' || actualObject.shapeAnnotationType === 'SignatureText') && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.fontSize = node.fontSize;\n                if (actualObject.shapeAnnotationType === 'SignatureText') {\n                    actualObject.wrapper.children[1].bounds.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].desiredSize.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].actualSize.width = actualObject.bounds.width;\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].verticalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_8 = 0; i_8 < children.length; i_8++) {\n                    if (children[parseInt(i_8.toString(), 10)].textNodes) {\n                        children[parseInt(i_8.toString(), 10)].style.fontSize = node.fontSize;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.font !== undefined) {\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (node.font.isBold !== undefined) {\n                    children[1].style.bold = node.font.isBold;\n                    actualObject.font.isBold = node.font.isBold;\n                }\n                if (node.font.isItalic !== undefined) {\n                    children[1].style.italic = node.font.isItalic;\n                    actualObject.font.isItalic = node.font.isItalic;\n                }\n                if (node.font.isUnderline !== undefined) {\n                    if (node.font.isUnderline) {\n                        actualObject.font.isStrikeout = false;\n                    }\n                    if (node.font.isUnderline === true) {\n                        children[1].style.textDecoration = 'Underline';\n                    }\n                    else {\n                        if (!node.font.isStrikeout) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isUnderline = node.font.isUnderline;\n                }\n                if (node.font.isStrikeout !== undefined) {\n                    if (node.font.isStrikeout) {\n                        actualObject.font.isUnderline = false;\n                    }\n                    if (node.font.isStrikeout === true) {\n                        children[1].style.textDecoration = 'LineThrough';\n                    }\n                    else {\n                        if (!node.font.isUnderline) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isStrikeout = node.font.isStrikeout;\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.textAlign !== undefined) {\n            actualObject.textAlign = node.textAlign;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.textAlign = node.textAlign;\n                if (children[1].childNodes.length === 1) {\n                    if (actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Right') {\n                        children[1].horizontalAlignment = 'Right';\n                        children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Left') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Center') {\n                        children[1].horizontalAlignment = 'Center';\n                        children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n                    }\n                }\n                else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else {\n                    children[1].horizontalAlignment = 'Auto';\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.thickness !== undefined) {\n            actualObject.thickness = node.thickness;\n            actualObject.wrapper.children[0].style.strokeWidth = node.thickness;\n            if (actualObject.shapeAnnotationType === 'LineWidthArrowHead') {\n                actualObject.wrapper.children[1].width = 12 * node.thickness;\n                actualObject.wrapper.children[1].height = 12 * node.thickness;\n                actualObject.wrapper.children[2].width = 12 * node.thickness;\n                actualObject.wrapper.children[2].height = 12 * node.thickness;\n            }\n            if (actualObject.shapeAnnotationType === 'Radius' && actualObject.wrapper.children[1]) {\n                actualObject.wrapper.children[1].style.strokeWidth = node.thickness;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.borderDashArray !== undefined) {\n            actualObject.borderDashArray = node.borderDashArray;\n            actualObject.wrapper.children[0].style.strokeDashArray = node.borderDashArray;\n        }\n        if (node.borderStyle !== undefined) {\n            actualObject.borderStyle = node.borderStyle;\n        }\n        if (node.author !== undefined) {\n            actualObject.author = node.author;\n        }\n        if (node.modifiedDate !== undefined) {\n            actualObject.modifiedDate = node.modifiedDate;\n        }\n        if (node.subject !== undefined) {\n            actualObject.subject = node.subject;\n        }\n        if (node.vertexPoints !== undefined) {\n            actualObject.vertexPoints = node.vertexPoints;\n            // eslint-disable-next-line\n            this.pdfViewer.nameTable[actualObject.id].vertexPoints = node.vertexPoints;\n            this.updateConnector(actualObject, node.vertexPoints);\n        }\n        if (node.leaderHeight !== undefined && actualObject.shapeAnnotationType !== 'Polygon') {\n            actualObject.leaderHeight = node.leaderHeight;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.notes !== undefined) {\n            actualObject.notes = node.notes;\n        }\n        if (node.annotName !== undefined) {\n            actualObject.annotName = node.annotName;\n        }\n        if (actualObject.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < actualObject.wrapper.children.length; i++) {\n                // eslint-disable-next-line\n                var segment = actualObject.wrapper.children[i];\n                // eslint-disable-next-line\n                var points = getConnectorPoints(actualObject);\n                if (segment.id.indexOf('leader1') > -1) {\n                    this.setLineDistance(actualObject, points, segment, false);\n                }\n                if (segment.id.indexOf('leader2') > -1) {\n                    this.setLineDistance(actualObject, points, segment, true);\n                }\n            }\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (actualObject.shapeAnnotationType === 'Polygon' && node.vertexPoints) {\n            actualObject.data = getPolygonPath(actualObject.vertexPoints);\n            // eslint-disable-next-line\n            var path = actualObject.wrapper.children[0];\n            path.data = actualObject.data;\n            path.canMeasurePath = true;\n        }\n        if (isLineShapes(actualObject)) {\n            for (var i_9 = 0; i_9 < actualObject.wrapper.children.length; i_9++) {\n                // eslint-disable-next-line\n                var childElement = actualObject.wrapper.children[i_9];\n                if (!childElement.textNodes) {\n                    setElementStype(actualObject, actualObject.wrapper.children[parseInt(i_9.toString(), 10)]);\n                }\n                if (actualObject.enableShapeLabel === true) {\n                    if (actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof TextElement) {\n                        actualObject.wrapper.children[parseInt(i_9.toString(), 10)].style.fill = actualObject.labelFillColor;\n                    }\n                    if ((actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof PathElement && actualObject.measureType === 'Perimeter')) {\n                        actualObject.wrapper.children[parseInt(i_9.toString(), 10)].style.fill = 'transparent';\n                    }\n                }\n                else {\n                    if ((actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof PathElement && actualObject.measureType === 'Perimeter') || actualObject.wrapper.children[parseInt(i_9.toString(), 10)] instanceof TextElement) {\n                        actualObject.wrapper.children[parseInt(i_9.toString(), 10)].style.fill = 'transparent';\n                    }\n                }\n            }\n        }\n        if (actualObject && (actualObject.shapeAnnotationType === 'FreeText' || actualObject.enableShapeLabel === true)) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_10 = 0; i_10 < children.length; i_10++) {\n                    if (children[parseInt(i_10.toString(), 10)].textNodes) {\n                        if (actualObject.shapeAnnotationType === 'FreeText') {\n                            if (node.dynamicText) {\n                                children[parseInt(i_10.toString(), 10)].content = node.dynamicText;\n                                actualObject.dynamicText = node.dynamicText;\n                            }\n                            else {\n                                children[parseInt(i_10.toString(), 10)].content = actualObject.dynamicText;\n                            }\n                            children[parseInt(i_10.toString(), 10)].width = actualObject.bounds.width;\n                        }\n                        else if (actualObject.enableShapeLabel === true && actualObject.measureType) {\n                            if (node.labelContent) {\n                                children[parseInt(i_10.toString(), 10)].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[parseInt(i_10.toString(), 10)].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[parseInt(i_10.toString(), 10)].content;\n                        }\n                        else if (actualObject.enableShapeLabel === true) {\n                            if (node.labelContent) {\n                                children[parseInt(i_10.toString(), 10)].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[parseInt(i_10.toString(), 10)].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[parseInt(i_10.toString(), 10)].content;\n                        }\n                        children[parseInt(i_10.toString(), 10)].isDirt = true;\n                    }\n                    /** set text node width less than the parent */\n                }\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === \"SignatureText\" && actualObject.wrapper) {\n            if (actualObject.wrapper.children && actualObject.wrapper.children.length > 1) {\n                actualObject.wrapper.children[1].isDirt = true;\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && this.pdfViewer.annotationModule.stickyNotesAnnotationModule.textFromCommentPanel) {\n            actualObject.wrapper.width = undefined;\n            actualObject.wrapper.height = undefined;\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.textFromCommentPanel = false;\n        }\n        else {\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n        }\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (actualObject && actualObject.formFieldAnnotationType) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children[0];\n                children.actualSize.width = actualObject.wrapper.desiredSize.width;\n                children.actualSize.height = actualObject.wrapper.desiredSize.height;\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && actualObject.subject === 'Text Box') {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else if (children[1].childNodes.length === 1) {\n                    if (actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Right') {\n                        children[1].horizontalAlignment = 'Right';\n                        children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Left') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Center') {\n                        children[1].horizontalAlignment = 'Center';\n                        children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n                    }\n                }\n                for (var i_11 = 0; i_11 < children.length; i_11++) {\n                    if (children[parseInt(i_11.toString(), 10)].textNodes && children[parseInt(i_11.toString(), 10)].textNodes.length > 0) {\n                        children[parseInt(i_11.toString(), 10)].isDirt = true;\n                        var childNodeHeight = children[parseInt(i_11.toString(), 10)].textNodes.length * children[parseInt(i_11.toString(), 10)].textNodes[0].dy;\n                        var heightDiff = actualObject.bounds.height - childNodeHeight;\n                        if (heightDiff > 0 && heightDiff < children[parseInt(i_11.toString(), 10)].textNodes[0].dy) {\n                            childNodeHeight = childNodeHeight + children[parseInt(i_11.toString(), 10)].textNodes[0].dy;\n                        }\n                        if (childNodeHeight > actualObject.bounds.height) {\n                            var contString = '';\n                            for (var index = 0; index < children[parseInt(i_11.toString(), 10)].textNodes.length; index++) {\n                                // eslint-disable-next-line\n                                var childHeight = children[i_11].textNodes[0].dy * (index + 1);\n                                // eslint-disable-next-line\n                                childHeight = childHeight;\n                                contString = contString + children[parseInt(i_11.toString(), 10)].textNodes[parseInt(index.toString(), 10)].text;\n                            }\n                            children[parseInt(i_11.toString(), 10)].content = contString;\n                        }\n                    }\n                    /** set text node width less than the parent */\n                    children[parseInt(i_11.toString(), 10)].width = actualObject.bounds.width;\n                }\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        }\n        this.pdfViewer.renderDrawing(undefined, actualObject.pageIndex);\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText') {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length === 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Left';\n                    children[1].setOffsetWithRespectToBounds(0.5, 0, null);\n                }\n                else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, null);\n                }\n            }\n        }\n    };\n    Drawing.prototype.fontSizeCalculation = function (actualObject, element, boundsWidth) {\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + actualObject.pageIndex);\n        var context = canvas.getContext(\"2d\");\n        var textwidth = 0;\n        var newsize = 0;\n        var fontStyle = '';\n        if (element.style.italic && element.style.bold) {\n            fontStyle = 'bold italic ';\n        }\n        else if (element.style.bold) {\n            fontStyle = 'bold ';\n        }\n        else if (element.style.italic) {\n            fontStyle = 'italic ';\n        }\n        while (boundsWidth > textwidth) {\n            context.font = fontStyle + newsize + 'px ' + element.style.fontFamily;\n            textwidth = context.measureText(actualObject.dynamicText).width;\n            newsize += 0.1;\n        }\n        newsize -= 0.1;\n        return newsize;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.setLineDistance = function (actualObject, points, segment, leader) {\n        var node1;\n        if (leader) {\n            node1 = initLeader(actualObject, points[1], points[0], leader);\n        }\n        else {\n            node1 = initLeader(actualObject, points[0], points[1], leader);\n        }\n        segment.data = node1.data;\n        segment.offsetX = node1.offsetX;\n        segment.offsetY = node1.offsetY;\n        segment.rotateAngle = node1.rotateAngle;\n        segment.width = node1.width;\n        segment.height = node1.height;\n        segment.pivot = node1.pivot;\n        segment.canMeasurePath = true;\n        segment.isDirt = true;\n    };\n    /**\n     * @private\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.pdfViewer.selectedItems;\n        return this.scale(obj, sx, sy, pivot);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the annotaion object.\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.annotations && obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n            else if (obj.formFields && obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n        }\n        else {\n            checkBoundaryConstraints = this.scaleAnnotation(obj, sx, sy, pivot, undefined);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} obj - Specified the annotation object.\n     * @param {DrawingElement} element - Specified the annotation element.\n     * @param {IElement} refObject - Specified the annotation reference object.\n     * @returns {void}\n     */\n    Drawing.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (!isLineShapes(obj)) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.wrapper.actualSize.width;\n                sh = height / node.wrapper.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            if (!refObject) {\n                refObject = obj;\n            }\n            var refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (!isLineShapes(obj)) {\n                var node = obj;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                if (width > 0) {\n                    node.wrapper.width = width;\n                    node.wrapper.offsetX = newPosition.x;\n                }\n                if (height > 0) {\n                    node.wrapper.height = height;\n                    node.wrapper.offsetY = newPosition.y;\n                }\n                this.nodePropertyChange(obj, {\n                    bounds: { width: node.wrapper.width, height: node.wrapper.height, x: node.wrapper.offsetX, y: node.wrapper.offsetY }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} refObject - Specified the reference object.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleAnnotation = function (obj, sw, sh, pivot, refObject) {\n        // eslint-disable-next-line\n        var node = this.pdfViewer.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = this.getShapePoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined) {\n            this.scaleObject(sw, sh, refPoint, node, element, refObject);\n        }\n        // eslint-disable-next-line max-len\n        var constraints = this.checkBoundaryConstraints(undefined, undefined, obj.pageIndex, obj.wrapper.bounds);\n        if (!constraints) {\n            this.scaleObject(1 / sw, 1 / sh, refPoint, node, element, refObject);\n            //bug (EJ2-62649) : fixed an issue with difficulty on moving/ resizing free text annotation that added in edge of viewer \n            // eslint-disable-next-line\n            if (obj.shapeAnnotationType === 'FreeText' && (obj.id.slice(0, 9) === 'free_text' || obj.id.slice(0, 8) === 'freetext')) {\n                var newDiff = this.moveInsideViewer(obj);\n                this.nodePropertyChange(obj, {\n                    bounds: { width: obj.wrapper.width, height: obj.wrapper.height, x: obj.wrapper.offsetX + newDiff.tx, y: obj.wrapper.offsetY + newDiff.ty }\n                });\n            }\n        }\n        return constraints;\n    };\n    //bug (EJ2-62649) : Implemnted method for calculating optimal bound for free text annotation that outside viewer container \n    Drawing.prototype.moveInsideViewer = function (obj, tx, ty) {\n        tx = tx ? tx : 0;\n        ty = ty ? ty : 0;\n        if (obj.shapeAnnotationType === 'FreeText' && (obj.id.slice(0, 9) === 'free_text' || obj.id.slice(0, 8) === 'freetext')) {\n            // eslint-disable-next-line\n            var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + obj.pageIndex);\n            if (canvas) {\n                var bounds = obj.wrapper.bounds;\n                var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n                var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n                var right = bounds.right;\n                var left = bounds.left;\n                var top_1 = bounds.top;\n                var bottom = bounds.bottom;\n                // eslint-disable-next-line\n                if (!(right + tx <= width - 3 && left + tx >= 1 && bottom + ty <= height - 3 && top_1 + ty >= 1)) {\n                    var txNew = 0;\n                    var tyNew = 0;\n                    if (!(right <= width - 3)) {\n                        txNew = width - right - 3;\n                    }\n                    if (!(left >= 1)) {\n                        txNew = txNew - left + 1;\n                    }\n                    if (!(bottom <= height - 3)) {\n                        tyNew = height - bottom - 3;\n                    }\n                    if (!(top_1 >= 1)) {\n                        tyNew = tyNew - top_1 + 1;\n                    }\n                    if (txNew !== 0) {\n                        tx = txNew;\n                    }\n                    if (tyNew !== 0) {\n                        ty = tyNew;\n                    }\n                }\n            }\n        }\n        return { tx: tx, ty: ty };\n    };\n    /**\n     * @private\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {Rect} nodeBounds - Specified the node bounds value.\n     * @param {boolean} isStamp - Specified the annotation is stamp or not.\n     * @param {boolean} isSkip - Specified the annotaion is skip or not.\n     * @returns {boolean} - Returns true or false.\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.checkBoundaryConstraints = function (tx, ty, pageIndex, nodeBounds, isStamp, isSkip) {\n        var selectorBounds = !nodeBounds ? this.pdfViewer.selectedItems.wrapper.bounds : undefined;\n        var bounds = nodeBounds;\n        // eslint-disable-next-line\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        var heightDifference = 1;\n        if (canvas) {\n            var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n            var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (isStamp) {\n                heightDifference = 50;\n                if (this.pdfViewer.viewerBase.eventArgs && this.pdfViewer.viewerBase.eventArgs.source) {\n                    if (this.RestrictStamp(this.pdfViewer.viewerBase.eventArgs.source)) {\n                        return false;\n                    }\n                }\n            }\n            if ((right <= width - 3 || left >= 1 && bottom <= height - 3 && top_2 >= heightDifference) || isSkip) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.RestrictStamp = function (source) {\n        // eslint-disable-next-line max-len\n        if (source && source.pageIndex !== undefined && this.pdfViewer.viewerBase.activeElements && source.pageIndex !== this.pdfViewer.viewerBase.activeElements.activePageID) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} shapeElement - Specified the shape element.\n     * @returns {Rect} - Returns the rectangle object.\n     */\n    Drawing.prototype.getShapeBounds = function (shapeElement) {\n        var shapeBounds = new Rect();\n        var shapeCorners = cornersPointsBeforeRotation(shapeElement);\n        var shapeMiddleLeft = shapeCorners.middleLeft;\n        var shapeTopCenter = shapeCorners.topCenter;\n        var shapeBottomCenter = shapeCorners.bottomCenter;\n        var shapeMiddleRight = shapeCorners.middleRight;\n        var shapeTopLeft = shapeCorners.topLeft;\n        var shapeTopRight = shapeCorners.topRight;\n        var shapeBottomLeft = shapeCorners.bottomLeft;\n        var shapeBottomRight = shapeCorners.bottomRight;\n        shapeElement.corners = {\n            topLeft: shapeTopLeft, topCenter: shapeTopCenter, topRight: shapeTopRight, middleLeft: shapeMiddleLeft,\n            middleRight: shapeMiddleRight, bottomLeft: shapeBottomLeft, bottomCenter: shapeBottomCenter, bottomRight: shapeBottomRight\n        };\n        if (shapeElement.rotateAngle !== 0 || shapeElement.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, shapeElement.rotateAngle + shapeElement.parentTransform, shapeElement.offsetX, shapeElement.offsetY);\n            shapeElement.corners.topLeft = shapeTopLeft = transformPointByMatrix(matrix, shapeTopLeft);\n            shapeElement.corners.topCenter = shapeTopCenter = transformPointByMatrix(matrix, shapeTopCenter);\n            shapeElement.corners.topRight = shapeTopRight = transformPointByMatrix(matrix, shapeTopRight);\n            shapeElement.corners.middleLeft = shapeMiddleLeft = transformPointByMatrix(matrix, shapeMiddleLeft);\n            shapeElement.corners.middleRight = shapeMiddleRight = transformPointByMatrix(matrix, shapeMiddleRight);\n            shapeElement.corners.bottomLeft = shapeBottomLeft = transformPointByMatrix(matrix, shapeBottomLeft);\n            shapeElement.corners.bottomCenter = shapeBottomCenter = transformPointByMatrix(matrix, shapeBottomCenter);\n            shapeElement.corners.bottomRight = shapeBottomRight = transformPointByMatrix(matrix, shapeBottomRight);\n            //Set corners based on rotate angle\n        }\n        shapeBounds = Rect.toBounds([shapeTopLeft, shapeTopRight, shapeBottomLeft, shapeBottomRight]);\n        shapeElement.corners.left = shapeBounds.left;\n        shapeElement.corners.right = shapeBounds.right;\n        shapeElement.corners.top = shapeBounds.top;\n        shapeElement.corners.bottom = shapeBounds.bottom;\n        shapeElement.corners.center = shapeBounds.center;\n        shapeElement.corners.width = shapeBounds.width;\n        shapeElement.corners.height = shapeBounds.height;\n        return shapeBounds;\n    };\n    /**\n     * @private\n     * @param {number} x - Specified the x value.\n     * @param {number} y - Specified the y value.\n     * @param {number} w - Specified the w value.\n     * @param {number} h - Specified the h value.\n     * @param {number} angle - Specified the angle value.\n     * @param {number} offsetX - Specified the offset x value.\n     * @param {number} offsetY - Specified the offset y value.\n     * @param {PointModel} cornerPoint - Specified the corner point value.\n     * @returns {PointModel} - Returns the point model.\n     */\n    Drawing.prototype.getShapePoint = function (x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n        var pivotPoint = { x: 0, y: 0 };\n        var transformMatrix = identityMatrix();\n        rotateMatrix(transformMatrix, angle, offsetX, offsetY);\n        switch (cornerPoint.x) {\n            case 1:\n                switch (cornerPoint.y) {\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y + h / 2 }));\n                        break;\n                }\n                break;\n            case 0:\n                switch (cornerPoint.y) {\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y }));\n                        break;\n                }\n                break;\n            case 0.5:\n                switch (cornerPoint.y) {\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y + h }));\n                        break;\n                }\n                break;\n        }\n        return { x: pivotPoint.x, y: pivotPoint.y };\n    };\n    /**\n     * @private\n     * @param {string} endPoint - Specified the end point value.\n     * @param {IElement} obj - Specified the annotaion object.\n     * @param {PointModel} point - Specified the annotation points.\n     * @param {PointModel} segment - Specified the annotaion segment.\n     * @param {IElement} target - Specified the target element.\n     * @param {string} targetPortId - Specified the target port id.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {boolean} - Returns true or false.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId, currentSelector) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        // eslint-disable-next-line\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.annotations[0];\n        }\n        else {\n            connector = obj;\n        }\n        point = { x: point.x / this.pdfViewer.viewerBase.getZoomFactor(), y: point.y / this.pdfViewer.viewerBase.getZoomFactor() };\n        if (this.checkBoundaryConstraints(undefined, undefined, connector.pageIndex, connector.wrapper.bounds)) {\n            if (connector.shapeAnnotationType === 'Distance') {\n                var leader = isLeader(connector, endPoint);\n                if (endPoint === 'Leader0') {\n                    if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n                        connector.vertexPoints[0].x = point.x;\n                        connector.vertexPoints[0].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n                else if (endPoint === 'Leader1') {\n                    var length_2 = connector.vertexPoints.length - 1;\n                    if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].x = point.x;\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].x += tx;\n                        connector.vertexPoints[parseInt(length_2.toString(), 10)].y += ty;\n                    }\n                }\n                else {\n                    // eslint-disable-next-line\n                    var angle = Point.findAngle(connector.sourcePoint, connector.targetPoint);\n                    // eslint-disable-next-line\n                    var center = obj.wrapper.children[0].bounds.center;\n                    // eslint-disable-next-line\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, -angle, center.x, center.y);\n                    // eslint-disable-next-line\n                    var rotatedPoint = transformPointByMatrix(matrix, { x: point.x, y: point.y });\n                    if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                        // eslint-disable-next-line\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, -angle, center.x, center.y);\n                        // eslint-disable-next-line\n                        var rotatedPoint1 = transformPointByMatrix(matrix, connector.vertexPoints[0]);\n                        // eslint-disable-next-line\n                        var rotatedPoint2 = transformPointByMatrix(matrix, connector.vertexPoints[connector.vertexPoints.length - 1]);\n                        ty = rotatedPoint.y - rotatedPoint1.y;\n                        if (connector.leaderHeight === 0 && connector.leaderHeight != null) {\n                            connector.leaderHeight = this.pdfViewer.distanceSettings.leaderLength;\n                        }\n                        else {\n                            connector.leaderHeight += ty;\n                            rotatedPoint1.y += ty;\n                            rotatedPoint2.y += ty;\n                            // eslint-disable-next-line\n                            var matrix = identityMatrix();\n                            rotateMatrix(matrix, angle, center.x, center.y);\n                            connector.vertexPoints[0] = transformPointByMatrix(matrix, rotatedPoint1);\n                            connector.vertexPoints[connector.vertexPoints.length - 1] = transformPointByMatrix(matrix, rotatedPoint2);\n                        }\n                    }\n                }\n            }\n            else if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                var i = Number(endPoint.split('_')[1]);\n                tx = point.x - connector.vertexPoints[parseInt(i.toString(), 10)].x;\n                ty = point.y - connector.vertexPoints[parseInt(i.toString(), 10)].y;\n                connector.vertexPoints[parseInt(i.toString(), 10)].x += tx;\n                connector.vertexPoints[parseInt(i.toString(), 10)].y += ty;\n                if (connector.vertexPoints.length > 2 && obj.measureType !== 'Perimeter') {\n                    if (parseFloat(endPoint.split('_')[1]) === 0) {\n                        connector.vertexPoints[connector.vertexPoints.length - 1].x += tx;\n                        connector.vertexPoints[connector.vertexPoints.length - 1].y += ty;\n                    }\n                    else if (parseFloat(endPoint.split('_')[1]) === connector.vertexPoints.length - 1) {\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n            }\n            this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n            this.renderSelector(connector.pageIndex, currentSelector);\n        }\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the y value.\n     * @param {number} i - Specified the index value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragSourceEnd = function (obj, tx, ty, i) {\n        // eslint-disable-next-line\n        var connector = this.pdfViewer.nameTable[obj.id];\n        connector.vertexPoints[parseInt(i.toString(), 10)].x += tx;\n        connector.vertexPoints[parseInt(i.toString(), 10)].y += ty;\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @param {PointModel[]} points - Specified the points value.\n     * @returns {void}\n     */\n    Drawing.prototype.updateConnector = function (connector, points) {\n        var srcDecorator;\n        var tarDecorator;\n        var targetPoint;\n        connector.vertexPoints = points;\n        updateSegmentElement(connector, points, connector.wrapper.children[0]);\n        var srcPoint = connector.sourcePoint;\n        var anglePoint = connector.vertexPoints;\n        //  points = this.clipDecorators(connector, points);\n        var element = connector.wrapper.children[0];\n        element.canMeasurePath = true;\n        for (var i = 0; i < connector.wrapper.children.length; i++) {\n            element = connector.wrapper.children[parseInt(i.toString(), 10)];\n            if (connector.shapeAnnotationType !== 'Polygon') {\n                if (element.id.indexOf('srcDec') > -1) {\n                    updateDecoratorElement(connector, element, points[0], anglePoint[1], true);\n                }\n                targetPoint = connector.targetPoint;\n                if (element.id.indexOf('tarDec') > -1) {\n                    updateDecoratorElement(connector, element, points[points.length - 1], anglePoint[anglePoint.length - 2], false);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {Object} - Returns the object.\n     */\n    Drawing.prototype.copy = function () {\n        var annotationSettings;\n        if (!isNullOrUndefined(this.pdfViewer.annotationModule)) {\n            annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(this.pdfViewer.selectedItems.annotations[0]);\n        }\n        if (((this.pdfViewer.formDesignerModule && !this.pdfViewer.formDesigner.isPropertyDialogOpen) || this.pdfViewer.annotationModule) && (this.pdfViewer.designerMode || this.pdfViewer.enableAnnotation) && (this.pdfViewer.selectedItems.formFields.length !== 0 || (this.pdfViewer.selectedItems.annotations.length !== 0 && !isNullOrUndefined(annotationSettings) && !annotationSettings.isLock))) {\n            this.pdfViewer.clipboardData.pasteIndex = 1;\n            this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n        }\n        var isSearchboxDialogOpen;\n        var searchBoxId = document.getElementById(this.pdfViewer.element.id + \"_search_box\");\n        if (searchBoxId) {\n            isSearchboxDialogOpen = searchBoxId.style.display !== \"none\";\n        }\n        if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isPropertyDialogOpen || isSearchboxDialogOpen) {\n            this.pdfViewer.clipboardData.clipObject = {};\n        }\n        return this.pdfViewer.clipboardData.clipObject;\n    };\n    /**\n     * @private\n     * @returns {Object[]} - Returns the object array.\n     */\n    Drawing.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.pdfViewer.clipboardData.childTable = {};\n        if (this.pdfViewer.selectedItems.annotations.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.annotations;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = cloneObject((selectedItems[parseInt(j.toString(), 10)]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.formFields;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = cloneObject((selectedItems[parseInt(j.toString(), 10)]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.clipboardData.pasteIndex === 0) {\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                // eslint-disable-next-line\n                if (this.pdfViewer.nameTable[item.id]) {\n                    if (!item.formFieldAnnotationType) {\n                        if (item.annotName)\n                            this.pdfViewer.annotationModule.deleteAnnotationById(item.annotName);\n                        else\n                            this.pdfViewer.annotationModule.deleteAnnotation();\n                    }\n                    else {\n                        this.pdfViewer.clearSelection(item.pageIndex);\n                        this.pdfViewer.formDesignerModule.deleteFormField(item.id);\n                    }\n                }\n            }\n            //this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    Drawing.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.pdfViewer.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[parseInt(i.toString(), 10)]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel[]} obj - Specified the annotation object.\n     * @param {number} index - Specified the annotation index.\n     * @returns {void}\n     */\n    Drawing.prototype.paste = function (obj, index) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        var fieldId;\n        if (obj || this.pdfViewer.clipboardData.clipObject) {\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.pdfViewer.clipboardData.clipObject;\n            if (copiedItems) {\n                var objectTable = {};\n                if (this.pdfViewer.clipboardData.pasteIndex !== 0) {\n                    this.pdfViewer.clearSelection(index);\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    fieldId = copy.id;\n                    copy.id += randomId();\n                    var fieldName = this.splitFormFieldName(copy);\n                    var maxNumber = 0; // this.pdfViewer.formFieldCollection.length;\n                    if (this.pdfViewer.formDesigner) {\n                        this.pdfViewer.formDesigner.setFormFieldIndex();\n                        maxNumber = this.pdfViewer.formDesigner.formFieldIndex;\n                        copy.name = fieldName + maxNumber;\n                    }\n                    // eslint-disable-next-line\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[parseInt(j.toString(), 10)];\n                    var pageDiv = this.pdfViewer.viewerBase.getElement('_pageDiv_' + copy.pageIndex);\n                    // eslint-disable-next-line\n                    var events = event;\n                    if (events && !events.clientX && !events.clientY) {\n                        events = { clientX: this.pdfViewer.viewerBase.mouseLeft, clientY: this.pdfViewer.viewerBase.mouseTop };\n                    }\n                    if (isBlazor()) {\n                        events = this.pdfViewer.viewerBase.mouseDownEvent;\n                    }\n                    if (isLineShapes(copy)) {\n                        this.calculateCopyPosition(copy, pageDiv, events);\n                    }\n                    else {\n                        if (pageDiv) {\n                            var pageCurrentRect = pageDiv.getBoundingClientRect();\n                            copy.bounds.x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                            copy.bounds.y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                        }\n                    }\n                    var newNode = cloneObject(copy);\n                    if (this.pdfViewer.viewerBase.contextMenuModule.previousAction !== 'Cut') {\n                        newNode.id += randomId();\n                        if (this.pdfViewer.annotationModule && newNode.shapeAnnotationType !== 'HandWrittenSignature') {\n                            newNode.annotName = newNode.id;\n                            // eslint-disable-next-line max-len\n                            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], false);\n                        }\n                        if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                            this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                        }\n                        if (!newNode.formFieldAnnotationType) {\n                            this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(false), null, newNode, 'Addition', '', newNode, newNode);\n                        }\n                    }\n                    else {\n                        if (this.pdfViewer.annotationModule) {\n                            // eslint-disable-next-line max-len\n                            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], true);\n                        }\n                        if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                            this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                        }\n                    }\n                    var addedAnnot = this.add(newNode);\n                    if (this.pdfViewer.formDesigner && addedAnnot.formFieldAnnotationType && this.pdfViewer.annotation) {\n                        this.pdfViewer.annotation.addAction(this.pdfViewer.viewerBase.getActivePage(true), null, addedAnnot, 'Addition', '', addedAnnot, addedAnnot);\n                    }\n                    if ((newNode.shapeAnnotationType === 'FreeText' || newNode.enableShapeLabel) && addedAnnot) {\n                        this.nodePropertyChange(addedAnnot, {});\n                    }\n                    if (addedAnnot.formFieldAnnotationType && addedAnnot.pageIndex === index) {\n                        this.pdfViewer.formFieldCollection.push(addedAnnot);\n                        // eslint-disable-next-line max-len\n                        var formField = {\n                            id: addedAnnot.id, name: addedAnnot.name, value: addedAnnot.value, type: addedAnnot.formFieldAnnotationType,\n                            isReadOnly: addedAnnot.isReadonly, fontFamily: addedAnnot.fontFamily,\n                            // eslint-disable-next-line max-len\n                            fontSize: addedAnnot.fontSize, fontStyle: addedAnnot.fontStyle, color: addedAnnot.color, backgroundColor: addedAnnot.backgroundColor,\n                            // eslint-disable-next-line max-len\n                            alignment: addedAnnot.alignment, visibility: addedAnnot.visibility, maxLength: addedAnnot.maxLength, isRequired: addedAnnot.isRequired,\n                            // eslint-disable-next-line max-len\n                            isPrint: addedAnnot.isPrint, isSelected: addedAnnot.isSelected, isChecked: addedAnnot.isChecked, tooltip: addedAnnot.tooltip, bounds: addedAnnot.bounds, thickness: addedAnnot.thickness, borderColor: addedAnnot.borderColor, signatureIndicatorSettings: addedAnnot.signatureIndicatorSettings, insertSpaces: addedAnnot.insertSpaces, isMultiline: addedAnnot.isMultiline, isTransparent: addedAnnot.isTransparent, options: addedAnnot.options, pageIndex: addedAnnot.pageIndex, pageNumber: addedAnnot.pageNumber, rotateAngle: addedAnnot.rotateAngle, signatureType: addedAnnot.signatureType, zIndex: addedAnnot.zIndex, selectedIndex: addedAnnot.selectedIndex\n                        };\n                        if (addedAnnot.options && addedAnnot.options.length > 0) {\n                            formField.options = addedAnnot.options;\n                        }\n                        this.pdfViewer.formFieldCollections.push(formField);\n                        // eslint-disable-next-line max-len\n                        this.pdfViewer.formDesigner.drawHTMLContent(addedAnnot.formFieldAnnotationType, addedAnnot.wrapper.children[0], addedAnnot, addedAnnot.pageIndex, this.pdfViewer, fieldId);\n                    }\n                    this.pdfViewer.select([newNode.id], this.pdfViewer.annotationSelectorSettings);\n                    if (!addedAnnot.formFieldAnnotationType) {\n                        this.pdfViewer.annotationModule.triggerAnnotationAddEvent(newNode);\n                    }\n                    ;\n                }\n            }\n            this.pdfViewer.renderDrawing(undefined, index);\n            this.pdfViewer.clipboardData.pasteIndex++;\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    Drawing.prototype.splitFormFieldName = function (obj) {\n        // eslint-disable-next-line\n        var field = null;\n        if (obj) {\n            switch (obj.formFieldAnnotationType) {\n                case 'Textbox':\n                    field = \"Textbox\";\n                    break;\n                case 'PasswordField':\n                    field = \"Password\";\n                    break;\n                case 'Checkbox':\n                    field = \"Check Box\";\n                    break;\n                case 'RadioButton':\n                    field = \"Radio Button\";\n                    break;\n                case 'DropdownList':\n                    field = \"Dropdown\";\n                    break;\n                case 'ListBox':\n                    field = \"List Box\";\n                    break;\n                case 'SignatureField':\n                    field = \"Signature\";\n                    break;\n                case 'InitialField':\n                    field = \"Initial\";\n                    break;\n            }\n        }\n        return field;\n    };\n    Drawing.prototype.calculateCopyPosition = function (copy, pageDiv, events) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0; i < copy.vertexPoints.length; i++) {\n            if (pageDiv) {\n                if (i === 0) {\n                    var pageCurrentRect = pageDiv.getBoundingClientRect();\n                    x1 = copy.vertexPoints[parseInt(i.toString(), 10)].x;\n                    y1 = copy.vertexPoints[parseInt(i.toString(), 10)].y;\n                    copy.vertexPoints[parseInt(i.toString(), 10)].x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                    copy.vertexPoints[parseInt(i.toString(), 10)].y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                    x2 = copy.vertexPoints[parseInt(i.toString(), 10)].x;\n                    y2 = copy.vertexPoints[parseInt(i.toString(), 10)].y;\n                }\n                else {\n                    copy.vertexPoints[parseInt(i.toString(), 10)].x += x2 - x1;\n                    copy.vertexPoints[parseInt(i.toString(), 10)].y += y2 - y1;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the annotaion index.\n     * @returns {void}\n     */\n    Drawing.prototype.cut = function (index) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.removedAnnotationCollection = [];\n        }\n        if (((this.pdfViewer.formDesignerModule && !this.pdfViewer.formDesigner.isPropertyDialogOpen) || this.pdfViewer.selectedItems.annotations.length > 0) && (this.pdfViewer.designerMode || this.pdfViewer.selectedItems.annotations.length > 0) && (this.pdfViewer.selectedItems.formFields.length !== 0 || this.pdfViewer.selectedItems.annotations.length !== 0)) {\n            this.pdfViewer.clipboardData.pasteIndex = 0;\n            this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n            this.pdfViewer.renderDrawing(undefined, index);\n            this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n        }\n        var isSearchboxDialogOpen;\n        var searchBoxId = document.getElementById(this.pdfViewer.element.id + \"_search_box\");\n        if (searchBoxId) {\n            isSearchboxDialogOpen = searchBoxId.style.display !== \"none\";\n        }\n        if (this.pdfViewer.formDesigner && this.pdfViewer.formDesigner.isPropertyDialogOpen || isSearchboxDialogOpen) {\n            this.pdfViewer.clipboardData.clipObject = {};\n        }\n    };\n    /**\n     * @private\n     * @param {Object[]} nodeArray - Specified the node array.\n     * @param {string} sortID - Specified the sort id.\n     * @returns {Object[]} - Returns the node array.\n     */\n    Drawing.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            // eslint-disable-next-line\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    return Drawing;\n}());\nexport { Drawing };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}