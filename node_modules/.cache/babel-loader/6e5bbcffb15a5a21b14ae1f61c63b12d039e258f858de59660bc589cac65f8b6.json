{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { AnnotationRenderer, ShapeAnnotationBase, MeasureShapeAnnotationBase, ImageStructureBase } from './index';\nimport { PdfRotationAngle, PdfSquareAnnotation, PdfAnnotationFlag, PdfPopupAnnotation, PdfFreeTextAnnotation, PdfRubberStampAnnotation, PdfTextMarkupAnnotation, PdfInkAnnotation, PdfLineAnnotation, PdfRectangleAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfPolygonAnnotation, PdfPolyLineAnnotation, PdfAngleMeasurementAnnotation, PdfAnnotationState, PdfAnnotationStateModel, _ContentParser, _stringToBytes, _encode } from '@syncfusion/ej2-pdf';\nimport { Rect } from '@syncfusion/ej2-drawings';\n/**\n * PageRenderer\n *\n * @hidden\n */\nvar PageRenderer = /** @class */function () {\n  /**\n   * @param {PdfViewer} pdfViewer - The PdfViewer.\n   * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n   * @private\n   */\n  function PageRenderer(pdfViewer, pdfViewerBase) {\n    /**\n     * @private\n     */\n    this.shapeAnnotationList = [];\n    /**\n     * @private\n     */\n    this.textMarkupAnnotationList = [];\n    /**\n     * @private\n     */\n    this.measureAnnotationList = [];\n    /**\n     * @private\n     */\n    this.stickyAnnotationList = [];\n    /**\n     * @private\n     */\n    this.rubberStampAnnotationList = [];\n    /**\n     * @private\n     */\n    this.freeTextAnnotationList = [];\n    /**\n     * @private\n     */\n    this.signatureAnnotationList = [];\n    /**\n     * @private\n     */\n    this.signatureInkAnnotationList = [];\n    /**\n     * @private\n     */\n    this.annotationOrder = [];\n    /**\n     * @private\n     */\n    this.hyperlinks = [];\n    /**\n     * @private\n     */\n    this.imageData = '';\n    /**\n     * @private\n     */\n    this.isMaskedImage = false;\n    /**\n     * @private\n     */\n    this.hyperlinkBounds = [];\n    /**\n     * @private\n     */\n    this.annotationDestPage = [];\n    /**\n     * @private\n     */\n    this.annotationList = [];\n    /**\n     * @private\n     */\n    this.annotationYPosition = [];\n    /**\n     * @private\n     */\n    this.digitalSignaturePresent = false;\n    this.annotationCount = 0;\n    /**\n     * @private\n     */\n    this.isAnnotationPresent = false;\n    /**\n     *\n     * @private\n     */\n    this.htmldata = [];\n    /**\n     *\n     * @private\n     */\n    this.renderingMode = 0;\n    this.textString = \"\";\n    this.baseFont = \"\";\n    this.fontSize = 0;\n    this.pdfViewer = pdfViewer;\n    this.pdfViewerBase = pdfViewerBase;\n  }\n  /**\n   * @param {number} pageNumber\n   * @param {Size} pageSize\n   * @private\n   */\n  PageRenderer.prototype.exportAnnotationComments = function (pageNumber, pageSize) {\n    var page = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(parseInt(pageNumber.toString(), 10));\n    var pageRotation = page.rotation;\n    return this.getAnnotationFromPDF(pageSize.height, pageSize.width, pageNumber, pageRotation);\n  };\n  PageRenderer.prototype.IsStampExist = function (subject) {\n    switch (subject.trim()) {\n      case \"Approved\":\n      case \"Not Approved\":\n      case \"Confidential\":\n      case \"Draft\":\n      case \"Final\":\n      case \"Completed\":\n      case \"For Public Release\":\n      case \"Not For Public Release\":\n      case \"For Comment\":\n      case \"Void\":\n      case \"Preliminary Results\":\n      case \"Information Only\":\n      case \"Witness\":\n      case \"Initial Here\":\n      case \"Sign Here\":\n      case \"Accepted\":\n      case \"Rejected\":\n      case \"Revised\":\n      case \"Reviewed\":\n      case \"Received\":\n        return true;\n      default:\n        return false;\n    }\n  };\n  PageRenderer.prototype.getAnnotationFromPDF = function (height, width, pageNumber, pageRotation) {\n    var loadedPage = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(parseInt(pageNumber.toString(), 10));\n    var annotRenderer = new AnnotationRenderer(this.pdfViewer, this.pdfViewerBase);\n    var textLabelCollection = [];\n    var loadedFreetextAnnotations = [];\n    this.isAnnotationPresent = false;\n    if (loadedPage != null) {\n      loadedFreetextAnnotations = this.getAllFreeTextAnnotations(loadedPage.annotations);\n      this.annotationCount = 0;\n      if (loadedPage.annotations != null && loadedPage.annotations.count > 0) {\n        this.isAnnotationPresent = true;\n        var _loop_1 = function (i) {\n          var annotation = loadedPage.annotations.at(i);\n          if (annotation instanceof PdfTextMarkupAnnotation) {\n            // eslint-disable-next-line max-len\n            var textMarkup = annotRenderer.loadTextMarkupAnnotation(annotation, height, width, pageRotation, loadedPage);\n            this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length] = textMarkup;\n            this_1.annotationOrder[this_1.annotationOrder.length] = textMarkup;\n            var name_1 = this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length - 1].AnnotName;\n            if (isNullOrUndefined(name_1) || name_1 === '') {\n              // eslint-disable-next-line max-len\n              this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length - 1].AnnotName = this_1.setAnnotationName(pageNumber);\n            }\n          } else if (annotation instanceof PdfLineAnnotation) {\n            // eslint-disable-next-line max-len\n            var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n            if (!isNullOrUndefined(shapeLabel)) {\n              textLabelCollection.push(shapeLabel.name);\n            }\n            // eslint-disable-next-line max-len\n            var shapes = annotRenderer.loadLineAnnotation(annotation, height, width, pageRotation, shapeLabel);\n            var name_2 = shapes.AnnotName;\n            if (isNullOrUndefined(name_2) || name_2 === '') {\n              shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n            }\n            if (!isNullOrUndefined(shapes)) {\n              if (shapes instanceof MeasureShapeAnnotationBase) {\n                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              } else if (shapes instanceof ShapeAnnotationBase) {\n                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              }\n            }\n          } else if (annotation instanceof PdfSquareAnnotation || annotation instanceof PdfRectangleAnnotation) {\n            // eslint-disable-next-line max-len\n            var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n            if (!isNullOrUndefined(shapeLabel)) {\n              textLabelCollection.push(shapeLabel.name);\n            }\n            // eslint-disable-next-line max-len\n            var shapes = annotRenderer.loadSquareAnnotation(annotation, height, width, pageRotation, shapeLabel);\n            var name_3 = shapes.AnnotName;\n            if (isNullOrUndefined(name_3) || name_3 === '') {\n              shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n            }\n            if (!isNullOrUndefined(shapes)) {\n              if (shapes instanceof MeasureShapeAnnotationBase) {\n                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              } else if (shapes instanceof ShapeAnnotationBase) {\n                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              }\n            }\n          } else if (annotation instanceof PdfRectangleAnnotation) {\n            //rectangle annotation\n          } else if (annotation instanceof PdfCircleAnnotation) {\n            // eslint-disable-next-line max-len\n            var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n            if (!isNullOrUndefined(shapeLabel)) {\n              textLabelCollection.push(shapeLabel.name);\n            }\n            // eslint-disable-next-line max-len\n            var shapes = annotRenderer.loadEllipseAnnotation(annotation, height, width, pageRotation, shapeLabel);\n            if (!isNullOrUndefined(shapes)) {\n              if (shapes instanceof MeasureShapeAnnotationBase) {\n                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              } else if (shapes instanceof ShapeAnnotationBase) {\n                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              }\n            }\n          } else if (annotation instanceof PdfEllipseAnnotation) {\n            // eslint-disable-next-line max-len\n            var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n            if (!isNullOrUndefined(shapeLabel)) {\n              textLabelCollection.push(shapeLabel.name);\n            }\n            // eslint-disable-next-line max-len\n            var shapes = annotRenderer.loadEllipseAnnotation(annotation, height, width, pageRotation, shapeLabel);\n            if (!isNullOrUndefined(shapes)) {\n              if (shapes instanceof MeasureShapeAnnotationBase) {\n                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              } else if (shapes instanceof ShapeAnnotationBase) {\n                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              }\n            }\n          } else if (annotation instanceof PdfPolygonAnnotation) {\n            // eslint-disable-next-line max-len\n            var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n            if (!isNullOrUndefined(shapeLabel)) {\n              textLabelCollection.push(shapeLabel.name);\n            }\n            // eslint-disable-next-line max-len\n            var shapes = annotRenderer.loadPolygonAnnotation(annotation, height, width, pageRotation, shapeLabel);\n            var name_4 = shapes.AnnotName;\n            if (isNullOrUndefined(name_4) || name_4 === '') {\n              shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n            }\n            if (!isNullOrUndefined(shapes)) {\n              if (shapes instanceof MeasureShapeAnnotationBase) {\n                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              } else if (shapes instanceof ShapeAnnotationBase) {\n                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              }\n            }\n          } else if (annotation instanceof PdfPolyLineAnnotation || annotation instanceof PdfAngleMeasurementAnnotation) {\n            // eslint-disable-next-line max-len\n            var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n            if (!isNullOrUndefined(shapeLabel)) {\n              textLabelCollection.push(shapeLabel.name);\n            }\n            // eslint-disable-next-line max-len\n            var shapes = annotRenderer.loadPolylineAnnotation(annotation, height, width, pageRotation, shapeLabel);\n            var name_5 = shapes.AnnotName;\n            if (isNullOrUndefined(name_5) || name_5 === '') {\n              shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n            }\n            if (!isNullOrUndefined(shapes)) {\n              if (shapes instanceof MeasureShapeAnnotationBase) {\n                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              } else if (shapes instanceof ShapeAnnotationBase) {\n                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n              }\n            }\n          }\n          if (annotation instanceof PdfRubberStampAnnotation) {\n            this_1.htmldata = [];\n            var stampAnnotation = annotation;\n            if (stampAnnotation._dictionary.has('T') && this_1.checkName(stampAnnotation)) {\n              this_1.signatureAnnotationList.push(annotRenderer.loadSignatureImage(stampAnnotation, pageNumber));\n            } else if (stampAnnotation._dictionary.has(\"M\")) {\n              var rubberStampAnnotation = new StampAnnotationBase();\n              rubberStampAnnotation.Author = stampAnnotation.author;\n              rubberStampAnnotation.Subject = stampAnnotation.subject;\n              rubberStampAnnotation.AnnotName = stampAnnotation.name;\n              if (rubberStampAnnotation.AnnotName === '' || rubberStampAnnotation.AnnotName === null) {\n                rubberStampAnnotation.AnnotName = this_1.setAnnotationName(pageNumber);\n              }\n              if (annotation._dictionary.has(\"rotateAngle\")) {\n                var rotateAngle = annotation._dictionary.get(\"rotateAngle\");\n                if (rotateAngle !== undefined) {\n                  // The rotateAngle will get as 1, 2 and 3 To save in RotateAngle multiplying with 90.\n                  rubberStampAnnotation.RotateAngle = parseInt(rotateAngle[0]) * 90;\n                }\n              } else {\n                // If the rotate angle is not specified in the annotation dictionary, then calculate it based on the page rotation.\n                rubberStampAnnotation.RotateAngle = 360 - (Math.abs(stampAnnotation.rotate * 90) - pageRotation * 90);\n                var rubberStampAnnotationAngle = rubberStampAnnotation.RotateAngle;\n                if (rubberStampAnnotation.RotateAngle > 360) {\n                  rubberStampAnnotation.RotateAngle = rubberStampAnnotationAngle - 360;\n                }\n              }\n              if (rubberStampAnnotation.RotateAngle != 0) {\n                var bounds = this_1.getRubberStampBounds(stampAnnotation._innerTemplateBounds, stampAnnotation.bounds, height, width, pageRotation);\n                rubberStampAnnotation.Rect = bounds;\n              } else {\n                rubberStampAnnotation.Rect = this_1.getBounds(stampAnnotation.bounds, height, width, pageRotation);\n              }\n              if (rubberStampAnnotation.Rect.y) {\n                var cropRect = new Rect(rubberStampAnnotation.Rect.x, loadedPage.cropBox[1] + rubberStampAnnotation.Rect.y, rubberStampAnnotation.Rect.width, rubberStampAnnotation.Rect.height);\n                rubberStampAnnotation.Rect = this_1.getBounds(cropRect, height, width, pageRotation);\n              }\n              rubberStampAnnotation.Icon = stampAnnotation.icon;\n              rubberStampAnnotation.ModifiedDate = stampAnnotation.modifiedDate.toString();\n              rubberStampAnnotation.Opacity = stampAnnotation.opacity;\n              rubberStampAnnotation.pageNumber = pageNumber;\n              var dictionary = annotation._dictionary.get('AP');\n              this_1.pdfViewerBase.pngData.push(stampAnnotation);\n              rubberStampAnnotation.IsDynamic = false;\n              rubberStampAnnotation.AnnotType = 'stamp';\n              if (stampAnnotation._dictionary.hasOwnProperty(\"iconName\")) {\n                rubberStampAnnotation.IconName = stampAnnotation.getValues(\"iconName\")[0];\n              } else if (stampAnnotation.subject !== null) {\n                rubberStampAnnotation.IconName = stampAnnotation.subject;\n              } else {\n                rubberStampAnnotation.IconName = \"\";\n              }\n              if (stampAnnotation.flags === PdfAnnotationFlag.readOnly) {\n                rubberStampAnnotation.IsCommentLock = true;\n              } else {\n                rubberStampAnnotation.IsCommentLock = false;\n              }\n              if (stampAnnotation.flags === PdfAnnotationFlag.locked) {\n                rubberStampAnnotation.IsLocked = true;\n              } else {\n                rubberStampAnnotation.IsLocked = false;\n              }\n              if (!isNullOrUndefined(stampAnnotation.reviewHistory)) {\n                for (var i_1 = 0; i_1 < stampAnnotation.reviewHistory.count; i_1++) {\n                  rubberStampAnnotation.State = this_1.getStateString(stampAnnotation.reviewHistory.at(parseInt(i_1.toString(), 10)).state);\n                  rubberStampAnnotation.StateModel = this_1.getStateModelString(stampAnnotation.reviewHistory.at(parseInt(i_1.toString(), 10)).stateModel);\n                }\n              }\n              if (rubberStampAnnotation.State == null || rubberStampAnnotation.StateModel == null) {\n                rubberStampAnnotation.State = \"Unmarked\";\n                rubberStampAnnotation.StateModel = \"None\";\n              }\n              rubberStampAnnotation.Comments = new Array();\n              for (var i_2 = 0; i_2 < stampAnnotation.comments.count; i_2++) {\n                var annot = annotRenderer.loadPopupAnnotation(stampAnnotation.comments.at(i_2), height, width, pageRotation);\n                rubberStampAnnotation.Comments.push(annot);\n              }\n              if (annotation._dictionary.has('Name')) {\n                rubberStampAnnotation.Name = annotation._dictionary.get('Name');\n                if (annotation._dictionary.get('Name').name.includes(\"#23D\") || annotation._dictionary.get('Name').name.includes(\"#D\")) {\n                  rubberStampAnnotation.IsDynamic = true;\n                }\n                if (!isNullOrUndefined(rubberStampAnnotation.Subject) && !this_1.IsStampExist(rubberStampAnnotation.Subject)) {\n                  rubberStampAnnotation.Subject = stampAnnotation.icon.toString();\n                }\n              }\n              if (isNullOrUndefined(dictionary)) {\n                var pdfReference = annotation._dictionary.get('AP');\n                if (!isNullOrUndefined(pdfReference) && !isNullOrUndefined(pdfReference.dictionary) && pdfReference.dictionary.has('N')) {\n                  var ap_dictionary = pdfReference.dictionary;\n                  if (!isNullOrUndefined(ap_dictionary)) {\n                    this_1.findStampImage(annotation);\n                  }\n                }\n              } else if (dictionary.has('N')) {\n                this_1.findStampImage(annotation);\n              }\n              rubberStampAnnotation.IsMaskedImage = this_1.isMaskedImage;\n              rubberStampAnnotation.Apperarance = this_1.htmldata;\n              if (stampAnnotation._dictionary.has('CustomData')) {\n                var customData = stampAnnotation._dictionary.get('CustomData');\n                if (!(!isNullOrUndefined(customData) && customData.trim())) {\n                  var ExistingCustomData = dictionary.get('CustomData');\n                  if (ExistingCustomData) {\n                    rubberStampAnnotation.CustomData = ExistingCustomData;\n                  }\n                }\n              }\n              this_1.rubberStampAnnotationList.push(rubberStampAnnotation);\n              this_1.annotationOrder.push(rubberStampAnnotation);\n            }\n          }\n          if (annotation instanceof PdfPopupAnnotation) {\n            if (!annotation._dictionary.has(\"IRT\")) {\n              var stickyNote = annotRenderer.loadPopupAnnotation(annotation, height, width, pageRotation);\n              this_1.stickyAnnotationList[this_1.stickyAnnotationList.length] = stickyNote;\n              this_1.annotationOrder[this_1.annotationOrder.length] = stickyNote;\n              var name_6 = stickyNote.AnnotName;\n              if (isNullOrUndefined(name_6) || name_6 === '') {\n                stickyNote.AnnotName = this_1.setAnnotationName(pageNumber);\n              }\n            }\n          }\n          if (annotation instanceof PdfFreeTextAnnotation) {\n            var freeTextAnnot_1 = annotation;\n            var isFreeTextAnnotation = this_1.isFreeTextAnnotationType(freeTextAnnot_1);\n            if (isFreeTextAnnotation) {\n              var isShapeLabelAnnot = textLabelCollection.some(function (s) {\n                return s === freeTextAnnot_1.name;\n              });\n              var freeText = annotRenderer.loadFreeTextAnnotation(freeTextAnnot_1, height, width, pageRotation, loadedPage);\n              if (!isShapeLabelAnnot) {\n                this_1.freeTextAnnotationList[this_1.freeTextAnnotationList.length] = freeText;\n                this_1.annotationOrder[this_1.annotationOrder.length] = freeText;\n              }\n            } else {\n              var freeText = annotRenderer.loadSignatureText(freeTextAnnot_1, pageNumber, height, width, pageRotation);\n              if (!freeTextAnnot_1._dictionary.has('T')) {\n                this_1.signatureAnnotationList[this_1.signatureAnnotationList.length] = freeText;\n                this_1.annotationOrder[this_1.annotationOrder.length] = freeText;\n              }\n            }\n          }\n          if (annotation instanceof PdfInkAnnotation) {\n            var inkAnnotation = annotation;\n            var signatureData = annotRenderer.loadSignature(inkAnnotation, height, width, pageRotation, pageNumber, loadedPage);\n            var inkSignatureData = annotRenderer.loadInkAnnotation(inkAnnotation, height, width, pageRotation, pageNumber, loadedPage);\n            if (!inkAnnotation._dictionary.has(\"T\")) {\n              this_1.signatureAnnotationList.push(signatureData);\n              this_1.annotationOrder.push(signatureData);\n            } else if (inkAnnotation._dictionary.has(\"NM\")) {\n              this_1.signatureInkAnnotationList.push(inkSignatureData);\n              this_1.annotationOrder.push(inkSignatureData);\n            } else if (inkAnnotation._dictionary.has(\"T\")) {\n              if (inkAnnotation._dictionary.has(\"annotationSignature\")) {\n                var canAdd = true;\n                canAdd = inkAnnotation.getValues(\"annotationSignature\").length > 0 ? false : true;\n                if (canAdd) {\n                  this_1.signatureAnnotationList.push(signatureData);\n                  this_1.annotationOrder.push(signatureData);\n                }\n              }\n            }\n            if (!inkAnnotation._dictionary.has('NM') && !inkAnnotation._dictionary.has(\"annotationSignature\")) {\n              this_1.signatureAnnotationList.push(signatureData);\n              this_1.annotationOrder.push(signatureData);\n            }\n          }\n        };\n        var this_1 = this;\n        for (var i = 0; i < loadedPage.annotations.count; i++) {\n          _loop_1(i);\n        }\n      }\n    }\n    return {\n      shapeAnnotation: this.shapeAnnotationList,\n      textMarkupAnnotation: this.textMarkupAnnotationList,\n      measureShapeAnnotation: this.measureAnnotationList,\n      stampAnnotations: this.rubberStampAnnotationList,\n      stickyNotesAnnotation: this.stickyAnnotationList,\n      freeTextAnnotation: this.freeTextAnnotationList,\n      signatureAnnotation: this.signatureAnnotationList,\n      signatureInkAnnotation: this.signatureInkAnnotationList,\n      annotationOrder: this.annotationOrder\n    };\n  };\n  /**\n   * @private\n   * @param annotation\n   */\n  PageRenderer.prototype.findStampImage = function (annotation) {\n    var stream = annotation._dictionary.get(\"AP\").get(\"N\");\n    if (!isNullOrUndefined(stream)) {\n      var appearance = stream;\n      var data = appearance.getString();\n      var content = _stringToBytes(data, true);\n      var parser = new _ContentParser(content);\n      var result = parser._readContent();\n      this.stampAnnoattionRender(result, stream);\n    }\n  };\n  PageRenderer.prototype.stampAnnoattionRender = function (recordCollection, dictionary) {\n    if (!isNullOrUndefined(recordCollection)) {\n      for (var i = 0; i < recordCollection.length; i++) {\n        var element = recordCollection[parseInt(i.toString(), 10)]._operands;\n        switch (recordCollection[parseInt(i.toString(), 10)]._operator) {\n          case \"q\":\n            {\n              var Json = {\n                restorecanvas: false\n              };\n              this.htmldata.push(Json);\n              break;\n            }\n          case \"Q\":\n            {\n              var Json = {\n                restorecanvas: true\n              };\n              this.htmldata.push(Json);\n              break;\n            }\n          case \"Tr\":\n            {\n              this.renderingMode = parseInt(element[0]);\n              break;\n            }\n          case \"TJ\":\n          case \"Tj\":\n            {\n              this.textString = recordCollection[parseInt(i.toString(), 10)]._operands[0];\n              var Json = {\n                type: \"string\",\n                text: this.textString,\n                currentFontname: this.currentFont,\n                baseFontName: this.baseFont,\n                fontSize: this.fontSize\n              };\n              this.htmldata.push(Json);\n              break;\n            }\n          case \"'\":\n            {\n              this.textString = recordCollection[parseInt(i.toString(), 10)]._operands[0];\n              var Json = {\n                type: \"string\",\n                text: this.textString,\n                currentFontname: this.currentFont,\n                baseFontName: this.baseFont,\n                fontSize: this.fontSize\n              };\n              this.htmldata.push(Json);\n              break;\n            }\n          case \"Tf\":\n            {\n              var j = 0;\n              for (j = 0; j < element.length; j++) {\n                if (element[parseInt(j.toString(), 10)].includes(\"/\")) {\n                  this.currentFont = element[parseInt(j.toString(), 10)].replace(\"/\", \"\");\n                  break;\n                }\n              }\n              this.fontSize = parseInt(element[j + 1]);\n              if (dictionary.dictionary.has(\"Resources\")) {\n                var stdic = dictionary.dictionary.get(\"Resources\");\n                if (!isNullOrUndefined(stdic)) {\n                  var fontObject = stdic.get(\"Font\");\n                  if (!isNullOrUndefined(fontObject) && recordCollection[parseInt(i.toString(), 10)]._operator == \"Tf\") {\n                    var name_7 = element[0].replace(\"/\", \"\");\n                    var refernceholder = fontObject.get(name_7);\n                    if (!isNullOrUndefined(refernceholder) && !isNullOrUndefined(refernceholder.dictionary)) {\n                      var sub = refernceholder.dictionary;\n                      this.baseFont = sub.get(\"BaseFont\");\n                    }\n                  }\n                }\n              }\n              break;\n            }\n          case \"Do\":\n            {\n              if (dictionary.dictionary.has(\"Resources\")) {\n                var stdic = dictionary.dictionary.get(\"Resources\");\n                if (!isNullOrUndefined(stdic)) {\n                  var xObject = stdic.get(\"XObject\");\n                  if (!isNullOrUndefined(xObject) && recordCollection[parseInt(i.toString(), 10)]._operator == \"Do\") {\n                    var name_8 = element[0].replace(\"/\", \"\");\n                    if (xObject.has(name_8)) {\n                      var refernceholder = xObject.get(name_8);\n                      if (!isNullOrUndefined(refernceholder) && !isNullOrUndefined(refernceholder.dictionary)) {\n                        var sub = refernceholder;\n                        if (sub.dictionary.get(\"Subtype\").name == \"Image\") {\n                          var imageStucture = new ImageStructureBase(sub, sub.dictionary);\n                          if (!isNullOrUndefined(imageStucture)) {\n                            var imageStream = imageStucture.getImageStream();\n                            var imageString = 'data:image/png;base64,' + _encode(imageStream);\n                            var Json = {\n                              imagedata: imageString\n                            };\n                            this.htmldata.push(Json);\n                            this.Imagedata = imageString;\n                          }\n                        } else if (sub.dictionary.get(\"Subtype\").name === \"Form\") {\n                          var appearance = sub;\n                          var data = appearance.getString();\n                          var content = _stringToBytes(data, true);\n                          var parser = new _ContentParser(content);\n                          var result = parser._readContent();\n                          this.stampAnnoattionRender(result, sub);\n                        }\n                        this.IsMaskedImage = false;\n                        if (sub.dictionary.get(\"SMask\")) {\n                          this.IsMaskedImage = true;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              break;\n            }\n        }\n      }\n    }\n  };\n  PageRenderer.prototype.getStateModelString = function (stateModel) {\n    switch (stateModel) {\n      case PdfAnnotationStateModel.review:\n        return 'Review';\n      case PdfAnnotationStateModel.marked:\n        return 'Marked';\n      case PdfAnnotationStateModel.none:\n        return 'None';\n      default:\n        return 'None';\n    }\n  };\n  PageRenderer.prototype.getStateString = function (state) {\n    switch (state) {\n      case PdfAnnotationState.accepted:\n        return 'Accepted';\n      case PdfAnnotationState.rejected:\n        return 'Rejected';\n      case PdfAnnotationState.cancel:\n        return 'Cancelled';\n      case PdfAnnotationState.completed:\n        return 'Completed';\n      case PdfAnnotationState.none:\n        return 'None';\n      case PdfAnnotationState.unmarked:\n        return 'Unmarked';\n      case PdfAnnotationState.marked:\n        return 'Marked';\n      case PdfAnnotationState.unknown:\n        return 'Unknown';\n      default:\n        return null;\n    }\n  };\n  PageRenderer.prototype.getBounds = function (bounds, pageWidth, pageHeight, pageRotation) {\n    var bound;\n    if (pageRotation === 0) {\n      // eslint-disable-next-line max-len\n      bound = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    } else if (pageRotation === 1) {\n      // eslint-disable-next-line max-len\n      bound = new Rect(this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.y)) - this.convertPointToPixel(bounds.height), bounds.x, bounds.height, bounds.width);\n    } else if (pageRotation === 2) {\n      // eslint-disable-next-line max-len\n      bound = new Rect(this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.x)) - this.convertPointToPixel(bounds.width), this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.y)) - this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width), bounds.height);\n    } else if (pageRotation === 3) {\n      // eslint-disable-next-line max-len\n      bound = new Rect(bounds.y, this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.x)) - this.convertPointToPixel(bounds.width), bounds.height, bounds.width);\n    }\n    return bound;\n  };\n  PageRenderer.prototype.getRubberStampBounds = function (innerTemplateBounds, bounds, pageHeight, pageWidth, pageRotation) {\n    var bound = new Rect();\n    var centerPointX = 0;\n    var centerPointY = 0;\n    if (pageRotation === 0) {\n      centerPointX = bounds.x + bounds.width / 2;\n      centerPointY = bounds.y + bounds.height / 2;\n      bound = new Rect(centerPointX - innerTemplateBounds.width / 2, centerPointY - innerTemplateBounds.height / 2, innerTemplateBounds.width, innerTemplateBounds.height);\n    } else if (pageRotation === 1) {\n      var boundsX = this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.Y) - this.convertPointToPixel(bounds.height));\n      var boundsY = bounds.X;\n      centerPointX = boundsX + bounds.height / 2;\n      centerPointY = boundsY + bounds.width / 2;\n      bound = new Rect(centerPointX - innerTemplateBounds.width / 2, centerPointY - innerTemplateBounds.height / 2, innerTemplateBounds.width, innerTemplateBounds.height);\n    } else if (pageRotation === 2) {\n      var boundsX = this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.X) - this.convertPointToPixel(bounds.width));\n      var boundsY = this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.Y) - this.convertPointToPixel(bounds.height));\n      centerPointX = boundsX + bounds.width / 2;\n      centerPointY = boundsY + bounds.height / 2;\n      bound = new Rect(centerPointX - innerTemplateBounds.width / 2, centerPointY - innerTemplateBounds.height / 2, innerTemplateBounds.width, innerTemplateBounds.height);\n    } else if (pageRotation === 3) {\n      var boundsX = bounds.Y;\n      var boundsY = this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.X) - this.convertPointToPixel(bounds.width));\n      centerPointX = boundsX + bounds.height / 2;\n      centerPointY = boundsY + bounds.width / 2;\n      bound = new Rect(centerPointX - innerTemplateBounds.width / 2, centerPointY - innerTemplateBounds.height / 2, innerTemplateBounds.width, innerTemplateBounds.height);\n    }\n    return bound;\n  };\n  PageRenderer.prototype.convertPixelToPoint = function (value) {\n    return value * 72 / 96;\n  };\n  PageRenderer.prototype.convertPointToPixel = function (value) {\n    return value * 96 / 72;\n  };\n  PageRenderer.prototype.getRotateAngleString = function (angle) {\n    switch (angle) {\n      case PdfRotationAngle.angle0:\n        return 'RotateAngle0';\n      case PdfRotationAngle.angle90:\n        return 'RotateAngle90';\n      case PdfRotationAngle.angle180:\n        return 'RotateAngle180';\n      case PdfRotationAngle.angle270:\n        return 'RotateAngle270';\n      default:\n        return 'RotateAngle0';\n    }\n  };\n  PageRenderer.prototype.checkName = function (stampAnnotation) {\n    // Check if the stamp annotation has a \"Name\" key in its dictionary.\n    if (\"Name\" in stampAnnotation._dictionary) {\n      // Get the custom data for the \"Name\" key.\n      var customData = stampAnnotation.getValues(\"Name\");\n      // Check if the custom data is not null and contains a '#' character.\n      if (!isNullOrUndefined(customData) && customData.indexOf(\"#\") > -1) {\n        // The stamp annotation has a name that contains a '#' character.\n        return true;\n      }\n    }\n    // The stamp annotation does not have a name that contains a '#' character.\n    return false;\n  };\n  PageRenderer.prototype.getAllFreeTextAnnotations = function (annotations) {\n    var loadedFreetextAnnotations = [];\n    for (var i = 0; i < annotations.count; i++) {\n      var annotation = annotations.at(i);\n      if (annotation instanceof PdfFreeTextAnnotation) {\n        loadedFreetextAnnotations.push(annotation);\n      }\n    }\n    return loadedFreetextAnnotations;\n  };\n  PageRenderer.prototype.getShapeFreeText = function (shapeName, loadedFreetextAnnotations) {\n    if (!isNullOrUndefined(shapeName) && shapeName !== '') {\n      return loadedFreetextAnnotations.find(function (annot) {\n        return annot.name.includes(shapeName);\n      });\n    }\n    return null;\n  };\n  PageRenderer.prototype.setAnnotationName = function (pageNumber) {\n    var annotationName = pageNumber + this.annotationCount.toString();\n    this.annotationCount++;\n    return annotationName;\n  };\n  PageRenderer.prototype.isFreeTextAnnotationType = function (freeTextAnnot) {\n    var isFreeTextAnnotation = true;\n    if (freeTextAnnot._dictionary.has('AnnotationType')) {\n      var annotType = freeTextAnnot.getValues('AnnotationType');\n      if (!isNullOrUndefined(annotType) && annotType[0] === 'Signature') {\n        isFreeTextAnnotation = false;\n      }\n    }\n    return isFreeTextAnnotation;\n  };\n  return PageRenderer;\n}();\nexport { PageRenderer };\n/**\n *\n * @hidden\n */\nvar StampAnnotationBase = /** @class */function () {\n  function StampAnnotationBase() {}\n  return StampAnnotationBase;\n}();\nexport { StampAnnotationBase };","map":{"version":3,"names":["isNullOrUndefined","AnnotationRenderer","ShapeAnnotationBase","MeasureShapeAnnotationBase","ImageStructureBase","PdfRotationAngle","PdfSquareAnnotation","PdfAnnotationFlag","PdfPopupAnnotation","PdfFreeTextAnnotation","PdfRubberStampAnnotation","PdfTextMarkupAnnotation","PdfInkAnnotation","PdfLineAnnotation","PdfRectangleAnnotation","PdfCircleAnnotation","PdfEllipseAnnotation","PdfPolygonAnnotation","PdfPolyLineAnnotation","PdfAngleMeasurementAnnotation","PdfAnnotationState","PdfAnnotationStateModel","_ContentParser","_stringToBytes","_encode","Rect","PageRenderer","pdfViewer","pdfViewerBase","shapeAnnotationList","textMarkupAnnotationList","measureAnnotationList","stickyAnnotationList","rubberStampAnnotationList","freeTextAnnotationList","signatureAnnotationList","signatureInkAnnotationList","annotationOrder","hyperlinks","imageData","isMaskedImage","hyperlinkBounds","annotationDestPage","annotationList","annotationYPosition","digitalSignaturePresent","annotationCount","isAnnotationPresent","htmldata","renderingMode","textString","baseFont","fontSize","prototype","exportAnnotationComments","pageNumber","pageSize","page","pdfRendererModule","loadedDocument","getPage","parseInt","toString","pageRotation","rotation","getAnnotationFromPDF","height","width","IsStampExist","subject","trim","loadedPage","annotRenderer","textLabelCollection","loadedFreetextAnnotations","getAllFreeTextAnnotations","annotations","count","_loop_1","i","annotation","at","textMarkup","loadTextMarkupAnnotation","this_1","length","name_1","AnnotName","setAnnotationName","shapeLabel","getShapeFreeText","name","push","shapes","loadLineAnnotation","name_2","loadSquareAnnotation","name_3","loadEllipseAnnotation","loadPolygonAnnotation","name_4","loadPolylineAnnotation","name_5","stampAnnotation","_dictionary","has","checkName","loadSignatureImage","rubberStampAnnotation","StampAnnotationBase","Author","author","Subject","rotateAngle","get","undefined","RotateAngle","Math","abs","rotate","rubberStampAnnotationAngle","bounds","getRubberStampBounds","_innerTemplateBounds","getBounds","y","cropRect","x","cropBox","Icon","icon","ModifiedDate","modifiedDate","Opacity","opacity","dictionary","pngData","IsDynamic","AnnotType","hasOwnProperty","IconName","getValues","flags","readOnly","IsCommentLock","locked","IsLocked","reviewHistory","i_1","State","getStateString","state","StateModel","getStateModelString","stateModel","Comments","Array","i_2","comments","annot","loadPopupAnnotation","Name","includes","pdfReference","ap_dictionary","findStampImage","IsMaskedImage","Apperarance","customData","ExistingCustomData","CustomData","stickyNote","name_6","freeTextAnnot_1","isFreeTextAnnotation","isFreeTextAnnotationType","isShapeLabelAnnot","some","s","freeText","loadFreeTextAnnotation","loadSignatureText","inkAnnotation","signatureData","loadSignature","inkSignatureData","loadInkAnnotation","canAdd","shapeAnnotation","textMarkupAnnotation","measureShapeAnnotation","stampAnnotations","stickyNotesAnnotation","freeTextAnnotation","signatureAnnotation","signatureInkAnnotation","stream","appearance","data","getString","content","parser","result","_readContent","stampAnnoattionRender","recordCollection","element","_operands","_operator","Json","restorecanvas","type","text","currentFontname","currentFont","baseFontName","j","replace","stdic","fontObject","name_7","refernceholder","sub","xObject","name_8","imageStucture","imageStream","getImageStream","imageString","imagedata","Imagedata","review","marked","none","accepted","rejected","cancel","completed","unmarked","unknown","pageWidth","pageHeight","bound","convertPixelToPoint","convertPointToPixel","innerTemplateBounds","centerPointX","centerPointY","boundsX","Y","boundsY","X","value","getRotateAngleString","angle","angle0","angle90","angle180","angle270","indexOf","shapeName","find","annotationName","freeTextAnnot","annotType"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/page-renderer.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { AnnotationRenderer, ShapeAnnotationBase, MeasureShapeAnnotationBase, ImageStructureBase } from './index';\nimport { PdfRotationAngle, PdfSquareAnnotation, PdfAnnotationFlag, PdfPopupAnnotation, PdfFreeTextAnnotation, PdfRubberStampAnnotation, PdfTextMarkupAnnotation, PdfInkAnnotation, PdfLineAnnotation, PdfRectangleAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfPolygonAnnotation, PdfPolyLineAnnotation, PdfAngleMeasurementAnnotation, PdfAnnotationState, PdfAnnotationStateModel, _ContentParser, _stringToBytes, _encode } from '@syncfusion/ej2-pdf';\nimport { Rect } from '@syncfusion/ej2-drawings';\n/**\n * PageRenderer\n *\n * @hidden\n */\nvar PageRenderer = /** @class */ (function () {\n    /**\n     * @param {PdfViewer} pdfViewer - The PdfViewer.\n     * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n     * @private\n     */\n    function PageRenderer(pdfViewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.shapeAnnotationList = [];\n        /**\n         * @private\n         */\n        this.textMarkupAnnotationList = [];\n        /**\n         * @private\n         */\n        this.measureAnnotationList = [];\n        /**\n         * @private\n         */\n        this.stickyAnnotationList = [];\n        /**\n         * @private\n         */\n        this.rubberStampAnnotationList = [];\n        /**\n         * @private\n         */\n        this.freeTextAnnotationList = [];\n        /**\n         * @private\n         */\n        this.signatureAnnotationList = [];\n        /**\n         * @private\n         */\n        this.signatureInkAnnotationList = [];\n        /**\n         * @private\n         */\n        this.annotationOrder = [];\n        /**\n         * @private\n         */\n        this.hyperlinks = [];\n        /**\n         * @private\n         */\n        this.imageData = '';\n        /**\n         * @private\n         */\n        this.isMaskedImage = false;\n        /**\n         * @private\n         */\n        this.hyperlinkBounds = [];\n        /**\n         * @private\n         */\n        this.annotationDestPage = [];\n        /**\n         * @private\n         */\n        this.annotationList = [];\n        /**\n         * @private\n         */\n        this.annotationYPosition = [];\n        /**\n         * @private\n         */\n        this.digitalSignaturePresent = false;\n        this.annotationCount = 0;\n        /**\n         * @private\n         */\n        this.isAnnotationPresent = false;\n        /**\n         *\n         * @private\n         */\n        this.htmldata = [];\n        /**\n         *\n         * @private\n         */\n        this.renderingMode = 0;\n        this.textString = \"\";\n        this.baseFont = \"\";\n        this.fontSize = 0;\n        this.pdfViewer = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    /**\n     * @param {number} pageNumber\n     * @param {Size} pageSize\n     * @private\n     */\n    PageRenderer.prototype.exportAnnotationComments = function (pageNumber, pageSize) {\n        var page = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(parseInt(pageNumber.toString(), 10));\n        var pageRotation = page.rotation;\n        return this.getAnnotationFromPDF(pageSize.height, pageSize.width, pageNumber, pageRotation);\n    };\n    PageRenderer.prototype.IsStampExist = function (subject) {\n        switch (subject.trim()) {\n            case \"Approved\":\n            case \"Not Approved\":\n            case \"Confidential\":\n            case \"Draft\":\n            case \"Final\":\n            case \"Completed\":\n            case \"For Public Release\":\n            case \"Not For Public Release\":\n            case \"For Comment\":\n            case \"Void\":\n            case \"Preliminary Results\":\n            case \"Information Only\":\n            case \"Witness\":\n            case \"Initial Here\":\n            case \"Sign Here\":\n            case \"Accepted\":\n            case \"Rejected\":\n            case \"Revised\":\n            case \"Reviewed\":\n            case \"Received\":\n                return true;\n            default:\n                return false;\n        }\n    };\n    PageRenderer.prototype.getAnnotationFromPDF = function (height, width, pageNumber, pageRotation) {\n        var loadedPage = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(parseInt(pageNumber.toString(), 10));\n        var annotRenderer = new AnnotationRenderer(this.pdfViewer, this.pdfViewerBase);\n        var textLabelCollection = [];\n        var loadedFreetextAnnotations = [];\n        this.isAnnotationPresent = false;\n        if (loadedPage != null) {\n            loadedFreetextAnnotations = this.getAllFreeTextAnnotations(loadedPage.annotations);\n            this.annotationCount = 0;\n            if (loadedPage.annotations != null && loadedPage.annotations.count > 0) {\n                this.isAnnotationPresent = true;\n                var _loop_1 = function (i) {\n                    var annotation = loadedPage.annotations.at(i);\n                    if (annotation instanceof PdfTextMarkupAnnotation) {\n                        // eslint-disable-next-line max-len\n                        var textMarkup = annotRenderer.loadTextMarkupAnnotation(annotation, height, width, pageRotation, loadedPage);\n                        this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length] = textMarkup;\n                        this_1.annotationOrder[this_1.annotationOrder.length] = textMarkup;\n                        var name_1 = this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length - 1].AnnotName;\n                        if (isNullOrUndefined(name_1) || name_1 === '') {\n                            // eslint-disable-next-line max-len\n                            this_1.textMarkupAnnotationList[this_1.textMarkupAnnotationList.length - 1].AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                    }\n                    else if (annotation instanceof PdfLineAnnotation) {\n                        // eslint-disable-next-line max-len\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!isNullOrUndefined(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        // eslint-disable-next-line max-len\n                        var shapes = annotRenderer.loadLineAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_2 = shapes.AnnotName;\n                        if (isNullOrUndefined(name_2) || name_2 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!isNullOrUndefined(shapes)) {\n                            if (shapes instanceof MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof PdfSquareAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                        // eslint-disable-next-line max-len\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!isNullOrUndefined(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        // eslint-disable-next-line max-len\n                        var shapes = annotRenderer.loadSquareAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_3 = shapes.AnnotName;\n                        if (isNullOrUndefined(name_3) || name_3 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!isNullOrUndefined(shapes)) {\n                            if (shapes instanceof MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof PdfRectangleAnnotation) {\n                        //rectangle annotation\n                    }\n                    else if (annotation instanceof PdfCircleAnnotation) {\n                        // eslint-disable-next-line max-len\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!isNullOrUndefined(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        // eslint-disable-next-line max-len\n                        var shapes = annotRenderer.loadEllipseAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        if (!isNullOrUndefined(shapes)) {\n                            if (shapes instanceof MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof PdfEllipseAnnotation) {\n                        // eslint-disable-next-line max-len\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!isNullOrUndefined(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        // eslint-disable-next-line max-len\n                        var shapes = annotRenderer.loadEllipseAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        if (!isNullOrUndefined(shapes)) {\n                            if (shapes instanceof MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof PdfPolygonAnnotation) {\n                        // eslint-disable-next-line max-len\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!isNullOrUndefined(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        // eslint-disable-next-line max-len\n                        var shapes = annotRenderer.loadPolygonAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_4 = shapes.AnnotName;\n                        if (isNullOrUndefined(name_4) || name_4 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!isNullOrUndefined(shapes)) {\n                            if (shapes instanceof MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    else if (annotation instanceof PdfPolyLineAnnotation || annotation instanceof PdfAngleMeasurementAnnotation) {\n                        // eslint-disable-next-line max-len\n                        var shapeLabel = this_1.getShapeFreeText(annotation.name, loadedFreetextAnnotations);\n                        if (!isNullOrUndefined(shapeLabel)) {\n                            textLabelCollection.push(shapeLabel.name);\n                        }\n                        // eslint-disable-next-line max-len\n                        var shapes = annotRenderer.loadPolylineAnnotation(annotation, height, width, pageRotation, shapeLabel);\n                        var name_5 = shapes.AnnotName;\n                        if (isNullOrUndefined(name_5) || name_5 === '') {\n                            shapes.AnnotName = this_1.setAnnotationName(pageNumber);\n                        }\n                        if (!isNullOrUndefined(shapes)) {\n                            if (shapes instanceof MeasureShapeAnnotationBase) {\n                                this_1.measureAnnotationList[this_1.measureAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                            else if (shapes instanceof ShapeAnnotationBase) {\n                                this_1.shapeAnnotationList[this_1.shapeAnnotationList.length] = shapes;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = shapes;\n                            }\n                        }\n                    }\n                    if (annotation instanceof PdfRubberStampAnnotation) {\n                        this_1.htmldata = [];\n                        var stampAnnotation = annotation;\n                        if (stampAnnotation._dictionary.has('T') && this_1.checkName(stampAnnotation)) {\n                            this_1.signatureAnnotationList.push(annotRenderer.loadSignatureImage(stampAnnotation, pageNumber));\n                        }\n                        else if (stampAnnotation._dictionary.has(\"M\")) {\n                            var rubberStampAnnotation = new StampAnnotationBase();\n                            rubberStampAnnotation.Author = stampAnnotation.author;\n                            rubberStampAnnotation.Subject = stampAnnotation.subject;\n                            rubberStampAnnotation.AnnotName = stampAnnotation.name;\n                            if (rubberStampAnnotation.AnnotName === '' || rubberStampAnnotation.AnnotName === null) {\n                                rubberStampAnnotation.AnnotName = this_1.setAnnotationName(pageNumber);\n                            }\n                            if (annotation._dictionary.has(\"rotateAngle\")) {\n                                var rotateAngle = annotation._dictionary.get(\"rotateAngle\");\n                                if (rotateAngle !== undefined) {\n                                    // The rotateAngle will get as 1, 2 and 3 To save in RotateAngle multiplying with 90.\n                                    rubberStampAnnotation.RotateAngle = parseInt(rotateAngle[0]) * 90;\n                                }\n                            }\n                            else {\n                                // If the rotate angle is not specified in the annotation dictionary, then calculate it based on the page rotation.\n                                rubberStampAnnotation.RotateAngle = 360 - (Math.abs(stampAnnotation.rotate * 90) - (pageRotation * 90));\n                                var rubberStampAnnotationAngle = rubberStampAnnotation.RotateAngle;\n                                if (rubberStampAnnotation.RotateAngle > 360) {\n                                    rubberStampAnnotation.RotateAngle = rubberStampAnnotationAngle - 360;\n                                }\n                            }\n                            if (rubberStampAnnotation.RotateAngle != 0) {\n                                var bounds = this_1.getRubberStampBounds(stampAnnotation._innerTemplateBounds, stampAnnotation.bounds, height, width, pageRotation);\n                                rubberStampAnnotation.Rect = bounds;\n                            }\n                            else {\n                                rubberStampAnnotation.Rect = this_1.getBounds(stampAnnotation.bounds, height, width, pageRotation);\n                            }\n                            if (rubberStampAnnotation.Rect.y) {\n                                var cropRect = new Rect(rubberStampAnnotation.Rect.x, loadedPage.cropBox[1] + rubberStampAnnotation.Rect.y, rubberStampAnnotation.Rect.width, rubberStampAnnotation.Rect.height);\n                                rubberStampAnnotation.Rect = this_1.getBounds(cropRect, height, width, pageRotation);\n                            }\n                            rubberStampAnnotation.Icon = stampAnnotation.icon;\n                            rubberStampAnnotation.ModifiedDate = stampAnnotation.modifiedDate.toString();\n                            rubberStampAnnotation.Opacity = stampAnnotation.opacity;\n                            rubberStampAnnotation.pageNumber = pageNumber;\n                            var dictionary = annotation._dictionary.get('AP');\n                            this_1.pdfViewerBase.pngData.push(stampAnnotation);\n                            rubberStampAnnotation.IsDynamic = false;\n                            rubberStampAnnotation.AnnotType = 'stamp';\n                            if (stampAnnotation._dictionary.hasOwnProperty(\"iconName\")) {\n                                rubberStampAnnotation.IconName = stampAnnotation.getValues(\"iconName\")[0];\n                            }\n                            else if (stampAnnotation.subject !== null) {\n                                rubberStampAnnotation.IconName = stampAnnotation.subject;\n                            }\n                            else {\n                                rubberStampAnnotation.IconName = \"\";\n                            }\n                            if (stampAnnotation.flags === PdfAnnotationFlag.readOnly) {\n                                rubberStampAnnotation.IsCommentLock = true;\n                            }\n                            else {\n                                rubberStampAnnotation.IsCommentLock = false;\n                            }\n                            if (stampAnnotation.flags === PdfAnnotationFlag.locked) {\n                                rubberStampAnnotation.IsLocked = true;\n                            }\n                            else {\n                                rubberStampAnnotation.IsLocked = false;\n                            }\n                            if (!isNullOrUndefined(stampAnnotation.reviewHistory)) {\n                                for (var i_1 = 0; i_1 < stampAnnotation.reviewHistory.count; i_1++) {\n                                    rubberStampAnnotation.State = this_1.getStateString(stampAnnotation.reviewHistory.at(parseInt(i_1.toString(), 10)).state);\n                                    rubberStampAnnotation.StateModel = this_1.getStateModelString(stampAnnotation.reviewHistory.at(parseInt(i_1.toString(), 10)).stateModel);\n                                }\n                            }\n                            if (rubberStampAnnotation.State == null || rubberStampAnnotation.StateModel == null) {\n                                rubberStampAnnotation.State = \"Unmarked\";\n                                rubberStampAnnotation.StateModel = \"None\";\n                            }\n                            rubberStampAnnotation.Comments = new Array();\n                            for (var i_2 = 0; i_2 < stampAnnotation.comments.count; i_2++) {\n                                var annot = annotRenderer.loadPopupAnnotation(stampAnnotation.comments.at(i_2), height, width, pageRotation);\n                                rubberStampAnnotation.Comments.push(annot);\n                            }\n                            if (annotation._dictionary.has('Name')) {\n                                rubberStampAnnotation.Name = annotation._dictionary.get('Name');\n                                if (annotation._dictionary.get('Name').name.includes(\"#23D\") || annotation._dictionary.get('Name').name.includes(\"#D\")) {\n                                    rubberStampAnnotation.IsDynamic = true;\n                                }\n                                if (!isNullOrUndefined(rubberStampAnnotation.Subject) && !(this_1.IsStampExist(rubberStampAnnotation.Subject))) {\n                                    rubberStampAnnotation.Subject = stampAnnotation.icon.toString();\n                                }\n                            }\n                            if (isNullOrUndefined(dictionary)) {\n                                var pdfReference = annotation._dictionary.get('AP');\n                                if (!isNullOrUndefined(pdfReference) && !isNullOrUndefined(pdfReference.dictionary) && (pdfReference.dictionary.has('N'))) {\n                                    var ap_dictionary = pdfReference.dictionary;\n                                    if (!isNullOrUndefined(ap_dictionary)) {\n                                        this_1.findStampImage(annotation);\n                                    }\n                                }\n                            }\n                            else if (dictionary.has('N')) {\n                                this_1.findStampImage(annotation);\n                            }\n                            rubberStampAnnotation.IsMaskedImage = this_1.isMaskedImage;\n                            rubberStampAnnotation.Apperarance = this_1.htmldata;\n                            if (stampAnnotation._dictionary.has('CustomData')) {\n                                var customData = stampAnnotation._dictionary.get('CustomData');\n                                if (!(!isNullOrUndefined(customData) && customData.trim())) {\n                                    var ExistingCustomData = dictionary.get('CustomData');\n                                    if (ExistingCustomData) {\n                                        rubberStampAnnotation.CustomData = ExistingCustomData;\n                                    }\n                                }\n                            }\n                            this_1.rubberStampAnnotationList.push(rubberStampAnnotation);\n                            this_1.annotationOrder.push(rubberStampAnnotation);\n                        }\n                    }\n                    if (annotation instanceof PdfPopupAnnotation) {\n                        if (!annotation._dictionary.has(\"IRT\")) {\n                            var stickyNote = annotRenderer.loadPopupAnnotation(annotation, height, width, pageRotation);\n                            this_1.stickyAnnotationList[this_1.stickyAnnotationList.length] = stickyNote;\n                            this_1.annotationOrder[this_1.annotationOrder.length] = stickyNote;\n                            var name_6 = stickyNote.AnnotName;\n                            if (isNullOrUndefined(name_6) || name_6 === '') {\n                                stickyNote.AnnotName = this_1.setAnnotationName(pageNumber);\n                            }\n                        }\n                    }\n                    if (annotation instanceof PdfFreeTextAnnotation) {\n                        var freeTextAnnot_1 = annotation;\n                        var isFreeTextAnnotation = this_1.isFreeTextAnnotationType(freeTextAnnot_1);\n                        if (isFreeTextAnnotation) {\n                            var isShapeLabelAnnot = textLabelCollection.some(function (s) { return s === freeTextAnnot_1.name; });\n                            var freeText = annotRenderer.loadFreeTextAnnotation(freeTextAnnot_1, height, width, pageRotation, loadedPage);\n                            if (!isShapeLabelAnnot) {\n                                this_1.freeTextAnnotationList[this_1.freeTextAnnotationList.length] = freeText;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = freeText;\n                            }\n                        }\n                        else {\n                            var freeText = annotRenderer.loadSignatureText(freeTextAnnot_1, pageNumber, height, width, pageRotation);\n                            if (!freeTextAnnot_1._dictionary.has('T')) {\n                                this_1.signatureAnnotationList[this_1.signatureAnnotationList.length] = freeText;\n                                this_1.annotationOrder[this_1.annotationOrder.length] = freeText;\n                            }\n                        }\n                    }\n                    if (annotation instanceof PdfInkAnnotation) {\n                        var inkAnnotation = annotation;\n                        var signatureData = annotRenderer.loadSignature(inkAnnotation, height, width, pageRotation, pageNumber, loadedPage);\n                        var inkSignatureData = annotRenderer.loadInkAnnotation(inkAnnotation, height, width, pageRotation, pageNumber, loadedPage);\n                        if (!inkAnnotation._dictionary.has(\"T\")) {\n                            this_1.signatureAnnotationList.push(signatureData);\n                            this_1.annotationOrder.push(signatureData);\n                        }\n                        else if (inkAnnotation._dictionary.has(\"NM\")) {\n                            this_1.signatureInkAnnotationList.push(inkSignatureData);\n                            this_1.annotationOrder.push(inkSignatureData);\n                        }\n                        else if (inkAnnotation._dictionary.has(\"T\")) {\n                            if (inkAnnotation._dictionary.has(\"annotationSignature\")) {\n                                var canAdd = true;\n                                canAdd = inkAnnotation.getValues(\"annotationSignature\").length > 0 ? false : true;\n                                if (canAdd) {\n                                    this_1.signatureAnnotationList.push(signatureData);\n                                    this_1.annotationOrder.push(signatureData);\n                                }\n                            }\n                        }\n                        if (!inkAnnotation._dictionary.has('NM') && !inkAnnotation._dictionary.has(\"annotationSignature\")) {\n                            this_1.signatureAnnotationList.push(signatureData);\n                            this_1.annotationOrder.push(signatureData);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < loadedPage.annotations.count; i++) {\n                    _loop_1(i);\n                }\n            }\n        }\n        return { shapeAnnotation: this.shapeAnnotationList, textMarkupAnnotation: this.textMarkupAnnotationList,\n            measureShapeAnnotation: this.measureAnnotationList, stampAnnotations: this.rubberStampAnnotationList,\n            stickyNotesAnnotation: this.stickyAnnotationList, freeTextAnnotation: this.freeTextAnnotationList,\n            signatureAnnotation: this.signatureAnnotationList, signatureInkAnnotation: this.signatureInkAnnotationList,\n            annotationOrder: this.annotationOrder };\n    };\n    /**\n     * @private\n     * @param annotation\n     */\n    PageRenderer.prototype.findStampImage = function (annotation) {\n        var stream = annotation._dictionary.get(\"AP\").get(\"N\");\n        if (!isNullOrUndefined(stream)) {\n            var appearance = stream;\n            var data = appearance.getString();\n            var content = _stringToBytes(data, true);\n            var parser = new _ContentParser(content);\n            var result = parser._readContent();\n            this.stampAnnoattionRender(result, stream);\n        }\n    };\n    PageRenderer.prototype.stampAnnoattionRender = function (recordCollection, dictionary) {\n        if (!isNullOrUndefined(recordCollection)) {\n            for (var i = 0; i < recordCollection.length; i++) {\n                var element = recordCollection[parseInt(i.toString(), 10)]._operands;\n                switch (recordCollection[parseInt(i.toString(), 10)]._operator) {\n                    case \"q\": {\n                        var Json = { restorecanvas: false };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case \"Q\": {\n                        var Json = { restorecanvas: true };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case \"Tr\": {\n                        this.renderingMode = parseInt(element[0]);\n                        break;\n                    }\n                    case \"TJ\":\n                    case \"Tj\": {\n                        this.textString = recordCollection[parseInt(i.toString(), 10)]._operands[0];\n                        var Json = { type: \"string\", text: this.textString, currentFontname: this.currentFont, baseFontName: this.baseFont, fontSize: this.fontSize };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case \"'\": {\n                        this.textString = recordCollection[parseInt(i.toString(), 10)]._operands[0];\n                        var Json = { type: \"string\", text: this.textString, currentFontname: this.currentFont, baseFontName: this.baseFont, fontSize: this.fontSize };\n                        this.htmldata.push(Json);\n                        break;\n                    }\n                    case \"Tf\": {\n                        var j = 0;\n                        for (j = 0; j < element.length; j++) {\n                            if (element[parseInt(j.toString(), 10)].includes(\"/\")) {\n                                this.currentFont = element[parseInt(j.toString(), 10)].replace(\"/\", \"\");\n                                break;\n                            }\n                        }\n                        this.fontSize = parseInt(element[j + 1]);\n                        if (dictionary.dictionary.has(\"Resources\")) {\n                            var stdic = dictionary.dictionary.get(\"Resources\");\n                            if (!isNullOrUndefined(stdic)) {\n                                var fontObject = stdic.get(\"Font\");\n                                if (!isNullOrUndefined(fontObject) && recordCollection[parseInt(i.toString(), 10)]._operator == \"Tf\") {\n                                    var name_7 = element[0].replace(\"/\", \"\");\n                                    var refernceholder = fontObject.get(name_7);\n                                    if (!isNullOrUndefined(refernceholder) && !isNullOrUndefined(refernceholder.dictionary)) {\n                                        var sub = refernceholder.dictionary;\n                                        this.baseFont = sub.get(\"BaseFont\");\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                    case \"Do\": {\n                        if (dictionary.dictionary.has(\"Resources\")) {\n                            var stdic = dictionary.dictionary.get(\"Resources\");\n                            if (!isNullOrUndefined(stdic)) {\n                                var xObject = stdic.get(\"XObject\");\n                                if (!isNullOrUndefined(xObject) && recordCollection[parseInt(i.toString(), 10)]._operator == \"Do\") {\n                                    var name_8 = element[0].replace(\"/\", \"\");\n                                    if (xObject.has(name_8)) {\n                                        var refernceholder = xObject.get(name_8);\n                                        if (!isNullOrUndefined(refernceholder) && !isNullOrUndefined(refernceholder.dictionary)) {\n                                            var sub = refernceholder;\n                                            if (sub.dictionary.get(\"Subtype\").name == \"Image\") {\n                                                var imageStucture = new ImageStructureBase(sub, sub.dictionary);\n                                                if (!isNullOrUndefined(imageStucture)) {\n                                                    var imageStream = imageStucture.getImageStream();\n                                                    var imageString = 'data:image/png;base64,' + _encode(imageStream);\n                                                    var Json = { imagedata: imageString };\n                                                    this.htmldata.push(Json);\n                                                    this.Imagedata = imageString;\n                                                }\n                                            }\n                                            else if (sub.dictionary.get(\"Subtype\").name === \"Form\") {\n                                                var appearance = sub;\n                                                var data = appearance.getString();\n                                                var content = _stringToBytes(data, true);\n                                                var parser = new _ContentParser(content);\n                                                var result = parser._readContent();\n                                                this.stampAnnoattionRender(result, sub);\n                                            }\n                                            this.IsMaskedImage = false;\n                                            if (sub.dictionary.get(\"SMask\")) {\n                                                this.IsMaskedImage = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    PageRenderer.prototype.getStateModelString = function (stateModel) {\n        switch (stateModel) {\n            case PdfAnnotationStateModel.review:\n                return 'Review';\n            case PdfAnnotationStateModel.marked:\n                return 'Marked';\n            case PdfAnnotationStateModel.none:\n                return 'None';\n            default:\n                return 'None';\n        }\n    };\n    PageRenderer.prototype.getStateString = function (state) {\n        switch (state) {\n            case PdfAnnotationState.accepted:\n                return 'Accepted';\n            case PdfAnnotationState.rejected:\n                return 'Rejected';\n            case PdfAnnotationState.cancel:\n                return 'Cancelled';\n            case PdfAnnotationState.completed:\n                return 'Completed';\n            case PdfAnnotationState.none:\n                return 'None';\n            case PdfAnnotationState.unmarked:\n                return 'Unmarked';\n            case PdfAnnotationState.marked:\n                return 'Marked';\n            case PdfAnnotationState.unknown:\n                return 'Unknown';\n            default:\n                return null;\n        }\n    };\n    PageRenderer.prototype.getBounds = function (bounds, pageWidth, pageHeight, pageRotation) {\n        var bound;\n        if (pageRotation === 0) {\n            // eslint-disable-next-line max-len\n            bound = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n        else if (pageRotation === 1) {\n            // eslint-disable-next-line max-len\n            bound = new Rect(this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.y)) - this.convertPointToPixel(bounds.height), bounds.x, bounds.height, bounds.width);\n        }\n        else if (pageRotation === 2) {\n            // eslint-disable-next-line max-len\n            bound = new Rect(this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.x)) - this.convertPointToPixel(bounds.width), this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.y)) - this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width), bounds.height);\n        }\n        else if (pageRotation === 3) {\n            // eslint-disable-next-line max-len\n            bound = new Rect(bounds.y, this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.x)) - this.convertPointToPixel(bounds.width), bounds.height, bounds.width);\n        }\n        return bound;\n    };\n    PageRenderer.prototype.getRubberStampBounds = function (innerTemplateBounds, bounds, pageHeight, pageWidth, pageRotation) {\n        var bound = new Rect();\n        var centerPointX = 0;\n        var centerPointY = 0;\n        if (pageRotation === 0) {\n            centerPointX = bounds.x + (bounds.width / 2);\n            centerPointY = bounds.y + (bounds.height / 2);\n            bound = new Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY - (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        else if (pageRotation === 1) {\n            var boundsX = this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.Y) - this.convertPointToPixel(bounds.height));\n            var boundsY = bounds.X;\n            centerPointX = boundsX + (bounds.height / 2);\n            centerPointY = boundsY + (bounds.width / 2);\n            bound = new Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY - (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        else if (pageRotation === 2) {\n            var boundsX = this.convertPixelToPoint(pageWidth - this.convertPointToPixel(bounds.X) - this.convertPointToPixel(bounds.width));\n            var boundsY = this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.Y) - this.convertPointToPixel(bounds.height));\n            centerPointX = boundsX + (bounds.width / 2);\n            centerPointY = boundsY + (bounds.height / 2);\n            bound = new Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY - (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        else if (pageRotation === 3) {\n            var boundsX = bounds.Y;\n            var boundsY = this.convertPixelToPoint(pageHeight - this.convertPointToPixel(bounds.X) - this.convertPointToPixel(bounds.width));\n            centerPointX = boundsX + (bounds.height / 2);\n            centerPointY = boundsY + (bounds.width / 2);\n            bound = new Rect(centerPointX - (innerTemplateBounds.width / 2), centerPointY - (innerTemplateBounds.height / 2), innerTemplateBounds.width, innerTemplateBounds.height);\n        }\n        return bound;\n    };\n    PageRenderer.prototype.convertPixelToPoint = function (value) {\n        return (value * 72 / 96);\n    };\n    PageRenderer.prototype.convertPointToPixel = function (value) {\n        return (value * 96 / 72);\n    };\n    PageRenderer.prototype.getRotateAngleString = function (angle) {\n        switch (angle) {\n            case PdfRotationAngle.angle0:\n                return 'RotateAngle0';\n            case PdfRotationAngle.angle90:\n                return 'RotateAngle90';\n            case PdfRotationAngle.angle180:\n                return 'RotateAngle180';\n            case PdfRotationAngle.angle270:\n                return 'RotateAngle270';\n            default:\n                return 'RotateAngle0';\n        }\n    };\n    PageRenderer.prototype.checkName = function (stampAnnotation) {\n        // Check if the stamp annotation has a \"Name\" key in its dictionary.\n        if (\"Name\" in stampAnnotation._dictionary) {\n            // Get the custom data for the \"Name\" key.\n            var customData = stampAnnotation.getValues(\"Name\");\n            // Check if the custom data is not null and contains a '#' character.\n            if (!(isNullOrUndefined(customData)) && customData.indexOf(\"#\") > -1) {\n                // The stamp annotation has a name that contains a '#' character.\n                return true;\n            }\n        }\n        // The stamp annotation does not have a name that contains a '#' character.\n        return false;\n    };\n    PageRenderer.prototype.getAllFreeTextAnnotations = function (annotations) {\n        var loadedFreetextAnnotations = [];\n        for (var i = 0; i < annotations.count; i++) {\n            var annotation = annotations.at(i);\n            if (annotation instanceof PdfFreeTextAnnotation) {\n                loadedFreetextAnnotations.push(annotation);\n            }\n        }\n        return loadedFreetextAnnotations;\n    };\n    PageRenderer.prototype.getShapeFreeText = function (shapeName, loadedFreetextAnnotations) {\n        if (!isNullOrUndefined(shapeName) && shapeName !== '') {\n            return loadedFreetextAnnotations.find(function (annot) { return annot.name.includes(shapeName); });\n        }\n        return null;\n    };\n    PageRenderer.prototype.setAnnotationName = function (pageNumber) {\n        var annotationName = pageNumber + this.annotationCount.toString();\n        this.annotationCount++;\n        return annotationName;\n    };\n    PageRenderer.prototype.isFreeTextAnnotationType = function (freeTextAnnot) {\n        var isFreeTextAnnotation = true;\n        if (freeTextAnnot._dictionary.has('AnnotationType')) {\n            var annotType = freeTextAnnot.getValues('AnnotationType');\n            if (!isNullOrUndefined(annotType) && annotType[0] === 'Signature') {\n                isFreeTextAnnotation = false;\n            }\n        }\n        return isFreeTextAnnotation;\n    };\n    return PageRenderer;\n}());\nexport { PageRenderer };\n/**\n *\n * @hidden\n */\nvar StampAnnotationBase = /** @class */ (function () {\n    function StampAnnotationBase() {\n    }\n    return StampAnnotationBase;\n}());\nexport { StampAnnotationBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}