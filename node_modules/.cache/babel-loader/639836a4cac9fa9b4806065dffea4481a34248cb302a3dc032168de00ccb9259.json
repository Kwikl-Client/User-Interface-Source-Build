{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar ShapeAnnotation = /** @class */function () {\n  function ShapeAnnotation(pdfviewer, pdfViewerBase) {\n    /**\n     * @private\n     */\n    this.shapeCount = 0;\n    /**\n     * @private\n     */\n    this.isAddAnnotationProgramatically = false;\n    this.pdfViewer = pdfviewer;\n    this.pdfViewerBase = pdfViewerBase;\n  }\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @param isImportAcion\n   * @private\n   */\n  // eslint-disable-next-line\n  ShapeAnnotation.prototype.renderShapeAnnotations = function (shapeAnnotations, pageNumber, isImportAcion, isAnnotOrderAction) {\n    if (shapeAnnotations) {\n      if (shapeAnnotations.length >= 1) {\n        // eslint-disable-next-line\n        var shapeAnnots = this.pdfViewer.annotation.getStoredAnnotations(pageNumber, shapeAnnotations, '_annotations_shape');\n        if (!shapeAnnots || isAnnotOrderAction || isImportAcion) {\n          for (var i = 0; i < shapeAnnotations.length; i++) {\n            // eslint-disable-next-line\n            var annotation = shapeAnnotations[i];\n            annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n            var annotationObject = null;\n            this.shapeCount = this.shapeCount + 1;\n            var isAnnotationRotated = void 0;\n            if (annotation.ShapeAnnotationType) {\n              if (isImportAcion) {\n                if (this.pdfViewerBase.isJsonImported) {\n                  annotation.Bounds = this.pdfViewerBase.importJsonForRotatedDocuments(annotation.Rotate, pageNumber, annotation.Bounds, annotation.AnnotationRotation);\n                  isAnnotationRotated = this.pdfViewerBase.isPageRotated;\n                }\n              }\n              var vertexPoints = null;\n              if (annotation.VertexPoints) {\n                vertexPoints = [];\n                if (isImportAcion && this.pdfViewerBase.isJsonImported) {\n                  vertexPoints = this.pdfViewerBase.calculateVertexPoints(annotation.Rotate, pageNumber, annotation.VertexPoints, annotation.AnnotationRotation);\n                } else {\n                  for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                    var x = annotation.VertexPoints[j].X ? annotation.VertexPoints[j].X : annotation.VertexPoints[j].x;\n                    var y = annotation.VertexPoints[j].Y ? annotation.VertexPoints[j].Y : annotation.VertexPoints[j].y;\n                    var point = {\n                      x: x,\n                      y: y\n                    };\n                    vertexPoints.push(point);\n                  }\n                }\n              }\n              // eslint-disable-next-line\n              if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n                // eslint-disable-next-line max-len\n                annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n                // eslint-disable-next-line max-len\n                annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n                annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n                annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n                annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n                // eslint-disable-next-line max-len\n                annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n              }\n              // eslint-disable-next-line max-len\n              annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n              // eslint-disable-next-line max-len\n              annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n              // eslint-disable-next-line max-len\n              annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n              var left = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n              var top_1 = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n              var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n              var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height; // eslint-disable-next-line max-len\n              annotationObject = {\n                id: 'shape' + this.shapeCount,\n                shapeAnnotationType: annotation.ShapeAnnotationType,\n                author: annotation.Author,\n                allowedInteractions: annotation.allowedInteractions,\n                modifiedDate: annotation.ModifiedDate,\n                subject: annotation.Subject,\n                pageNumber: pageNumber,\n                // eslint-disable-next-line max-len\n                note: annotation.Note,\n                strokeColor: annotation.StrokeColor,\n                fillColor: annotation.FillColor,\n                opacity: annotation.Opacity,\n                thickness: annotation.Thickness,\n                rectangleDifference: annotation.RectangleDifference,\n                borderStyle: annotation.BorderStyle,\n                borderDashArray: annotation.BorderDashArray,\n                rotateAngle: annotation.RotateAngle,\n                isCloudShape: annotation.IsCloudShape,\n                // eslint-disable-next-line max-len\n                cloudIntensity: annotation.CloudIntensity,\n                vertexPoints: vertexPoints,\n                lineHeadStart: annotation.LineHeadStart,\n                lineHeadEnd: annotation.LineHeadEnd,\n                isLocked: annotation.IsLocked,\n                comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n                review: {\n                  state: annotation.State,\n                  stateModel: annotation.StateModel,\n                  modifiedDate: annotation.ModifiedDate,\n                  author: annotation.Author\n                },\n                annotName: annotation.AnnotName,\n                bounds: {\n                  left: left,\n                  top: top_1,\n                  width: width,\n                  height: height,\n                  right: annotation.Bounds.Right,\n                  bottom: annotation.Bounds.Bottom\n                },\n                // eslint-disable-next-line max-len\n                labelContent: annotation.LabelContent,\n                enableShapeLabel: annotation.EnableShapeLabel,\n                labelFillColor: annotation.LabelFillColor,\n                fontColor: annotation.FontColor,\n                labelBorderColor: annotation.LabelBorderColor,\n                fontSize: annotation.FontSize,\n                // eslint-disable-next-line max-len\n                labelBounds: annotation.LabelBounds,\n                annotationSelectorSettings: this.getSettings(annotation),\n                labelSettings: annotation.LabelSettings,\n                annotationSettings: annotation.AnnotationSettings,\n                customData: this.pdfViewer.annotation.getCustomData(annotation),\n                isPrint: annotation.IsPrint,\n                isCommentLock: annotation.IsCommentLock,\n                isAnnotationRotated: isAnnotationRotated\n              };\n              var annot = void 0;\n              // eslint-disable-next-line\n              var vPoints = annotationObject.vertexPoints;\n              if (vertexPoints == null) {\n                vPoints = [];\n              }\n              // eslint-disable-next-line max-len\n              annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n              annot = {\n                // eslint-disable-next-line max-len\n                id: 'shape' + this.shapeCount,\n                shapeAnnotationType: this.getShapeType(annotationObject),\n                author: annotationObject.author,\n                allowedInteractions: annotationObject.allowedInteractions,\n                modifiedDate: annotationObject.modifiedDate,\n                annotName: annotationObject.annotName,\n                subject: annotationObject.subject,\n                notes: annotationObject.note,\n                fillColor: annotationObject.fillColor,\n                strokeColor: annotationObject.strokeColor,\n                opacity: annotationObject.opacity,\n                // eslint-disable-next-line max-len\n                thickness: annotationObject.thickness,\n                borderStyle: annotationObject.borderStyle,\n                borderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray.toString() : '0',\n                rotateAngle: parseFloat(annotationObject.rotateAngle.split('Angle')[1]),\n                comments: annotationObject.comments,\n                review: annotationObject.review,\n                isCloudShape: annotationObject.isCloudShape,\n                cloudIntensity: annotationObject.cloudIntensity,\n                taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadEnd),\n                // eslint-disable-next-line max-len\n                sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadStart),\n                vertexPoints: vPoints,\n                bounds: {\n                  x: annotationObject.bounds.left,\n                  y: annotationObject.bounds.top,\n                  width: annotationObject.bounds.width,\n                  height: annotationObject.bounds.height\n                },\n                pageIndex: annotationObject.pageNumber,\n                // eslint-disable-next-line max-len\n                labelContent: annotation.LabelContent,\n                enableShapeLabel: annotation.EnableShapeLabel,\n                labelFillColor: annotation.LabelFillColor,\n                fontColor: annotation.FontColor,\n                labelBorderColor: annotation.LabelBorderColor,\n                fontSize: annotation.FontSize,\n                labelBounds: annotation.LabelBounds,\n                annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n                annotationSettings: annotationObject.annotationSettings,\n                annotationAddMode: annotation.annotationAddMode,\n                isPrint: annotation.IsPrint,\n                isCommentLock: annotationObject.isCommentLock,\n                customData: annotationObject.customData\n              };\n              var addedAnnot = this.pdfViewer.add(annot);\n              this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape');\n              if (this.isAddAnnotationProgramatically) {\n                var settings = {\n                  opacity: annot.opacity,\n                  strokeColor: annot.strokeColor,\n                  thickness: annot.thickness,\n                  modifiedDate: annot.modifiedDate,\n                  width: annot.bounds.width,\n                  height: annot.bounds.height\n                };\n                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, annotation.ShapeAnnotationType, annot.bounds, settings);\n              }\n            }\n          }\n        }\n      } else if (shapeAnnotations.shapeAnnotationType) {\n        var annotationObject = this.createAnnotationObject(shapeAnnotations);\n        if (!isNullOrUndefined(shapeAnnotations.formFieldAnnotationType) && shapeAnnotations.formFieldAnnotationType !== \"\") this.pdfViewer.annotationModule.isFormFieldShape = true;else this.pdfViewer.annotationModule.isFormFieldShape = false;\n        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape');\n        this.pdfViewer.annotationModule.triggerAnnotationAdd(shapeAnnotations);\n      }\n    }\n  };\n  /**\n   * @param annotation\n   * @private\n   */\n  // eslint-disable-next-line\n  ShapeAnnotation.prototype.getSettings = function (annotation) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n    if (annotation.AnnotationSelectorSettings) {\n      selector = annotation.AnnotationSelectorSettings;\n    } else {\n      selector = this.getSelector(annotation.ShapeAnnotationType, annotation.Subject);\n    }\n    return selector;\n  };\n  /**\n   * @param type\n   * @private\n   */\n  ShapeAnnotation.prototype.setAnnotationType = function (type) {\n    this.updateShapeProperties();\n    this.pdfViewerBase.disableTextSelectionMode();\n    var author = 'Guest';\n    var subject = \"\";\n    switch (type) {\n      case 'Line':\n        this.currentAnnotationMode = 'Line';\n        // eslint-disable-next-line max-len\n        var modifiedDateLine = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.lineSettings.author ? this.pdfViewer.lineSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.lineSettings.subject ? this.pdfViewer.lineSettings.subject : 'Line';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: this.setShapeType('Line'),\n          fillColor: this.lineFillColor,\n          notes: '',\n          strokeColor: this.lineStrokeColor,\n          opacity: this.lineOpacity,\n          thickness: this.lineThickness,\n          modifiedDate: modifiedDateLine,\n          borderDashArray: this.lineDashArray.toString(),\n          // eslint-disable-next-line max-len\n          sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.lineStartHead.toString()),\n          taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.lineEndHead.toString()),\n          author: author,\n          subject: subject,\n          lineHeadStart: this.lineStartHead,\n          lineHeadEnd: this.lineEndHead,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Line';\n        break;\n      case 'Arrow':\n        this.currentAnnotationMode = 'Arrow';\n        // eslint-disable-next-line max-len\n        var modifiedDateArrow = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.arrowSettings.author ? this.pdfViewer.arrowSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.arrowSettings.subject ? this.pdfViewer.arrowSettings.subject : 'Arrow';\n        this.pdfViewer.drawingObject = {\n          shapeAnnotationType: this.setShapeType('Arrow'),\n          opacity: this.arrowOpacity,\n          // eslint-disable-next-line max-len\n          sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.arrowStartHead.toString()),\n          taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.arrowEndHead.toString()),\n          // eslint-disable-next-line max-len\n          fillColor: this.arrowFillColor,\n          strokeColor: this.arrowStrokeColor,\n          notes: '',\n          thickness: this.arrowThickness,\n          borderDashArray: this.arrowDashArray.toString(),\n          author: author,\n          subject: subject,\n          // eslint-disable-next-line max-len\n          modifiedDate: modifiedDateArrow,\n          lineHeadStart: this.arrowStartHead,\n          lineHeadEnd: this.arrowEndHead,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Line';\n        break;\n      case 'Rectangle':\n        this.currentAnnotationMode = 'Rectangle';\n        // eslint-disable-next-line max-len\n        var modifiedDateRect = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.rectangleSettings.author ? this.pdfViewer.rectangleSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.rectangleSettings.subject ? this.pdfViewer.rectangleSettings.subject : 'Rectangle';\n        this.pdfViewer.drawingObject = {\n          shapeAnnotationType: this.setShapeType('Rectangle'),\n          strokeColor: this.rectangleStrokeColor,\n          fillColor: this.rectangleFillColor,\n          opacity: this.rectangleOpacity,\n          notes: '',\n          thickness: this.rectangleThickness,\n          borderDashArray: '0',\n          modifiedDate: modifiedDateRect,\n          author: author,\n          subject: subject,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'DrawTool';\n        break;\n      case 'Circle':\n        this.currentAnnotationMode = 'Circle';\n        // eslint-disable-next-line max-len\n        var modifiedDateCir = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.circleSettings.author ? this.pdfViewer.circleSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.circleSettings.subject ? this.pdfViewer.circleSettings.subject : 'Circle';\n        this.pdfViewer.drawingObject = {\n          shapeAnnotationType: this.setShapeType('Circle'),\n          strokeColor: this.circleStrokeColor,\n          fillColor: this.circleFillColor,\n          opacity: this.circleOpacity,\n          notes: '',\n          thickness: this.circleThickness,\n          borderDashArray: '0',\n          modifiedDate: modifiedDateCir,\n          author: author,\n          subject: subject,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'DrawTool';\n        break;\n      case 'Polygon':\n        this.currentAnnotationMode = 'Polygon';\n        // eslint-disable-next-line max-len\n        var modifiedDatePolygon = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.polygonSettings.author ? this.pdfViewer.polygonSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.polygonSettings.subject ? this.pdfViewer.polygonSettings.subject : 'Polygon';\n        this.pdfViewer.drawingObject = {\n          strokeColor: this.polygonStrokeColor,\n          fillColor: this.polygonFillColor,\n          opacity: this.polygonOpacity,\n          thickness: this.polygonThickness,\n          borderDashArray: '0',\n          notes: '',\n          author: author,\n          subject: subject,\n          modifiedDate: modifiedDatePolygon,\n          borderStyle: '',\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Polygon';\n        break;\n    }\n  };\n  ShapeAnnotation.prototype.updateShapeProperties = function () {\n    this.lineFillColor = this.pdfViewer.lineSettings.fillColor ? this.pdfViewer.lineSettings.fillColor : '#ffffff00';\n    this.lineStrokeColor = this.pdfViewer.lineSettings.strokeColor ? this.pdfViewer.lineSettings.strokeColor : '#ff0000';\n    this.lineThickness = this.pdfViewer.lineSettings.thickness ? this.pdfViewer.lineSettings.thickness : 1;\n    this.lineOpacity = this.pdfViewer.lineSettings.opacity ? this.pdfViewer.lineSettings.opacity : 1;\n    this.lineDashArray = this.pdfViewer.lineSettings.borderDashArray ? this.pdfViewer.lineSettings.borderDashArray : 0;\n    this.lineStartHead = this.pdfViewer.lineSettings.lineHeadStartStyle ? this.pdfViewer.lineSettings.lineHeadStartStyle : 'None';\n    this.lineEndHead = this.pdfViewer.lineSettings.lineHeadEndStyle ? this.pdfViewer.lineSettings.lineHeadEndStyle : 'None';\n    this.arrowFillColor = this.pdfViewer.arrowSettings.fillColor ? this.pdfViewer.arrowSettings.fillColor : '#ffffff00';\n    this.arrowStrokeColor = this.pdfViewer.arrowSettings.strokeColor ? this.pdfViewer.arrowSettings.strokeColor : '#ff0000';\n    this.arrowThickness = this.pdfViewer.arrowSettings.thickness ? this.pdfViewer.arrowSettings.thickness : 1;\n    this.arrowOpacity = this.pdfViewer.arrowSettings.opacity ? this.pdfViewer.arrowSettings.opacity : 1;\n    this.arrowDashArray = this.pdfViewer.arrowSettings.borderDashArray ? this.pdfViewer.arrowSettings.borderDashArray : 0;\n    this.arrowStartHead = this.pdfViewer.arrowSettings.lineHeadStartStyle ? this.pdfViewer.arrowSettings.lineHeadStartStyle : 'Closed';\n    this.arrowEndHead = this.pdfViewer.arrowSettings.lineHeadEndStyle ? this.pdfViewer.arrowSettings.lineHeadEndStyle : 'Closed';\n    this.rectangleFillColor = this.pdfViewer.rectangleSettings.fillColor ? this.pdfViewer.rectangleSettings.fillColor : '#ffffff00';\n    this.rectangleStrokeColor = this.pdfViewer.rectangleSettings.strokeColor ? this.pdfViewer.rectangleSettings.strokeColor : '#ff0000';\n    this.rectangleThickness = this.pdfViewer.rectangleSettings.thickness ? this.pdfViewer.rectangleSettings.thickness : 1;\n    this.rectangleOpacity = this.pdfViewer.rectangleSettings.opacity ? this.pdfViewer.rectangleSettings.opacity : 1;\n    this.circleFillColor = this.pdfViewer.circleSettings.fillColor ? this.pdfViewer.circleSettings.fillColor : '#ffffff00';\n    this.circleStrokeColor = this.pdfViewer.circleSettings.strokeColor ? this.pdfViewer.circleSettings.strokeColor : '#ff0000';\n    this.circleThickness = this.pdfViewer.circleSettings.thickness ? this.pdfViewer.circleSettings.thickness : 1;\n    this.circleOpacity = this.pdfViewer.circleSettings.opacity ? this.pdfViewer.circleSettings.opacity : 1;\n    this.polygonFillColor = this.pdfViewer.polygonSettings.fillColor ? this.pdfViewer.polygonSettings.fillColor : '#ffffff00';\n    this.polygonStrokeColor = this.pdfViewer.polygonSettings.strokeColor ? this.pdfViewer.polygonSettings.strokeColor : '#ff0000';\n    this.polygonThickness = this.pdfViewer.polygonSettings.thickness ? this.pdfViewer.polygonSettings.thickness : 1;\n    this.polygonOpacity = this.pdfViewer.polygonSettings.opacity ? this.pdfViewer.polygonSettings.opacity : 1;\n  };\n  ShapeAnnotation.prototype.setShapeType = function (shape) {\n    var shapeType;\n    switch (shape) {\n      case 'Line':\n        shapeType = 'Line';\n        break;\n      case 'Circle':\n        shapeType = 'Ellipse';\n        break;\n      case 'Square':\n        shapeType = 'Rectangle';\n        break;\n      case 'Polyline':\n        shapeType = 'Line';\n        break;\n      case 'Arrow':\n        shapeType = 'LineWidthArrowHead';\n        break;\n    }\n    return shapeType;\n  };\n  ShapeAnnotation.prototype.getShapeType = function (shape) {\n    var shapeType;\n    switch (shape.shapeAnnotationType) {\n      case 'Line':\n        shapeType = 'Line';\n        break;\n      case 'Circle':\n        shapeType = 'Ellipse';\n        break;\n      case 'Square':\n        shapeType = 'Rectangle';\n        break;\n      case 'Polyline':\n        shapeType = 'Line';\n        break;\n      case 'Polygon':\n        shapeType = 'Polygon';\n        break;\n    }\n    // eslint-disable-next-line max-len\n    if ((shape.shapeAnnotationType === 'Line' || shape.shapeAnnotationType === 'Polyline') && (shape.lineHeadStart !== 'None' || shape.lineHeadEnd !== 'None')) {\n      shapeType = 'LineWidthArrowHead';\n    }\n    return shapeType;\n  };\n  ShapeAnnotation.prototype.getShapeAnnotType = function (shape) {\n    var shapeType;\n    switch (shape) {\n      case 'Line':\n      case 'LineWidthArrowHead':\n        shapeType = 'Line';\n        break;\n      case 'Rectangle':\n        shapeType = 'Square';\n        break;\n      case 'Ellipse':\n        shapeType = 'Circle';\n        break;\n      case 'Polygon':\n        shapeType = 'Polygon';\n        break;\n    }\n    return shapeType;\n  };\n  /**\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @private\n   */\n  // eslint-disable-next-line\n  ShapeAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, toolMoved) {\n    if (!isNullOrUndefined(annotationBase.formFieldAnnotationType) && annotationBase.formFieldAnnotationType !== \"\") this.pdfViewer.annotationModule.isFormFieldShape = true;else this.pdfViewer.annotationModule.isFormFieldShape = false;\n    if (toolMoved) {\n      this.pdfViewerBase.updateDocumentEditedProperty(true);\n    }\n    var currentAnnotObject = null;\n    if (annotationBase) {\n      if (property === 'bounds') {\n        this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationModifiedDate(annotationBase, true);\n      }\n    }\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n    if (pageAnnotations != null && annotationBase) {\n      for (var i = 0; i < pageAnnotations.length; i++) {\n        if (annotationBase.id === pageAnnotations[i].id) {\n          if (property === 'bounds') {\n            if (pageAnnotations[i].shapeAnnotationType === 'Line') {\n              pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            } else if (pageAnnotations[i].shapeAnnotationType === 'Polygon') {\n              pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            } else {\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            }\n            if (pageAnnotations[i].enableShapeLabel === true && annotationBase.wrapper) {\n              var labelTop = 0;\n              var labelLeft = 0;\n              var labelWidth = 0;\n              var labelHeight = 24.6;\n              var labelMaxWidth = 151;\n              if (annotationBase.wrapper.bounds.width) {\n                // eslint-disable-next-line max-len\n                labelWidth = annotationBase.wrapper.bounds.width / 2;\n                labelWidth = labelWidth > 0 && labelWidth < labelMaxWidth ? labelWidth : labelMaxWidth;\n              }\n              if (annotationBase.wrapper.bounds.left) {\n                // eslint-disable-next-line max-len\n                labelLeft = annotationBase.wrapper.bounds.left + annotationBase.wrapper.bounds.width / 2 - labelWidth / 2;\n              }\n              if (annotationBase.wrapper.bounds.top) {\n                // eslint-disable-next-line max-len\n                labelTop = annotationBase.wrapper.bounds.top + annotationBase.wrapper.bounds.height / 2 - 12.3;\n              }\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].labelBounds = {\n                left: labelLeft,\n                top: labelTop,\n                width: labelWidth,\n                height: labelHeight,\n                right: 0,\n                bottom: 0\n              };\n            }\n          } else if (property === 'fill') {\n            pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n          } else if (property === 'stroke') {\n            pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n          } else if (property === 'opacity') {\n            pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n          } else if (property === 'thickness') {\n            pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n          } else if (property === 'dashArray') {\n            pageAnnotations[i].borderDashArray = annotationBase.wrapper.children[0].style.strokeDashArray;\n            pageAnnotations[i].borderStyle = annotationBase.borderStyle;\n          } else if (property === 'startArrow') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].lineHeadStart = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.sourceDecoraterShapes);\n          } else if (property === 'endArrow') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].lineHeadEnd = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.taregetDecoraterShapes);\n          } else if (property === 'notes') {\n            pageAnnotations[i].note = annotationBase.notes;\n          } else if (property === 'delete') {\n            currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n            break;\n          } else if (property === 'labelContent') {\n            pageAnnotations[i].note = annotationBase.labelContent;\n            pageAnnotations[i].labelContent = annotationBase.labelContent;\n            break;\n          } else if (property === 'fontColor') {\n            pageAnnotations[i].fontColor = annotationBase.fontColor;\n          } else if (property === 'fontSize') {\n            pageAnnotations[i].fontSize = annotationBase.fontSize;\n          }\n          pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n          this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n        }\n      }\n      this.manageAnnotations(pageAnnotations, pageNumber);\n    }\n    return currentAnnotObject;\n  };\n  /**\n   * @param pageNumber\n   * @param annotationBase\n   * @param pageNumber\n   * @param annotationBase\n   * @private\n   */\n  ShapeAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n    if (pageAnnotations) {\n      pageAnnotations.push(annotationBase);\n    }\n    this.manageAnnotations(pageAnnotations, pageNumber);\n  };\n  /**\n   * @private\n   */\n  ShapeAnnotation.prototype.saveShapeAnnotations = function () {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'];\n    }\n    // eslint-disable-next-line\n    var annotations = new Array();\n    for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n      annotations[j] = [];\n    }\n    if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n      var annotationCollection = JSON.parse(storeObject);\n      for (var i = 0; i < annotationCollection.length; i++) {\n        var newArray = [];\n        var pageAnnotationObject = annotationCollection[i];\n        if (pageAnnotationObject) {\n          for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n            if (!this.pdfViewerBase.checkFormFieldCollection(pageAnnotationObject.annotations[z].id)) {\n              this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n              if (this.pdfViewerBase.isJsonExported) {\n                if (pageAnnotationObject.annotations[z].isAnnotationRotated) {\n                  pageAnnotationObject.annotations[z].bounds = this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex);\n                  pageAnnotationObject.annotations[z].vertexPoints = this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex);\n                } else {\n                  var pageDetails = this.pdfViewerBase.pageSize[pageAnnotationObject.pageIndex];\n                  if (pageDetails) {\n                    pageAnnotationObject.annotations[z].annotationRotation = pageDetails.rotation;\n                    ;\n                  }\n                }\n              }\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n              var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n              pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n              var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n              pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex));\n              if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n                // eslint-disable-next-line max-len\n                pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n              }\n              if (pageAnnotationObject.annotations[z].enableShapeLabel === true) {\n                // eslint-disable-next-line max-len\n                pageAnnotationObject.annotations[z].labelBounds = JSON.stringify(this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(JSON.parse(pageAnnotationObject.annotations[z].bounds)));\n                var labelFillColorString = pageAnnotationObject.annotations[z].labelFillColor;\n                pageAnnotationObject.annotations[z].labelFillColor = JSON.stringify(this.getRgbCode(labelFillColorString));\n                var labelBorderColorString = pageAnnotationObject.annotations[z].labelBorderColor;\n                pageAnnotationObject.annotations[z].labelBorderColor = JSON.stringify(this.getRgbCode(labelBorderColorString));\n                pageAnnotationObject.annotations[z].labelSettings.fillColor = labelFillColorString;\n                var fontColorString = pageAnnotationObject.annotations[z].labelSettings.fontColor;\n                pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n              }\n            } else {\n              pageAnnotationObject.annotations[z] = \"\";\n            }\n          }\n          pageAnnotationObject.annotations = pageAnnotationObject.annotations.filter(function (item) {\n            return item;\n          });\n          newArray = pageAnnotationObject.annotations;\n        }\n        annotations[pageAnnotationObject.pageIndex] = newArray;\n      }\n    }\n    return JSON.stringify(annotations);\n  };\n  ShapeAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'];\n    }\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      if (!this.pdfViewerBase.isStorageExceed) {\n        window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_shape');\n      }\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n      if (annotObject[index]) {\n        annotObject[index].annotations = pageAnnotations;\n      }\n      var annotationStringified = JSON.stringify(annotObject);\n      if (this.pdfViewerBase.isStorageExceed) {\n        this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'] = annotationStringified;\n      } else {\n        window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_shape', annotationStringified);\n      }\n    }\n  };\n  ShapeAnnotation.prototype.createAnnotationObject = function (annotationModel) {\n    var bound;\n    var labelBound;\n    var annotationName = this.pdfViewer.annotation.createGUID();\n    if (!annotationModel.formFieldAnnotationType) {\n      // eslint-disable-next-line max-len\n      var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('shape', annotationModel.pageIndex + 1, annotationModel.shapeAnnotationType);\n      if (commentsDivid) {\n        document.getElementById(commentsDivid).id = annotationName;\n      }\n    }\n    annotationModel.annotName = annotationName;\n    if (annotationModel.wrapper.bounds) {\n      bound = {\n        // eslint-disable-next-line max-len\n        left: annotationModel.wrapper.bounds.x,\n        top: annotationModel.wrapper.bounds.y,\n        height: annotationModel.wrapper.bounds.height,\n        width: annotationModel.wrapper.bounds.width,\n        right: annotationModel.wrapper.bounds.right,\n        bottom: annotationModel.wrapper.bounds.bottom\n      };\n      labelBound = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationModel.wrapper.bounds);\n    } else {\n      bound = {\n        left: 0,\n        top: 0,\n        height: 0,\n        width: 0,\n        right: 0,\n        bottom: 0\n      };\n      labelBound = {\n        left: 0,\n        top: 0,\n        height: 0,\n        width: 0,\n        right: 0,\n        bottom: 0\n      };\n    }\n    if (annotationModel.subject === 'Line' && annotationModel.shapeAnnotationType === 'Polygon') {\n      annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', 'Polygon');\n    } else {\n      annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationModel.subject);\n    }\n    this.pdfViewer.annotation.stickyNotesAnnotationModule.addTextToComments(annotationName, annotationModel.notes);\n    // eslint-disable-next-line radix\n    var borderDashArray = parseInt(annotationModel.borderDashArray);\n    borderDashArray = isNaN(borderDashArray) ? 0 : borderDashArray;\n    // eslint-disable-next-line\n    var annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(annotationModel, true);\n    annotationModel.isPrint = annotationSettings.isPrint;\n    var setting = this.pdfViewer.shapeLabelSettings;\n    var labelSettings = {\n      borderColor: annotationModel.strokeColor,\n      fillColor: annotationModel.fillColor,\n      fontColor: annotationModel.fontColor,\n      fontSize: annotationModel.fontSize,\n      labelContent: annotationModel.labelContent,\n      labelHeight: setting.labelHeight,\n      labelWidth: setting.labelMaxWidth,\n      opacity: annotationModel.opacity\n    };\n    return {\n      // eslint-disable-next-line max-len\n      id: annotationModel.id,\n      shapeAnnotationType: this.getShapeAnnotType(annotationModel.shapeAnnotationType),\n      author: annotationModel.author,\n      allowedInteractions: this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotationModel),\n      subject: annotationModel.subject,\n      note: annotationModel.notes,\n      strokeColor: annotationModel.strokeColor,\n      annotName: annotationName,\n      comments: [],\n      review: {\n        state: '',\n        stateModel: '',\n        modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n        author: annotationModel.author\n      },\n      fillColor: annotationModel.fillColor,\n      opacity: annotationModel.opacity,\n      thickness: annotationModel.thickness,\n      pageNumber: annotationModel.pageIndex,\n      // eslint-disable-next-line max-len\n      borderStyle: annotationModel.borderStyle,\n      borderDashArray: borderDashArray,\n      bounds: bound,\n      modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n      rotateAngle: 'RotateAngle' + annotationModel.rotateAngle,\n      isCloudShape: annotationModel.isCloudShape,\n      cloudIntensity: annotationModel.cloudIntensity,\n      // eslint-disable-next-line max-len\n      vertexPoints: annotationModel.vertexPoints,\n      lineHeadStart: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.sourceDecoraterShapes),\n      lineHeadEnd: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.taregetDecoraterShapes),\n      rectangleDifference: [],\n      isLocked: annotationSettings.isLock,\n      // eslint-disable-next-line max-len\n      labelContent: annotationModel.labelContent,\n      enableShapeLabel: annotationModel.enableShapeLabel,\n      labelFillColor: annotationModel.labelFillColor,\n      fontColor: annotationModel.fontColor,\n      labelBorderColor: annotationModel.labelBorderColor,\n      fontSize: annotationModel.fontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: labelBound,\n      annotationSelectorSettings: this.getSelector(annotationModel.shapeAnnotationType, annotationModel.subject),\n      labelSettings: labelSettings,\n      annotationSettings: annotationSettings,\n      customData: this.pdfViewer.annotation.getShapeData(annotationModel.shapeAnnotationType, annotationModel.subject),\n      isPrint: annotationModel.isPrint,\n      isCommentLock: annotationModel.isCommentLock,\n      isAnnotationRotated: false\n    };\n  };\n  ShapeAnnotation.prototype.getSelector = function (type, subject) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n    if (type === 'Line' && subject !== 'Arrow' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.lineSettings.annotationSelectorSettings;\n    } else if ((type === 'LineWidthArrowHead' || subject === 'Arrow') && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.arrowSettings.annotationSelectorSettings;\n    } else if ((type === 'Rectangle' || type === 'Square') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.rectangleSettings.annotationSelectorSettings;\n    } else if ((type === 'Ellipse' || type === 'Circle') && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.circleSettings.annotationSelectorSettings;\n    } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.polygonSettings.annotationSelectorSettings;\n    }\n    return selector;\n  };\n  // eslint-disable-next-line\n  ShapeAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n    // eslint-disable-next-line\n    var annotationCollection;\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'];\n    }\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n      if (annotObject[index]) {\n        annotationCollection = annotObject[index].annotations;\n      } else {\n        annotationCollection = shapeAnnotations;\n      }\n    } else {\n      annotationCollection = shapeAnnotations;\n    }\n    return annotationCollection;\n  };\n  // eslint-disable-next-line\n  ShapeAnnotation.prototype.getRgbCode = function (colorString) {\n    if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n      colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n    }\n    var stringArray = colorString.split(',');\n    if (isNullOrUndefined(stringArray[1])) {\n      colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n      stringArray = colorString.split(',');\n    }\n    // eslint-disable-next-line radix\n    var r = parseInt(stringArray[0].split('(')[1]);\n    // eslint-disable-next-line radix\n    var g = parseInt(stringArray[1]);\n    // eslint-disable-next-line radix\n    var b = parseInt(stringArray[2]);\n    // eslint-disable-next-line radix\n    var a = parseFloat(stringArray[3]);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  };\n  /**\n   * @param annotation\n   * @param pageNumber\n   * @param annotation\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n  ShapeAnnotation.prototype.saveImportedShapeAnnotations = function (annotation, pageNumber) {\n    var annotationObject = null;\n    var vertexPoints = null;\n    annotation.Author = this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotation.Subject);\n    if (annotation.VertexPoints) {\n      vertexPoints = [];\n      for (var j = 0; j < annotation.VertexPoints.length; j++) {\n        var point = {\n          x: annotation.VertexPoints[j].X,\n          y: annotation.VertexPoints[j].Y\n        };\n        vertexPoints.push(point);\n      }\n    }\n    if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n      // eslint-disable-next-line max-len\n      annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n      // eslint-disable-next-line max-len\n      annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n      annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n      annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n      annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n      annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n    }\n    // eslint-disable-next-line max-len\n    annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n    // eslint-disable-next-line max-len\n    annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n    // eslint-disable-next-line max-len\n    annotationObject = {\n      id: 'shape',\n      shapeAnnotationType: annotation.ShapeAnnotationType,\n      author: annotation.Author,\n      allowedInteractions: annotation.allowedInteractions,\n      modifiedDate: annotation.ModifiedDate,\n      subject: annotation.Subject,\n      pageNumber: pageNumber,\n      // eslint-disable-next-line max-len\n      note: annotation.Note,\n      strokeColor: annotation.StrokeColor,\n      fillColor: annotation.FillColor,\n      opacity: annotation.Opacity,\n      thickness: annotation.Thickness,\n      rectangleDifference: annotation.RectangleDifference,\n      borderStyle: annotation.BorderStyle,\n      borderDashArray: annotation.BorderDashArray,\n      rotateAngle: annotation.RotateAngle,\n      isCloudShape: annotation.IsCloudShape,\n      // eslint-disable-next-line max-len\n      cloudIntensity: annotation.CloudIntensity,\n      vertexPoints: vertexPoints,\n      lineHeadStart: annotation.LineHeadStart,\n      lineHeadEnd: annotation.LineHeadEnd,\n      isLocked: annotation.IsLocked,\n      comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n      review: {\n        state: annotation.State,\n        stateModel: annotation.StateModel,\n        modifiedDate: annotation.ModifiedDate,\n        author: annotation.Author\n      },\n      annotName: annotation.AnnotName,\n      bounds: {\n        left: annotation.Bounds.X,\n        top: annotation.Bounds.Y,\n        width: annotation.Bounds.Width,\n        height: annotation.Bounds.Height,\n        right: annotation.Bounds.Right,\n        bottom: annotation.Bounds.Bottom\n      },\n      labelContent: annotation.LabelContent,\n      enableShapeLabel: annotation.EnableShapeLabel,\n      labelFillColor: annotation.LabelFillColor,\n      labelBorderColor: annotation.LabelBorderColor,\n      fontColor: annotation.FontColor,\n      fontSize: annotation.FontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: annotation.LabelBounds,\n      annotationSelectorSettings: this.getSettings(annotation),\n      labelSettings: annotation.LabelSettings,\n      annotationSettings: annotation.AnnotationSettings,\n      customData: this.pdfViewer.annotation.getCustomData(annotation),\n      isPrint: annotation.IsPrint,\n      isCommentLock: annotation.IsCommentLock,\n      isAnnotationRotated: false\n    };\n    this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape');\n  };\n  /**\n   * @param annotation\n   * @param pageNumber\n   * @param annotation\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n  ShapeAnnotation.prototype.updateShapeAnnotationCollections = function (annotation, pageNumber) {\n    // eslint-disable-next-line\n    var annotationObject = null;\n    var vertexPoints = null;\n    if (annotation.VertexPoints) {\n      vertexPoints = [];\n      for (var j = 0; j < annotation.VertexPoints.length; j++) {\n        var point = {\n          x: annotation.VertexPoints[j].X,\n          y: annotation.VertexPoints[j].Y\n        };\n        vertexPoints.push(point);\n      }\n    }\n    if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n      // eslint-disable-next-line max-len\n      annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n      // eslint-disable-next-line max-len\n      annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n      annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n      annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n      annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n      var settings = this.pdfViewer.shapeLabelSettings;\n      var labelSettings = {\n        borderColor: annotation.StrokeColor,\n        fillColor: annotation.FillColor,\n        fontColor: annotation.FontColor,\n        fontSize: annotation.FontSize,\n        labelContent: annotation.LabelContent,\n        labelHeight: settings.labelHeight,\n        labelWidth: settings.labelWidth,\n        opacity: annotation.Opacity\n      };\n      annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : labelSettings;\n    }\n    // eslint-disable-next-line max-len\n    annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n    if (annotation.IsLocked) {\n      annotation.AnnotationSettings.isLock = annotation.IsLocked;\n    }\n    // eslint-disable-next-line max-len\n    annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n    // eslint-disable-next-line max-len\n    annotationObject = {\n      id: 'shape',\n      shapeAnnotationType: annotation.ShapeAnnotationType,\n      author: annotation.Author,\n      allowedInteractions: annotation.allowedInteractions,\n      modifiedDate: annotation.ModifiedDate,\n      subject: annotation.Subject,\n      // eslint-disable-next-line max-len\n      note: annotation.Note,\n      strokeColor: annotation.StrokeColor,\n      fillColor: annotation.FillColor,\n      opacity: annotation.Opacity,\n      thickness: annotation.Thickness,\n      rectangleDifference: annotation.RectangleDifference,\n      borderStyle: annotation.BorderStyle,\n      borderDashArray: annotation.BorderDashArray,\n      rotateAngle: annotation.RotateAngle,\n      isCloudShape: annotation.IsCloudShape,\n      // eslint-disable-next-line max-len\n      cloudIntensity: annotation.CloudIntensity,\n      vertexPoints: vertexPoints,\n      lineHeadStart: annotation.LineHeadStart,\n      lineHeadEnd: annotation.LineHeadEnd,\n      isLocked: annotation.IsLocked,\n      comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n      review: {\n        state: annotation.State,\n        stateModel: annotation.StateModel,\n        modifiedDate: annotation.ModifiedDate,\n        author: annotation.Author\n      },\n      annotationId: annotation.AnnotName,\n      bounds: {\n        left: annotation.Bounds.X,\n        top: annotation.Bounds.Y,\n        width: annotation.Bounds.Width,\n        height: annotation.Bounds.Height,\n        right: annotation.Bounds.Right,\n        bottom: annotation.Bounds.Bottom\n      },\n      labelContent: annotation.LabelContent,\n      enableShapeLabel: annotation.EnableShapeLabel,\n      labelFillColor: annotation.LabelFillColor,\n      labelBorderColor: annotation.LabelBorderColor,\n      fontColor: annotation.FontColor,\n      fontSize: annotation.FontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: annotation.LabelBounds,\n      pageNumber: pageNumber,\n      labelSettings: annotation.LabelSettings,\n      annotationSettings: annotation.AnnotationSettings,\n      customData: this.pdfViewer.annotation.getCustomData(annotation),\n      isPrint: annotation.IsPrint,\n      isCommentLock: annotation.IsCommentLock\n    };\n    return annotationObject;\n  };\n  /**\n   * This method used to add annotations with using program.\n   *\n   * @param annotationType - It describes the annotation type\n   * @param annotationObject - It describes type of annotation object\n   * @param offset - It describes about the annotation bounds or location\n   * @returns Object\n   * @private\n   */\n  ShapeAnnotation.prototype.updateAddAnnotationDetails = function (annotationType, annotationObject, offset) {\n    //Creating new object if annotationObject is null\n    if (!annotationObject) {\n      annotationObject = {\n        offset: {\n          x: 10,\n          y: 10\n        },\n        pageNumber: 0,\n        width: undefined,\n        height: undefined\n      };\n      offset = annotationObject.offset;\n    } else if (!annotationObject.offset) offset = {\n      x: 10,\n      y: 10\n    };else offset = annotationObject.offset;\n    //Initialize the annotation settings\n    var annotationSelectorSettings = null;\n    var allowedInteractions = null;\n    var annotationSettings = null;\n    var shapeAnnotationType = '';\n    var isArrow = false;\n    var vertexPoints = null;\n    //Creating the CurrentDate and Annotation name\n    var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n    var annotationName = this.pdfViewer.annotation.createGUID();\n    if (annotationType == 'Line') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.lineSettings.annotationSelectorSettings ? this.pdfViewer.lineSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.lineSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n      allowedInteractions = this.pdfViewer.lineSettings.allowedInteractions ? this.pdfViewer.lineSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      shapeAnnotationType = 'Line';\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 100,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Arrow') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.arrowSettings.annotationSelectorSettings ? this.pdfViewer.arrowSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.arrowSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n      allowedInteractions = this.pdfViewer.arrowSettings.allowedInteractions ? this.pdfViewer.arrowSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      shapeAnnotationType = 'Line';\n      isArrow = true;\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 100,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Rectangle') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.rectangleSettings.annotationSelectorSettings ? this.pdfViewer.rectangleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.rectangleSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n      allowedInteractions = this.pdfViewer.rectangleSettings.allowedInteractions ? this.pdfViewer.rectangleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      shapeAnnotationType = 'Square';\n      annotationObject.width = annotationObject.width ? annotationObject.width : 150;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 75;\n    } else if (annotationType == 'Circle') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.circleSettings.annotationSelectorSettings ? this.pdfViewer.circleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.circleSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n      allowedInteractions = this.pdfViewer.circleSettings.allowedInteractions ? this.pdfViewer.circleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      shapeAnnotationType = 'Circle';\n      annotationObject.width = annotationObject.width ? annotationObject.width : 100;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 90;\n    } else if (annotationType == 'Polygon') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.polygonSettings.annotationSelectorSettings ? this.pdfViewer.polygonSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.polygonSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n      allowedInteractions = this.pdfViewer.polygonSettings.allowedInteractions ? this.pdfViewer.polygonSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      shapeAnnotationType = 'Polygon';\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 42,\n        y: offset.y - 29\n      }, {\n        x: offset.x + 89,\n        y: offset.y - 1\n      }, {\n        x: offset.x + 78,\n        y: offset.y + 42\n      }, {\n        x: offset.x + 11,\n        y: offset.y + 42\n      }, {\n        x: offset.x,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    }\n    annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : annotationSettings.isLock;\n    annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : annotationSettings.minHeight;\n    annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : annotationSettings.minWidth;\n    annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : annotationSettings.maxWidth;\n    annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : annotationSettings.maxHeight;\n    //Converting points model into vertex property\n    if (vertexPoints) vertexPoints = this.pdfViewer.annotation.getVertexPointsXY(vertexPoints);\n    //Creating Annotation objects with it's proper properties\n    var shapeAnnotation = [];\n    var shape = {\n      AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n      AnnotName: annotationName,\n      AnnotType: 'shape',\n      AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n      AnnotationSettings: annotationSettings,\n      Author: annotationObject.author ? annotationObject.author : 'Guest',\n      BorderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray : 0,\n      BorderStyle: 'Solid',\n      Bounds: {\n        X: offset.x,\n        Y: offset.y,\n        Width: annotationObject.width,\n        Height: annotationObject.height,\n        Left: offset.x,\n        Top: offset.y,\n        Location: {\n          X: offset.x,\n          Y: offset.y\n        },\n        Size: {\n          Height: annotationObject.height,\n          IsEmpty: false,\n          Width: annotationObject.width\n        }\n      },\n      CloudIntensity: 0,\n      Comments: null,\n      CustomData: annotationObject.customData ? annotationObject.customData : null,\n      CreatedDate: currentDateString,\n      EnableShapeLabel: false,\n      ExistingCustomData: null,\n      FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n      FontColor: null,\n      FontSize: 0,\n      IsCloudShape: false,\n      IsCommentLock: false,\n      IsLocked: annotationObject.isLock ? annotationObject.isLock : false,\n      IsPrint: annotationObject.isPrint ? annotationObject.isPrint : true,\n      LabelBorderColor: null,\n      LabelBounds: {\n        X: 0,\n        Y: 0,\n        Width: 0,\n        Height: 0\n      },\n      LabelContent: null,\n      LabelFillColor: null,\n      LabelSettings: null,\n      LineHeadEnd: annotationObject.lineHeadStartStyle ? annotationObject.lineHeadStartStyle : isArrow ? 'ClosedArrow' : 'None',\n      LineHeadStart: annotationObject.lineHeadEndStyle ? annotationObject.lineHeadEndStyle : isArrow ? 'ClosedArrow' : 'None',\n      ModifiedDate: '',\n      Note: '',\n      Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n      RectangleDifference: null,\n      RotateAngle: 'RotateAngle0',\n      ShapeAnnotationType: shapeAnnotationType,\n      State: '',\n      StateModel: '',\n      StrokeColor: annotationObject.strokeColor ? annotationObject.strokeColor : '#ff0000',\n      Subject: annotationObject.subject ? annotationObject.subject : annotationType.toString(),\n      Thickness: annotationObject.thickness ? annotationObject.thickness : 1,\n      VertexPoints: vertexPoints\n    };\n    //Adding the annotation object to an array and return it\n    shapeAnnotation[0] = shape;\n    return {\n      shapeAnnotation: shapeAnnotation\n    };\n  };\n  return ShapeAnnotation;\n}();\nexport { ShapeAnnotation };","map":{"version":3,"names":["isNullOrUndefined","ShapeAnnotation","pdfviewer","pdfViewerBase","shapeCount","isAddAnnotationProgramatically","pdfViewer","prototype","renderShapeAnnotations","shapeAnnotations","pageNumber","isImportAcion","isAnnotOrderAction","length","shapeAnnots","annotation","getStoredAnnotations","i","annotationAddMode","annotationModule","findAnnotationMode","AnnotType","annotationObject","isAnnotationRotated","ShapeAnnotationType","isJsonImported","Bounds","importJsonForRotatedDocuments","Rotate","AnnotationRotation","isPageRotated","vertexPoints","VertexPoints","calculateVertexPoints","j","x","X","y","Y","point","push","EnableShapeLabel","LabelBounds","inputElementModule","calculateLabelBoundsFromLoadedDocument","LabelBorderColor","StrokeColor","FontColor","LabelFillColor","FillColor","FontSize","LabelSettings","shapeLabelSettings","AnnotationSelectorSettings","annotationSelectorSettings","AnnotationSettings","updateAnnotationSettings","allowedInteractions","AllowedInteractions","updateAnnotationAllowedInteractions","left","top_1","width","Width","height","Height","id","shapeAnnotationType","author","Author","modifiedDate","ModifiedDate","subject","Subject","note","Note","strokeColor","fillColor","opacity","Opacity","thickness","Thickness","rectangleDifference","RectangleDifference","borderStyle","BorderStyle","borderDashArray","BorderDashArray","rotateAngle","RotateAngle","isCloudShape","IsCloudShape","cloudIntensity","CloudIntensity","lineHeadStart","LineHeadStart","lineHeadEnd","LineHeadEnd","isLocked","IsLocked","comments","getAnnotationComments","Comments","review","state","State","stateModel","StateModel","annotName","AnnotName","bounds","top","right","Right","bottom","Bottom","labelContent","LabelContent","enableShapeLabel","labelFillColor","fontColor","labelBorderColor","fontSize","labelBounds","getSettings","labelSettings","annotationSettings","customData","getCustomData","isPrint","IsPrint","isCommentLock","IsCommentLock","annot","vPoints","getShapeType","notes","toString","parseFloat","split","taregetDecoraterShapes","getArrowType","sourceDecoraterShapes","pageIndex","addedAnnot","add","storeAnnotations","settings","fireAnnotationAdd","createAnnotationObject","formFieldAnnotationType","isFormFieldShape","triggerAnnotationAdd","selector","getSelector","setAnnotationType","type","updateShapeProperties","disableTextSelectionMode","currentAnnotationMode","modifiedDateLine","stickyNotesAnnotationModule","getDateAndTime","lineSettings","drawingObject","setShapeType","lineFillColor","lineStrokeColor","lineOpacity","lineThickness","lineDashArray","lineStartHead","lineEndHead","tool","modifiedDateArrow","arrowSettings","arrowOpacity","arrowStartHead","arrowEndHead","arrowFillColor","arrowStrokeColor","arrowThickness","arrowDashArray","modifiedDateRect","rectangleSettings","rectangleStrokeColor","rectangleFillColor","rectangleOpacity","rectangleThickness","modifiedDateCir","circleSettings","circleStrokeColor","circleFillColor","circleOpacity","circleThickness","modifiedDatePolygon","polygonSettings","polygonStrokeColor","polygonFillColor","polygonOpacity","polygonThickness","lineHeadStartStyle","lineHeadEndStyle","shape","shapeType","getShapeAnnotType","modifyInCollection","property","annotationBase","toolMoved","updateDocumentEditedProperty","currentAnnotObject","updateAnnotationModifiedDate","pageAnnotations","getAnnotations","wrapper","labelTop","labelLeft","labelWidth","labelHeight","labelMaxWidth","children","style","fill","strokeWidth","strokeDashArray","getArrowTypeForCollection","splice","storeAnnotationCollections","manageAnnotations","addInCollection","saveShapeAnnotations","storeObject","window","sessionStorage","getItem","documentId","isStorageExceed","annotationStorage","annotations","Array","pageCount","skipDownload","annotationCollection","JSON","parse","newArray","pageAnnotationObject","z","checkFormFieldCollection","updateModifiedDate","isJsonExported","getBounds","getVertexPoints","pageDetails","pageSize","annotationRotation","rotation","stringify","strokeColorString","getRgbCode","fillColorString","calculateLabelBounds","labelFillColorString","labelBorderColorString","fontColorString","filter","item","annotObject","removeItem","index","getPageCollection","annotationStringified","setItem","annotationModel","bound","labelBound","annotationName","createGUID","commentsDivid","addComments","document","getElementById","updateAnnotationAuthor","addTextToComments","parseInt","isNaN","findAnnotationSettings","setting","borderColor","isLock","getShapeData","colorString","match","nameToHash","stringArray","getValue","r","g","b","a","saveImportedShapeAnnotations","updateShapeAnnotationCollections","annotationId","updateAddAnnotationDetails","annotationType","offset","undefined","isArrow","currentDateString","updateSettings","minHeight","minWidth","maxWidth","maxHeight","getVertexPointsXY","shapeAnnotation","Left","Top","Location","Size","IsEmpty","CustomData","CreatedDate","ExistingCustomData"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/annotation/shape-annotation.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar ShapeAnnotation = /** @class */ (function () {\n    function ShapeAnnotation(pdfviewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.shapeCount = 0;\n        /**\n         * @private\n         */\n        this.isAddAnnotationProgramatically = false;\n        this.pdfViewer = pdfviewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @param isImportAcion\n     * @private\n     */\n    // eslint-disable-next-line\n    ShapeAnnotation.prototype.renderShapeAnnotations = function (shapeAnnotations, pageNumber, isImportAcion, isAnnotOrderAction) {\n        if (shapeAnnotations) {\n            if (shapeAnnotations.length >= 1) {\n                // eslint-disable-next-line\n                var shapeAnnots = this.pdfViewer.annotation.getStoredAnnotations(pageNumber, shapeAnnotations, '_annotations_shape');\n                if (!shapeAnnots || isAnnotOrderAction || isImportAcion) {\n                    for (var i = 0; i < shapeAnnotations.length; i++) {\n                        // eslint-disable-next-line\n                        var annotation = shapeAnnotations[i];\n                        annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n                        var annotationObject = null;\n                        this.shapeCount = this.shapeCount + 1;\n                        var isAnnotationRotated = void 0;\n                        if (annotation.ShapeAnnotationType) {\n                            if (isImportAcion) {\n                                if (this.pdfViewerBase.isJsonImported) {\n                                    annotation.Bounds = this.pdfViewerBase.importJsonForRotatedDocuments(annotation.Rotate, pageNumber, annotation.Bounds, annotation.AnnotationRotation);\n                                    isAnnotationRotated = this.pdfViewerBase.isPageRotated;\n                                }\n                            }\n                            var vertexPoints = null;\n                            if (annotation.VertexPoints) {\n                                vertexPoints = [];\n                                if (isImportAcion && this.pdfViewerBase.isJsonImported) {\n                                    vertexPoints = this.pdfViewerBase.calculateVertexPoints(annotation.Rotate, pageNumber, annotation.VertexPoints, annotation.AnnotationRotation);\n                                }\n                                else {\n                                    for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                                        var x = annotation.VertexPoints[j].X ? annotation.VertexPoints[j].X : annotation.VertexPoints[j].x;\n                                        var y = annotation.VertexPoints[j].Y ? annotation.VertexPoints[j].Y : annotation.VertexPoints[j].y;\n                                        var point = { x: x, y: y };\n                                        vertexPoints.push(point);\n                                    }\n                                }\n                            }\n                            // eslint-disable-next-line\n                            if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n                                // eslint-disable-next-line max-len\n                                annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n                                // eslint-disable-next-line max-len\n                                annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n                                annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n                                annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n                                annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n                                // eslint-disable-next-line max-len\n                                annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n                            }\n                            // eslint-disable-next-line max-len\n                            annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n                            // eslint-disable-next-line max-len\n                            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n                            // eslint-disable-next-line max-len\n                            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n                            var left = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n                            var top_1 = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n                            var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n                            var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height; // eslint-disable-next-line max-len\n                            annotationObject = {\n                                id: 'shape' + this.shapeCount, shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, pageNumber: pageNumber,\n                                // eslint-disable-next-line max-len\n                                note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n                                borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n                                // eslint-disable-next-line max-len\n                                cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author), review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author }, annotName: annotation.AnnotName,\n                                bounds: { left: left, top: top_1, width: width, height: height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n                                // eslint-disable-next-line max-len\n                                labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n                                fontColor: annotation.FontColor, labelBorderColor: annotation.LabelBorderColor, fontSize: annotation.FontSize,\n                                // eslint-disable-next-line max-len\n                                labelBounds: annotation.LabelBounds, annotationSelectorSettings: this.getSettings(annotation), labelSettings: annotation.LabelSettings, annotationSettings: annotation.AnnotationSettings,\n                                customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isAnnotationRotated: isAnnotationRotated\n                            };\n                            var annot = void 0;\n                            // eslint-disable-next-line\n                            var vPoints = annotationObject.vertexPoints;\n                            if (vertexPoints == null) {\n                                vPoints = [];\n                            }\n                            // eslint-disable-next-line max-len\n                            annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n                            annot = {\n                                // eslint-disable-next-line max-len\n                                id: 'shape' + this.shapeCount, shapeAnnotationType: this.getShapeType(annotationObject), author: annotationObject.author, allowedInteractions: annotationObject.allowedInteractions, modifiedDate: annotationObject.modifiedDate, annotName: annotationObject.annotName,\n                                subject: annotationObject.subject, notes: annotationObject.note, fillColor: annotationObject.fillColor, strokeColor: annotationObject.strokeColor, opacity: annotationObject.opacity,\n                                // eslint-disable-next-line max-len\n                                thickness: annotationObject.thickness, borderStyle: annotationObject.borderStyle, borderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray.toString() : '0', rotateAngle: parseFloat(annotationObject.rotateAngle.split('Angle')[1]), comments: annotationObject.comments, review: annotationObject.review, isCloudShape: annotationObject.isCloudShape, cloudIntensity: annotationObject.cloudIntensity, taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadEnd),\n                                // eslint-disable-next-line max-len\n                                sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadStart), vertexPoints: vPoints, bounds: { x: annotationObject.bounds.left, y: annotationObject.bounds.top, width: annotationObject.bounds.width, height: annotationObject.bounds.height },\n                                pageIndex: annotationObject.pageNumber,\n                                // eslint-disable-next-line max-len\n                                labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n                                fontColor: annotation.FontColor, labelBorderColor: annotation.LabelBorderColor, fontSize: annotation.FontSize,\n                                labelBounds: annotation.LabelBounds, annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n                                annotationSettings: annotationObject.annotationSettings, annotationAddMode: annotation.annotationAddMode,\n                                isPrint: annotation.IsPrint, isCommentLock: annotationObject.isCommentLock,\n                                customData: annotationObject.customData\n                            };\n                            var addedAnnot = this.pdfViewer.add(annot);\n                            this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape');\n                            if (this.isAddAnnotationProgramatically) {\n                                var settings = {\n                                    opacity: annot.opacity, strokeColor: annot.strokeColor, thickness: annot.thickness, modifiedDate: annot.modifiedDate,\n                                    width: annot.bounds.width, height: annot.bounds.height\n                                };\n                                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, annotation.ShapeAnnotationType, annot.bounds, settings);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (shapeAnnotations.shapeAnnotationType) {\n                var annotationObject = this.createAnnotationObject(shapeAnnotations);\n                if (!isNullOrUndefined(shapeAnnotations.formFieldAnnotationType) && shapeAnnotations.formFieldAnnotationType !== \"\")\n                    this.pdfViewer.annotationModule.isFormFieldShape = true;\n                else\n                    this.pdfViewer.annotationModule.isFormFieldShape = false;\n                this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape');\n                this.pdfViewer.annotationModule.triggerAnnotationAdd(shapeAnnotations);\n            }\n        }\n    };\n    /**\n     * @param annotation\n     * @private\n     */\n    // eslint-disable-next-line\n    ShapeAnnotation.prototype.getSettings = function (annotation) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if (annotation.AnnotationSelectorSettings) {\n            selector = annotation.AnnotationSelectorSettings;\n        }\n        else {\n            selector = this.getSelector(annotation.ShapeAnnotationType, annotation.Subject);\n        }\n        return selector;\n    };\n    /**\n     * @param type\n     * @private\n     */\n    ShapeAnnotation.prototype.setAnnotationType = function (type) {\n        this.updateShapeProperties();\n        this.pdfViewerBase.disableTextSelectionMode();\n        var author = 'Guest';\n        var subject = \"\";\n        switch (type) {\n            case 'Line':\n                this.currentAnnotationMode = 'Line';\n                // eslint-disable-next-line max-len\n                var modifiedDateLine = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.lineSettings.author ? this.pdfViewer.lineSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.lineSettings.subject ? this.pdfViewer.lineSettings.subject : 'Line';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: this.setShapeType('Line'), fillColor: this.lineFillColor, notes: '', strokeColor: this.lineStrokeColor, opacity: this.lineOpacity,\n                    thickness: this.lineThickness, modifiedDate: modifiedDateLine, borderDashArray: this.lineDashArray.toString(),\n                    // eslint-disable-next-line max-len\n                    sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.lineStartHead.toString()), taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.lineEndHead.toString()),\n                    author: author, subject: subject, lineHeadStart: this.lineStartHead, lineHeadEnd: this.lineEndHead, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Line';\n                break;\n            case 'Arrow':\n                this.currentAnnotationMode = 'Arrow';\n                // eslint-disable-next-line max-len\n                var modifiedDateArrow = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.arrowSettings.author ? this.pdfViewer.arrowSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.arrowSettings.subject ? this.pdfViewer.arrowSettings.subject : 'Arrow';\n                this.pdfViewer.drawingObject = {\n                    shapeAnnotationType: this.setShapeType('Arrow'), opacity: this.arrowOpacity,\n                    // eslint-disable-next-line max-len\n                    sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.arrowStartHead.toString()),\n                    taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.arrowEndHead.toString()),\n                    // eslint-disable-next-line max-len\n                    fillColor: this.arrowFillColor, strokeColor: this.arrowStrokeColor, notes: '', thickness: this.arrowThickness,\n                    borderDashArray: this.arrowDashArray.toString(), author: author, subject: subject,\n                    // eslint-disable-next-line max-len\n                    modifiedDate: modifiedDateArrow, lineHeadStart: this.arrowStartHead, lineHeadEnd: this.arrowEndHead, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Line';\n                break;\n            case 'Rectangle':\n                this.currentAnnotationMode = 'Rectangle';\n                // eslint-disable-next-line max-len\n                var modifiedDateRect = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.rectangleSettings.author ? this.pdfViewer.rectangleSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.rectangleSettings.subject ? this.pdfViewer.rectangleSettings.subject : 'Rectangle';\n                this.pdfViewer.drawingObject = {\n                    shapeAnnotationType: this.setShapeType('Rectangle'), strokeColor: this.rectangleStrokeColor,\n                    fillColor: this.rectangleFillColor, opacity: this.rectangleOpacity, notes: '',\n                    thickness: this.rectangleThickness, borderDashArray: '0', modifiedDate: modifiedDateRect,\n                    author: author, subject: subject, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'DrawTool';\n                break;\n            case 'Circle':\n                this.currentAnnotationMode = 'Circle';\n                // eslint-disable-next-line max-len\n                var modifiedDateCir = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.circleSettings.author ? this.pdfViewer.circleSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.circleSettings.subject ? this.pdfViewer.circleSettings.subject : 'Circle';\n                this.pdfViewer.drawingObject = {\n                    shapeAnnotationType: this.setShapeType('Circle'), strokeColor: this.circleStrokeColor,\n                    fillColor: this.circleFillColor, opacity: this.circleOpacity, notes: '',\n                    thickness: this.circleThickness, borderDashArray: '0', modifiedDate: modifiedDateCir,\n                    author: author, subject: subject, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'DrawTool';\n                break;\n            case 'Polygon':\n                this.currentAnnotationMode = 'Polygon';\n                // eslint-disable-next-line max-len\n                var modifiedDatePolygon = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.polygonSettings.author ? this.pdfViewer.polygonSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.polygonSettings.subject ? this.pdfViewer.polygonSettings.subject : 'Polygon';\n                this.pdfViewer.drawingObject = {\n                    strokeColor: this.polygonStrokeColor, fillColor: this.polygonFillColor,\n                    opacity: this.polygonOpacity, thickness: this.polygonThickness, borderDashArray: '0',\n                    notes: '', author: author, subject: subject,\n                    modifiedDate: modifiedDatePolygon, borderStyle: '', isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Polygon';\n                break;\n        }\n    };\n    ShapeAnnotation.prototype.updateShapeProperties = function () {\n        this.lineFillColor = this.pdfViewer.lineSettings.fillColor ? this.pdfViewer.lineSettings.fillColor : '#ffffff00';\n        this.lineStrokeColor = this.pdfViewer.lineSettings.strokeColor ? this.pdfViewer.lineSettings.strokeColor : '#ff0000';\n        this.lineThickness = this.pdfViewer.lineSettings.thickness ? this.pdfViewer.lineSettings.thickness : 1;\n        this.lineOpacity = this.pdfViewer.lineSettings.opacity ? this.pdfViewer.lineSettings.opacity : 1;\n        this.lineDashArray = this.pdfViewer.lineSettings.borderDashArray ? this.pdfViewer.lineSettings.borderDashArray : 0;\n        this.lineStartHead = this.pdfViewer.lineSettings.lineHeadStartStyle ? this.pdfViewer.lineSettings.lineHeadStartStyle : 'None';\n        this.lineEndHead = this.pdfViewer.lineSettings.lineHeadEndStyle ? this.pdfViewer.lineSettings.lineHeadEndStyle : 'None';\n        this.arrowFillColor = this.pdfViewer.arrowSettings.fillColor ? this.pdfViewer.arrowSettings.fillColor : '#ffffff00';\n        this.arrowStrokeColor = this.pdfViewer.arrowSettings.strokeColor ? this.pdfViewer.arrowSettings.strokeColor : '#ff0000';\n        this.arrowThickness = this.pdfViewer.arrowSettings.thickness ? this.pdfViewer.arrowSettings.thickness : 1;\n        this.arrowOpacity = this.pdfViewer.arrowSettings.opacity ? this.pdfViewer.arrowSettings.opacity : 1;\n        this.arrowDashArray = this.pdfViewer.arrowSettings.borderDashArray ? this.pdfViewer.arrowSettings.borderDashArray : 0;\n        this.arrowStartHead = this.pdfViewer.arrowSettings.lineHeadStartStyle ? this.pdfViewer.arrowSettings.lineHeadStartStyle : 'Closed';\n        this.arrowEndHead = this.pdfViewer.arrowSettings.lineHeadEndStyle ? this.pdfViewer.arrowSettings.lineHeadEndStyle : 'Closed';\n        this.rectangleFillColor = this.pdfViewer.rectangleSettings.fillColor ? this.pdfViewer.rectangleSettings.fillColor : '#ffffff00';\n        this.rectangleStrokeColor = this.pdfViewer.rectangleSettings.strokeColor ? this.pdfViewer.rectangleSettings.strokeColor : '#ff0000';\n        this.rectangleThickness = this.pdfViewer.rectangleSettings.thickness ? this.pdfViewer.rectangleSettings.thickness : 1;\n        this.rectangleOpacity = this.pdfViewer.rectangleSettings.opacity ? this.pdfViewer.rectangleSettings.opacity : 1;\n        this.circleFillColor = this.pdfViewer.circleSettings.fillColor ? this.pdfViewer.circleSettings.fillColor : '#ffffff00';\n        this.circleStrokeColor = this.pdfViewer.circleSettings.strokeColor ? this.pdfViewer.circleSettings.strokeColor : '#ff0000';\n        this.circleThickness = this.pdfViewer.circleSettings.thickness ? this.pdfViewer.circleSettings.thickness : 1;\n        this.circleOpacity = this.pdfViewer.circleSettings.opacity ? this.pdfViewer.circleSettings.opacity : 1;\n        this.polygonFillColor = this.pdfViewer.polygonSettings.fillColor ? this.pdfViewer.polygonSettings.fillColor : '#ffffff00';\n        this.polygonStrokeColor = this.pdfViewer.polygonSettings.strokeColor ? this.pdfViewer.polygonSettings.strokeColor : '#ff0000';\n        this.polygonThickness = this.pdfViewer.polygonSettings.thickness ? this.pdfViewer.polygonSettings.thickness : 1;\n        this.polygonOpacity = this.pdfViewer.polygonSettings.opacity ? this.pdfViewer.polygonSettings.opacity : 1;\n    };\n    ShapeAnnotation.prototype.setShapeType = function (shape) {\n        var shapeType;\n        switch (shape) {\n            case 'Line':\n                shapeType = 'Line';\n                break;\n            case 'Circle':\n                shapeType = 'Ellipse';\n                break;\n            case 'Square':\n                shapeType = 'Rectangle';\n                break;\n            case 'Polyline':\n                shapeType = 'Line';\n                break;\n            case 'Arrow':\n                shapeType = 'LineWidthArrowHead';\n                break;\n        }\n        return shapeType;\n    };\n    ShapeAnnotation.prototype.getShapeType = function (shape) {\n        var shapeType;\n        switch (shape.shapeAnnotationType) {\n            case 'Line':\n                shapeType = 'Line';\n                break;\n            case 'Circle':\n                shapeType = 'Ellipse';\n                break;\n            case 'Square':\n                shapeType = 'Rectangle';\n                break;\n            case 'Polyline':\n                shapeType = 'Line';\n                break;\n            case 'Polygon':\n                shapeType = 'Polygon';\n                break;\n        }\n        // eslint-disable-next-line max-len\n        if ((shape.shapeAnnotationType === 'Line' || shape.shapeAnnotationType === 'Polyline') && (shape.lineHeadStart !== 'None' || shape.lineHeadEnd !== 'None')) {\n            shapeType = 'LineWidthArrowHead';\n        }\n        return shapeType;\n    };\n    ShapeAnnotation.prototype.getShapeAnnotType = function (shape) {\n        var shapeType;\n        switch (shape) {\n            case 'Line':\n            case 'LineWidthArrowHead':\n                shapeType = 'Line';\n                break;\n            case 'Rectangle':\n                shapeType = 'Square';\n                break;\n            case 'Ellipse':\n                shapeType = 'Circle';\n                break;\n            case 'Polygon':\n                shapeType = 'Polygon';\n                break;\n        }\n        return shapeType;\n    };\n    /**\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @private\n     */\n    // eslint-disable-next-line\n    ShapeAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, toolMoved) {\n        if (!isNullOrUndefined(annotationBase.formFieldAnnotationType) && annotationBase.formFieldAnnotationType !== \"\")\n            this.pdfViewer.annotationModule.isFormFieldShape = true;\n        else\n            this.pdfViewer.annotationModule.isFormFieldShape = false;\n        if (toolMoved) {\n            this.pdfViewerBase.updateDocumentEditedProperty(true);\n        }\n        var currentAnnotObject = null;\n        if (annotationBase) {\n            if (property === 'bounds') {\n                this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationModifiedDate(annotationBase, true);\n            }\n        }\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations != null && annotationBase) {\n            for (var i = 0; i < pageAnnotations.length; i++) {\n                if (annotationBase.id === pageAnnotations[i].id) {\n                    if (property === 'bounds') {\n                        if (pageAnnotations[i].shapeAnnotationType === 'Line') {\n                            pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        else if (pageAnnotations[i].shapeAnnotationType === 'Polygon') {\n                            pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        else {\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        if (pageAnnotations[i].enableShapeLabel === true && annotationBase.wrapper) {\n                            var labelTop = 0;\n                            var labelLeft = 0;\n                            var labelWidth = 0;\n                            var labelHeight = 24.6;\n                            var labelMaxWidth = 151;\n                            if (annotationBase.wrapper.bounds.width) {\n                                // eslint-disable-next-line max-len\n                                labelWidth = (annotationBase.wrapper.bounds.width / 2);\n                                labelWidth = (labelWidth > 0 && labelWidth < labelMaxWidth) ? labelWidth : labelMaxWidth;\n                            }\n                            if (annotationBase.wrapper.bounds.left) {\n                                // eslint-disable-next-line max-len\n                                labelLeft = (annotationBase.wrapper.bounds.left + (annotationBase.wrapper.bounds.width / 2) - (labelWidth / 2));\n                            }\n                            if (annotationBase.wrapper.bounds.top) {\n                                // eslint-disable-next-line max-len\n                                labelTop = (annotationBase.wrapper.bounds.top + (annotationBase.wrapper.bounds.height / 2) - 12.3);\n                            }\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].labelBounds = { left: labelLeft, top: labelTop, width: labelWidth, height: labelHeight, right: 0, bottom: 0 };\n                        }\n                    }\n                    else if (property === 'fill') {\n                        pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n                    }\n                    else if (property === 'stroke') {\n                        pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n                    }\n                    else if (property === 'opacity') {\n                        pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n                    }\n                    else if (property === 'thickness') {\n                        pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n                    }\n                    else if (property === 'dashArray') {\n                        pageAnnotations[i].borderDashArray = annotationBase.wrapper.children[0].style.strokeDashArray;\n                        pageAnnotations[i].borderStyle = annotationBase.borderStyle;\n                    }\n                    else if (property === 'startArrow') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].lineHeadStart = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.sourceDecoraterShapes);\n                    }\n                    else if (property === 'endArrow') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].lineHeadEnd = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.taregetDecoraterShapes);\n                    }\n                    else if (property === 'notes') {\n                        pageAnnotations[i].note = annotationBase.notes;\n                    }\n                    else if (property === 'delete') {\n                        currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n                        break;\n                    }\n                    else if (property === 'labelContent') {\n                        pageAnnotations[i].note = annotationBase.labelContent;\n                        pageAnnotations[i].labelContent = annotationBase.labelContent;\n                        break;\n                    }\n                    else if (property === 'fontColor') {\n                        pageAnnotations[i].fontColor = annotationBase.fontColor;\n                    }\n                    else if (property === 'fontSize') {\n                        pageAnnotations[i].fontSize = annotationBase.fontSize;\n                    }\n                    pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                    this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n                }\n            }\n            this.manageAnnotations(pageAnnotations, pageNumber);\n        }\n        return currentAnnotObject;\n    };\n    /**\n     * @param pageNumber\n     * @param annotationBase\n     * @param pageNumber\n     * @param annotationBase\n     * @private\n     */\n    ShapeAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations) {\n            pageAnnotations.push(annotationBase);\n        }\n        this.manageAnnotations(pageAnnotations, pageNumber);\n    };\n    /**\n     * @private\n     */\n    ShapeAnnotation.prototype.saveShapeAnnotations = function () {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'];\n        }\n        // eslint-disable-next-line\n        var annotations = new Array();\n        for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n            annotations[j] = [];\n        }\n        if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n            var annotationCollection = JSON.parse(storeObject);\n            for (var i = 0; i < annotationCollection.length; i++) {\n                var newArray = [];\n                var pageAnnotationObject = annotationCollection[i];\n                if (pageAnnotationObject) {\n                    for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n                        if (!this.pdfViewerBase.checkFormFieldCollection(pageAnnotationObject.annotations[z].id)) {\n                            this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n                            if (this.pdfViewerBase.isJsonExported) {\n                                if (pageAnnotationObject.annotations[z].isAnnotationRotated) {\n                                    pageAnnotationObject.annotations[z].bounds = this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex);\n                                    pageAnnotationObject.annotations[z].vertexPoints = this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex);\n                                }\n                                else {\n                                    var pageDetails = this.pdfViewerBase.pageSize[pageAnnotationObject.pageIndex];\n                                    if (pageDetails) {\n                                        pageAnnotationObject.annotations[z].annotationRotation = pageDetails.rotation;\n                                        ;\n                                    }\n                                }\n                            }\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n                            var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n                            pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n                            var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n                            pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex));\n                            if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n                                // eslint-disable-next-line max-len\n                                pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n                            }\n                            if (pageAnnotationObject.annotations[z].enableShapeLabel === true) {\n                                // eslint-disable-next-line max-len\n                                pageAnnotationObject.annotations[z].labelBounds = JSON.stringify(this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(JSON.parse(pageAnnotationObject.annotations[z].bounds)));\n                                var labelFillColorString = pageAnnotationObject.annotations[z].labelFillColor;\n                                pageAnnotationObject.annotations[z].labelFillColor = JSON.stringify(this.getRgbCode(labelFillColorString));\n                                var labelBorderColorString = pageAnnotationObject.annotations[z].labelBorderColor;\n                                pageAnnotationObject.annotations[z].labelBorderColor = JSON.stringify(this.getRgbCode(labelBorderColorString));\n                                pageAnnotationObject.annotations[z].labelSettings.fillColor = labelFillColorString;\n                                var fontColorString = pageAnnotationObject.annotations[z].labelSettings.fontColor;\n                                pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n                            }\n                        }\n                        else {\n                            pageAnnotationObject.annotations[z] = \"\";\n                        }\n                    }\n                    pageAnnotationObject.annotations = pageAnnotationObject.annotations.filter(function (item) { return item; });\n                    newArray = pageAnnotationObject.annotations;\n                }\n                annotations[pageAnnotationObject.pageIndex] = newArray;\n            }\n        }\n        return JSON.stringify(annotations);\n    };\n    ShapeAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            if (!this.pdfViewerBase.isStorageExceed) {\n                window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_shape');\n            }\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n            if (annotObject[index]) {\n                annotObject[index].annotations = pageAnnotations;\n            }\n            var annotationStringified = JSON.stringify(annotObject);\n            if (this.pdfViewerBase.isStorageExceed) {\n                this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'] = annotationStringified;\n            }\n            else {\n                window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_shape', annotationStringified);\n            }\n        }\n    };\n    ShapeAnnotation.prototype.createAnnotationObject = function (annotationModel) {\n        var bound;\n        var labelBound;\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        if (!annotationModel.formFieldAnnotationType) {\n            // eslint-disable-next-line max-len\n            var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('shape', (annotationModel.pageIndex + 1), annotationModel.shapeAnnotationType);\n            if (commentsDivid) {\n                document.getElementById(commentsDivid).id = annotationName;\n            }\n        }\n        annotationModel.annotName = annotationName;\n        if (annotationModel.wrapper.bounds) {\n            bound = {\n                // eslint-disable-next-line max-len\n                left: annotationModel.wrapper.bounds.x, top: annotationModel.wrapper.bounds.y, height: annotationModel.wrapper.bounds.height, width: annotationModel.wrapper.bounds.width,\n                right: annotationModel.wrapper.bounds.right, bottom: annotationModel.wrapper.bounds.bottom\n            };\n            labelBound = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationModel.wrapper.bounds);\n        }\n        else {\n            bound = { left: 0, top: 0, height: 0, width: 0, right: 0, bottom: 0 };\n            labelBound = { left: 0, top: 0, height: 0, width: 0, right: 0, bottom: 0 };\n        }\n        if (annotationModel.subject === 'Line' && annotationModel.shapeAnnotationType === 'Polygon') {\n            annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', 'Polygon');\n        }\n        else {\n            annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationModel.subject);\n        }\n        this.pdfViewer.annotation.stickyNotesAnnotationModule.addTextToComments(annotationName, annotationModel.notes);\n        // eslint-disable-next-line radix\n        var borderDashArray = parseInt(annotationModel.borderDashArray);\n        borderDashArray = isNaN(borderDashArray) ? 0 : borderDashArray;\n        // eslint-disable-next-line\n        var annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(annotationModel, true);\n        annotationModel.isPrint = annotationSettings.isPrint;\n        var setting = this.pdfViewer.shapeLabelSettings;\n        var labelSettings = { borderColor: annotationModel.strokeColor, fillColor: annotationModel.fillColor, fontColor: annotationModel.fontColor,\n            fontSize: annotationModel.fontSize, labelContent: annotationModel.labelContent, labelHeight: setting.labelHeight, labelWidth: setting.labelMaxWidth, opacity: annotationModel.opacity\n        };\n        return {\n            // eslint-disable-next-line max-len\n            id: annotationModel.id, shapeAnnotationType: this.getShapeAnnotType(annotationModel.shapeAnnotationType), author: annotationModel.author, allowedInteractions: this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotationModel), subject: annotationModel.subject, note: annotationModel.notes,\n            strokeColor: annotationModel.strokeColor, annotName: annotationName, comments: [], review: { state: '', stateModel: '', modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(), author: annotationModel.author },\n            fillColor: annotationModel.fillColor, opacity: annotationModel.opacity, thickness: annotationModel.thickness, pageNumber: annotationModel.pageIndex,\n            // eslint-disable-next-line max-len\n            borderStyle: annotationModel.borderStyle, borderDashArray: borderDashArray, bounds: bound, modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n            rotateAngle: 'RotateAngle' + annotationModel.rotateAngle, isCloudShape: annotationModel.isCloudShape, cloudIntensity: annotationModel.cloudIntensity,\n            // eslint-disable-next-line max-len\n            vertexPoints: annotationModel.vertexPoints, lineHeadStart: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.sourceDecoraterShapes),\n            lineHeadEnd: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.taregetDecoraterShapes), rectangleDifference: [], isLocked: annotationSettings.isLock,\n            // eslint-disable-next-line max-len\n            labelContent: annotationModel.labelContent, enableShapeLabel: annotationModel.enableShapeLabel, labelFillColor: annotationModel.labelFillColor,\n            fontColor: annotationModel.fontColor, labelBorderColor: annotationModel.labelBorderColor, fontSize: annotationModel.fontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: labelBound, annotationSelectorSettings: this.getSelector(annotationModel.shapeAnnotationType, annotationModel.subject), labelSettings: labelSettings, annotationSettings: annotationSettings,\n            customData: this.pdfViewer.annotation.getShapeData(annotationModel.shapeAnnotationType, annotationModel.subject), isPrint: annotationModel.isPrint, isCommentLock: annotationModel.isCommentLock, isAnnotationRotated: false\n        };\n    };\n    ShapeAnnotation.prototype.getSelector = function (type, subject) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if (type === 'Line' && subject !== 'Arrow' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.lineSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'LineWidthArrowHead' || subject === 'Arrow') && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.arrowSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Rectangle' || type === 'Square') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.rectangleSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Ellipse' || type === 'Circle') && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.circleSettings.annotationSelectorSettings;\n        }\n        else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.polygonSettings.annotationSelectorSettings;\n        }\n        return selector;\n    };\n    // eslint-disable-next-line\n    ShapeAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n        // eslint-disable-next-line\n        var annotationCollection;\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n            if (annotObject[index]) {\n                annotationCollection = annotObject[index].annotations;\n            }\n            else {\n                annotationCollection = shapeAnnotations;\n            }\n        }\n        else {\n            annotationCollection = shapeAnnotations;\n        }\n        return annotationCollection;\n    };\n    // eslint-disable-next-line\n    ShapeAnnotation.prototype.getRgbCode = function (colorString) {\n        if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n            colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n        }\n        var stringArray = colorString.split(',');\n        if (isNullOrUndefined(stringArray[1])) {\n            colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n            stringArray = colorString.split(',');\n        }\n        // eslint-disable-next-line radix\n        var r = parseInt(stringArray[0].split('(')[1]);\n        // eslint-disable-next-line radix\n        var g = parseInt(stringArray[1]);\n        // eslint-disable-next-line radix\n        var b = parseInt(stringArray[2]);\n        // eslint-disable-next-line radix\n        var a = parseFloat(stringArray[3]);\n        return { r: r, g: g, b: b, a: a };\n    };\n    /**\n     * @param annotation\n     * @param pageNumber\n     * @param annotation\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    ShapeAnnotation.prototype.saveImportedShapeAnnotations = function (annotation, pageNumber) {\n        var annotationObject = null;\n        var vertexPoints = null;\n        annotation.Author = this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotation.Subject);\n        if (annotation.VertexPoints) {\n            vertexPoints = [];\n            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                vertexPoints.push(point);\n            }\n        }\n        if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n            // eslint-disable-next-line max-len\n            annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n            // eslint-disable-next-line max-len\n            annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n            annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n            annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n            annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n            annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n        }\n        // eslint-disable-next-line max-len\n        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n        // eslint-disable-next-line max-len\n        annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n        // eslint-disable-next-line max-len\n        annotationObject = {\n            id: 'shape', shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, pageNumber: pageNumber,\n            // eslint-disable-next-line max-len\n            note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n            borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n            // eslint-disable-next-line max-len\n            cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author), review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author }, annotName: annotation.AnnotName,\n            bounds: { left: annotation.Bounds.X, top: annotation.Bounds.Y, width: annotation.Bounds.Width, height: annotation.Bounds.Height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n            labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n            labelBorderColor: annotation.LabelBorderColor, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: annotation.LabelBounds, annotationSelectorSettings: this.getSettings(annotation), labelSettings: annotation.LabelSettings, annotationSettings: annotation.AnnotationSettings,\n            customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isAnnotationRotated: false\n        };\n        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape');\n    };\n    /**\n     * @param annotation\n     * @param pageNumber\n     * @param annotation\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    ShapeAnnotation.prototype.updateShapeAnnotationCollections = function (annotation, pageNumber) {\n        // eslint-disable-next-line\n        var annotationObject = null;\n        var vertexPoints = null;\n        if (annotation.VertexPoints) {\n            vertexPoints = [];\n            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                vertexPoints.push(point);\n            }\n        }\n        if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n            // eslint-disable-next-line max-len\n            annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n            // eslint-disable-next-line max-len\n            annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n            annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n            annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n            annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n            var settings = this.pdfViewer.shapeLabelSettings;\n            var labelSettings = { borderColor: annotation.StrokeColor, fillColor: annotation.FillColor, fontColor: annotation.FontColor,\n                fontSize: annotation.FontSize, labelContent: annotation.LabelContent, labelHeight: settings.labelHeight, labelWidth: settings.labelWidth, opacity: annotation.Opacity\n            };\n            annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : labelSettings;\n        }\n        // eslint-disable-next-line max-len\n        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n        if (annotation.IsLocked) {\n            annotation.AnnotationSettings.isLock = annotation.IsLocked;\n        }\n        // eslint-disable-next-line max-len\n        annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n        // eslint-disable-next-line max-len\n        annotationObject = {\n            id: 'shape', shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject,\n            // eslint-disable-next-line max-len\n            note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n            borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n            // eslint-disable-next-line max-len\n            cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author), review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author }, annotationId: annotation.AnnotName,\n            bounds: { left: annotation.Bounds.X, top: annotation.Bounds.Y, width: annotation.Bounds.Width, height: annotation.Bounds.Height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n            labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n            labelBorderColor: annotation.LabelBorderColor, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: annotation.LabelBounds, pageNumber: pageNumber, labelSettings: annotation.LabelSettings, annotationSettings: annotation.AnnotationSettings,\n            customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock\n        };\n        return annotationObject;\n    };\n    /**\n     * This method used to add annotations with using program.\n     *\n     * @param annotationType - It describes the annotation type\n     * @param annotationObject - It describes type of annotation object\n     * @param offset - It describes about the annotation bounds or location\n     * @returns Object\n     * @private\n     */\n    ShapeAnnotation.prototype.updateAddAnnotationDetails = function (annotationType, annotationObject, offset) {\n        //Creating new object if annotationObject is null\n        if (!annotationObject) {\n            annotationObject = { offset: { x: 10, y: 10 }, pageNumber: 0, width: undefined, height: undefined };\n            offset = annotationObject.offset;\n        }\n        else if (!annotationObject.offset)\n            offset = { x: 10, y: 10 };\n        else\n            offset = annotationObject.offset;\n        //Initialize the annotation settings\n        var annotationSelectorSettings = null;\n        var allowedInteractions = null;\n        var annotationSettings = null;\n        var shapeAnnotationType = '';\n        var isArrow = false;\n        var vertexPoints = null;\n        //Creating the CurrentDate and Annotation name\n        var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        if (annotationType == 'Line') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.lineSettings.annotationSelectorSettings ? this.pdfViewer.lineSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.lineSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n            allowedInteractions = this.pdfViewer.lineSettings.allowedInteractions ? this.pdfViewer.lineSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            shapeAnnotationType = 'Line';\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y }, { x: offset.x + 100, y: offset.y }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Arrow') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.arrowSettings.annotationSelectorSettings ? this.pdfViewer.arrowSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.arrowSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n            allowedInteractions = this.pdfViewer.arrowSettings.allowedInteractions ? this.pdfViewer.arrowSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            shapeAnnotationType = 'Line';\n            isArrow = true;\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y }, { x: offset.x + 100, y: offset.y }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Rectangle') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.rectangleSettings.annotationSelectorSettings ? this.pdfViewer.rectangleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.rectangleSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n            allowedInteractions = this.pdfViewer.rectangleSettings.allowedInteractions ? this.pdfViewer.rectangleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            shapeAnnotationType = 'Square';\n            annotationObject.width = annotationObject.width ? annotationObject.width : 150;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 75;\n        }\n        else if (annotationType == 'Circle') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.circleSettings.annotationSelectorSettings ? this.pdfViewer.circleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.circleSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n            allowedInteractions = this.pdfViewer.circleSettings.allowedInteractions ? this.pdfViewer.circleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            shapeAnnotationType = 'Circle';\n            annotationObject.width = annotationObject.width ? annotationObject.width : 100;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 90;\n        }\n        else if (annotationType == 'Polygon') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.polygonSettings.annotationSelectorSettings ? this.pdfViewer.polygonSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.polygonSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('shape', annotationType);\n            allowedInteractions = this.pdfViewer.polygonSettings.allowedInteractions ? this.pdfViewer.polygonSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            shapeAnnotationType = 'Polygon';\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y }, { x: offset.x + 42, y: offset.y - 29 }, { x: offset.x + 89, y: offset.y - 1 }, { x: offset.x + 78, y: offset.y + 42 }, { x: offset.x + 11, y: offset.y + 42 }, { x: offset.x, y: offset.y }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : annotationSettings.isLock;\n        annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : annotationSettings.minHeight;\n        annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : annotationSettings.minWidth;\n        annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : annotationSettings.maxWidth;\n        annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : annotationSettings.maxHeight;\n        //Converting points model into vertex property\n        if (vertexPoints)\n            vertexPoints = this.pdfViewer.annotation.getVertexPointsXY(vertexPoints);\n        //Creating Annotation objects with it's proper properties\n        var shapeAnnotation = [];\n        var shape = {\n            AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n            AnnotName: annotationName,\n            AnnotType: 'shape',\n            AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n            AnnotationSettings: annotationSettings,\n            Author: annotationObject.author ? annotationObject.author : 'Guest',\n            BorderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray : 0,\n            BorderStyle: 'Solid',\n            Bounds: { X: offset.x, Y: offset.y, Width: annotationObject.width, Height: annotationObject.height, Left: offset.x, Top: offset.y, Location: { X: offset.x, Y: offset.y }, Size: { Height: annotationObject.height, IsEmpty: false, Width: annotationObject.width } },\n            CloudIntensity: 0,\n            Comments: null,\n            CustomData: annotationObject.customData ? annotationObject.customData : null,\n            CreatedDate: currentDateString,\n            EnableShapeLabel: false,\n            ExistingCustomData: null,\n            FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n            FontColor: null,\n            FontSize: 0,\n            IsCloudShape: false,\n            IsCommentLock: false,\n            IsLocked: annotationObject.isLock ? annotationObject.isLock : false,\n            IsPrint: annotationObject.isPrint ? annotationObject.isPrint : true,\n            LabelBorderColor: null,\n            LabelBounds: { X: 0, Y: 0, Width: 0, Height: 0 },\n            LabelContent: null,\n            LabelFillColor: null,\n            LabelSettings: null,\n            LineHeadEnd: annotationObject.lineHeadStartStyle ? annotationObject.lineHeadStartStyle : isArrow ? 'ClosedArrow' : 'None',\n            LineHeadStart: annotationObject.lineHeadEndStyle ? annotationObject.lineHeadEndStyle : isArrow ? 'ClosedArrow' : 'None',\n            ModifiedDate: '',\n            Note: '',\n            Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n            RectangleDifference: null,\n            RotateAngle: 'RotateAngle0',\n            ShapeAnnotationType: shapeAnnotationType,\n            State: '',\n            StateModel: '',\n            StrokeColor: annotationObject.strokeColor ? annotationObject.strokeColor : '#ff0000',\n            Subject: annotationObject.subject ? annotationObject.subject : annotationType.toString(),\n            Thickness: annotationObject.thickness ? annotationObject.thickness : 1,\n            VertexPoints: vertexPoints\n        };\n        //Adding the annotation object to an array and return it\n        shapeAnnotation[0] = shape;\n        return { shapeAnnotation: shapeAnnotation };\n    };\n    return ShapeAnnotation;\n}());\nexport { ShapeAnnotation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}