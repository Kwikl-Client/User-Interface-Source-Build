{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */function () {\n  /**\n   * Initializes a new instance of the `PdfBookmarkBase` class.\n   *\n   * @private\n   * @param {_PdfDictionary} dictionary Outline dictionary.\n   * @param {_PdfCrossReference} crossReference Cross reference.\n   *\n   */\n  function PdfBookmarkBase(dictionary, crossReference) {\n    this._bookMarkList = [];\n    this._isExpanded = false;\n    this._isLoadedBookmark = false;\n    this._dictionary = dictionary;\n    this._crossReference = crossReference;\n  }\n  Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n    /**\n     * Gets the bookmark count (Read only).\n     *\n     * @returns {number} Number of bookmarks.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark count\n     * let bookmarkCount: number = bookmarks.count;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n        this._reproduceTree();\n      }\n      return this._bookMarkList.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Gets the `PdfBookmark` at the specified index.\n   *\n   * @param {number} index Bookmark index.\n   * @returns {PdfBookmark} Bookmark at the specified index.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Get bookmarks\n   * let bookmarks: PdfBookmarkBase = document.bookmarks;\n   * // Get bookmark at the specified index\n   * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfBookmarkBase.prototype.at = function (index) {\n    var bookmark;\n    if (index < 0 || index >= this.count) {\n      throw Error('Index out of range.');\n    }\n    if (this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n      bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n    }\n    return bookmark;\n  };\n  /**\n   * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n   *\n   * @param {PdfBookmark} outline Bookmark.\n   * @returns {boolean} whether the bookmark is present or not.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Get the bookmarks\n   * let bookmarks: PdfBookmarkBase = document.bookmarks;\n   * // Get the bookmark at the specified index\n   * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n   * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n   * let isPresent: boolean = bookmarks.contains(bookmark);\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfBookmarkBase.prototype.contains = function (outline) {\n    return this._bookMarkList.indexOf(outline) !== -1;\n  };\n  PdfBookmarkBase.prototype._reproduceTree = function () {\n    var bookmark = this._getFirstBookmark(this);\n    var isBookmark = bookmark ? true : false;\n    while (isBookmark && bookmark._dictionary) {\n      this._bookMarkList.push(bookmark);\n      bookmark = bookmark._next;\n      isBookmark = bookmark ? true : false;\n    }\n  };\n  PdfBookmarkBase.prototype._getFirstBookmark = function (bookmarkBase) {\n    var bookmarkBaseDictionary = bookmarkBase._dictionary;\n    var bookMark;\n    if (bookmarkBaseDictionary && bookmarkBaseDictionary.has('First')) {\n      var bookMarkDictionary = bookmarkBaseDictionary.get('First');\n      if (bookMarkDictionary) {\n        bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n      }\n    }\n    return bookMark;\n  };\n  return PdfBookmarkBase;\n}();\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */function (_super) {\n  __extends(PdfBookmark, _super);\n  /**\n   * Initializes a new instance of the `PdfBookmark` class.\n   *\n   * @private\n   * @param {_PdfDictionary} dictionary Bookmark dictionary.\n   * @param {_PdfCrossReference} crossReference Cross reference.\n   *\n   */\n  function PdfBookmark(dictionary, crossReference) {\n    var _this = _super.call(this, dictionary, crossReference) || this;\n    if (!_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n      var actionDictionary = _this._dictionary.get('A');\n      if (actionDictionary && actionDictionary.has('D')) {\n        var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n        _this._dictionary.update('Dest', destinationArray);\n      }\n    }\n    _this._isLoadedBookmark = true;\n    return _this;\n  }\n  Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n    /**\n     * Gets the destination (Read only).\n     *\n     * @returns {PdfDestination} Page destination.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the destination\n     * let destination: PdfDestination = bookmark.destination;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      var value;\n      var namedDestination = this._obtainNamedDestination();\n      if (namedDestination === null || typeof namedDestination === 'undefined') {\n        value = this._obtainDestination();\n      }\n      return value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n    /**\n     * Gets the named destination (Read only).\n     *\n     * @returns {PdfNamedDestination} Named destination.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the named destination\n     * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n        this._namedDestination = this._obtainNamedDestination();\n      }\n      return this._namedDestination;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBookmark.prototype, \"title\", {\n    /**\n     * Gets the bookmark title (Read only).\n     *\n     * @returns {string} Bookmark title.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the bookmark title\n     * let bookmarkTitle: string = bookmark.title;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._title === null || typeof this._title === 'undefined') {\n        this._title = this._obtainTitle();\n      }\n      return this._title;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBookmark.prototype, \"color\", {\n    /**\n     * Gets the bookmark color (Read only).\n     *\n     * @returns {number[]} Bookmark color.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the bookmark color\n     * let color: number[] = bookmark.color;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._color === null || typeof this._color === 'undefined') {\n        if (this._dictionary.has('C')) {\n          this._color = _parseColor(this._dictionary.getArray('C'));\n        }\n      }\n      return this._color ? this._color : [0, 0, 0];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n    /**\n     * Gets the textStyle (Read only).\n     *\n     * @returns {PdfTextStyle} Text style.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the textStyle\n     * let textStyle: PdfTextStyle = bookmark.textStyle;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n        this._textStyle = this._obtainTextStyle();\n      }\n      return this._textStyle;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBookmark.prototype, \"isExpanded\", {\n    /**\n     * Gets the boolean flag indicating whether the bookmark is expanded or not (Read only).\n     *\n     * @returns {boolean} whether the bookmark is expanded or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether the bookmark is expanded or not\n     * let isExpanded: boolean = bookmark.isExpanded;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Count')) {\n        var value = this._dictionary.get('Count');\n        if (value >= 0) {\n          return true;\n        }\n      }\n      return this._isExpanded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n    get: function () {\n      var nextBookmark;\n      if (this._dictionary.has('Next')) {\n        var dictionary = this._dictionary.get('Next');\n        if (dictionary) {\n          nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n        }\n      }\n      return nextBookmark;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfBookmark.prototype._obtainTextStyle = function () {\n    var style = PdfTextStyle.regular;\n    if (this._dictionary.has('F')) {\n      var flag = this._dictionary.get('F');\n      var flagValue = 0;\n      if (typeof flag !== 'undefined' && flag !== null) {\n        flagValue = flag;\n      }\n      style |= flagValue;\n    }\n    return style;\n  };\n  PdfBookmark.prototype._obtainTitle = function () {\n    var value = '';\n    if (this._dictionary.has('Title')) {\n      value = this._dictionary.get('Title');\n    }\n    return value;\n  };\n  PdfBookmark.prototype._obtainNamedDestination = function () {\n    var document = this._crossReference._document;\n    var destinationCollection;\n    if (document) {\n      destinationCollection = document._destinationCollection;\n    }\n    var destination; // eslint-disable-line\n    var namedDestination;\n    if (destinationCollection) {\n      var dictionary = this._dictionary;\n      if (dictionary.has('A')) {\n        var action = dictionary.get('A');\n        if (action.has('D')) {\n          destination = action.get('D');\n        }\n      } else if (dictionary.has('Dest')) {\n        destination = dictionary.get('Dest');\n      }\n      if (destination) {\n        var value = void 0;\n        if (destination instanceof _PdfName) {\n          value = destination.name;\n        } else if (typeof destination === 'string') {\n          value = destination;\n        }\n        if (value) {\n          var namedDestinations = destinationCollection._namedDestinations;\n          for (var i = 0; i < namedDestinations.length; i++) {\n            namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n            if (namedDestination._title === value) {\n              destination = namedDestination;\n              break;\n            }\n          }\n        }\n      }\n    }\n    return namedDestination;\n  };\n  PdfBookmark.prototype._obtainDestination = function () {\n    var bookMarkDictionary = this._dictionary;\n    var page;\n    if (bookMarkDictionary && bookMarkDictionary.has('Dest')) {\n      var destinationArray = bookMarkDictionary.getArray('Dest'); // eslint-disable-line\n      var loadedDocument = this._crossReference._document;\n      var mode = void 0;\n      if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n        var value = destinationArray[0]; // eslint-disable-line\n        var left = void 0;\n        var height = void 0;\n        var bottom = void 0;\n        var right = void 0;\n        var zoom = void 0;\n        if (typeof value === 'number') {\n          var pageNumber = destinationArray[0];\n          if (pageNumber >= 0) {\n            var document_1 = this._crossReference._document;\n            if (document_1 && document_1.pageCount > pageNumber) {\n              page = document_1.getPage(pageNumber);\n            }\n            if (destinationArray.length > 1) {\n              mode = destinationArray[1];\n            }\n            if (mode && mode.name === 'XYZ') {\n              if (destinationArray.length > 2) {\n                left = destinationArray[2];\n              }\n              if (destinationArray.length > 3) {\n                height = destinationArray[3];\n              }\n              if (destinationArray.length > 4) {\n                zoom = destinationArray[4];\n              }\n              if (page) {\n                var topValue = height === null || typeof height === 'undefined' ? 0 : page.size[1] - height;\n                var leftValue = left === null || typeof left === 'undefined' ? 0 : left;\n                if (page.rotation !== PdfRotationAngle.angle0) {\n                  _checkRotation(page, height, left);\n                }\n                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                this._destination._index = pageNumber;\n                this._destination.zoom = typeof zoom !== 'undefined' && zoom !== null ? zoom : 0;\n                if (left === null || height === null || zoom === null || typeof left === 'undefined' || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                  this._destination._setValidation(false);\n                }\n              }\n            }\n          }\n        }\n        if (value instanceof _PdfDictionary) {\n          var pageDictionary = value;\n          var index = void 0;\n          if (loadedDocument && pageDictionary) {\n            index = _getPageIndex(loadedDocument, pageDictionary);\n          }\n          if (typeof index !== 'undefined' && index !== null && index >= 0) {\n            page = loadedDocument.getPage(index);\n          }\n          if (destinationArray.length > 1) {\n            mode = destinationArray[1];\n          }\n          if (mode) {\n            if (mode.name === 'XYZ') {\n              if (destinationArray.length > 2) {\n                left = destinationArray[2];\n              }\n              if (destinationArray.length > 3) {\n                height = destinationArray[3];\n              }\n              if (destinationArray.length > 4) {\n                zoom = destinationArray[4];\n              }\n              if (page) {\n                var topValue = height === null || typeof height === 'undefined' ? 0 : page.size[1] - height;\n                var leftValue = left === null || typeof left === 'undefined' ? 0 : left;\n                if (page.rotation !== PdfRotationAngle.angle0) {\n                  topValue = _checkRotation(page, height, left);\n                }\n                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                this._destination._index = index;\n                this._destination.zoom = typeof zoom !== 'undefined' && zoom !== null ? zoom : 0;\n                if (left === null || height === null || zoom === null || typeof left === 'undefined' || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                  this._destination._setValidation(false);\n                }\n              }\n            } else {\n              if (mode.name === 'FitR') {\n                if (destinationArray.length > 2) {\n                  left = destinationArray[2];\n                }\n                if (destinationArray.length > 3) {\n                  bottom = destinationArray[3];\n                }\n                if (destinationArray.length > 4) {\n                  right = destinationArray[4];\n                }\n                if (destinationArray.length > 5) {\n                  height = destinationArray[5];\n                }\n                if (page) {\n                  left = left === null || typeof left === 'undefined' ? 0 : left;\n                  bottom = bottom === null || typeof bottom === 'undefined' ? 0 : bottom;\n                  height = height === null || typeof height === 'undefined' ? 0 : height;\n                  right = right === null || typeof right === 'undefined' ? 0 : right;\n                  this._destination = new PdfDestination(page, [left, bottom, right, height]);\n                  this._destination._index = index;\n                  this._destination.mode = PdfDestinationMode.fitR;\n                }\n              } else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                if (destinationArray.length >= 3) {\n                  height = destinationArray[2];\n                }\n                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                  page = loadedDocument.getPage(index);\n                }\n                if (page && page.size) {\n                  var topValue = height === null || typeof height === 'undefined' ? 0 : page.size[1] - height;\n                  this._destination = new PdfDestination(page, [0, topValue]);\n                  this._destination._index = index;\n                  this._destination.mode = PdfDestinationMode.fitH;\n                  if (height === null || typeof height === 'undefined') {\n                    this._destination._setValidation(false);\n                  }\n                }\n              } else {\n                if (page && mode.name === 'Fit') {\n                  this._destination = new PdfDestination(page);\n                  this._destination._index = index;\n                  this._destination.mode = PdfDestinationMode.fitToPage;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return this._destination;\n  };\n  return PdfBookmark;\n}(PdfBookmarkBase);\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */function () {\n  /**\n   * Initializes a new instance of the `PdfNamedDestination` class.\n   *\n   * @private\n   * @param {_PdfDictionary} dictionary Destination dictionary.\n   * @param {_PdfCrossReference} crossReference Cross reference.\n   *\n   */\n  function PdfNamedDestination(dictionary, crossReference) {\n    this._dictionary = dictionary;\n    this._crossReference = crossReference;\n  }\n  Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n    /**\n     * Gets the destination.\n     *\n     * @returns {PdfDestination} Page destination.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the named destination\n     * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n     * // Gets the destination\n     * let destination: PdfDestination = namedDestination.destination;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._destination;\n    },\n    /**\n     * Sets the destination.\n     *\n     * @param {PdfDestination} value destination.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the named destination\n     * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n     * // Set the destination\n     * namedDestination.destination = new PdfDestination(page, [100, 200]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value) {\n        value._parent = this;\n        this._destination = value;\n        this._destination._initializePrimitive();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n    /**\n     * Gets the title.\n     *\n     * @returns {string} title.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the named destination\n     * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n     * // Gets the title\n     * let title: string = namedDestination.title;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._title;\n    },\n    /**\n     * Sets the title.\n     *\n     * @param {string} value title.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Gets the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the named destination\n     * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n     * // Set the title\n     * namedDestination.title = 'Syncfusion';\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._title) {\n        this._title = value;\n        this._dictionary.update('Title', value);\n        this._dictionary._updated = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfNamedDestination;\n}();\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */function () {\n  function _PdfNamedDestinationCollection(dictionary, crossReference) {\n    this._namedDestinations = [];\n    if (dictionary) {\n      this._dictionary = dictionary;\n    }\n    if (crossReference) {\n      this._crossReference = crossReference;\n    }\n    if (dictionary && dictionary.has('Dests')) {\n      var destination = dictionary.get('Dests');\n      if (destination) {\n        if (destination.has('Names')) {\n          this._addCollection(destination);\n        } else if (destination.has('Kids')) {\n          var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n          for (var i = 0; i < destinationArray.length; i++) {\n            var destinationElement = destinationArray[Number.parseInt(i.toString(), 10)];\n            this._addCollection(destinationElement);\n          }\n        }\n      }\n    }\n  }\n  _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n    var elements = destination.getRaw('Names'); // eslint-disable-line\n    var ref; // eslint-disable-line\n    var dictionary;\n    if (elements instanceof _PdfReference) {\n      ref = this._crossReference._fetch(elements);\n    }\n    if (ref && Array.isArray(ref) && ref.length > 0) {\n      elements = ref;\n    }\n    if (elements && Array.isArray(elements) && elements.length > 0) {\n      for (var i = 1; i < elements.length; i = i + 2) {\n        var reference = elements[i]; // eslint-disable-line\n        if (reference instanceof _PdfReference) {\n          var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n          if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n            dictionary = new _PdfDictionary();\n            dictionary.update('D', destinationArray);\n          } else {\n            dictionary = this._crossReference._fetch(reference);\n          }\n        } else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n          dictionary = new _PdfDictionary();\n          dictionary.update('D', reference);\n        }\n        if (dictionary) {\n          var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n          var value = elements[i - 1];\n          var destinationObject = void 0;\n          var destinationArray = void 0; // eslint-disable-line\n          if (value) {\n            namedDestination._title = value;\n            if (dictionary.has('D')) {\n              destinationArray = dictionary.get('D');\n              destinationObject = new PdfDestination();\n              var reference_1 = destinationArray[0];\n              if (destinationArray && destinationArray[0] instanceof _PdfReference) {\n                var pageDictionary = this._crossReference._fetch(reference_1);\n                var loadedDocument = this._crossReference._document;\n                var index = void 0;\n                if (loadedDocument && pageDictionary) {\n                  index = _getPageIndex(loadedDocument, pageDictionary);\n                  if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                    destinationObject._index = index;\n                    destinationObject.page = loadedDocument.getPage(index);\n                  }\n                }\n              }\n            }\n          }\n          if (destinationArray[1] instanceof _PdfName) {\n            var left = void 0;\n            var height = void 0;\n            var zoom = void 0;\n            var mode = destinationArray[1].name;\n            var page = destinationObject.page;\n            switch (mode) {\n              case 'Fit':\n                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                break;\n              case 'XYZ':\n                destinationObject._destinationMode = PdfDestinationMode.location;\n                if (destinationArray.length > 2) {\n                  left = destinationArray[2];\n                }\n                if (destinationArray.length > 3) {\n                  height = destinationArray[3];\n                }\n                if (destinationArray.length > 4) {\n                  zoom = destinationArray[4];\n                }\n                if (page) {\n                  var size = page.size;\n                  var topValue = height === null || typeof height === 'undefined' ? 0 : size[1] - height;\n                  var leftValue = left === null || typeof left === 'undefined' ? 0 : left;\n                  destinationObject._location = [leftValue, topValue];\n                  if (page.rotation !== PdfRotationAngle.angle0) {\n                    topValue = _checkRotation(page, height, left);\n                  }\n                  destinationObject._zoom = typeof zoom !== 'undefined' && zoom !== null ? zoom : 0;\n                  if (left === null || height === null || zoom === null || typeof left === 'undefined' || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                    destinationObject._isValid = false;\n                  }\n                }\n                break;\n              case 'FitH':\n              case 'FitBH':\n                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                if (destinationArray.length >= 3) {\n                  height = destinationArray[2];\n                }\n                if (page) {\n                  var size = page.size;\n                  var topValue = height === null || typeof height === 'undefined' ? 0 : size[1] - height;\n                  destinationObject._location = [0, topValue];\n                }\n                if (height === null || typeof height === 'undefined') {\n                  destinationObject._isValid = false;\n                }\n                break;\n              case 'FitR':\n                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                break;\n            }\n          }\n          destinationObject._parent = namedDestination;\n          namedDestination._destination = destinationObject;\n          this._namedDestinations.push(namedDestination);\n        }\n      }\n    }\n  };\n  return _PdfNamedDestinationCollection;\n}();\nexport { _PdfNamedDestinationCollection };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfDestinationMode","PdfRotationAngle","PdfTextStyle","PdfDestination","_PdfDictionary","_PdfName","_PdfReference","_checkRotation","_getPageIndex","_parseColor","PdfBookmarkBase","dictionary","crossReference","_bookMarkList","_isExpanded","_isLoadedBookmark","_dictionary","_crossReference","defineProperty","get","length","_reproduceTree","enumerable","configurable","at","index","bookmark","count","Error","Number","parseInt","toString","contains","outline","indexOf","_getFirstBookmark","isBookmark","push","_next","bookmarkBase","bookmarkBaseDictionary","bookMark","has","bookMarkDictionary","PdfBookmark","_super","_this","call","actionDictionary","destinationArray","getRaw","update","value","namedDestination","_obtainNamedDestination","_obtainDestination","_namedDestination","_title","_obtainTitle","_color","getArray","_textStyle","_obtainTextStyle","nextBookmark","style","regular","flag","flagValue","document","_document","destinationCollection","_destinationCollection","destination","action","name","namedDestinations","_namedDestinations","i","page","loadedDocument","mode","isArray","left","height","bottom","right","zoom","pageNumber","document_1","pageCount","getPage","topValue","size","leftValue","rotation","angle0","_destination","_index","_setValidation","pageDictionary","fitR","fitH","fitToPage","PdfNamedDestination","set","_parent","_initializePrimitive","_updated","_PdfNamedDestinationCollection","_addCollection","destinationElement","elements","ref","_fetch","reference","destinationObject","reference_1","_destinationMode","location","_location","_zoom","_isValid"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/pdf-outline.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var bookmark = this._getFirstBookmark(this);\n        var isBookmark = (bookmark) ? true : false;\n        while (isBookmark && bookmark._dictionary) {\n            this._bookMarkList.push(bookmark);\n            bookmark = bookmark._next;\n            isBookmark = (bookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getFirstBookmark = function (bookmarkBase) {\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has('First')) {\n            var bookMarkDictionary = bookmarkBaseDictionary.get('First');\n            if (bookMarkDictionary) {\n                bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (!_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination (Read only).\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var namedDestination = this._obtainNamedDestination();\n            if (namedDestination === null || typeof namedDestination === 'undefined') {\n                value = this._obtainDestination();\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination (Read only).\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title (Read only).\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                this._title = this._obtainTitle();\n            }\n            return this._title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color (Read only).\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the textStyle (Read only).\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not (Read only).\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Count')) {\n                var value = this._dictionary.get('Count');\n                if (value >= 0) {\n                    return true;\n                }\n            }\n            return this._isExpanded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary.has('Next')) {\n                var dictionary = this._dictionary.get('Next');\n                if (dictionary) {\n                    nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainTitle = function () {\n        var value = '';\n        if (this._dictionary.has('Title')) {\n            value = this._dictionary.get('Title');\n        }\n        return value;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary.has('A')) {\n                var action = dictionary.get('A');\n                if (action.has('D')) {\n                    destination = action.get('D');\n                }\n            }\n            else if (dictionary.has('Dest')) {\n                destination = dictionary.get('Dest');\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    PdfBookmark.prototype._obtainDestination = function () {\n        var bookMarkDictionary = this._dictionary;\n        var page;\n        if (bookMarkDictionary && bookMarkDictionary.has('Dest')) {\n            var destinationArray = bookMarkDictionary.getArray('Dest'); // eslint-disable-line\n            var loadedDocument = this._crossReference._document;\n            var mode = void 0;\n            if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                var value = destinationArray[0]; // eslint-disable-line\n                var left = void 0;\n                var height = void 0;\n                var bottom = void 0;\n                var right = void 0;\n                var zoom = void 0;\n                if (typeof value === 'number') {\n                    var pageNumber = destinationArray[0];\n                    if (pageNumber >= 0) {\n                        var document_1 = this._crossReference._document;\n                        if (document_1 && document_1.pageCount > pageNumber) {\n                            page = document_1.getPage(pageNumber);\n                        }\n                        if (destinationArray.length > 1) {\n                            mode = destinationArray[1];\n                        }\n                        if (mode && mode.name === 'XYZ') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                height = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                zoom = destinationArray[4];\n                            }\n                            if (page) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                if (page.rotation !== PdfRotationAngle.angle0) {\n                                    _checkRotation(page, height, left);\n                                }\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                this._destination._index = pageNumber;\n                                this._destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                    || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (value instanceof _PdfDictionary) {\n                    var pageDictionary = value;\n                    var index = void 0;\n                    if (loadedDocument && pageDictionary) {\n                        index = _getPageIndex(loadedDocument, pageDictionary);\n                    }\n                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                        page = loadedDocument.getPage(index);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode) {\n                        if (mode.name === 'XYZ') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                height = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                zoom = destinationArray[4];\n                            }\n                            if (page) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                if (page.rotation !== PdfRotationAngle.angle0) {\n                                    topValue = _checkRotation(page, height, left);\n                                }\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                this._destination._index = index;\n                                this._destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                    typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (mode.name === 'FitR') {\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    bottom = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    right = destinationArray[4];\n                                }\n                                if (destinationArray.length > 5) {\n                                    height = destinationArray[5];\n                                }\n                                if (page) {\n                                    left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                    height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                    right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                    this._destination = new PdfDestination(page, [left, bottom, right, height]);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitR;\n                                }\n                            }\n                            else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                    page = loadedDocument.getPage(index);\n                                }\n                                if (page && page.size) {\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                    this._destination = new PdfDestination(page, [0, topValue]);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitH;\n                                    if (height === null || typeof height === 'undefined') {\n                                        this._destination._setValidation(false);\n                                    }\n                                }\n                            }\n                            else {\n                                if (page && mode.name === 'Fit') {\n                                    this._destination = new PdfDestination(page);\n                                    this._destination._index = index;\n                                    this._destination.mode = PdfDestinationMode.fitToPage;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNamedDestination` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Destination dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfNamedDestination(dictionary, crossReference) {\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        var destinationElement = destinationArray[Number.parseInt(i.toString(), 10)];\n                        this._addCollection(destinationElement);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}