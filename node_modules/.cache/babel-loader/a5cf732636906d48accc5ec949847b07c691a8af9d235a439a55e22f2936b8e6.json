{"ast":null,"code":"import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */function () {\n  function _TrueTypeReader(fontData) {\n    this._int32Size = 4;\n    this._isFont = false;\n    this._isMacTtf = false;\n    this._isMacFont = false;\n    this._missedGlyphs = 0;\n    this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n    this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n    this._fontData = fontData;\n    this._initialize();\n  }\n  Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n    get: function () {\n      if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n        this._macintoshDictionary = new Dictionary();\n      }\n      return this._macintoshDictionary;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n    get: function () {\n      if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n        this._microsoftDictionary = new Dictionary();\n      }\n      return this._microsoftDictionary;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n    get: function () {\n      if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n        this._internalMacintoshGlyphs = new Dictionary();\n      }\n      return this._internalMacintoshGlyphs;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n    get: function () {\n      if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n        this._internalMicrosoftGlyphs = new Dictionary();\n      }\n      return this._internalMicrosoftGlyphs;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  _TrueTypeReader.prototype._initialize = function () {\n    if (typeof this._metrics === 'undefined' || this._metrics === null) {\n      this._metrics = new _TrueTypeMetrics();\n    }\n    this._readFontDictionary();\n    var nameTable = this._readNameTable();\n    var headTable = this._readHeadTable();\n    this._initializeFontName(nameTable);\n    this._metrics._macStyle = headTable._macStyle;\n  };\n  _TrueTypeReader.prototype._readFontDictionary = function () {\n    this._offset = 0;\n    this._check();\n    var table = this._readInt16(this._offset);\n    this._readInt16(this._offset);\n    this._readInt16(this._offset);\n    this._readInt16(this._offset);\n    if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n      this._tableDirectory = new Dictionary();\n    }\n    for (var i = 0; i < table; ++i) {\n      var table_1 = new _TrueTypeTableInfo();\n      var tableKey = this._readString(this._int32Size);\n      table_1._checksum = this._readInt32(this._offset);\n      table_1._offset = this._readInt32(this._offset);\n      table_1._length = this._readInt32(this._offset);\n      this._tableDirectory.setValue(tableKey, table_1);\n    }\n    this._lowestPosition = this._offset;\n    if (!this._isFont) {\n      this._fixOffsets();\n    }\n  };\n  _TrueTypeReader.prototype._fixOffsets = function () {\n    var minOffset = Number.MAX_VALUE;\n    var tableKeys = this._tableDirectory.keys();\n    for (var i = 0; i < tableKeys.length; i++) {\n      var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n      var offset = value._offset;\n      if (minOffset > offset) {\n        minOffset = offset;\n        if (minOffset <= this._lowestPosition) {\n          break;\n        }\n      }\n    }\n    var shift = minOffset - this._lowestPosition;\n    if (shift !== 0) {\n      var table = new Dictionary();\n      for (var i = 0; i < tableKeys.length; i++) {\n        var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n        value._offset -= shift;\n        table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n      }\n      this._tableDirectory = table;\n    }\n  };\n  _TrueTypeReader.prototype._check = function () {\n    var version = this._readInt32(this._offset);\n    this._isMacTtf = version === 0x74727565 ? true : false;\n    if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n      this._isFont = true;\n      this._offset = 0;\n      var fontTag = this._readString(4);\n      if (fontTag !== 'ttcf') {\n        throw new Error('Can not read TTF font data');\n      }\n      this._offset += 4;\n      var ttcIdentificationNumber = this._readInt32(this._offset);\n      if (ttcIdentificationNumber < 0) {\n        throw new Error('Can not read TTF font data');\n      }\n      this._offset = this._readInt32(this._offset);\n      version = this._readInt32(this._offset);\n    }\n    return version;\n  };\n  _TrueTypeReader.prototype._readNameTable = function () {\n    var tableInfo = this._getTable('name');\n    if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n      this._offset = tableInfo._offset;\n    }\n    var table = new _TrueTypeNameTable();\n    table._formatSelector = this._readUInt16(this._offset);\n    table._recordsCount = this._readUInt16(this._offset);\n    table._offset = this._readUInt16(this._offset);\n    table._nameRecords = [];\n    var recordSize = 12;\n    var position = this._offset;\n    for (var i = 0; i < table._recordsCount; i++) {\n      this._offset = position;\n      var record = new _TrueTypeNameRecord();\n      record._platformID = this._readUInt16(this._offset);\n      record._encodingID = this._readUInt16(this._offset);\n      record._languageID = this._readUInt16(this._offset);\n      record._nameID = this._readUInt16(this._offset);\n      record._length = this._readUInt16(this._offset);\n      record._offset = this._readUInt16(this._offset);\n      this._offset = tableInfo._offset + table._offset + record._offset;\n      var unicode = record._platformID === 0 || record._platformID === 3;\n      record._name = this._readString(record._length, unicode);\n      table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n      position += recordSize;\n    }\n    return table;\n  };\n  _TrueTypeReader.prototype._readHeadTable = function () {\n    var tableInfo = this._getTable('head');\n    if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n      this._offset = tableInfo._offset;\n    }\n    var table = new _TrueTypeHeadTable();\n    table._version = this._readFixed(this._offset);\n    table._fontRevision = this._readFixed(this._offset);\n    table._checkSumAdjustment = this._readUInt32(this._offset);\n    table._magicNumber = this._readUInt32(this._offset);\n    table._flags = this._readUInt16(this._offset);\n    table._unitsPerEm = this._readUInt16(this._offset);\n    table._created = this._readInt64(this._offset);\n    table._modified = this._readInt64(this._offset);\n    table._xMin = this._readInt16(this._offset);\n    table._yMin = this._readInt16(this._offset);\n    table._xMax = this._readInt16(this._offset);\n    table._yMax = this._readInt16(this._offset);\n    table._macStyle = this._readUInt16(this._offset);\n    table._lowestReadableSize = this._readUInt16(this._offset);\n    table._fontDirectionHint = this._readInt16(this._offset);\n    table._indexToLocalFormat = this._readInt16(this._offset);\n    table._glyphDataFormat = this._readInt16(this._offset);\n    return table;\n  };\n  _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n    var tableInfo = this._getTable('hhea');\n    if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n      this._offset = tableInfo._offset;\n    }\n    var table = new _TrueTypeHorizontalHeaderTable();\n    table._version = this._readFixed(this._offset);\n    table._ascender = this._readInt16(this._offset);\n    table._descender = this._readInt16(this._offset);\n    table._lineGap = this._readInt16(this._offset);\n    table._advanceWidthMax = this._readUInt16(this._offset);\n    table._minLeftSideBearing = this._readInt16(this._offset);\n    table._minRightSideBearing = this._readInt16(this._offset);\n    table._xMaxExtent = this._readInt16(this._offset);\n    table._caretSlopeRise = this._readInt16(this._offset);\n    table._caretSlopeRun = this._readInt16(this._offset);\n    this._offset += 10;\n    table._metricDataFormat = this._readInt16(this._offset);\n    table._numberOfHMetrics = this._readUInt16(this._offset);\n    return table;\n  };\n  _TrueTypeReader.prototype._readOS2Table = function () {\n    var tableInfo = this._getTable('OS/2');\n    if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n      this._offset = tableInfo._offset;\n    }\n    var table = new _TrueTypeOS2Table();\n    table._version = this._readUInt16(this._offset);\n    table._xAvgCharWidth = this._readInt16(this._offset);\n    table._usWeightClass = this._readUInt16(this._offset);\n    table._usWidthClass = this._readUInt16(this._offset);\n    table._fsType = this._readInt16(this._offset);\n    table._ySubscriptXSize = this._readInt16(this._offset);\n    table._ySubscriptYSize = this._readInt16(this._offset);\n    table._ySubscriptXOffset = this._readInt16(this._offset);\n    table._ySubscriptYOffset = this._readInt16(this._offset);\n    table._ySuperscriptXSize = this._readInt16(this._offset);\n    table._ySuperscriptYSize = this._readInt16(this._offset);\n    table._ySuperscriptXOffset = this._readInt16(this._offset);\n    table._ySuperscriptYOffset = this._readInt16(this._offset);\n    table._yStrikeoutSize = this._readInt16(this._offset);\n    table._yStrikeoutPosition = this._readInt16(this._offset);\n    table._sFamilyClass = this._readInt16(this._offset);\n    table._panose = this._readBytes(10);\n    table._ulUnicodeRange1 = this._readUInt32(this._offset);\n    table._ulUnicodeRange2 = this._readUInt32(this._offset);\n    table._ulUnicodeRange3 = this._readUInt32(this._offset);\n    table._ulUnicodeRange4 = this._readUInt32(this._offset);\n    table._vendorIdentifier = this._readBytes(4);\n    table._fsSelection = this._readUInt16(this._offset);\n    table._usFirstCharIndex = this._readUInt16(this._offset);\n    table._usLastCharIndex = this._readUInt16(this._offset);\n    table._sTypoAscender = this._readInt16(this._offset);\n    table._sTypoDescender = this._readInt16(this._offset);\n    table._sTypoLineGap = this._readInt16(this._offset);\n    table._usWinAscent = this._readUInt16(this._offset);\n    table._usWinDescent = this._readUInt16(this._offset);\n    table._ulCodePageRange1 = this._readUInt32(this._offset);\n    table._ulCodePageRange2 = this._readUInt32(this._offset);\n    if (table._version > 1) {\n      table._sxHeight = this._readInt16(this._offset);\n      table._sCapHeight = this._readInt16(this._offset);\n      table._usDefaultChar = this._readUInt16(this._offset);\n      table._usBreakChar = this._readUInt16(this._offset);\n      table._usMaxContext = this._readUInt16(this._offset);\n    } else {\n      table._sxHeight = 0;\n      table._sCapHeight = 0;\n      table._usDefaultChar = 0;\n      table._usBreakChar = 0;\n      table._usMaxContext = 0;\n    }\n    return table;\n  };\n  _TrueTypeReader.prototype._readPostTable = function () {\n    var tableInfo = this._getTable('post');\n    if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n      this._offset = tableInfo._offset;\n    }\n    var table = new _TrueTypePostTable();\n    table._formatType = this._readFixed(this._offset);\n    table._italicAngle = this._readFixed(this._offset);\n    table._underlinePosition = this._readInt16(this._offset);\n    table._underlineThickness = this._readInt16(this._offset);\n    table._isFixedPitch = this._readUInt32(this._offset);\n    table._minType42 = this._readUInt32(this._offset);\n    table._maxType42 = this._readUInt32(this._offset);\n    table._minType1 = this._readUInt32(this._offset);\n    table._maxType1 = this._readUInt32(this._offset);\n    return table;\n  };\n  _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n    var tableInfo = this._getTable('hmtx');\n    if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n      this._offset = tableInfo._offset;\n    }\n    var width = [];\n    for (var i = 0; i < glyphCount; i++) {\n      var glyph = new _TrueTypeLongHorMetric();\n      glyph._advanceWidth = this._readUInt16(this._offset);\n      glyph._lsb = this._readInt16(this._offset);\n      var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n      width.push(Math.floor(glyphWidth));\n    }\n    return width;\n  };\n  _TrueTypeReader.prototype._readCmapTable = function () {\n    var tableInfo = this._getTable('cmap');\n    if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n      this._offset = tableInfo._offset;\n    }\n    var table = new _TrueTypeCmapTable();\n    table._version = this._readUInt16(this._offset);\n    table._tablesCount = this._readUInt16(this._offset);\n    var position = this._offset;\n    var subTables = [];\n    for (var i = 0; i < table._tablesCount; i++) {\n      this._offset = position;\n      var subTable = new _TrueTypeCmapSubTable();\n      subTable._platformID = this._readUInt16(this._offset);\n      subTable._encodingID = this._readUInt16(this._offset);\n      subTable._offset = this._readUInt32(this._offset);\n      position = this._offset;\n      this._readCmapSubTable(subTable);\n      subTables[Number.parseInt(i.toString(), 10)] = subTable;\n    }\n    return subTables;\n  };\n  _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n    var tableInfo = this._getTable('cmap');\n    this._offset = tableInfo._offset + subTable._offset;\n    var format = this._readUInt16(this._offset);\n    var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n    if (encoding !== _TrueTypeCmapEncoding.unknown) {\n      switch (format) {\n        case _TrueTypeCmapFormat.apple:\n          this._readAppleCmapTable(subTable, encoding);\n          break;\n        case _TrueTypeCmapFormat.microsoft:\n          this._readMicrosoftCmapTable(subTable, encoding);\n          break;\n        case _TrueTypeCmapFormat.trimmed:\n          this._readTrimmedCmapTable(subTable, encoding);\n          break;\n      }\n    }\n  };\n  _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n    var tableInfo = this._getTable('cmap');\n    this._offset = tableInfo._offset + subTable._offset;\n    var table = new _TrueTypeAppleCmapSubTable();\n    table._format = this._readUInt16(this._offset);\n    table._length = this._readUInt16(this._offset);\n    table._version = this._readUInt16(this._offset);\n    if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n      this._maxMacIndex = 0;\n    }\n    for (var i = 0; i < 256; ++i) {\n      var glyphInfo = new _TrueTypeGlyph();\n      glyphInfo._index = this._readByte(this._offset);\n      glyphInfo._width = this._getWidth(glyphInfo._index);\n      glyphInfo._charCode = i;\n      this.macintosh.setValue(i, glyphInfo);\n      this._addGlyph(glyphInfo, encoding);\n      this._maxMacIndex = Math.max(i, this._maxMacIndex);\n    }\n  };\n  _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n    var tableInfo = this._getTable('cmap');\n    this._offset = tableInfo._offset + subTable._offset;\n    var collection = encoding === _TrueTypeCmapEncoding.unicode ? this._microsoft : this.macintosh;\n    var table = new _TrueTypeMicrosoftCmapSubTable();\n    table._format = this._readUInt16(this._offset);\n    table._length = this._readUInt16(this._offset);\n    table._version = this._readUInt16(this._offset);\n    table._segCountX2 = this._readUInt16(this._offset);\n    table._searchRange = this._readUInt16(this._offset);\n    table._entrySelector = this._readUInt16(this._offset);\n    table._rangeShift = this._readUInt16(this._offset);\n    var segCount = table._segCountX2 / 2;\n    table._endCount = this._readUShortArray(segCount);\n    table._reservedPad = this._readUInt16(this._offset);\n    table._startCount = this._readUShortArray(segCount);\n    table._idDelta = this._readUShortArray(segCount);\n    table._idRangeOffset = this._readUShortArray(segCount);\n    var length = table._length / 2 - 8 - segCount * 4;\n    table._glyphID = this._readUShortArray(length);\n    var codeOffset = 0;\n    var index = 0;\n    for (var j = 0; j < segCount; j++) {\n      for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <= table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n        if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n          codeOffset = k + table._idDelta[Number.parseInt(j.toString(), 10)] & 65535;\n        } else {\n          index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount + k - table._startCount[Number.parseInt(j.toString(), 10)];\n          if (index >= table._glyphID.length) {\n            continue;\n          }\n          codeOffset = table._glyphID[Number.parseInt(index.toString(), 10)] + table._idDelta[Number.parseInt(j.toString(), 10)] & 65535;\n        }\n        var glyph = new _TrueTypeGlyph();\n        glyph._index = codeOffset;\n        glyph._width = this._getWidth(glyph._index);\n        var id = encoding === _TrueTypeCmapEncoding.symbol ? (k & 0xff00) === 0xf000 ? k & 0xff : k : k;\n        glyph._charCode = id;\n        collection.setValue(id, glyph);\n        this._addGlyph(glyph, encoding);\n      }\n    }\n  };\n  _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n    var tableInfo = this._getTable('cmap');\n    this._offset = tableInfo._offset + subTable._offset;\n    var table = new _TrueTypeTrimmedCmapSubTable();\n    table._format = this._readUInt16(this._offset);\n    table._length = this._readUInt16(this._offset);\n    table._version = this._readUInt16(this._offset);\n    table._firstCode = this._readUInt16(this._offset);\n    table._entryCount = this._readUInt16(this._offset);\n    for (var i = 0; i < table._entryCount; ++i) {\n      var glyphInfo = new _TrueTypeGlyph();\n      glyphInfo._index = this._readUInt16(this._offset);\n      glyphInfo._width = this._getWidth(glyphInfo._index);\n      glyphInfo._charCode = i + table._firstCode;\n      this.macintosh.setValue(i, glyphInfo);\n      this._addGlyph(glyphInfo, encoding);\n      this._maxMacIndex = Math.max(i, this._maxMacIndex);\n    }\n  };\n  _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n    for (var i = 0; i < nameTable._recordsCount; i++) {\n      var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n      if (record._nameID === 1) {\n        this._metrics._fontFamily = record._name;\n      } else if (record._nameID === 6) {\n        this._metrics._postScriptName = record._name;\n      }\n      if (this._metrics._fontFamily !== null && this._metrics._fontFamily !== 'undefined' && this._metrics._postScriptName !== null && this._metrics._postScriptName !== 'undefined') {\n        break;\n      }\n    }\n  };\n  _TrueTypeReader.prototype._getTable = function (name) {\n    var table = new _TrueTypeTableInfo();\n    var obj;\n    if (this._tableDirectory.containsKey(name)) {\n      obj = this._tableDirectory.getValue(name);\n    }\n    if (obj !== null && typeof obj !== 'undefined') {\n      table = obj;\n    }\n    return table;\n  };\n  _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n    glyphCode = glyphCode < this._width.length ? glyphCode : this._width.length - 1;\n    return this._width[Number.parseInt(glyphCode.toString(), 10)];\n  };\n  _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n    var format = _TrueTypeCmapEncoding.unknown;\n    if (platformID === _TrueTypePlatformID.microsoft && encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n      format = _TrueTypeCmapEncoding.symbol;\n    } else if (platformID === _TrueTypePlatformID.microsoft && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n      format = _TrueTypeCmapEncoding.unicode;\n    } else if (platformID === _TrueTypePlatformID.macintosh && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n      format = _TrueTypeCmapEncoding.macintosh;\n    }\n    return format;\n  };\n  _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n    var collection = null;\n    switch (encoding) {\n      case _TrueTypeCmapEncoding.unicode:\n        collection = this._microsoftGlyphs;\n        break;\n      case _TrueTypeCmapEncoding.macintosh:\n      case _TrueTypeCmapEncoding.symbol:\n        collection = this._macintoshGlyphs;\n        break;\n    }\n    collection.setValue(glyph._index, glyph);\n  };\n  _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n    this._initializeFontName(nameTable);\n    var bSymbol = false;\n    for (var i = 0; i < cmapTables.length; i++) {\n      var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n      var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n      if (encoding === _TrueTypeCmapEncoding.symbol) {\n        bSymbol = true;\n        break;\n      }\n    }\n    this._metrics._isSymbol = bSymbol;\n    this._metrics._macStyle = headTable._macStyle;\n    this._metrics._isFixedPitch = postTable._isFixedPitch !== 0;\n    this._metrics._italicAngle = postTable._italicAngle;\n    var factor = 1000 / headTable._unitsPerEm;\n    this._metrics._winAscent = os2Table._sTypoAscender * factor;\n    this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n    this._metrics._capHeight = os2Table._sCapHeight !== 0 ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n    this._metrics._winDescent = os2Table._sTypoDescender * factor;\n    this._metrics._macDescent = horizontalHeadTable._descender * factor;\n    this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n    this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n    var left = headTable._xMin * factor;\n    var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n    var right = headTable._xMax * factor;\n    var bottom = this._metrics._macDescent;\n    this._metrics._fontBox = [left, top, right, bottom];\n    this._metrics._stemV = 80;\n    this._metrics._widthTable = this._updateWidth();\n    this._metrics._contains = this._tableDirectory.containsKey('CFF');\n    this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n    this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n  };\n  _TrueTypeReader.prototype._updateWidth = function () {\n    var count = 256;\n    var bytes = [];\n    if (this._metrics._isSymbol) {\n      for (var i = 0; i < count; i++) {\n        var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n        bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._empty ? 0 : glyphInfo._width;\n      }\n    } else {\n      var byteToProcess = [];\n      var unknown = '?';\n      var space = String.fromCharCode(32);\n      for (var i = 0; i < count; i++) {\n        byteToProcess[0] = Number.parseInt(i.toString(), 10);\n        var text = this._getString(byteToProcess, 0, byteToProcess.length);\n        var ch = text.length > 0 ? text[0] : unknown;\n        var glyphInfo = this._getGlyph(ch);\n        if (!glyphInfo._empty) {\n          bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n        } else {\n          glyphInfo = this._getGlyph(space);\n          bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._empty ? 0 : glyphInfo._width;\n        }\n      }\n    }\n    return bytes;\n  };\n  _TrueTypeReader.prototype._getDefaultGlyph = function () {\n    var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n    return glyph;\n  };\n  _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n    var result = '';\n    for (var index = 0; index < length; index++) {\n      result += String.fromCharCode(byteToProcess[index + start]);\n    }\n    return result;\n  };\n  _TrueTypeReader.prototype._setOffset = function (offset) {\n    this._offset = offset;\n  };\n  _TrueTypeReader.prototype._readFontProgram = function (chars) {\n    var glyphChars = this._getGlyphChars(chars);\n    var locaTable = this._readLocaTable(this._bIsLocaShort);\n    if (glyphChars && glyphChars._size() < chars._size()) {\n      this._missedGlyphs = chars._size() - glyphChars._size();\n    }\n    this._updateGlyphChars(glyphChars, locaTable);\n    var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n    var glyphTableSize = result1.glyphTableSize;\n    var newLocaTable = result1.newLocaTable;\n    var newGlyphTable = result1.newGlyphTable;\n    var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n    var newLocaSize = result2.newLocaSize;\n    var newLocaUpdated = result2.newLocaUpdated;\n    var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n    return fontProgram;\n  };\n  _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n    newLocaTable = [];\n    var activeGlyphs = glyphChars.keys();\n    activeGlyphs.sort(function (a, b) {\n      return a - b;\n    });\n    var glyphSize = 0;\n    for (var i = 0; i < activeGlyphs.length; i++) {\n      var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n      if (locaTable._offsets.length > 0) {\n        glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n      }\n    }\n    var glyphSizeAligned = this._align(glyphSize);\n    newGlyphTable = [];\n    for (var i = 0; i < glyphSizeAligned; i++) {\n      newGlyphTable.push(0);\n    }\n    var nextGlyphOffset = 0;\n    var nextGlyphIndex = 0;\n    var table = this._getTable('glyf');\n    for (var i = 0; i < locaTable._offsets.length; i++) {\n      newLocaTable.push(nextGlyphOffset);\n      if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n        ++nextGlyphIndex;\n        newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n        var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n        var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n        if (oldNextGlyphOffset > 0) {\n          this._offset = table._offset + oldGlyphOffset;\n          var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n          newGlyphTable = result.buffer;\n          nextGlyphOffset += oldNextGlyphOffset;\n        }\n      }\n    }\n    return {\n      glyphTableSize: glyphSize,\n      newLocaTable: newLocaTable,\n      newGlyphTable: newGlyphTable\n    };\n  };\n  _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n    var tableInfo = this._getTable('loca');\n    this._offset = tableInfo._offset;\n    var table = new _TrueTypeLocaTable();\n    var buffer = [];\n    if (bShort) {\n      var len = tableInfo._length / 2;\n      buffer = [];\n      for (var i = 0; i < len; i++) {\n        buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n      }\n    } else {\n      var len = tableInfo._length / 4;\n      buffer = [];\n      for (var i = 0; i < len; i++) {\n        buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n      }\n    }\n    table._offsets = buffer;\n    return table;\n  };\n  _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n    if (!glyphChars.containsKey(0)) {\n      glyphChars.setValue(0, 0);\n    }\n    var clone = new Dictionary();\n    var glyphCharKeys = glyphChars.keys();\n    for (var i = 0; i < glyphCharKeys.length; i++) {\n      clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n    }\n    for (var i = 0; i < glyphCharKeys.length; i++) {\n      var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n      this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n    }\n  };\n  _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n    if (glyph < locaTable._offsets.length - 1) {\n      var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n      if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n        var tableInfo = this._getTable('glyf');\n        this._offset = tableInfo._offset + glyphOffset;\n        var glyphHeader = new _TrueTypeGlyphHeader();\n        glyphHeader.numberOfContours = this._readInt16(this._offset);\n        glyphHeader.xMin = this._readInt16(this._offset);\n        glyphHeader.yMin = this._readInt16(this._offset);\n        glyphHeader.xMax = this._readInt16(this._offset);\n        glyphHeader.yMax = this._readInt16(this._offset);\n        if (glyphHeader.numberOfContours < 0) {\n          var skipBytes = 0;\n          var entry = true;\n          while (entry) {\n            var flags = this._readUInt16(this._offset);\n            var glyphIndex = this._readUInt16(this._offset);\n            if (!glyphChars.containsKey(glyphIndex)) {\n              glyphChars.setValue(glyphIndex, 0);\n            }\n            if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n              break;\n            }\n            skipBytes = (flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0 ? 4 : 2;\n            if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n              skipBytes += 2;\n            } else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n              skipBytes += 4;\n            } else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n              skipBytes += 2 * 4;\n            }\n            this._offset += skipBytes;\n          }\n        }\n      }\n    }\n  };\n  _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n    var size = bLocaIsShort ? newLocaTable.length * 2 : newLocaTable.length * 4;\n    var count = this._align(size);\n    var writer = new _BigEndianWriter(count);\n    for (var i = 0; i < newLocaTable.length; i++) {\n      var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n      if (bLocaIsShort) {\n        value /= 2;\n        writer._writeShort(value);\n      } else {\n        writer._writeInt(value);\n      }\n    }\n    return {\n      newLocaUpdated: writer._data,\n      newLocaSize: size\n    };\n  };\n  _TrueTypeReader.prototype._align = function (value) {\n    return value + 3 & ~3;\n  };\n  _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n    var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n    var fontProgramLength = result.fontProgramLength;\n    var table = result.table;\n    var writer = new _BigEndianWriter(fontProgramLength);\n    writer._writeInt(0x10000);\n    writer._writeShort(table);\n    var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n    writer._writeShort((1 << (entrySelector & 31)) * 16);\n    writer._writeShort(entrySelector);\n    writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n    this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n    this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n    return writer._data;\n  };\n  _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n    var fontProgramLength = 0;\n    if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n      table = 2;\n      var tableNames = this._tableNames;\n      for (var i = 0; i < tableNames.length; i++) {\n        var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n        if (tableName !== 'glyf' && tableName !== 'loca') {\n          var tableInfo = this._getTable(tableName);\n          if (!tableInfo._empty) {\n            ++table;\n            fontProgramLength += this._align(tableInfo._length);\n          }\n        }\n      }\n      fontProgramLength += newLocaTableOut.length;\n      fontProgramLength += newGlyphTable.length;\n      var usedTablesSize = table * 16 + 3 * 4;\n      fontProgramLength += usedTablesSize;\n    }\n    return {\n      fontProgramLength: fontProgramLength,\n      table: table\n    };\n  };\n  _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n    var dictionary = new Dictionary();\n    if (chars !== null && typeof chars !== 'undefined') {\n      var charKeys = chars.keys();\n      for (var i = 0; i < charKeys.length; i++) {\n        var ch = charKeys[Number.parseInt(i.toString(), 10)];\n        var glyph = this._getGlyph(ch);\n        if (!glyph._empty) {\n          dictionary.setValue(glyph._index, ch.charCodeAt(0));\n        }\n      }\n    }\n    return dictionary;\n  };\n  _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n    if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n      var tableNames = this._tableNames;\n      var usedTablesSize = table * 16 + 3 * 4;\n      var nextTableSize = 0;\n      for (var i = 0; i < tableNames.length; i++) {\n        var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n        var tableInfo = this._getTable(tableName);\n        if (tableInfo._empty) {\n          continue;\n        }\n        writer._writeString(tableName);\n        if (tableName === 'glyf') {\n          var checksum = this._calculateCheckSum(newGlyphTable);\n          writer._writeInt(checksum);\n          nextTableSize = glyphTableSize;\n        } else if (tableName === 'loca') {\n          var checksum = this._calculateCheckSum(newLocaTableOut);\n          writer._writeInt(checksum);\n          nextTableSize = locaTableSize;\n        } else {\n          writer._writeInt(tableInfo._checksum);\n          nextTableSize = tableInfo._length;\n        }\n        writer._writeUInt(usedTablesSize);\n        writer._writeUInt(nextTableSize);\n        usedTablesSize += this._align(nextTableSize);\n      }\n    }\n  };\n  _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n    var pos = 0;\n    var byte1 = 0;\n    var byte2 = 0;\n    var byte3 = 0;\n    var byte4 = 0;\n    var result = 0;\n    if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n      for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n        byte4 += bytes[pos++] & 255;\n        byte3 += bytes[pos++] & 255;\n        byte2 += bytes[pos++] & 255;\n        byte1 += bytes[pos++] & 255;\n      }\n      result = byte1;\n      result += byte2 << 8;\n      result += byte3 << 16;\n      result += byte4 << 24;\n    }\n    return result;\n  };\n  _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n    if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' && newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n      var tableNames = this._tableNames;\n      for (var i = 0; i < tableNames.length; i++) {\n        var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n        var tableInfo = this._getTable(tableName);\n        if (tableInfo._empty) {\n          continue;\n        }\n        if (tableName === 'glyf') {\n          writer._writeBytes(newGlyphTable);\n        } else if (tableName === 'loca') {\n          writer._writeBytes(newLocaTable);\n        } else {\n          var count = this._align(tableInfo._length);\n          var buff = [];\n          for (var i_1 = 0; i_1 < count; i_1++) {\n            buff.push(0);\n          }\n          this._offset = tableInfo._offset;\n          var result = this._read(buff, 0, tableInfo._length);\n          writer._writeBytes(result.buffer);\n        }\n      }\n    }\n  };\n  _TrueTypeReader.prototype._read = function (buffer, index, count) {\n    var written = 0;\n    if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n      var read = 0;\n      do {\n        for (var i = 0; i < count - written && this._offset + i < this._fontData.length; i++) {\n          buffer[index + i] = this._fontData[this._offset + i];\n        }\n        read = count - written;\n        this._offset += read;\n        written += read;\n      } while (written < count);\n    }\n    return {\n      buffer: buffer,\n      written: written\n    };\n  };\n  _TrueTypeReader.prototype._createInternals = function () {\n    this._metrics = new _TrueTypeMetrics();\n    var nameTable = this._readNameTable();\n    var headTable = this._readHeadTable();\n    this._bIsLocaShort = headTable._indexToLocalFormat === 0;\n    var horizontalHeadTable = this._readHorizontalHeaderTable();\n    var os2Table = this._readOS2Table();\n    var postTable = this._readPostTable();\n    this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n    var subTables = this._readCmapTable();\n    this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n  };\n  _TrueTypeReader.prototype._getGlyph = function (charCode) {\n    if (typeof charCode === 'number') {\n      var obj1 = null;\n      if (!this._metrics._isSymbol && this._microsoftGlyphs != null) {\n        if (this._microsoftGlyphs.containsKey(charCode)) {\n          obj1 = this._microsoftGlyphs.getValue(charCode);\n        }\n      } else if (this._metrics._isSymbol && this._macintoshGlyphs != null) {\n        if (this._macintoshGlyphs.containsKey(charCode)) {\n          obj1 = this._macintoshGlyphs.getValue(charCode);\n        }\n      }\n      var glyph = obj1 != null ? obj1 : this._getDefaultGlyph();\n      return glyph;\n    } else {\n      var obj = null;\n      var code = charCode.charCodeAt(0);\n      if (!this._metrics._isSymbol && this._microsoft !== null) {\n        if (this._microsoft.containsKey(code)) {\n          obj = this._microsoft.getValue(code);\n          if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n            this._isFontPresent = true;\n          }\n        } else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n          this._isFontPresent = false;\n        }\n      } else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n        if (this._maxMacIndex !== 0) {\n          code %= this._maxMacIndex + 1;\n        } else {\n          code = (code & 0xff00) === 0xf000 ? code & 0xff : code;\n        }\n        if (this.macintosh.containsKey(code)) {\n          obj = this.macintosh.getValue(code);\n          this._isFontPresent = true;\n        }\n      }\n      if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n        obj = new _TrueTypeGlyph();\n      }\n      var glyph = obj !== null ? obj : this._getDefaultGlyph();\n      return glyph;\n    }\n  };\n  _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n    if (typeof isUnicode === 'undefined' || isUnicode === null) {\n      return this._readString(length, false);\n    } else {\n      var result = '';\n      if (isUnicode) {\n        for (var i = 0; i < length; i++) {\n          if (i % 2 !== 0) {\n            result += String.fromCharCode(this._fontData[this._offset]);\n          }\n          this._offset += 1;\n        }\n      } else {\n        for (var i = 0; i < length; i++) {\n          result += String.fromCharCode(this._fontData[this._offset]);\n          this._offset += 1;\n        }\n      }\n      return result;\n    }\n  };\n  _TrueTypeReader.prototype._readFixed = function (offset) {\n    var integer = this._readInt16(offset);\n    var sFraction = this._readInt16(offset + 2);\n    var fraction = sFraction / 16384;\n    return integer + fraction;\n  };\n  _TrueTypeReader.prototype._readInt32 = function (offset) {\n    var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n    var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n    var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n    var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n    this._offset += 4;\n    return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n  };\n  _TrueTypeReader.prototype._readUInt32 = function (offset) {\n    var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n    var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n    var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n    var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n    this._offset += 4;\n    return i1 | i2 << 8 | i3 << 16 | i4 << 24;\n  };\n  _TrueTypeReader.prototype._readInt16 = function (offset) {\n    var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) + this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n    result = result & 1 << 15 ? result - 0x10000 : result;\n    this._offset += 2;\n    return result;\n  };\n  _TrueTypeReader.prototype._readInt64 = function (offset) {\n    var low = this._readInt32(offset + 4);\n    var n = this._readInt32(offset) * 4294967296.0 + low;\n    if (low < 0) {\n      n += 4294967296;\n    }\n    return n;\n  };\n  _TrueTypeReader.prototype._readUInt16 = function (offset) {\n    var result = this._fontData[Number.parseInt(offset.toString(), 10)] << 8 | this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n    this._offset += 2;\n    return result;\n  };\n  _TrueTypeReader.prototype._readUShortArray = function (length) {\n    var buffer = [];\n    for (var i = 0; i < length; i++) {\n      buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n    }\n    return buffer;\n  };\n  _TrueTypeReader.prototype._readBytes = function (length) {\n    var result = [];\n    for (var i = 0; i < length; i++) {\n      result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n      this._offset += 1;\n    }\n    return result;\n  };\n  _TrueTypeReader.prototype._readByte = function (offset) {\n    var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n    this._offset += 1;\n    return result;\n  };\n  _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n    var glyphInfo = this._getGlyph(code);\n    glyphInfo = !glyphInfo._empty ? glyphInfo : this._getDefaultGlyph();\n    var codeWidth = !glyphInfo._empty ? glyphInfo._width : 0;\n    return codeWidth;\n  };\n  _TrueTypeReader.prototype._convertString = function (text) {\n    var glyph = '';\n    if (text !== null && text !== undefined && text.length > 0) {\n      for (var k = 0; k < text.length; k++) {\n        var ch = text[Number.parseInt(k.toString(), 10)];\n        var glyphInfo = this._getGlyph(ch);\n        if (!glyphInfo._empty) {\n          glyph += String.fromCharCode(glyphInfo._index);\n        }\n      }\n    }\n    return glyph;\n  };\n  return _TrueTypeReader;\n}();\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */function () {\n  function _TrueTypeNameRecord() {}\n  return _TrueTypeNameRecord;\n}();\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */function () {\n  function _TrueTypeMetrics() {}\n  Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n    get: function () {\n      return (this._macStyle & 2) !== 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n    get: function () {\n      return (this._macStyle & 1) !== 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return _TrueTypeMetrics;\n}();\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */function () {\n  function _TrueTypeLongHorMetric() {}\n  return _TrueTypeLongHorMetric;\n}();\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */function () {\n  function _TrueTypeGlyph() {}\n  Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n    get: function () {\n      return this._index === this._width && this._width === this._charCode && this._charCode === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return _TrueTypeGlyph;\n}();\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */function () {\n  function _TrueTypeLocaTable() {}\n  return _TrueTypeLocaTable;\n}();\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */function () {\n  function _TrueTypeGlyphHeader() {}\n  return _TrueTypeGlyphHeader;\n}();\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */function () {\n  function _BigEndianWriter(capacity) {\n    this.int32Size = 4;\n    this.int16Size = 2;\n    this.int64Size = 8;\n    this._bufferLength = capacity;\n    this._buffer = [];\n  }\n  Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n    get: function () {\n      if (this._buffer.length < this._bufferLength) {\n        var length_1 = this._bufferLength - this._buffer.length;\n        for (var i = 0; i < length_1; i++) {\n          this._buffer.push(0);\n        }\n      }\n      return this._buffer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n    get: function () {\n      if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n        this._internalPosition = 0;\n      }\n      return this._internalPosition;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  _BigEndianWriter.prototype._writeShort = function (value) {\n    var bytes = [(value & 0x0000ff00) >> 8, value & 0x000000ff];\n    this._flush(bytes);\n  };\n  _BigEndianWriter.prototype._writeInt = function (value) {\n    var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n    this._flush(bytes);\n  };\n  _BigEndianWriter.prototype._writeUInt = function (value) {\n    var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n    this._flush(buff);\n  };\n  _BigEndianWriter.prototype._writeString = function (value) {\n    if (value !== null && typeof value !== 'undefined') {\n      var bytes = [];\n      for (var i = 0; i < value.length; i++) {\n        bytes.push(value.charCodeAt(i));\n      }\n      this._flush(bytes);\n    }\n  };\n  _BigEndianWriter.prototype._writeBytes = function (value) {\n    this._flush(value);\n  };\n  _BigEndianWriter.prototype._flush = function (buff) {\n    if (buff !== null && typeof buff !== 'undefined') {\n      var position = this._position;\n      for (var i = 0; i < buff.length; i++) {\n        this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n        position++;\n      }\n      this._internalPosition += buff.length;\n    }\n  };\n  return _BigEndianWriter;\n}();\nexport { _BigEndianWriter };","map":{"version":3,"names":["_TrueTypeTableInfo","_TrueTypeHorizontalHeaderTable","_TrueTypeNameTable","_TrueTypeHeadTable","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeCmapSubTable","_TrueTypeCmapTable","_TrueTypeAppleCmapSubTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeTrimmedCmapSubTable","Dictionary","_StringTokenizer","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_TrueTypeReader","fontData","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_initialize","Object","defineProperty","prototype","get","_macintoshDictionary","enumerable","configurable","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_metrics","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_offset","_check","table","_readInt16","_tableDirectory","i","table_1","tableKey","_readString","_checksum","_readInt32","_length","setValue","_lowestPosition","_fixOffsets","minOffset","Number","MAX_VALUE","tableKeys","keys","length","value","getValue","parseInt","toString","offset","shift","version","fontTag","Error","ttcIdentificationNumber","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","recordSize","position","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","unicode","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_lineGap","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","width","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","push","Math","floor","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","format","encoding","_getCmapEncoding","unknown","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_format","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_index","_readByte","_width","_getWidth","_charCode","macintosh","_addGlyph","max","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","index","j","k","id","symbol","_firstCode","_entryCount","_fontFamily","_postScriptName","name","obj","containsKey","glyphCode","platformID","encodingID","undefined","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","ceil","left","top","right","bottom","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_subScriptSizeFactor","_superscriptSizeFactor","count","bytes","_getGlyph","String","fromCharCode","_empty","byteToProcess","space","text","_getString","ch","_getDefaultGlyph","_whiteSpace","start","result","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_size","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","fontProgram","_getFontProgram","activeGlyphs","sort","a","b","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","_read","buffer","bShort","_TrueTypeLocaTable","len","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","entry","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","size","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","usedTablesSize","dictionary","charKeys","charCodeAt","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte1","byte2","byte3","byte4","_writeBytes","buff","i_1","written","read","_createInternals","charCode","obj1","code","_isFontPresent","isUnicode","integer","sFraction","fraction","i1","i2","i3","i4","low","n","_getCharacterWidth","codeWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_position"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/fonts/ttf-reader.js"],"sourcesContent":["import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs != null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs != null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}