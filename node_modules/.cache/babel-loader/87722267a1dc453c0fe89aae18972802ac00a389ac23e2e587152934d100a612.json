{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Matrix, Rect, Size } from '@syncfusion/ej2-drawings';\nimport { PdfAnnotationBorder, PdfRotationAngle, PdfSquareAnnotation, PdfAnnotationFlag, _PdfDictionary, _PdfName, PdfBorderEffectStyle, PdfBorderEffect, PdfAnnotationState, PdfAnnotationStateModel, PdfCircleAnnotation, PdfPopupAnnotation, PdfLineAnnotation, PdfLineEndingStyle, PdfFontStyle, PdfFontFamily, PdfStandardFont, PdfStringFormat, PdfTextAlignment, PdfRubberStampAnnotation, PdfPen, PdfBrush, PdfVerticalAlignment, _PdfPath, PdfRubberStampAnnotationIcon, PdfBitmap, PdfPolyLineAnnotation, PdfCircleMeasurementType, PdfPopupIcon, PdfFreeTextAnnotation, PdfBorderStyle, PdfRectangleAnnotation, PdfPolygonAnnotation, PdfEllipseAnnotation, PdfTextMarkupAnnotation, PdfInkAnnotation, PdfLineIntent, PdfTemplate, PdfTextMarkupAnnotationType, PdfLineCaptionType, PdfMeasurementUnit, PdfAnnotationIntent, PdfTrueTypeFont, _decode } from '@syncfusion/ej2-pdf';\nimport { SizeBase, PageRenderer } from '../index';\n/**\n * AnnotationRenderer\n *\n * @hidden\n */\nvar AnnotationRenderer = /** @class */function () {\n  /**\n   * @param {PdfViewer} pdfViewer - The PdfViewer.\n   * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n   * @private\n   */\n  function AnnotationRenderer(pdfViewer, pdfViewerBase) {\n    this.formats = ['M/d/yyyy h:mm:ss tt', 'M/d/yyyy, h:mm:ss tt', 'M/d/yyyy h:mm tt', 'MM/dd/yyyy hh:mm:ss', 'M/d/yyyy h:mm:ss', 'M/d/yyyy hh:mm tt', 'M/d/yyyy hh tt', 'M/d/yyyy h:mm', 'M/d/yyyy h:mm', 'MM/dd/yyyy hh:mm', 'M/dd/yyyy hh:mm', 'dd/M/yyyy h:mm:ss tt', 'dd/M/yyyy, h:mm:ss tt', 'M/d/yy, h:mm:ss tt', 'yyyy/MM/dd, h:mm:ss tt', 'dd/MMM/yy, h:mm:ss tt', 'yyyy-MM-dd, h:mm:ss tt', 'dd-MMM-yy, h:mm:ss tt', 'MM-dd-yy, h:mm:ss tt', 'YYYY-MM-DDTHH:mm:ss.sssZ', 'Â±YYYYYY-MM-DDTHH:mm:ss.sssZ', 'yyyy-MM-ddTHH:mm:ss.fffZ'];\n    this.pdfViewer = pdfViewer;\n    this.pdfViewerBase = pdfViewerBase;\n  }\n  /**\n   * @param details\n   * @param page\n   *\n   * @private\n   */\n  AnnotationRenderer.prototype.addShape = function (details, page) {\n    var shapeAnnotation = details;\n    var isLock = this.checkAnnotationLock(shapeAnnotation);\n    if (!isNullOrUndefined(shapeAnnotation.author)) {\n      shapeAnnotation.author = 'Guest';\n    }\n    if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Line') {\n      var points = JSON.parse(shapeAnnotation.vertexPoints);\n      var linePoints = this.getSaveVertexPoints(points, page);\n      var lineAnnotation = new PdfLineAnnotation(linePoints);\n      if (!isNullOrUndefined(shapeAnnotation.note)) {\n        lineAnnotation.text = shapeAnnotation.note.toString();\n      }\n      lineAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n      lineAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n      if (!isNullOrUndefined(shapeAnnotation.subject)) {\n        lineAnnotation.subject = shapeAnnotation.subject.toString();\n      }\n      if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n        // eslint-disable-next-line max-len\n        var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n        lineAnnotation.color = color;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fillColor = JSON.parse(shapeAnnotation.fillColor);\n        var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n        lineAnnotation.innerColor = innerColor;\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n        lineAnnotation.opacity = shapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = shapeAnnotation.thickness;\n      lineBorder.style = shapeAnnotation.borderStyle;\n      lineBorder.dash = shapeAnnotation.borderDashArray;\n      lineAnnotation.border = lineBorder;\n      lineAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n      lineAnnotation.lineEndingStyle.begin = this.getLineEndingStyle(shapeAnnotation.lineHeadStart);\n      lineAnnotation.lineEndingStyle.end = this.getLineEndingStyle(shapeAnnotation.lineHeadEnd);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n        lineAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = shapeAnnotation.comments;\n      var bounds = JSON.parse(shapeAnnotation.bounds);\n      lineAnnotation.bounds = bounds;\n      lineAnnotation.bounds.x = bounds.left;\n      lineAnnotation.bounds.y = bounds.top;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          lineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], lineAnnotation.bounds));\n        }\n      }\n      var reviewDetails = shapeAnnotation.review;\n      lineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, lineAnnotation.bounds));\n      if (!isNullOrUndefined(shapeAnnotation.isLocked && shapeAnnotation.isLocked)) {\n        lineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      }\n      var isPrint = false;\n      var isCommentLock = false;\n      if (shapeAnnotation.isCommentLock && shapeAnnotation['isCommentLock'] !== null) {\n        isCommentLock = Boolean(shapeAnnotation['isCommentLock'].toString());\n      }\n      if (shapeAnnotation.isPrint && shapeAnnotation['isPrint'] !== null) {\n        isPrint = Boolean(shapeAnnotation['isPrint'].toString());\n      }\n      if (isCommentLock && isPrint) {\n        lineAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n      } else if (isPrint) {\n        lineAnnotation._annotFlags = PdfAnnotationFlag.print;\n      } else if (isCommentLock) {\n        lineAnnotation._annotFlags = PdfAnnotationFlag.readOnly;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.customData)) {\n        lineAnnotation.setValues('CustomData', shapeAnnotation.customData);\n      }\n      if (shapeAnnotation.allowedInteractions && shapeAnnotation['allowedInteractions'] != null) {\n        lineAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation['allowedInteractions']));\n      }\n      lineAnnotation.setAppearance(true);\n      page.annotations.add(lineAnnotation);\n    } else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Square') {\n      var bounds = JSON.parse(shapeAnnotation.bounds);\n      if (isNullOrUndefined(bounds.left)) {\n        shapeAnnotation.bounds.left = 0;\n      }\n      if (isNullOrUndefined(bounds.top)) {\n        shapeAnnotation.bounds.top = 0;\n      }\n      var cropValues = this.getCropBoxValue(page, false);\n      var left = this.convertPixelToPoint(bounds.left);\n      var top_1 = this.convertPixelToPoint(bounds.top);\n      var width = this.convertPixelToPoint(bounds.width);\n      var height = this.convertPixelToPoint(bounds.height);\n      var cropX = 0;\n      var cropY = 0;\n      if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n        cropX = cropValues.x;\n        cropY = cropValues.y;\n      } else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n        cropX = cropValues.x;\n        cropY = cropValues.y;\n      }\n      // eslint-disable-next-line max-len\n      var squareAnnotation = new PdfSquareAnnotation(cropX + left, cropY + top_1, width, height);\n      if (!isNullOrUndefined(shapeAnnotation.note)) {\n        squareAnnotation.text = shapeAnnotation.note.toString();\n      }\n      squareAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n      squareAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n      if (!isNullOrUndefined(shapeAnnotation.subject)) {\n        squareAnnotation.subject = shapeAnnotation.subject.toString();\n      }\n      if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n        // eslint-disable-next-line max-len\n        var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n        squareAnnotation.color = color;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fillColor = JSON.parse(shapeAnnotation.fillColor);\n        // eslint-disable-next-line max-len\n        if (!this.isTransparentColor(fillColor)) {\n          var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n          squareAnnotation.innerColor = innerColor;\n        }\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          squareAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          squareAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n        squareAnnotation.opacity = shapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = shapeAnnotation.thickness;\n      lineBorder.style = shapeAnnotation.borderStyle;\n      lineBorder.dash = shapeAnnotation.borderDashArray;\n      squareAnnotation.border = lineBorder;\n      squareAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n        squareAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = shapeAnnotation.comments;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          squareAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], squareAnnotation.bounds));\n        }\n      }\n      var reviewDetails = shapeAnnotation.review;\n      squareAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, squareAnnotation.bounds));\n      if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n        var borderEffect = new PdfBorderEffect();\n        borderEffect.style = PdfBorderEffectStyle.cloudy;\n        borderEffect.intensity = shapeAnnotation.cloudIntensity;\n        squareAnnotation.borderEffect = borderEffect;\n        var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n        if (rectDifferences.length > 0) {\n          var rd = this.getRDValues(rectDifferences);\n          squareAnnotation._dictionary.update('RD', rd);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.isLocked) && shapeAnnotation.isLocked) {\n        squareAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      }\n      var isPrint = false;\n      var isCommentLock = false;\n      if (shapeAnnotation.isCommentLock && shapeAnnotation['isCommentLock'] !== null) {\n        isCommentLock = Boolean(shapeAnnotation['isCommentLock'].toString());\n      }\n      if (shapeAnnotation.isPrint && shapeAnnotation['isPrint'] !== null) {\n        isPrint = Boolean(shapeAnnotation['isPrint'].toString());\n      }\n      if (isCommentLock && isPrint) {\n        squareAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n      } else if (isPrint) {\n        squareAnnotation._annotFlags = PdfAnnotationFlag.print;\n      } else if (isCommentLock) {\n        squareAnnotation._annotFlags = PdfAnnotationFlag.readOnly;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.customData)) {\n        squareAnnotation.setValues('CustomData', shapeAnnotation.customData);\n      }\n      if (shapeAnnotation.allowedInteractions && shapeAnnotation['allowedInteractions'] != null) {\n        squareAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation['allowedInteractions']));\n      }\n      squareAnnotation.setAppearance(true);\n      page.annotations.add(squareAnnotation);\n    } else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Circle') {\n      var bounds = JSON.parse(shapeAnnotation.bounds);\n      var left = this.convertPixelToPoint(bounds.left);\n      var top_2 = this.convertPixelToPoint(bounds.top);\n      var width = this.convertPixelToPoint(bounds.width);\n      var height = this.convertPixelToPoint(bounds.height);\n      if (isNullOrUndefined(bounds.left)) {\n        shapeAnnotation.bounds.left = 0;\n      }\n      if (isNullOrUndefined(bounds.top)) {\n        shapeAnnotation.bounds.top = 0;\n      }\n      var cropValues = this.getCropBoxValue(page, false);\n      var cropX = 0;\n      var cropY = 0;\n      if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n        cropX = cropValues.x;\n        cropY = cropValues.y;\n      } else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n        cropX = cropValues.x;\n        cropY = cropValues.y;\n      }\n      // eslint-disable-next-line max-len\n      var circleAnnotation = new PdfCircleAnnotation(cropX + left, cropY + top_2, width, height);\n      if (!isNullOrUndefined(shapeAnnotation.note)) {\n        circleAnnotation.text = shapeAnnotation.note.toString();\n      }\n      circleAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n      circleAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n      if (!isNullOrUndefined(shapeAnnotation.subject)) {\n        circleAnnotation.subject = shapeAnnotation.subject.toString();\n      }\n      if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n        // eslint-disable-next-line max-len\n        var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n        circleAnnotation.color = color;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fillColor = JSON.parse(shapeAnnotation.fillColor);\n        if (!this.isTransparentColor(fillColor)) {\n          var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n          circleAnnotation.innerColor = innerColor;\n        }\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n        circleAnnotation.opacity = shapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = shapeAnnotation.thickness;\n      lineBorder.style = shapeAnnotation.borderStyle;\n      lineBorder.dash = shapeAnnotation.borderDashArray;\n      circleAnnotation.border = lineBorder;\n      circleAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n        circleAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = shapeAnnotation.comments;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          circleAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], circleAnnotation.bounds));\n        }\n      }\n      var reviewDetails = shapeAnnotation.review;\n      circleAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, circleAnnotation.bounds));\n      if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n        var borderEffect = new PdfBorderEffect();\n        borderEffect.style = PdfBorderEffectStyle.cloudy;\n        borderEffect.intensity = shapeAnnotation.cloudIntensity;\n        circleAnnotation._borderEffect = borderEffect;\n        var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n        if (rectDifferences.length > 0) {\n          var rd = this.getRDValues(rectDifferences);\n          circleAnnotation._dictionary.update('RD', rd);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.isLocked && shapeAnnotation.isLocked)) {\n        circleAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      }\n      var isPrint = false;\n      var isCommentLock = false;\n      if (shapeAnnotation.isCommentLock && shapeAnnotation['isCommentLock'] !== null) {\n        isCommentLock = Boolean(shapeAnnotation['isCommentLock'].toString());\n      }\n      if (shapeAnnotation.isPrint && shapeAnnotation['isPrint'] !== null) {\n        isPrint = Boolean(shapeAnnotation['isPrint'].toString());\n      }\n      if (isCommentLock && isPrint) {\n        circleAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n      } else if (isPrint) {\n        circleAnnotation._annotFlags = PdfAnnotationFlag.print;\n      } else if (isCommentLock) {\n        circleAnnotation._annotFlags = PdfAnnotationFlag.readOnly;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.customData)) {\n        circleAnnotation.setValues('CustomData', shapeAnnotation.customData);\n      }\n      if (shapeAnnotation.allowedInteractions && shapeAnnotation['allowedInteractions'] != null) {\n        circleAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation['allowedInteractions']));\n      }\n      circleAnnotation.setAppearance(true);\n      page.annotations.add(circleAnnotation);\n    } else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Polygon') {\n      var points = JSON.parse(shapeAnnotation.vertexPoints);\n      var linePoints = this.getSaveVertexPoints(points, page);\n      var bounds = JSON.parse(shapeAnnotation.bounds);\n      if (isNullOrUndefined(bounds.left)) {\n        shapeAnnotation.bounds.left = 0;\n      }\n      if (isNullOrUndefined(bounds.top)) {\n        shapeAnnotation.bounds.top = 0;\n      }\n      var left = this.convertPixelToPoint(bounds.left);\n      var top_3 = this.convertPixelToPoint(bounds.top);\n      var width = this.convertPixelToPoint(bounds.width);\n      var height = this.convertPixelToPoint(bounds.height);\n      var polygonAnnotation = new PdfPolygonAnnotation(linePoints);\n      polygonAnnotation.bounds = new Rect(left, top_3, width, height);\n      if (!isNullOrUndefined(shapeAnnotation.note)) {\n        polygonAnnotation.text = shapeAnnotation.note.toString();\n      }\n      polygonAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n      if (!isNullOrUndefined(shapeAnnotation.subject)) {\n        polygonAnnotation.subject = shapeAnnotation.subject.toString();\n      }\n      polygonAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n      if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n        // eslint-disable-next-line max-len\n        var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n        polygonAnnotation.color = color;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fillColor = JSON.parse(shapeAnnotation.fillColor);\n        if (!this.isTransparentColor(fillColor)) {\n          var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n          polygonAnnotation.innerColor = innerColor;\n        }\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n        polygonAnnotation.opacity = shapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = shapeAnnotation.thickness;\n      lineBorder.style = shapeAnnotation.borderStyle;\n      lineBorder.dash = shapeAnnotation.borderDashArray;\n      polygonAnnotation.border = lineBorder;\n      polygonAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n        polygonAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = shapeAnnotation.comments;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          polygonAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polygonAnnotation.bounds));\n        }\n      }\n      var reviewDetails = shapeAnnotation.review;\n      polygonAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polygonAnnotation.bounds));\n      if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n        var borderEffect = new PdfBorderEffect();\n        borderEffect.style = PdfBorderEffectStyle.cloudy;\n        borderEffect.intensity = shapeAnnotation.cloudIntensity;\n        polygonAnnotation.borderEffect = borderEffect;\n        var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n        if (rectDifferences.length > 0) {\n          var rd = this.getRDValues(rectDifferences);\n          polygonAnnotation._dictionary.update('RD', rd);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.isLocked && shapeAnnotation.isLocked)) {\n        polygonAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      }\n      var isPrint = true;\n      var isCommentLock = false;\n      if (!isNullOrUndefined(shapeAnnotation.isCommentLock) && shapeAnnotation.isCommentLock) {\n        isCommentLock = true;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.isPrint) && shapeAnnotation.isPrint) {\n        isPrint = true;\n      }\n      if (isCommentLock && isPrint) {\n        polygonAnnotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n      }\n      if (isLock) {\n        polygonAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      } else if (isCommentLock) {\n        polygonAnnotation.flags = PdfAnnotationFlag.readOnly;\n      } else {\n        polygonAnnotation.flags = PdfAnnotationFlag.print;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.customData)) {\n        polygonAnnotation.setValues('CustomData', shapeAnnotation.customData);\n      }\n      if (!isNullOrUndefined(shapeAnnotation.allowedInteractions)) {\n        polygonAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation.allowedInteractions));\n      }\n      polygonAnnotation.setAppearance(true);\n      page.annotations.add(polygonAnnotation);\n    } else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Polyline') {\n      var points = JSON.parse(shapeAnnotation.vertexPoints);\n      var linePoints = this.getSaveVertexPoints(points, page);\n      var polylineAnnotation = new PdfPolyLineAnnotation(linePoints);\n      if (!isNullOrUndefined(shapeAnnotation.note)) {\n        polylineAnnotation.text = shapeAnnotation.note.toString();\n      }\n      polylineAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n      if (!isNullOrUndefined(shapeAnnotation.subject)) {\n        polylineAnnotation.subject = shapeAnnotation.subject.toString();\n      }\n      polylineAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n      if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n        // eslint-disable-next-line max-len\n        var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n        polylineAnnotation.color = color;\n      }\n      if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fillColor = JSON.parse(shapeAnnotation.fillColor);\n        if (!this.isTransparentColor(fillColor)) {\n          var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n          polylineAnnotation.innerColor = innerColor;\n        }\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n        polylineAnnotation.opacity = shapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = shapeAnnotation.thickness;\n      lineBorder.style = shapeAnnotation.borderStyle;\n      lineBorder.dash = shapeAnnotation.borderDashArray;\n      polylineAnnotation.border = lineBorder;\n      polylineAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n      polylineAnnotation.beginLineStyle = this.getLineEndingStyle(shapeAnnotation.lineHeadStart);\n      polylineAnnotation.endLineStyle = this.getLineEndingStyle(shapeAnnotation.lineHeadEnd);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n        polylineAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = shapeAnnotation.comments;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          polylineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polylineAnnotation.bounds));\n        }\n      }\n      var reviewDetails = shapeAnnotation.review;\n      polylineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polylineAnnotation.bounds));\n      if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n        var dictionary = new _PdfDictionary(page._crossReference);\n        dictionary.update('S', _PdfName.get('C'));\n        dictionary.update('I', shapeAnnotation.cloudIntensity);\n        polylineAnnotation._dictionary.update('BE', dictionary);\n        var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n        if (rectDifferences.length > 0) {\n          var rd = this.getRDValues(rectDifferences);\n          polylineAnnotation._dictionary.update('RD', rd);\n        }\n      }\n      if (!isNullOrUndefined(shapeAnnotation.isLocked) && shapeAnnotation.isLocked || isLock) {\n        polylineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      } else if (!isNullOrUndefined(shapeAnnotation.isCommentLock) && shapeAnnotation.isCommentLock) {\n        polylineAnnotation.flags = PdfAnnotationFlag.readOnly;\n      } else {\n        polylineAnnotation.flags = PdfAnnotationFlag.print;\n      }\n      polylineAnnotation.setAppearance(true);\n      if (!isNullOrUndefined(shapeAnnotation.customData)) {\n        polylineAnnotation.setValues('CustomData', shapeAnnotation.customData);\n      }\n      if (!isNullOrUndefined(shapeAnnotation.allowedInteractions)) {\n        polylineAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation.allowedInteractions));\n      }\n      page.annotations.add(polylineAnnotation);\n    }\n  };\n  /**\n  * @private\n  * @param details\n  * @param page\n  */\n  AnnotationRenderer.prototype.saveInkSignature = function (details, page) {\n    var inkSignatureAnnotation = details;\n    var bounds = JSON.parse(inkSignatureAnnotation.bounds);\n    var stampObjects = JSON.parse(inkSignatureAnnotation.data.toString());\n    var rotationAngle = this.getRotateAngle(page.rotation.toString());\n    var cropValues = this.getCropBoxValue(page, false);\n    var left = cropValues.x + this.convertPixelToPoint(bounds.x);\n    var top = this.convertPixelToPoint(bounds.y);\n    if (!(cropValues.x === 0 && page.cropBox[2] === page.size[0] && cropValues.y === page.size[1])) {\n      top -= cropValues.y;\n    }\n    var width = this.convertPixelToPoint(bounds.width);\n    var height = this.convertPixelToPoint(bounds.height);\n    var opacity = inkSignatureAnnotation.opacity;\n    var thickness = parseInt(inkSignatureAnnotation.thickness.toString(), 10);\n    if (!isNullOrUndefined(inkSignatureAnnotation.strokeColor)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var strokeColor = JSON.parse(inkSignatureAnnotation.strokeColor);\n      // eslint-disable-next-line max-len\n      var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n      inkSignatureAnnotation.color = color;\n    }\n    var minimumX = -1;\n    var minimumY = -1;\n    var maximumX = -1;\n    var maximumY = -1;\n    var drawingPath = new _PdfPath();\n    for (var p = 0; p < stampObjects.length; p++) {\n      var val = stampObjects[parseInt(p.toString(), 10)];\n      drawingPath._addLine(val.x, val.y, 0, 0);\n    }\n    for (var k = 0; k < drawingPath._points.length; k += 2) {\n      var value = drawingPath._points[parseInt(k.toString(), 10)];\n      if (minimumX == -1) {\n        minimumX = value[0];\n        minimumY = value[1];\n        maximumX = value[0];\n        maximumY = value[1];\n      } else {\n        var point1 = value[0];\n        var point2 = value[1];\n        if (minimumX >= point1) {\n          minimumX = point1;\n        }\n        if (minimumY >= point2) {\n          minimumY = point2;\n        }\n        if (maximumX <= point1) {\n          maximumX = point1;\n        }\n        if (maximumY <= point2) {\n          maximumY = point2;\n        }\n      }\n    }\n    var newDifferenceX = (maximumX - minimumX) / width;\n    var newDifferenceY = (maximumY - minimumY) / height;\n    if (newDifferenceX == 0) {\n      newDifferenceX = 1;\n    } else if (newDifferenceY == 0) {\n      newDifferenceY = 1;\n    }\n    var linePoints = [];\n    var isNewValues = 0;\n    if (rotationAngle !== 0) {\n      for (var j = 0; j < stampObjects.length; j++) {\n        var val = stampObjects[parseInt(j.toString(), 10)];\n        var path = val[\"command\"].toString();\n        if (path === \"M\" && j !== isNewValues) {\n          isNewValues = j;\n          break;\n        }\n        linePoints.push(parseFloat(val[\"x\"].toString()));\n        linePoints.push(parseFloat(val[\"y\"].toString()));\n      }\n      var rotatedPoints = this.getRotatedPath(linePoints, rotationAngle);\n      linePoints = [];\n      for (var z = 0; z < rotatedPoints._points.length; z += 2) {\n        linePoints.push((rotatedPoints._points[parseInt(z.toString(), 10)][0] - minimumX) / newDifferenceX + left);\n        linePoints.push(page.size[1] - (rotatedPoints._points[z + 1][1] - minimumY) / newDifferenceY - top);\n      }\n    } else {\n      for (var j = 0; j < stampObjects.length; j++) {\n        var val = stampObjects[parseInt(j.toString(), 10)];\n        var path = val[\"command\"].toString();\n        if (path === \"M\" && j !== isNewValues) {\n          isNewValues = j;\n          break;\n        }\n        linePoints.push((val.x - minimumX) / newDifferenceX + left);\n        var newX_1 = (val.y - minimumY) / newDifferenceY;\n        linePoints.push(page.size[1] - newX_1 - top);\n      }\n    }\n    var rectangle = new Rect(left, top, width, height);\n    var colors = [inkSignatureAnnotation.color[0], inkSignatureAnnotation.color[1], inkSignatureAnnotation.color[2]];\n    var inkAnnotation = new PdfInkAnnotation([left, top, width, height], linePoints);\n    var bound = new Rect();\n    bound = new Rect(inkAnnotation.bounds.x, page.size[1] - (inkAnnotation.bounds.y + inkAnnotation.bounds.height), inkAnnotation.bounds.width, inkAnnotation.bounds.height);\n    inkAnnotation.bounds = bound;\n    inkAnnotation.color = colors;\n    linePoints = [];\n    if (isNewValues > 0) {\n      if (rotationAngle != 0) {\n        var pathCollection = [];\n        for (var i = isNewValues; i < stampObjects.length; i++) {\n          var val = stampObjects[parseInt(i.toString(), 10)];\n          var path = val[\"command\"].toString();\n          if (path === \"M\" && i !== isNewValues) {\n            pathCollection.push(linePoints);\n            linePoints = [];\n          }\n          linePoints.push(val[\"x\"]);\n          linePoints.push(val[\"y\"]);\n        }\n        if (linePoints.length > 0) {\n          pathCollection.push(linePoints);\n        }\n        for (var g = 0; g < pathCollection.length; g++) {\n          var graphicsPoints = [];\n          var pointsCollections = pathCollection[parseInt(g.toString(), 10)];\n          if (pointsCollections.length > 0) {\n            var rotatedPoints = this.getRotatedPath(pointsCollections, rotationAngle);\n            for (var z = 0; z < rotatedPoints._points.length; z += 2) {\n              graphicsPoints.push(rotatedPoints._points[parseInt(g.toString(), 10)][0] / minimumX + left);\n              graphicsPoints.push(rotatedPoints._points[z + 1][1] - minimumY / newDifferenceY - top);\n            }\n            inkAnnotation.inkPointsCollection.push(graphicsPoints);\n          }\n          graphicsPoints = [];\n        }\n      } else {\n        for (var i = isNewValues; i < stampObjects.length; i++) {\n          var val = stampObjects[parseInt(i.toString(), 10)];\n          var path = val[\"command\"].toString();\n          if (path === \"M\" && i !== isNewValues) {\n            inkAnnotation.inkPointsCollection.push(linePoints);\n            linePoints = [];\n          }\n          linePoints.push((val[\"x\"] - minimumX) / newDifferenceX + left);\n          var newX = (val[\"y\"] - minimumY) / newDifferenceY;\n          linePoints.push(page.size[1] - newX - top);\n        }\n        if (linePoints.length > 0) {\n          inkAnnotation.inkPointsCollection.push(linePoints);\n        }\n      }\n    }\n    var isLock = this.checkAnnotationLock(inkSignatureAnnotation);\n    if (isNullOrUndefined(inkSignatureAnnotation.author) || isNullOrUndefined(inkSignatureAnnotation.author) && inkSignatureAnnotation.author === '') {\n      inkSignatureAnnotation.author = 'Guest';\n    } else {\n      inkAnnotation.author = !isNullOrUndefined(inkSignatureAnnotation.author) ? inkSignatureAnnotation.author.toString() !== '' ? inkSignatureAnnotation.author.toString() : 'Guest' : 'Guest';\n    }\n    if (!isNullOrUndefined(inkSignatureAnnotation.subject) && inkSignatureAnnotation.subject !== '') {\n      inkAnnotation.subject = inkSignatureAnnotation.subject.toString();\n    }\n    if (!isNullOrUndefined(inkSignatureAnnotation.note)) {\n      inkAnnotation.text = inkSignatureAnnotation.note.toString();\n    }\n    var dateValue;\n    if (!isNullOrUndefined(inkSignatureAnnotation.modifiedDate) && !isNaN(Date.parse(inkSignatureAnnotation.modifiedDate))) {\n      dateValue = new Date(Date.parse(inkSignatureAnnotation.modifiedDate));\n      inkAnnotation.modifiedDate = dateValue;\n    }\n    var reviewDetails = inkSignatureAnnotation.review;\n    inkAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, inkAnnotation.bounds));\n    var commentsDetails = inkSignatureAnnotation.comments;\n    if (commentsDetails.length > 0) {\n      for (var i_1 = 0; i_1 < commentsDetails.length; i_1++) {\n        // eslint-disable-next-line max-len\n        inkAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i_1.toString(), 10)], inkAnnotation.bounds));\n      }\n    }\n    if (!isNullOrUndefined(inkSignatureAnnotation.isLocked) && inkSignatureAnnotation.isLocked) {\n      inkAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n    } else if (!isNullOrUndefined(inkSignatureAnnotation.isCommentLock) && inkSignatureAnnotation.isCommentLock) {\n      inkAnnotation.flags = PdfAnnotationFlag.readOnly;\n    } else {\n      inkAnnotation.flags = PdfAnnotationFlag.print;\n    }\n    if (!isNullOrUndefined(inkSignatureAnnotation.customData)) {\n      inkAnnotation.setValues('CustomData', inkSignatureAnnotation.customData);\n    }\n    inkAnnotation.border.width = thickness;\n    inkAnnotation.opacity = opacity;\n    inkAnnotation._dictionary.set('NM', inkSignatureAnnotation.annotName.toString());\n    inkAnnotation.rotationAngle = this.getRotateAngle(inkSignatureAnnotation.rotationAngle);\n    if (!isNullOrUndefined(inkSignatureAnnotation.customData)) {\n      inkAnnotation.setValues('CustomData', inkSignatureAnnotation.customData);\n    }\n    inkAnnotation.setAppearance(true);\n    page.annotations.add(inkAnnotation);\n    return inkSignatureAnnotation;\n  };\n  AnnotationRenderer.prototype.getRotatedPath = function (linePoints, rotationAngle) {\n    var graphicsPath = new _PdfPath();\n    for (var j = 0; j < linePoints.length; j += 2) {\n      graphicsPath._addLine(linePoints[parseInt(j.toString(), 10)], linePoints[j + 1], 0, 0);\n    }\n    return graphicsPath;\n  };\n  /**\n   * @param details\n   * @param loadedDocument\n   * @private\n   */\n  AnnotationRenderer.prototype.addTextMarkup = function (details, loadedDocument) {\n    var markupAnnotation = details;\n    var pageNo = parseInt(markupAnnotation['pageNumber'].toString(), 10);\n    var page = loadedDocument.getPage(pageNo);\n    var annotationtypes = new PdfTextMarkupAnnotation();\n    switch (markupAnnotation.textMarkupAnnotationType.toString()) {\n      case 'Highlight':\n        annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        break;\n      case 'Strikethrough':\n        annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.strikeOut;\n        break;\n      case 'Underline':\n        annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.underline;\n        break;\n      case 'Squiggly':\n        annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n        break;\n    }\n    var bounds = JSON.parse(markupAnnotation.bounds);\n    var boundsCollection = [];\n    var _loop_1 = function (i) {\n      var bound = bounds[parseInt(i.toString(), 10)];\n      var cropValues = this_1.getCropBoxValue(page, true);\n      if (!isNullOrUndefined(bound['left'])) {\n        boundsCollection.push(new Rect(cropValues.x + this_1.convertPixelToPoint(bound['left']), cropValues.y + this_1.convertPixelToPoint(bound['top']), bound.hasOwnProperty('width') ? this_1.convertPixelToPoint(bound['width']) : 0, bound.hasOwnProperty('height') ? this_1.convertPixelToPoint(bound['height']) : 0));\n      }\n      // Assuming boundsCollection is an array of RectangleF objects\n      var groupedRectangles = new Map();\n      // Group rectangles by their Y values\n      for (var _i = 0, boundsCollection_1 = boundsCollection; _i < boundsCollection_1.length; _i++) {\n        var rect_1 = boundsCollection_1[_i];\n        if (!groupedRectangles.has(rect_1.y)) {\n          groupedRectangles.set(rect_1.y, []);\n        }\n        if (groupedRectangles.get(rect_1.y)) {\n          groupedRectangles.get(rect_1.y).push(rect_1);\n        }\n      }\n      // Calculate combined rectangles within each group\n      var combinedRectangles = [];\n      groupedRectangles.forEach(function (group, groupKey) {\n        if (group.length > 0) {\n          var minX = Math.min.apply(Math, group.map(function (rect) {\n            return rect.x;\n          }));\n          var width = group.map(function (rect) {\n            return rect.width;\n          }).reduce(function (sum, width) {\n            return sum + width;\n          }, 0);\n          var height = group[0].height;\n          combinedRectangles.push(new Rect(minX, groupKey, width, height));\n        }\n      });\n      boundsCollection = combinedRectangles;\n    };\n    var this_1 = this;\n    for (var i = 0; i < bounds.length; i++) {\n      _loop_1(i);\n    }\n    var annotation = new PdfTextMarkupAnnotation(null, 0, 0, 0, 0);\n    annotation.textMarkupType = annotationtypes.textMarkupType;\n    var isLock = this.checkAnnotationLock(markupAnnotation);\n    if (isNullOrUndefined(markupAnnotation.author) || isNullOrUndefined(markupAnnotation.author) && markupAnnotation.author === '') {\n      markupAnnotation.author = 'Guest';\n    } else {\n      annotation.author = !isNullOrUndefined(markupAnnotation.author) ? markupAnnotation.author.toString() !== '' ? markupAnnotation.author.toString() : 'Guest' : 'Guest';\n    }\n    if (!isNullOrUndefined(markupAnnotation.subject) && markupAnnotation.subject !== '') {\n      annotation.subject = markupAnnotation.subject.toString();\n    }\n    if (!isNullOrUndefined(markupAnnotation.note)) {\n      annotation.text = markupAnnotation.note.toString();\n    }\n    if (!isNullOrUndefined(markupAnnotation.annotationRotation)) {\n      annotation.rotateAngle = this.getRotateAngle(markupAnnotation.annotationRotation);\n    }\n    var dateValue;\n    if (!isNullOrUndefined(markupAnnotation.modifiedDate) && !isNaN(Date.parse(markupAnnotation.modifiedDate))) {\n      dateValue = new Date(Date.parse(markupAnnotation.modifiedDate));\n      annotation.modifiedDate = dateValue;\n    }\n    annotation._dictionary.set('NM', markupAnnotation.annotName.toString());\n    if (!isNullOrUndefined(markupAnnotation.color)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var annotColor = JSON.parse(markupAnnotation.color);\n      // eslint-disable-next-line max-len\n      var color = [annotColor.r, annotColor.g, annotColor.b];\n      annotation.color = color;\n    }\n    if (!isNullOrUndefined(markupAnnotation.opacity)) {\n      annotation.opacity = markupAnnotation.opacity;\n    }\n    var rect = markupAnnotation.rect;\n    if (boundsCollection.length > 0) {\n      // Don't need to set bounds explicitly for text markup annotation\n      var boundArrayCollection = [];\n      for (var i = 0; i < boundsCollection.length; i++) {\n        var boundArray = [];\n        boundArray.push(boundsCollection[parseInt(i.toString(), 10)].x);\n        boundArray.push(boundsCollection[parseInt(i.toString(), 10)].y);\n        boundArray.push(boundsCollection[parseInt(i.toString(), 10)].width);\n        boundArray.push(boundsCollection[parseInt(i.toString(), 10)].height);\n        boundArrayCollection.push(boundArray);\n      }\n      annotation.boundsCollection = boundArrayCollection;\n    }\n    var commentsDetails = markupAnnotation.comments;\n    if (commentsDetails.length > 0) {\n      for (var i = 0; i < commentsDetails.length; i++) {\n        // eslint-disable-next-line max-len\n        annotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], annotation.bounds));\n      }\n    }\n    var reviewDetails = markupAnnotation.review;\n    annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, annotation.bounds));\n    if (!isNullOrUndefined(markupAnnotation.color)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var annotColor = JSON.parse(markupAnnotation.color);\n      // eslint-disable-next-line max-len\n      var color = [annotColor.r, annotColor.g, annotColor.b];\n      annotation.textMarkUpColor = color;\n    }\n    var isPrint = true;\n    var isCommentLock = false;\n    if (!isNullOrUndefined(markupAnnotation.isCommentLock) && markupAnnotation.isCommentLock) {\n      isCommentLock = true;\n    }\n    if (!isNullOrUndefined(markupAnnotation.isPrint) && markupAnnotation.isPrint) {\n      isPrint = true;\n    }\n    if (isCommentLock && isPrint) {\n      annotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n    }\n    if (isLock) {\n      annotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n    } else if (isCommentLock) {\n      annotation.flags = PdfAnnotationFlag.readOnly;\n    } else {\n      annotation.flags = PdfAnnotationFlag.print;\n    }\n    if (!isNullOrUndefined(markupAnnotation.customData)) {\n      annotation.setValues('CustomData', markupAnnotation.customData);\n    }\n    if (!isNullOrUndefined(markupAnnotation.allowedInteractions)) {\n      annotation.setValues('AllowedInteractions', JSON.stringify(markupAnnotation.allowedInteractions));\n    }\n    if (!isNullOrUndefined(markupAnnotation.textMarkupContent)) {\n      annotation._dictionary.set('TextMarkupContent', markupAnnotation.textMarkupContent.toString());\n    }\n    annotation.setAppearance(true);\n    page.annotations.add(annotation);\n  };\n  AnnotationRenderer.prototype.getCropBoxValue = function (page, isPath) {\n    var cropBoxX = 0;\n    var cropBoxY = 0;\n    if (page != null) {\n      cropBoxX = !isPath ? page.cropBox[0] : 0;\n      cropBoxY = !isPath ? page.cropBox[1] : 0;\n    }\n    return {\n      x: cropBoxX,\n      y: cropBoxY\n    };\n  };\n  AnnotationRenderer.prototype.getBothCropBoxValue = function (page) {\n    var cropBoxX = page.cropBox[0];\n    var cropBoxY = page.cropBox[1];\n    return [cropBoxX, cropBoxY];\n  };\n  /**\n   * @private\n   * @param details\n   * @param page\n   */\n  AnnotationRenderer.prototype.addCustomStampAnnotation = function (details, page) {\n    var stampAnnotation = details;\n    var bounds = JSON.parse(stampAnnotation.bounds);\n    var pageNo = parseInt(stampAnnotation['pageNumber'].toString(), 10);\n    var cropValues = this.getCropBoxValue(page, false);\n    var left = 0;\n    var top = 0;\n    var graphics = page.graphics;\n    var pageRotation = page.rotation.toString();\n    if (stampAnnotation.hasOwnProperty('wrapperBounds')) {\n      var wrapperBounds = stampAnnotation.wrapperBounds;\n      var boundsXY = this.calculateBoundsXY(wrapperBounds, bounds, pageNo, page);\n      left = boundsXY.x;\n      top = boundsXY.y;\n    } else {\n      left = this.convertPixelToPoint(bounds.left);\n      top = this.convertPixelToPoint(bounds.top);\n    }\n    var cropX = 0;\n    var cropY = 0;\n    if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    } else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    }\n    left += cropX;\n    top += cropY;\n    var width = this.convertPixelToPoint(bounds.width);\n    var height = this.convertPixelToPoint(bounds.height);\n    if (!isNullOrUndefined(stampAnnotation.stampAnnotationType) && stampAnnotation.stampAnnotationType === 'image' && stampAnnotation.stampAnnotationPath !== ' ') {\n      if (pageRotation === 'RotateAngle90' || pageRotation === 'RotateAngle270') {\n        width = this.convertPixelToPoint(bounds.height);\n        height = this.convertPixelToPoint(bounds.width);\n      }\n    }\n    var opacity = stampAnnotation.opacity;\n    var rotateAngle = stampAnnotation.rotateAngle;\n    var isLock = false;\n    if (stampAnnotation.hasOwnProperty('annotationSettings') && !isNullOrUndefined(stampAnnotation.annotationSettings)) {\n      var annotationSettings = stampAnnotation.annotationSettings;\n      if (!isNullOrUndefined(annotationSettings.isLock)) {\n        isLock = annotationSettings.isLock;\n      }\n    }\n    if (!isNullOrUndefined(stampAnnotation.stampAnnotationType) && stampAnnotation.stampAnnotationType === 'image' && stampAnnotation.stampAnnotationPath !== ' ') {\n      var pageRender = new PageRenderer(this.pdfViewer, this.pdfViewerBase);\n      var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top, width, height);\n      page.annotations.add(rubberStampAnnotation);\n      var imageUrl = stampAnnotation['stampAnnotationPath'].toString().split(',')[1];\n      var bytes = _decode(imageUrl, false);\n      var bitmap = void 0;\n      if (bytes && bytes.length > 2 && bytes[0] === 255 && bytes[1] === 216) {\n        bitmap = new PdfBitmap(bytes);\n        var appearance = rubberStampAnnotation.appearance.normal;\n        var state = graphics.save();\n        appearance.graphics.drawImage(bitmap, 0, 0, width, height);\n        appearance.graphics.restore(state);\n      } else {\n        var appearance = rubberStampAnnotation.appearance;\n        var filterAnnot = this.pdfViewerBase.pngData.filter(function (nameStamp) {\n          return nameStamp.name === stampAnnotation.annotName;\n        });\n        var dictionary = filterAnnot[0]._dictionary.get('AP');\n        var pngDictionary = dictionary.get('N');\n        appearance.normal = new PdfTemplate(pngDictionary, page._crossReference);\n      }\n      rubberStampAnnotation.opacity = opacity;\n      if (!isNullOrUndefined(stampAnnotation.note)) {\n        rubberStampAnnotation.text = stampAnnotation.note.toString();\n      }\n      rubberStampAnnotation._dictionary.set('NM', stampAnnotation.annotName.toString());\n      var dateValue = void 0;\n      if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(stampAnnotation.modifiedDate));\n        rubberStampAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = stampAnnotation.comments;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          rubberStampAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], rubberStampAnnotation.bounds));\n        }\n      }\n      var reviewDetails = stampAnnotation.review;\n      rubberStampAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, rubberStampAnnotation.bounds));\n      if (!isNullOrUndefined(stampAnnotation.author)) {\n        stampAnnotation.author = 'Guest';\n      }\n      rubberStampAnnotation.author = !isNullOrUndefined(stampAnnotation.author) && stampAnnotation.author.toString() !== \"\" ? stampAnnotation.author.toString() : 'Guest';\n      if (!isNullOrUndefined(stampAnnotation.subject) && stampAnnotation.subject) {\n        rubberStampAnnotation.subject = stampAnnotation.subject.toString();\n      }\n      if (!isNullOrUndefined(stampAnnotation.isLocked) && stampAnnotation.isLocked) {\n        rubberStampAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      } else if (!isNullOrUndefined(stampAnnotation.isCommentLock) && stampAnnotation.isCommentLock) {\n        rubberStampAnnotation.flags = PdfAnnotationFlag.readOnly;\n      } else {\n        rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n      }\n      if (!isNullOrUndefined(stampAnnotation.customData)) {\n        rubberStampAnnotation.setValues('CustomData', stampAnnotation.customData);\n      }\n      if (!isNullOrUndefined(stampAnnotation.icon)) {\n        rubberStampAnnotation.setValues('iconName', stampAnnotation.icon);\n      }\n    } else {\n      var subject = stampAnnotation.subject.toString();\n      var icon = stampAnnotation.icon.toString();\n      var stampColor = stampAnnotation.stampFillcolor.toString();\n      var fillColor = stampAnnotation.fillColor.toString();\n      var isDynamic = stampAnnotation.isDynamicStamp.toString();\n      var textBrush = new PdfBrush([0, 0, 0]);\n      var colors = [];\n      var stampWidth = width;\n      if (fillColor === '#192760') {\n        colors = [25, 39, 96];\n      } else if (fillColor === '#516c30') {\n        colors = [81, 108, 48];\n      } else if (fillColor === '#8a251a') {\n        colors = [138, 37, 26];\n      }\n      textBrush = new PdfBrush(colors);\n      var stampBrush = new PdfBrush([0, 0, 0]);\n      var stampcolors = [];\n      if (stampColor === '#e6eddf') {\n        stampcolors = [230, 237, 223];\n      } else if (stampColor === '#f6dedd') {\n        stampcolors = [246, 222, 221];\n      } else if (stampColor === '#dce3ef') {\n        stampcolors = [220, 227, 239];\n      }\n      textBrush = new PdfBrush(colors);\n      stampBrush = new PdfBrush(stampcolors);\n      var pens = new PdfPen(colors, 1);\n      var pageRotation_1 = page.rotation.toString();\n      var rectangle = new Rect(left, top, width, height);\n      if (pageRotation_1 === 'RotateAngle90' || pageRotation_1 === 'RotateAngle270') {\n        rectangle = new Rect(left, top, height, width);\n      }\n      var rubberStampAnnotation = new PdfRubberStampAnnotation();\n      rubberStampAnnotation.bounds = rectangle;\n      rubberStampAnnotation.subject = stampAnnotation.icon.toString();\n      if (!isNullOrUndefined(stampAnnotation.note)) {\n        rubberStampAnnotation.text = stampAnnotation.note.toString();\n      }\n      rubberStampAnnotation._dictionary.set('NM', stampAnnotation.annotName.toString());\n      var dateValue = void 0;\n      if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(stampAnnotation.modifiedDate));\n        rubberStampAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = stampAnnotation.comments;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          rubberStampAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], rubberStampAnnotation.bounds));\n        }\n      }\n      var reviewDetails = stampAnnotation.review;\n      rubberStampAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, rubberStampAnnotation.bounds));\n      var isIconExists = false;\n      if (isDynamic !== 'true') {\n        isIconExists = this.getIconName(stampAnnotation, icon, rubberStampAnnotation);\n      }\n      if (icon.trim() === 'Accepted' || icon.trim() === 'Rejected') {\n        this.drawStampAsPath(stampAnnotation.stampAnnotationPath, rubberStampAnnotation, textBrush, stampBrush);\n        rubberStampAnnotation.rotationAngle = this.getRubberStampRotateAngle(pageRotation_1, rotateAngle);\n      } else {\n        if (page.rotation.toString() === 'RotateAngle90' || page.rotation.toString() === 'RotateAngle270') {\n          rubberStampAnnotation.bounds = rectangle;\n        }\n        rubberStampAnnotation.rotationAngle = this.getRubberStampRotateAngle(pageRotation_1, rotateAngle);\n      }\n      if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n        var dateValue_1;\n        if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n          dateValue_1 = new Date(Date.parse(stampAnnotation.modifiedDate));\n          rubberStampAnnotation.modifiedDate = dateValue_1;\n        }\n      }\n      rubberStampAnnotation.opacity = opacity;\n      rubberStampAnnotation.author = !isNullOrUndefined(stampAnnotation.author) && stampAnnotation.author.toString() !== \"\" ? stampAnnotation.author.toString() : 'Guest';\n      if (!isNullOrUndefined(stampAnnotation.isLocked) && stampAnnotation.isLocked) {\n        rubberStampAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      } else if (!isNullOrUndefined(stampAnnotation.isCommentLock) && stampAnnotation.isCommentLock) {\n        rubberStampAnnotation.flags = PdfAnnotationFlag.readOnly;\n      } else {\n        rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n      }\n      if (!isNullOrUndefined(stampAnnotation.customData)) {\n        rubberStampAnnotation.setValues('CustomData', stampAnnotation.customData);\n      }\n      if (!isNullOrUndefined(stampAnnotation.rotateAngle)) {\n        rubberStampAnnotation.setValues('rotateAngle', stampAnnotation.rotateAngle.toString());\n      }\n      if (!isNullOrUndefined(stampAnnotation.icon)) {\n        rubberStampAnnotation.setValues('iconName', stampAnnotation.icon.toString());\n      }\n      page.annotations.add(rubberStampAnnotation);\n      if (!isIconExists) {\n        var appearance = rubberStampAnnotation.appearance.normal;\n        appearance.graphics.drawRoundedRectangle(0, 0, rectangle.width, rectangle.height, 10, pens, stampBrush);\n        if (isDynamic === 'true') {\n          var text = stampAnnotation.dynamicText.toString();\n          var state = appearance.graphics.save();\n          appearance.graphics.setTransparency(opacity);\n          this.renderDynamicStamp(rubberStampAnnotation, icon, text, textBrush, rectangle, pens, page);\n          appearance.graphics.restore(state);\n          rubberStampAnnotation._dictionary.set('Name', _PdfName.get('#23D' + icon.toString()));\n        } else {\n          this.retriveDefaultWidth(icon.trim());\n          var state = appearance.graphics.save();\n          appearance.graphics.setTransparency(opacity);\n          this.renderSignHereStamp(rubberStampAnnotation, rectangle, icon, textBrush, page, pens);\n          appearance.graphics.restore(state);\n        }\n        rubberStampAnnotation.rotationAngle = this.getRubberStampRotateAngle(pageRotation_1, rotateAngle);\n      }\n    }\n  };\n  /**\n   * @param details\n   * @param page\n   *\n   * @private\n   */\n  AnnotationRenderer.prototype.addMeasure = function (details, page) {\n    var measureShapeAnnotation = details;\n    if (!isNullOrUndefined(measureShapeAnnotation.author)) {\n      measureShapeAnnotation.author = 'Guest';\n    }\n    if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && measureShapeAnnotation.shapeAnnotationType === 'Line') {\n      var points = JSON.parse(measureShapeAnnotation.vertexPoints);\n      var linePoints = this.getSaveVertexPoints(points, page);\n      var lineAnnotation = new PdfLineAnnotation(linePoints);\n      if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n        lineAnnotation.text = measureShapeAnnotation.note.toString();\n      }\n      lineAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n      if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n        lineAnnotation.subject = measureShapeAnnotation.subject.toString();\n      }\n      lineAnnotation.lineIntent = PdfLineIntent.lineDimension;\n      if (!isNullOrUndefined(measureShapeAnnotation.annotName)) {\n        lineAnnotation.name = measureShapeAnnotation.annotName.toString();\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n        var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n        lineAnnotation.color = [strokeColor.r, strokeColor.g, strokeColor.b];\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n        var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n        if (!this.isTransparentColor(fillColor)) {\n          var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n          lineAnnotation.innerColor = innerColor;\n        }\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n        lineAnnotation.opacity = measureShapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = measureShapeAnnotation.thickness;\n      if (!isNullOrUndefined(measureShapeAnnotation.borderStyle) && measureShapeAnnotation.borderStyle !== '') {\n        lineBorder.style = this.getBorderStyle(measureShapeAnnotation.borderStyle);\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.borderDashArray)) {\n        lineBorder.dash = [measureShapeAnnotation.borderDashArray, measureShapeAnnotation.borderDashArray];\n      }\n      lineAnnotation.border = lineBorder;\n      lineAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n      lineAnnotation.lineEndingStyle.begin = this.getLineEndingStyle(measureShapeAnnotation.lineHeadStart);\n      lineAnnotation.lineEndingStyle.end = this.getLineEndingStyle(measureShapeAnnotation.lineHeadEnd);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n        lineAnnotation.modifiedDate = dateValue;\n      }\n      lineAnnotation.caption.type = this.getCaptionType(measureShapeAnnotation.captionPosition);\n      lineAnnotation.caption.cap = measureShapeAnnotation.caption;\n      lineAnnotation.leaderExt = measureShapeAnnotation.leaderLength;\n      lineAnnotation.leaderLine = measureShapeAnnotation.leaderLineExtension;\n      var commentsDetails = measureShapeAnnotation.comments;\n      var bounds = JSON.parse(measureShapeAnnotation.bounds);\n      lineAnnotation.bounds = bounds;\n      lineAnnotation.bounds.x = bounds.left;\n      lineAnnotation.bounds.y = bounds.top;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          lineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], lineAnnotation.bounds));\n        }\n      }\n      var reviewDetails = measureShapeAnnotation.review;\n      lineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, lineAnnotation.bounds));\n      lineAnnotation._dictionary.update('LLO', measureShapeAnnotation.leaderLineOffset);\n      if (measureShapeAnnotation.isPrint && !isNullOrUndefined(measureShapeAnnotation['isPrint']) && Boolean(measureShapeAnnotation['isPrint'].toString())) {\n        if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation['isCommentLock']) && Boolean(measureShapeAnnotation['isCommentLock'].toString())) {\n          lineAnnotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n        } else {\n          lineAnnotation.flags = PdfAnnotationFlag.print;\n        }\n      }\n      if (measureShapeAnnotation.isLocked && !isNullOrUndefined(measureShapeAnnotation['isLocked']) && Boolean(measureShapeAnnotation['isLocked'].toString())) {\n        lineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      } else if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation['isCommentLock']) && Boolean(measureShapeAnnotation['isCommentLock'].toString())) {\n        lineAnnotation.flags = PdfAnnotationFlag.readOnly;\n      } else {\n        lineAnnotation.flags = PdfAnnotationFlag.print;\n      }\n      var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n      if (!isNullOrUndefined(measureDetail)) {\n        lineAnnotation.measure = true;\n        var unit = JSON.parse(measureDetail.distance)[0].unit;\n        lineAnnotation.unit = this.setMeasurementUnit(unit);\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n        lineAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n      }\n      if (measureShapeAnnotation.allowedInteractions && measureShapeAnnotation['allowedInteractions'] != null) {\n        lineAnnotation.setValues('AllowedInteractions', JSON.stringify(measureShapeAnnotation['allowedInteractions']));\n      }\n      lineAnnotation.setAppearance(true);\n      page.annotations.add(lineAnnotation);\n    } else if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && measureShapeAnnotation.shapeAnnotationType === 'Polyline') {\n      var points = JSON.parse(measureShapeAnnotation.vertexPoints);\n      var linePoints = this.getSaveVertexPoints(points, page);\n      var polylineAnnotation = new PdfPolyLineAnnotation(linePoints);\n      polylineAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n      if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n        polylineAnnotation.text = measureShapeAnnotation.note.toString();\n      }\n      polylineAnnotation._dictionary.set('NM', measureShapeAnnotation.annotName.toString());\n      if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n        polylineAnnotation.subject = measureShapeAnnotation.subject.toString();\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n        // eslint-disable-next-line max-len\n        var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n        polylineAnnotation.color = color;\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n        if (!this.isTransparentColor(fillColor)) {\n          var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n          polylineAnnotation.innerColor = innerColor;\n        }\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n        polylineAnnotation.opacity = measureShapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = measureShapeAnnotation.thickness;\n      lineBorder.style = this.getBorderStyle(measureShapeAnnotation.borderStyle);\n      lineBorder.dash = measureShapeAnnotation.borderDashArray;\n      polylineAnnotation.border = lineBorder;\n      polylineAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n      polylineAnnotation.beginLineStyle = this.getLineEndingStyle(measureShapeAnnotation.lineHeadStart);\n      polylineAnnotation.endLineStyle = this.getLineEndingStyle(measureShapeAnnotation.lineHeadEnd);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n        polylineAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = measureShapeAnnotation.comments;\n      var bounds = JSON.parse(measureShapeAnnotation.bounds);\n      polylineAnnotation.bounds = bounds;\n      polylineAnnotation.bounds.x = bounds.left;\n      polylineAnnotation.bounds.y = bounds.top;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          // eslint-disable-next-line max-len\n          polylineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polylineAnnotation.bounds));\n        }\n      }\n      var reviewDetails = measureShapeAnnotation.review;\n      polylineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polylineAnnotation.bounds));\n      polylineAnnotation._dictionary.set('IT', _PdfName.get(measureShapeAnnotation.indent.toString()));\n      if (!isNullOrUndefined(measureShapeAnnotation.isCloudShape) && measureShapeAnnotation.isCloudShape) {\n        var dictionary = new _PdfDictionary(page._crossReference);\n        dictionary.update('S', _PdfName.get('C'));\n        dictionary.update('I', measureShapeAnnotation.cloudIntensity);\n        polylineAnnotation._dictionary.update('BE', dictionary);\n        var rectDifferences = JSON.parse(measureShapeAnnotation.rectangleDifference);\n        if (rectDifferences.length > 0) {\n          var rd = this.getRDValues(rectDifferences);\n          polylineAnnotation._dictionary.update('RD', rd);\n        }\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.isLocked && measureShapeAnnotation.isLocked)) {\n        polylineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      } else if (!isNullOrUndefined(measureShapeAnnotation.isCommentLock) && measureShapeAnnotation.isCommentLock) {\n        polylineAnnotation.flags = PdfAnnotationFlag.readOnly;\n      }\n      if (measureShapeAnnotation.isPrint && measureShapeAnnotation['isPrint'] !== null && Boolean(measureShapeAnnotation['isPrint'].toString())) {\n        if (measureShapeAnnotation.isCommentLock && measureShapeAnnotation['isCommentLock'] !== null && Boolean(measureShapeAnnotation['isCommentLock'].toString())) {\n          polylineAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n        } else {\n          polylineAnnotation._annotFlags = PdfAnnotationFlag.print;\n        }\n      }\n      var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n      if (!isNullOrUndefined(measureDetail)) {\n        polylineAnnotation._dictionary.set('Measure', this.setMeasureDictionary(measureDetail));\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n        polylineAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n      }\n      if (measureShapeAnnotation.allowedInteractions && measureShapeAnnotation['allowedInteractions'] != null) {\n        polylineAnnotation.setValues('AllowedInteractions', JSON.stringify(measureShapeAnnotation['allowedInteractions']));\n      }\n      polylineAnnotation.setAppearance(true);\n      page.annotations.add(polylineAnnotation);\n    } else if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && measureShapeAnnotation.shapeAnnotationType === 'Polyline' && measureShapeAnnotation.shapeAnnotationType === 'PolygonRadius' || measureShapeAnnotation.shapeAnnotationType === 'Circle') {\n      var circleMeasurementAnnotation = this.addCircleMeasurementAnnotation(measureShapeAnnotation, page);\n      page.annotations.add(circleMeasurementAnnotation);\n    } else if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && measureShapeAnnotation.shapeAnnotationType === 'Polygon' && measureShapeAnnotation.indent !== 'PolygonRadius') {\n      var points = JSON.parse(measureShapeAnnotation.vertexPoints);\n      var linePoints = this.getSaveVertexPoints(points, page);\n      var polygonAnnotation = new PdfPolygonAnnotation(linePoints);\n      polygonAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n      if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n        polygonAnnotation.text = measureShapeAnnotation.note.toString();\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.annotName)) {\n        polygonAnnotation.name = measureShapeAnnotation.annotName.toString();\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n        polygonAnnotation.subject = measureShapeAnnotation.subject.toString();\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n        var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n        polygonAnnotation.color = [strokeColor.r, strokeColor.g, strokeColor.b];\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n        var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n        if (!this.isTransparentColor(fillColor)) {\n          var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n          polygonAnnotation.innerColor = innerColor;\n        }\n        if (fillColor.a < 1 && fillColor.a > 0) {\n          polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n          fillColor.a = 1;\n        } else {\n          polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        }\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n        polygonAnnotation.opacity = measureShapeAnnotation.opacity;\n      }\n      var lineBorder = new PdfAnnotationBorder();\n      lineBorder.width = measureShapeAnnotation.thickness;\n      lineBorder.style = measureShapeAnnotation.borderStyle;\n      if (!isNullOrUndefined(measureShapeAnnotation.borderDashArray)) {\n        lineBorder.dash = [measureShapeAnnotation.borderDashArray, measureShapeAnnotation.borderDashArray];\n      }\n      polygonAnnotation.border = lineBorder;\n      polygonAnnotation._dictionary.update('IT', _PdfName.get(measureShapeAnnotation.indent.toString()));\n      polygonAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n      var dateValue = void 0;\n      if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n        dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n        polygonAnnotation.modifiedDate = dateValue;\n      }\n      var commentsDetails = measureShapeAnnotation.comments;\n      var bounds = JSON.parse(measureShapeAnnotation.bounds);\n      polygonAnnotation.bounds = bounds;\n      polygonAnnotation.bounds.x = bounds.left;\n      polygonAnnotation.bounds.y = bounds.top;\n      if (commentsDetails.length > 0) {\n        for (var i = 0; i < commentsDetails.length; i++) {\n          polygonAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polygonAnnotation.bounds));\n        }\n      }\n      var reviewDetails = measureShapeAnnotation.review;\n      polygonAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polygonAnnotation.bounds));\n      if (!isNullOrUndefined(measureShapeAnnotation.isCloudShape) && Boolean(measureShapeAnnotation['isCloudShape'].toString())) {\n        polygonAnnotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n        polygonAnnotation.borderEffect.intensity = measureShapeAnnotation['cloudIntensity'];\n        var rectDifferences = JSON.parse(measureShapeAnnotation.rectangleDifference);\n        if (rectDifferences.length > 0) {\n          var rd = this.getRDValues(rectDifferences);\n          polygonAnnotation._dictionary.update('RD', rd);\n        }\n      }\n      if (measureShapeAnnotation.isPrint && !isNullOrUndefined(measureShapeAnnotation[\"isPrint\"]) && Boolean(measureShapeAnnotation[\"isPrint\"].toString())) {\n        if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation[\"isCommentLock\"]) && Boolean(measureShapeAnnotation[\"isCommentLock\"].toString())) {\n          polygonAnnotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n        } else {\n          polygonAnnotation.flags = PdfAnnotationFlag.print;\n        }\n      }\n      if (measureShapeAnnotation.isLocked && !isNullOrUndefined(measureShapeAnnotation[\"isLocked\"]) && Boolean(measureShapeAnnotation[\"isLocked\"].toString())) {\n        polygonAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      } else if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation[\"isCommentLock\"]) && Boolean(measureShapeAnnotation[\"isCommentLock\"].toString())) {\n        polygonAnnotation.flags = PdfAnnotationFlag.readOnly;\n      } else {\n        polygonAnnotation.flags = PdfAnnotationFlag.print;\n      }\n      var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n      if (!isNullOrUndefined(measureDetail)) {\n        polygonAnnotation._dictionary.set('Measure', this.setMeasureDictionary(measureDetail));\n        if (measureShapeAnnotation[\"indent\"] === \"PolygonVolume\" && measureDetail.hasOwnProperty('depth')) {\n          polygonAnnotation._dictionary.update(\"Depth\", measureDetail[\"depth\"]);\n        }\n      }\n      if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n        polygonAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n      }\n      if (measureShapeAnnotation.allowedInteractions && measureShapeAnnotation[\"allowedInteractions\"] != null) {\n        polygonAnnotation.setValues('AllowedInteractions', JSON.stringify(measureShapeAnnotation[\"allowedInteractions\"]));\n      }\n      polygonAnnotation.setAppearance(true);\n      page.annotations.add(polygonAnnotation);\n    }\n  };\n  /**\n   * @param details\n   * @param page\n   *\n   * @private\n   */\n  AnnotationRenderer.prototype.addStickyNotes = function (details, page) {\n    var pageNo = details.pageNumber;\n    var popUpAnnotation = details;\n    var bounds = JSON.parse(popUpAnnotation.bounds);\n    var cropValues = this.getCropBoxValue(page, false);\n    var left = this.convertPixelToPoint(bounds.left);\n    var top = this.convertPixelToPoint(bounds.top);\n    var width = this.convertPixelToPoint(bounds.width);\n    var height = this.convertPixelToPoint(bounds.height);\n    var cropX = 0;\n    var cropY = 0;\n    if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    } else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    }\n    var annotation = new PdfPopupAnnotation(null, cropX + left, cropY + top, width, height);\n    if (popUpAnnotation['author'] === null) {\n      popUpAnnotation['author'] = 'Guest';\n    }\n    if (popUpAnnotation['note'] != null) {\n      annotation.text = popUpAnnotation['note'].toString();\n    }\n    annotation.author = popUpAnnotation['author'].toString();\n    if (popUpAnnotation['subject'] != null) {\n      annotation.subject = popUpAnnotation['subject'].toString();\n    }\n    annotation._dictionary.set('NM', popUpAnnotation.annotName.toString());\n    var dateValue;\n    if (!isNullOrUndefined(popUpAnnotation.modifiedDate) && !isNaN(Date.parse(popUpAnnotation.modifiedDate))) {\n      dateValue = new Date(Date.parse(popUpAnnotation.modifiedDate));\n      annotation.modifiedDate = dateValue;\n    }\n    var commentsDetails = popUpAnnotation.comments;\n    if (commentsDetails.length > 0) {\n      for (var i = 0; i < commentsDetails.length; i++) {\n        annotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], annotation.bounds));\n      }\n    }\n    var reviewDetails = popUpAnnotation.review;\n    annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, annotation.bounds));\n    var color = [255, 255, 51];\n    annotation.color = color;\n    annotation.opacity = popUpAnnotation.opacity;\n    annotation.icon = PdfPopupIcon.comment;\n    var isAnnotationFlagSet = false;\n    if (!isNullOrUndefined(popUpAnnotation.annotationSettings)) {\n      var annotationSettings = popUpAnnotation.annotationSettings;\n      var isLock = annotationSettings.isLock;\n      if (isLock) {\n        annotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n      }\n    } else if (!isNullOrUndefined(popUpAnnotation.isCommentLock) && popUpAnnotation.isCommentLock) {\n      annotation.flags = PdfAnnotationFlag.readOnly;\n    } else {\n      annotation.flags = PdfAnnotationFlag.print;\n    }\n    if (!isNullOrUndefined(popUpAnnotation.customData)) {\n      annotation.setValues('CustomData', popUpAnnotation.customData);\n    }\n    page.annotations.add(annotation);\n  };\n  /**\n   * @param details\n   * @param page\n   * @param textFont\n   *\n   * @private\n   */\n  AnnotationRenderer.prototype.addFreeText = function (details, page, textFont) {\n    var _this = this;\n    var pageNo = details.pageIndex;\n    var freeTextAnnotation = details;\n    var bounds = JSON.parse(freeTextAnnotation.bounds);\n    var cropValues = this.getCropBoxValue(page, false);\n    var left = this.convertPixelToPoint(bounds.left);\n    var top = this.convertPixelToPoint(bounds.top);\n    var width = this.convertPixelToPoint(bounds.width);\n    var height = this.convertPixelToPoint(bounds.height);\n    var cropX = 0;\n    var cropY = 0;\n    if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    } else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    }\n    var annotation = new PdfFreeTextAnnotation(cropX + left, cropY + top, width, height);\n    annotation.setAppearance(true);\n    if (freeTextAnnotation['author'] === null) {\n      freeTextAnnotation['author'] = 'Guest';\n    }\n    annotation.author = freeTextAnnotation['author'].toString();\n    var dateValue;\n    if (!isNullOrUndefined(freeTextAnnotation.modifiedDate) && !isNaN(Date.parse(freeTextAnnotation.modifiedDate))) {\n      dateValue = new Date(Date.parse(freeTextAnnotation.modifiedDate));\n      annotation.modifiedDate = dateValue;\n    }\n    var reviewDetails = freeTextAnnotation.review;\n    annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, annotation.bounds));\n    annotation._dictionary.set('NM', freeTextAnnotation.annotName.toString());\n    annotation.lineEndingStyle = PdfLineEndingStyle.openArrow;\n    annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n    var fontSize = 0;\n    if (!isNullOrUndefined(freeTextAnnotation.fontSize)) {\n      fontSize = parseFloat(freeTextAnnotation.fontSize);\n    }\n    fontSize = !isNullOrUndefined(fontSize) && !isNaN(fontSize) && fontSize > 0 ? fontSize : 16; //default 16px\n    var fontFamily = this.getFontFamily(freeTextAnnotation.fontFamily);\n    var fontJson = {};\n    if (freeTextAnnotation.hasOwnProperty('font') && !isNullOrUndefined(freeTextAnnotation.font)) {\n      fontJson = freeTextAnnotation.font;\n    }\n    var fontStyle = this.getFontStyle(fontJson);\n    annotation.font = new PdfStandardFont(fontFamily, this.convertPixelToPoint(fontSize), fontStyle);\n    if (!isNullOrUndefined(textFont) && textFont.length > 0) {\n      textFont.Keys.forEach(function (key) {\n        // Need to implement font stream\n        var fontStream = textFont[\"\" + key];\n        if (freeTextAnnotation.hasOwnProperty('dynamicText') && !isNullOrUndefined(freeTextAnnotation.dynamicText.toString())) {\n          var fontAnnotation = new PdfTrueTypeFont(fontStream, _this.convertPixelToPoint(fontSize), PdfFontStyle.regular);\n          var format = new PdfStringFormat();\n          fontAnnotation.measureString(freeTextAnnotation.dynamicText.toString(), format);\n          var glyphPresent = fontAnnotation._dictionary.has('IsContainsFont') ? fontAnnotation._dictionary.get('IsContainsFont') : false;\n          if (glyphPresent) {\n            annotation.font = new PdfTrueTypeFont(fontStream, _this.convertPixelToPoint(fontSize));\n          }\n        }\n      });\n    }\n    if (freeTextAnnotation['subject'] != null) {\n      annotation.subject = freeTextAnnotation['subject'].toString();\n    }\n    // Markup Text\n    annotation.text = '';\n    if (freeTextAnnotation.hasOwnProperty('dynamicText') && !isNullOrUndefined(freeTextAnnotation.dynamicText.toString())) {\n      // Markup Text\n      annotation.text = freeTextAnnotation.dynamicText.toString();\n    }\n    annotation.rotationAngle = this.getRotateAngle(freeTextAnnotation.rotateAngle);\n    var lineBorder = new PdfAnnotationBorder();\n    lineBorder.width = !isNullOrUndefined(freeTextAnnotation.thickness) ? freeTextAnnotation.thickness : 1;\n    annotation.border = lineBorder;\n    if (freeTextAnnotation.hasOwnProperty('padding') && !isNullOrUndefined(freeTextAnnotation.padding)) {\n      var paddingValues = freeTextAnnotation.padding;\n      // let padding: PdfPaddings = new PdfPaddings(); // PdfPaddings not exist in ej2-pdf\n      // annotation.setPaddings(padding);  // setPaddings not exist\n    }\n    annotation.opacity = !isNullOrUndefined(freeTextAnnotation.opacity) ? freeTextAnnotation.opacity : 1;\n    if (!isNullOrUndefined(freeTextAnnotation.strokeColor)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var strokeColor = JSON.parse(freeTextAnnotation.strokeColor);\n      // eslint-disable-next-line max-len\n      var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n      annotation.borderColor = color;\n      // Modified Implementation for setting border width for transparent border\n      if (this.isTransparentColor(strokeColor)) {\n        annotation.border.width = !isNullOrUndefined(freeTextAnnotation.thickness) ? freeTextAnnotation.thickness : 0;\n      }\n    }\n    if (!isNullOrUndefined(freeTextAnnotation.fillColor)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var fillColor = JSON.parse(freeTextAnnotation.fillColor);\n      if (!this.isTransparentColor(fillColor)) {\n        var color = [fillColor.r, fillColor.g, fillColor.b];\n        annotation.color = color;\n      }\n      if (fillColor.a < 1 && fillColor.a > 0) {\n        annotation._dictionary.update('FillOpacity', fillColor.a);\n        fillColor.a = 1;\n      } else {\n        annotation._dictionary.update('FillOpacity', fillColor.a);\n      }\n    }\n    if (!isNullOrUndefined(freeTextAnnotation.fontColor)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var textMarkupColor = JSON.parse(freeTextAnnotation.fontColor);\n      if (!this.isTransparentColor(textMarkupColor)) {\n        var fontColor = [textMarkupColor.r, textMarkupColor.g, textMarkupColor.b];\n        annotation.textMarkUpColor = fontColor;\n      }\n    }\n    var commentsDetails = freeTextAnnotation.comments;\n    if (commentsDetails.length > 0) {\n      for (var i = 0; i < commentsDetails.length; i++) {\n        // eslint-disable-next-line max-len\n        annotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], annotation.bounds));\n      }\n    }\n    if (freeTextAnnotation.hasOwnProperty('annotationSettings') && !isNullOrUndefined(freeTextAnnotation.annotationSettings)) {\n      var annotationSettings = freeTextAnnotation.annotationSettings;\n      if (annotationSettings.hasOwnProperty('isLock') && !isNullOrUndefined(annotationSettings.isLock)) {\n        if (annotationSettings.isLock) {\n          annotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n        }\n      }\n    } else if (!isNullOrUndefined(freeTextAnnotation.isCommentLock) && freeTextAnnotation.isCommentLock) {\n      annotation.flags = PdfAnnotationFlag.readOnly;\n    } else {\n      annotation.flags = PdfAnnotationFlag.print;\n    }\n    if (!isNullOrUndefined(freeTextAnnotation.customData)) {\n      annotation.setValues('CustomData', freeTextAnnotation.customData);\n    }\n    if (freeTextAnnotation.hasOwnProperty(\"textAlign\") && !isNullOrUndefined(freeTextAnnotation.textAlign)) {\n      annotation.textAlignment = this.getPdfTextAlignment(freeTextAnnotation.textAlign.toString().toLowerCase());\n    }\n    var isReadonly = false;\n    var isPrint = false;\n    if (freeTextAnnotation.hasOwnProperty(\"isReadonly\")) {\n      isReadonly = !isNullOrUndefined(freeTextAnnotation.isReadonly) ? freeTextAnnotation.isReadonly : false;\n    }\n    if (freeTextAnnotation.hasOwnProperty(\"isPrint\")) {\n      isPrint = !isNullOrUndefined(freeTextAnnotation.isPrint) ? freeTextAnnotation.isPrint : false;\n    }\n    if (isReadonly && isPrint) {\n      annotation.flags = PdfAnnotationFlag.readOnly | PdfAnnotationFlag.print;\n    } else if (isPrint) {\n      annotation.flags = PdfAnnotationFlag.print;\n    } else if (isReadonly) {\n      annotation.flags = PdfAnnotationFlag.readOnly;\n    }\n    if (freeTextAnnotation.hasOwnProperty(\"allowedInteractions\") && !isNullOrUndefined(freeTextAnnotation.allowedInteractions)) {\n      annotation.setValues('AllowedInteractions', JSON.stringify(freeTextAnnotation.allowedInteractions));\n    }\n    page.annotations.add(annotation);\n  };\n  // eslint-disable-next-line max-len\n  AnnotationRenderer.prototype.renderSignHereStamp = function (rubberStampAnnotation, rectangle, icon, textBrush, page, pens) {\n    var stringFormat = new PdfStringFormat();\n    var font = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.bold | PdfFontStyle.italic);\n    stringFormat.alignment = PdfTextAlignment.center;\n    stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n    var point1 = [0, 0];\n    var point2 = [0, 0];\n    var drawingPath = new _PdfPath();\n    var appearance = rubberStampAnnotation.appearance.normal;\n    if (this.defaultHeight > 0 && this.defaultWidth > 0) {\n      appearance.graphics.scaleTransform(rectangle.width / (this.defaultWidth + 4), rectangle.height / 28.00);\n    }\n    point1 = [this.defaultWidth / 2 + 1, 15, 0, 0];\n    point2 = [0, 0];\n    drawingPath._addLine(point1[0], point1[1], point2[0], point2[1]);\n    var pointValues = [drawingPath._points[0][0], drawingPath._points[0][1], 0, 0];\n    appearance.graphics.drawString(icon.toUpperCase(), font, pointValues, pens, textBrush, stringFormat);\n  };\n  AnnotationRenderer.prototype.retriveDefaultWidth = function (subject) {\n    switch (subject.trim()) {\n      case 'Witness':\n        this.defaultWidth = 97.39;\n        this.defaultHeight = 16.84;\n        break;\n      case 'Initial Here':\n        this.defaultWidth = 151.345;\n        this.defaultHeight = 16.781;\n        break;\n      case 'Sign Here':\n        this.defaultWidth = 121.306;\n        this.defaultHeight = 16.899;\n        break;\n      default:\n        this.defaultWidth = 0;\n        this.defaultHeight = 0;\n        break;\n    }\n  };\n  // eslint-disable-next-line max-len\n  AnnotationRenderer.prototype.renderDynamicStamp = function (rubberStampAnnotation, icon, text, textBrush, rectangle, pens, page) {\n    var stringFormat = new PdfStringFormat();\n    stringFormat.alignment = PdfTextAlignment.left;\n    stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n    var stampFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.bold | PdfFontStyle.italic);\n    // eslint-disable-next-line max-len\n    var detailsFont = new PdfStandardFont(PdfFontFamily.helvetica, rectangle.height / 6, PdfFontStyle.bold | PdfFontStyle.italic);\n    var appearance = rubberStampAnnotation.appearance.normal;\n    var point1 = [0, 0];\n    var point2 = [0, 0];\n    var drawingPath = new _PdfPath();\n    point1 = [5, rectangle.height / 3];\n    point2 = [5, rectangle.height - detailsFont.size * 2];\n    drawingPath._addLine(point1[0], point1[1], point2[0], point2[1]);\n    var stampTypeBounds = [drawingPath._points[0][0], drawingPath._points[0][1], 0, 0];\n    var stampTimeStampbounds = [drawingPath._points[1][0], drawingPath._points[1][1], rectangle.width - drawingPath._points[1][0], rectangle.height - drawingPath._points[1][1]];\n    appearance.graphics.drawString(icon.toUpperCase(), stampFont, stampTypeBounds, pens, textBrush, stringFormat);\n    appearance.graphics.drawString(text, detailsFont, stampTimeStampbounds, pens, textBrush, stringFormat);\n  };\n  AnnotationRenderer.prototype.calculateBoundsXY = function (wrapperBounds, bounds, pageNo, pdfPageBase) {\n    var boundsXY = new Rect();\n    var pageSize = this.getPageSize(pageNo);\n    if (pdfPageBase.pageRotation === PdfRotationAngle.angle90) {\n      boundsXY.x = this.convertPixelToPoint(wrapperBounds.y);\n      boundsXY.y = this.convertPixelToPoint(pageSize.width - wrapperBounds.x - wrapperBounds.width);\n    } else if (pdfPageBase.pageRotation === PdfRotationAngle.angle180) {\n      boundsXY.x = this.convertPixelToPoint(pageSize.width - wrapperBounds.x - wrapperBounds.width);\n      boundsXY.y = this.convertPixelToPoint(pageSize.height - wrapperBounds.y - wrapperBounds.height);\n    } else if (pdfPageBase.pageRotation === PdfRotationAngle.angle270) {\n      boundsXY.x = this.convertPixelToPoint(pageSize.height - wrapperBounds.y - wrapperBounds.height);\n      boundsXY.y = this.convertPixelToPoint(wrapperBounds.x);\n    } else {\n      boundsXY.x = this.convertPixelToPoint(wrapperBounds.x);\n      boundsXY.y = this.convertPixelToPoint(wrapperBounds.y);\n    }\n    return boundsXY;\n  };\n  AnnotationRenderer.prototype.getPageSize = function (pageNumber) {\n    var page = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(pageNumber);\n    var size = page.size;\n    return new Size(this.convertPointToPixel(size[0]), this.convertPointToPixel(size[1]));\n  };\n  AnnotationRenderer.prototype.setMeasurementUnit = function (unit) {\n    var measurementUnit;\n    switch (unit) {\n      case 'cm':\n        measurementUnit = PdfMeasurementUnit.centimeter;\n        break;\n      case 'in':\n        measurementUnit = PdfMeasurementUnit.inch;\n        break;\n      case 'mm':\n        measurementUnit = PdfMeasurementUnit.millimeter;\n        break;\n      case 'pt':\n        measurementUnit = PdfMeasurementUnit.point;\n        break;\n      case 'p':\n        measurementUnit = PdfMeasurementUnit.pica;\n        break;\n    }\n    return measurementUnit;\n  };\n  AnnotationRenderer.prototype.getRubberStampRotateAngle = function (angleString, rotationAngle) {\n    var angle = 0;\n    switch (angleString) {\n      case 'RotateAngle0':\n        angle = 0;\n        break;\n      case 'RotateAngle180':\n        angle = 180;\n        break;\n      case 'RotateAngle270':\n        angle = 270;\n        break;\n      case 'RotateAngle90':\n        angle = 90;\n        break;\n      default:\n        break;\n    }\n    angle -= rotationAngle;\n    return angle;\n  };\n  AnnotationRenderer.prototype.getFontFamily = function (fontFamily) {\n    var font = PdfFontFamily.helvetica;\n    fontFamily = !isNullOrUndefined(fontFamily) && fontFamily !== '' ? fontFamily : 'Helvetica';\n    switch (fontFamily) {\n      case 'Helvetica':\n        font = PdfFontFamily.helvetica;\n        break;\n      case 'Courier':\n        font = PdfFontFamily.courier;\n        break;\n      case 'Times New Roman':\n        font = PdfFontFamily.timesRoman;\n        break;\n      case 'Symbol':\n        font = PdfFontFamily.symbol;\n        break;\n      case 'ZapfDingbats':\n        font = PdfFontFamily.zapfDingbats;\n        break;\n      default:\n        break;\n    }\n    return font;\n  };\n  AnnotationRenderer.prototype.getFontStyle = function (fontJson) {\n    var fontStyle = PdfFontStyle.regular;\n    if (!isNullOrUndefined(fontJson)) {\n      if (fontJson.isBold) {\n        fontStyle = fontStyle | PdfFontStyle.bold;\n      }\n      if (fontJson.isItalic) {\n        fontStyle = fontStyle | PdfFontStyle.italic;\n      }\n      if (fontJson.isStrikeout) {\n        fontStyle = fontStyle | PdfFontStyle.strikeout;\n      }\n      if (fontJson.isUnderline) {\n        fontStyle = fontStyle | PdfFontStyle.underline;\n      }\n    }\n    return fontStyle;\n  };\n  AnnotationRenderer.prototype.getPdfTextAlignment = function (alignment) {\n    var textAlignment = PdfTextAlignment.left;\n    switch (alignment) {\n      case 'center':\n        textAlignment = PdfTextAlignment.center;\n        break;\n      case 'right':\n        textAlignment = PdfTextAlignment.right;\n        break;\n      case 'justify':\n        textAlignment = PdfTextAlignment.justify;\n        break;\n      default:\n        break;\n    }\n    return textAlignment;\n  };\n  // eslint-disable-next-line max-len\n  AnnotationRenderer.prototype.drawStampAsPath = function (resultObjects, rubberStampAnnotation, textBrush, stampBrush) {\n    var transformMatrix = new Matrix(1, 0, 0, 1, 0, 0);\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n    var graphics;\n    var graphicsPath = new _PdfPath();\n    var stampObjects = resultObjects;\n    for (var index = 0; index < stampObjects.length; index++) {\n      var val = stampObjects[parseInt(index.toString(), 10)];\n      var path = val.command.toString();\n      if (path === 'M') {\n        graphicsPath._startFigure();\n        currentPoint = {\n          x: val.x,\n          y: val.y\n        };\n      }\n      if (path === 'L') {\n        var array = [currentPoint, {\n          x: val.x,\n          y: val.y\n        }];\n        this.transformPoints(array);\n        var array1 = [{\n          x: array[0].x,\n          y: array[0].y\n        }, {\n          x: array[1].x,\n          y: array[1].y\n        }];\n        graphicsPath._addLine(array1[0].x, array1[0].y, array1[1].x, array1[1].y);\n        currentPoint = {\n          x: val.x,\n          y: val.y\n        };\n      }\n      if (path === 'C') {\n        var array2 = [currentPoint, {\n          x: val.x,\n          y: val.y\n        }, {\n          x: val.x1,\n          y: val.y1\n        }, {\n          x: val.x2,\n          y: val.y2\n        }];\n        this.transformPoints(array2);\n        var array21 = [{\n          x: array2[0].x,\n          y: array2[0].y\n        }, {\n          x: array2[1].x,\n          y: array2[1].y\n        }, {\n          x: array2[2].x,\n          y: array2[2].y\n        }, {\n          x: array2[3].x,\n          y: array2[3].y\n        }];\n        // eslint-disable-next-line max-len\n        graphicsPath._addBezier(array21[0].x, array21[0].y, array21[1].x, array21[1].y, array21[2].x, array21[2].y, array21[3].x, array21[3].y);\n        currentPoint = {\n          x: val.x,\n          y: val.y\n        };\n      }\n      if (path === 'Z') {\n        graphicsPath._closeFigure();\n      }\n    }\n  };\n  AnnotationRenderer.prototype.transformPoints = function (points) {\n    if (!isNullOrUndefined(points)) {\n      for (var i = 0; i < points.length; i++) {\n        points[parseInt(i.toString(), 10)] = this.transform(points[parseInt(i.toString(), 10)]);\n      }\n    }\n  };\n  AnnotationRenderer.prototype.transform = function (point) {\n    var x = point.x;\n    var y = point.y;\n    return {\n      x: x,\n      y: y\n    };\n  };\n  AnnotationRenderer.prototype.getIconName = function (stampAnnotation, subject, rubberStampAnnotation) {\n    var iconExists = true;\n    switch (subject.trim()) {\n      case 'Approved':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.approved;\n        break;\n      case 'Confidential':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.confidential;\n        break;\n      case 'Not Approved':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.notApproved;\n        break;\n      case 'Draft':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.draft;\n        break;\n      case 'Final':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.final;\n        break;\n      case 'Completed':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.completed;\n        break;\n      case 'For Public Release':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n        break;\n      case 'Not For Public Release':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n        break;\n      case 'For Comment':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.forComment;\n        break;\n      case 'Void':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.void;\n        break;\n      case 'Preliminary Results':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n        break;\n      case 'Information Only':\n        rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.informationOnly;\n        break;\n      default:\n        iconExists = false;\n        break;\n    }\n    return iconExists;\n  };\n  AnnotationRenderer.prototype.addCircleMeasurementAnnotation = function (measureShapeAnnotation, page) {\n    var bounds = JSON.parse(measureShapeAnnotation.bounds);\n    var cropValues = this.getCropBoxValue(page, false);\n    var left = this.convertPixelToPoint(bounds.left);\n    var top = this.convertPixelToPoint(bounds.top);\n    var width = this.convertPixelToPoint(bounds.width);\n    var height = this.convertPixelToPoint(bounds.height);\n    if (isNullOrUndefined(bounds.left)) {\n      measureShapeAnnotation.bounds.left = 0;\n    }\n    if (isNullOrUndefined(bounds.top)) {\n      measureShapeAnnotation.bounds.top = 0;\n    }\n    var cropX = 0;\n    var cropY = 0;\n    if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    } else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    }\n    // eslint-disable-next-line max-len\n    var circleAnnotation = new PdfCircleAnnotation(cropX + left, cropY + top, width, height);\n    if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n      circleAnnotation.text = measureShapeAnnotation.note.toString();\n    }\n    circleAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n    circleAnnotation._dictionary.set('NM', measureShapeAnnotation.annotName.toString());\n    if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n      circleAnnotation.subject = measureShapeAnnotation.subject.toString();\n    }\n    if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n      // eslint-disable-next-line max-len\n      var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n      circleAnnotation.color = color;\n    }\n    if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n      if (!this.isTransparentColor(fillColor)) {\n        var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n        circleAnnotation.innerColor = innerColor;\n      }\n      if (fillColor.a < 1 && fillColor.a > 0) {\n        circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n        fillColor.a = 1;\n      } else {\n        circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n      }\n    }\n    if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n      circleAnnotation.opacity = measureShapeAnnotation.opacity;\n    }\n    var lineBorder = new PdfAnnotationBorder();\n    lineBorder.width = measureShapeAnnotation.thickness;\n    lineBorder.style = measureShapeAnnotation.borderStyle;\n    lineBorder.dash = measureShapeAnnotation.borderDashArray;\n    circleAnnotation.border = lineBorder;\n    circleAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n    var dateValue;\n    if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n      dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n      circleAnnotation.modifiedDate = dateValue;\n    }\n    var commentsDetails = measureShapeAnnotation.comments;\n    if (commentsDetails.length > 0) {\n      for (var i = 0; i < commentsDetails.length; i++) {\n        // eslint-disable-next-line max-len\n        circleAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], circleAnnotation.bounds));\n      }\n    }\n    var reviewDetails = measureShapeAnnotation.review;\n    circleAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, circleAnnotation.bounds));\n    if (!isNullOrUndefined(measureShapeAnnotation.isCloudShape) && measureShapeAnnotation.isCloudShape) {\n      var borderEffect = new PdfBorderEffect();\n      borderEffect.style = PdfBorderEffectStyle.cloudy;\n      borderEffect.intensity = measureShapeAnnotation.cloudIntensity;\n      circleAnnotation._borderEffect = borderEffect;\n      var rectDifferences = JSON.parse(measureShapeAnnotation.rectangleDifference);\n      if (rectDifferences.length > 0) {\n        var rd = this.getRDValues(rectDifferences);\n        circleAnnotation._dictionary.update('RD', rd);\n      }\n    }\n    if (!isNullOrUndefined(measureShapeAnnotation.isLocked) && measureShapeAnnotation.isLocked) {\n      circleAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n    } else if (!isNullOrUndefined(measureShapeAnnotation.isCommentLock) && measureShapeAnnotation.isCommentLock) {\n      circleAnnotation.flags = PdfAnnotationFlag.readOnly;\n    } else {\n      circleAnnotation.flags = PdfAnnotationFlag.print;\n    }\n    circleAnnotation.measureType = PdfCircleMeasurementType.radius;\n    var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n    if (!isNullOrUndefined(measureDetail)) {\n      circleAnnotation._dictionary.set('Measure', this.setMeasureDictionary(measureDetail));\n    }\n    if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n      circleAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n    }\n    circleAnnotation.setAppearance(true);\n    return circleAnnotation;\n  };\n  AnnotationRenderer.prototype.setMeasureDictionary = function (measureDetail) {\n    var measureDictionary = new _PdfDictionary();\n    measureDictionary.set('Type', 'Measure');\n    measureDictionary.set('R', measureDetail.ratio);\n    if (!isNullOrUndefined(measureDetail.x)) {\n      var xNumberFormat = this.createNumberFormat(measureDetail.x);\n      measureDictionary.set('X', xNumberFormat);\n    }\n    if (!isNullOrUndefined(measureDetail.distance)) {\n      var dNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.distance));\n      measureDictionary.set('D', dNumberFormat);\n    }\n    if (!isNullOrUndefined(measureDetail.area)) {\n      var aNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.area));\n      measureDictionary.set('A', aNumberFormat);\n    }\n    if (!isNullOrUndefined(measureDetail.angle)) {\n      var tNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.angle));\n      measureDictionary.set('T', tNumberFormat);\n    }\n    if (!isNullOrUndefined(measureDetail.volume)) {\n      var vNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.volume));\n      measureDictionary.set('V', vNumberFormat);\n    }\n    return measureDictionary;\n  };\n  AnnotationRenderer.prototype.createNumberFormat = function (numberFormatList) {\n    var numberFormats = [];\n    if (isNullOrUndefined(numberFormatList) || numberFormatList.length === 0) {\n      return undefined;\n    }\n    for (var index = 0; index < numberFormatList.length; index++) {\n      var numberFormatDictionary = new _PdfDictionary();\n      var numberFormat = numberFormatList[parseInt(index.toString(), 10)];\n      numberFormatDictionary.set('Type', 'NumberFormat');\n      numberFormatDictionary.set('U', numberFormat.unit);\n      numberFormatDictionary.set('F', numberFormat.fractionalType);\n      numberFormatDictionary.set('D', numberFormat.denominator);\n      numberFormatDictionary.set('C', numberFormat.conversionFactor);\n      numberFormatDictionary.set('FD', numberFormat.formatDenominator);\n      numberFormats.push(numberFormatDictionary);\n    }\n    return numberFormats;\n  };\n  AnnotationRenderer.prototype.checkAnnotationLock = function (annotation) {\n    var isLock = false;\n    if (!isNullOrUndefined(annotation.annotationSettings)) {\n      var annotationSettings = annotation.annotationSettings;\n      if (!isNullOrUndefined(annotationSettings.isLock)) {\n        isLock = annotationSettings.isLock;\n      }\n    }\n    return isLock;\n  };\n  AnnotationRenderer.prototype.getSaveVertexPoints = function (points, page) {\n    var cropValues = this.getCropBoxValue(page, false);\n    if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n      cropValues.x = 0;\n      cropValues.y = 0;\n    }\n    var pageHeight = page._size[1];\n    var pointList = [];\n    for (var index = 0; index < points.length; index++) {\n      var x = this.convertPixelToPoint(points[parseInt(index.toString(), 10)].x) + cropValues.x;\n      pointList.push(x);\n      var y = pageHeight - this.convertPixelToPoint(points[parseInt(index.toString(), 10)].y) + cropValues.y;\n      pointList.push(y);\n    }\n    return pointList;\n  };\n  AnnotationRenderer.prototype.getLineEndingStyle = function (endingStyle) {\n    var style = PdfLineEndingStyle.none;\n    switch (endingStyle) {\n      case 'Square':\n        style = PdfLineEndingStyle.square;\n        break;\n      case 'ClosedArrow':\n        style = PdfLineEndingStyle.closedArrow;\n        break;\n      case 'RClosedArrow':\n        style = PdfLineEndingStyle.rClosedArrow;\n        break;\n      case 'OpenArrow':\n        style = PdfLineEndingStyle.openArrow;\n        break;\n      case 'ROpenArrow':\n        style = PdfLineEndingStyle.rOpenArrow;\n        break;\n      case 'Butt':\n        style = PdfLineEndingStyle.butt;\n        break;\n      case 'Circle':\n        style = PdfLineEndingStyle.circle;\n        break;\n      case 'Diamond':\n        style = PdfLineEndingStyle.diamond;\n        break;\n      case 'Slash':\n        style = PdfLineEndingStyle.slash;\n        break;\n    }\n    return style;\n  };\n  AnnotationRenderer.prototype.getCaptionType = function (captionPosition) {\n    var captionType = PdfLineCaptionType.inline;\n    switch (captionPosition) {\n      case 'Inline':\n        captionType = PdfLineCaptionType.inline;\n        break;\n      case 'Top':\n        captionType = PdfLineCaptionType.top;\n        break;\n    }\n    return captionType;\n  };\n  AnnotationRenderer.prototype.addReviewCollections = function (popupAnnotation, bounds) {\n    var annotation = new PdfPopupAnnotation(null, bounds.x, bounds.y, bounds.width, bounds.height);\n    if (popupAnnotation['state'] != null) {\n      annotation.state = this.getReviewState(popupAnnotation['state'].toString());\n      annotation.stateModel = PdfAnnotationStateModel.review;\n    }\n    return annotation;\n  };\n  AnnotationRenderer.prototype.addCommentsCollection = function (popupAnnotation, bounds) {\n    // eslint-disable-next-line max-len\n    var annotation = new PdfPopupAnnotation();\n    annotation.text = popupAnnotation.note;\n    annotation.author = popupAnnotation.author;\n    annotation.subject = popupAnnotation.subject;\n    if (!isNullOrUndefined(popupAnnotation.note)) {\n      annotation.text = popupAnnotation['note'].toString();\n    } else {\n      annotation._annotFlags = PdfAnnotationFlag.print;\n    }\n    var reviewDetails = popupAnnotation.review;\n    annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, bounds));\n    var dateValue;\n    if (!isNullOrUndefined(popupAnnotation.modifiedDate) && !isNaN(Date.parse(popupAnnotation.modifiedDate))) {\n      dateValue = new Date(Date.parse(popupAnnotation.modifiedDate));\n      annotation.modifiedDate = dateValue;\n    }\n    annotation._dictionary.set('NM', popupAnnotation.annotName.toString());\n    return annotation;\n  };\n  AnnotationRenderer.prototype.getReviewState = function (state) {\n    var reviewState;\n    switch (state) {\n      case 'Accepted':\n        reviewState = PdfAnnotationState.accepted;\n        break;\n      case 'Cancelled':\n        reviewState = PdfAnnotationState.cancel;\n        break;\n      case 'Completed':\n        reviewState = PdfAnnotationState.completed;\n        break;\n      case 'Rejected':\n        reviewState = PdfAnnotationState.rejected;\n        break;\n      case 'None':\n        reviewState = PdfAnnotationState.none;\n        break;\n      default:\n        reviewState = PdfAnnotationState.unmarked;\n        break;\n    }\n    return reviewState;\n  };\n  AnnotationRenderer.prototype.convertPixelToPoint = function (value) {\n    return value * 72 / 96;\n  };\n  AnnotationRenderer.prototype.convertPointToPixel = function (value) {\n    return value * 96 / 72;\n  };\n  AnnotationRenderer.prototype.isTransparentColor = function (fillColor) {\n    var isWhite = fillColor && fillColor.r === 255 && fillColor.g === 255 && fillColor.b === 255;\n    return fillColor && fillColor.a === 0 && isWhite;\n  };\n  AnnotationRenderer.prototype.getRDValues = function (values) {\n    var rectDifference = [];\n    for (var i = 0; i < values.length; i++) {\n      rectDifference.push(parseFloat(values[parseInt(i.toString(), 10)]));\n    }\n    return rectDifference;\n  };\n  AnnotationRenderer.prototype.getRotateAngle = function (angleString) {\n    var angle = PdfRotationAngle.angle0;\n    switch (angleString) {\n      case 'RotateAngle0':\n        angle = PdfRotationAngle.angle0;\n        break;\n      case 'RotateAngle180':\n        angle = PdfRotationAngle.angle180;\n        break;\n      case 'RotateAngle270':\n        angle = PdfRotationAngle.angle270;\n        break;\n      case 'RotateAngle90':\n        angle = PdfRotationAngle.angle90;\n        break;\n    }\n    return angle;\n  };\n  /**\n   * @private\n   * @param inkAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param pageNumber\n   * @param loadedPage\n   * @returns\n   */\n  AnnotationRenderer.prototype.loadSignature = function (inkAnnot, height, width, pageRotation, pageNumber, loadedPage) {\n    var signature = new SignatureAnnotationBase();\n    var outputstring = '';\n    if (!isNullOrUndefined(inkAnnot.inkPointsCollection)) {\n      for (var index = 0; index < inkAnnot.inkPointsCollection.length; index++) {\n        var inkList = inkAnnot.inkPointsCollection[parseInt(index.toString(), 10)];\n        for (var j = 0; j < inkList.length; j += 2) {\n          var x = void 0;\n          var y = void 0;\n          if (j === 0) {\n            x = inkList[parseInt(j.toString(), 10)];\n            y = height - inkList[j + 1];\n            outputstring += 'M' + x + ',' + y + ' ';\n          } else {\n            x = inkList[parseInt(j.toString(), 10)];\n            y = height - inkList[j + 1];\n            outputstring += 'L' + x + ',' + y + ' ';\n          }\n        }\n      }\n    }\n    signature.AnnotationType = 'Signature';\n    signature.Bounds = this.getBounds(inkAnnot.bounds, width, height, pageRotation);\n    signature.Opacity = inkAnnot.opacity;\n    signature.Thickness = inkAnnot.border.width;\n    signature.PathData = outputstring;\n    signature.StrokeColor = 'rgba(' + inkAnnot.color[0] + ',' + inkAnnot.color[1] + ',' + inkAnnot.color[2] + ',' + (inkAnnot.color[3] ? inkAnnot.color[3] : 1) + ')';\n    signature.PageNumber = pageNumber;\n    signature.SignatureName = inkAnnot.name;\n    return signature;\n  };\n  /**\n   * @private\n   * @param inkAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param pageNumber\n   * @param loadedPage\n   * @returns\n   */\n  AnnotationRenderer.prototype.loadInkAnnotation = function (inkAnnot, height, width, pageRotation, pageNumber, loadedPage) {\n    var signature = new InkSignatureAnnotation();\n    var outputstring = '';\n    if (!isNullOrUndefined(inkAnnot.inkPointsCollection)) {\n      for (var index = 0; index < inkAnnot.inkPointsCollection.length; index++) {\n        var inkList = inkAnnot.inkPointsCollection[parseInt(index.toString(), 10)];\n        for (var j = 0; j < inkList.length; j += 2) {\n          var x = void 0;\n          var y = void 0;\n          if (inkAnnot._page.rotation == PdfRotationAngle.angle90) {\n            x = inkList[j + 1];\n            y = inkList[parseInt(j.toString(), 10)];\n          } else if (inkAnnot._page.rotation == PdfRotationAngle.angle180) {\n            x = inkAnnot._page.size[0] - inkList[parseInt(j.toString(), 10)];\n            y = inkList[j + 1];\n          } else if (inkAnnot._page.rotation == PdfRotationAngle.angle270) {\n            x = inkAnnot._page.size[0] - inkList[j + 1];\n            y = inkAnnot._page.size[1] - inkList[parseInt(j.toString(), 10)];\n          } else {\n            x = inkList[parseInt(j.toString(), 10)];\n            y = inkAnnot._page.size[1] - inkList[j + 1];\n          }\n          if (j === 0) {\n            outputstring += 'M' + x + ',' + y + ' ';\n          } else {\n            outputstring += 'L' + x + ',' + y + ' ';\n          }\n        }\n      }\n    }\n    signature.Author = inkAnnot.author;\n    signature.Subject = inkAnnot.subject;\n    if (!isNullOrUndefined(inkAnnot.modifiedDate)) {\n      signature.ModifiedDate = this.formatDate(inkAnnot.modifiedDate);\n    } else {\n      signature.ModifiedDate = this.formatDate(new Date());\n    }\n    signature.Note = this.getValidNoteContent(inkAnnot.text);\n    for (var i = 0; i < inkAnnot.reviewHistory.count; i++) {\n      signature.State = this.getStateString(inkAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      signature.StateModel = this.getStateModelString(inkAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    if (isNullOrUndefined(signature.State) || isNullOrUndefined(signature.StateModel)) {\n      signature.State = 'Unmarked';\n      signature.StateModel = 'None';\n    }\n    signature.Comments = new Array();\n    for (var i = 0; i < inkAnnot.comments.count; i++) {\n      var annot = this.loadPopupAnnotation(inkAnnot.comments.at(i), height, width, pageRotation);\n      signature.Comments.push(annot);\n    }\n    if (inkAnnot.flags === PdfAnnotationFlag.locked) {\n      signature.IsLocked = true;\n    } else {\n      signature.IsLocked = false;\n    }\n    if (inkAnnot.flags === PdfAnnotationFlag.readOnly) {\n      signature.IsCommentLock = true;\n    } else {\n      signature.IsCommentLock = false;\n    }\n    signature.AnnotationType = 'Ink';\n    signature.AnnotType = 'Ink';\n    signature.Bounds = this.getBounds(inkAnnot.bounds, height, width, pageRotation);\n    if (inkAnnot.bounds.y < 0) {\n      var cropRect = new Rect(inkAnnot.bounds.x, loadedPage.cropBox[1] + inkAnnot.bounds.y, inkAnnot.bounds.width, inkAnnot.bounds.height);\n      signature.Bounds = this.getBounds(cropRect, height, width, pageRotation);\n    }\n    signature.Opacity = inkAnnot.opacity;\n    signature.Thickness = inkAnnot.border.width;\n    signature.PathData = outputstring;\n    signature.StrokeColor = 'rgba(' + inkAnnot.color[0] + ',' + inkAnnot.color[1] + ',' + inkAnnot.color[2] + ',' + (inkAnnot.color[3] ? inkAnnot.color[3] : 1) + ')';\n    signature.PageNumber = pageNumber;\n    signature.AnnotName = inkAnnot.name;\n    if (inkAnnot._dictionary.has('CustomData') && !isNullOrUndefined(inkAnnot._dictionary.get('CustomData'))) {\n      var customData = inkAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        signature.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    return signature;\n  };\n  /**\n   * @param squareAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param shapeFreeText\n   * @private\n   */\n  AnnotationRenderer.prototype.loadSquareAnnotation = function (squareAnnot, height, width, pageRotation, shapeFreeText) {\n    var shapeAnnotation = new ShapeAnnotationBase();\n    shapeAnnotation.ShapeAnnotationType = 'Square';\n    shapeAnnotation.Author = squareAnnot.author;\n    shapeAnnotation.AnnotName = squareAnnot.name;\n    shapeAnnotation.Subject = squareAnnot.subject;\n    if (!isNullOrUndefined(squareAnnot.modifiedDate)) {\n      shapeAnnotation.ModifiedDate = this.formatDate(squareAnnot.modifiedDate);\n    } else {\n      shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    shapeAnnotation.Note = this.getValidNoteContent(squareAnnot.text);\n    shapeAnnotation.Thickness = squareAnnot.border.width;\n    shapeAnnotation.BorderStyle = this.getBorderStylesString(squareAnnot.border.style);\n    shapeAnnotation.BorderDashArray = squareAnnot.border.dash ? squareAnnot.border.dash[0] ? squareAnnot.border.dash[0] : 0 : 0;\n    shapeAnnotation.Opacity = squareAnnot.opacity;\n    shapeAnnotation.RotateAngle = this.getRotateAngleString(squareAnnot.rotate);\n    shapeAnnotation.AnnotType = 'shape';\n    for (var i = 0; i < squareAnnot.reviewHistory.count; i++) {\n      shapeAnnotation.State = this.getStateString(squareAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      shapeAnnotation.StateModel = this.getStateModelString(squareAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n      shapeAnnotation.State = 'Unmarked';\n      shapeAnnotation.StateModel = 'None';\n    }\n    shapeAnnotation.Comments = new Array();\n    for (var i = 0; i < squareAnnot.comments.count; i++) {\n      var annot = this.loadPopupAnnotation(squareAnnot.comments.at(i), height, width, pageRotation);\n      shapeAnnotation.Comments.push(annot);\n    }\n    shapeAnnotation.Bounds = this.getBounds(squareAnnot.bounds, height, width, pageRotation);\n    shapeAnnotation.LineHeadStart = 'None';\n    shapeAnnotation.LineHeadEnd = 'None';\n    if (!isNullOrUndefined(squareAnnot.borderEffect)) {\n      if (squareAnnot.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        shapeAnnotation.IsCloudShape = true;\n        shapeAnnotation.CloudIntensity = squareAnnot.borderEffect.intensity;\n      } else {\n        shapeAnnotation.IsCloudShape = false;\n        shapeAnnotation.CloudIntensity = 0;\n      }\n    } else {\n      shapeAnnotation.IsCloudShape = false;\n      shapeAnnotation.CloudIntensity = 0;\n    }\n    if (squareAnnot._dictionary.has('RD') && !isNullOrUndefined(squareAnnot._dictionary.get('RD'))) {\n      shapeAnnotation.RectangleDifference = squareAnnot._dictionary.get('RD');\n    } else {\n      shapeAnnotation.RectangleDifference = new Array();\n    }\n    if (squareAnnot.flags === PdfAnnotationFlag.locked) {\n      shapeAnnotation.IsLocked = true;\n    } else {\n      shapeAnnotation.IsLocked = false;\n    }\n    if (squareAnnot.flags === PdfAnnotationFlag.readOnly) {\n      shapeAnnotation.IsCommentLock = true;\n    } else {\n      shapeAnnotation.IsCommentLock = false;\n    }\n    if (squareAnnot._annotFlags.toString().includes('Print')) {\n      shapeAnnotation.IsPrint = true;\n    }\n    if (squareAnnot._dictionary.has('AllowedInteractions')) {\n      var allowedInteractions = squareAnnot.getValues('AllowedInteractions');\n      var text = allowedInteractions[0];\n      shapeAnnotation.AllowedInteractions = JSON.parse(text);\n    }\n    shapeAnnotation.StrokeColor = !isNullOrUndefined(squareAnnot.color) ? 'rgba(' + squareAnnot.color[0] + ',' + squareAnnot.color[1] + ',' + squareAnnot.color[2] + ',' + (squareAnnot.color[3] ? squareAnnot.color[3] : 1) + ')' : 'rgba(0,0,0,1)';\n    var fillOpacity = !isNullOrUndefined(squareAnnot.color) && squareAnnot.color[3] ? squareAnnot.color[3] : 1;\n    if (squareAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(squareAnnot._dictionary.get('FillOpacity'))) {\n      fillOpacity = parseInt(squareAnnot._dictionary.get('FillOpacity').toString(), 10);\n    }\n    fillOpacity = squareAnnot.innerColor ? fillOpacity : 0;\n    squareAnnot.innerColor = squareAnnot.innerColor ? squareAnnot.innerColor : [255, 255, 255];\n    shapeAnnotation.FillColor = 'rgba(' + squareAnnot.innerColor[0] + ',' + squareAnnot.innerColor[1] + ',' + squareAnnot.innerColor[2] + ',' + fillOpacity + ')';\n    shapeAnnotation.EnableShapeLabel = false;\n    if (shapeFreeText != null) {\n      shapeAnnotation.EnableShapeLabel = true;\n      shapeAnnotation.LabelContent = shapeFreeText.text;\n      shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n      shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n      shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n      shapeAnnotation.FontSize = shapeFreeText.font.size;\n    }\n    if (squareAnnot._dictionary.has('CustomData') && !isNullOrUndefined(squareAnnot._dictionary.get('CustomData'))) {\n      var customData = squareAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    return shapeAnnotation;\n  };\n  // eslint-disable-next-line max-len\n  /**\n   * @param lineAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param shapeFreeText\n   * @private\n   */\n  AnnotationRenderer.prototype.loadLineAnnotation = function (lineAnnot, height, width, pageRotation, shapeFreeText) {\n    var shapeAnnotation = new ShapeAnnotationBase();\n    shapeAnnotation.ShapeAnnotationType = 'Line';\n    shapeAnnotation.Author = lineAnnot.author;\n    shapeAnnotation.AnnotName = lineAnnot.name;\n    shapeAnnotation.Subject = lineAnnot.subject;\n    if (!isNullOrUndefined(lineAnnot.modifiedDate)) {\n      shapeAnnotation.ModifiedDate = this.formatDate(lineAnnot.modifiedDate);\n    } else {\n      shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    shapeAnnotation.Note = this.getValidNoteContent(lineAnnot.text);\n    shapeAnnotation.Thickness = lineAnnot.border.width;\n    shapeAnnotation.BorderStyle = this.getBorderStylesString(lineAnnot.border.style);\n    shapeAnnotation.BorderDashArray = lineAnnot.border.dash ? lineAnnot.border.dash[0] ? lineAnnot.border.dash[0] : 0 : 0;\n    shapeAnnotation.Opacity = lineAnnot.opacity;\n    shapeAnnotation.RotateAngle = this.getRotateAngleString(lineAnnot.rotate);\n    shapeAnnotation.AnnotType = 'shape';\n    shapeAnnotation.EnableShapeLabel = false;\n    if (shapeFreeText != null) {\n      shapeAnnotation.EnableShapeLabel = true;\n      shapeAnnotation.LabelContent = shapeFreeText.text;\n      shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n      shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n      shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n      shapeAnnotation.FontSize = shapeFreeText.font.size;\n    }\n    for (var i = 0; i < lineAnnot.reviewHistory.count; i++) {\n      shapeAnnotation.State = this.getStateString(lineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      shapeAnnotation.StateModel = this.getStateModelString(lineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n      shapeAnnotation.State = 'Unmarked';\n      shapeAnnotation.StateModel = 'None';\n    }\n    shapeAnnotation.Comments = new Array();\n    for (var i = 0; i < lineAnnot.comments.count; i++) {\n      var annot = this.loadPopupAnnotation(lineAnnot.comments.at(i), height, width, pageRotation);\n      shapeAnnotation.Comments.push(annot);\n    }\n    shapeAnnotation.Bounds = this.getBounds(lineAnnot.bounds, height, width, pageRotation);\n    shapeAnnotation.LineHeadStart = this.getLineEndingStyleString(lineAnnot.lineEndingStyle.begin);\n    shapeAnnotation.LineHeadEnd = this.getLineEndingStyleString(lineAnnot.lineEndingStyle.end);\n    if (!isNullOrUndefined(lineAnnot._borderEffect)) {\n      if (lineAnnot._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        shapeAnnotation.IsCloudShape = true;\n        shapeAnnotation.CloudIntensity = lineAnnot._borderEffect.intensity;\n      } else {\n        shapeAnnotation.IsCloudShape = false;\n        shapeAnnotation.CloudIntensity = 0;\n      }\n    } else {\n      shapeAnnotation.IsCloudShape = false;\n      shapeAnnotation.CloudIntensity = 0;\n    }\n    var indent = this.getLineIndentString(lineAnnot.lineIntent);\n    shapeAnnotation.VertexPoints = this.getLinePoints(lineAnnot.linePoints, height, width, pageRotation, lineAnnot._page);\n    if (lineAnnot._dictionary.has('RD') && !isNullOrUndefined(lineAnnot._dictionary.get('RD'))) {\n      shapeAnnotation.RectangleDifference = lineAnnot._dictionary.get('RD');\n    } else {\n      shapeAnnotation.RectangleDifference = new Array();\n    }\n    if (lineAnnot.flags === PdfAnnotationFlag.locked) {\n      shapeAnnotation.IsLocked = true;\n    } else {\n      shapeAnnotation.IsLocked = false;\n    }\n    if (lineAnnot.flags === PdfAnnotationFlag.readOnly) {\n      shapeAnnotation.IsCommentLock = true;\n    } else {\n      shapeAnnotation.IsCommentLock = false;\n    }\n    if (lineAnnot._annotFlags.toString().includes('Print')) {\n      shapeAnnotation.IsPrint = true;\n    }\n    if (lineAnnot._dictionary.has('AllowedInteractions')) {\n      var allowedInteractions = lineAnnot.getValues('AllowedInteractions');\n      var text = allowedInteractions[0];\n      shapeAnnotation.AllowedInteractions = JSON.parse(text);\n    }\n    var color = !isNullOrUndefined(lineAnnot.color) ? lineAnnot.color : [0, 0, 0];\n    shapeAnnotation.StrokeColor = 'rgba(' + color[0] + ',' + color[1] + ',' + color[2] + ',' + (color[3] ? color[3] : 1) + ')';\n    var fillOpacity = lineAnnot.color && lineAnnot.color[3] ? lineAnnot.color[3] : 1;\n    if (lineAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(lineAnnot._dictionary.get('FillOpacity'))) {\n      fillOpacity = parseInt(lineAnnot._dictionary.get('FillOpacity').toString(), 10);\n    }\n    fillOpacity = lineAnnot.innerColor ? fillOpacity : 0;\n    lineAnnot.innerColor = lineAnnot.innerColor ? lineAnnot.innerColor : [255, 255, 255];\n    shapeAnnotation.FillColor = 'rgba(' + lineAnnot.innerColor[0] + ',' + lineAnnot.innerColor[1] + ',' + lineAnnot.innerColor[2] + ',' + fillOpacity + ')';\n    if (lineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(lineAnnot._dictionary.get('CustomData'))) {\n      var customData = lineAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    if (lineAnnot.lineIntent === PdfLineIntent.lineArrow || !lineAnnot._dictionary.has('Measure')) {\n      return shapeAnnotation;\n    } else {\n      var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n      if (lineAnnot._dictionary.has('Measure')) {\n        measureShapeAnnotation.Calibrate = this.getMeasureObject(lineAnnot);\n      }\n      measureShapeAnnotation.Indent = lineAnnot.lineIntent.toString();\n      measureShapeAnnotation.Caption = lineAnnot.caption.cap;\n      measureShapeAnnotation.LeaderLength = lineAnnot.leaderExt;\n      measureShapeAnnotation.LeaderLineExtension = lineAnnot.leaderLine;\n      measureShapeAnnotation.ExistingCustomData = shapeAnnotation.ExistingCustomData;\n      if (lineAnnot._dictionary.has('LLO')) {\n        measureShapeAnnotation.LeaderLineOffset = lineAnnot._dictionary.get('LLO');\n      } else {\n        measureShapeAnnotation.LeaderLineOffset = 0;\n      }\n      measureShapeAnnotation.CaptionPosition = lineAnnot.caption.type.toString();\n      if (lineAnnot.flags === PdfAnnotationFlag.readOnly) {\n        measureShapeAnnotation.IsCommentLock = true;\n      } else {\n        measureShapeAnnotation.IsCommentLock = false;\n      }\n      if (lineAnnot.flags === PdfAnnotationFlag.print) {\n        measureShapeAnnotation.IsPrint = true;\n      }\n      if (lineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(lineAnnot._dictionary.get('CustomData'))) {\n        var customData = lineAnnot._dictionary.get('CustomData');\n        if (customData != null) {\n          measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n        }\n      }\n      return measureShapeAnnotation;\n    }\n  };\n  AnnotationRenderer.prototype.getLinePoints = function (points, pageHeight, pageWidth, pageRotation, page) {\n    var linePoints = [];\n    var startingPoint = new AnnotPoint(points[0], points[1]);\n    var endingPoint = new AnnotPoint(points[2], points[3]);\n    var cropBox = this.getBothCropBoxValue(page);\n    var cropBoxX = 0;\n    var cropBoxY = 0;\n    if (!(cropBox[0] == 0 && page.cropBox[2] == page.size[2] && cropBox[1] == page.size[3])) {\n      cropBoxX = cropBox[0];\n      cropBoxY = cropBox[1];\n    }\n    if (pageRotation == 0) {\n      startingPoint = {\n        X: this.convertPointToPixel(points[0]) - this.convertPointToPixel(cropBoxX),\n        Y: pageHeight - this.convertPointToPixel(points[1]) + this.convertPointToPixel(cropBoxY)\n      };\n      endingPoint = {\n        X: this.convertPointToPixel(points[2]) - this.convertPointToPixel(cropBoxX),\n        Y: pageHeight - this.convertPointToPixel(points[3]) + this.convertPointToPixel(cropBoxY)\n      };\n    } else if (pageRotation == 1) {\n      startingPoint = {\n        X: this.convertPointToPixel(points[1]),\n        Y: this.convertPointToPixel(points[0])\n      };\n      endingPoint = {\n        X: this.convertPointToPixel(points[3]),\n        Y: this.convertPointToPixel(points[2])\n      };\n    } else if (pageRotation == 2) {\n      startingPoint = {\n        X: pageWidth - this.convertPointToPixel(points[0]),\n        Y: this.convertPointToPixel(points[1])\n      };\n      endingPoint = {\n        X: pageWidth - this.convertPointToPixel(points[2]),\n        Y: this.convertPointToPixel(points[3])\n      };\n    } else if (pageRotation == 3) {\n      startingPoint = {\n        X: pageWidth - this.convertPointToPixel(points[1]),\n        Y: pageHeight - this.convertPointToPixel(points[0])\n      };\n      endingPoint = {\n        X: pageWidth - this.convertPointToPixel(points[3]),\n        Y: pageHeight - this.convertPointToPixel(points[2])\n      };\n    }\n    linePoints.push(startingPoint);\n    linePoints.push(endingPoint);\n    return linePoints;\n  };\n  /**\n   * @param ellipseAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param shapeFreeText\n   * @private\n   */\n  AnnotationRenderer.prototype.loadEllipseAnnotation = function (ellipseAnnot, height, width, pageRotation, shapeFreeText) {\n    var shapeAnnotation = new ShapeAnnotationBase();\n    shapeAnnotation.ShapeAnnotationType = 'Circle';\n    shapeAnnotation.Author = ellipseAnnot.author;\n    shapeAnnotation.AnnotName = ellipseAnnot.name;\n    shapeAnnotation.Subject = ellipseAnnot.subject;\n    if (!isNullOrUndefined(ellipseAnnot.modifiedDate)) {\n      shapeAnnotation.ModifiedDate = this.formatDate(ellipseAnnot.modifiedDate);\n    } else {\n      shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    shapeAnnotation.Note = this.getValidNoteContent(ellipseAnnot.text);\n    shapeAnnotation.Thickness = ellipseAnnot.border.width;\n    shapeAnnotation.BorderStyle = this.getBorderStylesString(ellipseAnnot.border.style);\n    shapeAnnotation.BorderDashArray = ellipseAnnot.border.dash ? ellipseAnnot.border.dash[0] ? ellipseAnnot.border.dash[0] : 0 : 0;\n    shapeAnnotation.Opacity = ellipseAnnot.opacity;\n    shapeAnnotation.RotateAngle = this.getRotateAngleString(ellipseAnnot.rotate);\n    shapeAnnotation.AnnotType = 'shape';\n    for (var i = 0; i < ellipseAnnot.reviewHistory.count; i++) {\n      shapeAnnotation.State = this.getStateString(ellipseAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      shapeAnnotation.StateModel = this.getStateModelString(ellipseAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n      shapeAnnotation.State = 'Unmarked';\n      shapeAnnotation.StateModel = 'None';\n    }\n    shapeAnnotation.Comments = new Array();\n    for (var i = 0; i < ellipseAnnot.comments.count; i++) {\n      var annot = this.loadPopupAnnotation(ellipseAnnot.comments.at(i), height, width, pageRotation);\n      shapeAnnotation.Comments.push(annot);\n    }\n    shapeAnnotation.Bounds = this.getBounds(ellipseAnnot.bounds, height, width, pageRotation);\n    shapeAnnotation.LineHeadStart = 'None';\n    shapeAnnotation.LineHeadEnd = 'None';\n    if (!isNullOrUndefined(ellipseAnnot._borderEffect)) {\n      if (ellipseAnnot._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        shapeAnnotation.IsCloudShape = true;\n        shapeAnnotation.CloudIntensity = ellipseAnnot._borderEffect.intensity;\n      } else {\n        shapeAnnotation.IsCloudShape = false;\n        shapeAnnotation.CloudIntensity = 0;\n      }\n    } else {\n      shapeAnnotation.IsCloudShape = false;\n      shapeAnnotation.CloudIntensity = 0;\n    }\n    if (ellipseAnnot._dictionary.has('RD') && !isNullOrUndefined(ellipseAnnot._dictionary.get('RD'))) {\n      shapeAnnotation.RectangleDifference = ellipseAnnot._dictionary.get('RD');\n    } else {\n      shapeAnnotation.RectangleDifference = new Array();\n    }\n    if (ellipseAnnot.flags === PdfAnnotationFlag.locked) {\n      shapeAnnotation.IsLocked = true;\n    } else {\n      shapeAnnotation.IsLocked = false;\n    }\n    if (ellipseAnnot.flags === PdfAnnotationFlag.readOnly) {\n      shapeAnnotation.IsCommentLock = true;\n    } else {\n      shapeAnnotation.IsCommentLock = false;\n    }\n    if (ellipseAnnot._annotFlags.toString().includes('Print')) {\n      shapeAnnotation.IsPrint = true;\n    }\n    if (ellipseAnnot._dictionary.has('AllowedInteractions')) {\n      var allowedInteractions = ellipseAnnot.getValues('AllowedInteractions');\n      var text = allowedInteractions[0];\n      shapeAnnotation.AllowedInteractions = JSON.parse(text);\n    }\n    shapeAnnotation.StrokeColor = 'rgba(' + ellipseAnnot.color[0] + ',' + ellipseAnnot.color[1] + ',' + ellipseAnnot.color[2] + ',' + (ellipseAnnot.color[3] ? ellipseAnnot.color[3] : 1) + ')';\n    var fillOpacity = ellipseAnnot.color[3] ? ellipseAnnot.color[3] : 1;\n    if (ellipseAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(ellipseAnnot._dictionary.get('FillOpacity'))) {\n      fillOpacity = parseInt(ellipseAnnot._dictionary.get('FillOpacity').toString(), 10);\n    }\n    fillOpacity = ellipseAnnot.innerColor ? fillOpacity : 0;\n    ellipseAnnot.innerColor = ellipseAnnot.innerColor ? ellipseAnnot.innerColor : [255, 255, 255];\n    shapeAnnotation.FillColor = 'rgba(' + ellipseAnnot.innerColor[0] + ',' + ellipseAnnot.innerColor[1] + ',' + ellipseAnnot.innerColor[2] + ',' + fillOpacity + ')';\n    shapeAnnotation.EnableShapeLabel = false;\n    if (shapeFreeText != null) {\n      shapeAnnotation.EnableShapeLabel = true;\n      shapeAnnotation.LabelContent = shapeFreeText.text;\n      shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n      shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n      shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n      shapeAnnotation.FontSize = shapeFreeText.font.size;\n    }\n    if (ellipseAnnot._dictionary.has('CustomData') && !isNullOrUndefined(ellipseAnnot._dictionary.get('CustomData'))) {\n      var customData = ellipseAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    if (ellipseAnnot._dictionary.has('Measure')) {\n      shapeAnnotation.FillColor = 'rgba(' + ellipseAnnot.innerColor[0] + ',' + ellipseAnnot.innerColor[1] + ',' + ellipseAnnot.innerColor[2] + ',' + fillOpacity + ')';\n      var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n      measureShapeAnnotation.Calibrate = this.getMeasureObject(ellipseAnnot);\n      if (ellipseAnnot._dictionary.has('IT')) {\n        measureShapeAnnotation.Indent = ellipseAnnot._dictionary.get('IT');\n      } else {\n        measureShapeAnnotation.Indent = 'PolyLineDimension';\n      }\n      measureShapeAnnotation.Caption = false;\n      measureShapeAnnotation.LeaderLength = 0;\n      measureShapeAnnotation.LeaderLineExtension = 0;\n      measureShapeAnnotation.LeaderLineOffset = 0;\n      measureShapeAnnotation.CaptionPosition = '';\n      if (ellipseAnnot.flags === PdfAnnotationFlag.readOnly) {\n        measureShapeAnnotation.IsCommentLock = true;\n      } else {\n        measureShapeAnnotation.IsCommentLock = false;\n      }\n      if (ellipseAnnot.flags === PdfAnnotationFlag.print) {\n        measureShapeAnnotation.IsPrint = true;\n      }\n      if (ellipseAnnot._dictionary.has('CustomData') && !isNullOrUndefined(ellipseAnnot._dictionary.get('CustomData'))) {\n        var customData = ellipseAnnot._dictionary.get('CustomData');\n        if (customData != null) {\n          measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n        }\n      }\n      return measureShapeAnnotation;\n    } else {\n      return shapeAnnotation;\n    }\n  };\n  /**\n   * @param polygonAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param shapeFreeText\n   * @private\n   */\n  AnnotationRenderer.prototype.loadPolygonAnnotation = function (polygonAnnot, height, width, pageRotation, shapeFreeText) {\n    var shapeAnnotation = new ShapeAnnotationBase();\n    shapeAnnotation.ShapeAnnotationType = 'Polygon';\n    shapeAnnotation.Author = polygonAnnot.author;\n    shapeAnnotation.AnnotName = polygonAnnot.name;\n    shapeAnnotation.Subject = polygonAnnot.subject;\n    if (!isNullOrUndefined(polygonAnnot.modifiedDate)) {\n      shapeAnnotation.ModifiedDate = this.formatDate(polygonAnnot.modifiedDate);\n    } else {\n      shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    shapeAnnotation.Note = this.getValidNoteContent(polygonAnnot.text);\n    shapeAnnotation.Thickness = polygonAnnot.border.width;\n    shapeAnnotation.BorderStyle = this.getBorderStylesString(polygonAnnot.border.style);\n    shapeAnnotation.BorderDashArray = polygonAnnot.border.dash ? polygonAnnot.border.dash[0] ? polygonAnnot.border.dash[0] : 0 : 0;\n    shapeAnnotation.Opacity = polygonAnnot.opacity;\n    shapeAnnotation.RotateAngle = this.getRotateAngleString(polygonAnnot.rotate);\n    shapeAnnotation.AnnotType = 'shape';\n    for (var i = 0; i < polygonAnnot.reviewHistory.count; i++) {\n      shapeAnnotation.State = this.getStateString(polygonAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      shapeAnnotation.StateModel = this.getStateModelString(polygonAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n      shapeAnnotation.State = 'Unmarked';\n      shapeAnnotation.StateModel = 'None';\n    }\n    shapeAnnotation.Comments = new Array();\n    for (var i = 0; i < polygonAnnot.comments.count; i++) {\n      var annot = this.loadPopupAnnotation(polygonAnnot.comments.at(i), height, width, pageRotation);\n      shapeAnnotation.Comments.push(annot);\n    }\n    shapeAnnotation.Bounds = this.getBounds(polygonAnnot.bounds, height, width, pageRotation);\n    if (!isNullOrUndefined(polygonAnnot._dictionary.get('Vertices'))) {\n      shapeAnnotation.VertexPoints = this.getVertexPoints(polygonAnnot._dictionary.get('Vertices'), width, height, pageRotation, polygonAnnot._page);\n    }\n    if (!isNullOrUndefined(shapeAnnotation.VertexPoints) && shapeAnnotation.VertexPoints[0] !== shapeAnnotation.VertexPoints[shapeAnnotation.VertexPoints.length - 1]) {\n      shapeAnnotation.VertexPoints.push(shapeAnnotation.VertexPoints[0]);\n    }\n    shapeAnnotation.StrokeColor = 'rgba(' + polygonAnnot.color[0] + ',' + polygonAnnot.color[1] + ',' + polygonAnnot.color[2] + ',' + (polygonAnnot.color[3] ? polygonAnnot.color[3] : 1) + ')';\n    var fillOpacity = polygonAnnot.color[3] ? polygonAnnot.color[3] : 1;\n    if (polygonAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(polygonAnnot._dictionary.get('FillOpacity'))) {\n      fillOpacity = parseInt(polygonAnnot._dictionary.get('FillOpacity').toString(), 10);\n    }\n    fillOpacity = polygonAnnot.innerColor ? fillOpacity : 0;\n    polygonAnnot.innerColor = polygonAnnot.innerColor ? polygonAnnot.innerColor : [255, 255, 255];\n    shapeAnnotation.FillColor = 'rgba(' + polygonAnnot.innerColor[0] + ',' + polygonAnnot.innerColor[1] + ',' + polygonAnnot.innerColor[2] + ',' + fillOpacity + ')';\n    shapeAnnotation.LineHeadStart = 'None';\n    shapeAnnotation.LineHeadEnd = 'None';\n    shapeAnnotation.EnableShapeLabel = false;\n    if (shapeFreeText != null) {\n      shapeAnnotation.EnableShapeLabel = true;\n      shapeAnnotation.LabelContent = shapeFreeText.text;\n      shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n      shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n      shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n      shapeAnnotation.FontSize = shapeFreeText.font.size;\n    }\n    if (!isNullOrUndefined(polygonAnnot.borderEffect)) {\n      if (polygonAnnot.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        shapeAnnotation.IsCloudShape = true;\n        shapeAnnotation.CloudIntensity = polygonAnnot.borderEffect.intensity;\n      } else {\n        shapeAnnotation.IsCloudShape = false;\n        shapeAnnotation.CloudIntensity = 0;\n      }\n    } else {\n      shapeAnnotation.IsCloudShape = false;\n      shapeAnnotation.CloudIntensity = 0;\n    }\n    if (polygonAnnot._dictionary.has('RD') && !isNullOrUndefined(polygonAnnot._dictionary.get('RD'))) {\n      shapeAnnotation.RectangleDifference = polygonAnnot._dictionary.get('RD');\n    } else {\n      shapeAnnotation.RectangleDifference = new Array();\n    }\n    if (polygonAnnot.flags === PdfAnnotationFlag.locked) {\n      shapeAnnotation.IsLocked = true;\n    } else {\n      shapeAnnotation.IsLocked = false;\n    }\n    if (polygonAnnot.flags === PdfAnnotationFlag.readOnly) {\n      shapeAnnotation.IsCommentLock = true;\n    } else {\n      shapeAnnotation.IsCommentLock = false;\n    }\n    if (polygonAnnot.flags === PdfAnnotationFlag.print) {\n      shapeAnnotation.IsPrint = true;\n    }\n    if (polygonAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polygonAnnot._dictionary.get('CustomData'))) {\n      var customData = polygonAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    if (polygonAnnot._dictionary.has('AllowedInteractions')) {\n      var allowedInteractions = polygonAnnot.getValues('AllowedInteractions');\n      var text = allowedInteractions[0];\n      shapeAnnotation.AllowedInteractions = JSON.parse(text);\n    }\n    if (polygonAnnot._dictionary.has('Measure')) {\n      var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n      if (polygonAnnot._dictionary.has('IT') && !isNullOrUndefined(polygonAnnot._dictionary.get('IT'))) {\n        measureShapeAnnotation.Indent = polygonAnnot._dictionary.get('IT').name;\n      } else {\n        measureShapeAnnotation.Indent = 'PolygonDimension';\n      }\n      measureShapeAnnotation.Calibrate = this.getMeasureObject(polygonAnnot);\n      if (isNullOrUndefined(measureShapeAnnotation.Calibrate)) {\n        return shapeAnnotation;\n      }\n      if (measureShapeAnnotation.Indent === 'PolygonVolume' && polygonAnnot._dictionary.has('Depth') && !isNullOrUndefined(polygonAnnot._dictionary.get('Depth'))) {\n        measureShapeAnnotation.Calibrate.Depth = polygonAnnot._dictionary.get('Depth');\n      }\n      measureShapeAnnotation.Caption = false;\n      measureShapeAnnotation.LeaderLength = 0;\n      measureShapeAnnotation.LeaderLineExtension = 0;\n      measureShapeAnnotation.LeaderLineOffset = 0;\n      measureShapeAnnotation.CaptionPosition = '';\n      if (polygonAnnot.flags === PdfAnnotationFlag.readOnly) {\n        measureShapeAnnotation.IsCommentLock = true;\n      } else {\n        measureShapeAnnotation.IsCommentLock = false;\n      }\n      if (polygonAnnot.flags === PdfAnnotationFlag.print) {\n        measureShapeAnnotation.IsPrint = true;\n      }\n      if (polygonAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polygonAnnot._dictionary.get('CustomData'))) {\n        var customData = polygonAnnot._dictionary.get('CustomData');\n        if (isNullOrUndefined(customData)) {\n          measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n        }\n      }\n      return measureShapeAnnotation;\n    } else {\n      return shapeAnnotation;\n    }\n  };\n  /**\n   * @param polyLineAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param shapeFreeText\n   * @private\n   */\n  // eslint-disable-next-line max-len\n  AnnotationRenderer.prototype.loadPolylineAnnotation = function (polyLineAnnot, height, width, pageRotation, shapeFreeText) {\n    var shapeAnnotation = new ShapeAnnotationBase();\n    shapeAnnotation.ShapeAnnotationType = 'Polyline';\n    shapeAnnotation.Author = polyLineAnnot.author;\n    shapeAnnotation.AnnotName = polyLineAnnot.name;\n    shapeAnnotation.Subject = polyLineAnnot.subject;\n    if (!isNullOrUndefined(polyLineAnnot.modifiedDate)) {\n      shapeAnnotation.ModifiedDate = this.formatDate(polyLineAnnot.modifiedDate);\n    } else {\n      shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    shapeAnnotation.Note = this.getValidNoteContent(polyLineAnnot.text);\n    shapeAnnotation.Thickness = polyLineAnnot.border.width;\n    shapeAnnotation.BorderStyle = this.getBorderStylesString(polyLineAnnot.border.style);\n    shapeAnnotation.BorderDashArray = polyLineAnnot.border.dash ? polyLineAnnot.border.dash[0] ? polyLineAnnot.border.dash[0] : 0 : 0;\n    shapeAnnotation.Opacity = polyLineAnnot.opacity;\n    shapeAnnotation.RotateAngle = this.getRotateAngleString(polyLineAnnot.rotate);\n    shapeAnnotation.AnnotType = 'shape';\n    if (!isNullOrUndefined(polyLineAnnot.reviewHistory)) {\n      for (var i = 0; i < polyLineAnnot.reviewHistory.count; i++) {\n        shapeAnnotation.State = this.getStateString(polyLineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n        shapeAnnotation.StateModel = this.getStateModelString(polyLineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n      }\n    }\n    if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n      shapeAnnotation.State = 'Unmarked';\n      shapeAnnotation.StateModel = 'None';\n    }\n    shapeAnnotation.Comments = new Array();\n    if (!isNullOrUndefined(polyLineAnnot.comments)) {\n      for (var i = 0; i < polyLineAnnot.comments.count; i++) {\n        var annot = this.loadPopupAnnotation(polyLineAnnot.comments.at(i), height, width, pageRotation);\n        shapeAnnotation.Comments.push(annot);\n      }\n    }\n    shapeAnnotation.Bounds = this.getBounds(polyLineAnnot.bounds, height, width, pageRotation);\n    if (!isNullOrUndefined(polyLineAnnot._dictionary.get('Vertices'))) {\n      shapeAnnotation.VertexPoints = this.getVertexPoints(polyLineAnnot._dictionary.get('Vertices'), width, height, pageRotation, polyLineAnnot._page);\n    }\n    shapeAnnotation.StrokeColor = 'rgba(' + polyLineAnnot.color[0] + ',' + polyLineAnnot.color[1] + ',' + polyLineAnnot.color[2] + ',' + (polyLineAnnot.color[3] ? polyLineAnnot.color[3] : 1) + ')';\n    var fillOpacity = polyLineAnnot.color[3] ? polyLineAnnot.color[3] : 1;\n    if (polyLineAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(polyLineAnnot._dictionary.get('FillOpacity'))) {\n      fillOpacity = parseInt(polyLineAnnot._dictionary.get('FillOpacity').toString(), 10);\n    }\n    fillOpacity = polyLineAnnot.innerColor ? fillOpacity : 0;\n    polyLineAnnot.innerColor = polyLineAnnot.innerColor ? polyLineAnnot.innerColor : [255, 255, 255];\n    shapeAnnotation.FillColor = 'rgba(' + polyLineAnnot.innerColor[0] + ',' + polyLineAnnot.innerColor[1] + ',' + polyLineAnnot.innerColor[2] + ',' + fillOpacity + ')';\n    shapeAnnotation.LineHeadStart = this.getLineEndingStyleString(polyLineAnnot.beginLineStyle);\n    shapeAnnotation.LineHeadEnd = this.getLineEndingStyleString(polyLineAnnot.endLineStyle);\n    shapeAnnotation.EnableShapeLabel = false;\n    if (shapeFreeText != null) {\n      shapeAnnotation.EnableShapeLabel = true;\n      shapeAnnotation.LabelContent = shapeFreeText.text;\n      shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n      shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n      shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n      shapeAnnotation.FontSize = shapeFreeText.font.size;\n    }\n    if (!isNullOrUndefined(polyLineAnnot._borderEffect)) {\n      if (polyLineAnnot._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        shapeAnnotation.IsCloudShape = true;\n        shapeAnnotation.CloudIntensity = polyLineAnnot._borderEffect.intensity;\n      } else {\n        shapeAnnotation.IsCloudShape = false;\n        shapeAnnotation.CloudIntensity = 0;\n      }\n    } else {\n      shapeAnnotation.IsCloudShape = false;\n      shapeAnnotation.CloudIntensity = 0;\n    }\n    if (polyLineAnnot._dictionary.has('RD') && !isNullOrUndefined(polyLineAnnot._dictionary.get('RD'))) {\n      shapeAnnotation.RectangleDifference = polyLineAnnot._dictionary.get('RD');\n    } else {\n      shapeAnnotation.RectangleDifference = new Array();\n    }\n    if (polyLineAnnot.flags === PdfAnnotationFlag.locked) {\n      shapeAnnotation.IsLocked = true;\n    } else {\n      shapeAnnotation.IsLocked = false;\n    }\n    if (polyLineAnnot.flags === PdfAnnotationFlag.readOnly) {\n      shapeAnnotation.IsCommentLock = true;\n    } else {\n      shapeAnnotation.IsCommentLock = false;\n    }\n    if (polyLineAnnot._annotFlags.toString().includes('Print')) {\n      shapeAnnotation.IsPrint = true;\n    }\n    if (polyLineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polyLineAnnot._dictionary.get('CustomData'))) {\n      var customData = polyLineAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    if (polyLineAnnot._dictionary.has('AllowedInteractions')) {\n      var allowedInteractions = polyLineAnnot.getValues('AllowedInteractions');\n      var text = allowedInteractions[0];\n      shapeAnnotation.AllowedInteractions = JSON.parse(text);\n    }\n    if (polyLineAnnot._dictionary.has('Measure')) {\n      shapeAnnotation.FillColor = 'rgba(' + polyLineAnnot.innerColor[0] + ',' + polyLineAnnot.innerColor[1] + ',' + polyLineAnnot.innerColor[2] + ',' + fillOpacity + ')';\n      var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n      measureShapeAnnotation.Calibrate = this.getMeasureObject(polyLineAnnot);\n      if (polyLineAnnot._dictionary.has('IT')) {\n        measureShapeAnnotation.Indent = polyLineAnnot._dictionary.get('IT').name;\n      } else {\n        measureShapeAnnotation.Indent = 'PolyLineDimension';\n      }\n      measureShapeAnnotation.Caption = false;\n      measureShapeAnnotation.LeaderLength = 0;\n      measureShapeAnnotation.LeaderLineExtension = 0;\n      measureShapeAnnotation.LeaderLineOffset = 0;\n      measureShapeAnnotation.CaptionPosition = '';\n      if (polyLineAnnot.flags === PdfAnnotationFlag.readOnly) {\n        measureShapeAnnotation.IsCommentLock = true;\n      } else {\n        measureShapeAnnotation.IsCommentLock = false;\n      }\n      if (polyLineAnnot.flags === PdfAnnotationFlag.print) {\n        measureShapeAnnotation.IsPrint = true;\n      }\n      if (polyLineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polyLineAnnot._dictionary.get('CustomData'))) {\n        var customData = polyLineAnnot._dictionary.get('CustomData');\n        if (customData != null) {\n          measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n        }\n      }\n      return measureShapeAnnotation;\n    } else {\n      return shapeAnnotation;\n    }\n  };\n  /**\n   * @private\n   * @param annotation\n   * @param pageNumber\n   * @returns\n   */\n  AnnotationRenderer.prototype.loadSignatureImage = function (annotation, pageNumber) {\n    var stampAnnotation = annotation;\n    var formsFields = new SignatureAnnotationBase();\n    formsFields.SignatureName = stampAnnotation.name;\n    var dictionary = annotation._dictionary.get('AP');\n    if (dictionary === null) {\n      var pdfReference = annotation._dictionary.get('AP');\n      if (pdfReference !== null && pdfReference.Object !== null) {\n        dictionary = pdfReference.Object;\n      }\n    }\n    if (dictionary !== null && dictionary.has('N')) {\n      this.m_renderer.findStampImage(annotation);\n    }\n    formsFields.Bounds = new Rect(stampAnnotation.bounds.x, stampAnnotation.bounds.y, stampAnnotation.bounds.width, stampAnnotation.bounds.height);\n    formsFields.PathData = this.m_renderer.imageData;\n    formsFields.AnnotationType = \"SignatureImage\";\n    formsFields.PageNumber = pageNumber;\n    formsFields.Opacity = stampAnnotation.opacity;\n    formsFields.StrokeColor = 'rgba(' + stampAnnotation.color + ',' + stampAnnotation.color[1] + ',' + stampAnnotation.color[2] + ',' + (stampAnnotation.color[3] ? stampAnnotation.color[3] : 1) + ')';\n    return formsFields;\n  };\n  AnnotationRenderer.prototype.getMeasureObject = function (annotation) {\n    var measureObject = new Measure();\n    var measureDictionary;\n    if (annotation._dictionary.has('Measure')) {\n      measureDictionary = annotation._dictionary.get('Measure');\n    }\n    if (measureDictionary.has('R')) {\n      measureObject.Ratio = measureDictionary.get('R');\n    } else {\n      return null;\n    }\n    var xList;\n    if (measureDictionary.has('X')) {\n      xList = this.getMeasureValues(measureDictionary.getArray('X'));\n    }\n    measureObject.X = xList;\n    var distanceList;\n    if (measureDictionary.has('D')) {\n      distanceList = this.getMeasureValues(measureDictionary.getArray('D'));\n    }\n    measureObject.Distance = distanceList;\n    var areaList;\n    if (measureDictionary.has('A')) {\n      areaList = this.getMeasureValues(measureDictionary.getArray('A'));\n    }\n    measureObject.Area = areaList;\n    var angleList;\n    if (measureDictionary.has('T')) {\n      angleList = this.getMeasureValues(measureDictionary.getArray('T'));\n    }\n    measureObject.Angle = angleList;\n    var volumeList;\n    if (measureDictionary.has('V')) {\n      volumeList = this.getMeasureValues(measureDictionary.getArray('V'));\n    }\n    measureObject.Volume = volumeList;\n    if (!isNullOrUndefined(measureDictionary) && measureDictionary.has('TargetUnitConversion')) {\n      measureObject.TargetUnitConversion = measureDictionary.get('TargetUnitConversion').FloatValue;\n    } else {\n      measureObject.TargetUnitConversion = 0;\n    }\n    return measureObject;\n  };\n  AnnotationRenderer.prototype.getMeasureValues = function (arrayValues) {\n    var measureValuesArray = new Array();\n    if (!isNullOrUndefined(arrayValues)) {\n      for (var index = 0; index < arrayValues.length; index++) {\n        var measureFormat = arrayValues[parseInt(index.toString(), 10)];\n        var measureValue = new NumberFormat();\n        if (!isNullOrUndefined(measureFormat)) {\n          if (measureFormat.has('D') && !isNullOrUndefined(measureFormat.get('D'))) {\n            measureValue.Denominator = measureFormat.get('D');\n          }\n          if (measureFormat.has('C') && !isNullOrUndefined(measureFormat.get('C'))) {\n            measureValue.ConversionFactor = measureFormat.get('C');\n          }\n          if (measureFormat.has('F') && !isNullOrUndefined(measureFormat.get('F'))) {\n            measureValue.FractionalType = measureFormat.get('F');\n          }\n          if (measureFormat.has('FD') && !isNullOrUndefined(measureFormat.get('FD'))) {\n            measureValue.FormatDenominator = measureFormat.get('FD');\n          }\n          if (measureFormat.has('U') && !isNullOrUndefined(measureFormat.get('U'))) {\n            measureValue.Unit = measureFormat.get('U');\n          }\n        }\n        measureValuesArray.push(measureValue);\n      }\n    }\n    return measureValuesArray;\n  };\n  AnnotationRenderer.prototype.getVertexPoints = function (vertices, pageWidth, pageHeight, pageRotation, page) {\n    var vertexPoints = [];\n    var cropBox = this.getBothCropBoxValue(page);\n    var cropBoxX = 0;\n    var cropBoxY = 0;\n    if (!(cropBox[0] == 0 && page.cropBox[2] == page.size[2] && cropBox[1] == page.size[3])) {\n      cropBoxX = cropBox[0];\n      cropBoxY = cropBox[1];\n    }\n    if (pageRotation == 0) {\n      for (var i = 0; i < vertices.length; i++) {\n        var point = {\n          X: this.convertPointToPixel(vertices[parseInt(i.toString(), 10)]) - this.convertPointToPixel(cropBoxX),\n          Y: pageHeight - this.convertPointToPixel(vertices[i + 1]) + this.convertPointToPixel(cropBoxY)\n        };\n        i = i + 1;\n        vertexPoints.push(point);\n      }\n    } else if (pageRotation == 1) {\n      for (var i = 0; i < vertices.length; i++) {\n        var point = {\n          X: this.convertPointToPixel(vertices[i + 1]),\n          Y: this.convertPointToPixel(vertices[parseInt(i.toString(), 10)])\n        };\n        i = i + 1;\n        vertexPoints.push(point);\n      }\n    } else if (pageRotation == 2) {\n      for (var i = 0; i < vertices.length; i++) {\n        var point = {\n          X: pageWidth - this.convertPointToPixel(vertices[parseInt(i.toString(), 10)]),\n          Y: pageHeight - this.convertPointToPixel(vertices[i + 1])\n        };\n        i = i + 1;\n        vertexPoints.push(point);\n      }\n    } else if (pageRotation == 3) {\n      for (var i = 0; i < vertices.length; i++) {\n        var point = {\n          X: pageWidth - this.convertPointToPixel(vertices[i + 1]),\n          Y: pageHeight - this.convertPointToPixel(vertices[parseInt(i.toString(), 10)])\n        };\n        i = i + 1;\n        vertexPoints.push(point);\n      }\n    }\n    return vertexPoints;\n  };\n  AnnotationRenderer.prototype.getLineIndentString = function (lineIntent) {\n    switch (lineIntent) {\n      case PdfLineIntent.lineArrow:\n        return 'LineArrow';\n      case PdfLineIntent.lineDimension:\n        return 'LineDimension';\n    }\n  };\n  AnnotationRenderer.prototype.getLineEndingStyleString = function (lineEndingStyle) {\n    switch (lineEndingStyle) {\n      case PdfLineEndingStyle.none:\n        return 'None';\n      case PdfLineEndingStyle.butt:\n        return 'Butt';\n      case PdfLineEndingStyle.circle:\n        return 'Circle';\n      case PdfLineEndingStyle.closedArrow:\n        return 'ClosedArrow';\n      case PdfLineEndingStyle.diamond:\n        return 'Diamond';\n      case PdfLineEndingStyle.openArrow:\n        return 'OpenArrow';\n      case PdfLineEndingStyle.rClosedArrow:\n        return 'RClosedArrow';\n      case PdfLineEndingStyle.rOpenArrow:\n        return 'ROpenArrow';\n      case PdfLineEndingStyle.slash:\n        return 'Slash';\n      case PdfLineEndingStyle.square:\n        return 'Square';\n    }\n  };\n  AnnotationRenderer.prototype.getBorderStylesString = function (borderStyle) {\n    switch (borderStyle) {\n      case PdfBorderStyle.solid:\n        return 'Solid';\n      case PdfBorderStyle.dashed:\n        return 'Dashed';\n      case PdfBorderStyle.beveled:\n        return 'Beveled';\n      case PdfBorderStyle.inset:\n        return 'Inset';\n      case PdfBorderStyle.underline:\n        return 'Underline';\n      case PdfBorderStyle.dot:\n        return 'Dot';\n      default:\n        return 'None';\n    }\n  };\n  AnnotationRenderer.prototype.getBorderStyle = function (borderStyle) {\n    var style = PdfBorderStyle.solid;\n    switch (borderStyle) {\n      case 'Solid':\n        style = PdfBorderStyle.solid;\n        break;\n      case 'Dashed':\n        style = PdfBorderStyle.dashed;\n        break;\n      case 'Beveled':\n        style = PdfBorderStyle.beveled;\n        break;\n      case 'Inset':\n        style = PdfBorderStyle.inset;\n        break;\n      case 'Underline':\n        style = PdfBorderStyle.underline;\n        break;\n      case 'Dot':\n        style = PdfBorderStyle.dot;\n        break;\n    }\n    return style;\n  };\n  AnnotationRenderer.prototype.getRotateAngleString = function (angle) {\n    switch (angle) {\n      case PdfRotationAngle.angle0:\n        return 'RotateAngle0';\n      case PdfRotationAngle.angle90:\n        return 'RotateAngle90';\n      case PdfRotationAngle.angle180:\n        return 'RotateAngle180';\n      case PdfRotationAngle.angle270:\n        return 'RotateAngle270';\n      default:\n        return 'RotateAngle0';\n    }\n  };\n  AnnotationRenderer.prototype.getValidNoteContent = function (note) {\n    if (isNullOrUndefined(note) || note === '' || note === ' ') {\n      return '';\n    }\n    return note;\n  };\n  AnnotationRenderer.prototype.getBounds = function (bounds, pageWidth, pageHeight, pageRotation) {\n    var bound;\n    if (pageRotation === 0) {\n      // eslint-disable-next-line max-len\n      bound = new AnnotBounds(this.convertPointToPixel(bounds.x), this.convertPointToPixel(bounds.y), this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height));\n    } else if (pageRotation === 1) {\n      // eslint-disable-next-line max-len\n      bound = new AnnotBounds(pageWidth - this.convertPointToPixel(bounds.y) - this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.x), this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width));\n    } else if (pageRotation === 2) {\n      // eslint-disable-next-line max-len\n      bound = new AnnotBounds(pageWidth - this.convertPointToPixel(bounds.x) - this.convertPointToPixel(bounds.width), pageHeight - this.convertPointToPixel(bounds.y) - this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height));\n    } else if (pageRotation === 3) {\n      // eslint-disable-next-line max-len\n      bound = new AnnotBounds(this.convertPointToPixel(bounds.y), pageHeight - this.convertPointToPixel(bounds.x) - this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width));\n    }\n    return bound;\n  };\n  /**\n   * @private\n   * @param popupAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @returns\n   */\n  AnnotationRenderer.prototype.loadPopupAnnotation = function (popupAnnot, height, width, pageRotation) {\n    var popupAnnotation = new PopupAnnotationBase();\n    popupAnnotation.Author = popupAnnot.author;\n    popupAnnotation.Subject = popupAnnot.subject;\n    if (popupAnnot._dictionary.has('Subtype') && !isNullOrUndefined(popupAnnot._dictionary.get('Subtype')) && !isNullOrUndefined(popupAnnot._dictionary.get('Subtype').name)) {\n      popupAnnotation.SubType = popupAnnot._dictionary.get('Subtype').name.toString();\n    }\n    if (popupAnnot._dictionary.has('Type') && !isNullOrUndefined(popupAnnot._dictionary.get('Type')) && !isNullOrUndefined(popupAnnot._dictionary.get('Type').name)) {\n      popupAnnotation.Type = popupAnnot._dictionary.get('Type').name.toString();\n    }\n    if (popupAnnot._dictionary.has('IRT') && !isNullOrUndefined(popupAnnot._dictionary.get('IRT'))) {\n      var reference = popupAnnot._dictionary.get('IRT');\n      if (reference != null) {\n        popupAnnotation.Reference = reference.Reference;\n      }\n    }\n    popupAnnotation.AnnotName = popupAnnot.name;\n    if (!isNullOrUndefined(popupAnnot.modifiedDate)) {\n      popupAnnotation.ModifiedDate = this.formatDate(popupAnnot.modifiedDate);\n    } else {\n      popupAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    popupAnnotation.Note = popupAnnot.text;\n    if (popupAnnot.flags === PdfAnnotationFlag.locked) {\n      popupAnnotation.IsLock = true;\n    } else {\n      popupAnnotation.IsLock = false;\n    }\n    if (popupAnnot.flags === PdfAnnotationFlag.readOnly) {\n      popupAnnotation.IsCommentLock = true;\n    } else {\n      popupAnnotation.IsCommentLock = false;\n    }\n    popupAnnotation.Icon = this.getPopupIconString(popupAnnot.icon);\n    popupAnnotation.State = this.getStateString(popupAnnot.state);\n    popupAnnotation.StateModel = this.getStateModelString(popupAnnot.stateModel);\n    popupAnnotation.Size = new SizeBase(popupAnnot.bounds.width, popupAnnot.bounds.height);\n    popupAnnot.color = popupAnnot.color ? popupAnnot.color : [0, 0, 0];\n    popupAnnotation.Color = new AnnotColor(popupAnnot.color[0], popupAnnot.color[1], popupAnnot.color[2]);\n    popupAnnotation.Opacity = popupAnnot.opacity;\n    popupAnnotation.AnnotType = 'sticky';\n    popupAnnotation.StrokeColor = 'rgba(' + popupAnnotation.Color.R + ',' + popupAnnotation.Color.G + ',' + popupAnnotation.Color.B + ',' + 1 + ')';\n    popupAnnotation.Bounds = this.getBounds(popupAnnot.bounds, height, width, pageRotation);\n    for (var i = 0; i < popupAnnot.reviewHistory.count; i++) {\n      popupAnnotation.State = this.getStateString(popupAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      popupAnnotation.StateModel = this.getStateModelString(popupAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    if (isNullOrUndefined(popupAnnotation.State) || popupAnnotation.State === 'None' || isNullOrUndefined(popupAnnotation.StateModel)) {\n      popupAnnotation.State = 'Unmarked';\n      popupAnnotation.StateModel = 'None';\n    }\n    popupAnnotation.Comments = new Array();\n    if (popupAnnot._dictionary.has('CustomData') && !isNullOrUndefined(popupAnnot._dictionary.get('CustomData'))) {\n      var customData = popupAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        popupAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    for (var i = 0; i < popupAnnot.comments.count; i++) {\n      popupAnnotation.Comments.push(this.loadPopupAnnotation(popupAnnot.comments.at(i), height, width, pageRotation));\n    }\n    return popupAnnotation;\n  };\n  /**\n   * @param freeTextAnnot\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @param page\n   * @private\n   */\n  AnnotationRenderer.prototype.loadFreeTextAnnotation = function (freeTextAnnot, height, width, pageRotation, page) {\n    var freeTextAnnotation = new FreeTextAnnotationBase();\n    freeTextAnnotation.AnnotationIntent = this.getAnnotationIntentString(freeTextAnnot.annotationIntent); // returns wrong value\n    freeTextAnnotation.AnnotationFlags = this.getAnnotationFlagsString(freeTextAnnot.flags);\n    freeTextAnnotation.Author = freeTextAnnot.author;\n    freeTextAnnotation.AnnotName = freeTextAnnot.name;\n    if (isNullOrUndefined(freeTextAnnotation.AnnotName) || freeTextAnnotation.AnnotName === '') {\n      freeTextAnnotation.AnnotName = Math.abs(Math.random()).toString(36).substring(2);\n    }\n    freeTextAnnotation.AnnotType = 'Text Box';\n    freeTextAnnotation.FreeTextAnnotationType = 'Text Box';\n    freeTextAnnotation.BorderColor = new AnnotColor(freeTextAnnot.borderColor[0], freeTextAnnot.borderColor[1], freeTextAnnot.borderColor[2]);\n    var points = [{\n      X: 100,\n      Y: 400\n    }, {\n      X: 200,\n      Y: 400\n    }];\n    freeTextAnnotation.CalloutLines = points;\n    var backgroundColor = freeTextAnnot.color ? freeTextAnnot.color : [0, 0, 0];\n    freeTextAnnotation.Color = new AnnotColor(backgroundColor[0], backgroundColor[1], backgroundColor[2]);\n    freeTextAnnotation.Flatten = freeTextAnnot.flatten;\n    freeTextAnnotation.FlattenPopups = !isNullOrUndefined(freeTextAnnot.flattenPopups) ? freeTextAnnot.flattenPopups : false; // returns undefined\n    freeTextAnnotation.FontFamily = this.getFontFamilyString(freeTextAnnot.font._fontFamily);\n    freeTextAnnotation.FontSize = this.convertPointToPixel(freeTextAnnot.font.size);\n    freeTextAnnotation.Font = new FontBase(freeTextAnnot.font, freeTextAnnotation.FontFamily); // need to be checked\n    freeTextAnnotation.Thickness = freeTextAnnot.border.width;\n    freeTextAnnotation.StrokeColor = 'rgba(' + freeTextAnnot.borderColor[0] + ',' + freeTextAnnot.borderColor[1] + ',' + freeTextAnnot.borderColor[2] + ',' + (freeTextAnnot.borderColor[3] ? freeTextAnnot.borderColor[3] : 1) + ')';\n    var fillOpacity;\n    if (freeTextAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(freeTextAnnot._dictionary.get('FillOpacity'))) {\n      fillOpacity = parseInt(freeTextAnnot._dictionary.get('FillOpacity').toString(), 10);\n    }\n    fillOpacity = freeTextAnnot.color ? !isNullOrUndefined(fillOpacity) ? fillOpacity : 0 : 0;\n    freeTextAnnotation.FillColor = 'rgba(' + backgroundColor[0] + ',' + backgroundColor[1] + ',' + backgroundColor[2] + ',' + fillOpacity + ')';\n    freeTextAnnotation.Layer = freeTextAnnot._dictionary.has('Layer') ? freeTextAnnot._dictionary.get('Layer') : null;\n    // freeTextAnnotation.Location = freeTextAnnot._dictionary.has('Location') ? freeTextAnnot._dictionary.get('Location') : JSON.stringify({X: freeTextAnnot.bounds.x ,Y: freeTextAnnot.bounds.y});\n    freeTextAnnotation.Location = freeTextAnnot._dictionary.has('Location') ? freeTextAnnot._dictionary.get('Location') : '{X=' + freeTextAnnot.bounds.x + ',Y=' + freeTextAnnot.bounds.y + '}';\n    freeTextAnnotation.MarkupText = freeTextAnnot.text;\n    if (!isNullOrUndefined(freeTextAnnot.modifiedDate)) {\n      freeTextAnnotation.ModifiedDate = this.formatDate(freeTextAnnot.modifiedDate);\n    } else {\n      freeTextAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    freeTextAnnotation.Name = \"freeText\";\n    freeTextAnnotation.Opacity = freeTextAnnot.opacity;\n    if (freeTextAnnot._dictionary.has('Rotation') && !isNullOrUndefined(freeTextAnnot._dictionary.get('Rotation'))) {\n      freeTextAnnotation.Rotate = parseInt(freeTextAnnot._dictionary.get('Rotation'));\n    }\n    if (freeTextAnnot._dictionary.has('Rotate') && !isNullOrUndefined(freeTextAnnot._dictionary.get('Rotate'))) {\n      freeTextAnnotation.Rotate = parseInt(freeTextAnnot._dictionary.get('Rotate'));\n    }\n    if (!isNullOrUndefined(freeTextAnnot.subject)) {\n      freeTextAnnotation.Subject = freeTextAnnot.subject;\n    } else {\n      freeTextAnnotation.Subject = 'Text Box';\n    }\n    freeTextAnnotation.Text = freeTextAnnot.text;\n    freeTextAnnotation.MarkupText = freeTextAnnot.text;\n    freeTextAnnotation.TextAlign = this.getTextAlignmentString(freeTextAnnot.textAlignment);\n    if (isNullOrUndefined(freeTextAnnotation.State) || freeTextAnnotation.State === 'None' || isNullOrUndefined(freeTextAnnotation.StateModel)) {\n      freeTextAnnotation.State = 'Unmarked';\n      freeTextAnnotation.StateModel = 'None';\n    }\n    freeTextAnnotation.FontColor = !isNullOrUndefined(freeTextAnnot.textMarkUpColor) ? 'rgba(' + freeTextAnnot.textMarkUpColor[0] + ',' + freeTextAnnot.textMarkUpColor[1] + ',' + freeTextAnnot.textMarkUpColor[2] + ',' + (freeTextAnnot.textMarkUpColor[3] ? freeTextAnnot.textMarkUpColor[3] : 1) + ')' : 'rgba(0, 0, 0, 1)';\n    for (var i = 0; i < freeTextAnnot.reviewHistory.count; i++) {\n      freeTextAnnotation.State = this.getStateString(freeTextAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      freeTextAnnotation.StateModel = this.getStateModelString(freeTextAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    freeTextAnnotation.Comments = new Array();\n    for (var i = 0; i < freeTextAnnot.comments.count; i++) {\n      var annot = this.loadPopupAnnotation(freeTextAnnot.comments.at(i), height, width, pageRotation);\n      freeTextAnnotation.Comments.push(annot);\n    }\n    freeTextAnnotation.Bounds = this.getBounds(freeTextAnnot.bounds, height, width, pageRotation);\n    if (freeTextAnnotation.Bounds.Y < 0) {\n      var cropRect = {\n        x: freeTextAnnot.bounds.x,\n        y: page.cropBox[1] + freeTextAnnot.bounds.y,\n        width: freeTextAnnot.bounds.width,\n        height: freeTextAnnot.bounds.height\n      };\n      freeTextAnnotation.Bounds = this.getBounds(cropRect, height, width, pageRotation);\n    }\n    freeTextAnnotation.PageRotation = pageRotation;\n    if (freeTextAnnot.flags === PdfAnnotationFlag.readOnly) {\n      freeTextAnnotation.IsCommentLock = true;\n      freeTextAnnotation.IsReadonly = true;\n    } else {\n      freeTextAnnotation.IsCommentLock = false;\n    }\n    if (freeTextAnnot.flags === PdfAnnotationFlag.print) {\n      freeTextAnnotation.IsPrint = true;\n    }\n    if (freeTextAnnot.flags === PdfAnnotationFlag.locked) {\n      freeTextAnnotation.IsLocked = true;\n    } else {\n      freeTextAnnotation.IsLocked = false;\n    }\n    if (freeTextAnnot._dictionary.has('CustomData') && !isNullOrUndefined(freeTextAnnot._dictionary.get('CustomData'))) {\n      var customData = freeTextAnnot._dictionary.get('CustomData');\n      if (customData != null) {\n        freeTextAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    if (freeTextAnnot._dictionary.has('AllowedInteractions')) {\n      var allowedInteractions = freeTextAnnot.getValues('AllowedInteractions');\n      var text = allowedInteractions[0];\n      freeTextAnnotation.AllowedInteractions = JSON.parse(text);\n    }\n    return freeTextAnnotation;\n  };\n  AnnotationRenderer.prototype.getTextAlignmentString = function (textAlignment) {\n    switch (textAlignment) {\n      case PdfTextAlignment.left:\n        return 'Left';\n      case PdfTextAlignment.right:\n        return 'Right';\n      case PdfTextAlignment.center:\n        return 'Center';\n      case PdfTextAlignment.justify:\n        return 'Justify';\n      default:\n        return 'Left';\n    }\n  };\n  /**\n   *\n   * @private\n   */\n  AnnotationRenderer.prototype.loadSignatureText = function (inkAnnot, pageNumber, height, width, pageRotation) {\n    var formFields = new SignatureAnnotationBase();\n    formFields.SignatureName = inkAnnot.name;\n    formFields.Bounds = this.getBounds(inkAnnot.bounds, width, height, pageRotation);\n    formFields.AnnotationType = \"SignatureText\";\n    formFields.FontFamily = this.getFontFamilyString(inkAnnot.font._fontFamily);\n    formFields.FontSize = this.convertPointToPixel(inkAnnot.font.size);\n    formFields.PathData = inkAnnot.text;\n    formFields.PageNumber = pageNumber;\n    formFields.StrokeColor = 'rgba(' + inkAnnot.textMarkUpColor[0] + ',' + inkAnnot.textMarkUpColor[1] + ',' + inkAnnot.textMarkUpColor[2] + ',' + (inkAnnot.textMarkUpColor[3] ? inkAnnot.textMarkUpColor[3] : 1) + ')';\n    formFields.Opacity = inkAnnot.opacity;\n    formFields.Thickness = 1;\n    return formFields;\n  };\n  AnnotationRenderer.prototype.getFontFamilyString = function (fontFamily) {\n    switch (fontFamily) {\n      case PdfFontFamily.helvetica:\n        return 'Helvetica';\n      case PdfFontFamily.timesRoman:\n        return 'TimesRoman';\n      case PdfFontFamily.courier:\n        return 'Courier';\n      case PdfFontFamily.symbol:\n        return 'Symbol';\n      case PdfFontFamily.zapfDingbats:\n        return 'ZapfDingbats';\n      default:\n        return 'Helvetica';\n    }\n  };\n  AnnotationRenderer.prototype.getAnnotationFlagsString = function (flags) {\n    switch (flags) {\n      case PdfAnnotationFlag.default:\n        return 'Default';\n      case PdfAnnotationFlag.invisible:\n        return 'Invisible';\n      case PdfAnnotationFlag.hidden:\n        return 'Hidden';\n      case PdfAnnotationFlag.print:\n        return 'Print';\n      case PdfAnnotationFlag.noZoom:\n        return 'NoZoom';\n      case PdfAnnotationFlag.noRotate:\n        return 'NoRotate';\n      case PdfAnnotationFlag.noView:\n        return 'NoView';\n      case PdfAnnotationFlag.readOnly:\n        return 'ReadOnly';\n      case PdfAnnotationFlag.locked:\n        return 'Locked';\n      case PdfAnnotationFlag.toggleNoView:\n        return 'ToggleNoView';\n      default:\n        return 'Default';\n    }\n  };\n  AnnotationRenderer.prototype.getAnnotationIntentString = function (annotationIntent) {\n    switch (annotationIntent) {\n      case PdfAnnotationIntent.freeTextCallout:\n        return 'FreeTextCallout';\n      case PdfAnnotationIntent.freeTextTypeWriter:\n        return 'FreeTextTypeWriter';\n      case PdfAnnotationIntent.none:\n        return 'None';\n    }\n  };\n  AnnotationRenderer.prototype.getStateString = function (state) {\n    switch (state) {\n      case PdfAnnotationState.accepted:\n        return 'Accepted';\n      case PdfAnnotationState.rejected:\n        return 'Rejected';\n      case PdfAnnotationState.cancel:\n        return 'Cancelled';\n      case PdfAnnotationState.completed:\n        return 'Completed';\n      case PdfAnnotationState.none:\n        return 'None';\n      case PdfAnnotationState.unmarked:\n        return 'Unmarked';\n      case PdfAnnotationState.marked:\n        return 'Marked';\n      case PdfAnnotationState.unknown:\n        return 'Unknown';\n      default:\n        return null;\n    }\n  };\n  AnnotationRenderer.prototype.getStateModelString = function (stateModel) {\n    switch (stateModel) {\n      case PdfAnnotationStateModel.review:\n        return 'Review';\n      case PdfAnnotationStateModel.marked:\n        return 'Marked';\n      case PdfAnnotationStateModel.none:\n        return 'None';\n      default:\n        return 'None';\n    }\n  };\n  AnnotationRenderer.prototype.getPopupIconString = function (icon) {\n    switch (icon) {\n      case PdfPopupIcon.comment:\n        return 'Comment';\n      case PdfPopupIcon.help:\n        return 'Help';\n      case PdfPopupIcon.insert:\n        return 'Insert';\n      case PdfPopupIcon.key:\n        return 'Key';\n      case PdfPopupIcon.newParagraph:\n        return 'NewParagraph';\n      case PdfPopupIcon.note:\n        return 'Note';\n      case PdfPopupIcon.paragraph:\n        return 'Paragraph';\n      default:\n        return null;\n    }\n  };\n  AnnotationRenderer.prototype.formatDate = function (date) {\n    var month = this.datePadding(date.getMonth() + 1); // Months are zero-based\n    var day = this.datePadding(date.getDate());\n    var year = date.getFullYear();\n    var hours = this.datePadding(date.getHours());\n    var minutes = this.datePadding(date.getMinutes());\n    var seconds = this.datePadding(date.getSeconds());\n    return month + \"/\" + day + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\n  };\n  // Pad the numbers with leading zeros if they are single digits\n  AnnotationRenderer.prototype.datePadding = function (number) {\n    return number < 10 ? '0' + number : number.toString();\n  };\n  /**\n   * @param loadedDocument\n   * @private\n   */\n  AnnotationRenderer.prototype.removeSignatureTypeAnnot = function (jsonObject, loadedDocument) {\n    if (jsonObject.hasOwnProperty('isAnnotationsExist') && JSON.parse(jsonObject['isAnnotationsExist']) || jsonObject.hasOwnProperty('isFormFieldAnnotationsExist') && JSON.parse(jsonObject['isFormFieldAnnotationsExist'])) {\n      var annotationPageList = jsonObject.annotationsPageList ? jsonObject.annotationsPageList : [];\n      // var formFieldsPageList : any = jsonObject.formFieldsPageList ? (jsonObject.formFieldsPageList) : [] ;\n      if (annotationPageList.length != 0) {\n        var removeAnnotList = JSON.parse(annotationPageList);\n        for (var i = 0; i < removeAnnotList.length; i++) {\n          var loadedPageNo = removeAnnotList[parseInt(i.toString(), 10)];\n          // Removing annotations from the page.\n          var page = loadedDocument.getPage(parseInt(loadedPageNo, 10));\n          var oldPageAnnotations = page.annotations;\n          var totalAnnotation = parseInt(oldPageAnnotations.count.toString(), 10);\n          for (var m = totalAnnotation - 1; m >= 0; m--) {\n            var annotation = oldPageAnnotations.at(m);\n            if (annotation instanceof PdfFreeTextAnnotation || annotation instanceof PdfInkAnnotation || annotation instanceof PdfLineAnnotation || annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfTextMarkupAnnotation || annotation instanceof PdfPopupAnnotation || annotation instanceof PdfSquareAnnotation || annotation instanceof PdfCircleAnnotation || annotation instanceof PdfEllipseAnnotation || annotation instanceof PdfPolygonAnnotation || annotation instanceof PdfRectangleAnnotation || annotation instanceof PdfPolyLineAnnotation) {\n              oldPageAnnotations.remove(annotation);\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @param textMarkup\n   * @param height\n   * @param width\n   * @param pageRotation\n   * @private\n   */\n  // eslint-disable-next-line max-len\n  AnnotationRenderer.prototype.loadTextMarkupAnnotation = function (textMarkup, height, width, pageRotation, page) {\n    var markupAnnotation = new TextMarkupAnnotationBase();\n    markupAnnotation.TextMarkupAnnotationType = this.getMarkupAnnotTypeString(textMarkup.textMarkupType);\n    if (markupAnnotation.TextMarkupAnnotationType === 'StrikeOut') {\n      markupAnnotation.TextMarkupAnnotationType = 'Strikethrough';\n    }\n    markupAnnotation.Author = textMarkup.author;\n    markupAnnotation.Subject = textMarkup.subject;\n    markupAnnotation.AnnotName = textMarkup.name;\n    markupAnnotation.Note = textMarkup.text ? textMarkup.text : '';\n    // eslint-disable-next-line max-len\n    markupAnnotation.Rect = new RectangleBase(textMarkup.bounds.x, textMarkup.bounds.y, textMarkup.bounds.width + textMarkup.bounds.x, textMarkup.bounds.height + textMarkup.bounds.y);\n    markupAnnotation.Opacity = textMarkup.opacity;\n    // markupAnnotation.Color = 'rgba(' + textMarkup.color[0] + ',' + textMarkup.color[1] + ',' + textMarkup.color[2] + ',' + (textMarkup.color[3] ? textMarkup.color[3] : 1) + ')';\n    markupAnnotation.Color = '#' + (1 << 24 | textMarkup.color[0] << 16 | textMarkup.color[1] << 8 | textMarkup.color[2]).toString(16).slice(1);\n    if (!isNullOrUndefined(textMarkup.modifiedDate)) {\n      markupAnnotation.ModifiedDate = this.formatDate(textMarkup.modifiedDate);\n    } else {\n      markupAnnotation.ModifiedDate = this.formatDate(new Date());\n    }\n    markupAnnotation.AnnotationRotation = textMarkup.rotationAngle;\n    var quadPoints = textMarkup._dictionary.has('QuadPoints') ? textMarkup._dictionary.get('QuadPoints') : [];\n    var bounds = this.getTextMarkupBounds(quadPoints, height, width, pageRotation, page);\n    markupAnnotation.Bounds = bounds;\n    markupAnnotation.AnnotType = 'textMarkup';\n    for (var i = 0; i < textMarkup.reviewHistory.count; i++) {\n      markupAnnotation.State = this.getStateString(textMarkup.reviewHistory.at(parseInt(i.toString(), 10)).state);\n      markupAnnotation.StateModel = this.getStateModelString(textMarkup.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n    }\n    if (isNullOrUndefined(markupAnnotation.State) || isNullOrUndefined(markupAnnotation.StateModel)) {\n      markupAnnotation.State = 'Unmarked';\n      markupAnnotation.StateModel = 'None';\n    }\n    markupAnnotation.Comments = new Array();\n    for (var i = 0; i < textMarkup.comments.count; i++) {\n      var annot = this.loadPopupAnnotation(textMarkup.comments.at(i), height, width, pageRotation);\n      markupAnnotation.Comments.push(annot);\n    }\n    if (textMarkup.flags === PdfAnnotationFlag.readOnly) {\n      markupAnnotation.IsCommentLock = true;\n    } else {\n      markupAnnotation.IsCommentLock = false;\n    }\n    if (textMarkup.flags === PdfAnnotationFlag.print) {\n      markupAnnotation.IsPrint = true;\n    }\n    if (textMarkup._dictionary.has('CustomData') && !isNullOrUndefined(textMarkup._dictionary.get('CustomData'))) {\n      var customData = textMarkup._dictionary.get('CustomData');\n      if (customData != null) {\n        markupAnnotation.ExistingCustomData = JSON.stringify(customData);\n      }\n    }\n    if (textMarkup._dictionary.has('AllowedInteractions')) {\n      var allowedInteractions = textMarkup.getValues('AllowedInteractions');\n      var text = allowedInteractions[0];\n      markupAnnotation.AllowedInteractions = JSON.parse(text);\n    }\n    if (textMarkup._dictionary.has('TextMarkupContent')) {\n      var textMarkupData = textMarkup.getValues('TextMarkupContent');\n      if (!isNullOrUndefined(textMarkupData)) {\n        markupAnnotation.TextMarkupContent = textMarkupData[0];\n      }\n    }\n    return markupAnnotation;\n  };\n  // eslint-disable-next-line max-len\n  AnnotationRenderer.prototype.getTextMarkupBounds = function (quadPoints, pageHeight, pageWidth, pageRotation, page) {\n    var x = 0;\n    var y = 0;\n    var width = 0;\n    var height = 0;\n    var annotationBoundList = [];\n    var cropValues = this.getCropBoxValue(page, false);\n    var cropX = 0;\n    var cropY = 0;\n    if (cropValues.x !== 0 && cropValues.y !== 0) {\n      cropX = cropValues.x;\n      cropY = cropValues.y;\n    }\n    if (!isNullOrUndefined(quadPoints)) {\n      for (var k = 0; k < quadPoints.length; k++) {\n        if (pageRotation === 0) {\n          x = this.convertPointToPixel(parseInt(quadPoints[parseInt(k.toString(), 10)], 10) - cropX);\n          y = pageHeight - this.convertPointToPixel(parseInt(quadPoints[k + 1], 10) + cropY);\n          height = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n          width = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n        } else if (pageRotation === 1) {\n          x = this.convertPointToPixel(parseInt(quadPoints[k + 5], 10));\n          y = this.convertPointToPixel(parseInt(quadPoints[parseInt(k.toString(), 10)], 10));\n          height = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n          width = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n        } else if (pageRotation === 2) {\n          x = pageWidth - this.convertPointToPixel(parseInt(quadPoints[k + 2], 10));\n          y = this.convertPointToPixel(parseInt(quadPoints[k + 5], 10));\n          height = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n          width = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n        } else {\n          x = pageWidth - this.convertPointToPixel(parseInt(quadPoints[k + 1], 10));\n          y = pageHeight - this.convertPointToPixel(parseInt(quadPoints[k + 6], 10));\n          height = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n          width = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n        }\n        var bounds = new AnnotBounds(x, y, width, height);\n        k = k + 7;\n        annotationBoundList.push(bounds);\n      }\n    }\n    return annotationBoundList;\n  };\n  AnnotationRenderer.prototype.getMarkupAnnotTypeString = function (textMarkupType) {\n    var type = '';\n    switch (textMarkupType) {\n      case PdfTextMarkupAnnotationType.highlight:\n        type = 'Highlight';\n        break;\n      case PdfTextMarkupAnnotationType.strikeOut:\n        type = 'StrikeOut';\n        break;\n      case PdfTextMarkupAnnotationType.underline:\n        type = 'Underline';\n        break;\n      case PdfTextMarkupAnnotationType.squiggly:\n        type = 'Squiggly';\n        break;\n    }\n    return type;\n  };\n  return AnnotationRenderer;\n}();\nexport { AnnotationRenderer };\n/**\n *\n * @hidden\n */\nvar PointBase = /** @class */function () {\n  function PointBase(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  return PointBase;\n}();\nexport { PointBase };\n/**\n *\n * @hidden\n */\nvar FreeTextAnnotationBase = /** @class */function () {\n  function FreeTextAnnotationBase() {\n    this.AnnotationSelectorSettings = null;\n    this.TextMarkupColor = null;\n    this.Color = null;\n    this.Font = null;\n    this.Border = null;\n    this.LineEndingStyle = null;\n    this.AnnotationFlags = null;\n    this.CalloutLines = null;\n    this.ModifiedDate = null;\n    this.Comments = null;\n    this.CreatedDate = null;\n    this.InnerColor = null;\n    this.Layer = null;\n    this.Page = null;\n    this.PageTags = null;\n    this.ReviewHistory = null;\n    this.Rotate = 0;\n    this.Note = null;\n    this.CustomData = null;\n    this.AnnotationSettings = null;\n    this.IsPrint = true;\n    this.IsReadonly = false;\n    this.ExistingCustomData = null;\n    this.Bounds = null;\n    this.PageRotation = 0;\n  }\n  return FreeTextAnnotationBase;\n}();\nexport { FreeTextAnnotationBase };\n/**\n *\n * @hidden\n */\nvar InkSignatureAnnotation = /** @class */function () {\n  function InkSignatureAnnotation() {\n    this.AnnotationType = null;\n    this.Bounds = null;\n    this.CustomData = null;\n    this.Opacity = 0;\n    this.StrokeColor = null;\n    this.Thickness = null;\n    this.PathData = null;\n    this.IsLocked = null;\n    this.IsCommentLock = null;\n    this.PageNumber = null;\n    this.AnnotName = null;\n    this.Author = null;\n    this.ModifiedDate = null;\n    this.Subject = null;\n    this.Note = null;\n    this.State = null;\n    this.StateModel = null;\n    this.AnnotationSelectorSettings = null;\n    this.AnnotationSettings = null;\n    this.AllowedInteractions = null;\n    this.Comments = null;\n    this.AnnotType = null;\n    this.IsPrint = null;\n    this.ExistingCustomData = null;\n  }\n  return InkSignatureAnnotation;\n}();\nexport { InkSignatureAnnotation };\n/**\n *\n * @hidden\n */\nvar ShapeAnnotationBase = /** @class */function () {\n  function ShapeAnnotationBase() {\n    this.LabelBounds = new AnnotBounds(0, 0, 0, 0);\n    this.LabelContent = null;\n    this.LabelFillColor = null;\n    this.LabelBorderColor = null;\n    this.LabelSettings = null;\n    this.FontColor = null;\n    this.FontSize = 0;\n    this.AnnotationSettings = null;\n    this.AnnotationSelectorSettings = null;\n    this.VertexPoints = null;\n    this.CustomData = null;\n    this.ExistingCustomData = null;\n    this.IsPrint = true;\n    this.AllowedInteractions = null;\n    this.AnnotationRotation = 0;\n  }\n  return ShapeAnnotationBase;\n}();\nexport { ShapeAnnotationBase };\n/**\n *\n * @hidden\n */\nvar MeasureShapeAnnotationBase = /** @class */function () {\n  function MeasureShapeAnnotationBase(shapeAnnotation) {\n    this.LabelBounds = new AnnotBounds(0, 0, 0, 0);\n    this.LabelContent = null;\n    this.LabelFillColor = null;\n    this.LabelBorderColor = null;\n    this.LabelSettings = null;\n    this.FontColor = null;\n    this.FontSize = 0;\n    this.AnnotationSettings = null;\n    this.AnnotationSelectorSettings = null;\n    this.VertexPoints = null;\n    this.CustomData = null;\n    this.ExistingCustomData = null;\n    this.IsPrint = true;\n    this.AllowedInteractions = null;\n    this.AnnotationRotation = 0;\n    this.Author = shapeAnnotation.Author;\n    this.AnnotationSelectorSettings = shapeAnnotation.AnnotationSelectorSettings;\n    this.BorderDashArray = shapeAnnotation.BorderDashArray;\n    this.BorderStyle = shapeAnnotation.BorderStyle;\n    this.Bounds = shapeAnnotation.Bounds;\n    this.CloudIntensity = shapeAnnotation.CloudIntensity;\n    this.FillColor = shapeAnnotation.FillColor;\n    this.IsCloudShape = shapeAnnotation.IsCloudShape;\n    this.IsLocked = shapeAnnotation.IsLocked;\n    this.LineHeadEnd = shapeAnnotation.LineHeadEnd;\n    this.LineHeadStart = shapeAnnotation.LineHeadStart;\n    this.ModifiedDate = shapeAnnotation.ModifiedDate;\n    this.Note = shapeAnnotation.Note;\n    this.Opacity = shapeAnnotation.Opacity;\n    this.RectangleDifference = shapeAnnotation.RectangleDifference;\n    this.RotateAngle = shapeAnnotation.RotateAngle;\n    this.ShapeAnnotationType = shapeAnnotation.ShapeAnnotationType;\n    this.StrokeColor = shapeAnnotation.StrokeColor;\n    this.Subject = shapeAnnotation.Subject;\n    this.Thickness = shapeAnnotation.Thickness;\n    this.VertexPoints = shapeAnnotation.VertexPoints;\n    this.AnnotName = shapeAnnotation.AnnotName;\n    this.Comments = shapeAnnotation.Comments;\n    this.State = shapeAnnotation.State;\n    this.StateModel = shapeAnnotation.StateModel;\n    this.AnnotType = 'shape_measure';\n    this.AnnotationSettings = shapeAnnotation.AnnotationSettings;\n    this.EnableShapeLabel = shapeAnnotation.EnableShapeLabel;\n    this.AllowedInteractions = shapeAnnotation.AllowedInteractions;\n    this.AnnotationRotation = shapeAnnotation.AnnotationRotation;\n    if (shapeAnnotation.EnableShapeLabel == true) {\n      this.LabelContent = shapeAnnotation.LabelContent;\n      this.LabelFillColor = shapeAnnotation.LabelFillColor;\n      this.FontColor = shapeAnnotation.FontColor;\n      this.LabelBorderColor = shapeAnnotation.LabelBorderColor;\n      this.FontSize = shapeAnnotation.FontSize;\n      this.LabelSettings = shapeAnnotation.LabelSettings;\n      this.LabelBounds = shapeAnnotation.LabelBounds;\n    }\n  }\n  return MeasureShapeAnnotationBase;\n}();\nexport { MeasureShapeAnnotationBase };\n/**\n *\n * @hidden\n */\nvar SignatureAnnotationBase = /** @class */function () {\n  function SignatureAnnotationBase() {\n    this.PathData = null;\n    this.ExistingCustomData = null;\n  }\n  return SignatureAnnotationBase;\n}();\nexport { SignatureAnnotationBase };\nvar Measure = /** @class */function () {\n  function Measure() {\n    this.Ratio = '';\n    this.X = [];\n    this.Distance = [];\n    this.Area = [];\n    this.Angle = [];\n    this.Volume = [];\n    this.TargetUnitConversion = 0;\n    this.Depth = 0;\n  }\n  return Measure;\n}();\nvar NumberFormat = /** @class */function () {\n  function NumberFormat() {\n    this.Unit = '';\n    this.ConversionFactor = 0;\n    this.FractionalType = '';\n    this.Denominator = 0;\n    this.FormatDenominator = false;\n  }\n  return NumberFormat;\n}();\n/**\n *\n * @hidden\n */\nvar PopupAnnotationBase = /** @class */function () {\n  function PopupAnnotationBase() {\n    this.AnnotationFlags = null;\n    this.AnnotationSelectorSettings = null;\n    this.AnnotationSettings = null;\n    this.ExistingCustomData = null;\n    this.CustomData = null;\n    this.IsPrint = false;\n  }\n  return PopupAnnotationBase;\n}();\nexport { PopupAnnotationBase };\n/**\n *\n * @hidden\n */\nvar TextMarkupAnnotationBase = /** @class */function () {\n  function TextMarkupAnnotationBase() {\n    this.AnnotationSelectorSettings = null;\n    this.AnnotationSettings = null;\n    this.ExistingCustomData = null;\n    this.CustomData = null;\n    this.IsPrint = true;\n    this.IsMultiSelect = false;\n    this.AnnotpageNumbers = null;\n    this.AnnotNameCollection = null;\n  }\n  return TextMarkupAnnotationBase;\n}();\nexport { TextMarkupAnnotationBase };\n/**\n *\n * @hidden\n */\nvar PdfLayer = /** @class */function () {\n  function PdfLayer() {}\n  return PdfLayer;\n}();\nexport { PdfLayer };\n/**\n *\n * @hidden\n */\nvar AnnotPoint = /** @class */function () {\n  function AnnotPoint(_X, _Y) {\n    this.X = _X;\n    this.Y = _Y;\n  }\n  return AnnotPoint;\n}();\nexport { AnnotPoint };\n/**\n *\n * @hidden\n */\nvar AnnotBounds = /** @class */function () {\n  function AnnotBounds(_X, _Y, _Width, _Height) {\n    this.X = _X;\n    this.Y = _Y;\n    this.Width = _Width;\n    this.Height = _Height;\n    this.Location = {\n      X: _X,\n      Y: _Y\n    };\n    this.Size = {\n      IsEmpty: false,\n      Width: _Width,\n      Height: _Height\n    };\n    this.Left = _X;\n    this.Top = _Y;\n    this.Right = _X + _Width;\n    this.Bottom = _Y + _Height;\n  }\n  return AnnotBounds;\n}();\nexport { AnnotBounds };\n/**\n *\n * @hidden\n */\nvar AnnotColor = /** @class */function () {\n  function AnnotColor(_R, _G, _B) {\n    this.IsEmpty = true;\n    this.R = _R;\n    this.G = _G;\n    this.B = _B;\n    if (this.R !== 0 || this.G !== 0 || this.B !== 0) {\n      this.IsEmpty = false;\n    }\n  }\n  return AnnotColor;\n}();\nexport { AnnotColor };\n/**\n *\n * @hidden\n */\nvar FontBase = /** @class */function () {\n  function FontBase(pdfFont, fontFamilyString) {\n    this.Bold = pdfFont.isBold;\n    this.FontFamily = pdfFont._fontFamily;\n    this.Height = pdfFont.height;\n    this.Italic = pdfFont.isItalic;\n    this.Name = fontFamilyString;\n    this.Size = pdfFont.size;\n    this.Strikeout = pdfFont.isStrikeout;\n    this.Style = pdfFont.style;\n    this.Underline = pdfFont.isUnderline;\n  }\n  return FontBase;\n}();\nexport { FontBase };\n/**\n *\n * @hidden\n */\nvar RectangleBase = /** @class */function () {\n  /**\n   * @private\n   */\n  function RectangleBase(left, top, right, bottom) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.width = right - left;\n    this.height = bottom - top;\n  }\n  return RectangleBase;\n}();\nexport { RectangleBase };","map":{"version":3,"names":["isNullOrUndefined","Matrix","Rect","Size","PdfAnnotationBorder","PdfRotationAngle","PdfSquareAnnotation","PdfAnnotationFlag","_PdfDictionary","_PdfName","PdfBorderEffectStyle","PdfBorderEffect","PdfAnnotationState","PdfAnnotationStateModel","PdfCircleAnnotation","PdfPopupAnnotation","PdfLineAnnotation","PdfLineEndingStyle","PdfFontStyle","PdfFontFamily","PdfStandardFont","PdfStringFormat","PdfTextAlignment","PdfRubberStampAnnotation","PdfPen","PdfBrush","PdfVerticalAlignment","_PdfPath","PdfRubberStampAnnotationIcon","PdfBitmap","PdfPolyLineAnnotation","PdfCircleMeasurementType","PdfPopupIcon","PdfFreeTextAnnotation","PdfBorderStyle","PdfRectangleAnnotation","PdfPolygonAnnotation","PdfEllipseAnnotation","PdfTextMarkupAnnotation","PdfInkAnnotation","PdfLineIntent","PdfTemplate","PdfTextMarkupAnnotationType","PdfLineCaptionType","PdfMeasurementUnit","PdfAnnotationIntent","PdfTrueTypeFont","_decode","SizeBase","PageRenderer","AnnotationRenderer","pdfViewer","pdfViewerBase","formats","prototype","addShape","details","page","shapeAnnotation","isLock","checkAnnotationLock","author","shapeAnnotationType","points","JSON","parse","vertexPoints","linePoints","getSaveVertexPoints","lineAnnotation","note","text","toString","_dictionary","set","annotName","subject","strokeColor","color","r","g","b","fillColor","innerColor","a","update","opacity","lineBorder","width","thickness","style","borderStyle","dash","borderDashArray","border","rotationAngle","getRotateAngle","rotateAngle","lineEndingStyle","begin","getLineEndingStyle","lineHeadStart","end","lineHeadEnd","dateValue","modifiedDate","isNaN","Date","commentsDetails","comments","bounds","x","left","y","top","length","i","add","addCommentsCollection","parseInt","reviewDetails","review","reviewHistory","addReviewCollections","isLocked","flags","locked","print","isPrint","isCommentLock","Boolean","_annotFlags","readOnly","customData","setValues","allowedInteractions","stringify","setAppearance","annotations","cropValues","getCropBoxValue","convertPixelToPoint","top_1","height","cropX","cropY","cropBox","size","squareAnnotation","isTransparentColor","isCloudShape","borderEffect","cloudy","intensity","cloudIntensity","rectDifferences","rectangleDifference","rd","getRDValues","top_2","circleAnnotation","_borderEffect","top_3","polygonAnnotation","polylineAnnotation","beginLineStyle","endLineStyle","dictionary","_crossReference","get","saveInkSignature","inkSignatureAnnotation","stampObjects","data","rotation","minimumX","minimumY","maximumX","maximumY","drawingPath","p","val","_addLine","k","_points","value","point1","point2","newDifferenceX","newDifferenceY","isNewValues","j","path","push","parseFloat","rotatedPoints","getRotatedPath","z","newX_1","rectangle","colors","inkAnnotation","bound","pathCollection","graphicsPoints","pointsCollections","inkPointsCollection","newX","i_1","graphicsPath","addTextMarkup","loadedDocument","markupAnnotation","pageNo","getPage","annotationtypes","textMarkupAnnotationType","textMarkupType","highlight","strikeOut","underline","squiggly","boundsCollection","_loop_1","this_1","hasOwnProperty","groupedRectangles","Map","_i","boundsCollection_1","rect_1","has","combinedRectangles","forEach","group","groupKey","minX","Math","min","apply","map","rect","reduce","sum","annotation","annotationRotation","annotColor","boundArrayCollection","boundArray","textMarkUpColor","textMarkupContent","isPath","cropBoxX","cropBoxY","getBothCropBoxValue","addCustomStampAnnotation","stampAnnotation","graphics","pageRotation","wrapperBounds","boundsXY","calculateBoundsXY","stampAnnotationType","stampAnnotationPath","annotationSettings","pageRender","rubberStampAnnotation","imageUrl","split","bytes","bitmap","appearance","normal","state","save","drawImage","restore","filterAnnot","pngData","filter","nameStamp","name","pngDictionary","icon","stampColor","stampFillcolor","isDynamic","isDynamicStamp","textBrush","stampWidth","stampBrush","stampcolors","pens","pageRotation_1","isIconExists","getIconName","trim","drawStampAsPath","getRubberStampRotateAngle","dateValue_1","drawRoundedRectangle","dynamicText","setTransparency","renderDynamicStamp","retriveDefaultWidth","renderSignHereStamp","addMeasure","measureShapeAnnotation","lineIntent","lineDimension","getBorderStyle","caption","type","getCaptionType","captionPosition","cap","leaderExt","leaderLength","leaderLine","leaderLineExtension","leaderLineOffset","measureDetail","calibrate","measure","unit","distance","setMeasurementUnit","indent","setMeasureDictionary","circleMeasurementAnnotation","addCircleMeasurementAnnotation","addStickyNotes","pageNumber","popUpAnnotation","comment","isAnnotationFlagSet","addFreeText","textFont","_this","pageIndex","freeTextAnnotation","openArrow","annotationIntent","freeTextTypeWriter","fontSize","fontFamily","getFontFamily","fontJson","font","fontStyle","getFontStyle","Keys","key","fontStream","fontAnnotation","regular","format","measureString","glyphPresent","padding","paddingValues","borderColor","fontColor","textMarkupColor","textAlign","textAlignment","getPdfTextAlignment","toLowerCase","isReadonly","stringFormat","helvetica","bold","italic","alignment","center","lineAlignment","middle","defaultHeight","defaultWidth","scaleTransform","pointValues","drawString","toUpperCase","stampFont","detailsFont","stampTypeBounds","stampTimeStampbounds","pdfPageBase","pageSize","getPageSize","angle90","angle180","angle270","pdfRendererModule","convertPointToPixel","measurementUnit","centimeter","inch","millimeter","point","pica","angleString","angle","courier","timesRoman","symbol","zapfDingbats","isBold","isItalic","isStrikeout","strikeout","isUnderline","right","justify","resultObjects","transformMatrix","currentPoint","index","command","_startFigure","array","transformPoints","array1","array2","x1","y1","x2","y2","array21","_addBezier","_closeFigure","transform","iconExists","approved","confidential","notApproved","draft","final","completed","forPublicRelease","notForPublicRelease","forComment","void","preliminaryResults","informationOnly","measureType","radius","measureDictionary","ratio","xNumberFormat","createNumberFormat","dNumberFormat","area","aNumberFormat","tNumberFormat","volume","vNumberFormat","numberFormatList","numberFormats","undefined","numberFormatDictionary","numberFormat","fractionalType","denominator","conversionFactor","formatDenominator","pageHeight","_size","pointList","endingStyle","none","square","closedArrow","rClosedArrow","rOpenArrow","butt","circle","diamond","slash","captionType","inline","popupAnnotation","getReviewState","stateModel","reviewState","accepted","cancel","rejected","unmarked","isWhite","values","rectDifference","angle0","loadSignature","inkAnnot","loadedPage","signature","SignatureAnnotationBase","outputstring","inkList","AnnotationType","Bounds","getBounds","Opacity","Thickness","PathData","StrokeColor","PageNumber","SignatureName","loadInkAnnotation","InkSignatureAnnotation","_page","Author","Subject","ModifiedDate","formatDate","Note","getValidNoteContent","count","State","getStateString","at","StateModel","getStateModelString","Comments","Array","annot","loadPopupAnnotation","IsLocked","IsCommentLock","AnnotType","cropRect","AnnotName","ExistingCustomData","loadSquareAnnotation","squareAnnot","shapeFreeText","ShapeAnnotationBase","ShapeAnnotationType","BorderStyle","getBorderStylesString","BorderDashArray","RotateAngle","getRotateAngleString","rotate","LineHeadStart","LineHeadEnd","IsCloudShape","CloudIntensity","RectangleDifference","includes","IsPrint","getValues","AllowedInteractions","fillOpacity","FillColor","EnableShapeLabel","LabelContent","LabelFillColor","FontColor","LabelBorderColor","FontSize","loadLineAnnotation","lineAnnot","getLineEndingStyleString","getLineIndentString","VertexPoints","getLinePoints","lineArrow","MeasureShapeAnnotationBase","Calibrate","getMeasureObject","Indent","Caption","LeaderLength","LeaderLineExtension","LeaderLineOffset","CaptionPosition","pageWidth","startingPoint","AnnotPoint","endingPoint","X","Y","loadEllipseAnnotation","ellipseAnnot","loadPolygonAnnotation","polygonAnnot","getVertexPoints","Depth","loadPolylineAnnotation","polyLineAnnot","loadSignatureImage","formsFields","pdfReference","Object","m_renderer","findStampImage","imageData","measureObject","Measure","Ratio","xList","getMeasureValues","getArray","distanceList","Distance","areaList","Area","angleList","Angle","volumeList","Volume","TargetUnitConversion","FloatValue","arrayValues","measureValuesArray","measureFormat","measureValue","NumberFormat","Denominator","ConversionFactor","FractionalType","FormatDenominator","Unit","vertices","solid","dashed","beveled","inset","dot","AnnotBounds","popupAnnot","PopupAnnotationBase","SubType","Type","reference","Reference","IsLock","Icon","getPopupIconString","Color","AnnotColor","R","G","B","loadFreeTextAnnotation","freeTextAnnot","FreeTextAnnotationBase","AnnotationIntent","getAnnotationIntentString","AnnotationFlags","getAnnotationFlagsString","abs","random","substring","FreeTextAnnotationType","BorderColor","CalloutLines","backgroundColor","Flatten","flatten","FlattenPopups","flattenPopups","FontFamily","getFontFamilyString","_fontFamily","Font","FontBase","Layer","Location","MarkupText","Name","Rotate","Text","TextAlign","getTextAlignmentString","PageRotation","IsReadonly","loadSignatureText","formFields","default","invisible","hidden","noZoom","noRotate","noView","toggleNoView","freeTextCallout","marked","unknown","help","insert","newParagraph","paragraph","date","month","datePadding","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","number","removeSignatureTypeAnnot","jsonObject","annotationPageList","annotationsPageList","removeAnnotList","loadedPageNo","oldPageAnnotations","totalAnnotation","m","remove","loadTextMarkupAnnotation","textMarkup","TextMarkupAnnotationBase","TextMarkupAnnotationType","getMarkupAnnotTypeString","RectangleBase","slice","AnnotationRotation","quadPoints","getTextMarkupBounds","textMarkupData","TextMarkupContent","annotationBoundList","PointBase","AnnotationSelectorSettings","TextMarkupColor","Border","LineEndingStyle","CreatedDate","InnerColor","Page","PageTags","ReviewHistory","CustomData","AnnotationSettings","LabelBounds","LabelSettings","IsMultiSelect","AnnotpageNumbers","AnnotNameCollection","PdfLayer","_X","_Y","_Width","_Height","Width","Height","IsEmpty","Left","Top","Right","Bottom","_R","_G","_B","pdfFont","fontFamilyString","Bold","Italic","Strikeout","Style","Underline","bottom"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/annotation-renderer.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Matrix, Rect, Size } from '@syncfusion/ej2-drawings';\nimport { PdfAnnotationBorder, PdfRotationAngle, PdfSquareAnnotation, PdfAnnotationFlag, _PdfDictionary, _PdfName, PdfBorderEffectStyle, PdfBorderEffect, PdfAnnotationState, PdfAnnotationStateModel, PdfCircleAnnotation, PdfPopupAnnotation, PdfLineAnnotation, PdfLineEndingStyle, PdfFontStyle, PdfFontFamily, PdfStandardFont, PdfStringFormat, PdfTextAlignment, PdfRubberStampAnnotation, PdfPen, PdfBrush, PdfVerticalAlignment, _PdfPath, PdfRubberStampAnnotationIcon, PdfBitmap, PdfPolyLineAnnotation, PdfCircleMeasurementType, PdfPopupIcon, PdfFreeTextAnnotation, PdfBorderStyle, PdfRectangleAnnotation, PdfPolygonAnnotation, PdfEllipseAnnotation, PdfTextMarkupAnnotation, PdfInkAnnotation, PdfLineIntent, PdfTemplate, PdfTextMarkupAnnotationType, PdfLineCaptionType, PdfMeasurementUnit, PdfAnnotationIntent, PdfTrueTypeFont, _decode } from '@syncfusion/ej2-pdf';\nimport { SizeBase, PageRenderer } from '../index';\n/**\n * AnnotationRenderer\n *\n * @hidden\n */\nvar AnnotationRenderer = /** @class */ (function () {\n    /**\n     * @param {PdfViewer} pdfViewer - The PdfViewer.\n     * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n     * @private\n     */\n    function AnnotationRenderer(pdfViewer, pdfViewerBase) {\n        this.formats = ['M/d/yyyy h:mm:ss tt', 'M/d/yyyy, h:mm:ss tt', 'M/d/yyyy h:mm tt',\n            'MM/dd/yyyy hh:mm:ss', 'M/d/yyyy h:mm:ss',\n            'M/d/yyyy hh:mm tt', 'M/d/yyyy hh tt',\n            'M/d/yyyy h:mm', 'M/d/yyyy h:mm',\n            'MM/dd/yyyy hh:mm', 'M/dd/yyyy hh:mm', 'dd/M/yyyy h:mm:ss tt', 'dd/M/yyyy, h:mm:ss tt',\n            'M/d/yy, h:mm:ss tt', 'yyyy/MM/dd, h:mm:ss tt', 'dd/MMM/yy, h:mm:ss tt',\n            'yyyy-MM-dd, h:mm:ss tt', 'dd-MMM-yy, h:mm:ss tt', 'MM-dd-yy, h:mm:ss tt', 'YYYY-MM-DDTHH:mm:ss.sssZ', 'Â±YYYYYY-MM-DDTHH:mm:ss.sssZ', 'yyyy-MM-ddTHH:mm:ss.fffZ'];\n        this.pdfViewer = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    /**\n     * @param details\n     * @param page\n     *\n     * @private\n     */\n    AnnotationRenderer.prototype.addShape = function (details, page) {\n        var shapeAnnotation = details;\n        var isLock = this.checkAnnotationLock(shapeAnnotation);\n        if (!isNullOrUndefined(shapeAnnotation.author)) {\n            shapeAnnotation.author = 'Guest';\n        }\n        if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Line') {\n            var points = JSON.parse(shapeAnnotation.vertexPoints);\n            var linePoints = this.getSaveVertexPoints(points, page);\n            var lineAnnotation = new PdfLineAnnotation(linePoints);\n            if (!isNullOrUndefined(shapeAnnotation.note)) {\n                lineAnnotation.text = shapeAnnotation.note.toString();\n            }\n            lineAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n            lineAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n            if (!isNullOrUndefined(shapeAnnotation.subject)) {\n                lineAnnotation.subject = shapeAnnotation.subject.toString();\n            }\n            if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n                // eslint-disable-next-line max-len\n                var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n                lineAnnotation.color = color;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var fillColor = JSON.parse(shapeAnnotation.fillColor);\n                var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                lineAnnotation.innerColor = innerColor;\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n                lineAnnotation.opacity = shapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = shapeAnnotation.thickness;\n            lineBorder.style = shapeAnnotation.borderStyle;\n            lineBorder.dash = shapeAnnotation.borderDashArray;\n            lineAnnotation.border = lineBorder;\n            lineAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n            lineAnnotation.lineEndingStyle.begin = this.getLineEndingStyle(shapeAnnotation.lineHeadStart);\n            lineAnnotation.lineEndingStyle.end = this.getLineEndingStyle(shapeAnnotation.lineHeadEnd);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n                lineAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = shapeAnnotation.comments;\n            var bounds = JSON.parse(shapeAnnotation.bounds);\n            lineAnnotation.bounds = bounds;\n            lineAnnotation.bounds.x = bounds.left;\n            lineAnnotation.bounds.y = bounds.top;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    lineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], lineAnnotation.bounds));\n                }\n            }\n            var reviewDetails = shapeAnnotation.review;\n            lineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, lineAnnotation.bounds));\n            if (!isNullOrUndefined(shapeAnnotation.isLocked && shapeAnnotation.isLocked)) {\n                lineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            var isPrint = false;\n            var isCommentLock = false;\n            if (shapeAnnotation.isCommentLock && shapeAnnotation['isCommentLock'] !== null) {\n                isCommentLock = Boolean(shapeAnnotation['isCommentLock'].toString());\n            }\n            if (shapeAnnotation.isPrint && shapeAnnotation['isPrint'] !== null) {\n                isPrint = Boolean(shapeAnnotation['isPrint'].toString());\n            }\n            if (isCommentLock && isPrint) {\n                lineAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n            }\n            else if (isPrint) {\n                lineAnnotation._annotFlags = PdfAnnotationFlag.print;\n            }\n            else if (isCommentLock) {\n                lineAnnotation._annotFlags = PdfAnnotationFlag.readOnly;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.customData)) {\n                lineAnnotation.setValues('CustomData', shapeAnnotation.customData);\n            }\n            if (shapeAnnotation.allowedInteractions && shapeAnnotation['allowedInteractions'] != null) {\n                lineAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation['allowedInteractions']));\n            }\n            lineAnnotation.setAppearance(true);\n            page.annotations.add(lineAnnotation);\n        }\n        else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Square') {\n            var bounds = JSON.parse(shapeAnnotation.bounds);\n            if (isNullOrUndefined(bounds.left)) {\n                shapeAnnotation.bounds.left = 0;\n            }\n            if (isNullOrUndefined(bounds.top)) {\n                shapeAnnotation.bounds.top = 0;\n            }\n            var cropValues = this.getCropBoxValue(page, false);\n            var left = this.convertPixelToPoint(bounds.left);\n            var top_1 = this.convertPixelToPoint(bounds.top);\n            var width = this.convertPixelToPoint(bounds.width);\n            var height = this.convertPixelToPoint(bounds.height);\n            var cropX = 0;\n            var cropY = 0;\n            if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n                cropX = cropValues.x;\n                cropY = cropValues.y;\n            }\n            else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n                cropX = cropValues.x;\n                cropY = cropValues.y;\n            }\n            // eslint-disable-next-line max-len\n            var squareAnnotation = new PdfSquareAnnotation(cropX + left, cropY + top_1, width, height);\n            if (!isNullOrUndefined(shapeAnnotation.note)) {\n                squareAnnotation.text = shapeAnnotation.note.toString();\n            }\n            squareAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n            squareAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n            if (!isNullOrUndefined(shapeAnnotation.subject)) {\n                squareAnnotation.subject = shapeAnnotation.subject.toString();\n            }\n            if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n                // eslint-disable-next-line max-len\n                var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n                squareAnnotation.color = color;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var fillColor = JSON.parse(shapeAnnotation.fillColor);\n                // eslint-disable-next-line max-len\n                if (!this.isTransparentColor(fillColor)) {\n                    var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                    squareAnnotation.innerColor = innerColor;\n                }\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    squareAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    squareAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n                squareAnnotation.opacity = shapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = shapeAnnotation.thickness;\n            lineBorder.style = shapeAnnotation.borderStyle;\n            lineBorder.dash = shapeAnnotation.borderDashArray;\n            squareAnnotation.border = lineBorder;\n            squareAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n                squareAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = shapeAnnotation.comments;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    squareAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], squareAnnotation.bounds));\n                }\n            }\n            var reviewDetails = shapeAnnotation.review;\n            squareAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, squareAnnotation.bounds));\n            if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n                var borderEffect = new PdfBorderEffect();\n                borderEffect.style = PdfBorderEffectStyle.cloudy;\n                borderEffect.intensity = shapeAnnotation.cloudIntensity;\n                squareAnnotation.borderEffect = borderEffect;\n                var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n                if (rectDifferences.length > 0) {\n                    var rd = this.getRDValues(rectDifferences);\n                    squareAnnotation._dictionary.update('RD', rd);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.isLocked) && shapeAnnotation.isLocked) {\n                squareAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            var isPrint = false;\n            var isCommentLock = false;\n            if (shapeAnnotation.isCommentLock && shapeAnnotation['isCommentLock'] !== null) {\n                isCommentLock = Boolean(shapeAnnotation['isCommentLock'].toString());\n            }\n            if (shapeAnnotation.isPrint && shapeAnnotation['isPrint'] !== null) {\n                isPrint = Boolean(shapeAnnotation['isPrint'].toString());\n            }\n            if (isCommentLock && isPrint) {\n                squareAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n            }\n            else if (isPrint) {\n                squareAnnotation._annotFlags = PdfAnnotationFlag.print;\n            }\n            else if (isCommentLock) {\n                squareAnnotation._annotFlags = PdfAnnotationFlag.readOnly;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.customData)) {\n                squareAnnotation.setValues('CustomData', shapeAnnotation.customData);\n            }\n            if (shapeAnnotation.allowedInteractions && shapeAnnotation['allowedInteractions'] != null) {\n                squareAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation['allowedInteractions']));\n            }\n            squareAnnotation.setAppearance(true);\n            page.annotations.add(squareAnnotation);\n        }\n        else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Circle') {\n            var bounds = JSON.parse(shapeAnnotation.bounds);\n            var left = this.convertPixelToPoint(bounds.left);\n            var top_2 = this.convertPixelToPoint(bounds.top);\n            var width = this.convertPixelToPoint(bounds.width);\n            var height = this.convertPixelToPoint(bounds.height);\n            if (isNullOrUndefined(bounds.left)) {\n                shapeAnnotation.bounds.left = 0;\n            }\n            if (isNullOrUndefined(bounds.top)) {\n                shapeAnnotation.bounds.top = 0;\n            }\n            var cropValues = this.getCropBoxValue(page, false);\n            var cropX = 0;\n            var cropY = 0;\n            if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n                cropX = cropValues.x;\n                cropY = cropValues.y;\n            }\n            else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n                cropX = cropValues.x;\n                cropY = cropValues.y;\n            }\n            // eslint-disable-next-line max-len\n            var circleAnnotation = new PdfCircleAnnotation(cropX + left, cropY + top_2, width, height);\n            if (!isNullOrUndefined(shapeAnnotation.note)) {\n                circleAnnotation.text = shapeAnnotation.note.toString();\n            }\n            circleAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n            circleAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n            if (!isNullOrUndefined(shapeAnnotation.subject)) {\n                circleAnnotation.subject = shapeAnnotation.subject.toString();\n            }\n            if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n                // eslint-disable-next-line max-len\n                var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n                circleAnnotation.color = color;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var fillColor = JSON.parse(shapeAnnotation.fillColor);\n                if (!this.isTransparentColor(fillColor)) {\n                    var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                    circleAnnotation.innerColor = innerColor;\n                }\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n                circleAnnotation.opacity = shapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = shapeAnnotation.thickness;\n            lineBorder.style = shapeAnnotation.borderStyle;\n            lineBorder.dash = shapeAnnotation.borderDashArray;\n            circleAnnotation.border = lineBorder;\n            circleAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n                circleAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = shapeAnnotation.comments;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    circleAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], circleAnnotation.bounds));\n                }\n            }\n            var reviewDetails = shapeAnnotation.review;\n            circleAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, circleAnnotation.bounds));\n            if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n                var borderEffect = new PdfBorderEffect();\n                borderEffect.style = PdfBorderEffectStyle.cloudy;\n                borderEffect.intensity = shapeAnnotation.cloudIntensity;\n                circleAnnotation._borderEffect = borderEffect;\n                var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n                if (rectDifferences.length > 0) {\n                    var rd = this.getRDValues(rectDifferences);\n                    circleAnnotation._dictionary.update('RD', rd);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.isLocked && shapeAnnotation.isLocked)) {\n                circleAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            var isPrint = false;\n            var isCommentLock = false;\n            if (shapeAnnotation.isCommentLock && shapeAnnotation['isCommentLock'] !== null) {\n                isCommentLock = Boolean(shapeAnnotation['isCommentLock'].toString());\n            }\n            if (shapeAnnotation.isPrint && shapeAnnotation['isPrint'] !== null) {\n                isPrint = Boolean(shapeAnnotation['isPrint'].toString());\n            }\n            if (isCommentLock && isPrint) {\n                circleAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n            }\n            else if (isPrint) {\n                circleAnnotation._annotFlags = PdfAnnotationFlag.print;\n            }\n            else if (isCommentLock) {\n                circleAnnotation._annotFlags = PdfAnnotationFlag.readOnly;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.customData)) {\n                circleAnnotation.setValues('CustomData', shapeAnnotation.customData);\n            }\n            if (shapeAnnotation.allowedInteractions && shapeAnnotation['allowedInteractions'] != null) {\n                circleAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation['allowedInteractions']));\n            }\n            circleAnnotation.setAppearance(true);\n            page.annotations.add(circleAnnotation);\n        }\n        else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Polygon') {\n            var points = JSON.parse(shapeAnnotation.vertexPoints);\n            var linePoints = this.getSaveVertexPoints(points, page);\n            var bounds = JSON.parse(shapeAnnotation.bounds);\n            if (isNullOrUndefined(bounds.left)) {\n                shapeAnnotation.bounds.left = 0;\n            }\n            if (isNullOrUndefined(bounds.top)) {\n                shapeAnnotation.bounds.top = 0;\n            }\n            var left = this.convertPixelToPoint(bounds.left);\n            var top_3 = this.convertPixelToPoint(bounds.top);\n            var width = this.convertPixelToPoint(bounds.width);\n            var height = this.convertPixelToPoint(bounds.height);\n            var polygonAnnotation = new PdfPolygonAnnotation(linePoints);\n            polygonAnnotation.bounds = new Rect(left, top_3, width, height);\n            if (!isNullOrUndefined(shapeAnnotation.note)) {\n                polygonAnnotation.text = shapeAnnotation.note.toString();\n            }\n            polygonAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n            if (!isNullOrUndefined(shapeAnnotation.subject)) {\n                polygonAnnotation.subject = shapeAnnotation.subject.toString();\n            }\n            polygonAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n            if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n                // eslint-disable-next-line max-len\n                var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n                polygonAnnotation.color = color;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var fillColor = JSON.parse(shapeAnnotation.fillColor);\n                if (!this.isTransparentColor(fillColor)) {\n                    var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                    polygonAnnotation.innerColor = innerColor;\n                }\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n                polygonAnnotation.opacity = shapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = shapeAnnotation.thickness;\n            lineBorder.style = shapeAnnotation.borderStyle;\n            lineBorder.dash = shapeAnnotation.borderDashArray;\n            polygonAnnotation.border = lineBorder;\n            polygonAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n                polygonAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = shapeAnnotation.comments;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    polygonAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polygonAnnotation.bounds));\n                }\n            }\n            var reviewDetails = shapeAnnotation.review;\n            polygonAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polygonAnnotation.bounds));\n            if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n                var borderEffect = new PdfBorderEffect();\n                borderEffect.style = PdfBorderEffectStyle.cloudy;\n                borderEffect.intensity = shapeAnnotation.cloudIntensity;\n                polygonAnnotation.borderEffect = borderEffect;\n                var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n                if (rectDifferences.length > 0) {\n                    var rd = this.getRDValues(rectDifferences);\n                    polygonAnnotation._dictionary.update('RD', rd);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.isLocked && shapeAnnotation.isLocked)) {\n                polygonAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            var isPrint = true;\n            var isCommentLock = false;\n            if (!isNullOrUndefined(shapeAnnotation.isCommentLock) && shapeAnnotation.isCommentLock) {\n                isCommentLock = true;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.isPrint) && shapeAnnotation.isPrint) {\n                isPrint = true;\n            }\n            if (isCommentLock && isPrint) {\n                polygonAnnotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n            }\n            if (isLock) {\n                polygonAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            else if (isCommentLock) {\n                polygonAnnotation.flags = PdfAnnotationFlag.readOnly;\n            }\n            else {\n                polygonAnnotation.flags = PdfAnnotationFlag.print;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.customData)) {\n                polygonAnnotation.setValues('CustomData', shapeAnnotation.customData);\n            }\n            if (!isNullOrUndefined(shapeAnnotation.allowedInteractions)) {\n                polygonAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation.allowedInteractions));\n            }\n            polygonAnnotation.setAppearance(true);\n            page.annotations.add(polygonAnnotation);\n        }\n        else if (!isNullOrUndefined(shapeAnnotation.shapeAnnotationType) && shapeAnnotation.shapeAnnotationType === 'Polyline') {\n            var points = JSON.parse(shapeAnnotation.vertexPoints);\n            var linePoints = this.getSaveVertexPoints(points, page);\n            var polylineAnnotation = new PdfPolyLineAnnotation(linePoints);\n            if (!isNullOrUndefined(shapeAnnotation.note)) {\n                polylineAnnotation.text = shapeAnnotation.note.toString();\n            }\n            polylineAnnotation.author = !isNullOrUndefined(shapeAnnotation.author) && shapeAnnotation.author.toString() !== \"\" ? shapeAnnotation.author.toString() : 'Guest';\n            if (!isNullOrUndefined(shapeAnnotation.subject)) {\n                polylineAnnotation.subject = shapeAnnotation.subject.toString();\n            }\n            polylineAnnotation._dictionary.set('NM', shapeAnnotation.annotName.toString());\n            if (!isNullOrUndefined(shapeAnnotation.strokeColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var strokeColor = JSON.parse(shapeAnnotation.strokeColor);\n                // eslint-disable-next-line max-len\n                var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n                polylineAnnotation.color = color;\n            }\n            if (!isNullOrUndefined(shapeAnnotation.fillColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var fillColor = JSON.parse(shapeAnnotation.fillColor);\n                if (!this.isTransparentColor(fillColor)) {\n                    var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                    polylineAnnotation.innerColor = innerColor;\n                }\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(shapeAnnotation.opacity)) {\n                polylineAnnotation.opacity = shapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = shapeAnnotation.thickness;\n            lineBorder.style = shapeAnnotation.borderStyle;\n            lineBorder.dash = shapeAnnotation.borderDashArray;\n            polylineAnnotation.border = lineBorder;\n            polylineAnnotation.rotationAngle = this.getRotateAngle(shapeAnnotation.rotateAngle);\n            polylineAnnotation.beginLineStyle = this.getLineEndingStyle(shapeAnnotation.lineHeadStart);\n            polylineAnnotation.endLineStyle = this.getLineEndingStyle(shapeAnnotation.lineHeadEnd);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(shapeAnnotation.modifiedDate) && !isNaN(Date.parse(shapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(shapeAnnotation.modifiedDate));\n                polylineAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = shapeAnnotation.comments;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    polylineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polylineAnnotation.bounds));\n                }\n            }\n            var reviewDetails = shapeAnnotation.review;\n            polylineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polylineAnnotation.bounds));\n            if (!isNullOrUndefined(shapeAnnotation.isCloudShape) && shapeAnnotation.isCloudShape) {\n                var dictionary = new _PdfDictionary(page._crossReference);\n                dictionary.update('S', _PdfName.get('C'));\n                dictionary.update('I', shapeAnnotation.cloudIntensity);\n                polylineAnnotation._dictionary.update('BE', dictionary);\n                var rectDifferences = JSON.parse(shapeAnnotation.rectangleDifference);\n                if (rectDifferences.length > 0) {\n                    var rd = this.getRDValues(rectDifferences);\n                    polylineAnnotation._dictionary.update('RD', rd);\n                }\n            }\n            if ((!isNullOrUndefined(shapeAnnotation.isLocked) && shapeAnnotation.isLocked) || isLock) {\n                polylineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            else if (!isNullOrUndefined(shapeAnnotation.isCommentLock) && shapeAnnotation.isCommentLock) {\n                polylineAnnotation.flags = PdfAnnotationFlag.readOnly;\n            }\n            else {\n                polylineAnnotation.flags = PdfAnnotationFlag.print;\n            }\n            polylineAnnotation.setAppearance(true);\n            if (!isNullOrUndefined(shapeAnnotation.customData)) {\n                polylineAnnotation.setValues('CustomData', shapeAnnotation.customData);\n            }\n            if (!isNullOrUndefined(shapeAnnotation.allowedInteractions)) {\n                polylineAnnotation.setValues('AllowedInteractions', JSON.stringify(shapeAnnotation.allowedInteractions));\n            }\n            page.annotations.add(polylineAnnotation);\n        }\n    };\n    /**\n    * @private\n    * @param details\n    * @param page\n    */\n    AnnotationRenderer.prototype.saveInkSignature = function (details, page) {\n        var inkSignatureAnnotation = details;\n        var bounds = JSON.parse(inkSignatureAnnotation.bounds);\n        var stampObjects = JSON.parse(inkSignatureAnnotation.data.toString());\n        var rotationAngle = this.getRotateAngle(page.rotation.toString());\n        var cropValues = this.getCropBoxValue(page, false);\n        var left = cropValues.x + this.convertPixelToPoint(bounds.x);\n        var top = this.convertPixelToPoint(bounds.y);\n        if (!(cropValues.x === 0 && (page.cropBox[2] === page.size[0] && cropValues.y === page.size[1]))) {\n            top -= cropValues.y;\n        }\n        var width = this.convertPixelToPoint(bounds.width);\n        var height = this.convertPixelToPoint(bounds.height);\n        var opacity = inkSignatureAnnotation.opacity;\n        var thickness = parseInt(inkSignatureAnnotation.thickness.toString(), 10);\n        if (!isNullOrUndefined(inkSignatureAnnotation.strokeColor)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var strokeColor = JSON.parse(inkSignatureAnnotation.strokeColor);\n            // eslint-disable-next-line max-len\n            var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n            inkSignatureAnnotation.color = color;\n        }\n        var minimumX = -1;\n        var minimumY = -1;\n        var maximumX = -1;\n        var maximumY = -1;\n        var drawingPath = new _PdfPath();\n        for (var p = 0; p < stampObjects.length; p++) {\n            var val = stampObjects[parseInt(p.toString(), 10)];\n            drawingPath._addLine(val.x, val.y, 0, 0);\n        }\n        for (var k = 0; k < drawingPath._points.length; k += 2) {\n            var value = drawingPath._points[parseInt(k.toString(), 10)];\n            if (minimumX == -1) {\n                minimumX = value[0];\n                minimumY = value[1];\n                maximumX = value[0];\n                maximumY = value[1];\n            }\n            else {\n                var point1 = value[0];\n                var point2 = value[1];\n                if (minimumX >= point1) {\n                    minimumX = point1;\n                }\n                if (minimumY >= point2) {\n                    minimumY = point2;\n                }\n                if (maximumX <= point1) {\n                    maximumX = point1;\n                }\n                if (maximumY <= point2) {\n                    maximumY = point2;\n                }\n            }\n        }\n        var newDifferenceX = (maximumX - minimumX) / width;\n        var newDifferenceY = (maximumY - minimumY) / height;\n        if (newDifferenceX == 0) {\n            newDifferenceX = 1;\n        }\n        else if (newDifferenceY == 0) {\n            newDifferenceY = 1;\n        }\n        var linePoints = [];\n        var isNewValues = 0;\n        if (rotationAngle !== 0) {\n            for (var j = 0; j < stampObjects.length; j++) {\n                var val = stampObjects[parseInt(j.toString(), 10)];\n                var path = val[\"command\"].toString();\n                if (path === \"M\" && j !== isNewValues) {\n                    isNewValues = j;\n                    break;\n                }\n                linePoints.push((parseFloat(val[\"x\"].toString())));\n                linePoints.push((parseFloat(val[\"y\"].toString())));\n            }\n            var rotatedPoints = this.getRotatedPath(linePoints, rotationAngle);\n            linePoints = [];\n            for (var z = 0; z < rotatedPoints._points.length; z += 2) {\n                linePoints.push((rotatedPoints._points[parseInt(z.toString(), 10)][0] - minimumX) / newDifferenceX + left);\n                linePoints.push(page.size[1] - (rotatedPoints._points[z + 1][1] - minimumY) / newDifferenceY - top);\n            }\n        }\n        else {\n            for (var j = 0; j < stampObjects.length; j++) {\n                var val = stampObjects[parseInt(j.toString(), 10)];\n                var path = val[\"command\"].toString();\n                if (path === \"M\" && j !== isNewValues) {\n                    isNewValues = j;\n                    break;\n                }\n                linePoints.push(((val.x - minimumX) / newDifferenceX) + left);\n                var newX_1 = ((val.y - minimumY) / newDifferenceY);\n                linePoints.push(page.size[1] - newX_1 - top);\n            }\n        }\n        var rectangle = new Rect(left, top, width, height);\n        var colors = [inkSignatureAnnotation.color[0], inkSignatureAnnotation.color[1], inkSignatureAnnotation.color[2]];\n        var inkAnnotation = new PdfInkAnnotation([left, top, width, height], linePoints);\n        var bound = new Rect();\n        bound = new Rect(inkAnnotation.bounds.x, (page.size[1] - (inkAnnotation.bounds.y + inkAnnotation.bounds.height)), inkAnnotation.bounds.width, inkAnnotation.bounds.height);\n        inkAnnotation.bounds = bound;\n        inkAnnotation.color = colors;\n        linePoints = [];\n        if (isNewValues > 0) {\n            if (rotationAngle != 0) {\n                var pathCollection = [];\n                for (var i = isNewValues; i < stampObjects.length; i++) {\n                    var val = stampObjects[parseInt(i.toString(), 10)];\n                    var path = val[\"command\"].toString();\n                    if (path === \"M\" && i !== isNewValues) {\n                        pathCollection.push(linePoints);\n                        linePoints = [];\n                    }\n                    linePoints.push(val[\"x\"]);\n                    linePoints.push(val[\"y\"]);\n                }\n                if (linePoints.length > 0) {\n                    pathCollection.push(linePoints);\n                }\n                for (var g = 0; g < pathCollection.length; g++) {\n                    var graphicsPoints = [];\n                    var pointsCollections = pathCollection[parseInt(g.toString(), 10)];\n                    if (pointsCollections.length > 0) {\n                        var rotatedPoints = this.getRotatedPath(pointsCollections, rotationAngle);\n                        for (var z = 0; z < rotatedPoints._points.length; z += 2) {\n                            graphicsPoints.push(rotatedPoints._points[parseInt(g.toString(), 10)][0] / minimumX + left);\n                            graphicsPoints.push((rotatedPoints._points[z + 1][1] - minimumY / newDifferenceY) - top);\n                        }\n                        inkAnnotation.inkPointsCollection.push(graphicsPoints);\n                    }\n                    graphicsPoints = [];\n                }\n            }\n            else {\n                for (var i = isNewValues; i < stampObjects.length; i++) {\n                    var val = stampObjects[parseInt(i.toString(), 10)];\n                    var path = val[\"command\"].toString();\n                    if (path === \"M\" && i !== isNewValues) {\n                        inkAnnotation.inkPointsCollection.push(linePoints);\n                        linePoints = [];\n                    }\n                    linePoints.push((val[\"x\"] - minimumX) / newDifferenceX + left);\n                    var newX = ((val[\"y\"] - minimumY) / newDifferenceY);\n                    linePoints.push(page.size[1] - newX - top);\n                }\n                if (linePoints.length > 0) {\n                    inkAnnotation.inkPointsCollection.push(linePoints);\n                }\n            }\n        }\n        var isLock = this.checkAnnotationLock(inkSignatureAnnotation);\n        if (isNullOrUndefined(inkSignatureAnnotation.author) || (isNullOrUndefined(inkSignatureAnnotation.author) && inkSignatureAnnotation.author === '')) {\n            inkSignatureAnnotation.author = 'Guest';\n        }\n        else {\n            inkAnnotation.author = !isNullOrUndefined(inkSignatureAnnotation.author) ? inkSignatureAnnotation.author.toString() !== '' ? inkSignatureAnnotation.author.toString() : 'Guest' : 'Guest';\n        }\n        if (!isNullOrUndefined(inkSignatureAnnotation.subject) && inkSignatureAnnotation.subject !== '') {\n            inkAnnotation.subject = inkSignatureAnnotation.subject.toString();\n        }\n        if (!isNullOrUndefined(inkSignatureAnnotation.note)) {\n            inkAnnotation.text = inkSignatureAnnotation.note.toString();\n        }\n        var dateValue;\n        if (!isNullOrUndefined(inkSignatureAnnotation.modifiedDate) && !isNaN(Date.parse(inkSignatureAnnotation.modifiedDate))) {\n            dateValue = new Date(Date.parse(inkSignatureAnnotation.modifiedDate));\n            inkAnnotation.modifiedDate = dateValue;\n        }\n        var reviewDetails = inkSignatureAnnotation.review;\n        inkAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, inkAnnotation.bounds));\n        var commentsDetails = inkSignatureAnnotation.comments;\n        if (commentsDetails.length > 0) {\n            for (var i_1 = 0; i_1 < commentsDetails.length; i_1++) {\n                // eslint-disable-next-line max-len\n                inkAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i_1.toString(), 10)], inkAnnotation.bounds));\n            }\n        }\n        if (!isNullOrUndefined(inkSignatureAnnotation.isLocked) && inkSignatureAnnotation.isLocked) {\n            inkAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n        }\n        else if (!isNullOrUndefined(inkSignatureAnnotation.isCommentLock) && inkSignatureAnnotation.isCommentLock) {\n            inkAnnotation.flags = PdfAnnotationFlag.readOnly;\n        }\n        else {\n            inkAnnotation.flags = PdfAnnotationFlag.print;\n        }\n        if (!isNullOrUndefined(inkSignatureAnnotation.customData)) {\n            inkAnnotation.setValues('CustomData', inkSignatureAnnotation.customData);\n        }\n        inkAnnotation.border.width = thickness;\n        inkAnnotation.opacity = opacity;\n        inkAnnotation._dictionary.set('NM', inkSignatureAnnotation.annotName.toString());\n        inkAnnotation.rotationAngle = this.getRotateAngle(inkSignatureAnnotation.rotationAngle);\n        if (!isNullOrUndefined(inkSignatureAnnotation.customData)) {\n            inkAnnotation.setValues('CustomData', inkSignatureAnnotation.customData);\n        }\n        inkAnnotation.setAppearance(true);\n        page.annotations.add(inkAnnotation);\n        return inkSignatureAnnotation;\n    };\n    AnnotationRenderer.prototype.getRotatedPath = function (linePoints, rotationAngle) {\n        var graphicsPath = new _PdfPath();\n        for (var j = 0; j < linePoints.length; j += 2) {\n            graphicsPath._addLine(linePoints[parseInt(j.toString(), 10)], linePoints[j + 1], 0, 0);\n        }\n        return graphicsPath;\n    };\n    /**\n     * @param details\n     * @param loadedDocument\n     * @private\n     */\n    AnnotationRenderer.prototype.addTextMarkup = function (details, loadedDocument) {\n        var markupAnnotation = details;\n        var pageNo = parseInt(markupAnnotation['pageNumber'].toString(), 10);\n        var page = loadedDocument.getPage(pageNo);\n        var annotationtypes = new PdfTextMarkupAnnotation();\n        switch (markupAnnotation.textMarkupAnnotationType.toString()) {\n            case 'Highlight':\n                annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.highlight;\n                break;\n            case 'Strikethrough':\n                annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.strikeOut;\n                break;\n            case 'Underline':\n                annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.underline;\n                break;\n            case 'Squiggly':\n                annotationtypes.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n                break;\n        }\n        var bounds = JSON.parse(markupAnnotation.bounds);\n        var boundsCollection = [];\n        var _loop_1 = function (i) {\n            var bound = bounds[parseInt(i.toString(), 10)];\n            var cropValues = this_1.getCropBoxValue(page, true);\n            if (!isNullOrUndefined(bound['left'])) {\n                boundsCollection.push(new Rect(cropValues.x + this_1.convertPixelToPoint(bound['left']), cropValues.y + this_1.convertPixelToPoint(bound['top']), bound.hasOwnProperty('width') ? this_1.convertPixelToPoint(bound['width']) : 0, bound.hasOwnProperty('height') ? this_1.convertPixelToPoint(bound['height']) : 0));\n            }\n            // Assuming boundsCollection is an array of RectangleF objects\n            var groupedRectangles = new Map();\n            // Group rectangles by their Y values\n            for (var _i = 0, boundsCollection_1 = boundsCollection; _i < boundsCollection_1.length; _i++) {\n                var rect_1 = boundsCollection_1[_i];\n                if (!groupedRectangles.has(rect_1.y)) {\n                    groupedRectangles.set(rect_1.y, []);\n                }\n                if (groupedRectangles.get(rect_1.y)) {\n                    groupedRectangles.get(rect_1.y).push(rect_1);\n                }\n            }\n            // Calculate combined rectangles within each group\n            var combinedRectangles = [];\n            groupedRectangles.forEach(function (group, groupKey) {\n                if (group.length > 0) {\n                    var minX = Math.min.apply(Math, group.map(function (rect) { return rect.x; }));\n                    var width = group.map(function (rect) { return rect.width; }).reduce(function (sum, width) { return sum + width; }, 0);\n                    var height = group[0].height;\n                    combinedRectangles.push(new Rect(minX, groupKey, width, height));\n                }\n            });\n            boundsCollection = combinedRectangles;\n        };\n        var this_1 = this;\n        for (var i = 0; i < bounds.length; i++) {\n            _loop_1(i);\n        }\n        var annotation = new PdfTextMarkupAnnotation(null, 0, 0, 0, 0);\n        annotation.textMarkupType = annotationtypes.textMarkupType;\n        var isLock = this.checkAnnotationLock(markupAnnotation);\n        if (isNullOrUndefined(markupAnnotation.author) || (isNullOrUndefined(markupAnnotation.author) && markupAnnotation.author === '')) {\n            markupAnnotation.author = 'Guest';\n        }\n        else {\n            annotation.author = !isNullOrUndefined(markupAnnotation.author) ? markupAnnotation.author.toString() !== '' ? markupAnnotation.author.toString() : 'Guest' : 'Guest';\n        }\n        if (!isNullOrUndefined(markupAnnotation.subject) && markupAnnotation.subject !== '') {\n            annotation.subject = markupAnnotation.subject.toString();\n        }\n        if (!isNullOrUndefined(markupAnnotation.note)) {\n            annotation.text = markupAnnotation.note.toString();\n        }\n        if (!isNullOrUndefined(markupAnnotation.annotationRotation)) {\n            annotation.rotateAngle = this.getRotateAngle(markupAnnotation.annotationRotation);\n        }\n        var dateValue;\n        if (!isNullOrUndefined(markupAnnotation.modifiedDate) && !isNaN(Date.parse(markupAnnotation.modifiedDate))) {\n            dateValue = new Date(Date.parse(markupAnnotation.modifiedDate));\n            annotation.modifiedDate = dateValue;\n        }\n        annotation._dictionary.set('NM', markupAnnotation.annotName.toString());\n        if (!isNullOrUndefined(markupAnnotation.color)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotColor = JSON.parse(markupAnnotation.color);\n            // eslint-disable-next-line max-len\n            var color = [annotColor.r, annotColor.g, annotColor.b];\n            annotation.color = color;\n        }\n        if (!isNullOrUndefined(markupAnnotation.opacity)) {\n            annotation.opacity = markupAnnotation.opacity;\n        }\n        var rect = markupAnnotation.rect;\n        if (boundsCollection.length > 0) {\n            // Don't need to set bounds explicitly for text markup annotation\n            var boundArrayCollection = [];\n            for (var i = 0; i < boundsCollection.length; i++) {\n                var boundArray = [];\n                boundArray.push(boundsCollection[parseInt(i.toString(), 10)].x);\n                boundArray.push(boundsCollection[parseInt(i.toString(), 10)].y);\n                boundArray.push(boundsCollection[parseInt(i.toString(), 10)].width);\n                boundArray.push(boundsCollection[parseInt(i.toString(), 10)].height);\n                boundArrayCollection.push(boundArray);\n            }\n            annotation.boundsCollection = boundArrayCollection;\n        }\n        var commentsDetails = markupAnnotation.comments;\n        if (commentsDetails.length > 0) {\n            for (var i = 0; i < commentsDetails.length; i++) {\n                // eslint-disable-next-line max-len\n                annotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], annotation.bounds));\n            }\n        }\n        var reviewDetails = markupAnnotation.review;\n        annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, annotation.bounds));\n        if (!isNullOrUndefined(markupAnnotation.color)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotColor = JSON.parse(markupAnnotation.color);\n            // eslint-disable-next-line max-len\n            var color = [annotColor.r, annotColor.g, annotColor.b];\n            annotation.textMarkUpColor = color;\n        }\n        var isPrint = true;\n        var isCommentLock = false;\n        if (!isNullOrUndefined(markupAnnotation.isCommentLock) && markupAnnotation.isCommentLock) {\n            isCommentLock = true;\n        }\n        if (!isNullOrUndefined(markupAnnotation.isPrint) && markupAnnotation.isPrint) {\n            isPrint = true;\n        }\n        if (isCommentLock && isPrint) {\n            annotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n        }\n        if (isLock) {\n            annotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n        }\n        else if (isCommentLock) {\n            annotation.flags = PdfAnnotationFlag.readOnly;\n        }\n        else {\n            annotation.flags = PdfAnnotationFlag.print;\n        }\n        if (!isNullOrUndefined(markupAnnotation.customData)) {\n            annotation.setValues('CustomData', markupAnnotation.customData);\n        }\n        if (!isNullOrUndefined(markupAnnotation.allowedInteractions)) {\n            annotation.setValues('AllowedInteractions', JSON.stringify(markupAnnotation.allowedInteractions));\n        }\n        if (!isNullOrUndefined(markupAnnotation.textMarkupContent)) {\n            annotation._dictionary.set('TextMarkupContent', markupAnnotation.textMarkupContent.toString());\n        }\n        annotation.setAppearance(true);\n        page.annotations.add(annotation);\n    };\n    AnnotationRenderer.prototype.getCropBoxValue = function (page, isPath) {\n        var cropBoxX = 0;\n        var cropBoxY = 0;\n        if (page != null) {\n            cropBoxX = !isPath ? page.cropBox[0] : 0;\n            cropBoxY = !isPath ? page.cropBox[1] : 0;\n        }\n        return { x: cropBoxX, y: cropBoxY };\n    };\n    AnnotationRenderer.prototype.getBothCropBoxValue = function (page) {\n        var cropBoxX = page.cropBox[0];\n        var cropBoxY = page.cropBox[1];\n        return [cropBoxX, cropBoxY];\n    };\n    /**\n     * @private\n     * @param details\n     * @param page\n     */\n    AnnotationRenderer.prototype.addCustomStampAnnotation = function (details, page) {\n        var stampAnnotation = details;\n        var bounds = JSON.parse(stampAnnotation.bounds);\n        var pageNo = parseInt(stampAnnotation['pageNumber'].toString(), 10);\n        var cropValues = this.getCropBoxValue(page, false);\n        var left = 0;\n        var top = 0;\n        var graphics = page.graphics;\n        var pageRotation = page.rotation.toString();\n        if (stampAnnotation.hasOwnProperty('wrapperBounds')) {\n            var wrapperBounds = stampAnnotation.wrapperBounds;\n            var boundsXY = this.calculateBoundsXY(wrapperBounds, bounds, pageNo, page);\n            left = boundsXY.x;\n            top = boundsXY.y;\n        }\n        else {\n            left = this.convertPixelToPoint(bounds.left);\n            top = this.convertPixelToPoint(bounds.top);\n        }\n        var cropX = 0;\n        var cropY = 0;\n        if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        left += cropX;\n        top += cropY;\n        var width = this.convertPixelToPoint(bounds.width);\n        var height = this.convertPixelToPoint(bounds.height);\n        if (!isNullOrUndefined(stampAnnotation.stampAnnotationType) && (stampAnnotation.stampAnnotationType === 'image') && (stampAnnotation.stampAnnotationPath !== ' ')) {\n            if (pageRotation === 'RotateAngle90' || pageRotation === 'RotateAngle270') {\n                width = this.convertPixelToPoint((bounds.height));\n                height = this.convertPixelToPoint((bounds.width));\n            }\n        }\n        var opacity = stampAnnotation.opacity;\n        var rotateAngle = stampAnnotation.rotateAngle;\n        var isLock = false;\n        if (stampAnnotation.hasOwnProperty('annotationSettings') && !isNullOrUndefined(stampAnnotation.annotationSettings)) {\n            var annotationSettings = stampAnnotation.annotationSettings;\n            if (!isNullOrUndefined(annotationSettings.isLock)) {\n                isLock = annotationSettings.isLock;\n            }\n        }\n        if (!isNullOrUndefined(stampAnnotation.stampAnnotationType) && (stampAnnotation.stampAnnotationType === 'image') && (stampAnnotation.stampAnnotationPath !== ' ')) {\n            var pageRender = new PageRenderer(this.pdfViewer, this.pdfViewerBase);\n            var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top, width, height);\n            page.annotations.add(rubberStampAnnotation);\n            var imageUrl = (stampAnnotation['stampAnnotationPath'].toString()).split(',')[1];\n            var bytes = _decode(imageUrl, false);\n            var bitmap = void 0;\n            if (bytes && bytes.length > 2 && bytes[0] === 255 && bytes[1] === 216) {\n                bitmap = new PdfBitmap(bytes);\n                var appearance = rubberStampAnnotation.appearance.normal;\n                var state = graphics.save();\n                appearance.graphics.drawImage(bitmap, 0, 0, width, height);\n                appearance.graphics.restore(state);\n            }\n            else {\n                var appearance = rubberStampAnnotation.appearance;\n                var filterAnnot = this.pdfViewerBase.pngData.filter(function (nameStamp) { return nameStamp.name === stampAnnotation.annotName; });\n                var dictionary = filterAnnot[0]._dictionary.get('AP');\n                var pngDictionary = dictionary.get('N');\n                appearance.normal = new PdfTemplate(pngDictionary, page._crossReference);\n            }\n            rubberStampAnnotation.opacity = opacity;\n            if (!isNullOrUndefined(stampAnnotation.note)) {\n                rubberStampAnnotation.text = stampAnnotation.note.toString();\n            }\n            rubberStampAnnotation._dictionary.set('NM', stampAnnotation.annotName.toString());\n            var dateValue = void 0;\n            if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(stampAnnotation.modifiedDate));\n                rubberStampAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = stampAnnotation.comments;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    rubberStampAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], rubberStampAnnotation.bounds));\n                }\n            }\n            var reviewDetails = stampAnnotation.review;\n            rubberStampAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, rubberStampAnnotation.bounds));\n            if (!isNullOrUndefined(stampAnnotation.author)) {\n                stampAnnotation.author = 'Guest';\n            }\n            rubberStampAnnotation.author = !isNullOrUndefined(stampAnnotation.author) && stampAnnotation.author.toString() !== \"\" ? stampAnnotation.author.toString() : 'Guest';\n            if (!isNullOrUndefined(stampAnnotation.subject) && stampAnnotation.subject) {\n                rubberStampAnnotation.subject = stampAnnotation.subject.toString();\n            }\n            if (!isNullOrUndefined(stampAnnotation.isLocked) && stampAnnotation.isLocked) {\n                rubberStampAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            else if (!isNullOrUndefined(stampAnnotation.isCommentLock) && stampAnnotation.isCommentLock) {\n                rubberStampAnnotation.flags = PdfAnnotationFlag.readOnly;\n            }\n            else {\n                rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n            }\n            if (!isNullOrUndefined(stampAnnotation.customData)) {\n                rubberStampAnnotation.setValues('CustomData', stampAnnotation.customData);\n            }\n            if (!isNullOrUndefined(stampAnnotation.icon)) {\n                rubberStampAnnotation.setValues('iconName', stampAnnotation.icon);\n            }\n        }\n        else {\n            var subject = stampAnnotation.subject.toString();\n            var icon = stampAnnotation.icon.toString();\n            var stampColor = stampAnnotation.stampFillcolor.toString();\n            var fillColor = stampAnnotation.fillColor.toString();\n            var isDynamic = stampAnnotation.isDynamicStamp.toString();\n            var textBrush = new PdfBrush([0, 0, 0]);\n            var colors = [];\n            var stampWidth = width;\n            if (fillColor === '#192760') {\n                colors = [25, 39, 96];\n            }\n            else if (fillColor === '#516c30') {\n                colors = [81, 108, 48];\n            }\n            else if (fillColor === '#8a251a') {\n                colors = [138, 37, 26];\n            }\n            textBrush = new PdfBrush(colors);\n            var stampBrush = new PdfBrush([0, 0, 0]);\n            var stampcolors = [];\n            if (stampColor === '#e6eddf') {\n                stampcolors = [230, 237, 223];\n            }\n            else if (stampColor === '#f6dedd') {\n                stampcolors = [246, 222, 221];\n            }\n            else if (stampColor === '#dce3ef') {\n                stampcolors = [220, 227, 239];\n            }\n            textBrush = new PdfBrush(colors);\n            stampBrush = new PdfBrush(stampcolors);\n            var pens = new PdfPen(colors, 1);\n            var pageRotation_1 = page.rotation.toString();\n            var rectangle = new Rect(left, top, width, height);\n            if (pageRotation_1 === 'RotateAngle90' || pageRotation_1 === 'RotateAngle270') {\n                rectangle = new Rect(left, top, height, width);\n            }\n            var rubberStampAnnotation = new PdfRubberStampAnnotation;\n            rubberStampAnnotation.bounds = rectangle;\n            rubberStampAnnotation.subject = stampAnnotation.icon.toString();\n            if (!isNullOrUndefined(stampAnnotation.note)) {\n                rubberStampAnnotation.text = stampAnnotation.note.toString();\n            }\n            rubberStampAnnotation._dictionary.set('NM', stampAnnotation.annotName.toString());\n            var dateValue = void 0;\n            if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(stampAnnotation.modifiedDate));\n                rubberStampAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = stampAnnotation.comments;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    rubberStampAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], rubberStampAnnotation.bounds));\n                }\n            }\n            var reviewDetails = stampAnnotation.review;\n            rubberStampAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, rubberStampAnnotation.bounds));\n            var isIconExists = false;\n            if (isDynamic !== 'true') {\n                isIconExists = this.getIconName(stampAnnotation, icon, rubberStampAnnotation);\n            }\n            if (icon.trim() === 'Accepted' || icon.trim() === 'Rejected') {\n                this.drawStampAsPath(stampAnnotation.stampAnnotationPath, rubberStampAnnotation, textBrush, stampBrush);\n                rubberStampAnnotation.rotationAngle = this.getRubberStampRotateAngle(pageRotation_1, rotateAngle);\n            }\n            else {\n                if (page.rotation.toString() === 'RotateAngle90' || page.rotation.toString() === 'RotateAngle270') {\n                    rubberStampAnnotation.bounds = rectangle;\n                }\n                rubberStampAnnotation.rotationAngle = this.getRubberStampRotateAngle(pageRotation_1, rotateAngle);\n            }\n            if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n                var dateValue_1;\n                if (!isNullOrUndefined(stampAnnotation.modifiedDate) && !isNaN(Date.parse(stampAnnotation.modifiedDate))) {\n                    dateValue_1 = new Date(Date.parse(stampAnnotation.modifiedDate));\n                    rubberStampAnnotation.modifiedDate = dateValue_1;\n                }\n            }\n            rubberStampAnnotation.opacity = opacity;\n            rubberStampAnnotation.author = !isNullOrUndefined(stampAnnotation.author) && stampAnnotation.author.toString() !== \"\" ? stampAnnotation.author.toString() : 'Guest';\n            if (!isNullOrUndefined(stampAnnotation.isLocked) && stampAnnotation.isLocked) {\n                rubberStampAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            else if (!isNullOrUndefined(stampAnnotation.isCommentLock) && stampAnnotation.isCommentLock) {\n                rubberStampAnnotation.flags = PdfAnnotationFlag.readOnly;\n            }\n            else {\n                rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n            }\n            if (!isNullOrUndefined(stampAnnotation.customData)) {\n                rubberStampAnnotation.setValues('CustomData', stampAnnotation.customData);\n            }\n            if (!isNullOrUndefined(stampAnnotation.rotateAngle)) {\n                rubberStampAnnotation.setValues('rotateAngle', stampAnnotation.rotateAngle.toString());\n            }\n            if (!isNullOrUndefined(stampAnnotation.icon)) {\n                rubberStampAnnotation.setValues('iconName', stampAnnotation.icon.toString());\n            }\n            page.annotations.add(rubberStampAnnotation);\n            if (!isIconExists) {\n                var appearance = rubberStampAnnotation.appearance.normal;\n                appearance.graphics.drawRoundedRectangle(0, 0, rectangle.width, rectangle.height, 10, pens, stampBrush);\n                if (isDynamic === 'true') {\n                    var text = stampAnnotation.dynamicText.toString();\n                    var state = appearance.graphics.save();\n                    appearance.graphics.setTransparency(opacity);\n                    this.renderDynamicStamp(rubberStampAnnotation, icon, text, textBrush, rectangle, pens, page);\n                    appearance.graphics.restore(state);\n                    rubberStampAnnotation._dictionary.set('Name', _PdfName.get('#23D' + icon.toString()));\n                }\n                else {\n                    this.retriveDefaultWidth(icon.trim());\n                    var state = appearance.graphics.save();\n                    appearance.graphics.setTransparency(opacity);\n                    this.renderSignHereStamp(rubberStampAnnotation, rectangle, icon, textBrush, page, pens);\n                    appearance.graphics.restore(state);\n                }\n                rubberStampAnnotation.rotationAngle = this.getRubberStampRotateAngle(pageRotation_1, rotateAngle);\n            }\n        }\n    };\n    /**\n     * @param details\n     * @param page\n     *\n     * @private\n     */\n    AnnotationRenderer.prototype.addMeasure = function (details, page) {\n        var measureShapeAnnotation = details;\n        if (!isNullOrUndefined(measureShapeAnnotation.author)) {\n            measureShapeAnnotation.author = 'Guest';\n        }\n        if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && measureShapeAnnotation.shapeAnnotationType === 'Line') {\n            var points = JSON.parse(measureShapeAnnotation.vertexPoints);\n            var linePoints = this.getSaveVertexPoints(points, page);\n            var lineAnnotation = new PdfLineAnnotation(linePoints);\n            if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n                lineAnnotation.text = measureShapeAnnotation.note.toString();\n            }\n            lineAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n            if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n                lineAnnotation.subject = measureShapeAnnotation.subject.toString();\n            }\n            lineAnnotation.lineIntent = PdfLineIntent.lineDimension;\n            if (!isNullOrUndefined(measureShapeAnnotation.annotName)) {\n                lineAnnotation.name = measureShapeAnnotation.annotName.toString();\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n                var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n                lineAnnotation.color = [strokeColor.r, strokeColor.g, strokeColor.b];\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n                var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n                if (!this.isTransparentColor(fillColor)) {\n                    var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                    lineAnnotation.innerColor = innerColor;\n                }\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    lineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n                lineAnnotation.opacity = measureShapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = measureShapeAnnotation.thickness;\n            if (!isNullOrUndefined(measureShapeAnnotation.borderStyle) && measureShapeAnnotation.borderStyle !== '') {\n                lineBorder.style = this.getBorderStyle(measureShapeAnnotation.borderStyle);\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.borderDashArray)) {\n                lineBorder.dash = [measureShapeAnnotation.borderDashArray, measureShapeAnnotation.borderDashArray];\n            }\n            lineAnnotation.border = lineBorder;\n            lineAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n            lineAnnotation.lineEndingStyle.begin = this.getLineEndingStyle(measureShapeAnnotation.lineHeadStart);\n            lineAnnotation.lineEndingStyle.end = this.getLineEndingStyle(measureShapeAnnotation.lineHeadEnd);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n                lineAnnotation.modifiedDate = dateValue;\n            }\n            lineAnnotation.caption.type = this.getCaptionType(measureShapeAnnotation.captionPosition);\n            lineAnnotation.caption.cap = measureShapeAnnotation.caption;\n            lineAnnotation.leaderExt = measureShapeAnnotation.leaderLength;\n            lineAnnotation.leaderLine = measureShapeAnnotation.leaderLineExtension;\n            var commentsDetails = measureShapeAnnotation.comments;\n            var bounds = JSON.parse(measureShapeAnnotation.bounds);\n            lineAnnotation.bounds = bounds;\n            lineAnnotation.bounds.x = bounds.left;\n            lineAnnotation.bounds.y = bounds.top;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    lineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], lineAnnotation.bounds));\n                }\n            }\n            var reviewDetails = measureShapeAnnotation.review;\n            lineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, lineAnnotation.bounds));\n            lineAnnotation._dictionary.update('LLO', measureShapeAnnotation.leaderLineOffset);\n            if (measureShapeAnnotation.isPrint && !isNullOrUndefined(measureShapeAnnotation['isPrint']) && Boolean(measureShapeAnnotation['isPrint'].toString())) {\n                if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation['isCommentLock']) && Boolean(measureShapeAnnotation['isCommentLock'].toString())) {\n                    lineAnnotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n                }\n                else {\n                    lineAnnotation.flags = PdfAnnotationFlag.print;\n                }\n            }\n            if (measureShapeAnnotation.isLocked && !isNullOrUndefined(measureShapeAnnotation['isLocked']) && Boolean(measureShapeAnnotation['isLocked'].toString())) {\n                lineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            else if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation['isCommentLock']) && Boolean(measureShapeAnnotation['isCommentLock'].toString())) {\n                lineAnnotation.flags = PdfAnnotationFlag.readOnly;\n            }\n            else {\n                lineAnnotation.flags = PdfAnnotationFlag.print;\n            }\n            var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n            if (!isNullOrUndefined(measureDetail)) {\n                lineAnnotation.measure = true;\n                var unit = JSON.parse(measureDetail.distance)[0].unit;\n                lineAnnotation.unit = this.setMeasurementUnit(unit);\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n                lineAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n            }\n            if (measureShapeAnnotation.allowedInteractions && measureShapeAnnotation['allowedInteractions'] != null) {\n                lineAnnotation.setValues('AllowedInteractions', JSON.stringify(measureShapeAnnotation['allowedInteractions']));\n            }\n            lineAnnotation.setAppearance(true);\n            page.annotations.add(lineAnnotation);\n        }\n        else if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && measureShapeAnnotation.shapeAnnotationType === 'Polyline') {\n            var points = JSON.parse(measureShapeAnnotation.vertexPoints);\n            var linePoints = this.getSaveVertexPoints(points, page);\n            var polylineAnnotation = new PdfPolyLineAnnotation(linePoints);\n            polylineAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n            if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n                polylineAnnotation.text = measureShapeAnnotation.note.toString();\n            }\n            polylineAnnotation._dictionary.set('NM', measureShapeAnnotation.annotName.toString());\n            if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n                polylineAnnotation.subject = measureShapeAnnotation.subject.toString();\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n                // eslint-disable-next-line max-len\n                var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n                polylineAnnotation.color = color;\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n                if (!this.isTransparentColor(fillColor)) {\n                    var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                    polylineAnnotation.innerColor = innerColor;\n                }\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    polylineAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n                polylineAnnotation.opacity = measureShapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = measureShapeAnnotation.thickness;\n            lineBorder.style = this.getBorderStyle(measureShapeAnnotation.borderStyle);\n            lineBorder.dash = measureShapeAnnotation.borderDashArray;\n            polylineAnnotation.border = lineBorder;\n            polylineAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n            polylineAnnotation.beginLineStyle = this.getLineEndingStyle(measureShapeAnnotation.lineHeadStart);\n            polylineAnnotation.endLineStyle = this.getLineEndingStyle(measureShapeAnnotation.lineHeadEnd);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n                polylineAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = measureShapeAnnotation.comments;\n            var bounds = JSON.parse(measureShapeAnnotation.bounds);\n            polylineAnnotation.bounds = bounds;\n            polylineAnnotation.bounds.x = bounds.left;\n            polylineAnnotation.bounds.y = bounds.top;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    // eslint-disable-next-line max-len\n                    polylineAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polylineAnnotation.bounds));\n                }\n            }\n            var reviewDetails = measureShapeAnnotation.review;\n            polylineAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polylineAnnotation.bounds));\n            polylineAnnotation._dictionary.set('IT', _PdfName.get(measureShapeAnnotation.indent.toString()));\n            if (!isNullOrUndefined(measureShapeAnnotation.isCloudShape) && measureShapeAnnotation.isCloudShape) {\n                var dictionary = new _PdfDictionary(page._crossReference);\n                dictionary.update('S', _PdfName.get('C'));\n                dictionary.update('I', measureShapeAnnotation.cloudIntensity);\n                polylineAnnotation._dictionary.update('BE', dictionary);\n                var rectDifferences = JSON.parse(measureShapeAnnotation.rectangleDifference);\n                if (rectDifferences.length > 0) {\n                    var rd = this.getRDValues(rectDifferences);\n                    polylineAnnotation._dictionary.update('RD', rd);\n                }\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.isLocked && measureShapeAnnotation.isLocked)) {\n                polylineAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            else if (!isNullOrUndefined(measureShapeAnnotation.isCommentLock) && measureShapeAnnotation.isCommentLock) {\n                polylineAnnotation.flags = PdfAnnotationFlag.readOnly;\n            }\n            if (measureShapeAnnotation.isPrint && measureShapeAnnotation['isPrint'] !== null && Boolean(measureShapeAnnotation['isPrint'].toString())) {\n                if (measureShapeAnnotation.isCommentLock && measureShapeAnnotation['isCommentLock'] !== null && Boolean(measureShapeAnnotation['isCommentLock'].toString())) {\n                    polylineAnnotation._annotFlags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n                }\n                else {\n                    polylineAnnotation._annotFlags = PdfAnnotationFlag.print;\n                }\n            }\n            var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n            if (!isNullOrUndefined(measureDetail)) {\n                polylineAnnotation._dictionary.set('Measure', this.setMeasureDictionary(measureDetail));\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n                polylineAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n            }\n            if (measureShapeAnnotation.allowedInteractions && measureShapeAnnotation['allowedInteractions'] != null) {\n                polylineAnnotation.setValues('AllowedInteractions', JSON.stringify(measureShapeAnnotation['allowedInteractions']));\n            }\n            polylineAnnotation.setAppearance(true);\n            page.annotations.add(polylineAnnotation);\n        }\n        else if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && (measureShapeAnnotation.shapeAnnotationType === 'Polyline') && (measureShapeAnnotation.shapeAnnotationType === 'PolygonRadius') || (measureShapeAnnotation.shapeAnnotationType === 'Circle')) {\n            var circleMeasurementAnnotation = this.addCircleMeasurementAnnotation(measureShapeAnnotation, page);\n            page.annotations.add(circleMeasurementAnnotation);\n        }\n        else if (!isNullOrUndefined(measureShapeAnnotation.shapeAnnotationType) && (measureShapeAnnotation.shapeAnnotationType === 'Polygon') && measureShapeAnnotation.indent !== 'PolygonRadius') {\n            var points = JSON.parse(measureShapeAnnotation.vertexPoints);\n            var linePoints = this.getSaveVertexPoints(points, page);\n            var polygonAnnotation = new PdfPolygonAnnotation(linePoints);\n            polygonAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n            if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n                polygonAnnotation.text = measureShapeAnnotation.note.toString();\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.annotName)) {\n                polygonAnnotation.name = measureShapeAnnotation.annotName.toString();\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n                polygonAnnotation.subject = measureShapeAnnotation.subject.toString();\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n                var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n                polygonAnnotation.color = [strokeColor.r, strokeColor.g, strokeColor.b];\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n                var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n                if (!this.isTransparentColor(fillColor)) {\n                    var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                    polygonAnnotation.innerColor = innerColor;\n                }\n                if (fillColor.a < 1 && fillColor.a > 0) {\n                    polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                    fillColor.a = 1;\n                }\n                else {\n                    polygonAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                }\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n                polygonAnnotation.opacity = measureShapeAnnotation.opacity;\n            }\n            var lineBorder = new PdfAnnotationBorder();\n            lineBorder.width = measureShapeAnnotation.thickness;\n            lineBorder.style = measureShapeAnnotation.borderStyle;\n            if (!isNullOrUndefined(measureShapeAnnotation.borderDashArray)) {\n                lineBorder.dash = [measureShapeAnnotation.borderDashArray, measureShapeAnnotation.borderDashArray];\n            }\n            polygonAnnotation.border = lineBorder;\n            polygonAnnotation._dictionary.update('IT', _PdfName.get(measureShapeAnnotation.indent.toString()));\n            polygonAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n            var dateValue = void 0;\n            if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n                dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n                polygonAnnotation.modifiedDate = dateValue;\n            }\n            var commentsDetails = measureShapeAnnotation.comments;\n            var bounds = JSON.parse(measureShapeAnnotation.bounds);\n            polygonAnnotation.bounds = bounds;\n            polygonAnnotation.bounds.x = bounds.left;\n            polygonAnnotation.bounds.y = bounds.top;\n            if (commentsDetails.length > 0) {\n                for (var i = 0; i < commentsDetails.length; i++) {\n                    polygonAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], polygonAnnotation.bounds));\n                }\n            }\n            var reviewDetails = measureShapeAnnotation.review;\n            polygonAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, polygonAnnotation.bounds));\n            if (!isNullOrUndefined(measureShapeAnnotation.isCloudShape) && Boolean(measureShapeAnnotation['isCloudShape'].toString())) {\n                polygonAnnotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n                polygonAnnotation.borderEffect.intensity = measureShapeAnnotation['cloudIntensity'];\n                var rectDifferences = JSON.parse(measureShapeAnnotation.rectangleDifference);\n                if (rectDifferences.length > 0) {\n                    var rd = this.getRDValues(rectDifferences);\n                    polygonAnnotation._dictionary.update('RD', rd);\n                }\n            }\n            if (measureShapeAnnotation.isPrint && !isNullOrUndefined(measureShapeAnnotation[\"isPrint\"]) && Boolean(measureShapeAnnotation[\"isPrint\"].toString())) {\n                if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation[\"isCommentLock\"]) && Boolean(measureShapeAnnotation[\"isCommentLock\"].toString())) {\n                    polygonAnnotation.flags = PdfAnnotationFlag.print | PdfAnnotationFlag.readOnly;\n                }\n                else {\n                    polygonAnnotation.flags = PdfAnnotationFlag.print;\n                }\n            }\n            if (measureShapeAnnotation.isLocked && !isNullOrUndefined(measureShapeAnnotation[\"isLocked\"]) && Boolean(measureShapeAnnotation[\"isLocked\"].toString())) {\n                polygonAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n            else if (measureShapeAnnotation.isCommentLock && !isNullOrUndefined(measureShapeAnnotation[\"isCommentLock\"]) && Boolean(measureShapeAnnotation[\"isCommentLock\"].toString())) {\n                polygonAnnotation.flags = PdfAnnotationFlag.readOnly;\n            }\n            else {\n                polygonAnnotation.flags = PdfAnnotationFlag.print;\n            }\n            var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n            if (!isNullOrUndefined(measureDetail)) {\n                polygonAnnotation._dictionary.set('Measure', this.setMeasureDictionary(measureDetail));\n                if (measureShapeAnnotation[\"indent\"] === \"PolygonVolume\" && measureDetail.hasOwnProperty('depth')) {\n                    polygonAnnotation._dictionary.update(\"Depth\", measureDetail[\"depth\"]);\n                }\n            }\n            if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n                polygonAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n            }\n            if (measureShapeAnnotation.allowedInteractions && measureShapeAnnotation[\"allowedInteractions\"] != null) {\n                polygonAnnotation.setValues('AllowedInteractions', JSON.stringify(measureShapeAnnotation[\"allowedInteractions\"]));\n            }\n            polygonAnnotation.setAppearance(true);\n            page.annotations.add(polygonAnnotation);\n        }\n    };\n    /**\n     * @param details\n     * @param page\n     *\n     * @private\n     */\n    AnnotationRenderer.prototype.addStickyNotes = function (details, page) {\n        var pageNo = details.pageNumber;\n        var popUpAnnotation = details;\n        var bounds = JSON.parse(popUpAnnotation.bounds);\n        var cropValues = this.getCropBoxValue(page, false);\n        var left = this.convertPixelToPoint(bounds.left);\n        var top = this.convertPixelToPoint(bounds.top);\n        var width = this.convertPixelToPoint(bounds.width);\n        var height = this.convertPixelToPoint(bounds.height);\n        var cropX = 0;\n        var cropY = 0;\n        if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        var annotation = new PdfPopupAnnotation(null, cropX + left, cropY + top, width, height);\n        if (popUpAnnotation['author'] === null) {\n            popUpAnnotation['author'] = 'Guest';\n        }\n        if (popUpAnnotation['note'] != null) {\n            annotation.text = popUpAnnotation['note'].toString();\n        }\n        annotation.author = popUpAnnotation['author'].toString();\n        if (popUpAnnotation['subject'] != null) {\n            annotation.subject = popUpAnnotation['subject'].toString();\n        }\n        annotation._dictionary.set('NM', popUpAnnotation.annotName.toString());\n        var dateValue;\n        if (!isNullOrUndefined(popUpAnnotation.modifiedDate) && !isNaN(Date.parse(popUpAnnotation.modifiedDate))) {\n            dateValue = new Date(Date.parse(popUpAnnotation.modifiedDate));\n            annotation.modifiedDate = dateValue;\n        }\n        var commentsDetails = popUpAnnotation.comments;\n        if (commentsDetails.length > 0) {\n            for (var i = 0; i < commentsDetails.length; i++) {\n                annotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], annotation.bounds));\n            }\n        }\n        var reviewDetails = popUpAnnotation.review;\n        annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, annotation.bounds));\n        var color = [255, 255, 51];\n        annotation.color = color;\n        annotation.opacity = popUpAnnotation.opacity;\n        annotation.icon = PdfPopupIcon.comment;\n        var isAnnotationFlagSet = false;\n        if (!isNullOrUndefined(popUpAnnotation.annotationSettings)) {\n            var annotationSettings = popUpAnnotation.annotationSettings;\n            var isLock = annotationSettings.isLock;\n            if (isLock) {\n                annotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n            }\n        }\n        else if (!isNullOrUndefined(popUpAnnotation.isCommentLock) && popUpAnnotation.isCommentLock) {\n            annotation.flags = PdfAnnotationFlag.readOnly;\n        }\n        else {\n            annotation.flags = PdfAnnotationFlag.print;\n        }\n        if (!isNullOrUndefined(popUpAnnotation.customData)) {\n            annotation.setValues('CustomData', popUpAnnotation.customData);\n        }\n        page.annotations.add(annotation);\n    };\n    /**\n     * @param details\n     * @param page\n     * @param textFont\n     *\n     * @private\n     */\n    AnnotationRenderer.prototype.addFreeText = function (details, page, textFont) {\n        var _this = this;\n        var pageNo = details.pageIndex;\n        var freeTextAnnotation = details;\n        var bounds = JSON.parse(freeTextAnnotation.bounds);\n        var cropValues = this.getCropBoxValue(page, false);\n        var left = this.convertPixelToPoint(bounds.left);\n        var top = this.convertPixelToPoint(bounds.top);\n        var width = this.convertPixelToPoint(bounds.width);\n        var height = this.convertPixelToPoint(bounds.height);\n        var cropX = 0;\n        var cropY = 0;\n        if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        var annotation = new PdfFreeTextAnnotation(cropX + left, cropY + top, width, height);\n        annotation.setAppearance(true);\n        if (freeTextAnnotation['author'] === null) {\n            freeTextAnnotation['author'] = 'Guest';\n        }\n        annotation.author = freeTextAnnotation['author'].toString();\n        var dateValue;\n        if (!isNullOrUndefined(freeTextAnnotation.modifiedDate) && !isNaN(Date.parse(freeTextAnnotation.modifiedDate))) {\n            dateValue = new Date(Date.parse(freeTextAnnotation.modifiedDate));\n            annotation.modifiedDate = dateValue;\n        }\n        var reviewDetails = freeTextAnnotation.review;\n        annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, annotation.bounds));\n        annotation._dictionary.set('NM', freeTextAnnotation.annotName.toString());\n        annotation.lineEndingStyle = PdfLineEndingStyle.openArrow;\n        annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n        var fontSize = 0;\n        if (!isNullOrUndefined(freeTextAnnotation.fontSize)) {\n            fontSize = parseFloat(freeTextAnnotation.fontSize);\n        }\n        fontSize = !isNullOrUndefined(fontSize) && !isNaN(fontSize) && fontSize > 0 ? fontSize : 16; //default 16px\n        var fontFamily = this.getFontFamily(freeTextAnnotation.fontFamily);\n        var fontJson = {};\n        if (freeTextAnnotation.hasOwnProperty('font') && !isNullOrUndefined(freeTextAnnotation.font)) {\n            fontJson = freeTextAnnotation.font;\n        }\n        var fontStyle = this.getFontStyle(fontJson);\n        annotation.font = new PdfStandardFont(fontFamily, this.convertPixelToPoint(fontSize), fontStyle);\n        if (!isNullOrUndefined(textFont) && textFont.length > 0) {\n            textFont.Keys.forEach(function (key) {\n                // Need to implement font stream\n                var fontStream = textFont[\"\" + key];\n                if (freeTextAnnotation.hasOwnProperty('dynamicText') && !isNullOrUndefined(freeTextAnnotation.dynamicText.toString())) {\n                    var fontAnnotation = new PdfTrueTypeFont(fontStream, _this.convertPixelToPoint(fontSize), PdfFontStyle.regular);\n                    var format = new PdfStringFormat();\n                    fontAnnotation.measureString(freeTextAnnotation.dynamicText.toString(), format);\n                    var glyphPresent = fontAnnotation._dictionary.has('IsContainsFont') ? fontAnnotation._dictionary.get('IsContainsFont') : false;\n                    if (glyphPresent) {\n                        annotation.font = new PdfTrueTypeFont(fontStream, _this.convertPixelToPoint(fontSize));\n                    }\n                }\n            });\n        }\n        if (freeTextAnnotation['subject'] != null) {\n            annotation.subject = freeTextAnnotation['subject'].toString();\n        }\n        // Markup Text\n        annotation.text = '';\n        if (freeTextAnnotation.hasOwnProperty('dynamicText') && !isNullOrUndefined(freeTextAnnotation.dynamicText.toString())) {\n            // Markup Text\n            annotation.text = freeTextAnnotation.dynamicText.toString();\n        }\n        annotation.rotationAngle = this.getRotateAngle(freeTextAnnotation.rotateAngle);\n        var lineBorder = new PdfAnnotationBorder();\n        lineBorder.width = !isNullOrUndefined(freeTextAnnotation.thickness) ? freeTextAnnotation.thickness : 1;\n        annotation.border = lineBorder;\n        if (freeTextAnnotation.hasOwnProperty('padding') && !isNullOrUndefined(freeTextAnnotation.padding)) {\n            var paddingValues = freeTextAnnotation.padding;\n            // let padding: PdfPaddings = new PdfPaddings(); // PdfPaddings not exist in ej2-pdf\n            // annotation.setPaddings(padding);  // setPaddings not exist\n        }\n        annotation.opacity = !isNullOrUndefined(freeTextAnnotation.opacity) ? freeTextAnnotation.opacity : 1;\n        if (!isNullOrUndefined(freeTextAnnotation.strokeColor)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var strokeColor = JSON.parse(freeTextAnnotation.strokeColor);\n            // eslint-disable-next-line max-len\n            var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n            annotation.borderColor = color;\n            // Modified Implementation for setting border width for transparent border\n            if (this.isTransparentColor(strokeColor)) {\n                annotation.border.width = !isNullOrUndefined(freeTextAnnotation.thickness) ? freeTextAnnotation.thickness : 0;\n            }\n        }\n        if (!isNullOrUndefined(freeTextAnnotation.fillColor)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var fillColor = JSON.parse(freeTextAnnotation.fillColor);\n            if (!this.isTransparentColor(fillColor)) {\n                var color = [fillColor.r, fillColor.g, fillColor.b];\n                annotation.color = color;\n            }\n            if (fillColor.a < 1 && fillColor.a > 0) {\n                annotation._dictionary.update('FillOpacity', fillColor.a);\n                fillColor.a = 1;\n            }\n            else {\n                annotation._dictionary.update('FillOpacity', fillColor.a);\n            }\n        }\n        if (!isNullOrUndefined(freeTextAnnotation.fontColor)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var textMarkupColor = JSON.parse(freeTextAnnotation.fontColor);\n            if (!this.isTransparentColor(textMarkupColor)) {\n                var fontColor = [textMarkupColor.r, textMarkupColor.g, textMarkupColor.b];\n                annotation.textMarkUpColor = fontColor;\n            }\n        }\n        var commentsDetails = freeTextAnnotation.comments;\n        if (commentsDetails.length > 0) {\n            for (var i = 0; i < commentsDetails.length; i++) {\n                // eslint-disable-next-line max-len\n                annotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], annotation.bounds));\n            }\n        }\n        if (freeTextAnnotation.hasOwnProperty('annotationSettings') && !isNullOrUndefined(freeTextAnnotation.annotationSettings)) {\n            var annotationSettings = freeTextAnnotation.annotationSettings;\n            if (annotationSettings.hasOwnProperty('isLock') && !isNullOrUndefined(annotationSettings.isLock)) {\n                if (annotationSettings.isLock) {\n                    annotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(freeTextAnnotation.isCommentLock) && freeTextAnnotation.isCommentLock) {\n            annotation.flags = PdfAnnotationFlag.readOnly;\n        }\n        else {\n            annotation.flags = PdfAnnotationFlag.print;\n        }\n        if (!isNullOrUndefined(freeTextAnnotation.customData)) {\n            annotation.setValues('CustomData', freeTextAnnotation.customData);\n        }\n        if (freeTextAnnotation.hasOwnProperty(\"textAlign\") && !isNullOrUndefined(freeTextAnnotation.textAlign)) {\n            annotation.textAlignment = this.getPdfTextAlignment(freeTextAnnotation.textAlign.toString().toLowerCase());\n        }\n        var isReadonly = false;\n        var isPrint = false;\n        if (freeTextAnnotation.hasOwnProperty(\"isReadonly\")) {\n            isReadonly = !isNullOrUndefined(freeTextAnnotation.isReadonly) ? freeTextAnnotation.isReadonly : false;\n        }\n        if (freeTextAnnotation.hasOwnProperty(\"isPrint\")) {\n            isPrint = !isNullOrUndefined(freeTextAnnotation.isPrint) ? freeTextAnnotation.isPrint : false;\n        }\n        if (isReadonly && isPrint) {\n            annotation.flags = PdfAnnotationFlag.readOnly | PdfAnnotationFlag.print;\n        }\n        else if (isPrint) {\n            annotation.flags = PdfAnnotationFlag.print;\n        }\n        else if (isReadonly) {\n            annotation.flags = PdfAnnotationFlag.readOnly;\n        }\n        if (freeTextAnnotation.hasOwnProperty(\"allowedInteractions\") && !isNullOrUndefined(freeTextAnnotation.allowedInteractions)) {\n            annotation.setValues('AllowedInteractions', JSON.stringify(freeTextAnnotation.allowedInteractions));\n        }\n        page.annotations.add(annotation);\n    };\n    // eslint-disable-next-line max-len\n    AnnotationRenderer.prototype.renderSignHereStamp = function (rubberStampAnnotation, rectangle, icon, textBrush, page, pens) {\n        var stringFormat = new PdfStringFormat();\n        var font = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.bold | PdfFontStyle.italic);\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var point1 = [0, 0];\n        var point2 = [0, 0];\n        var drawingPath = new _PdfPath();\n        var appearance = rubberStampAnnotation.appearance.normal;\n        if (this.defaultHeight > 0 && this.defaultWidth > 0) {\n            appearance.graphics.scaleTransform(rectangle.width / (this.defaultWidth + 4), rectangle.height / 28.00);\n        }\n        point1 = [(this.defaultWidth / 2 + 1), 15, 0, 0];\n        point2 = [0, 0];\n        drawingPath._addLine(point1[0], point1[1], point2[0], point2[1]);\n        var pointValues = [drawingPath._points[0][0], drawingPath._points[0][1], 0, 0];\n        appearance.graphics.drawString(icon.toUpperCase(), font, pointValues, pens, textBrush, stringFormat);\n    };\n    AnnotationRenderer.prototype.retriveDefaultWidth = function (subject) {\n        switch (subject.trim()) {\n            case 'Witness':\n                this.defaultWidth = 97.39;\n                this.defaultHeight = 16.84;\n                break;\n            case 'Initial Here':\n                this.defaultWidth = 151.345;\n                this.defaultHeight = 16.781;\n                break;\n            case 'Sign Here':\n                this.defaultWidth = 121.306;\n                this.defaultHeight = 16.899;\n                break;\n            default:\n                this.defaultWidth = 0;\n                this.defaultHeight = 0;\n                break;\n        }\n    };\n    // eslint-disable-next-line max-len\n    AnnotationRenderer.prototype.renderDynamicStamp = function (rubberStampAnnotation, icon, text, textBrush, rectangle, pens, page) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.left;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var stampFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.bold | PdfFontStyle.italic);\n        // eslint-disable-next-line max-len\n        var detailsFont = new PdfStandardFont(PdfFontFamily.helvetica, (rectangle.height / 6), PdfFontStyle.bold | PdfFontStyle.italic);\n        var appearance = rubberStampAnnotation.appearance.normal;\n        var point1 = [0, 0];\n        var point2 = [0, 0];\n        var drawingPath = new _PdfPath();\n        point1 = [5, (rectangle.height / 3)];\n        point2 = [5, (rectangle.height - (detailsFont.size * 2))];\n        drawingPath._addLine(point1[0], point1[1], point2[0], point2[1]);\n        var stampTypeBounds = [drawingPath._points[0][0], drawingPath._points[0][1], 0, 0];\n        var stampTimeStampbounds = [drawingPath._points[1][0], drawingPath._points[1][1], (rectangle.width - drawingPath._points[1][0]), (rectangle.height - drawingPath._points[1][1])];\n        appearance.graphics.drawString(icon.toUpperCase(), stampFont, stampTypeBounds, pens, textBrush, stringFormat);\n        appearance.graphics.drawString(text, detailsFont, stampTimeStampbounds, pens, textBrush, stringFormat);\n    };\n    AnnotationRenderer.prototype.calculateBoundsXY = function (wrapperBounds, bounds, pageNo, pdfPageBase) {\n        var boundsXY = new Rect();\n        var pageSize = this.getPageSize(pageNo);\n        if (pdfPageBase.pageRotation === PdfRotationAngle.angle90) {\n            boundsXY.x = this.convertPixelToPoint(wrapperBounds.y);\n            boundsXY.y = this.convertPixelToPoint(pageSize.width - wrapperBounds.x - wrapperBounds.width);\n        }\n        else if (pdfPageBase.pageRotation === PdfRotationAngle.angle180) {\n            boundsXY.x = this.convertPixelToPoint(pageSize.width - wrapperBounds.x - wrapperBounds.width);\n            boundsXY.y = this.convertPixelToPoint(pageSize.height - wrapperBounds.y - wrapperBounds.height);\n        }\n        else if (pdfPageBase.pageRotation === PdfRotationAngle.angle270) {\n            boundsXY.x = this.convertPixelToPoint(pageSize.height - wrapperBounds.y - wrapperBounds.height);\n            boundsXY.y = this.convertPixelToPoint(wrapperBounds.x);\n        }\n        else {\n            boundsXY.x = this.convertPixelToPoint(wrapperBounds.x);\n            boundsXY.y = this.convertPixelToPoint(wrapperBounds.y);\n        }\n        return boundsXY;\n    };\n    AnnotationRenderer.prototype.getPageSize = function (pageNumber) {\n        var page = this.pdfViewer.pdfRendererModule.loadedDocument.getPage(pageNumber);\n        var size = page.size;\n        return new Size(this.convertPointToPixel(size[0]), this.convertPointToPixel(size[1]));\n    };\n    AnnotationRenderer.prototype.setMeasurementUnit = function (unit) {\n        var measurementUnit;\n        switch (unit) {\n            case 'cm':\n                measurementUnit = PdfMeasurementUnit.centimeter;\n                break;\n            case 'in':\n                measurementUnit = PdfMeasurementUnit.inch;\n                break;\n            case 'mm':\n                measurementUnit = PdfMeasurementUnit.millimeter;\n                break;\n            case 'pt':\n                measurementUnit = PdfMeasurementUnit.point;\n                break;\n            case 'p':\n                measurementUnit = PdfMeasurementUnit.pica;\n                break;\n        }\n        return measurementUnit;\n    };\n    AnnotationRenderer.prototype.getRubberStampRotateAngle = function (angleString, rotationAngle) {\n        var angle = 0;\n        switch (angleString) {\n            case 'RotateAngle0':\n                angle = 0;\n                break;\n            case 'RotateAngle180':\n                angle = 180;\n                break;\n            case 'RotateAngle270':\n                angle = 270;\n                break;\n            case 'RotateAngle90':\n                angle = 90;\n                break;\n            default:\n                break;\n        }\n        angle -= rotationAngle;\n        return angle;\n    };\n    AnnotationRenderer.prototype.getFontFamily = function (fontFamily) {\n        var font = PdfFontFamily.helvetica;\n        fontFamily = !isNullOrUndefined(fontFamily) && fontFamily !== '' ? fontFamily : 'Helvetica';\n        switch (fontFamily) {\n            case 'Helvetica':\n                font = PdfFontFamily.helvetica;\n                break;\n            case 'Courier':\n                font = PdfFontFamily.courier;\n                break;\n            case 'Times New Roman':\n                font = PdfFontFamily.timesRoman;\n                break;\n            case 'Symbol':\n                font = PdfFontFamily.symbol;\n                break;\n            case 'ZapfDingbats':\n                font = PdfFontFamily.zapfDingbats;\n                break;\n            default:\n                break;\n        }\n        return font;\n    };\n    AnnotationRenderer.prototype.getFontStyle = function (fontJson) {\n        var fontStyle = PdfFontStyle.regular;\n        if (!isNullOrUndefined(fontJson)) {\n            if (fontJson.isBold) {\n                fontStyle = fontStyle | PdfFontStyle.bold;\n            }\n            if (fontJson.isItalic) {\n                fontStyle = fontStyle | PdfFontStyle.italic;\n            }\n            if (fontJson.isStrikeout) {\n                fontStyle = fontStyle | PdfFontStyle.strikeout;\n            }\n            if (fontJson.isUnderline) {\n                fontStyle = fontStyle | PdfFontStyle.underline;\n            }\n        }\n        return fontStyle;\n    };\n    AnnotationRenderer.prototype.getPdfTextAlignment = function (alignment) {\n        var textAlignment = PdfTextAlignment.left;\n        switch (alignment) {\n            case 'center':\n                textAlignment = PdfTextAlignment.center;\n                break;\n            case 'right':\n                textAlignment = PdfTextAlignment.right;\n                break;\n            case 'justify':\n                textAlignment = PdfTextAlignment.justify;\n                break;\n            default:\n                break;\n        }\n        return textAlignment;\n    };\n    // eslint-disable-next-line max-len\n    AnnotationRenderer.prototype.drawStampAsPath = function (resultObjects, rubberStampAnnotation, textBrush, stampBrush) {\n        var transformMatrix = new Matrix(1, 0, 0, 1, 0, 0);\n        var currentPoint = { x: 0, y: 0 };\n        var graphics;\n        var graphicsPath = new _PdfPath();\n        var stampObjects = resultObjects;\n        for (var index = 0; index < stampObjects.length; index++) {\n            var val = stampObjects[parseInt(index.toString(), 10)];\n            var path = val.command.toString();\n            if (path === 'M') {\n                graphicsPath._startFigure();\n                currentPoint = { x: val.x, y: val.y };\n            }\n            if (path === 'L') {\n                var array = [\n                    currentPoint, { x: val.x, y: val.y }\n                ];\n                this.transformPoints(array);\n                var array1 = [\n                    { x: array[0].x, y: array[0].y }, { x: array[1].x, y: array[1].y }\n                ];\n                graphicsPath._addLine(array1[0].x, array1[0].y, array1[1].x, array1[1].y);\n                currentPoint = { x: val.x, y: val.y };\n            }\n            if (path === 'C') {\n                var array2 = [\n                    currentPoint,\n                    { x: val.x, y: val.y },\n                    { x: val.x1, y: val.y1 },\n                    { x: val.x2, y: val.y2 }\n                ];\n                this.transformPoints(array2);\n                var array21 = [\n                    { x: array2[0].x, y: array2[0].y },\n                    { x: array2[1].x, y: array2[1].y },\n                    { x: array2[2].x, y: array2[2].y },\n                    { x: array2[3].x, y: array2[3].y }\n                ];\n                // eslint-disable-next-line max-len\n                graphicsPath._addBezier(array21[0].x, array21[0].y, array21[1].x, array21[1].y, array21[2].x, array21[2].y, array21[3].x, array21[3].y);\n                currentPoint = { x: val.x, y: val.y };\n            }\n            if (path === 'Z') {\n                graphicsPath._closeFigure();\n            }\n        }\n    };\n    AnnotationRenderer.prototype.transformPoints = function (points) {\n        if (!isNullOrUndefined(points)) {\n            for (var i = 0; i < points.length; i++) {\n                points[parseInt(i.toString(), 10)] = this.transform(points[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    AnnotationRenderer.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        return { x: x, y: y };\n    };\n    AnnotationRenderer.prototype.getIconName = function (stampAnnotation, subject, rubberStampAnnotation) {\n        var iconExists = true;\n        switch (subject.trim()) {\n            case 'Approved':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.approved;\n                break;\n            case 'Confidential':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.confidential;\n                break;\n            case 'Not Approved':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.notApproved;\n                break;\n            case 'Draft':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.draft;\n                break;\n            case 'Final':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.final;\n                break;\n            case 'Completed':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.completed;\n                break;\n            case 'For Public Release':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n                break;\n            case 'Not For Public Release':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n                break;\n            case 'For Comment':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.forComment;\n                break;\n            case 'Void':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.void;\n                break;\n            case 'Preliminary Results':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n                break;\n            case 'Information Only':\n                rubberStampAnnotation.icon = PdfRubberStampAnnotationIcon.informationOnly;\n                break;\n            default:\n                iconExists = false;\n                break;\n        }\n        return iconExists;\n    };\n    AnnotationRenderer.prototype.addCircleMeasurementAnnotation = function (measureShapeAnnotation, page) {\n        var bounds = JSON.parse(measureShapeAnnotation.bounds);\n        var cropValues = this.getCropBoxValue(page, false);\n        var left = this.convertPixelToPoint(bounds.left);\n        var top = this.convertPixelToPoint(bounds.top);\n        var width = this.convertPixelToPoint(bounds.width);\n        var height = this.convertPixelToPoint(bounds.height);\n        if (isNullOrUndefined(bounds.left)) {\n            measureShapeAnnotation.bounds.left = 0;\n        }\n        if (isNullOrUndefined(bounds.top)) {\n            measureShapeAnnotation.bounds.top = 0;\n        }\n        var cropX = 0;\n        var cropY = 0;\n        if (cropValues.x != 0 && cropValues.y != 0 && cropValues.x == left) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        else if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        // eslint-disable-next-line max-len\n        var circleAnnotation = new PdfCircleAnnotation(cropX + left, cropY + top, width, height);\n        if (!isNullOrUndefined(measureShapeAnnotation.note)) {\n            circleAnnotation.text = measureShapeAnnotation.note.toString();\n        }\n        circleAnnotation.author = !isNullOrUndefined(measureShapeAnnotation.author) && measureShapeAnnotation.author.toString() !== \"\" ? measureShapeAnnotation.author.toString() : 'Guest';\n        circleAnnotation._dictionary.set('NM', measureShapeAnnotation.annotName.toString());\n        if (!isNullOrUndefined(measureShapeAnnotation.subject)) {\n            circleAnnotation.subject = measureShapeAnnotation.subject.toString();\n        }\n        if (!isNullOrUndefined(measureShapeAnnotation.strokeColor)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var strokeColor = JSON.parse(measureShapeAnnotation.strokeColor);\n            // eslint-disable-next-line max-len\n            var color = [strokeColor.r, strokeColor.g, strokeColor.b];\n            circleAnnotation.color = color;\n        }\n        if (!isNullOrUndefined(measureShapeAnnotation.fillColor)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var fillColor = JSON.parse(measureShapeAnnotation.fillColor);\n            if (!this.isTransparentColor(fillColor)) {\n                var innerColor = [fillColor.r, fillColor.g, fillColor.b];\n                circleAnnotation.innerColor = innerColor;\n            }\n            if (fillColor.a < 1 && fillColor.a > 0) {\n                circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n                fillColor.a = 1;\n            }\n            else {\n                circleAnnotation._dictionary.update('FillOpacity', fillColor.a);\n            }\n        }\n        if (!isNullOrUndefined(measureShapeAnnotation.opacity)) {\n            circleAnnotation.opacity = measureShapeAnnotation.opacity;\n        }\n        var lineBorder = new PdfAnnotationBorder();\n        lineBorder.width = measureShapeAnnotation.thickness;\n        lineBorder.style = measureShapeAnnotation.borderStyle;\n        lineBorder.dash = measureShapeAnnotation.borderDashArray;\n        circleAnnotation.border = lineBorder;\n        circleAnnotation.rotationAngle = this.getRotateAngle(measureShapeAnnotation.rotateAngle);\n        var dateValue;\n        if (!isNullOrUndefined(measureShapeAnnotation.modifiedDate) && !isNaN(Date.parse(measureShapeAnnotation.modifiedDate))) {\n            dateValue = new Date(Date.parse(measureShapeAnnotation.modifiedDate));\n            circleAnnotation.modifiedDate = dateValue;\n        }\n        var commentsDetails = measureShapeAnnotation.comments;\n        if (commentsDetails.length > 0) {\n            for (var i = 0; i < commentsDetails.length; i++) {\n                // eslint-disable-next-line max-len\n                circleAnnotation.comments.add(this.addCommentsCollection(commentsDetails[parseInt(i.toString(), 10)], circleAnnotation.bounds));\n            }\n        }\n        var reviewDetails = measureShapeAnnotation.review;\n        circleAnnotation.reviewHistory.add(this.addReviewCollections(reviewDetails, circleAnnotation.bounds));\n        if (!isNullOrUndefined(measureShapeAnnotation.isCloudShape) && measureShapeAnnotation.isCloudShape) {\n            var borderEffect = new PdfBorderEffect();\n            borderEffect.style = PdfBorderEffectStyle.cloudy;\n            borderEffect.intensity = measureShapeAnnotation.cloudIntensity;\n            circleAnnotation._borderEffect = borderEffect;\n            var rectDifferences = JSON.parse(measureShapeAnnotation.rectangleDifference);\n            if (rectDifferences.length > 0) {\n                var rd = this.getRDValues(rectDifferences);\n                circleAnnotation._dictionary.update('RD', rd);\n            }\n        }\n        if (!isNullOrUndefined(measureShapeAnnotation.isLocked) && measureShapeAnnotation.isLocked) {\n            circleAnnotation.flags = PdfAnnotationFlag.locked | PdfAnnotationFlag.print;\n        }\n        else if (!isNullOrUndefined(measureShapeAnnotation.isCommentLock) && measureShapeAnnotation.isCommentLock) {\n            circleAnnotation.flags = PdfAnnotationFlag.readOnly;\n        }\n        else {\n            circleAnnotation.flags = PdfAnnotationFlag.print;\n        }\n        circleAnnotation.measureType = PdfCircleMeasurementType.radius;\n        var measureDetail = JSON.parse(measureShapeAnnotation.calibrate);\n        if (!isNullOrUndefined(measureDetail)) {\n            circleAnnotation._dictionary.set('Measure', this.setMeasureDictionary(measureDetail));\n        }\n        if (!isNullOrUndefined(measureShapeAnnotation.customData)) {\n            circleAnnotation.setValues('CustomData', measureShapeAnnotation.customData);\n        }\n        circleAnnotation.setAppearance(true);\n        return circleAnnotation;\n    };\n    AnnotationRenderer.prototype.setMeasureDictionary = function (measureDetail) {\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('Type', 'Measure');\n        measureDictionary.set('R', measureDetail.ratio);\n        if (!isNullOrUndefined(measureDetail.x)) {\n            var xNumberFormat = this.createNumberFormat(measureDetail.x);\n            measureDictionary.set('X', xNumberFormat);\n        }\n        if (!isNullOrUndefined(measureDetail.distance)) {\n            var dNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.distance));\n            measureDictionary.set('D', dNumberFormat);\n        }\n        if (!isNullOrUndefined(measureDetail.area)) {\n            var aNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.area));\n            measureDictionary.set('A', aNumberFormat);\n        }\n        if (!isNullOrUndefined(measureDetail.angle)) {\n            var tNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.angle));\n            measureDictionary.set('T', tNumberFormat);\n        }\n        if (!isNullOrUndefined(measureDetail.volume)) {\n            var vNumberFormat = this.createNumberFormat(JSON.parse(measureDetail.volume));\n            measureDictionary.set('V', vNumberFormat);\n        }\n        return measureDictionary;\n    };\n    AnnotationRenderer.prototype.createNumberFormat = function (numberFormatList) {\n        var numberFormats = [];\n        if (isNullOrUndefined(numberFormatList) || numberFormatList.length === 0) {\n            return undefined;\n        }\n        for (var index = 0; index < numberFormatList.length; index++) {\n            var numberFormatDictionary = new _PdfDictionary();\n            var numberFormat = numberFormatList[parseInt(index.toString(), 10)];\n            numberFormatDictionary.set('Type', 'NumberFormat');\n            numberFormatDictionary.set('U', numberFormat.unit);\n            numberFormatDictionary.set('F', numberFormat.fractionalType);\n            numberFormatDictionary.set('D', numberFormat.denominator);\n            numberFormatDictionary.set('C', numberFormat.conversionFactor);\n            numberFormatDictionary.set('FD', numberFormat.formatDenominator);\n            numberFormats.push(numberFormatDictionary);\n        }\n        return numberFormats;\n    };\n    AnnotationRenderer.prototype.checkAnnotationLock = function (annotation) {\n        var isLock = false;\n        if (!isNullOrUndefined(annotation.annotationSettings)) {\n            var annotationSettings = annotation.annotationSettings;\n            if (!isNullOrUndefined(annotationSettings.isLock)) {\n                isLock = annotationSettings.isLock;\n            }\n        }\n        return isLock;\n    };\n    AnnotationRenderer.prototype.getSaveVertexPoints = function (points, page) {\n        var cropValues = this.getCropBoxValue(page, false);\n        if (cropValues.x == 0 && page.cropBox[2] == page.size[0] && cropValues.y == page.size[1]) {\n            cropValues.x = 0;\n            cropValues.y = 0;\n        }\n        var pageHeight = page._size[1];\n        var pointList = [];\n        for (var index = 0; index < points.length; index++) {\n            var x = this.convertPixelToPoint(points[parseInt(index.toString(), 10)].x) + cropValues.x;\n            pointList.push(x);\n            var y = pageHeight - this.convertPixelToPoint(points[parseInt(index.toString(), 10)].y) + cropValues.y;\n            pointList.push(y);\n        }\n        return pointList;\n    };\n    AnnotationRenderer.prototype.getLineEndingStyle = function (endingStyle) {\n        var style = PdfLineEndingStyle.none;\n        switch (endingStyle) {\n            case 'Square':\n                style = PdfLineEndingStyle.square;\n                break;\n            case 'ClosedArrow':\n                style = PdfLineEndingStyle.closedArrow;\n                break;\n            case 'RClosedArrow':\n                style = PdfLineEndingStyle.rClosedArrow;\n                break;\n            case 'OpenArrow':\n                style = PdfLineEndingStyle.openArrow;\n                break;\n            case 'ROpenArrow':\n                style = PdfLineEndingStyle.rOpenArrow;\n                break;\n            case 'Butt':\n                style = PdfLineEndingStyle.butt;\n                break;\n            case 'Circle':\n                style = PdfLineEndingStyle.circle;\n                break;\n            case 'Diamond':\n                style = PdfLineEndingStyle.diamond;\n                break;\n            case 'Slash':\n                style = PdfLineEndingStyle.slash;\n                break;\n        }\n        return style;\n    };\n    AnnotationRenderer.prototype.getCaptionType = function (captionPosition) {\n        var captionType = PdfLineCaptionType.inline;\n        switch (captionPosition) {\n            case 'Inline':\n                captionType = PdfLineCaptionType.inline;\n                break;\n            case 'Top':\n                captionType = PdfLineCaptionType.top;\n                break;\n        }\n        return captionType;\n    };\n    AnnotationRenderer.prototype.addReviewCollections = function (popupAnnotation, bounds) {\n        var annotation = new PdfPopupAnnotation(null, bounds.x, bounds.y, bounds.width, bounds.height);\n        if (popupAnnotation['state'] != null) {\n            annotation.state = this.getReviewState(popupAnnotation['state'].toString());\n            annotation.stateModel = PdfAnnotationStateModel.review;\n        }\n        return annotation;\n    };\n    AnnotationRenderer.prototype.addCommentsCollection = function (popupAnnotation, bounds) {\n        // eslint-disable-next-line max-len\n        var annotation = new PdfPopupAnnotation();\n        annotation.text = popupAnnotation.note;\n        annotation.author = popupAnnotation.author;\n        annotation.subject = popupAnnotation.subject;\n        if (!isNullOrUndefined(popupAnnotation.note)) {\n            annotation.text = popupAnnotation['note'].toString();\n        }\n        else {\n            annotation._annotFlags = PdfAnnotationFlag.print;\n        }\n        var reviewDetails = popupAnnotation.review;\n        annotation.reviewHistory.add(this.addReviewCollections(reviewDetails, bounds));\n        var dateValue;\n        if (!isNullOrUndefined(popupAnnotation.modifiedDate) && !isNaN(Date.parse(popupAnnotation.modifiedDate))) {\n            dateValue = new Date(Date.parse(popupAnnotation.modifiedDate));\n            annotation.modifiedDate = dateValue;\n        }\n        annotation._dictionary.set('NM', popupAnnotation.annotName.toString());\n        return annotation;\n    };\n    AnnotationRenderer.prototype.getReviewState = function (state) {\n        var reviewState;\n        switch (state) {\n            case 'Accepted':\n                reviewState = PdfAnnotationState.accepted;\n                break;\n            case 'Cancelled':\n                reviewState = PdfAnnotationState.cancel;\n                break;\n            case 'Completed':\n                reviewState = PdfAnnotationState.completed;\n                break;\n            case 'Rejected':\n                reviewState = PdfAnnotationState.rejected;\n                break;\n            case 'None':\n                reviewState = PdfAnnotationState.none;\n                break;\n            default:\n                reviewState = PdfAnnotationState.unmarked;\n                break;\n        }\n        return reviewState;\n    };\n    AnnotationRenderer.prototype.convertPixelToPoint = function (value) {\n        return (value * 72 / 96);\n    };\n    AnnotationRenderer.prototype.convertPointToPixel = function (value) {\n        return (value * 96 / 72);\n    };\n    AnnotationRenderer.prototype.isTransparentColor = function (fillColor) {\n        var isWhite = fillColor && fillColor.r === 255 && fillColor.g === 255 && fillColor.b === 255;\n        return fillColor && fillColor.a === 0 && isWhite;\n    };\n    AnnotationRenderer.prototype.getRDValues = function (values) {\n        var rectDifference = [];\n        for (var i = 0; i < values.length; i++) {\n            rectDifference.push(parseFloat(values[parseInt(i.toString(), 10)]));\n        }\n        return rectDifference;\n    };\n    AnnotationRenderer.prototype.getRotateAngle = function (angleString) {\n        var angle = PdfRotationAngle.angle0;\n        switch (angleString) {\n            case 'RotateAngle0':\n                angle = PdfRotationAngle.angle0;\n                break;\n            case 'RotateAngle180':\n                angle = PdfRotationAngle.angle180;\n                break;\n            case 'RotateAngle270':\n                angle = PdfRotationAngle.angle270;\n                break;\n            case 'RotateAngle90':\n                angle = PdfRotationAngle.angle90;\n                break;\n        }\n        return angle;\n    };\n    /**\n     * @private\n     * @param inkAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param pageNumber\n     * @param loadedPage\n     * @returns\n     */\n    AnnotationRenderer.prototype.loadSignature = function (inkAnnot, height, width, pageRotation, pageNumber, loadedPage) {\n        var signature = new SignatureAnnotationBase();\n        var outputstring = '';\n        if (!isNullOrUndefined(inkAnnot.inkPointsCollection)) {\n            for (var index = 0; index < inkAnnot.inkPointsCollection.length; index++) {\n                var inkList = inkAnnot.inkPointsCollection[parseInt(index.toString(), 10)];\n                for (var j = 0; j < inkList.length; j += 2) {\n                    var x = void 0;\n                    var y = void 0;\n                    if (j === 0) {\n                        x = inkList[parseInt(j.toString(), 10)];\n                        y = height - inkList[j + 1];\n                        outputstring += 'M' + x + ',' + y + ' ';\n                    }\n                    else {\n                        x = inkList[parseInt(j.toString(), 10)];\n                        y = height - inkList[j + 1];\n                        outputstring += 'L' + x + ',' + y + ' ';\n                    }\n                }\n            }\n        }\n        signature.AnnotationType = 'Signature';\n        signature.Bounds = this.getBounds(inkAnnot.bounds, width, height, pageRotation);\n        signature.Opacity = inkAnnot.opacity;\n        signature.Thickness = inkAnnot.border.width;\n        signature.PathData = outputstring;\n        signature.StrokeColor = 'rgba(' + inkAnnot.color[0] + ',' + inkAnnot.color[1] + ',' + inkAnnot.color[2] + ',' + (inkAnnot.color[3] ? inkAnnot.color[3] : 1) + ')';\n        signature.PageNumber = pageNumber;\n        signature.SignatureName = inkAnnot.name;\n        return signature;\n    };\n    /**\n     * @private\n     * @param inkAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param pageNumber\n     * @param loadedPage\n     * @returns\n     */\n    AnnotationRenderer.prototype.loadInkAnnotation = function (inkAnnot, height, width, pageRotation, pageNumber, loadedPage) {\n        var signature = new InkSignatureAnnotation();\n        var outputstring = '';\n        if (!isNullOrUndefined(inkAnnot.inkPointsCollection)) {\n            for (var index = 0; index < inkAnnot.inkPointsCollection.length; index++) {\n                var inkList = inkAnnot.inkPointsCollection[parseInt(index.toString(), 10)];\n                for (var j = 0; j < inkList.length; j += 2) {\n                    var x = void 0;\n                    var y = void 0;\n                    if (inkAnnot._page.rotation == PdfRotationAngle.angle90) {\n                        x = inkList[j + 1];\n                        y = inkList[parseInt(j.toString(), 10)];\n                    }\n                    else if (inkAnnot._page.rotation == PdfRotationAngle.angle180) {\n                        x = inkAnnot._page.size[0] - inkList[parseInt(j.toString(), 10)];\n                        y = inkList[j + 1];\n                    }\n                    else if (inkAnnot._page.rotation == PdfRotationAngle.angle270) {\n                        x = inkAnnot._page.size[0] - inkList[j + 1];\n                        y = inkAnnot._page.size[1] - inkList[parseInt(j.toString(), 10)];\n                    }\n                    else {\n                        x = inkList[parseInt(j.toString(), 10)];\n                        y = inkAnnot._page.size[1] - inkList[j + 1];\n                    }\n                    if (j === 0) {\n                        outputstring += 'M' + x + ',' + y + ' ';\n                    }\n                    else {\n                        outputstring += 'L' + x + ',' + y + ' ';\n                    }\n                }\n            }\n        }\n        signature.Author = inkAnnot.author;\n        signature.Subject = inkAnnot.subject;\n        if (!isNullOrUndefined(inkAnnot.modifiedDate)) {\n            signature.ModifiedDate = this.formatDate(inkAnnot.modifiedDate);\n        }\n        else {\n            signature.ModifiedDate = this.formatDate(new Date());\n        }\n        signature.Note = this.getValidNoteContent(inkAnnot.text);\n        for (var i = 0; i < inkAnnot.reviewHistory.count; i++) {\n            signature.State = this.getStateString(inkAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            signature.StateModel = this.getStateModelString(inkAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        if (isNullOrUndefined(signature.State) || isNullOrUndefined(signature.StateModel)) {\n            signature.State = 'Unmarked';\n            signature.StateModel = 'None';\n        }\n        signature.Comments = new Array();\n        for (var i = 0; i < inkAnnot.comments.count; i++) {\n            var annot = this.loadPopupAnnotation(inkAnnot.comments.at(i), height, width, pageRotation);\n            signature.Comments.push(annot);\n        }\n        if (inkAnnot.flags === PdfAnnotationFlag.locked) {\n            signature.IsLocked = true;\n        }\n        else {\n            signature.IsLocked = false;\n        }\n        if (inkAnnot.flags === PdfAnnotationFlag.readOnly) {\n            signature.IsCommentLock = true;\n        }\n        else {\n            signature.IsCommentLock = false;\n        }\n        signature.AnnotationType = 'Ink';\n        signature.AnnotType = 'Ink';\n        signature.Bounds = this.getBounds(inkAnnot.bounds, height, width, pageRotation);\n        if (inkAnnot.bounds.y < 0) {\n            var cropRect = new Rect(inkAnnot.bounds.x, loadedPage.cropBox[1] + inkAnnot.bounds.y, inkAnnot.bounds.width, inkAnnot.bounds.height);\n            signature.Bounds = this.getBounds(cropRect, height, width, pageRotation);\n        }\n        signature.Opacity = inkAnnot.opacity;\n        signature.Thickness = inkAnnot.border.width;\n        signature.PathData = outputstring;\n        signature.StrokeColor = 'rgba(' + inkAnnot.color[0] + ',' + inkAnnot.color[1] + ',' + inkAnnot.color[2] + ',' + (inkAnnot.color[3] ? inkAnnot.color[3] : 1) + ')';\n        signature.PageNumber = pageNumber;\n        signature.AnnotName = inkAnnot.name;\n        if (inkAnnot._dictionary.has('CustomData') && !isNullOrUndefined(inkAnnot._dictionary.get('CustomData'))) {\n            var customData = inkAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                signature.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        return signature;\n    };\n    /**\n     * @param squareAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param shapeFreeText\n     * @private\n     */\n    AnnotationRenderer.prototype.loadSquareAnnotation = function (squareAnnot, height, width, pageRotation, shapeFreeText) {\n        var shapeAnnotation = new ShapeAnnotationBase();\n        shapeAnnotation.ShapeAnnotationType = 'Square';\n        shapeAnnotation.Author = squareAnnot.author;\n        shapeAnnotation.AnnotName = squareAnnot.name;\n        shapeAnnotation.Subject = squareAnnot.subject;\n        if (!isNullOrUndefined(squareAnnot.modifiedDate)) {\n            shapeAnnotation.ModifiedDate = this.formatDate(squareAnnot.modifiedDate);\n        }\n        else {\n            shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        shapeAnnotation.Note = this.getValidNoteContent(squareAnnot.text);\n        shapeAnnotation.Thickness = squareAnnot.border.width;\n        shapeAnnotation.BorderStyle = this.getBorderStylesString(squareAnnot.border.style);\n        shapeAnnotation.BorderDashArray = squareAnnot.border.dash ? squareAnnot.border.dash[0] ? squareAnnot.border.dash[0] : 0 : 0;\n        shapeAnnotation.Opacity = squareAnnot.opacity;\n        shapeAnnotation.RotateAngle = this.getRotateAngleString(squareAnnot.rotate);\n        shapeAnnotation.AnnotType = 'shape';\n        for (var i = 0; i < squareAnnot.reviewHistory.count; i++) {\n            shapeAnnotation.State = this.getStateString(squareAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            shapeAnnotation.StateModel = this.getStateModelString(squareAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n            shapeAnnotation.State = 'Unmarked';\n            shapeAnnotation.StateModel = 'None';\n        }\n        shapeAnnotation.Comments = new Array();\n        for (var i = 0; i < squareAnnot.comments.count; i++) {\n            var annot = this.loadPopupAnnotation(squareAnnot.comments.at(i), height, width, pageRotation);\n            shapeAnnotation.Comments.push(annot);\n        }\n        shapeAnnotation.Bounds = this.getBounds(squareAnnot.bounds, height, width, pageRotation);\n        shapeAnnotation.LineHeadStart = 'None';\n        shapeAnnotation.LineHeadEnd = 'None';\n        if (!isNullOrUndefined(squareAnnot.borderEffect)) {\n            if (squareAnnot.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                shapeAnnotation.IsCloudShape = true;\n                shapeAnnotation.CloudIntensity = squareAnnot.borderEffect.intensity;\n            }\n            else {\n                shapeAnnotation.IsCloudShape = false;\n                shapeAnnotation.CloudIntensity = 0;\n            }\n        }\n        else {\n            shapeAnnotation.IsCloudShape = false;\n            shapeAnnotation.CloudIntensity = 0;\n        }\n        if (squareAnnot._dictionary.has('RD') && !isNullOrUndefined(squareAnnot._dictionary.get('RD'))) {\n            shapeAnnotation.RectangleDifference = squareAnnot._dictionary.get('RD');\n        }\n        else {\n            shapeAnnotation.RectangleDifference = new Array();\n        }\n        if (squareAnnot.flags === PdfAnnotationFlag.locked) {\n            shapeAnnotation.IsLocked = true;\n        }\n        else {\n            shapeAnnotation.IsLocked = false;\n        }\n        if (squareAnnot.flags === PdfAnnotationFlag.readOnly) {\n            shapeAnnotation.IsCommentLock = true;\n        }\n        else {\n            shapeAnnotation.IsCommentLock = false;\n        }\n        if (squareAnnot._annotFlags.toString().includes('Print')) {\n            shapeAnnotation.IsPrint = true;\n        }\n        if (squareAnnot._dictionary.has('AllowedInteractions')) {\n            var allowedInteractions = squareAnnot.getValues('AllowedInteractions');\n            var text = allowedInteractions[0];\n            shapeAnnotation.AllowedInteractions = JSON.parse(text);\n        }\n        shapeAnnotation.StrokeColor = !isNullOrUndefined(squareAnnot.color) ? 'rgba(' + squareAnnot.color[0] + ',' + squareAnnot.color[1] + ',' + squareAnnot.color[2] + ',' + (squareAnnot.color[3] ? squareAnnot.color[3] : 1) + ')' : 'rgba(0,0,0,1)';\n        var fillOpacity = (!isNullOrUndefined(squareAnnot.color) && squareAnnot.color[3]) ? squareAnnot.color[3] : 1;\n        if (squareAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(squareAnnot._dictionary.get('FillOpacity'))) {\n            fillOpacity = parseInt(squareAnnot._dictionary.get('FillOpacity').toString(), 10);\n        }\n        fillOpacity = squareAnnot.innerColor ? fillOpacity : 0;\n        squareAnnot.innerColor = squareAnnot.innerColor ? squareAnnot.innerColor : [255, 255, 255];\n        shapeAnnotation.FillColor = 'rgba(' + squareAnnot.innerColor[0] + ',' + squareAnnot.innerColor[1] + ',' + squareAnnot.innerColor[2] + ',' + fillOpacity + ')';\n        shapeAnnotation.EnableShapeLabel = false;\n        if (shapeFreeText != null) {\n            shapeAnnotation.EnableShapeLabel = true;\n            shapeAnnotation.LabelContent = shapeFreeText.text;\n            shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n            shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n            shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n            shapeAnnotation.FontSize = shapeFreeText.font.size;\n        }\n        if (squareAnnot._dictionary.has('CustomData') && !isNullOrUndefined(squareAnnot._dictionary.get('CustomData'))) {\n            var customData = squareAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        return shapeAnnotation;\n    };\n    // eslint-disable-next-line max-len\n    /**\n     * @param lineAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param shapeFreeText\n     * @private\n     */\n    AnnotationRenderer.prototype.loadLineAnnotation = function (lineAnnot, height, width, pageRotation, shapeFreeText) {\n        var shapeAnnotation = new ShapeAnnotationBase();\n        shapeAnnotation.ShapeAnnotationType = 'Line';\n        shapeAnnotation.Author = lineAnnot.author;\n        shapeAnnotation.AnnotName = lineAnnot.name;\n        shapeAnnotation.Subject = lineAnnot.subject;\n        if (!isNullOrUndefined(lineAnnot.modifiedDate)) {\n            shapeAnnotation.ModifiedDate = this.formatDate(lineAnnot.modifiedDate);\n        }\n        else {\n            shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        shapeAnnotation.Note = this.getValidNoteContent(lineAnnot.text);\n        shapeAnnotation.Thickness = lineAnnot.border.width;\n        shapeAnnotation.BorderStyle = this.getBorderStylesString(lineAnnot.border.style);\n        shapeAnnotation.BorderDashArray = lineAnnot.border.dash ? lineAnnot.border.dash[0] ? lineAnnot.border.dash[0] : 0 : 0;\n        shapeAnnotation.Opacity = lineAnnot.opacity;\n        shapeAnnotation.RotateAngle = this.getRotateAngleString(lineAnnot.rotate);\n        shapeAnnotation.AnnotType = 'shape';\n        shapeAnnotation.EnableShapeLabel = false;\n        if (shapeFreeText != null) {\n            shapeAnnotation.EnableShapeLabel = true;\n            shapeAnnotation.LabelContent = shapeFreeText.text;\n            shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n            shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n            shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n            shapeAnnotation.FontSize = shapeFreeText.font.size;\n        }\n        for (var i = 0; i < lineAnnot.reviewHistory.count; i++) {\n            shapeAnnotation.State = this.getStateString(lineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            shapeAnnotation.StateModel = this.getStateModelString(lineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n            shapeAnnotation.State = 'Unmarked';\n            shapeAnnotation.StateModel = 'None';\n        }\n        shapeAnnotation.Comments = new Array();\n        for (var i = 0; i < lineAnnot.comments.count; i++) {\n            var annot = this.loadPopupAnnotation(lineAnnot.comments.at(i), height, width, pageRotation);\n            shapeAnnotation.Comments.push(annot);\n        }\n        shapeAnnotation.Bounds = this.getBounds(lineAnnot.bounds, height, width, pageRotation);\n        shapeAnnotation.LineHeadStart = this.getLineEndingStyleString(lineAnnot.lineEndingStyle.begin);\n        shapeAnnotation.LineHeadEnd = this.getLineEndingStyleString(lineAnnot.lineEndingStyle.end);\n        if (!isNullOrUndefined(lineAnnot._borderEffect)) {\n            if (lineAnnot._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                shapeAnnotation.IsCloudShape = true;\n                shapeAnnotation.CloudIntensity = lineAnnot._borderEffect.intensity;\n            }\n            else {\n                shapeAnnotation.IsCloudShape = false;\n                shapeAnnotation.CloudIntensity = 0;\n            }\n        }\n        else {\n            shapeAnnotation.IsCloudShape = false;\n            shapeAnnotation.CloudIntensity = 0;\n        }\n        var indent = this.getLineIndentString(lineAnnot.lineIntent);\n        shapeAnnotation.VertexPoints = this.getLinePoints(lineAnnot.linePoints, height, width, pageRotation, lineAnnot._page);\n        if (lineAnnot._dictionary.has('RD') && !isNullOrUndefined(lineAnnot._dictionary.get('RD'))) {\n            shapeAnnotation.RectangleDifference = lineAnnot._dictionary.get('RD');\n        }\n        else {\n            shapeAnnotation.RectangleDifference = new Array();\n        }\n        if (lineAnnot.flags === PdfAnnotationFlag.locked) {\n            shapeAnnotation.IsLocked = true;\n        }\n        else {\n            shapeAnnotation.IsLocked = false;\n        }\n        if (lineAnnot.flags === PdfAnnotationFlag.readOnly) {\n            shapeAnnotation.IsCommentLock = true;\n        }\n        else {\n            shapeAnnotation.IsCommentLock = false;\n        }\n        if (lineAnnot._annotFlags.toString().includes('Print')) {\n            shapeAnnotation.IsPrint = true;\n        }\n        if (lineAnnot._dictionary.has('AllowedInteractions')) {\n            var allowedInteractions = lineAnnot.getValues('AllowedInteractions');\n            var text = allowedInteractions[0];\n            shapeAnnotation.AllowedInteractions = JSON.parse(text);\n        }\n        var color = !isNullOrUndefined(lineAnnot.color) ? lineAnnot.color : [0, 0, 0];\n        shapeAnnotation.StrokeColor = 'rgba(' + color[0] + ',' + color[1] + ',' + color[2] + ',' + (color[3] ? color[3] : 1) + ')';\n        var fillOpacity = lineAnnot.color && lineAnnot.color[3] ? lineAnnot.color[3] : 1;\n        if (lineAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(lineAnnot._dictionary.get('FillOpacity'))) {\n            fillOpacity = parseInt(lineAnnot._dictionary.get('FillOpacity').toString(), 10);\n        }\n        fillOpacity = lineAnnot.innerColor ? fillOpacity : 0;\n        lineAnnot.innerColor = lineAnnot.innerColor ? lineAnnot.innerColor : [255, 255, 255];\n        shapeAnnotation.FillColor = 'rgba(' + lineAnnot.innerColor[0] + ',' + lineAnnot.innerColor[1] + ',' + lineAnnot.innerColor[2] + ',' + fillOpacity + ')';\n        if (lineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(lineAnnot._dictionary.get('CustomData'))) {\n            var customData = lineAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        if (lineAnnot.lineIntent === PdfLineIntent.lineArrow || !lineAnnot._dictionary.has('Measure')) {\n            return shapeAnnotation;\n        }\n        else {\n            var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n            if (lineAnnot._dictionary.has('Measure')) {\n                measureShapeAnnotation.Calibrate = this.getMeasureObject(lineAnnot);\n            }\n            measureShapeAnnotation.Indent = lineAnnot.lineIntent.toString();\n            measureShapeAnnotation.Caption = lineAnnot.caption.cap;\n            measureShapeAnnotation.LeaderLength = lineAnnot.leaderExt;\n            measureShapeAnnotation.LeaderLineExtension = lineAnnot.leaderLine;\n            measureShapeAnnotation.ExistingCustomData = shapeAnnotation.ExistingCustomData;\n            if (lineAnnot._dictionary.has('LLO')) {\n                measureShapeAnnotation.LeaderLineOffset = lineAnnot._dictionary.get('LLO');\n            }\n            else {\n                measureShapeAnnotation.LeaderLineOffset = 0;\n            }\n            measureShapeAnnotation.CaptionPosition = lineAnnot.caption.type.toString();\n            if (lineAnnot.flags === PdfAnnotationFlag.readOnly) {\n                measureShapeAnnotation.IsCommentLock = true;\n            }\n            else {\n                measureShapeAnnotation.IsCommentLock = false;\n            }\n            if (lineAnnot.flags === PdfAnnotationFlag.print) {\n                measureShapeAnnotation.IsPrint = true;\n            }\n            if (lineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(lineAnnot._dictionary.get('CustomData'))) {\n                var customData = lineAnnot._dictionary.get('CustomData');\n                if (customData != null) {\n                    measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n                }\n            }\n            return measureShapeAnnotation;\n        }\n    };\n    AnnotationRenderer.prototype.getLinePoints = function (points, pageHeight, pageWidth, pageRotation, page) {\n        var linePoints = [];\n        var startingPoint = new AnnotPoint(points[0], points[1]);\n        var endingPoint = new AnnotPoint(points[2], points[3]);\n        var cropBox = this.getBothCropBoxValue(page);\n        var cropBoxX = 0;\n        var cropBoxY = 0;\n        if (!(cropBox[0] == 0 && page.cropBox[2] == page.size[2] && cropBox[1] == page.size[3])) {\n            cropBoxX = cropBox[0];\n            cropBoxY = cropBox[1];\n        }\n        if (pageRotation == 0) {\n            startingPoint = { X: this.convertPointToPixel(points[0]) - this.convertPointToPixel(cropBoxX), Y: (pageHeight - this.convertPointToPixel(points[1])) + this.convertPointToPixel(cropBoxY) };\n            endingPoint = { X: this.convertPointToPixel(points[2]) - this.convertPointToPixel(cropBoxX), Y: (pageHeight - this.convertPointToPixel(points[3])) + this.convertPointToPixel(cropBoxY) };\n        }\n        else if (pageRotation == 1) {\n            startingPoint = { X: this.convertPointToPixel(points[1]), Y: this.convertPointToPixel(points[0]) };\n            endingPoint = { X: this.convertPointToPixel(points[3]), Y: this.convertPointToPixel(points[2]) };\n        }\n        else if (pageRotation == 2) {\n            startingPoint = { X: pageWidth - this.convertPointToPixel(points[0]), Y: this.convertPointToPixel(points[1]) };\n            endingPoint = { X: pageWidth - this.convertPointToPixel(points[2]), Y: this.convertPointToPixel(points[3]) };\n        }\n        else if (pageRotation == 3) {\n            startingPoint = { X: (pageWidth - this.convertPointToPixel(points[1])), Y: (pageHeight - this.convertPointToPixel(points[0])) };\n            endingPoint = { X: pageWidth - this.convertPointToPixel(points[3]), Y: pageHeight - this.convertPointToPixel(points[2]) };\n        }\n        linePoints.push(startingPoint);\n        linePoints.push(endingPoint);\n        return linePoints;\n    };\n    /**\n     * @param ellipseAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param shapeFreeText\n     * @private\n     */\n    AnnotationRenderer.prototype.loadEllipseAnnotation = function (ellipseAnnot, height, width, pageRotation, shapeFreeText) {\n        var shapeAnnotation = new ShapeAnnotationBase();\n        shapeAnnotation.ShapeAnnotationType = 'Circle';\n        shapeAnnotation.Author = ellipseAnnot.author;\n        shapeAnnotation.AnnotName = ellipseAnnot.name;\n        shapeAnnotation.Subject = ellipseAnnot.subject;\n        if (!isNullOrUndefined(ellipseAnnot.modifiedDate)) {\n            shapeAnnotation.ModifiedDate = this.formatDate(ellipseAnnot.modifiedDate);\n        }\n        else {\n            shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        shapeAnnotation.Note = this.getValidNoteContent(ellipseAnnot.text);\n        shapeAnnotation.Thickness = ellipseAnnot.border.width;\n        shapeAnnotation.BorderStyle = this.getBorderStylesString(ellipseAnnot.border.style);\n        shapeAnnotation.BorderDashArray = ellipseAnnot.border.dash ? ellipseAnnot.border.dash[0] ? ellipseAnnot.border.dash[0] : 0 : 0;\n        shapeAnnotation.Opacity = ellipseAnnot.opacity;\n        shapeAnnotation.RotateAngle = this.getRotateAngleString(ellipseAnnot.rotate);\n        shapeAnnotation.AnnotType = 'shape';\n        for (var i = 0; i < ellipseAnnot.reviewHistory.count; i++) {\n            shapeAnnotation.State = this.getStateString(ellipseAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            shapeAnnotation.StateModel = this.getStateModelString(ellipseAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n            shapeAnnotation.State = 'Unmarked';\n            shapeAnnotation.StateModel = 'None';\n        }\n        shapeAnnotation.Comments = new Array();\n        for (var i = 0; i < ellipseAnnot.comments.count; i++) {\n            var annot = this.loadPopupAnnotation(ellipseAnnot.comments.at(i), height, width, pageRotation);\n            shapeAnnotation.Comments.push(annot);\n        }\n        shapeAnnotation.Bounds = this.getBounds(ellipseAnnot.bounds, height, width, pageRotation);\n        shapeAnnotation.LineHeadStart = 'None';\n        shapeAnnotation.LineHeadEnd = 'None';\n        if (!isNullOrUndefined(ellipseAnnot._borderEffect)) {\n            if (ellipseAnnot._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                shapeAnnotation.IsCloudShape = true;\n                shapeAnnotation.CloudIntensity = ellipseAnnot._borderEffect.intensity;\n            }\n            else {\n                shapeAnnotation.IsCloudShape = false;\n                shapeAnnotation.CloudIntensity = 0;\n            }\n        }\n        else {\n            shapeAnnotation.IsCloudShape = false;\n            shapeAnnotation.CloudIntensity = 0;\n        }\n        if (ellipseAnnot._dictionary.has('RD') && !isNullOrUndefined(ellipseAnnot._dictionary.get('RD'))) {\n            shapeAnnotation.RectangleDifference = ellipseAnnot._dictionary.get('RD');\n        }\n        else {\n            shapeAnnotation.RectangleDifference = new Array();\n        }\n        if (ellipseAnnot.flags === PdfAnnotationFlag.locked) {\n            shapeAnnotation.IsLocked = true;\n        }\n        else {\n            shapeAnnotation.IsLocked = false;\n        }\n        if (ellipseAnnot.flags === PdfAnnotationFlag.readOnly) {\n            shapeAnnotation.IsCommentLock = true;\n        }\n        else {\n            shapeAnnotation.IsCommentLock = false;\n        }\n        if (ellipseAnnot._annotFlags.toString().includes('Print')) {\n            shapeAnnotation.IsPrint = true;\n        }\n        if (ellipseAnnot._dictionary.has('AllowedInteractions')) {\n            var allowedInteractions = ellipseAnnot.getValues('AllowedInteractions');\n            var text = allowedInteractions[0];\n            shapeAnnotation.AllowedInteractions = JSON.parse(text);\n        }\n        shapeAnnotation.StrokeColor = 'rgba(' + ellipseAnnot.color[0] + ',' + ellipseAnnot.color[1] + ',' + ellipseAnnot.color[2] + ',' + (ellipseAnnot.color[3] ? ellipseAnnot.color[3] : 1) + ')';\n        var fillOpacity = ellipseAnnot.color[3] ? ellipseAnnot.color[3] : 1;\n        if (ellipseAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(ellipseAnnot._dictionary.get('FillOpacity'))) {\n            fillOpacity = parseInt(ellipseAnnot._dictionary.get('FillOpacity').toString(), 10);\n        }\n        fillOpacity = ellipseAnnot.innerColor ? fillOpacity : 0;\n        ellipseAnnot.innerColor = ellipseAnnot.innerColor ? ellipseAnnot.innerColor : [255, 255, 255];\n        shapeAnnotation.FillColor = 'rgba(' + ellipseAnnot.innerColor[0] + ',' + ellipseAnnot.innerColor[1] + ',' + ellipseAnnot.innerColor[2] + ',' + fillOpacity + ')';\n        shapeAnnotation.EnableShapeLabel = false;\n        if (shapeFreeText != null) {\n            shapeAnnotation.EnableShapeLabel = true;\n            shapeAnnotation.LabelContent = shapeFreeText.text;\n            shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n            shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n            shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n            shapeAnnotation.FontSize = shapeFreeText.font.size;\n        }\n        if (ellipseAnnot._dictionary.has('CustomData') && !isNullOrUndefined(ellipseAnnot._dictionary.get('CustomData'))) {\n            var customData = ellipseAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        if (ellipseAnnot._dictionary.has('Measure')) {\n            shapeAnnotation.FillColor = 'rgba(' + ellipseAnnot.innerColor[0] + ',' + ellipseAnnot.innerColor[1] + ',' + ellipseAnnot.innerColor[2] + ',' + fillOpacity + ')';\n            var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n            measureShapeAnnotation.Calibrate = this.getMeasureObject(ellipseAnnot);\n            if (ellipseAnnot._dictionary.has('IT')) {\n                measureShapeAnnotation.Indent = ellipseAnnot._dictionary.get('IT');\n            }\n            else {\n                measureShapeAnnotation.Indent = 'PolyLineDimension';\n            }\n            measureShapeAnnotation.Caption = false;\n            measureShapeAnnotation.LeaderLength = 0;\n            measureShapeAnnotation.LeaderLineExtension = 0;\n            measureShapeAnnotation.LeaderLineOffset = 0;\n            measureShapeAnnotation.CaptionPosition = '';\n            if (ellipseAnnot.flags === PdfAnnotationFlag.readOnly) {\n                measureShapeAnnotation.IsCommentLock = true;\n            }\n            else {\n                measureShapeAnnotation.IsCommentLock = false;\n            }\n            if (ellipseAnnot.flags === PdfAnnotationFlag.print) {\n                measureShapeAnnotation.IsPrint = true;\n            }\n            if (ellipseAnnot._dictionary.has('CustomData') && !isNullOrUndefined(ellipseAnnot._dictionary.get('CustomData'))) {\n                var customData = ellipseAnnot._dictionary.get('CustomData');\n                if (customData != null) {\n                    measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n                }\n            }\n            return measureShapeAnnotation;\n        }\n        else {\n            return shapeAnnotation;\n        }\n    };\n    /**\n     * @param polygonAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param shapeFreeText\n     * @private\n     */\n    AnnotationRenderer.prototype.loadPolygonAnnotation = function (polygonAnnot, height, width, pageRotation, shapeFreeText) {\n        var shapeAnnotation = new ShapeAnnotationBase();\n        shapeAnnotation.ShapeAnnotationType = 'Polygon';\n        shapeAnnotation.Author = polygonAnnot.author;\n        shapeAnnotation.AnnotName = polygonAnnot.name;\n        shapeAnnotation.Subject = polygonAnnot.subject;\n        if (!isNullOrUndefined(polygonAnnot.modifiedDate)) {\n            shapeAnnotation.ModifiedDate = this.formatDate(polygonAnnot.modifiedDate);\n        }\n        else {\n            shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        shapeAnnotation.Note = this.getValidNoteContent(polygonAnnot.text);\n        shapeAnnotation.Thickness = polygonAnnot.border.width;\n        shapeAnnotation.BorderStyle = this.getBorderStylesString(polygonAnnot.border.style);\n        shapeAnnotation.BorderDashArray = polygonAnnot.border.dash ? polygonAnnot.border.dash[0] ? polygonAnnot.border.dash[0] : 0 : 0;\n        shapeAnnotation.Opacity = polygonAnnot.opacity;\n        shapeAnnotation.RotateAngle = this.getRotateAngleString(polygonAnnot.rotate);\n        shapeAnnotation.AnnotType = 'shape';\n        for (var i = 0; i < polygonAnnot.reviewHistory.count; i++) {\n            shapeAnnotation.State = this.getStateString(polygonAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            shapeAnnotation.StateModel = this.getStateModelString(polygonAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n            shapeAnnotation.State = 'Unmarked';\n            shapeAnnotation.StateModel = 'None';\n        }\n        shapeAnnotation.Comments = new Array();\n        for (var i = 0; i < polygonAnnot.comments.count; i++) {\n            var annot = this.loadPopupAnnotation(polygonAnnot.comments.at(i), height, width, pageRotation);\n            shapeAnnotation.Comments.push(annot);\n        }\n        shapeAnnotation.Bounds = this.getBounds(polygonAnnot.bounds, height, width, pageRotation);\n        if (!isNullOrUndefined(polygonAnnot._dictionary.get('Vertices'))) {\n            shapeAnnotation.VertexPoints = this.getVertexPoints(polygonAnnot._dictionary.get('Vertices'), width, height, pageRotation, polygonAnnot._page);\n        }\n        if (!isNullOrUndefined(shapeAnnotation.VertexPoints) && shapeAnnotation.VertexPoints[0] !== shapeAnnotation.VertexPoints[shapeAnnotation.VertexPoints.length - 1]) {\n            shapeAnnotation.VertexPoints.push(shapeAnnotation.VertexPoints[0]);\n        }\n        shapeAnnotation.StrokeColor = 'rgba(' + polygonAnnot.color[0] + ',' + polygonAnnot.color[1] + ',' + polygonAnnot.color[2] + ',' + (polygonAnnot.color[3] ? polygonAnnot.color[3] : 1) + ')';\n        var fillOpacity = polygonAnnot.color[3] ? polygonAnnot.color[3] : 1;\n        if (polygonAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(polygonAnnot._dictionary.get('FillOpacity'))) {\n            fillOpacity = parseInt(polygonAnnot._dictionary.get('FillOpacity').toString(), 10);\n        }\n        fillOpacity = polygonAnnot.innerColor ? fillOpacity : 0;\n        polygonAnnot.innerColor = polygonAnnot.innerColor ? polygonAnnot.innerColor : [255, 255, 255];\n        shapeAnnotation.FillColor = 'rgba(' + polygonAnnot.innerColor[0] + ',' + polygonAnnot.innerColor[1] + ',' + polygonAnnot.innerColor[2] + ',' + fillOpacity + ')';\n        shapeAnnotation.LineHeadStart = 'None';\n        shapeAnnotation.LineHeadEnd = 'None';\n        shapeAnnotation.EnableShapeLabel = false;\n        if (shapeFreeText != null) {\n            shapeAnnotation.EnableShapeLabel = true;\n            shapeAnnotation.LabelContent = shapeFreeText.text;\n            shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n            shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n            shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n            shapeAnnotation.FontSize = shapeFreeText.font.size;\n        }\n        if (!isNullOrUndefined(polygonAnnot.borderEffect)) {\n            if (polygonAnnot.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                shapeAnnotation.IsCloudShape = true;\n                shapeAnnotation.CloudIntensity = polygonAnnot.borderEffect.intensity;\n            }\n            else {\n                shapeAnnotation.IsCloudShape = false;\n                shapeAnnotation.CloudIntensity = 0;\n            }\n        }\n        else {\n            shapeAnnotation.IsCloudShape = false;\n            shapeAnnotation.CloudIntensity = 0;\n        }\n        if (polygonAnnot._dictionary.has('RD') && !isNullOrUndefined(polygonAnnot._dictionary.get('RD'))) {\n            shapeAnnotation.RectangleDifference = polygonAnnot._dictionary.get('RD');\n        }\n        else {\n            shapeAnnotation.RectangleDifference = new Array();\n        }\n        if (polygonAnnot.flags === PdfAnnotationFlag.locked) {\n            shapeAnnotation.IsLocked = true;\n        }\n        else {\n            shapeAnnotation.IsLocked = false;\n        }\n        if (polygonAnnot.flags === PdfAnnotationFlag.readOnly) {\n            shapeAnnotation.IsCommentLock = true;\n        }\n        else {\n            shapeAnnotation.IsCommentLock = false;\n        }\n        if (polygonAnnot.flags === PdfAnnotationFlag.print) {\n            shapeAnnotation.IsPrint = true;\n        }\n        if (polygonAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polygonAnnot._dictionary.get('CustomData'))) {\n            var customData = polygonAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        if (polygonAnnot._dictionary.has('AllowedInteractions')) {\n            var allowedInteractions = polygonAnnot.getValues('AllowedInteractions');\n            var text = allowedInteractions[0];\n            shapeAnnotation.AllowedInteractions = JSON.parse(text);\n        }\n        if (polygonAnnot._dictionary.has('Measure')) {\n            var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n            if (polygonAnnot._dictionary.has('IT') && !isNullOrUndefined(polygonAnnot._dictionary.get('IT'))) {\n                measureShapeAnnotation.Indent = polygonAnnot._dictionary.get('IT').name;\n            }\n            else {\n                measureShapeAnnotation.Indent = 'PolygonDimension';\n            }\n            measureShapeAnnotation.Calibrate = this.getMeasureObject(polygonAnnot);\n            if (isNullOrUndefined(measureShapeAnnotation.Calibrate)) {\n                return shapeAnnotation;\n            }\n            if (measureShapeAnnotation.Indent === 'PolygonVolume' && polygonAnnot._dictionary.has('Depth') && (!isNullOrUndefined(polygonAnnot._dictionary.get('Depth')))) {\n                measureShapeAnnotation.Calibrate.Depth = polygonAnnot._dictionary.get('Depth');\n            }\n            measureShapeAnnotation.Caption = false;\n            measureShapeAnnotation.LeaderLength = 0;\n            measureShapeAnnotation.LeaderLineExtension = 0;\n            measureShapeAnnotation.LeaderLineOffset = 0;\n            measureShapeAnnotation.CaptionPosition = '';\n            if (polygonAnnot.flags === PdfAnnotationFlag.readOnly) {\n                measureShapeAnnotation.IsCommentLock = true;\n            }\n            else {\n                measureShapeAnnotation.IsCommentLock = false;\n            }\n            if (polygonAnnot.flags === PdfAnnotationFlag.print) {\n                measureShapeAnnotation.IsPrint = true;\n            }\n            if (polygonAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polygonAnnot._dictionary.get('CustomData'))) {\n                var customData = polygonAnnot._dictionary.get('CustomData');\n                if (isNullOrUndefined(customData)) {\n                    measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n                }\n            }\n            return measureShapeAnnotation;\n        }\n        else {\n            return shapeAnnotation;\n        }\n    };\n    /**\n     * @param polyLineAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param shapeFreeText\n     * @private\n     */\n    // eslint-disable-next-line max-len\n    AnnotationRenderer.prototype.loadPolylineAnnotation = function (polyLineAnnot, height, width, pageRotation, shapeFreeText) {\n        var shapeAnnotation = new ShapeAnnotationBase();\n        shapeAnnotation.ShapeAnnotationType = 'Polyline';\n        shapeAnnotation.Author = polyLineAnnot.author;\n        shapeAnnotation.AnnotName = polyLineAnnot.name;\n        shapeAnnotation.Subject = polyLineAnnot.subject;\n        if (!isNullOrUndefined(polyLineAnnot.modifiedDate)) {\n            shapeAnnotation.ModifiedDate = this.formatDate(polyLineAnnot.modifiedDate);\n        }\n        else {\n            shapeAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        shapeAnnotation.Note = this.getValidNoteContent(polyLineAnnot.text);\n        shapeAnnotation.Thickness = polyLineAnnot.border.width;\n        shapeAnnotation.BorderStyle = this.getBorderStylesString(polyLineAnnot.border.style);\n        shapeAnnotation.BorderDashArray = polyLineAnnot.border.dash ? polyLineAnnot.border.dash[0] ? polyLineAnnot.border.dash[0] : 0 : 0;\n        shapeAnnotation.Opacity = polyLineAnnot.opacity;\n        shapeAnnotation.RotateAngle = this.getRotateAngleString(polyLineAnnot.rotate);\n        shapeAnnotation.AnnotType = 'shape';\n        if (!isNullOrUndefined(polyLineAnnot.reviewHistory)) {\n            for (var i = 0; i < polyLineAnnot.reviewHistory.count; i++) {\n                shapeAnnotation.State = this.getStateString(polyLineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n                shapeAnnotation.StateModel = this.getStateModelString(polyLineAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n            }\n        }\n        if (isNullOrUndefined(shapeAnnotation.State) || isNullOrUndefined(shapeAnnotation.StateModel)) {\n            shapeAnnotation.State = 'Unmarked';\n            shapeAnnotation.StateModel = 'None';\n        }\n        shapeAnnotation.Comments = new Array();\n        if (!isNullOrUndefined(polyLineAnnot.comments)) {\n            for (var i = 0; i < polyLineAnnot.comments.count; i++) {\n                var annot = this.loadPopupAnnotation(polyLineAnnot.comments.at(i), height, width, pageRotation);\n                shapeAnnotation.Comments.push(annot);\n            }\n        }\n        shapeAnnotation.Bounds = this.getBounds(polyLineAnnot.bounds, height, width, pageRotation);\n        if (!isNullOrUndefined(polyLineAnnot._dictionary.get('Vertices'))) {\n            shapeAnnotation.VertexPoints = this.getVertexPoints(polyLineAnnot._dictionary.get('Vertices'), width, height, pageRotation, polyLineAnnot._page);\n        }\n        shapeAnnotation.StrokeColor = 'rgba(' + polyLineAnnot.color[0] + ',' + polyLineAnnot.color[1] + ',' + polyLineAnnot.color[2] + ',' + (polyLineAnnot.color[3] ? polyLineAnnot.color[3] : 1) + ')';\n        var fillOpacity = polyLineAnnot.color[3] ? polyLineAnnot.color[3] : 1;\n        if (polyLineAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(polyLineAnnot._dictionary.get('FillOpacity'))) {\n            fillOpacity = parseInt(polyLineAnnot._dictionary.get('FillOpacity').toString(), 10);\n        }\n        fillOpacity = polyLineAnnot.innerColor ? fillOpacity : 0;\n        polyLineAnnot.innerColor = polyLineAnnot.innerColor ? polyLineAnnot.innerColor : [255, 255, 255];\n        shapeAnnotation.FillColor = 'rgba(' + polyLineAnnot.innerColor[0] + ',' + polyLineAnnot.innerColor[1] + ',' + polyLineAnnot.innerColor[2] + ',' + fillOpacity + ')';\n        shapeAnnotation.LineHeadStart = this.getLineEndingStyleString(polyLineAnnot.beginLineStyle);\n        shapeAnnotation.LineHeadEnd = this.getLineEndingStyleString(polyLineAnnot.endLineStyle);\n        shapeAnnotation.EnableShapeLabel = false;\n        if (shapeFreeText != null) {\n            shapeAnnotation.EnableShapeLabel = true;\n            shapeAnnotation.LabelContent = shapeFreeText.text;\n            shapeAnnotation.LabelFillColor = 'rgba(' + shapeFreeText.color[0] + ',' + shapeFreeText.color[1] + ',' + shapeFreeText.color[2] + ',' + (shapeFreeText.color[3] ? shapeFreeText.color[3] : 1) + ')';\n            shapeAnnotation.FontColor = 'rgba(' + shapeFreeText.textMarkUpColor[0] + ',' + shapeFreeText.textMarkUpColor[1] + ',' + shapeFreeText.textMarkUpColor[2] + ',' + (shapeFreeText.textMarkUpColor[3] ? shapeFreeText.textMarkUpColor[3] : 1) + ')';\n            shapeAnnotation.LabelBorderColor = 'rgba(' + shapeFreeText.borderColor[0] + ',' + shapeFreeText.borderColor[1] + ',' + shapeFreeText.borderColor[2] + ',' + (shapeFreeText.borderColor[3] ? shapeFreeText.borderColor[3] : 1) + ')';\n            shapeAnnotation.FontSize = shapeFreeText.font.size;\n        }\n        if (!isNullOrUndefined(polyLineAnnot._borderEffect)) {\n            if (polyLineAnnot._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                shapeAnnotation.IsCloudShape = true;\n                shapeAnnotation.CloudIntensity = polyLineAnnot._borderEffect.intensity;\n            }\n            else {\n                shapeAnnotation.IsCloudShape = false;\n                shapeAnnotation.CloudIntensity = 0;\n            }\n        }\n        else {\n            shapeAnnotation.IsCloudShape = false;\n            shapeAnnotation.CloudIntensity = 0;\n        }\n        if (polyLineAnnot._dictionary.has('RD') && !isNullOrUndefined(polyLineAnnot._dictionary.get('RD'))) {\n            shapeAnnotation.RectangleDifference = polyLineAnnot._dictionary.get('RD');\n        }\n        else {\n            shapeAnnotation.RectangleDifference = new Array();\n        }\n        if (polyLineAnnot.flags === PdfAnnotationFlag.locked) {\n            shapeAnnotation.IsLocked = true;\n        }\n        else {\n            shapeAnnotation.IsLocked = false;\n        }\n        if (polyLineAnnot.flags === PdfAnnotationFlag.readOnly) {\n            shapeAnnotation.IsCommentLock = true;\n        }\n        else {\n            shapeAnnotation.IsCommentLock = false;\n        }\n        if (polyLineAnnot._annotFlags.toString().includes('Print')) {\n            shapeAnnotation.IsPrint = true;\n        }\n        if (polyLineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polyLineAnnot._dictionary.get('CustomData'))) {\n            var customData = polyLineAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                shapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        if (polyLineAnnot._dictionary.has('AllowedInteractions')) {\n            var allowedInteractions = polyLineAnnot.getValues('AllowedInteractions');\n            var text = allowedInteractions[0];\n            shapeAnnotation.AllowedInteractions = JSON.parse(text);\n        }\n        if (polyLineAnnot._dictionary.has('Measure')) {\n            shapeAnnotation.FillColor = 'rgba(' + polyLineAnnot.innerColor[0] + ',' + polyLineAnnot.innerColor[1] + ',' + polyLineAnnot.innerColor[2] + ',' + fillOpacity + ')';\n            var measureShapeAnnotation = new MeasureShapeAnnotationBase(shapeAnnotation);\n            measureShapeAnnotation.Calibrate = this.getMeasureObject(polyLineAnnot);\n            if (polyLineAnnot._dictionary.has('IT')) {\n                measureShapeAnnotation.Indent = polyLineAnnot._dictionary.get('IT').name;\n            }\n            else {\n                measureShapeAnnotation.Indent = 'PolyLineDimension';\n            }\n            measureShapeAnnotation.Caption = false;\n            measureShapeAnnotation.LeaderLength = 0;\n            measureShapeAnnotation.LeaderLineExtension = 0;\n            measureShapeAnnotation.LeaderLineOffset = 0;\n            measureShapeAnnotation.CaptionPosition = '';\n            if (polyLineAnnot.flags === PdfAnnotationFlag.readOnly) {\n                measureShapeAnnotation.IsCommentLock = true;\n            }\n            else {\n                measureShapeAnnotation.IsCommentLock = false;\n            }\n            if (polyLineAnnot.flags === PdfAnnotationFlag.print) {\n                measureShapeAnnotation.IsPrint = true;\n            }\n            if (polyLineAnnot._dictionary.has('CustomData') && !isNullOrUndefined(polyLineAnnot._dictionary.get('CustomData'))) {\n                var customData = polyLineAnnot._dictionary.get('CustomData');\n                if (customData != null) {\n                    measureShapeAnnotation.ExistingCustomData = JSON.stringify(customData);\n                }\n            }\n            return measureShapeAnnotation;\n        }\n        else {\n            return shapeAnnotation;\n        }\n    };\n    /**\n     * @private\n     * @param annotation\n     * @param pageNumber\n     * @returns\n     */\n    AnnotationRenderer.prototype.loadSignatureImage = function (annotation, pageNumber) {\n        var stampAnnotation = annotation;\n        var formsFields = new SignatureAnnotationBase();\n        formsFields.SignatureName = stampAnnotation.name;\n        var dictionary = annotation._dictionary.get('AP');\n        if (dictionary === null) {\n            var pdfReference = annotation._dictionary.get('AP');\n            if (pdfReference !== null && pdfReference.Object !== null) {\n                dictionary = pdfReference.Object;\n            }\n        }\n        if (dictionary !== null && dictionary.has('N')) {\n            this.m_renderer.findStampImage(annotation);\n        }\n        formsFields.Bounds = new Rect(stampAnnotation.bounds.x, stampAnnotation.bounds.y, stampAnnotation.bounds.width, stampAnnotation.bounds.height);\n        formsFields.PathData = this.m_renderer.imageData;\n        formsFields.AnnotationType = \"SignatureImage\";\n        formsFields.PageNumber = pageNumber;\n        formsFields.Opacity = stampAnnotation.opacity;\n        formsFields.StrokeColor = 'rgba(' + stampAnnotation.color + ',' + stampAnnotation.color[1] + ',' + stampAnnotation.color[2] + ',' + (stampAnnotation.color[3] ? stampAnnotation.color[3] : 1) + ')';\n        return formsFields;\n    };\n    AnnotationRenderer.prototype.getMeasureObject = function (annotation) {\n        var measureObject = new Measure();\n        var measureDictionary;\n        if (annotation._dictionary.has('Measure')) {\n            measureDictionary = annotation._dictionary.get('Measure');\n        }\n        if (measureDictionary.has('R')) {\n            measureObject.Ratio = measureDictionary.get('R');\n        }\n        else {\n            return null;\n        }\n        var xList;\n        if (measureDictionary.has('X')) {\n            xList = this.getMeasureValues(measureDictionary.getArray('X'));\n        }\n        measureObject.X = xList;\n        var distanceList;\n        if (measureDictionary.has('D')) {\n            distanceList = this.getMeasureValues(measureDictionary.getArray('D'));\n        }\n        measureObject.Distance = distanceList;\n        var areaList;\n        if (measureDictionary.has('A')) {\n            areaList = this.getMeasureValues(measureDictionary.getArray('A'));\n        }\n        measureObject.Area = areaList;\n        var angleList;\n        if (measureDictionary.has('T')) {\n            angleList = this.getMeasureValues(measureDictionary.getArray('T'));\n        }\n        measureObject.Angle = angleList;\n        var volumeList;\n        if (measureDictionary.has('V')) {\n            volumeList = this.getMeasureValues(measureDictionary.getArray('V'));\n        }\n        measureObject.Volume = volumeList;\n        if (!isNullOrUndefined(measureDictionary) && measureDictionary.has('TargetUnitConversion')) {\n            measureObject.TargetUnitConversion = measureDictionary.get('TargetUnitConversion').FloatValue;\n        }\n        else {\n            measureObject.TargetUnitConversion = 0;\n        }\n        return measureObject;\n    };\n    AnnotationRenderer.prototype.getMeasureValues = function (arrayValues) {\n        var measureValuesArray = new Array();\n        if (!isNullOrUndefined(arrayValues)) {\n            for (var index = 0; index < arrayValues.length; index++) {\n                var measureFormat = arrayValues[parseInt(index.toString(), 10)];\n                var measureValue = new NumberFormat();\n                if (!isNullOrUndefined(measureFormat)) {\n                    if (measureFormat.has('D') && !isNullOrUndefined(measureFormat.get('D'))) {\n                        measureValue.Denominator = measureFormat.get('D');\n                    }\n                    if (measureFormat.has('C') && !isNullOrUndefined(measureFormat.get('C'))) {\n                        measureValue.ConversionFactor = measureFormat.get('C');\n                    }\n                    if (measureFormat.has('F') && !isNullOrUndefined(measureFormat.get('F'))) {\n                        measureValue.FractionalType = measureFormat.get('F');\n                    }\n                    if (measureFormat.has('FD') && !isNullOrUndefined(measureFormat.get('FD'))) {\n                        measureValue.FormatDenominator = measureFormat.get('FD');\n                    }\n                    if (measureFormat.has('U') && !isNullOrUndefined(measureFormat.get('U'))) {\n                        measureValue.Unit = measureFormat.get('U');\n                    }\n                }\n                measureValuesArray.push(measureValue);\n            }\n        }\n        return measureValuesArray;\n    };\n    AnnotationRenderer.prototype.getVertexPoints = function (vertices, pageWidth, pageHeight, pageRotation, page) {\n        var vertexPoints = [];\n        var cropBox = this.getBothCropBoxValue(page);\n        var cropBoxX = 0;\n        var cropBoxY = 0;\n        if (!(cropBox[0] == 0 && page.cropBox[2] == page.size[2] && cropBox[1] == page.size[3])) {\n            cropBoxX = cropBox[0];\n            cropBoxY = cropBox[1];\n        }\n        if (pageRotation == 0) {\n            for (var i = 0; i < vertices.length; i++) {\n                var point = { X: this.convertPointToPixel(vertices[parseInt(i.toString(), 10)]) - this.convertPointToPixel(cropBoxX), Y: (pageHeight - this.convertPointToPixel(vertices[i + 1])) + this.convertPointToPixel(cropBoxY) };\n                i = i + 1;\n                vertexPoints.push(point);\n            }\n        }\n        else if (pageRotation == 1) {\n            for (var i = 0; i < vertices.length; i++) {\n                var point = { X: this.convertPointToPixel(vertices[i + 1]), Y: this.convertPointToPixel(vertices[parseInt(i.toString(), 10)]) };\n                i = i + 1;\n                vertexPoints.push(point);\n            }\n        }\n        else if (pageRotation == 2) {\n            for (var i = 0; i < vertices.length; i++) {\n                var point = { X: pageWidth - this.convertPointToPixel(vertices[parseInt(i.toString(), 10)]), Y: pageHeight - this.convertPointToPixel(vertices[i + 1]) };\n                i = i + 1;\n                vertexPoints.push(point);\n            }\n        }\n        else if (pageRotation == 3) {\n            for (var i = 0; i < vertices.length; i++) {\n                var point = { X: pageWidth - this.convertPointToPixel(vertices[i + 1]), Y: pageHeight - this.convertPointToPixel(vertices[parseInt(i.toString(), 10)]) };\n                i = i + 1;\n                vertexPoints.push(point);\n            }\n        }\n        return vertexPoints;\n    };\n    AnnotationRenderer.prototype.getLineIndentString = function (lineIntent) {\n        switch (lineIntent) {\n            case PdfLineIntent.lineArrow:\n                return 'LineArrow';\n            case PdfLineIntent.lineDimension:\n                return 'LineDimension';\n        }\n    };\n    AnnotationRenderer.prototype.getLineEndingStyleString = function (lineEndingStyle) {\n        switch (lineEndingStyle) {\n            case PdfLineEndingStyle.none:\n                return 'None';\n            case PdfLineEndingStyle.butt:\n                return 'Butt';\n            case PdfLineEndingStyle.circle:\n                return 'Circle';\n            case PdfLineEndingStyle.closedArrow:\n                return 'ClosedArrow';\n            case PdfLineEndingStyle.diamond:\n                return 'Diamond';\n            case PdfLineEndingStyle.openArrow:\n                return 'OpenArrow';\n            case PdfLineEndingStyle.rClosedArrow:\n                return 'RClosedArrow';\n            case PdfLineEndingStyle.rOpenArrow:\n                return 'ROpenArrow';\n            case PdfLineEndingStyle.slash:\n                return 'Slash';\n            case PdfLineEndingStyle.square:\n                return 'Square';\n        }\n    };\n    AnnotationRenderer.prototype.getBorderStylesString = function (borderStyle) {\n        switch (borderStyle) {\n            case PdfBorderStyle.solid:\n                return 'Solid';\n            case PdfBorderStyle.dashed:\n                return 'Dashed';\n            case PdfBorderStyle.beveled:\n                return 'Beveled';\n            case PdfBorderStyle.inset:\n                return 'Inset';\n            case PdfBorderStyle.underline:\n                return 'Underline';\n            case PdfBorderStyle.dot:\n                return 'Dot';\n            default:\n                return 'None';\n        }\n    };\n    AnnotationRenderer.prototype.getBorderStyle = function (borderStyle) {\n        var style = PdfBorderStyle.solid;\n        switch (borderStyle) {\n            case 'Solid':\n                style = PdfBorderStyle.solid;\n                break;\n            case 'Dashed':\n                style = PdfBorderStyle.dashed;\n                break;\n            case 'Beveled':\n                style = PdfBorderStyle.beveled;\n                break;\n            case 'Inset':\n                style = PdfBorderStyle.inset;\n                break;\n            case 'Underline':\n                style = PdfBorderStyle.underline;\n                break;\n            case 'Dot':\n                style = PdfBorderStyle.dot;\n                break;\n        }\n        return style;\n    };\n    AnnotationRenderer.prototype.getRotateAngleString = function (angle) {\n        switch (angle) {\n            case PdfRotationAngle.angle0:\n                return 'RotateAngle0';\n            case PdfRotationAngle.angle90:\n                return 'RotateAngle90';\n            case PdfRotationAngle.angle180:\n                return 'RotateAngle180';\n            case PdfRotationAngle.angle270:\n                return 'RotateAngle270';\n            default:\n                return 'RotateAngle0';\n        }\n    };\n    AnnotationRenderer.prototype.getValidNoteContent = function (note) {\n        if (isNullOrUndefined(note) || note === '' || note === ' ') {\n            return '';\n        }\n        return note;\n    };\n    AnnotationRenderer.prototype.getBounds = function (bounds, pageWidth, pageHeight, pageRotation) {\n        var bound;\n        if (pageRotation === 0) {\n            // eslint-disable-next-line max-len\n            bound = new AnnotBounds(this.convertPointToPixel(bounds.x), this.convertPointToPixel(bounds.y), this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height));\n        }\n        else if (pageRotation === 1) {\n            // eslint-disable-next-line max-len\n            bound = new AnnotBounds(pageWidth - this.convertPointToPixel(bounds.y) - this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.x), this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width));\n        }\n        else if (pageRotation === 2) {\n            // eslint-disable-next-line max-len\n            bound = new AnnotBounds(pageWidth - this.convertPointToPixel(bounds.x) - this.convertPointToPixel(bounds.width), pageHeight - this.convertPointToPixel(bounds.y) - this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height));\n        }\n        else if (pageRotation === 3) {\n            // eslint-disable-next-line max-len\n            bound = new AnnotBounds(this.convertPointToPixel(bounds.y), pageHeight - this.convertPointToPixel(bounds.x) - this.convertPointToPixel(bounds.width), this.convertPointToPixel(bounds.height), this.convertPointToPixel(bounds.width));\n        }\n        return bound;\n    };\n    /**\n     * @private\n     * @param popupAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @returns\n     */\n    AnnotationRenderer.prototype.loadPopupAnnotation = function (popupAnnot, height, width, pageRotation) {\n        var popupAnnotation = new PopupAnnotationBase();\n        popupAnnotation.Author = popupAnnot.author;\n        popupAnnotation.Subject = popupAnnot.subject;\n        if (popupAnnot._dictionary.has('Subtype') && !isNullOrUndefined(popupAnnot._dictionary.get('Subtype')) && !isNullOrUndefined(popupAnnot._dictionary.get('Subtype').name)) {\n            popupAnnotation.SubType = popupAnnot._dictionary.get('Subtype').name.toString();\n        }\n        if (popupAnnot._dictionary.has('Type') && !isNullOrUndefined(popupAnnot._dictionary.get('Type')) && !isNullOrUndefined(popupAnnot._dictionary.get('Type').name)) {\n            popupAnnotation.Type = popupAnnot._dictionary.get('Type').name.toString();\n        }\n        if (popupAnnot._dictionary.has('IRT') && !isNullOrUndefined(popupAnnot._dictionary.get('IRT'))) {\n            var reference = popupAnnot._dictionary.get('IRT');\n            if (reference != null) {\n                popupAnnotation.Reference = reference.Reference;\n            }\n        }\n        popupAnnotation.AnnotName = popupAnnot.name;\n        if (!isNullOrUndefined(popupAnnot.modifiedDate)) {\n            popupAnnotation.ModifiedDate = this.formatDate(popupAnnot.modifiedDate);\n        }\n        else {\n            popupAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        popupAnnotation.Note = popupAnnot.text;\n        if (popupAnnot.flags === PdfAnnotationFlag.locked) {\n            popupAnnotation.IsLock = true;\n        }\n        else {\n            popupAnnotation.IsLock = false;\n        }\n        if (popupAnnot.flags === PdfAnnotationFlag.readOnly) {\n            popupAnnotation.IsCommentLock = true;\n        }\n        else {\n            popupAnnotation.IsCommentLock = false;\n        }\n        popupAnnotation.Icon = this.getPopupIconString(popupAnnot.icon);\n        popupAnnotation.State = this.getStateString(popupAnnot.state);\n        popupAnnotation.StateModel = this.getStateModelString(popupAnnot.stateModel);\n        popupAnnotation.Size = new SizeBase(popupAnnot.bounds.width, popupAnnot.bounds.height);\n        popupAnnot.color = popupAnnot.color ? popupAnnot.color : [0, 0, 0];\n        popupAnnotation.Color = new AnnotColor(popupAnnot.color[0], popupAnnot.color[1], popupAnnot.color[2]);\n        popupAnnotation.Opacity = popupAnnot.opacity;\n        popupAnnotation.AnnotType = 'sticky';\n        popupAnnotation.StrokeColor = 'rgba(' + popupAnnotation.Color.R + ',' + popupAnnotation.Color.G + ',' + popupAnnotation.Color.B + ',' + 1 + ')';\n        popupAnnotation.Bounds = this.getBounds(popupAnnot.bounds, height, width, pageRotation);\n        for (var i = 0; i < popupAnnot.reviewHistory.count; i++) {\n            popupAnnotation.State = this.getStateString(popupAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            popupAnnotation.StateModel = this.getStateModelString(popupAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        if (isNullOrUndefined(popupAnnotation.State) || popupAnnotation.State === 'None' || isNullOrUndefined(popupAnnotation.StateModel)) {\n            popupAnnotation.State = 'Unmarked';\n            popupAnnotation.StateModel = 'None';\n        }\n        popupAnnotation.Comments = new Array();\n        if (popupAnnot._dictionary.has('CustomData') && !isNullOrUndefined(popupAnnot._dictionary.get('CustomData'))) {\n            var customData = popupAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                popupAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        for (var i = 0; i < popupAnnot.comments.count; i++) {\n            popupAnnotation.Comments.push(this.loadPopupAnnotation(popupAnnot.comments.at(i), height, width, pageRotation));\n        }\n        return popupAnnotation;\n    };\n    /**\n     * @param freeTextAnnot\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @param page\n     * @private\n     */\n    AnnotationRenderer.prototype.loadFreeTextAnnotation = function (freeTextAnnot, height, width, pageRotation, page) {\n        var freeTextAnnotation = new FreeTextAnnotationBase();\n        freeTextAnnotation.AnnotationIntent = this.getAnnotationIntentString(freeTextAnnot.annotationIntent); // returns wrong value\n        freeTextAnnotation.AnnotationFlags = this.getAnnotationFlagsString(freeTextAnnot.flags);\n        freeTextAnnotation.Author = freeTextAnnot.author;\n        freeTextAnnotation.AnnotName = freeTextAnnot.name;\n        if (isNullOrUndefined(freeTextAnnotation.AnnotName) || freeTextAnnotation.AnnotName === '') {\n            freeTextAnnotation.AnnotName = Math.abs(Math.random()).toString(36).substring(2);\n        }\n        freeTextAnnotation.AnnotType = 'Text Box';\n        freeTextAnnotation.FreeTextAnnotationType = 'Text Box';\n        freeTextAnnotation.BorderColor = new AnnotColor(freeTextAnnot.borderColor[0], freeTextAnnot.borderColor[1], freeTextAnnot.borderColor[2]);\n        var points = [{ X: 100, Y: 400 }, { X: 200, Y: 400 }];\n        freeTextAnnotation.CalloutLines = points;\n        var backgroundColor = freeTextAnnot.color ? freeTextAnnot.color : [0, 0, 0];\n        freeTextAnnotation.Color = new AnnotColor(backgroundColor[0], backgroundColor[1], backgroundColor[2]);\n        freeTextAnnotation.Flatten = freeTextAnnot.flatten;\n        freeTextAnnotation.FlattenPopups = !isNullOrUndefined(freeTextAnnot.flattenPopups) ? freeTextAnnot.flattenPopups : false; // returns undefined\n        freeTextAnnotation.FontFamily = this.getFontFamilyString(freeTextAnnot.font._fontFamily);\n        freeTextAnnotation.FontSize = this.convertPointToPixel(freeTextAnnot.font.size);\n        freeTextAnnotation.Font = new FontBase(freeTextAnnot.font, freeTextAnnotation.FontFamily); // need to be checked\n        freeTextAnnotation.Thickness = freeTextAnnot.border.width;\n        freeTextAnnotation.StrokeColor = 'rgba(' + freeTextAnnot.borderColor[0] + ',' + freeTextAnnot.borderColor[1] + ',' + freeTextAnnot.borderColor[2] + ',' + (freeTextAnnot.borderColor[3] ? freeTextAnnot.borderColor[3] : 1) + ')';\n        var fillOpacity;\n        if (freeTextAnnot._dictionary.has('FillOpacity') && !isNullOrUndefined(freeTextAnnot._dictionary.get('FillOpacity'))) {\n            fillOpacity = parseInt(freeTextAnnot._dictionary.get('FillOpacity').toString(), 10);\n        }\n        fillOpacity = freeTextAnnot.color ? (!isNullOrUndefined(fillOpacity) ? fillOpacity : 0) : 0;\n        freeTextAnnotation.FillColor = 'rgba(' + backgroundColor[0] + ',' + backgroundColor[1] + ',' + backgroundColor[2] + ',' + fillOpacity + ')';\n        freeTextAnnotation.Layer = freeTextAnnot._dictionary.has('Layer') ? freeTextAnnot._dictionary.get('Layer') : null;\n        // freeTextAnnotation.Location = freeTextAnnot._dictionary.has('Location') ? freeTextAnnot._dictionary.get('Location') : JSON.stringify({X: freeTextAnnot.bounds.x ,Y: freeTextAnnot.bounds.y});\n        freeTextAnnotation.Location = freeTextAnnot._dictionary.has('Location') ? freeTextAnnot._dictionary.get('Location') : '{X=' + freeTextAnnot.bounds.x + ',Y=' + freeTextAnnot.bounds.y + '}';\n        freeTextAnnotation.MarkupText = freeTextAnnot.text;\n        if (!isNullOrUndefined(freeTextAnnot.modifiedDate)) {\n            freeTextAnnotation.ModifiedDate = this.formatDate(freeTextAnnot.modifiedDate);\n        }\n        else {\n            freeTextAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        freeTextAnnotation.Name = \"freeText\";\n        freeTextAnnotation.Opacity = freeTextAnnot.opacity;\n        if (freeTextAnnot._dictionary.has('Rotation') && !isNullOrUndefined(freeTextAnnot._dictionary.get('Rotation'))) {\n            freeTextAnnotation.Rotate = parseInt(freeTextAnnot._dictionary.get('Rotation'));\n        }\n        if (freeTextAnnot._dictionary.has('Rotate') && !isNullOrUndefined(freeTextAnnot._dictionary.get('Rotate'))) {\n            freeTextAnnotation.Rotate = parseInt(freeTextAnnot._dictionary.get('Rotate'));\n        }\n        if (!isNullOrUndefined(freeTextAnnot.subject)) {\n            freeTextAnnotation.Subject = freeTextAnnot.subject;\n        }\n        else {\n            freeTextAnnotation.Subject = 'Text Box';\n        }\n        freeTextAnnotation.Text = freeTextAnnot.text;\n        freeTextAnnotation.MarkupText = freeTextAnnot.text;\n        freeTextAnnotation.TextAlign = this.getTextAlignmentString(freeTextAnnot.textAlignment);\n        if (isNullOrUndefined(freeTextAnnotation.State) || freeTextAnnotation.State === 'None' || isNullOrUndefined(freeTextAnnotation.StateModel)) {\n            freeTextAnnotation.State = 'Unmarked';\n            freeTextAnnotation.StateModel = 'None';\n        }\n        freeTextAnnotation.FontColor = !isNullOrUndefined(freeTextAnnot.textMarkUpColor) ? 'rgba(' + freeTextAnnot.textMarkUpColor[0] + ',' + freeTextAnnot.textMarkUpColor[1] + ',' + freeTextAnnot.textMarkUpColor[2] + ',' + (freeTextAnnot.textMarkUpColor[3] ? freeTextAnnot.textMarkUpColor[3] : 1) + ')' : 'rgba(0, 0, 0, 1)';\n        for (var i = 0; i < freeTextAnnot.reviewHistory.count; i++) {\n            freeTextAnnotation.State = this.getStateString(freeTextAnnot.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            freeTextAnnotation.StateModel = this.getStateModelString(freeTextAnnot.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        freeTextAnnotation.Comments = new Array();\n        for (var i = 0; i < freeTextAnnot.comments.count; i++) {\n            var annot = this.loadPopupAnnotation(freeTextAnnot.comments.at(i), height, width, pageRotation);\n            freeTextAnnotation.Comments.push(annot);\n        }\n        freeTextAnnotation.Bounds = this.getBounds(freeTextAnnot.bounds, height, width, pageRotation);\n        if (freeTextAnnotation.Bounds.Y < 0) {\n            var cropRect = { x: freeTextAnnot.bounds.x, y: page.cropBox[1] + freeTextAnnot.bounds.y, width: freeTextAnnot.bounds.width, height: freeTextAnnot.bounds.height };\n            freeTextAnnotation.Bounds = this.getBounds(cropRect, height, width, pageRotation);\n        }\n        freeTextAnnotation.PageRotation = pageRotation;\n        if (freeTextAnnot.flags === PdfAnnotationFlag.readOnly) {\n            freeTextAnnotation.IsCommentLock = true;\n            freeTextAnnotation.IsReadonly = true;\n        }\n        else {\n            freeTextAnnotation.IsCommentLock = false;\n        }\n        if (freeTextAnnot.flags === PdfAnnotationFlag.print) {\n            freeTextAnnotation.IsPrint = true;\n        }\n        if (freeTextAnnot.flags === PdfAnnotationFlag.locked) {\n            freeTextAnnotation.IsLocked = true;\n        }\n        else {\n            freeTextAnnotation.IsLocked = false;\n        }\n        if (freeTextAnnot._dictionary.has('CustomData') && !isNullOrUndefined(freeTextAnnot._dictionary.get('CustomData'))) {\n            var customData = freeTextAnnot._dictionary.get('CustomData');\n            if (customData != null) {\n                freeTextAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        if (freeTextAnnot._dictionary.has('AllowedInteractions')) {\n            var allowedInteractions = freeTextAnnot.getValues('AllowedInteractions');\n            var text = allowedInteractions[0];\n            freeTextAnnotation.AllowedInteractions = JSON.parse(text);\n        }\n        return freeTextAnnotation;\n    };\n    AnnotationRenderer.prototype.getTextAlignmentString = function (textAlignment) {\n        switch (textAlignment) {\n            case PdfTextAlignment.left:\n                return 'Left';\n            case PdfTextAlignment.right:\n                return 'Right';\n            case PdfTextAlignment.center:\n                return 'Center';\n            case PdfTextAlignment.justify:\n                return 'Justify';\n            default:\n                return 'Left';\n        }\n    };\n    /**\n     *\n     * @private\n     */\n    AnnotationRenderer.prototype.loadSignatureText = function (inkAnnot, pageNumber, height, width, pageRotation) {\n        var formFields = new SignatureAnnotationBase();\n        formFields.SignatureName = inkAnnot.name;\n        formFields.Bounds = this.getBounds(inkAnnot.bounds, width, height, pageRotation);\n        formFields.AnnotationType = \"SignatureText\";\n        formFields.FontFamily = this.getFontFamilyString(inkAnnot.font._fontFamily);\n        formFields.FontSize = this.convertPointToPixel(inkAnnot.font.size);\n        formFields.PathData = inkAnnot.text;\n        formFields.PageNumber = pageNumber;\n        formFields.StrokeColor = 'rgba(' + inkAnnot.textMarkUpColor[0] + ',' + inkAnnot.textMarkUpColor[1] + ',' + inkAnnot.textMarkUpColor[2] + ',' + (inkAnnot.textMarkUpColor[3] ? inkAnnot.textMarkUpColor[3] : 1) + ')';\n        formFields.Opacity = inkAnnot.opacity;\n        formFields.Thickness = 1;\n        return formFields;\n    };\n    AnnotationRenderer.prototype.getFontFamilyString = function (fontFamily) {\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                return 'Helvetica';\n            case PdfFontFamily.timesRoman:\n                return 'TimesRoman';\n            case PdfFontFamily.courier:\n                return 'Courier';\n            case PdfFontFamily.symbol:\n                return 'Symbol';\n            case PdfFontFamily.zapfDingbats:\n                return 'ZapfDingbats';\n            default:\n                return 'Helvetica';\n        }\n    };\n    AnnotationRenderer.prototype.getAnnotationFlagsString = function (flags) {\n        switch (flags) {\n            case PdfAnnotationFlag.default:\n                return 'Default';\n            case PdfAnnotationFlag.invisible:\n                return 'Invisible';\n            case PdfAnnotationFlag.hidden:\n                return 'Hidden';\n            case PdfAnnotationFlag.print:\n                return 'Print';\n            case PdfAnnotationFlag.noZoom:\n                return 'NoZoom';\n            case PdfAnnotationFlag.noRotate:\n                return 'NoRotate';\n            case PdfAnnotationFlag.noView:\n                return 'NoView';\n            case PdfAnnotationFlag.readOnly:\n                return 'ReadOnly';\n            case PdfAnnotationFlag.locked:\n                return 'Locked';\n            case PdfAnnotationFlag.toggleNoView:\n                return 'ToggleNoView';\n            default:\n                return 'Default';\n        }\n    };\n    AnnotationRenderer.prototype.getAnnotationIntentString = function (annotationIntent) {\n        switch (annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                return 'FreeTextCallout';\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                return 'FreeTextTypeWriter';\n            case PdfAnnotationIntent.none:\n                return 'None';\n        }\n    };\n    AnnotationRenderer.prototype.getStateString = function (state) {\n        switch (state) {\n            case PdfAnnotationState.accepted:\n                return 'Accepted';\n            case PdfAnnotationState.rejected:\n                return 'Rejected';\n            case PdfAnnotationState.cancel:\n                return 'Cancelled';\n            case PdfAnnotationState.completed:\n                return 'Completed';\n            case PdfAnnotationState.none:\n                return 'None';\n            case PdfAnnotationState.unmarked:\n                return 'Unmarked';\n            case PdfAnnotationState.marked:\n                return 'Marked';\n            case PdfAnnotationState.unknown:\n                return 'Unknown';\n            default:\n                return null;\n        }\n    };\n    AnnotationRenderer.prototype.getStateModelString = function (stateModel) {\n        switch (stateModel) {\n            case PdfAnnotationStateModel.review:\n                return 'Review';\n            case PdfAnnotationStateModel.marked:\n                return 'Marked';\n            case PdfAnnotationStateModel.none:\n                return 'None';\n            default:\n                return 'None';\n        }\n    };\n    AnnotationRenderer.prototype.getPopupIconString = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.comment:\n                return 'Comment';\n            case PdfPopupIcon.help:\n                return 'Help';\n            case PdfPopupIcon.insert:\n                return 'Insert';\n            case PdfPopupIcon.key:\n                return 'Key';\n            case PdfPopupIcon.newParagraph:\n                return 'NewParagraph';\n            case PdfPopupIcon.note:\n                return 'Note';\n            case PdfPopupIcon.paragraph:\n                return 'Paragraph';\n            default:\n                return null;\n        }\n    };\n    AnnotationRenderer.prototype.formatDate = function (date) {\n        var month = this.datePadding(date.getMonth() + 1); // Months are zero-based\n        var day = this.datePadding(date.getDate());\n        var year = date.getFullYear();\n        var hours = this.datePadding(date.getHours());\n        var minutes = this.datePadding(date.getMinutes());\n        var seconds = this.datePadding(date.getSeconds());\n        return month + \"/\" + day + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    };\n    // Pad the numbers with leading zeros if they are single digits\n    AnnotationRenderer.prototype.datePadding = function (number) {\n        return number < 10 ? ('0' + number) : number.toString();\n    };\n    /**\n     * @param loadedDocument\n     * @private\n     */\n    AnnotationRenderer.prototype.removeSignatureTypeAnnot = function (jsonObject, loadedDocument) {\n        if ((jsonObject.hasOwnProperty('isAnnotationsExist') &&\n            JSON.parse(jsonObject['isAnnotationsExist'])) ||\n            (jsonObject.hasOwnProperty('isFormFieldAnnotationsExist') &&\n                JSON.parse(jsonObject['isFormFieldAnnotationsExist']))) {\n            var annotationPageList = jsonObject.annotationsPageList ? jsonObject.annotationsPageList : [];\n            // var formFieldsPageList : any = jsonObject.formFieldsPageList ? (jsonObject.formFieldsPageList) : [] ;\n            if (annotationPageList.length != 0) {\n                var removeAnnotList = JSON.parse(annotationPageList);\n                for (var i = 0; i < removeAnnotList.length; i++) {\n                    var loadedPageNo = removeAnnotList[parseInt(i.toString(), 10)];\n                    // Removing annotations from the page.\n                    var page = loadedDocument.getPage(parseInt(loadedPageNo, 10));\n                    var oldPageAnnotations = page.annotations;\n                    var totalAnnotation = parseInt(oldPageAnnotations.count.toString(), 10);\n                    for (var m = totalAnnotation - 1; m >= 0; m--) {\n                        var annotation = oldPageAnnotations.at(m);\n                        if (annotation instanceof PdfFreeTextAnnotation ||\n                            annotation instanceof PdfInkAnnotation ||\n                            annotation instanceof PdfLineAnnotation ||\n                            annotation instanceof PdfRubberStampAnnotation ||\n                            annotation instanceof PdfTextMarkupAnnotation ||\n                            annotation instanceof PdfPopupAnnotation ||\n                            annotation instanceof PdfSquareAnnotation ||\n                            annotation instanceof PdfCircleAnnotation ||\n                            annotation instanceof PdfEllipseAnnotation ||\n                            annotation instanceof PdfPolygonAnnotation ||\n                            annotation instanceof PdfRectangleAnnotation ||\n                            annotation instanceof PdfPolyLineAnnotation) {\n                            oldPageAnnotations.remove(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param textMarkup\n     * @param height\n     * @param width\n     * @param pageRotation\n     * @private\n     */\n    // eslint-disable-next-line max-len\n    AnnotationRenderer.prototype.loadTextMarkupAnnotation = function (textMarkup, height, width, pageRotation, page) {\n        var markupAnnotation = new TextMarkupAnnotationBase();\n        markupAnnotation.TextMarkupAnnotationType = this.getMarkupAnnotTypeString(textMarkup.textMarkupType);\n        if (markupAnnotation.TextMarkupAnnotationType === 'StrikeOut') {\n            markupAnnotation.TextMarkupAnnotationType = 'Strikethrough';\n        }\n        markupAnnotation.Author = textMarkup.author;\n        markupAnnotation.Subject = textMarkup.subject;\n        markupAnnotation.AnnotName = textMarkup.name;\n        markupAnnotation.Note = textMarkup.text ? textMarkup.text : '';\n        // eslint-disable-next-line max-len\n        markupAnnotation.Rect = new RectangleBase(textMarkup.bounds.x, textMarkup.bounds.y, textMarkup.bounds.width + textMarkup.bounds.x, textMarkup.bounds.height + textMarkup.bounds.y);\n        markupAnnotation.Opacity = textMarkup.opacity;\n        // markupAnnotation.Color = 'rgba(' + textMarkup.color[0] + ',' + textMarkup.color[1] + ',' + textMarkup.color[2] + ',' + (textMarkup.color[3] ? textMarkup.color[3] : 1) + ')';\n        markupAnnotation.Color = '#' + (1 << 24 | textMarkup.color[0] << 16 | textMarkup.color[1] << 8 | textMarkup.color[2]).toString(16).slice(1);\n        if (!isNullOrUndefined(textMarkup.modifiedDate)) {\n            markupAnnotation.ModifiedDate = this.formatDate(textMarkup.modifiedDate);\n        }\n        else {\n            markupAnnotation.ModifiedDate = this.formatDate(new Date());\n        }\n        markupAnnotation.AnnotationRotation = textMarkup.rotationAngle;\n        var quadPoints = textMarkup._dictionary.has('QuadPoints') ? textMarkup._dictionary.get('QuadPoints') : [];\n        var bounds = this.getTextMarkupBounds(quadPoints, height, width, pageRotation, page);\n        markupAnnotation.Bounds = bounds;\n        markupAnnotation.AnnotType = 'textMarkup';\n        for (var i = 0; i < textMarkup.reviewHistory.count; i++) {\n            markupAnnotation.State = this.getStateString(textMarkup.reviewHistory.at(parseInt(i.toString(), 10)).state);\n            markupAnnotation.StateModel = this.getStateModelString(textMarkup.reviewHistory.at(parseInt(i.toString(), 10)).stateModel);\n        }\n        if (isNullOrUndefined(markupAnnotation.State) || isNullOrUndefined(markupAnnotation.StateModel)) {\n            markupAnnotation.State = 'Unmarked';\n            markupAnnotation.StateModel = 'None';\n        }\n        markupAnnotation.Comments = new Array();\n        for (var i = 0; i < textMarkup.comments.count; i++) {\n            var annot = this.loadPopupAnnotation(textMarkup.comments.at(i), height, width, pageRotation);\n            markupAnnotation.Comments.push(annot);\n        }\n        if (textMarkup.flags === PdfAnnotationFlag.readOnly) {\n            markupAnnotation.IsCommentLock = true;\n        }\n        else {\n            markupAnnotation.IsCommentLock = false;\n        }\n        if (textMarkup.flags === PdfAnnotationFlag.print) {\n            markupAnnotation.IsPrint = true;\n        }\n        if (textMarkup._dictionary.has('CustomData') && !isNullOrUndefined(textMarkup._dictionary.get('CustomData'))) {\n            var customData = textMarkup._dictionary.get('CustomData');\n            if (customData != null) {\n                markupAnnotation.ExistingCustomData = JSON.stringify(customData);\n            }\n        }\n        if (textMarkup._dictionary.has('AllowedInteractions')) {\n            var allowedInteractions = textMarkup.getValues('AllowedInteractions');\n            var text = allowedInteractions[0];\n            markupAnnotation.AllowedInteractions = JSON.parse(text);\n        }\n        if (textMarkup._dictionary.has('TextMarkupContent')) {\n            var textMarkupData = textMarkup.getValues('TextMarkupContent');\n            if (!isNullOrUndefined(textMarkupData)) {\n                markupAnnotation.TextMarkupContent = textMarkupData[0];\n            }\n        }\n        return markupAnnotation;\n    };\n    // eslint-disable-next-line max-len\n    AnnotationRenderer.prototype.getTextMarkupBounds = function (quadPoints, pageHeight, pageWidth, pageRotation, page) {\n        var x = 0;\n        var y = 0;\n        var width = 0;\n        var height = 0;\n        var annotationBoundList = [];\n        var cropValues = this.getCropBoxValue(page, false);\n        var cropX = 0;\n        var cropY = 0;\n        if (cropValues.x !== 0 && cropValues.y !== 0) {\n            cropX = cropValues.x;\n            cropY = cropValues.y;\n        }\n        if (!isNullOrUndefined(quadPoints)) {\n            for (var k = 0; k < quadPoints.length; k++) {\n                if (pageRotation === 0) {\n                    x = this.convertPointToPixel(parseInt(quadPoints[parseInt(k.toString(), 10)], 10) - cropX);\n                    y = pageHeight - this.convertPointToPixel(parseInt(quadPoints[k + 1], 10) + cropY);\n                    height = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n                    width = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n                }\n                else if (pageRotation === 1) {\n                    x = this.convertPointToPixel(parseInt(quadPoints[k + 5], 10));\n                    y = this.convertPointToPixel(parseInt(quadPoints[parseInt(k.toString(), 10)], 10));\n                    height = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n                    width = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n                }\n                else if (pageRotation === 2) {\n                    x = pageWidth - this.convertPointToPixel(parseInt(quadPoints[k + 2], 10));\n                    y = this.convertPointToPixel(parseInt(quadPoints[k + 5], 10));\n                    height = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n                    width = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n                }\n                else {\n                    x = pageWidth - this.convertPointToPixel(parseInt(quadPoints[k + 1], 10));\n                    y = pageHeight - this.convertPointToPixel(parseInt(quadPoints[k + 6], 10));\n                    height = this.convertPointToPixel(parseInt(quadPoints[k + 6], 10) - parseInt(quadPoints[k + 4], 10));\n                    width = this.convertPointToPixel(parseInt(quadPoints[k + 3], 10) - parseInt(quadPoints[k + 7], 10));\n                }\n                var bounds = new AnnotBounds(x, y, width, height);\n                k = k + 7;\n                annotationBoundList.push(bounds);\n            }\n        }\n        return annotationBoundList;\n    };\n    AnnotationRenderer.prototype.getMarkupAnnotTypeString = function (textMarkupType) {\n        var type = '';\n        switch (textMarkupType) {\n            case PdfTextMarkupAnnotationType.highlight:\n                type = 'Highlight';\n                break;\n            case PdfTextMarkupAnnotationType.strikeOut:\n                type = 'StrikeOut';\n                break;\n            case PdfTextMarkupAnnotationType.underline:\n                type = 'Underline';\n                break;\n            case PdfTextMarkupAnnotationType.squiggly:\n                type = 'Squiggly';\n                break;\n        }\n        return type;\n    };\n    return AnnotationRenderer;\n}());\nexport { AnnotationRenderer };\n/**\n *\n * @hidden\n */\nvar PointBase = /** @class */ (function () {\n    function PointBase(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return PointBase;\n}());\nexport { PointBase };\n/**\n *\n * @hidden\n */\nvar FreeTextAnnotationBase = /** @class */ (function () {\n    function FreeTextAnnotationBase() {\n        this.AnnotationSelectorSettings = null;\n        this.TextMarkupColor = null;\n        this.Color = null;\n        this.Font = null;\n        this.Border = null;\n        this.LineEndingStyle = null;\n        this.AnnotationFlags = null;\n        this.CalloutLines = null;\n        this.ModifiedDate = null;\n        this.Comments = null;\n        this.CreatedDate = null;\n        this.InnerColor = null;\n        this.Layer = null;\n        this.Page = null;\n        this.PageTags = null;\n        this.ReviewHistory = null;\n        this.Rotate = 0;\n        this.Note = null;\n        this.CustomData = null;\n        this.AnnotationSettings = null;\n        this.IsPrint = true;\n        this.IsReadonly = false;\n        this.ExistingCustomData = null;\n        this.Bounds = null;\n        this.PageRotation = 0;\n    }\n    return FreeTextAnnotationBase;\n}());\nexport { FreeTextAnnotationBase };\n/**\n *\n * @hidden\n */\nvar InkSignatureAnnotation = /** @class */ (function () {\n    function InkSignatureAnnotation() {\n        this.AnnotationType = null;\n        this.Bounds = null;\n        this.CustomData = null;\n        this.Opacity = 0;\n        this.StrokeColor = null;\n        this.Thickness = null;\n        this.PathData = null;\n        this.IsLocked = null;\n        this.IsCommentLock = null;\n        this.PageNumber = null;\n        this.AnnotName = null;\n        this.Author = null;\n        this.ModifiedDate = null;\n        this.Subject = null;\n        this.Note = null;\n        this.State = null;\n        this.StateModel = null;\n        this.AnnotationSelectorSettings = null;\n        this.AnnotationSettings = null;\n        this.AllowedInteractions = null;\n        this.Comments = null;\n        this.AnnotType = null;\n        this.IsPrint = null;\n        this.ExistingCustomData = null;\n    }\n    return InkSignatureAnnotation;\n}());\nexport { InkSignatureAnnotation };\n/**\n *\n * @hidden\n */\nvar ShapeAnnotationBase = /** @class */ (function () {\n    function ShapeAnnotationBase() {\n        this.LabelBounds = new AnnotBounds(0, 0, 0, 0);\n        this.LabelContent = null;\n        this.LabelFillColor = null;\n        this.LabelBorderColor = null;\n        this.LabelSettings = null;\n        this.FontColor = null;\n        this.FontSize = 0;\n        this.AnnotationSettings = null;\n        this.AnnotationSelectorSettings = null;\n        this.VertexPoints = null;\n        this.CustomData = null;\n        this.ExistingCustomData = null;\n        this.IsPrint = true;\n        this.AllowedInteractions = null;\n        this.AnnotationRotation = 0;\n    }\n    return ShapeAnnotationBase;\n}());\nexport { ShapeAnnotationBase };\n/**\n *\n * @hidden\n */\nvar MeasureShapeAnnotationBase = /** @class */ (function () {\n    function MeasureShapeAnnotationBase(shapeAnnotation) {\n        this.LabelBounds = new AnnotBounds(0, 0, 0, 0);\n        this.LabelContent = null;\n        this.LabelFillColor = null;\n        this.LabelBorderColor = null;\n        this.LabelSettings = null;\n        this.FontColor = null;\n        this.FontSize = 0;\n        this.AnnotationSettings = null;\n        this.AnnotationSelectorSettings = null;\n        this.VertexPoints = null;\n        this.CustomData = null;\n        this.ExistingCustomData = null;\n        this.IsPrint = true;\n        this.AllowedInteractions = null;\n        this.AnnotationRotation = 0;\n        this.Author = shapeAnnotation.Author;\n        this.AnnotationSelectorSettings = shapeAnnotation.AnnotationSelectorSettings;\n        this.BorderDashArray = shapeAnnotation.BorderDashArray;\n        this.BorderStyle = shapeAnnotation.BorderStyle;\n        this.Bounds = shapeAnnotation.Bounds;\n        this.CloudIntensity = shapeAnnotation.CloudIntensity;\n        this.FillColor = shapeAnnotation.FillColor;\n        this.IsCloudShape = shapeAnnotation.IsCloudShape;\n        this.IsLocked = shapeAnnotation.IsLocked;\n        this.LineHeadEnd = shapeAnnotation.LineHeadEnd;\n        this.LineHeadStart = shapeAnnotation.LineHeadStart;\n        this.ModifiedDate = shapeAnnotation.ModifiedDate;\n        this.Note = shapeAnnotation.Note;\n        this.Opacity = shapeAnnotation.Opacity;\n        this.RectangleDifference = shapeAnnotation.RectangleDifference;\n        this.RotateAngle = shapeAnnotation.RotateAngle;\n        this.ShapeAnnotationType = shapeAnnotation.ShapeAnnotationType;\n        this.StrokeColor = shapeAnnotation.StrokeColor;\n        this.Subject = shapeAnnotation.Subject;\n        this.Thickness = shapeAnnotation.Thickness;\n        this.VertexPoints = shapeAnnotation.VertexPoints;\n        this.AnnotName = shapeAnnotation.AnnotName;\n        this.Comments = shapeAnnotation.Comments;\n        this.State = shapeAnnotation.State;\n        this.StateModel = shapeAnnotation.StateModel;\n        this.AnnotType = 'shape_measure';\n        this.AnnotationSettings = shapeAnnotation.AnnotationSettings;\n        this.EnableShapeLabel = shapeAnnotation.EnableShapeLabel;\n        this.AllowedInteractions = shapeAnnotation.AllowedInteractions;\n        this.AnnotationRotation = shapeAnnotation.AnnotationRotation;\n        if (shapeAnnotation.EnableShapeLabel == true) {\n            this.LabelContent = shapeAnnotation.LabelContent;\n            this.LabelFillColor = shapeAnnotation.LabelFillColor;\n            this.FontColor = shapeAnnotation.FontColor;\n            this.LabelBorderColor = shapeAnnotation.LabelBorderColor;\n            this.FontSize = shapeAnnotation.FontSize;\n            this.LabelSettings = shapeAnnotation.LabelSettings;\n            this.LabelBounds = shapeAnnotation.LabelBounds;\n        }\n    }\n    return MeasureShapeAnnotationBase;\n}());\nexport { MeasureShapeAnnotationBase };\n/**\n *\n * @hidden\n */\nvar SignatureAnnotationBase = /** @class */ (function () {\n    function SignatureAnnotationBase() {\n        this.PathData = null;\n        this.ExistingCustomData = null;\n    }\n    return SignatureAnnotationBase;\n}());\nexport { SignatureAnnotationBase };\nvar Measure = /** @class */ (function () {\n    function Measure() {\n        this.Ratio = '';\n        this.X = [];\n        this.Distance = [];\n        this.Area = [];\n        this.Angle = [];\n        this.Volume = [];\n        this.TargetUnitConversion = 0;\n        this.Depth = 0;\n    }\n    return Measure;\n}());\nvar NumberFormat = /** @class */ (function () {\n    function NumberFormat() {\n        this.Unit = '';\n        this.ConversionFactor = 0;\n        this.FractionalType = '';\n        this.Denominator = 0;\n        this.FormatDenominator = false;\n    }\n    return NumberFormat;\n}());\n/**\n *\n * @hidden\n */\nvar PopupAnnotationBase = /** @class */ (function () {\n    function PopupAnnotationBase() {\n        this.AnnotationFlags = null;\n        this.AnnotationSelectorSettings = null;\n        this.AnnotationSettings = null;\n        this.ExistingCustomData = null;\n        this.CustomData = null;\n        this.IsPrint = false;\n    }\n    return PopupAnnotationBase;\n}());\nexport { PopupAnnotationBase };\n/**\n *\n * @hidden\n */\nvar TextMarkupAnnotationBase = /** @class */ (function () {\n    function TextMarkupAnnotationBase() {\n        this.AnnotationSelectorSettings = null;\n        this.AnnotationSettings = null;\n        this.ExistingCustomData = null;\n        this.CustomData = null;\n        this.IsPrint = true;\n        this.IsMultiSelect = false;\n        this.AnnotpageNumbers = null;\n        this.AnnotNameCollection = null;\n    }\n    return TextMarkupAnnotationBase;\n}());\nexport { TextMarkupAnnotationBase };\n/**\n *\n * @hidden\n */\nvar PdfLayer = /** @class */ (function () {\n    function PdfLayer() {\n    }\n    return PdfLayer;\n}());\nexport { PdfLayer };\n/**\n *\n * @hidden\n */\nvar AnnotPoint = /** @class */ (function () {\n    function AnnotPoint(_X, _Y) {\n        this.X = _X;\n        this.Y = _Y;\n    }\n    return AnnotPoint;\n}());\nexport { AnnotPoint };\n/**\n *\n * @hidden\n */\nvar AnnotBounds = /** @class */ (function () {\n    function AnnotBounds(_X, _Y, _Width, _Height) {\n        this.X = _X;\n        this.Y = _Y;\n        this.Width = _Width;\n        this.Height = _Height;\n        this.Location = {\n            X: _X,\n            Y: _Y\n        };\n        this.Size = {\n            IsEmpty: false,\n            Width: _Width,\n            Height: _Height\n        };\n        this.Left = _X;\n        this.Top = _Y;\n        this.Right = _X + _Width;\n        this.Bottom = _Y + _Height;\n    }\n    return AnnotBounds;\n}());\nexport { AnnotBounds };\n/**\n *\n * @hidden\n */\nvar AnnotColor = /** @class */ (function () {\n    function AnnotColor(_R, _G, _B) {\n        this.IsEmpty = true;\n        this.R = _R;\n        this.G = _G;\n        this.B = _B;\n        if (this.R !== 0 || this.G !== 0 || this.B !== 0) {\n            this.IsEmpty = false;\n        }\n    }\n    return AnnotColor;\n}());\nexport { AnnotColor };\n/**\n *\n * @hidden\n */\nvar FontBase = /** @class */ (function () {\n    function FontBase(pdfFont, fontFamilyString) {\n        this.Bold = pdfFont.isBold;\n        this.FontFamily = pdfFont._fontFamily;\n        this.Height = pdfFont.height;\n        this.Italic = pdfFont.isItalic;\n        this.Name = fontFamilyString;\n        this.Size = pdfFont.size;\n        this.Strikeout = pdfFont.isStrikeout;\n        this.Style = pdfFont.style;\n        this.Underline = pdfFont.isUnderline;\n    }\n    return FontBase;\n}());\nexport { FontBase };\n/**\n *\n * @hidden\n */\nvar RectangleBase = /** @class */ (function () {\n    /**\n     * @private\n     */\n    function RectangleBase(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.width = right - left;\n        this.height = bottom - top;\n    }\n    return RectangleBase;\n}());\nexport { RectangleBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}