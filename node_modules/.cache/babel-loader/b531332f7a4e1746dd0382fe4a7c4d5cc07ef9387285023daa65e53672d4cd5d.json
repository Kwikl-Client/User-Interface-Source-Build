{"ast":null,"code":"import { createHtmlElement, getDiagramElement } from '@syncfusion/ej2-drawings';\nimport { setAttributeSvg, createSvgElement } from '@syncfusion/ej2-drawings';\n/**\n * @param {ClientRect} bounds - Specified the bounds of the annotation.\n * @param {string} commonStyle  - Specified the annotation styles.\n * @param {HTMLElement} cavas  - Specified the annotation canvas element.\n * @param {number} index - Specified the page index value.\n * @param {PdfViewer} pdfViewer - Specified the pdfviewer element.\n * @hidden\n * @returns {void}\n */\nexport function renderAdornerLayer(bounds, commonStyle, cavas, index, pdfViewer) {\n  var divElement = createHtmlElement('div', {\n    'id': pdfViewer.element.id + index + '_diagramAdornerLayer',\n    'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n  });\n  if (!getDiagramElement(divElement.id)) {\n    var nextElement = pdfViewer.viewerBase.getElement('_pageDiv_' + index);\n    var pageBound = nextElement.getBoundingClientRect();\n    var svgAdornerSvg = createSvg(pdfViewer.element.id + index + '_diagramAdorner_svg', pageBound.width, pageBound.height);\n    svgAdornerSvg.setAttribute('class', 'e-adorner-layer' + index);\n    svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n    pdfViewer.adornerSvgLayer = createSvgElement('g', {\n      'id': pdfViewer.element.id + index + '_diagramAdorner'\n    });\n    pdfViewer.adornerSvgLayer.setAttribute('style', ' pointer-events: all; ');\n    svgAdornerSvg.appendChild(pdfViewer.adornerSvgLayer);\n    divElement.appendChild(svgAdornerSvg);\n    divElement.style.width = pageBound.width + 'px';\n    divElement.style.height = pageBound.height + 'px';\n    if (nextElement) {\n      nextElement.insertBefore(divElement, nextElement.childNodes[0]);\n    } else {\n      cavas.parentElement.appendChild(divElement);\n    }\n    var svgSelector = createSvgElement('g', {\n      'id': pdfViewer.element.id + index + '_SelectorElement'\n    });\n    pdfViewer.adornerSvgLayer.appendChild(svgSelector);\n    setAttributeSvg(svgAdornerSvg, {\n      style: 'pointer-events:none;'\n    });\n  }\n  pdfViewer.viewerBase.applyElementStyles(divElement, index);\n}\n/**\n * @param {string} id - Specified the Id of the svg element.\n * @param {string | number} width - Specified the width of the svg element.\n * @param {string | number} height - Specified the height of the svg element.\n * @hidden\n * @returns {SVGElement} - Returns the svg element.\n */\nexport function createSvg(id, width, height) {\n  var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  setAttributeSvg(svgObj, {\n    'id': id,\n    'width': width,\n    'height': height\n  });\n  return svgObj;\n}","map":{"version":3,"names":["createHtmlElement","getDiagramElement","setAttributeSvg","createSvgElement","renderAdornerLayer","bounds","commonStyle","cavas","index","pdfViewer","divElement","element","id","width","height","nextElement","viewerBase","getElement","pageBound","getBoundingClientRect","svgAdornerSvg","createSvg","setAttribute","adornerSvgLayer","appendChild","style","insertBefore","childNodes","parentElement","svgSelector","applyElementStyles","svgObj","document","createElementNS"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/dom-util.js"],"sourcesContent":["import { createHtmlElement, getDiagramElement } from '@syncfusion/ej2-drawings';\nimport { setAttributeSvg, createSvgElement } from '@syncfusion/ej2-drawings';\n/**\n * @param {ClientRect} bounds - Specified the bounds of the annotation.\n * @param {string} commonStyle  - Specified the annotation styles.\n * @param {HTMLElement} cavas  - Specified the annotation canvas element.\n * @param {number} index - Specified the page index value.\n * @param {PdfViewer} pdfViewer - Specified the pdfviewer element.\n * @hidden\n * @returns {void}\n */\nexport function renderAdornerLayer(bounds, commonStyle, cavas, index, pdfViewer) {\n    var divElement = createHtmlElement('div', {\n        'id': pdfViewer.element.id + index + '_diagramAdornerLayer',\n        'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n    });\n    if (!getDiagramElement(divElement.id)) {\n        var nextElement = pdfViewer.viewerBase.getElement('_pageDiv_' + index);\n        var pageBound = nextElement.getBoundingClientRect();\n        var svgAdornerSvg = createSvg(pdfViewer.element.id + index + '_diagramAdorner_svg', pageBound.width, pageBound.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer' + index);\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        pdfViewer.adornerSvgLayer = createSvgElement('g', { 'id': pdfViewer.element.id + index + '_diagramAdorner' });\n        pdfViewer.adornerSvgLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(pdfViewer.adornerSvgLayer);\n        divElement.appendChild(svgAdornerSvg);\n        divElement.style.width = pageBound.width + 'px';\n        divElement.style.height = pageBound.height + 'px';\n        if (nextElement) {\n            nextElement.insertBefore(divElement, nextElement.childNodes[0]);\n        }\n        else {\n            cavas.parentElement.appendChild(divElement);\n        }\n        var svgSelector = createSvgElement('g', { 'id': pdfViewer.element.id + index + '_SelectorElement' });\n        pdfViewer.adornerSvgLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    }\n    pdfViewer.viewerBase.applyElementStyles(divElement, index);\n}\n/**\n * @param {string} id - Specified the Id of the svg element.\n * @param {string | number} width - Specified the width of the svg element.\n * @param {string | number} height - Specified the height of the svg element.\n * @hidden\n * @returns {SVGElement} - Returns the svg element.\n */\nexport function createSvg(id, width, height) {\n    var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n    return svgObj;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}