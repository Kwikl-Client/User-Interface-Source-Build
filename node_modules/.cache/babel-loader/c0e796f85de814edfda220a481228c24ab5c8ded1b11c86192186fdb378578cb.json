{"ast":null,"code":"import { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */function () {\n  /**\n   * Initializes a new instance of the `_ImageDecoder` class.\n   *\n   * @private\n   * @param {Uint8Array} stream byte array.\n   */\n  function _ImageDecoder(stream) {\n    this._format = _ImageFormat.unknown;\n    this._height = 0;\n    this._width = 0;\n    this._bitsPerComponent = 8;\n    this._position = 0;\n    this._noOfComponents = -1;\n    this._stream = stream;\n    this._initialize();\n  }\n  Object.defineProperty(_ImageDecoder.prototype, \"_imageDataAsNumberArray\", {\n    get: function () {\n      return this._imageData;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  _ImageDecoder.prototype._initialize = function () {\n    if (this._format === _ImageFormat.unknown && this._checkIfJpeg()) {\n      this._format = _ImageFormat.jpeg;\n      this._parseJpegImage();\n    } else {\n      throw new TypeError('Only the JPEG format is supported');\n    }\n    this._reset();\n    this._imageData = new Uint8Array(this._stream.byteLength);\n    this._read(this._imageData, 0, this._imageData.byteLength);\n  };\n  _ImageDecoder.prototype._reset = function () {\n    this._position = 0;\n  };\n  _ImageDecoder.prototype._parseJpegImage = function () {\n    this._reset();\n    var imgData = new Uint8Array(this._stream.byteLength);\n    this._read(imgData, 0, imgData.byteLength);\n    var i = 4;\n    var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n    var isLengthExceed = false;\n    while (i < imgData.byteLength) {\n      i += length;\n      if (i < imgData.byteLength) {\n        if (this._getBuffer(i + 1) === 192) {\n          this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n          this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n          this._noOfComponents = this._getBuffer(i + 9);\n          if (this._width !== 0 && this._height !== 0) {\n            return;\n          }\n        } else {\n          i += 2;\n          length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        }\n      } else {\n        isLengthExceed = true;\n        break;\n      }\n    }\n    if (isLengthExceed) {\n      this._reset();\n      this._seek(2);\n      this._readExceededJpegImage();\n    }\n  };\n  _ImageDecoder.prototype._checkIfJpeg = function () {\n    this._reset();\n    for (var i = 0; i < _ImageDecoder._jpegHeader.length; i++) {\n      if (_ImageDecoder._jpegHeader[Number.parseInt(i.toString(), 10)] !== this._getBuffer(i)) {\n        return false;\n      }\n      this._position++;\n    }\n    return true;\n  };\n  _ImageDecoder.prototype._read = function (buffer, offset, count) {\n    for (var index = offset; index < count; index++) {\n      var position = this._position;\n      buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n      this._position++;\n    }\n  };\n  _ImageDecoder.prototype._getBuffer = function (index) {\n    return this._stream[Number.parseInt(index.toString(), 10)];\n  };\n  _ImageDecoder.prototype._getImageDictionary = function () {\n    var data = []; // eslint-disable-line\n    this._imageStream = new _PdfStream(data, new _PdfDictionary());\n    this._imageStream.isImageStream = true;\n    var tempString = '';\n    var decodedString = '';\n    for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n      tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n    }\n    for (var i = 0; i < tempString.length; i++) {\n      if (i % 2 !== 0) {\n        decodedString += tempString[Number.parseInt(i.toString(), 10)];\n      }\n    }\n    this._imageStream.data = [decodedString];\n    this._imageStream._isCompress = false;\n    var dictionary = new _PdfDictionary();\n    dictionary.set('Type', new _PdfName('XObject'));\n    dictionary.set('Subtype', new _PdfName('Image'));\n    dictionary.set('Width', this._width);\n    dictionary.set('Height', this._height);\n    dictionary.set('BitsPerComponent', this._bitsPerComponent);\n    dictionary.set('Filter', new _PdfName('DCTDecode'));\n    dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n    dictionary.set('DecodeParms', this._getDecodeParams());\n    this._imageStream.dictionary = dictionary;\n    this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n    for (var i = 0; i < this._imageStream.data[0].length; i++) {\n      this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n    }\n    this._imageStream.end = this._imageStream.bytes.length;\n    this._imageStream.dictionary._updated = true;\n    return this._imageStream;\n  };\n  _ImageDecoder.prototype._getColorSpace = function () {\n    if (this._noOfComponents === 1) {\n      return 'DeviceGray';\n    } else if (this._noOfComponents === 4) {\n      return 'DeviceCMYK';\n    }\n    return 'DeviceRGB';\n  };\n  _ImageDecoder.prototype._getDecodeParams = function () {\n    var decodeParams = new _PdfDictionary();\n    decodeParams.set('Columns', this._width);\n    decodeParams.set('BlackIs1', true);\n    decodeParams.set('K', -1);\n    decodeParams.set('Predictor', 15);\n    decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n    return decodeParams;\n  };\n  _ImageDecoder.prototype._seek = function (length) {\n    this._position += length;\n  };\n  _ImageDecoder.prototype._readByte = function () {\n    if (this._position < this._stream.byteLength) {\n      var value = this._getBuffer(this._position);\n      this._position += 1;\n      return value;\n    } else {\n      throw new Error('Error decoding JPEG image. Invalid offset.');\n    }\n  };\n  _ImageDecoder.prototype._skipStream = function () {\n    var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n    this._seek(2);\n    if (length < 2) {\n      throw new Error('Error decoding JPEG image');\n    } else if (length > 0) {\n      this._seek(length - 2);\n    }\n  };\n  _ImageDecoder.prototype._readExceededJpegImage = function () {\n    var isContinueReading = true;\n    while (isContinueReading) {\n      var marker = this._getMarker();\n      switch (marker) {\n        case 0x00C0:\n        case 0x00C1:\n        case 0x00C2:\n        case 0x00C3:\n        case 0x00C5:\n        case 0x00C6:\n        case 0x00C7:\n        case 0x00C9:\n        case 0x00CA:\n        case 0x00CB:\n        case 0x00CD:\n        case 0x00CE:\n        case 0x00CF:\n          this._seek(3);\n          this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n          this._seek(2);\n          this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n          this._seek(2);\n          this._noOfComponents = this._getBuffer(this._position);\n          this._seek(1);\n          isContinueReading = false;\n          break;\n        default:\n          this._skipStream();\n          break;\n      }\n    }\n  };\n  _ImageDecoder.prototype._toUnsigned16 = function (value) {\n    value = value & 0xFFFF;\n    return value < 0 ? value + 0x10000 : value;\n  };\n  _ImageDecoder.prototype._getMarker = function () {\n    var skippedByte = 0;\n    var marker = this._readByte();\n    while (marker !== 255) {\n      skippedByte++;\n      marker = this._readByte();\n    }\n    do {\n      marker = this._readByte();\n    } while (marker === 255);\n    if (skippedByte !== 0) {\n      throw new Error('Error decoding JPEG image');\n    }\n    return this._toUnsigned16(marker);\n  };\n  _ImageDecoder._jpegHeader = [255, 216];\n  return _ImageDecoder;\n}();\nexport { _ImageDecoder };","map":{"version":3,"names":["_PdfStream","_PdfDictionary","_PdfName","_ImageFormat","_ImageDecoder","stream","_format","unknown","_height","_width","_bitsPerComponent","_position","_noOfComponents","_stream","_initialize","Object","defineProperty","prototype","get","_imageData","enumerable","configurable","_checkIfJpeg","jpeg","_parseJpegImage","TypeError","_reset","Uint8Array","byteLength","_read","imgData","i","length","_getBuffer","isLengthExceed","_seek","_readExceededJpegImage","_jpegHeader","Number","parseInt","toString","buffer","offset","count","index","position","_getImageDictionary","data","_imageStream","isImageStream","tempString","decodedString","_imageDataAsNumberArray","String","fromCharCode","_isCompress","dictionary","set","_getColorSpace","_getDecodeParams","bytes","charCodeAt","end","_updated","decodeParams","_readByte","value","Error","_skipStream","isContinueReading","marker","_getMarker","_toUnsigned16","skippedByte"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/graphics/images/image-decoder.js"],"sourcesContent":["import { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `_ImageDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _ImageDecoder(stream) {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n        this._stream = stream;\n        this._initialize();\n    }\n    Object.defineProperty(_ImageDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _ImageDecoder.prototype._initialize = function () {\n        if (this._format === _ImageFormat.unknown && this._checkIfJpeg()) {\n            this._format = _ImageFormat.jpeg;\n            this._parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._parseJpegImage = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _ImageDecoder.prototype._checkIfJpeg = function () {\n        this._reset();\n        for (var i = 0; i < _ImageDecoder._jpegHeader.length; i++) {\n            if (_ImageDecoder._jpegHeader[Number.parseInt(i.toString(), 10)] !== this._getBuffer(i)) {\n                return false;\n            }\n            this._position++;\n        }\n        return true;\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this._position;\n            buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n            this._position++;\n        }\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _ImageDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _ImageDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _ImageDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    _ImageDecoder._jpegHeader = [255, 216];\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}