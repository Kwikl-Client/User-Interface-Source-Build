{"ast":null,"code":"import * as EVENTS from '../../common/constant';\nimport { createElement, isNullOrUndefined as isNOU, detach } from '@syncfusion/ej2-base';\nimport { PASTE_SOURCE } from '../base/constant';\n/**\n * PasteCleanup for MsWord content\n *\n * @hidden\n\n */\nvar MsWordPaste = /** @class */function () {\n  function MsWordPaste(parent) {\n    this.olData = ['decimal', 'lower-alpha', 'lower-roman', 'upper-alpha', 'upper-roman', 'lower-greek'];\n    this.ulData = ['disc', 'square', 'circle', 'disc', 'square', 'circle'];\n    this.ignorableNodes = ['A', 'APPLET', 'B', 'BLOCKQUOTE', 'BR', 'BUTTON', 'CENTER', 'CODE', 'COL', 'COLGROUP', 'DD', 'DEL', 'DFN', 'DIR', 'DIV', 'DL', 'DT', 'EM', 'FIELDSET', 'FONT', 'FORM', 'FRAME', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HR', 'I', 'IMG', 'IFRAME', 'INPUT', 'INS', 'LABEL', 'LI', 'OL', 'OPTION', 'P', 'PARAM', 'PRE', 'Q', 'S', 'SELECT', 'SPAN', 'STRIKE', 'STRONG', 'SUB', 'SUP', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TITLE', 'TR', 'TT', 'U', 'UL'];\n    this.blockNode = ['div', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'address', 'blockquote', 'button', 'center', 'dd', 'dir', 'dl', 'dt', 'fieldset', 'frameset', 'hr', 'iframe', 'isindex', 'li', 'map', 'menu', 'noframes', 'noscript', 'object', 'ol', 'pre', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul', 'header', 'article', 'nav', 'footer', 'section', 'aside', 'main', 'figure', 'figcaption'];\n    this.borderStyle = ['border-top', 'border-right', 'border-bottom', 'border-left'];\n    this.upperRomanNumber = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX'];\n    this.lowerRomanNumber = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix', 'x', 'xi', 'xii', 'xiii', 'xiv', 'xv', 'xvi', 'xvii', 'xviii', 'xix', 'xx'];\n    this.lowerGreekNumber = ['α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ', 'ι', 'κ', 'λ', 'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω'];\n    this.removableElements = ['o:p', 'style'];\n    this.listContents = [];\n    this.cropImageDimensions = [];\n    this.parent = parent;\n    this.addEventListener();\n  }\n  MsWordPaste.prototype.addEventListener = function () {\n    this.parent.observer.on(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup, this);\n  };\n  MsWordPaste.prototype.wordCleanup = function (e) {\n    var wordPasteStyleConfig = !isNOU(e.allowedStylePropertiesArray) ? e.allowedStylePropertiesArray : [];\n    var listNodes = [];\n    var tempHTMLContent = e.args.clipboardData.getData('text/HTML');\n    var rtfData = e.args.clipboardData.getData('text/rtf');\n    var elm = createElement('p');\n    elm.setAttribute('id', 'MSWord-Content');\n    elm.innerHTML = tempHTMLContent;\n    var patern = /class='?Mso|style='[^ ]*\\bmso-/i;\n    var patern2 = /class=\"?Mso|style=\"[^ ]*\\bmso-/i;\n    var patern3 = /(class=\"?Mso|class='?Mso|class=\"?Xl|class='?Xl|class=Xl|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument)/gi;\n    var pattern4 = /style='mso-width-source:/i;\n    if (patern.test(tempHTMLContent) || patern2.test(tempHTMLContent) || patern3.test(tempHTMLContent) || pattern4.test(tempHTMLContent)) {\n      var source = this.findSource(elm);\n      this.imageConversion(elm, rtfData);\n      tempHTMLContent = tempHTMLContent.replace(/<img[^>]+>/i, '');\n      this.addListClass(elm);\n      listNodes = this.cleanUp(elm, listNodes);\n      if (!isNOU(listNodes[0]) && listNodes[0].parentElement.tagName !== 'UL' && listNodes[0].parentElement.tagName !== 'OL') {\n        this.listConverter(listNodes);\n      }\n      this.cleanList(elm, 'UL');\n      this.cleanList(elm, 'OL');\n      this.styleCorrection(elm, wordPasteStyleConfig);\n      this.removingComments(elm);\n      this.removeUnwantedElements(elm);\n      this.removeEmptyElements(elm);\n      this.removeEmptyAnchorTag(elm);\n      this.breakLineAddition(elm);\n      this.removeClassName(elm);\n      if (pattern4.test(tempHTMLContent)) {\n        this.addTableBorderClass(elm);\n      }\n      this.processMargin(elm);\n      e.callBack(elm.innerHTML, this.cropImageDimensions, source);\n    } else {\n      e.callBack(elm.innerHTML);\n    }\n  };\n  MsWordPaste.prototype.cleanList = function (elm, listTag) {\n    var replacableElem = elm.querySelectorAll(listTag + ' div');\n    for (var j = replacableElem.length - 1; j >= 0; j--) {\n      var parentElem = replacableElem[j].parentNode;\n      while (replacableElem[j].firstChild) {\n        parentElem.insertBefore(replacableElem[j].firstChild, replacableElem[j]);\n      }\n      var closestListElem = this.findClosestListElem(replacableElem[j]);\n      if (closestListElem) {\n        this.insertAfter(replacableElem[j], closestListElem);\n      }\n    }\n  };\n  MsWordPaste.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  MsWordPaste.prototype.findClosestListElem = function (listElem) {\n    var closestListElem;\n    while (!isNOU(listElem)) {\n      listElem = !isNOU(listElem.closest('ul')) && listElem.tagName !== 'UL' ? listElem.closest('ul') : listElem.tagName !== 'OL' ? listElem.closest('ol') : null;\n      closestListElem = !isNOU(listElem) ? listElem : closestListElem;\n    }\n    return closestListElem;\n  };\n  MsWordPaste.prototype.addListClass = function (elm) {\n    var allNodes = elm.querySelectorAll('*');\n    for (var index = 0; index < allNodes.length; index++) {\n      if (!isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').replace(/ /g, '').replace('\\n', '').indexOf('mso-list:l') >= 0 && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') === -1 && allNodes[index].tagName.charAt(0) !== 'H' && allNodes[index].tagName !== 'LI' && allNodes[index].tagName !== 'OL' && allNodes[index].tagName !== 'UL') {\n        allNodes[index].classList.add('msolistparagraph');\n      }\n    }\n  };\n  MsWordPaste.prototype.addTableBorderClass = function (elm) {\n    var allTableElm = elm.querySelectorAll('table');\n    var hasTableBorder = false;\n    for (var i = 0; i < allTableElm.length; i++) {\n      for (var j = 0; j < this.borderStyle.length; j++) {\n        if (allTableElm[i].innerHTML.indexOf(this.borderStyle[j]) >= 0) {\n          hasTableBorder = true;\n          break;\n        }\n      }\n      if (hasTableBorder) {\n        allTableElm[i].classList.add('e-rte-table-border');\n        hasTableBorder = false;\n      }\n    }\n  };\n  MsWordPaste.prototype.imageConversion = function (elm, rtfData) {\n    this.checkVShape(elm);\n    var imgElem = elm.querySelectorAll('img');\n    for (var i = 0; i < imgElem.length; i++) {\n      if (!isNOU(imgElem[i].getAttribute('v:shapes')) && imgElem[i].getAttribute('v:shapes').indexOf('Picture') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('圖片') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('Grafik') < 0 && imgElem[i].getAttribute('v:shapes').toLowerCase().indexOf('image') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('Graphic') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('_x0000_s') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('_x0000_i') < 0) {\n        detach(imgElem[i]);\n      }\n    }\n    imgElem = elm.querySelectorAll('img');\n    var imgSrc = [];\n    var base64Src = [];\n    var imgName = [];\n    // eslint-disable-next-line\n    var linkRegex = new RegExp(/([^\\S]|^)(((https?\\:\\/\\/)|(www\\.))(\\S+))/gi);\n    if (imgElem.length > 0) {\n      for (var i = 0; i < imgElem.length; i++) {\n        imgSrc.push(imgElem[i].getAttribute('src'));\n        imgName.push(imgElem[i].getAttribute('src').split('/')[imgElem[i].getAttribute('src').split('/').length - 1].split('.')[0]);\n      }\n      var hexValue = this.hexConversion(rtfData);\n      for (var i = 0; i < hexValue.length; i++) {\n        base64Src.push({\n          base64Data: !isNOU(hexValue[i].hex) ? this.convertToBase64(hexValue[i]) : null,\n          isCroppedImage: hexValue[i].isCroppedImage\n        });\n        if (hexValue[i].isCroppedImage) {\n          this.cropImageDimensions.push({\n            goalWidth: hexValue[i].goalWidth,\n            goalHeight: hexValue[i].goalHeight,\n            cropLength: hexValue[i].cropLength,\n            cropTop: hexValue[i].cropTop,\n            cropR: hexValue[i].cropR,\n            cropB: hexValue[i].cropB\n          });\n        }\n      }\n      for (var i = 0; i < imgElem.length; i++) {\n        if (imgSrc[i].match(linkRegex)) {\n          imgElem[i].setAttribute('src', imgSrc[i]);\n        } else {\n          if (!isNOU(base64Src[i]) && !isNOU(base64Src[i].base64Data)) {\n            imgElem[i].setAttribute('src', base64Src[i].base64Data);\n          } else {\n            imgElem[i].removeAttribute('src');\n            imgElem[i].setAttribute('alt', 'Unsupported file format');\n          }\n          if (!isNOU(base64Src[i]) && base64Src[i].isCroppedImage) {\n            imgElem[i].classList.add('e-img-cropped');\n          }\n        }\n        imgElem[i].setAttribute('id', 'msWordImg-' + imgName[i]);\n      }\n    }\n  };\n  MsWordPaste.prototype.checkVShape = function (elm) {\n    var allNodes = elm.querySelectorAll('*');\n    for (var i = 0; i < allNodes.length; i++) {\n      switch (allNodes[i].nodeName) {\n        case 'V:SHAPETYPE':\n          detach(allNodes[i]);\n          break;\n        case 'V:SHAPE':\n          if (allNodes[i].firstElementChild.nodeName === 'V:IMAGEDATA') {\n            var src = allNodes[i].firstElementChild.getAttribute('src');\n            var imgElement = createElement('img');\n            imgElement.setAttribute('src', src);\n            allNodes[i].parentElement.insertBefore(imgElement, allNodes[i]);\n            detach(allNodes[i]);\n          }\n          break;\n      }\n    }\n  };\n  MsWordPaste.prototype.convertToBase64 = function (hexValue) {\n    var byteArr = this.conHexStringToBytes(hexValue.hex);\n    var base64String = this.conBytesToBase64(byteArr);\n    var base64 = hexValue.type ? 'data:' + hexValue.type + ';base64,' + base64String : null;\n    return base64;\n  };\n  MsWordPaste.prototype.conBytesToBase64 = function (byteArr) {\n    var base64Str = '';\n    var base64Char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var byteArrLen = byteArr.length;\n    for (var i = 0; i < byteArrLen; i += 3) {\n      var array3 = byteArr.slice(i, i + 3);\n      var array3length = array3.length;\n      var array4 = [];\n      if (array3length < 3) {\n        for (var j = array3length; j < 3; j++) {\n          array3[j] = 0;\n        }\n      }\n      array4[0] = (array3[0] & 0xFC) >> 2;\n      array4[1] = (array3[0] & 0x03) << 4 | array3[1] >> 4;\n      array4[2] = (array3[1] & 0x0F) << 2 | (array3[2] & 0xC0) >> 6;\n      array4[3] = array3[2] & 0x3F;\n      for (var j = 0; j < 4; j++) {\n        if (j <= array3length) {\n          base64Str += base64Char.charAt(array4[j]);\n        } else {\n          base64Str += '=';\n        }\n      }\n    }\n    return base64Str;\n  };\n  MsWordPaste.prototype.conHexStringToBytes = function (hex) {\n    var byteArr = [];\n    var byteArrLen = hex.length / 2;\n    for (var i = 0; i < byteArrLen; i++) {\n      byteArr.push(parseInt(hex.substr(i * 2, 2), 16));\n    }\n    return byteArr;\n  };\n  MsWordPaste.prototype.hexConversion = function (rtfData) {\n    // eslint-disable-next-line\n    var picHead = /\\{\\\\pict[\\s\\S]+?\\\\bliptag\\-?\\d+(\\\\blipupi\\-?\\d+)?(\\{\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s\\}]*?/;\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    var pic = new RegExp('(?:(' + picHead.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g');\n    var fullImg = rtfData.match(pic);\n    var imgType;\n    var result = [];\n    if (!isNOU(fullImg)) {\n      for (var i = 0; i < fullImg.length; i++) {\n        var isCroppedImage = false;\n        var goalWidth = 0;\n        var goalHeight = 0;\n        var cropLength = 0;\n        var cropTop = 0;\n        var cropR = 0;\n        var cropB = 0;\n        if (picHead.test(fullImg[i])) {\n          if (fullImg[i].indexOf('\\\\pngblip') !== -1) {\n            imgType = 'image/png';\n          } else if (fullImg[i].indexOf('\\\\jpegblip') !== -1) {\n            imgType = 'image/jpeg';\n          } else if (fullImg[i].indexOf('\\\\picprop') !== -1) {\n            imgType = null;\n          } else {\n            continue;\n          }\n          isCroppedImage = this.extractCropValue('cropl', fullImg[i]) > 0 && this.extractCropValue('cropt', fullImg[i]) > 0 || this.extractCropValue('cropr', fullImg[i]) > 0 || this.extractCropValue('cropb', fullImg[i]) ? true : false;\n          if (isCroppedImage) {\n            goalWidth = this.extractCropValue('wgoal', fullImg[i]);\n            goalHeight = this.extractCropValue('hgoal', fullImg[i]);\n            cropLength = this.extractCropValue('cropl', fullImg[i]);\n            cropTop = this.extractCropValue('cropt', fullImg[i]);\n            cropR = this.extractCropValue('cropr', fullImg[i]);\n            cropB = this.extractCropValue('cropb', fullImg[i]);\n          }\n          result.push({\n            hex: imgType ? fullImg[i].replace(picHead, '').replace(/[^\\da-fA-F]/g, '') : null,\n            type: imgType,\n            isCroppedImage: isCroppedImage,\n            goalWidth: goalWidth,\n            goalHeight: goalHeight,\n            cropLength: cropLength,\n            cropTop: cropTop,\n            cropR: cropR,\n            cropB: cropB\n          });\n        }\n      }\n    }\n    return result;\n  };\n  MsWordPaste.prototype.extractCropValue = function (crop, rtfData) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    var result = new RegExp('\\\\\\\\pic' + crop + '(\\\\-?\\\\d+)\\\\\\\\').exec(rtfData.replace(/\\r\\n\\\\/g, '\\\\').replace(/\\n/g, '\\\\'))[1];\n    return parseInt(result, 10);\n  };\n  MsWordPaste.prototype.removeClassName = function (elm) {\n    var elmWithClass = elm.querySelectorAll('*[class]:not(.e-img-cropped)');\n    for (var i = 0; i < elmWithClass.length; i++) {\n      elmWithClass[i].removeAttribute('class');\n    }\n  };\n  MsWordPaste.prototype.breakLineAddition = function (elm) {\n    var allElements = elm.querySelectorAll('*');\n    for (var i = 0; i < allElements.length; i++) {\n      if (allElements[i].children.length === 0 && allElements[i].innerHTML === '&nbsp;' && allElements[i].innerHTML === '&nbsp;' && !allElements[i].closest('li') && !allElements[i].closest('td') && (allElements[i].nodeName !== 'SPAN' || allElements[i].nodeName === 'SPAN' && isNOU(allElements[i].previousElementSibling) && isNOU(allElements[i].nextElementSibling))) {\n        var detachableElement = this.findDetachElem(allElements[i]);\n        var brElement = createElement('br');\n        var hasNbsp = detachableElement.textContent.length > 0 && detachableElement.textContent.match(/\\u00a0/g) && detachableElement.textContent.match(/\\u00a0/g).length > 0;\n        if (!hasNbsp && !isNOU(detachableElement.parentElement)) {\n          detachableElement.parentElement.insertBefore(brElement, detachableElement);\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.findDetachElem = function (element) {\n    var removableElement;\n    if (!isNOU(element.parentElement) && element.parentElement.textContent.trim() === '' && element.parentElement.tagName !== 'TD' && isNOU(element.parentElement.querySelector('img'))) {\n      removableElement = this.findDetachElem(element.parentElement);\n    } else {\n      removableElement = element;\n    }\n    return removableElement;\n  };\n  MsWordPaste.prototype.removeUnwantedElements = function (elm) {\n    var styleElm = elm.querySelector('style');\n    if (!isNOU(styleElm)) {\n      detach(styleElm);\n    }\n    var innerElement = elm.innerHTML;\n    for (var i = 0; i < this.removableElements.length; i++) {\n      // eslint-disable-next-line security/detect-non-literal-regexp\n      var regExpStartElem = new RegExp('<' + this.removableElements[i] + '>', 'g');\n      // eslint-disable-next-line security/detect-non-literal-regexp\n      var regExpEndElem = new RegExp('</' + this.removableElements[i] + '>', 'g');\n      innerElement = innerElement.replace(regExpStartElem, '');\n      innerElement = innerElement.replace(regExpEndElem, '');\n    }\n    elm.innerHTML = innerElement;\n    elm.querySelectorAll(':empty');\n  };\n  MsWordPaste.prototype.findDetachEmptyElem = function (element) {\n    var removableElement;\n    if (!isNOU(element.parentElement)) {\n      var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g) && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n      if (!hasNbsp && element.parentElement.textContent.trim() === '' && element.parentElement.getAttribute('id') !== 'MSWord-Content' && !this.hasParentWithClass(element, 'MsoListParagraph') && isNOU(element.parentElement.querySelector('img'))) {\n        removableElement = this.findDetachEmptyElem(element.parentElement);\n      } else {\n        removableElement = element;\n      }\n    } else {\n      removableElement = null;\n    }\n    return removableElement;\n  };\n  MsWordPaste.prototype.hasParentWithClass = function (element, className) {\n    var currentParentElem = element.parentElement;\n    while (!isNOU(currentParentElem)) {\n      if (currentParentElem.classList.contains(className)) {\n        return true;\n      }\n      currentParentElem = currentParentElem.parentElement;\n    }\n    return false;\n  };\n  MsWordPaste.prototype.removeEmptyElements = function (element) {\n    var emptyElements = element.querySelectorAll(':empty');\n    for (var i = 0; i < emptyElements.length; i++) {\n      if (!isNOU(emptyElements[i].closest('td')) && !isNOU(emptyElements[i].closest('td').querySelector('.MsoNormal'))) {\n        emptyElements[i].innerHTML = '-';\n      }\n      var lineWithDiv = true;\n      if (emptyElements[i].tagName === 'DIV') {\n        lineWithDiv = emptyElements[i].style.borderBottom === 'none' || emptyElements[i].style.borderBottom === '' ? true : false;\n      }\n      if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' && emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' && emptyElements[i].tagName !== 'HR' && lineWithDiv) {\n        var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.styleCorrection = function (elm, wordPasteStyleConfig) {\n    var styleElement = elm.querySelectorAll('style');\n    if (styleElement.length > 0) {\n      var styles = styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n      var styleClassObject_1 = !isNOU(styles) ? this.findStyleObject(styles) : null;\n      var keys = Object.keys(styleClassObject_1);\n      var values = keys.map(function (key) {\n        return styleClassObject_1[\"\" + key];\n      });\n      values = this.removeUnwantedStyle(values, wordPasteStyleConfig);\n      this.filterStyles(elm, wordPasteStyleConfig);\n      var resultElem = void 0;\n      var fromClass = false;\n      for (var i = 0; i < keys.length; i++) {\n        if (keys[i].split('.')[0] === '') {\n          resultElem = elm.getElementsByClassName(keys[i].split('.')[1]);\n          fromClass = true;\n        } else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') >= 0) {\n          continue;\n        } else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') < 0) {\n          resultElem = elm.getElementsByTagName(keys[i]);\n        } else {\n          resultElem = elm.querySelectorAll(keys[i]);\n        }\n        for (var j = 0; j < resultElem.length; j++) {\n          if (resultElem[j].closest('li') && keys[i] === 'p') {\n            continue;\n          }\n          var styleProperty = resultElem[j].getAttribute('style');\n          if (!isNOU(styleProperty) && styleProperty.trim() !== '') {\n            var valueSplit = values[i].split(';');\n            if (!fromClass) {\n              for (var k = 0; k < valueSplit.length; k++) {\n                if (styleProperty.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                  valueSplit.splice(k, 1);\n                  k--;\n                }\n              }\n            }\n            var changedValue = styleProperty + valueSplit.join(';') + ';';\n            resultElem[j].setAttribute('style', changedValue);\n          } else {\n            values[i] = values[i].replace(/text-indent:-(.*?)(?=;|$)/gm, '');\n            resultElem[j].setAttribute('style', values[i]);\n          }\n        }\n        fromClass = false;\n      }\n      var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n      for (var i = 0; i < listClass.length; i++) {\n        if (keys.indexOf('li.' + listClass[i]) > -1) {\n          var olULElems = elm.querySelectorAll('ol.' + listClass[i] + ', ul.' + listClass[i]);\n          for (var j = 0; j < olULElems.length; j++) {\n            var styleProperty = olULElems[j].getAttribute('style');\n            if (!isNOU(styleProperty) && styleProperty.trim() !== '' && olULElems[j].style.marginLeft !== '') {\n              var valueSplit = values[keys.indexOf('li.' + listClass[i])].split(';');\n              for (var k = 0; k < valueSplit.length; k++) {\n                if ('margin-left'.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                  if (!isNOU(valueSplit[k].split(':')[1]) && valueSplit[k].split(':')[1].indexOf('in') >= 0 && olULElems[j].style.marginLeft.indexOf('in') >= 0) {\n                    var classStyle = parseFloat(valueSplit[k].split(':')[1].split('in')[0]);\n                    var inlineStyle = parseFloat(olULElems[j].style.marginLeft.split('in')[0]);\n                    olULElems[j].style.marginLeft = inlineStyle - classStyle + 'in';\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.filterStyles = function (elm, wordPasteStyleConfig) {\n    var elmWithStyles = elm.querySelectorAll('*[style]');\n    for (var i = 0; i < elmWithStyles.length; i++) {\n      var elemStyleProperty = elmWithStyles[i].getAttribute('style').split(';');\n      var styleValue = '';\n      for (var j = 0; j < elemStyleProperty.length; j++) {\n        if (wordPasteStyleConfig.indexOf(elemStyleProperty[j].split(':')[0].trim()) >= 0) {\n          styleValue += elemStyleProperty[j] + ';';\n        }\n      }\n      elmWithStyles[i].setAttribute('style', styleValue);\n    }\n  };\n  MsWordPaste.prototype.removeUnwantedStyle = function (values, wordPasteStyleConfig) {\n    for (var i = 0; i < values.length; i++) {\n      var styleValues = values[i].split(';');\n      values[i] = '';\n      for (var j = 0; j < styleValues.length; j++) {\n        if (wordPasteStyleConfig.indexOf(styleValues[j].split(':')[0]) >= 0) {\n          values[i] += styleValues[j] + ';';\n        }\n      }\n    }\n    return values;\n  };\n  MsWordPaste.prototype.findStyleObject = function (styles) {\n    var styleClassObject = {};\n    for (var i = 0; i < styles.length; i++) {\n      var tempStyle = styles[i];\n      var classNameCollection = tempStyle.replace(/([\\S ]+\\s+){[\\s\\S]+?}/gi, '$1');\n      var stylesCollection = tempStyle.replace(/[\\S ]+\\s+{([\\s\\S]+?)}/gi, '$1');\n      classNameCollection = classNameCollection.replace(/^[\\s]|[\\s]$/gm, '');\n      stylesCollection = stylesCollection.replace(/^[\\s]|[\\s]$/gm, '');\n      classNameCollection = classNameCollection.replace(/\\n|\\r|\\n\\r/g, '');\n      stylesCollection = stylesCollection.replace(/\\n|\\r|\\n\\r/g, '');\n      for (var classNames = classNameCollection.split(', '), j = 0; j < classNames.length; j++) {\n        styleClassObject[classNames[j]] = stylesCollection;\n      }\n    }\n    return styleClassObject;\n  };\n  MsWordPaste.prototype.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n  MsWordPaste.prototype.cleanUp = function (node, listNodes) {\n    var tempCleaner = [];\n    var prevflagState;\n    var allNodes = node.querySelectorAll('*');\n    for (var index = 0; index < allNodes.length; index++) {\n      if (this.ignorableNodes.indexOf(allNodes[index].nodeName) === -1 || allNodes[index].nodeType === 3 && allNodes[index].textContent.trim() === '') {\n        tempCleaner.push(allNodes[index]);\n        continue;\n      } else if (allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n        if (allNodes[index].className.indexOf('MsoListParagraphCxSpFirst') >= 0 && listNodes.length > 0 && listNodes[listNodes.length - 1] !== null) {\n          listNodes.push(null);\n        }\n        listNodes.push(allNodes[index]);\n      }\n      if (prevflagState && this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1 && !(allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0)) {\n        listNodes.push(null);\n      }\n      if (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) {\n        if (allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n          prevflagState = true;\n        } else {\n          prevflagState = false;\n        }\n      }\n    }\n    if (listNodes.length && listNodes[listNodes.length - 1] !== null) {\n      listNodes.push(null);\n    }\n    return listNodes;\n  };\n  MsWordPaste.prototype.listConverter = function (listNodes) {\n    var level;\n    var data = [];\n    var collection = [];\n    var content = '';\n    var stNode;\n    var currentListStyle = '';\n    for (var i = 0; i < listNodes.length; i++) {\n      if (listNodes[i] === null) {\n        data.push({\n          content: this.makeConversion(collection),\n          node: listNodes[i - 1]\n        });\n        collection = [];\n        continue;\n      }\n      if (listNodes[i].getAttribute('style') && listNodes[i].getAttribute('style').indexOf('mso-outline-level') !== -1) {\n        listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('mso-outline-level', 'mso-outline'));\n      }\n      content = listNodes[i].getAttribute('style');\n      if (content && content.indexOf('level') !== -1) {\n        // eslint-disable-next-line\n        level = parseInt(content.charAt(content.indexOf('level') + 5), null);\n      } else {\n        level = 1;\n      }\n      this.listContents = [];\n      this.getListContent(listNodes[i]);\n      var type = void 0;\n      var listStyleType = void 0;\n      var startAttr = void 0;\n      var styleMarginLeft = void 0;\n      if (!isNOU(this.listContents[0])) {\n        type = this.listContents[0].trim().length > 1 ? 'ol' : 'ul';\n        listStyleType = this.getlistStyleType(this.listContents[0], type);\n        if (type === 'ol' && (i === 0 || listNodes[i - 1] === null)) {\n          var startString = this.listContents[0].split('.')[0];\n          var listTypes = ['A', 'a', 'I', 'i', 'α', '1', '1-']; // Add '1-' for rare list type.\n          if (listTypes.indexOf(startString) === -1) {\n            if (listStyleType === 'decimal') {\n              // Bug in getlistStyleType() list style stype is returned as decimal for nested list with start attribute\n              if (!isNaN(parseInt(startString, 10))) {\n                startAttr = parseInt(startString, 10);\n              }\n            } else if (listStyleType === 'upper-alpha') {\n              startAttr = startString.split('.')[0].charCodeAt(0) - 64;\n            } else if (listStyleType === 'lower-alpha') {\n              startAttr = startString.split('.')[0].charCodeAt(0) - 96;\n            } else if (listStyleType === 'upper-roman') {\n              startAttr = this.upperRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n            } else if (listStyleType === 'lower-roman') {\n              startAttr = this.lowerRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n            } else if (listStyleType === 'lower-greek') {\n              startAttr = this.lowerGreekNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n            }\n          }\n          if (listNodes[i].style.marginLeft !== '') {\n            styleMarginLeft = listNodes[i].style.marginLeft;\n          }\n        }\n        var tempNode = [];\n        for (var j = 1; j < this.listContents.length; j++) {\n          tempNode.push(this.listContents[j]);\n        }\n        var currentClassName = void 0;\n        if (!isNOU(listNodes[i].className)) {\n          currentClassName = listNodes[i].className;\n        }\n        if (!isNOU(listNodes[i].getAttribute('style'))) {\n          listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('text-align:start;', ''));\n          listNodes[i].style.textIndent = '';\n          currentListStyle = listNodes[i].getAttribute('style');\n        }\n        collection.push({\n          listType: type,\n          content: tempNode,\n          nestedLevel: level,\n          class: currentClassName,\n          listStyle: currentListStyle,\n          listStyleTypeName: listStyleType,\n          start: startAttr,\n          styleMarginLeft: styleMarginLeft\n        });\n      }\n    }\n    stNode = listNodes.shift();\n    while (stNode) {\n      var elemColl = [];\n      for (var temp1 = 0; temp1 < data.length; temp1++) {\n        if (data[temp1].node === stNode) {\n          for (var index = 0; index < data[temp1].content.childNodes.length; index++) {\n            elemColl.push(data[temp1].content.childNodes[index]);\n          }\n          for (var index = 0; index < elemColl.length; index++) {\n            stNode.parentElement.insertBefore(elemColl[index], stNode);\n          }\n          break;\n        }\n      }\n      stNode.remove();\n      stNode = listNodes.shift();\n      if (!stNode) {\n        stNode = listNodes.shift();\n      }\n    }\n  };\n  MsWordPaste.prototype.getlistStyleType = function (listContent, type) {\n    var currentListClass;\n    if (type === 'ol') {\n      var charCode = listContent.split('.')[0].charCodeAt(0);\n      switch (true) {\n        case this.upperRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n          currentListClass = 'upper-roman';\n          break;\n        case this.lowerRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n          currentListClass = 'lower-roman';\n          break;\n        case this.lowerGreekNumber.indexOf(listContent.split('.')[0]) > -1:\n          currentListClass = 'lower-greek';\n          break;\n        case charCode > 64 && charCode < 91:\n          currentListClass = 'upper-alpha';\n          break;\n        case charCode > 96 && charCode < 123:\n          currentListClass = 'lower-alpha';\n          break;\n        default:\n          currentListClass = 'decimal';\n          break;\n      }\n    } else {\n      switch (listContent.split('.')[0]) {\n        case 'o':\n          currentListClass = 'circle';\n          break;\n        case '§':\n          currentListClass = 'square';\n          break;\n        default:\n          currentListClass = 'disc';\n          break;\n      }\n    }\n    return currentListClass;\n  };\n  MsWordPaste.prototype.makeConversion = function (collection) {\n    var root = createElement('div');\n    var temp;\n    var pLevel = 1;\n    var prevList;\n    var listCount = 0;\n    var elem;\n    for (var index = 0; index < collection.length; index++) {\n      var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n      var isNormalList = false;\n      for (var i = 0; i < listClass.length; i++) {\n        if (listClass[i].indexOf(collection[index].class) >= 0) {\n          isNormalList = true;\n          break;\n        }\n      }\n      if (!isNOU(prevList) && index !== 0 && collection[index - 1].listType !== collection[index].listType && !isNormalList) {\n        prevList = null;\n      }\n      var pElement = createElement('p', {\n        className: 'MsoNormal'\n      });\n      pElement.innerHTML = collection[index].content.join(' ');\n      if (collection[index].nestedLevel === 1 && listCount === 0 && collection[index].content) {\n        root.appendChild(temp = createElement(collection[index].listType, {\n          className: collection[index].class\n        }));\n        prevList = createElement('li');\n        prevList.appendChild(pElement);\n        temp.appendChild(prevList);\n        temp.setAttribute('level', collection[index].nestedLevel.toString());\n        temp.style.marginLeft = collection[index].styleMarginLeft;\n        temp.style.listStyleType = collection[index].listStyleTypeName;\n      } else if (collection[index].nestedLevel === pLevel) {\n        if (!isNOU(prevList) && !isNOU(prevList.parentElement) && prevList.parentElement.tagName.toLowerCase() === collection[index].listType) {\n          prevList.parentElement.appendChild(prevList = createElement('li'));\n          prevList.appendChild(pElement);\n        } else if (isNOU(prevList)) {\n          temp = createElement(collection[index].listType);\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n          prevList = createElement('li');\n          prevList.appendChild(pElement);\n          temp.appendChild(prevList);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n          root.appendChild(temp);\n        } else {\n          temp = createElement(collection[index].listType);\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n          prevList.parentElement.parentElement.appendChild(temp);\n          prevList = createElement('li');\n          prevList.appendChild(pElement);\n          temp.appendChild(prevList);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n        }\n      } else if (collection[index].nestedLevel > pLevel) {\n        if (!isNOU(prevList)) {\n          for (var j = 0; j < collection[index].nestedLevel - pLevel; j++) {\n            prevList.appendChild(temp = createElement(collection[index].listType));\n            prevList = createElement('li');\n            if (j !== collection[index].nestedLevel - pLevel - 1 && collection[index].nestedLevel - pLevel > 1) {\n              prevList.style.listStyleType = 'none';\n            }\n            temp.appendChild(prevList);\n          }\n          prevList.appendChild(pElement);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n        } else {\n          if (collection[index].nestedLevel > pLevel && isNormalList) {\n            var initialNode = createElement(collection[index].listType);\n            prevList = createElement('li');\n            initialNode.appendChild(prevList);\n            initialNode.style.listStyleType = 'none';\n            for (var j = 0; j < collection[index].nestedLevel - 1; j++) {\n              prevList.appendChild(temp = createElement(collection[index].listType));\n              prevList = createElement('li');\n              temp.appendChild(prevList);\n              temp.style.listStyleType = 'none';\n            }\n            prevList.appendChild(pElement);\n            root.appendChild(initialNode);\n            temp.setAttribute('level', collection[index].nestedLevel.toString());\n            temp.style.listStyleType = collection[index].listStyleTypeName;\n          } else {\n            root.appendChild(temp = createElement(collection[index].listType));\n            prevList = createElement('li');\n            prevList.appendChild(pElement);\n            temp.appendChild(prevList);\n            temp.setAttribute('level', collection[index].nestedLevel.toString());\n            temp.style.listStyleType = collection[index].listStyleTypeName;\n          }\n        }\n      } else if (collection[index].nestedLevel === 1) {\n        if (root.lastChild.tagName.toLowerCase() === collection[index].listType) {\n          temp = root.lastChild;\n        } else {\n          root.appendChild(temp = createElement(collection[index].listType));\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n        }\n        prevList = createElement('li');\n        prevList.appendChild(pElement);\n        temp.appendChild(prevList);\n        temp.setAttribute('level', collection[index].nestedLevel.toString());\n      } else {\n        elem = prevList;\n        while (elem.parentElement) {\n          elem = elem.parentElement;\n          if (elem.attributes.getNamedItem('level')) {\n            // eslint-disable-next-line\n            if (parseInt(elem.attributes.getNamedItem('level').textContent, null) === collection[index].nestedLevel) {\n              prevList = createElement('li');\n              prevList.appendChild(pElement);\n              elem.appendChild(prevList);\n              break;\n              // eslint-disable-next-line\n            } else if (collection[index].nestedLevel > parseInt(elem.attributes.getNamedItem('level').textContent, null)) {\n              elem.appendChild(temp = createElement(collection[index].listType));\n              prevList = createElement('li');\n              prevList.appendChild(pElement);\n              temp.appendChild(prevList);\n              temp.setAttribute('level', collection[index].nestedLevel.toString());\n              temp.style.listStyleType = collection[index].listStyleTypeName;\n              break;\n            }\n          }\n          continue;\n        }\n      }\n      prevList.setAttribute('class', collection[index].class);\n      prevList.setAttribute('style', !isNOU(collection[index].listStyle) ? collection[index].listStyle : '');\n      pLevel = collection[index].nestedLevel;\n      listCount++;\n      if (!isNOU(collection[index].start)) {\n        temp.setAttribute('start', collection[index].start.toString());\n      }\n    }\n    return root;\n  };\n  MsWordPaste.prototype.getListContent = function (elem) {\n    var pushContent = '';\n    var firstChild = elem.firstElementChild;\n    if (firstChild.textContent.trim() === '' && !isNOU(firstChild.firstElementChild) && firstChild.firstElementChild.nodeName === 'IMG') {\n      pushContent = elem.innerHTML.trim();\n      this.listContents.push('');\n      this.listContents.push(pushContent);\n    } else {\n      //Add to support separate list which looks like same list and also to add all tags as it is inside list\n      if (firstChild.childNodes.length > 0) {\n        var listIgnoreTag = firstChild.querySelectorAll('[style*=\"mso-list\"]');\n        for (var i = 0; i < listIgnoreTag.length; i++) {\n          listIgnoreTag[i].setAttribute('style', listIgnoreTag[i].getAttribute('style').replace(/\\n/g, ''));\n        }\n        var listOrder = firstChild.querySelector('span[style=\"mso-list:Ignore\"]');\n        if (!isNOU(listOrder)) {\n          this.listContents.push(listOrder.textContent.trim());\n          detach(listOrder);\n          this.removingComments(elem);\n          this.removeUnwantedElements(elem);\n        }\n      }\n    }\n    this.listContents.push(elem.innerHTML);\n  };\n  MsWordPaste.prototype.processMargin = function (element) {\n    var liChildren = element.querySelectorAll('li');\n    if (liChildren.length > 0) {\n      for (var i = 0; i < liChildren.length; i++) {\n        if (!isNOU(liChildren[i].style.marginLeft)) {\n          liChildren[i].style.marginLeft = '';\n        }\n      }\n    }\n    var tableChildren = element.querySelectorAll('table');\n    if (tableChildren.length > 0) {\n      for (var i = 0; i < tableChildren.length; i++) {\n        if (!isNOU(tableChildren[i].style.marginLeft) && tableChildren[i].style.marginLeft.indexOf('-') >= 0) {\n          tableChildren[i].style.marginLeft = '';\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.removeEmptyAnchorTag = function (element) {\n    var removableElement = element.querySelectorAll('a:not([href])');\n    for (var j = removableElement.length - 1; j >= 0; j--) {\n      var parentElem = removableElement[j].parentNode;\n      while (removableElement[j].firstChild) {\n        parentElem.insertBefore(removableElement[j].firstChild, removableElement[j]);\n      }\n      parentElem.removeChild(removableElement[j]);\n    }\n  };\n  MsWordPaste.prototype.findSource = function (element) {\n    var metaNodes = element.querySelectorAll('meta');\n    for (var i = 0; i < metaNodes.length; i++) {\n      var metaNode = metaNodes[i];\n      var content = metaNode.getAttribute('content');\n      var name_1 = metaNode.getAttribute('name');\n      if (name_1 && name_1.toLowerCase().indexOf('generator') >= 0 && content && content.toLowerCase().indexOf('microsoft') >= 0) {\n        for (var j = 0; j < PASTE_SOURCE.length; j++) {\n          if (content.toLowerCase().indexOf(PASTE_SOURCE[j]) >= 0) {\n            return PASTE_SOURCE[j];\n          }\n        }\n      }\n    }\n    return 'html';\n  };\n  return MsWordPaste;\n}();\nexport { MsWordPaste };","map":{"version":3,"names":["EVENTS","createElement","isNullOrUndefined","isNOU","detach","PASTE_SOURCE","MsWordPaste","parent","olData","ulData","ignorableNodes","blockNode","borderStyle","upperRomanNumber","lowerRomanNumber","lowerGreekNumber","removableElements","listContents","cropImageDimensions","addEventListener","prototype","observer","on","MS_WORD_CLEANUP_PLUGIN","wordCleanup","e","wordPasteStyleConfig","allowedStylePropertiesArray","listNodes","tempHTMLContent","args","clipboardData","getData","rtfData","elm","setAttribute","innerHTML","patern","patern2","patern3","pattern4","test","source","findSource","imageConversion","replace","addListClass","cleanUp","parentElement","tagName","listConverter","cleanList","styleCorrection","removingComments","removeUnwantedElements","removeEmptyElements","removeEmptyAnchorTag","breakLineAddition","removeClassName","addTableBorderClass","processMargin","callBack","listTag","replacableElem","querySelectorAll","j","length","parentElem","parentNode","firstChild","insertBefore","closestListElem","findClosestListElem","insertAfter","newNode","referenceNode","nextSibling","listElem","closest","allNodes","index","getAttribute","indexOf","className","toLowerCase","charAt","classList","add","allTableElm","hasTableBorder","i","checkVShape","imgElem","imgSrc","base64Src","imgName","linkRegex","RegExp","push","split","hexValue","hexConversion","base64Data","hex","convertToBase64","isCroppedImage","goalWidth","goalHeight","cropLength","cropTop","cropR","cropB","match","removeAttribute","nodeName","firstElementChild","src","imgElement","byteArr","conHexStringToBytes","base64String","conBytesToBase64","base64","type","base64Str","base64Char","byteArrLen","array3","slice","array3length","array4","parseInt","substr","picHead","pic","fullImg","imgType","result","extractCropValue","crop","exec","elmWithClass","allElements","children","previousElementSibling","nextElementSibling","detachableElement","findDetachElem","brElement","hasNbsp","textContent","element","removableElement","trim","querySelector","styleElm","innerElement","regExpStartElem","regExpEndElem","findDetachEmptyElem","hasParentWithClass","currentParentElem","contains","emptyElements","lineWithDiv","style","borderBottom","styleElement","styles","styleClassObject_1","findStyleObject","keys","Object","values","map","key","removeUnwantedStyle","filterStyles","resultElem","fromClass","getElementsByClassName","getElementsByTagName","styleProperty","valueSplit","k","splice","changedValue","join","listClass","olULElems","marginLeft","classStyle","parseFloat","inlineStyle","elmWithStyles","elemStyleProperty","styleValue","styleValues","styleClassObject","tempStyle","classNameCollection","stylesCollection","classNames","node","tempCleaner","prevflagState","nodeType","level","data","collection","content","stNode","currentListStyle","makeConversion","getListContent","listStyleType","startAttr","styleMarginLeft","getlistStyleType","startString","listTypes","isNaN","charCodeAt","tempNode","currentClassName","textIndent","listType","nestedLevel","class","listStyle","listStyleTypeName","start","shift","elemColl","temp1","childNodes","remove","listContent","currentListClass","charCode","root","temp","pLevel","prevList","listCount","elem","isNormalList","pElement","appendChild","toString","initialNode","lastChild","attributes","getNamedItem","pushContent","listIgnoreTag","listOrder","liChildren","tableChildren","removeChild","metaNodes","metaNode","name_1"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/ms-word-clean-up.js"],"sourcesContent":["import * as EVENTS from '../../common/constant';\nimport { createElement, isNullOrUndefined as isNOU, detach } from '@syncfusion/ej2-base';\nimport { PASTE_SOURCE } from '../base/constant';\n/**\n * PasteCleanup for MsWord content\n *\n * @hidden\n\n */\nvar MsWordPaste = /** @class */ (function () {\n    function MsWordPaste(parent) {\n        this.olData = [\n            'decimal',\n            'lower-alpha',\n            'lower-roman',\n            'upper-alpha',\n            'upper-roman',\n            'lower-greek'\n        ];\n        this.ulData = [\n            'disc',\n            'square',\n            'circle',\n            'disc',\n            'square',\n            'circle'\n        ];\n        this.ignorableNodes = ['A', 'APPLET', 'B', 'BLOCKQUOTE', 'BR',\n            'BUTTON', 'CENTER', 'CODE', 'COL', 'COLGROUP', 'DD', 'DEL', 'DFN', 'DIR', 'DIV',\n            'DL', 'DT', 'EM', 'FIELDSET', 'FONT', 'FORM', 'FRAME', 'FRAMESET', 'H1', 'H2',\n            'H3', 'H4', 'H5', 'H6', 'HR', 'I', 'IMG', 'IFRAME', 'INPUT', 'INS', 'LABEL',\n            'LI', 'OL', 'OPTION', 'P', 'PARAM', 'PRE', 'Q', 'S', 'SELECT', 'SPAN', 'STRIKE',\n            'STRONG', 'SUB', 'SUP', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH',\n            'THEAD', 'TITLE', 'TR', 'TT', 'U', 'UL'];\n        this.blockNode = ['div', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n            'address', 'blockquote', 'button', 'center', 'dd', 'dir', 'dl', 'dt', 'fieldset',\n            'frameset', 'hr', 'iframe', 'isindex', 'li', 'map', 'menu', 'noframes', 'noscript',\n            'object', 'ol', 'pre', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul',\n            'header', 'article', 'nav', 'footer', 'section', 'aside', 'main', 'figure', 'figcaption'];\n        this.borderStyle = ['border-top', 'border-right', 'border-bottom', 'border-left'];\n        this.upperRomanNumber = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX',\n            'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX'];\n        this.lowerRomanNumber = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix',\n            'x', 'xi', 'xii', 'xiii', 'xiv', 'xv', 'xvi', 'xvii', 'xviii', 'xix', 'xx'];\n        this.lowerGreekNumber = ['α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ', 'ι', 'κ', 'λ',\n            'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω'];\n        this.removableElements = ['o:p', 'style'];\n        this.listContents = [];\n        this.cropImageDimensions = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    MsWordPaste.prototype.addEventListener = function () {\n        this.parent.observer.on(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup, this);\n    };\n    MsWordPaste.prototype.wordCleanup = function (e) {\n        var wordPasteStyleConfig = !isNOU(e.allowedStylePropertiesArray) ? e.allowedStylePropertiesArray : [];\n        var listNodes = [];\n        var tempHTMLContent = e.args.clipboardData.getData('text/HTML');\n        var rtfData = e.args.clipboardData.getData('text/rtf');\n        var elm = createElement('p');\n        elm.setAttribute('id', 'MSWord-Content');\n        elm.innerHTML = tempHTMLContent;\n        var patern = /class='?Mso|style='[^ ]*\\bmso-/i;\n        var patern2 = /class=\"?Mso|style=\"[^ ]*\\bmso-/i;\n        var patern3 = /(class=\"?Mso|class='?Mso|class=\"?Xl|class='?Xl|class=Xl|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument)/gi;\n        var pattern4 = /style='mso-width-source:/i;\n        if (patern.test(tempHTMLContent) || patern2.test(tempHTMLContent) || patern3.test(tempHTMLContent) ||\n            pattern4.test(tempHTMLContent)) {\n            var source = this.findSource(elm);\n            this.imageConversion(elm, rtfData);\n            tempHTMLContent = tempHTMLContent.replace(/<img[^>]+>/i, '');\n            this.addListClass(elm);\n            listNodes = this.cleanUp(elm, listNodes);\n            if (!isNOU(listNodes[0]) && listNodes[0].parentElement.tagName !== 'UL' &&\n                listNodes[0].parentElement.tagName !== 'OL') {\n                this.listConverter(listNodes);\n            }\n            this.cleanList(elm, 'UL');\n            this.cleanList(elm, 'OL');\n            this.styleCorrection(elm, wordPasteStyleConfig);\n            this.removingComments(elm);\n            this.removeUnwantedElements(elm);\n            this.removeEmptyElements(elm);\n            this.removeEmptyAnchorTag(elm);\n            this.breakLineAddition(elm);\n            this.removeClassName(elm);\n            if (pattern4.test(tempHTMLContent)) {\n                this.addTableBorderClass(elm);\n            }\n            this.processMargin(elm);\n            e.callBack(elm.innerHTML, this.cropImageDimensions, source);\n        }\n        else {\n            e.callBack(elm.innerHTML);\n        }\n    };\n    MsWordPaste.prototype.cleanList = function (elm, listTag) {\n        var replacableElem = elm.querySelectorAll(listTag + ' div');\n        for (var j = replacableElem.length - 1; j >= 0; j--) {\n            var parentElem = replacableElem[j].parentNode;\n            while (replacableElem[j].firstChild) {\n                parentElem.insertBefore(replacableElem[j].firstChild, replacableElem[j]);\n            }\n            var closestListElem = this.findClosestListElem(replacableElem[j]);\n            if (closestListElem) {\n                this.insertAfter(replacableElem[j], closestListElem);\n            }\n        }\n    };\n    MsWordPaste.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    MsWordPaste.prototype.findClosestListElem = function (listElem) {\n        var closestListElem;\n        while (!isNOU(listElem)) {\n            listElem = !isNOU(listElem.closest('ul')) && listElem.tagName !== 'UL' ?\n                listElem.closest('ul') : (listElem.tagName !== 'OL' ? listElem.closest('ol') : null);\n            closestListElem = !isNOU(listElem) ? listElem : closestListElem;\n        }\n        return closestListElem;\n    };\n    MsWordPaste.prototype.addListClass = function (elm) {\n        var allNodes = elm.querySelectorAll('*');\n        for (var index = 0; index < allNodes.length; index++) {\n            if (!isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').replace(/ /g, '').replace('\\n', '').indexOf('mso-list:l') >= 0 &&\n                allNodes[index].className.toLowerCase().indexOf('msolistparagraph') === -1 &&\n                allNodes[index].tagName.charAt(0) !== 'H' && allNodes[index].tagName !== 'LI' &&\n                allNodes[index].tagName !== 'OL' && allNodes[index].tagName !== 'UL') {\n                allNodes[index].classList.add('msolistparagraph');\n            }\n        }\n    };\n    MsWordPaste.prototype.addTableBorderClass = function (elm) {\n        var allTableElm = elm.querySelectorAll('table');\n        var hasTableBorder = false;\n        for (var i = 0; i < allTableElm.length; i++) {\n            for (var j = 0; j < this.borderStyle.length; j++) {\n                if (allTableElm[i].innerHTML.indexOf(this.borderStyle[j]) >= 0) {\n                    hasTableBorder = true;\n                    break;\n                }\n            }\n            if (hasTableBorder) {\n                allTableElm[i].classList.add('e-rte-table-border');\n                hasTableBorder = false;\n            }\n        }\n    };\n    MsWordPaste.prototype.imageConversion = function (elm, rtfData) {\n        this.checkVShape(elm);\n        var imgElem = elm.querySelectorAll('img');\n        for (var i = 0; i < imgElem.length; i++) {\n            if (!isNOU(imgElem[i].getAttribute('v:shapes')) &&\n                imgElem[i].getAttribute('v:shapes').indexOf('Picture') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('圖片') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('Grafik') < 0 &&\n                imgElem[i].getAttribute('v:shapes').toLowerCase().indexOf('image') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('Graphic') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('_x0000_s') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('_x0000_i') < 0) {\n                detach(imgElem[i]);\n            }\n        }\n        imgElem = elm.querySelectorAll('img');\n        var imgSrc = [];\n        var base64Src = [];\n        var imgName = [];\n        // eslint-disable-next-line\n        var linkRegex = new RegExp(/([^\\S]|^)(((https?\\:\\/\\/)|(www\\.))(\\S+))/gi);\n        if (imgElem.length > 0) {\n            for (var i = 0; i < imgElem.length; i++) {\n                imgSrc.push(imgElem[i].getAttribute('src'));\n                imgName.push(imgElem[i].getAttribute('src').split('/')[imgElem[i].getAttribute('src').split('/').length - 1].split('.')[0]);\n            }\n            var hexValue = this.hexConversion(rtfData);\n            for (var i = 0; i < hexValue.length; i++) {\n                base64Src.push({\n                    base64Data: !isNOU(hexValue[i].hex) ? this.convertToBase64(hexValue[i]) : null,\n                    isCroppedImage: hexValue[i].isCroppedImage\n                });\n                if (hexValue[i].isCroppedImage) {\n                    this.cropImageDimensions.push({\n                        goalWidth: hexValue[i].goalWidth,\n                        goalHeight: hexValue[i].goalHeight,\n                        cropLength: hexValue[i].cropLength,\n                        cropTop: hexValue[i].cropTop,\n                        cropR: hexValue[i].cropR,\n                        cropB: hexValue[i].cropB\n                    });\n                }\n            }\n            for (var i = 0; i < imgElem.length; i++) {\n                if (imgSrc[i].match(linkRegex)) {\n                    imgElem[i].setAttribute('src', imgSrc[i]);\n                }\n                else {\n                    if (!isNOU(base64Src[i]) && !isNOU(base64Src[i].base64Data)) {\n                        imgElem[i].setAttribute('src', base64Src[i].base64Data);\n                    }\n                    else {\n                        imgElem[i].removeAttribute('src');\n                        imgElem[i].setAttribute('alt', 'Unsupported file format');\n                    }\n                    if (!isNOU(base64Src[i]) && base64Src[i].isCroppedImage) {\n                        imgElem[i].classList.add('e-img-cropped');\n                    }\n                }\n                imgElem[i].setAttribute('id', 'msWordImg-' + imgName[i]);\n            }\n        }\n    };\n    MsWordPaste.prototype.checkVShape = function (elm) {\n        var allNodes = elm.querySelectorAll('*');\n        for (var i = 0; i < allNodes.length; i++) {\n            switch (allNodes[i].nodeName) {\n                case 'V:SHAPETYPE':\n                    detach(allNodes[i]);\n                    break;\n                case 'V:SHAPE':\n                    if (allNodes[i].firstElementChild.nodeName === 'V:IMAGEDATA') {\n                        var src = allNodes[i].firstElementChild.getAttribute('src');\n                        var imgElement = createElement('img');\n                        imgElement.setAttribute('src', src);\n                        allNodes[i].parentElement.insertBefore(imgElement, allNodes[i]);\n                        detach(allNodes[i]);\n                    }\n                    break;\n            }\n        }\n    };\n    MsWordPaste.prototype.convertToBase64 = function (hexValue) {\n        var byteArr = this.conHexStringToBytes(hexValue.hex);\n        var base64String = this.conBytesToBase64(byteArr);\n        var base64 = hexValue.type ? 'data:' + hexValue.type + ';base64,' + base64String : null;\n        return base64;\n    };\n    MsWordPaste.prototype.conBytesToBase64 = function (byteArr) {\n        var base64Str = '';\n        var base64Char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n        var byteArrLen = byteArr.length;\n        for (var i = 0; i < byteArrLen; i += 3) {\n            var array3 = byteArr.slice(i, i + 3);\n            var array3length = array3.length;\n            var array4 = [];\n            if (array3length < 3) {\n                for (var j = array3length; j < 3; j++) {\n                    array3[j] = 0;\n                }\n            }\n            array4[0] = (array3[0] & 0xFC) >> 2;\n            array4[1] = ((array3[0] & 0x03) << 4) | (array3[1] >> 4);\n            array4[2] = ((array3[1] & 0x0F) << 2) | ((array3[2] & 0xC0) >> 6);\n            array4[3] = array3[2] & 0x3F;\n            for (var j = 0; j < 4; j++) {\n                if (j <= array3length) {\n                    base64Str += base64Char.charAt(array4[j]);\n                }\n                else {\n                    base64Str += '=';\n                }\n            }\n        }\n        return base64Str;\n    };\n    MsWordPaste.prototype.conHexStringToBytes = function (hex) {\n        var byteArr = [];\n        var byteArrLen = hex.length / 2;\n        for (var i = 0; i < byteArrLen; i++) {\n            byteArr.push(parseInt(hex.substr(i * 2, 2), 16));\n        }\n        return byteArr;\n    };\n    MsWordPaste.prototype.hexConversion = function (rtfData) {\n        // eslint-disable-next-line\n        var picHead = /\\{\\\\pict[\\s\\S]+?\\\\bliptag\\-?\\d+(\\\\blipupi\\-?\\d+)?(\\{\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s\\}]*?/;\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        var pic = new RegExp('(?:(' + picHead.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g');\n        var fullImg = rtfData.match(pic);\n        var imgType;\n        var result = [];\n        if (!isNOU(fullImg)) {\n            for (var i = 0; i < fullImg.length; i++) {\n                var isCroppedImage = false;\n                var goalWidth = 0;\n                var goalHeight = 0;\n                var cropLength = 0;\n                var cropTop = 0;\n                var cropR = 0;\n                var cropB = 0;\n                if (picHead.test(fullImg[i])) {\n                    if (fullImg[i].indexOf('\\\\pngblip') !== -1) {\n                        imgType = 'image/png';\n                    }\n                    else if (fullImg[i].indexOf('\\\\jpegblip') !== -1) {\n                        imgType = 'image/jpeg';\n                    }\n                    else if (fullImg[i].indexOf('\\\\picprop') !== -1) {\n                        imgType = null;\n                    }\n                    else {\n                        continue;\n                    }\n                    isCroppedImage = ((this.extractCropValue('cropl', fullImg[i]) > 0 &&\n                        this.extractCropValue('cropt', fullImg[i]) > 0) ||\n                        this.extractCropValue('cropr', fullImg[i]) > 0 ||\n                        this.extractCropValue('cropb', fullImg[i])) ? true : false;\n                    if (isCroppedImage) {\n                        goalWidth = this.extractCropValue('wgoal', fullImg[i]);\n                        goalHeight = this.extractCropValue('hgoal', fullImg[i]);\n                        cropLength = this.extractCropValue('cropl', fullImg[i]);\n                        cropTop = this.extractCropValue('cropt', fullImg[i]);\n                        cropR = this.extractCropValue('cropr', fullImg[i]);\n                        cropB = this.extractCropValue('cropb', fullImg[i]);\n                    }\n                    result.push({\n                        hex: imgType ? fullImg[i].replace(picHead, '').replace(/[^\\da-fA-F]/g, '') : null,\n                        type: imgType,\n                        isCroppedImage: isCroppedImage,\n                        goalWidth: goalWidth,\n                        goalHeight: goalHeight,\n                        cropLength: cropLength,\n                        cropTop: cropTop,\n                        cropR: cropR,\n                        cropB: cropB\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    MsWordPaste.prototype.extractCropValue = function (crop, rtfData) {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        var result = new RegExp('\\\\\\\\pic' + crop + '(\\\\-?\\\\d+)\\\\\\\\').exec(rtfData.replace(/\\r\\n\\\\/g, '\\\\').replace(/\\n/g, '\\\\'))[1];\n        return parseInt(result, 10);\n    };\n    MsWordPaste.prototype.removeClassName = function (elm) {\n        var elmWithClass = elm.querySelectorAll('*[class]:not(.e-img-cropped)');\n        for (var i = 0; i < elmWithClass.length; i++) {\n            elmWithClass[i].removeAttribute('class');\n        }\n    };\n    MsWordPaste.prototype.breakLineAddition = function (elm) {\n        var allElements = elm.querySelectorAll('*');\n        for (var i = 0; i < allElements.length; i++) {\n            if (allElements[i].children.length === 0 && allElements[i].innerHTML === '&nbsp;' &&\n                (allElements[i].innerHTML === '&nbsp;' && !allElements[i].closest('li')) &&\n                !allElements[i].closest('td') && (allElements[i].nodeName !== 'SPAN' ||\n                allElements[i].nodeName === 'SPAN' && (isNOU(allElements[i].previousElementSibling) &&\n                    isNOU(allElements[i].nextElementSibling)))) {\n                var detachableElement = this.findDetachElem(allElements[i]);\n                var brElement = createElement('br');\n                var hasNbsp = detachableElement.textContent.length > 0 && detachableElement.textContent.match(/\\u00a0/g)\n                    && detachableElement.textContent.match(/\\u00a0/g).length > 0;\n                if (!hasNbsp && !isNOU(detachableElement.parentElement)) {\n                    detachableElement.parentElement.insertBefore(brElement, detachableElement);\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.findDetachElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement) &&\n            element.parentElement.textContent.trim() === '' && element.parentElement.tagName !== 'TD' &&\n            isNOU(element.parentElement.querySelector('img'))) {\n            removableElement = this.findDetachElem(element.parentElement);\n        }\n        else {\n            removableElement = element;\n        }\n        return removableElement;\n    };\n    MsWordPaste.prototype.removeUnwantedElements = function (elm) {\n        var styleElm = elm.querySelector('style');\n        if (!isNOU(styleElm)) {\n            detach(styleElm);\n        }\n        var innerElement = elm.innerHTML;\n        for (var i = 0; i < this.removableElements.length; i++) {\n            // eslint-disable-next-line security/detect-non-literal-regexp\n            var regExpStartElem = new RegExp('<' + this.removableElements[i] + '>', 'g');\n            // eslint-disable-next-line security/detect-non-literal-regexp\n            var regExpEndElem = new RegExp('</' + this.removableElements[i] + '>', 'g');\n            innerElement = innerElement.replace(regExpStartElem, '');\n            innerElement = innerElement.replace(regExpEndElem, '');\n        }\n        elm.innerHTML = innerElement;\n        elm.querySelectorAll(':empty');\n    };\n    MsWordPaste.prototype.findDetachEmptyElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g)\n                && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n            if (!hasNbsp && element.parentElement.textContent.trim() === '' &&\n                element.parentElement.getAttribute('id') !== 'MSWord-Content' &&\n                !(this.hasParentWithClass(element, 'MsoListParagraph')) &&\n                isNOU(element.parentElement.querySelector('img'))) {\n                removableElement = this.findDetachEmptyElem(element.parentElement);\n            }\n            else {\n                removableElement = element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    MsWordPaste.prototype.hasParentWithClass = function (element, className) {\n        var currentParentElem = element.parentElement;\n        while (!isNOU(currentParentElem)) {\n            if (currentParentElem.classList.contains(className)) {\n                return true;\n            }\n            currentParentElem = currentParentElem.parentElement;\n        }\n        return false;\n    };\n    MsWordPaste.prototype.removeEmptyElements = function (element) {\n        var emptyElements = element.querySelectorAll(':empty');\n        for (var i = 0; i < emptyElements.length; i++) {\n            if (!isNOU(emptyElements[i].closest('td')) &&\n                !isNOU(emptyElements[i].closest('td').querySelector('.MsoNormal'))) {\n                emptyElements[i].innerHTML = '-';\n            }\n            var lineWithDiv = true;\n            if (emptyElements[i].tagName === 'DIV') {\n                lineWithDiv = emptyElements[i].style.borderBottom === 'none' ||\n                    emptyElements[i].style.borderBottom === '' ? true : false;\n            }\n            if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' &&\n                emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' &&\n                emptyElements[i].tagName !== 'HR' && lineWithDiv) {\n                var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.styleCorrection = function (elm, wordPasteStyleConfig) {\n        var styleElement = elm.querySelectorAll('style');\n        if (styleElement.length > 0) {\n            var styles = styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n            var styleClassObject_1 = !isNOU(styles) ? this.findStyleObject(styles) : null;\n            var keys = Object.keys(styleClassObject_1);\n            var values = keys.map(function (key) {\n                return styleClassObject_1[\"\" + key];\n            });\n            values = this.removeUnwantedStyle(values, wordPasteStyleConfig);\n            this.filterStyles(elm, wordPasteStyleConfig);\n            var resultElem = void 0;\n            var fromClass = false;\n            for (var i = 0; i < keys.length; i++) {\n                if (keys[i].split('.')[0] === '') {\n                    resultElem = elm.getElementsByClassName(keys[i].split('.')[1]);\n                    fromClass = true;\n                }\n                else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') >= 0) {\n                    continue;\n                }\n                else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') < 0) {\n                    resultElem = elm.getElementsByTagName(keys[i]);\n                }\n                else {\n                    resultElem = elm.querySelectorAll(keys[i]);\n                }\n                for (var j = 0; j < resultElem.length; j++) {\n                    if (resultElem[j].closest('li') && keys[i] === 'p') {\n                        continue;\n                    }\n                    var styleProperty = resultElem[j].getAttribute('style');\n                    if (!isNOU(styleProperty) && styleProperty.trim() !== '') {\n                        var valueSplit = values[i].split(';');\n                        if (!fromClass) {\n                            for (var k = 0; k < valueSplit.length; k++) {\n                                if (styleProperty.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                                    valueSplit.splice(k, 1);\n                                    k--;\n                                }\n                            }\n                        }\n                        var changedValue = styleProperty + valueSplit.join(';') + ';';\n                        resultElem[j].setAttribute('style', changedValue);\n                    }\n                    else {\n                        values[i] = values[i].replace(/text-indent:-(.*?)(?=;|$)/gm, '');\n                        resultElem[j].setAttribute('style', values[i]);\n                    }\n                }\n                fromClass = false;\n            }\n            var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n            for (var i = 0; i < listClass.length; i++) {\n                if (keys.indexOf('li.' + listClass[i]) > -1) {\n                    var olULElems = elm.querySelectorAll('ol.' + listClass[i] + ', ul.' + listClass[i]);\n                    for (var j = 0; j < olULElems.length; j++) {\n                        var styleProperty = olULElems[j].getAttribute('style');\n                        if (!isNOU(styleProperty) && styleProperty.trim() !== '' && olULElems[j].style.marginLeft !== '') {\n                            var valueSplit = values[keys.indexOf('li.' + listClass[i])].split(';');\n                            for (var k = 0; k < valueSplit.length; k++) {\n                                if ('margin-left'.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                                    if (!isNOU(valueSplit[k].split(':')[1]) &&\n                                        valueSplit[k].split(':')[1].indexOf('in') >= 0 &&\n                                        olULElems[j].style.marginLeft.indexOf('in') >= 0) {\n                                        var classStyle = parseFloat(valueSplit[k].split(':')[1].split('in')[0]);\n                                        var inlineStyle = parseFloat(olULElems[j].style.marginLeft.split('in')[0]);\n                                        olULElems[j].style.marginLeft = (inlineStyle - classStyle) + 'in';\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.filterStyles = function (elm, wordPasteStyleConfig) {\n        var elmWithStyles = elm.querySelectorAll('*[style]');\n        for (var i = 0; i < elmWithStyles.length; i++) {\n            var elemStyleProperty = elmWithStyles[i].getAttribute('style').split(';');\n            var styleValue = '';\n            for (var j = 0; j < elemStyleProperty.length; j++) {\n                if (wordPasteStyleConfig.indexOf(elemStyleProperty[j].split(':')[0].trim()) >= 0) {\n                    styleValue += elemStyleProperty[j] + ';';\n                }\n            }\n            elmWithStyles[i].setAttribute('style', styleValue);\n        }\n    };\n    MsWordPaste.prototype.removeUnwantedStyle = function (values, wordPasteStyleConfig) {\n        for (var i = 0; i < values.length; i++) {\n            var styleValues = values[i].split(';');\n            values[i] = '';\n            for (var j = 0; j < styleValues.length; j++) {\n                if (wordPasteStyleConfig.indexOf(styleValues[j].split(':')[0]) >= 0) {\n                    values[i] += styleValues[j] + ';';\n                }\n            }\n        }\n        return values;\n    };\n    MsWordPaste.prototype.findStyleObject = function (styles) {\n        var styleClassObject = {};\n        for (var i = 0; i < styles.length; i++) {\n            var tempStyle = styles[i];\n            var classNameCollection = tempStyle.replace(/([\\S ]+\\s+){[\\s\\S]+?}/gi, '$1');\n            var stylesCollection = tempStyle.replace(/[\\S ]+\\s+{([\\s\\S]+?)}/gi, '$1');\n            classNameCollection = classNameCollection.replace(/^[\\s]|[\\s]$/gm, '');\n            stylesCollection = stylesCollection.replace(/^[\\s]|[\\s]$/gm, '');\n            classNameCollection = classNameCollection.replace(/\\n|\\r|\\n\\r/g, '');\n            stylesCollection = stylesCollection.replace(/\\n|\\r|\\n\\r/g, '');\n            for (var classNames = classNameCollection.split(', '), j = 0; j < classNames.length; j++) {\n                styleClassObject[classNames[j]] = stylesCollection;\n            }\n        }\n        return styleClassObject;\n    };\n    MsWordPaste.prototype.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    MsWordPaste.prototype.cleanUp = function (node, listNodes) {\n        var tempCleaner = [];\n        var prevflagState;\n        var allNodes = node.querySelectorAll('*');\n        for (var index = 0; index < allNodes.length; index++) {\n            if (this.ignorableNodes.indexOf(allNodes[index].nodeName) === -1 ||\n                (allNodes[index].nodeType === 3 && allNodes[index].textContent.trim() === '')) {\n                tempCleaner.push(allNodes[index]);\n                continue;\n            }\n            else if (allNodes[index].className &&\n                allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 &&\n                !isNOU(allNodes[index].getAttribute('style')) &&\n                allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n                if (allNodes[index].className.indexOf('MsoListParagraphCxSpFirst') >= 0 && listNodes.length > 0 &&\n                    listNodes[listNodes.length - 1] !== null) {\n                    listNodes.push(null);\n                }\n                listNodes.push(allNodes[index]);\n            }\n            if (prevflagState && (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) &&\n                !(allNodes[index].className &&\n                    allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) &&\n                    allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0)) {\n                listNodes.push(null);\n            }\n            if (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) {\n                if (allNodes[index].className &&\n                    allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) &&\n                    allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n                    prevflagState = true;\n                }\n                else {\n                    prevflagState = false;\n                }\n            }\n        }\n        if (listNodes.length && (listNodes[listNodes.length - 1] !== null)) {\n            listNodes.push(null);\n        }\n        return listNodes;\n    };\n    MsWordPaste.prototype.listConverter = function (listNodes) {\n        var level;\n        var data = [];\n        var collection = [];\n        var content = '';\n        var stNode;\n        var currentListStyle = '';\n        for (var i = 0; i < listNodes.length; i++) {\n            if (listNodes[i] === null) {\n                data.push({ content: this.makeConversion(collection), node: listNodes[i - 1] });\n                collection = [];\n                continue;\n            }\n            if (listNodes[i].getAttribute('style') && listNodes[i].getAttribute('style').indexOf('mso-outline-level') !== -1) {\n                listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('mso-outline-level', 'mso-outline'));\n            }\n            content = listNodes[i].getAttribute('style');\n            if (content && content.indexOf('level') !== -1) {\n                // eslint-disable-next-line\n                level = parseInt(content.charAt(content.indexOf('level') + 5), null);\n            }\n            else {\n                level = 1;\n            }\n            this.listContents = [];\n            this.getListContent(listNodes[i]);\n            var type = void 0;\n            var listStyleType = void 0;\n            var startAttr = void 0;\n            var styleMarginLeft = void 0;\n            if (!isNOU(this.listContents[0])) {\n                type = this.listContents[0].trim().length > 1 ? 'ol' : 'ul';\n                listStyleType = this.getlistStyleType(this.listContents[0], type);\n                if (type === 'ol' && (i === 0 || listNodes[i - 1] === null)) {\n                    var startString = this.listContents[0].split('.')[0];\n                    var listTypes = ['A', 'a', 'I', 'i', 'α', '1', '1-']; // Add '1-' for rare list type.\n                    if (listTypes.indexOf(startString) === -1) {\n                        if (listStyleType === 'decimal') {\n                            // Bug in getlistStyleType() list style stype is returned as decimal for nested list with start attribute\n                            if (!isNaN(parseInt(startString, 10))) {\n                                startAttr = parseInt(startString, 10);\n                            }\n                        }\n                        else if (listStyleType === 'upper-alpha') {\n                            startAttr = (startString.split('.')[0].charCodeAt(0) - 64);\n                        }\n                        else if (listStyleType === 'lower-alpha') {\n                            startAttr = (startString.split('.')[0].charCodeAt(0) - 96);\n                        }\n                        else if (listStyleType === 'upper-roman') {\n                            startAttr = this.upperRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n                        }\n                        else if (listStyleType === 'lower-roman') {\n                            startAttr = this.lowerRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n                        }\n                        else if (listStyleType === 'lower-greek') {\n                            startAttr = this.lowerGreekNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n                        }\n                    }\n                    if (listNodes[i].style.marginLeft !== '') {\n                        styleMarginLeft = listNodes[i].style.marginLeft;\n                    }\n                }\n                var tempNode = [];\n                for (var j = 1; j < this.listContents.length; j++) {\n                    tempNode.push(this.listContents[j]);\n                }\n                var currentClassName = void 0;\n                if (!isNOU(listNodes[i].className)) {\n                    currentClassName = listNodes[i].className;\n                }\n                if (!isNOU(listNodes[i].getAttribute('style'))) {\n                    listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('text-align:start;', ''));\n                    listNodes[i].style.textIndent = '';\n                    currentListStyle = listNodes[i].getAttribute('style');\n                }\n                collection.push({\n                    listType: type, content: tempNode, nestedLevel: level, class: currentClassName,\n                    listStyle: currentListStyle, listStyleTypeName: listStyleType, start: startAttr, styleMarginLeft: styleMarginLeft\n                });\n            }\n        }\n        stNode = listNodes.shift();\n        while (stNode) {\n            var elemColl = [];\n            for (var temp1 = 0; temp1 < data.length; temp1++) {\n                if (data[temp1].node === stNode) {\n                    for (var index = 0; index < data[temp1].content.childNodes.length; index++) {\n                        elemColl.push(data[temp1].content.childNodes[index]);\n                    }\n                    for (var index = 0; index < elemColl.length; index++) {\n                        stNode.parentElement.insertBefore(elemColl[index], stNode);\n                    }\n                    break;\n                }\n            }\n            stNode.remove();\n            stNode = listNodes.shift();\n            if (!stNode) {\n                stNode = listNodes.shift();\n            }\n        }\n    };\n    MsWordPaste.prototype.getlistStyleType = function (listContent, type) {\n        var currentListClass;\n        if (type === 'ol') {\n            var charCode = listContent.split('.')[0].charCodeAt(0);\n            switch (true) {\n                case this.upperRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n                    currentListClass = 'upper-roman';\n                    break;\n                case this.lowerRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n                    currentListClass = 'lower-roman';\n                    break;\n                case this.lowerGreekNumber.indexOf(listContent.split('.')[0]) > -1:\n                    currentListClass = 'lower-greek';\n                    break;\n                case (charCode > 64 && charCode < 91):\n                    currentListClass = 'upper-alpha';\n                    break;\n                case (charCode > 96 && charCode < 123):\n                    currentListClass = 'lower-alpha';\n                    break;\n                default:\n                    currentListClass = 'decimal';\n                    break;\n            }\n        }\n        else {\n            switch (listContent.split('.')[0]) {\n                case 'o':\n                    currentListClass = 'circle';\n                    break;\n                case '§':\n                    currentListClass = 'square';\n                    break;\n                default:\n                    currentListClass = 'disc';\n                    break;\n            }\n        }\n        return currentListClass;\n    };\n    MsWordPaste.prototype.makeConversion = function (collection) {\n        var root = createElement('div');\n        var temp;\n        var pLevel = 1;\n        var prevList;\n        var listCount = 0;\n        var elem;\n        for (var index = 0; index < collection.length; index++) {\n            var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n            var isNormalList = false;\n            for (var i = 0; i < listClass.length; i++) {\n                if (listClass[i].indexOf(collection[index].class) >= 0) {\n                    isNormalList = true;\n                    break;\n                }\n            }\n            if (!isNOU(prevList) && index !== 0 &&\n                collection[index - 1].listType !== collection[index].listType &&\n                !isNormalList) {\n                prevList = null;\n            }\n            var pElement = createElement('p', { className: 'MsoNormal' });\n            pElement.innerHTML = collection[index].content.join(' ');\n            if ((collection[index].nestedLevel === 1) && listCount === 0 && collection[index].content) {\n                root.appendChild(temp = createElement(collection[index].listType, { className: collection[index].class }));\n                prevList = createElement('li');\n                prevList.appendChild(pElement);\n                temp.appendChild(prevList);\n                temp.setAttribute('level', collection[index].nestedLevel.toString());\n                temp.style.marginLeft = collection[index].styleMarginLeft;\n                temp.style.listStyleType = collection[index].listStyleTypeName;\n            }\n            else if (collection[index].nestedLevel === pLevel) {\n                if (!isNOU(prevList) && !isNOU(prevList.parentElement)\n                    && prevList.parentElement.tagName.toLowerCase() === collection[index].listType) {\n                    prevList.parentElement.appendChild(prevList = createElement('li'));\n                    prevList.appendChild(pElement);\n                }\n                else if (isNOU(prevList)) {\n                    temp = createElement(collection[index].listType);\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                    prevList = createElement('li');\n                    prevList.appendChild(pElement);\n                    temp.appendChild(prevList);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                    root.appendChild(temp);\n                }\n                else {\n                    temp = createElement(collection[index].listType);\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                    prevList.parentElement.parentElement.appendChild(temp);\n                    prevList = createElement('li');\n                    prevList.appendChild(pElement);\n                    temp.appendChild(prevList);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                }\n            }\n            else if (collection[index].nestedLevel > pLevel) {\n                if (!isNOU(prevList)) {\n                    for (var j = 0; j < collection[index].nestedLevel - pLevel; j++) {\n                        prevList.appendChild(temp = createElement(collection[index].listType));\n                        prevList = createElement('li');\n                        if (j !== collection[index].nestedLevel - pLevel - 1 &&\n                            collection[index].nestedLevel - pLevel > 1) {\n                            prevList.style.listStyleType = 'none';\n                        }\n                        temp.appendChild(prevList);\n                    }\n                    prevList.appendChild(pElement);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                }\n                else {\n                    if (collection[index].nestedLevel > pLevel && isNormalList) {\n                        var initialNode = createElement(collection[index].listType);\n                        prevList = createElement('li');\n                        initialNode.appendChild(prevList);\n                        initialNode.style.listStyleType = 'none';\n                        for (var j = 0; j < collection[index].nestedLevel - 1; j++) {\n                            prevList.appendChild(temp = createElement(collection[index].listType));\n                            prevList = createElement('li');\n                            temp.appendChild(prevList);\n                            temp.style.listStyleType = 'none';\n                        }\n                        prevList.appendChild(pElement);\n                        root.appendChild(initialNode);\n                        temp.setAttribute('level', collection[index].nestedLevel.toString());\n                        temp.style.listStyleType = collection[index].listStyleTypeName;\n                    }\n                    else {\n                        root.appendChild(temp = createElement(collection[index].listType));\n                        prevList = createElement('li');\n                        prevList.appendChild(pElement);\n                        temp.appendChild(prevList);\n                        temp.setAttribute('level', collection[index].nestedLevel.toString());\n                        temp.style.listStyleType = collection[index].listStyleTypeName;\n                    }\n                }\n            }\n            else if (collection[index].nestedLevel === 1) {\n                if (root.lastChild.tagName.toLowerCase() === collection[index].listType) {\n                    temp = root.lastChild;\n                }\n                else {\n                    root.appendChild(temp = createElement(collection[index].listType));\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                }\n                prevList = createElement('li');\n                prevList.appendChild(pElement);\n                temp.appendChild(prevList);\n                temp.setAttribute('level', collection[index].nestedLevel.toString());\n            }\n            else {\n                elem = prevList;\n                while (elem.parentElement) {\n                    elem = elem.parentElement;\n                    if (elem.attributes.getNamedItem('level')) {\n                        // eslint-disable-next-line\n                        if (parseInt(elem.attributes.getNamedItem('level').textContent, null) === collection[index].nestedLevel) {\n                            prevList = createElement('li');\n                            prevList.appendChild(pElement);\n                            elem.appendChild(prevList);\n                            break;\n                            // eslint-disable-next-line\n                        }\n                        else if (collection[index].nestedLevel > parseInt(elem.attributes.getNamedItem('level').textContent, null)) {\n                            elem.appendChild(temp = createElement(collection[index].listType));\n                            prevList = createElement('li');\n                            prevList.appendChild(pElement);\n                            temp.appendChild(prevList);\n                            temp.setAttribute('level', collection[index].nestedLevel.toString());\n                            temp.style.listStyleType = collection[index].listStyleTypeName;\n                            break;\n                        }\n                    }\n                    continue;\n                }\n            }\n            prevList.setAttribute('class', collection[index].class);\n            prevList.setAttribute('style', (!isNOU(collection[index].listStyle) ? collection[index].listStyle : ''));\n            pLevel = collection[index].nestedLevel;\n            listCount++;\n            if (!isNOU(collection[index].start)) {\n                temp.setAttribute('start', collection[index].start.toString());\n            }\n        }\n        return root;\n    };\n    MsWordPaste.prototype.getListContent = function (elem) {\n        var pushContent = '';\n        var firstChild = elem.firstElementChild;\n        if (firstChild.textContent.trim() === '' && !isNOU(firstChild.firstElementChild) &&\n            firstChild.firstElementChild.nodeName === 'IMG') {\n            pushContent = elem.innerHTML.trim();\n            this.listContents.push('');\n            this.listContents.push(pushContent);\n        }\n        else {\n            //Add to support separate list which looks like same list and also to add all tags as it is inside list\n            if (firstChild.childNodes.length > 0) {\n                var listIgnoreTag = firstChild.querySelectorAll('[style*=\"mso-list\"]');\n                for (var i = 0; i < listIgnoreTag.length; i++) {\n                    listIgnoreTag[i].setAttribute('style', listIgnoreTag[i].getAttribute('style').replace(/\\n/g, ''));\n                }\n                var listOrder = firstChild.querySelector('span[style=\"mso-list:Ignore\"]');\n                if (!isNOU(listOrder)) {\n                    this.listContents.push(listOrder.textContent.trim());\n                    detach(listOrder);\n                    this.removingComments(elem);\n                    this.removeUnwantedElements(elem);\n                }\n            }\n        }\n        this.listContents.push(elem.innerHTML);\n    };\n    MsWordPaste.prototype.processMargin = function (element) {\n        var liChildren = element.querySelectorAll('li');\n        if (liChildren.length > 0) {\n            for (var i = 0; i < liChildren.length; i++) {\n                if (!isNOU((liChildren[i]).style.marginLeft)) {\n                    (liChildren[i]).style.marginLeft = '';\n                }\n            }\n        }\n        var tableChildren = element.querySelectorAll('table');\n        if (tableChildren.length > 0) {\n            for (var i = 0; i < tableChildren.length; i++) {\n                if (!isNOU((tableChildren[i]).style.marginLeft) &&\n                    (tableChildren[i]).style.marginLeft.indexOf('-') >= 0) {\n                    (tableChildren[i]).style.marginLeft = '';\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.removeEmptyAnchorTag = function (element) {\n        var removableElement = element.querySelectorAll('a:not([href])');\n        for (var j = removableElement.length - 1; j >= 0; j--) {\n            var parentElem = removableElement[j].parentNode;\n            while (removableElement[j].firstChild) {\n                parentElem.insertBefore(removableElement[j].firstChild, removableElement[j]);\n            }\n            parentElem.removeChild(removableElement[j]);\n        }\n    };\n    MsWordPaste.prototype.findSource = function (element) {\n        var metaNodes = element.querySelectorAll('meta');\n        for (var i = 0; i < metaNodes.length; i++) {\n            var metaNode = metaNodes[i];\n            var content = metaNode.getAttribute('content');\n            var name_1 = metaNode.getAttribute('name');\n            if (name_1 && name_1.toLowerCase().indexOf('generator') >= 0 && content && content.toLowerCase().indexOf('microsoft') >= 0) {\n                for (var j = 0; j < PASTE_SOURCE.length; j++) {\n                    if (content.toLowerCase().indexOf(PASTE_SOURCE[j]) >= 0) {\n                        return PASTE_SOURCE[j];\n                    }\n                }\n            }\n        }\n        return 'html';\n    };\n    return MsWordPaste;\n}());\nexport { MsWordPaste };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}