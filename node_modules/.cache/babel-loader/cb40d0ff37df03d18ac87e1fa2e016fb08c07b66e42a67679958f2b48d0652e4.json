{"ast":null,"code":"import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n *\n * @hidden\n */\nvar Data = /** @class */function () {\n  /**\n   * Constructor for data module.\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} serviceLocator - specifies the service locator\n   * @hidden\n   */\n  function Data(parent, serviceLocator) {\n    this.dataState = {\n      isPending: false,\n      resolver: null,\n      group: []\n    };\n    this.foreignKeyDataState = {\n      isPending: false,\n      resolver: null\n    };\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.initDataManager();\n    if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n      return;\n    }\n    this.parent.on(events.rowsAdded, this.addRows, this);\n    this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n    this.parent.on(events.rowsRemoved, this.removeRows, this);\n    this.parent.on(events.dataSourceModified, this.initDataManager, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.updateData, this.crudActions, this);\n    this.parent.on(events.addDeleteAction, this.getData, this);\n    this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n    this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n  }\n  Data.prototype.reorderRows = function (e) {\n    this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n  };\n  Data.prototype.getModuleName = function () {\n    return 'data';\n  };\n  /**\n   * The function used to initialize dataManager and external query\n   *\n   * @returns {void}\n   */\n  Data.prototype.initDataManager = function () {\n    var gObj = this.parent;\n    this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource : isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource);\n    if (gObj.isAngular && !(gObj.query instanceof Query)) {\n      gObj.setProperties({\n        query: new Query()\n      }, true);\n    } else {\n      this.isQueryInvokedFromData = true;\n      gObj.query = gObj.query instanceof Query ? gObj.query : new Query();\n    }\n  };\n  /**\n   * The function is used to generate updated Query from Grid model.\n   *\n   * @param {boolean} skipPage - specifies the boolean to skip the page\n   * @param {boolean} isAutoCompleteCall - specifies for auto complete call\n   * @returns {Query} returns the Query\n   * @hidden\n   */\n  Data.prototype.generateQuery = function (skipPage, isAutoCompleteCall) {\n    var gObj = this.parent;\n    var query = gObj.getQuery().clone();\n    if (this.parent.columnQueryMode === 'ExcludeHidden') {\n      query.select(this.parent.getColumns().filter(function (column) {\n        return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined);\n      }).map(function (column) {\n        return column.field;\n      }));\n    } else if (this.parent.columnQueryMode === 'Schema') {\n      var selectQueryFields = [];\n      var columns = this.parent.columns;\n      for (var i = 0; i < columns.length; i++) {\n        selectQueryFields.push(columns[parseInt(i.toString(), 10)].field);\n      }\n      query.select(selectQueryFields);\n    }\n    this.filterQuery(query);\n    this.searchQuery(query);\n    this.aggregateQuery(query);\n    this.sortQuery(query);\n    if (isGroupAdaptive(this.parent)) {\n      this.virtualGroupPageQuery(query);\n    } else {\n      this.pageQuery(query, skipPage);\n    }\n    if (isNullOrUndefined(isAutoCompleteCall) || !isAutoCompleteCall) {\n      this.groupQuery(query);\n    }\n    return query;\n  };\n  /**\n   * @param {Query} query - specifies the query\n   * @returns {Query} - returns the query\n   * @hidden\n   */\n  Data.prototype.aggregateQuery = function (query) {\n    var rows = this.parent.aggregates;\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[parseInt(i.toString(), 10)];\n      for (var j = 0; j < row.columns.length; j++) {\n        var cols = row.columns[parseInt(j.toString(), 10)];\n        var types = cols.type instanceof Array ? cols.type : [cols.type];\n        for (var k = 0; k < types.length; k++) {\n          query.aggregate(types[parseInt(k.toString(), 10)].toLowerCase(), cols.field);\n        }\n      }\n    }\n    return query;\n  };\n  Data.prototype.virtualGroupPageQuery = function (query) {\n    var fName = 'fn';\n    if (query.queries.length) {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[parseInt(i.toString(), 10)][\"\" + fName] === 'onPage') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n    return query;\n  };\n  Data.prototype.pageQuery = function (query, skipPage) {\n    var gObj = this.parent;\n    var fName = 'fn';\n    var args = {\n      query: query,\n      skipPage: false\n    };\n    gObj.notify(events.setVirtualPageQuery, args);\n    if (args.skipPage) {\n      return query;\n    }\n    if ((gObj.allowPaging || gObj.enableVirtualization || gObj.enableInfiniteScrolling) && skipPage !== true) {\n      gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n      if (gObj.pageSettings.pageCount <= 0) {\n        gObj.pageSettings.pageCount = 8;\n      }\n      if (gObj.pageSettings.pageSize <= 0) {\n        gObj.pageSettings.pageSize = 12;\n      }\n      if (query.queries.length) {\n        for (var i = 0; i < query.queries.length; i++) {\n          if (query.queries[parseInt(i.toString(), 10)][\"\" + fName] === 'onPage') {\n            query.queries.splice(i, 1);\n          }\n        }\n      }\n      if (!isNullOrUndefined(gObj.infiniteScrollModule) && gObj.enableInfiniteScrolling) {\n        this.parent.notify(events.infinitePageQuery, query);\n      } else {\n        query.page(gObj.pageSettings.currentPage, gObj.allowPaging && gObj.pagerModule && gObj.pagerModule.pagerObj.isAllPage && !gObj.isManualRefresh && !this.dataManager.dataSource.offline && !(this.dataManager.adaptor instanceof RemoteSaveAdaptor) ? null : gObj.pageSettings.pageSize);\n      }\n    }\n    return query;\n  };\n  Data.prototype.groupQuery = function (query) {\n    var gObj = this.parent;\n    if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n      if (this.parent.groupSettings.enableLazyLoading) {\n        query.lazyLoad.push({\n          key: 'isLazyLoad',\n          value: this.parent.groupSettings.enableLazyLoading\n        });\n      }\n      var columns = gObj.groupSettings.columns;\n      for (var i = 0, len = columns.length; i < len; i++) {\n        var column = this.getColumnByField(columns[parseInt(i.toString(), 10)]);\n        if (!column) {\n          this.parent.log('initial_action', {\n            moduleName: 'group',\n            columnName: columns[parseInt(i.toString(), 10)]\n          });\n        }\n        var isGrpFmt = column.enableGroupByFormat;\n        var format = column.format;\n        if (isGrpFmt) {\n          query.group(columns[parseInt(i.toString(), 10)], this.formatGroupColumn.bind(this), format);\n        } else {\n          query.group(columns[parseInt(i.toString(), 10)], null);\n        }\n      }\n    }\n    return query;\n  };\n  Data.prototype.sortQuery = function (query) {\n    var gObj = this.parent;\n    if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n      var columns = gObj.sortSettings.columns;\n      var sortGrp = [];\n      for (var i = columns.length - 1; i > -1; i--) {\n        var col = this.getColumnByField(columns[parseInt(i.toString(), 10)].field);\n        if (col) {\n          col.setSortDirection(columns[parseInt(i.toString(), 10)].direction);\n        } else {\n          this.parent.log('initial_action', {\n            moduleName: 'sort',\n            columnName: columns[parseInt(i.toString(), 10)].field\n          });\n          return query;\n        }\n        var fn = columns[parseInt(i.toString(), 10)].direction;\n        if (col.sortComparer) {\n          this.parent.log('grid_sort_comparer');\n          fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[parseInt(i.toString(), 10)].direction;\n        }\n        if (gObj.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) === -1) {\n          if (col.isForeignColumn() || col.sortComparer) {\n            query.sortByForeignKey(col.field, fn, undefined, columns[parseInt(i.toString(), 10)].direction.toLowerCase());\n          } else {\n            query.sortBy(col.field, fn);\n          }\n        } else {\n          sortGrp.push({\n            direction: fn,\n            field: col.field\n          });\n        }\n      }\n      for (var i = 0, len = sortGrp.length; i < len; i++) {\n        if (typeof sortGrp[parseInt(i.toString(), 10)].direction === 'string') {\n          query.sortBy(sortGrp[parseInt(i.toString(), 10)].field, sortGrp[parseInt(i.toString(), 10)].direction);\n        } else {\n          var col = this.getColumnByField(sortGrp[parseInt(i.toString(), 10)].field);\n          query.sortByForeignKey(sortGrp[parseInt(i.toString(), 10)].field, sortGrp[parseInt(i.toString(), 10)].direction, undefined, col.getSortDirection().toLowerCase());\n        }\n      }\n    }\n    return query;\n  };\n  Data.prototype.searchQuery = function (query, fcolumn, isForeignKey) {\n    var sSettings = this.parent.searchSettings;\n    var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n    var predicateList = [];\n    var needForeignKeySearch = false;\n    if (this.parent.searchSettings.key.length) {\n      needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) {\n        return fields.indexOf(col.field) > -1;\n      });\n      var adaptor = !isForeignKey ? this.dataManager.adaptor : fcolumn.dataSource.adaptor;\n      if (needForeignKeySearch || adaptor.getModuleName && adaptor.getModuleName() === 'ODataV4Adaptor') {\n        fields = isForeignKey ? [fcolumn.foreignKeyValue] : fields;\n        for (var i = 0; i < fields.length; i++) {\n          var column = isForeignKey ? fcolumn : this.getColumnByField(fields[parseInt(i.toString(), 10)]);\n          if (column.isForeignColumn() && !isForeignKey) {\n            predicateList = this.fGeneratePredicate(column, predicateList);\n          } else {\n            predicateList.push(new Predicate(fields[parseInt(i.toString(), 10)], sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n          }\n        }\n        var predList = Predicate.or(predicateList);\n        predList.key = sSettings.key;\n        query.where(predList);\n      } else {\n        query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n      }\n    }\n    return query;\n  };\n  Data.prototype.filterQuery = function (query, column, skipFoerign) {\n    var gObj = this.parent;\n    var predicateList = [];\n    var actualFilter = [];\n    var foreignColumn = this.parent.getForeignKeyColumns();\n    var foreignColEmpty;\n    if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n      var columns = column ? column : gObj.filterSettings.columns;\n      var colType = {};\n      for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n        var col = _a[_i];\n        colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n      }\n      var foreignCols = [];\n      var defaultFltrCols = [];\n      for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n        var col = columns_1[_b];\n        var gridColumn = col.isForeignKey ? gObj.getColumnByUid(col.uid) : gObj.getColumnByField(col.field);\n        if (isNullOrUndefined(col.type) && gridColumn && (gridColumn.type === 'date' || gridColumn.type === 'datetime' || gridColumn.type === 'dateonly')) {\n          col.type = col.isForeignKey ? gObj.getColumnByUid(col.uid).type : gObj.getColumnByField(col.field).type;\n        }\n        if (col.isForeignKey) {\n          foreignCols.push(col);\n        } else {\n          defaultFltrCols.push(col);\n        }\n      }\n      if (defaultFltrCols.length) {\n        for (var i = 0, len = defaultFltrCols.length; i < len; i++) {\n          defaultFltrCols[parseInt(i.toString(), 10)].uid = defaultFltrCols[parseInt(i.toString(), 10)].uid || this.parent.grabColumnByFieldFromAllCols(defaultFltrCols[parseInt(i.toString(), 10)].field, defaultFltrCols[parseInt(i.toString(), 10)].isForeignKey).uid;\n        }\n        var excelPredicate = CheckBoxFilterBase.getPredicate(defaultFltrCols);\n        for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n          var prop = _d[_c];\n          predicateList.push(excelPredicate[\"\" + prop]);\n        }\n      }\n      if (foreignCols.length) {\n        for (var _e = 0, foreignCols_1 = foreignCols; _e < foreignCols_1.length; _e++) {\n          var col = foreignCols_1[_e];\n          col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field, col.isForeignKey).uid;\n          var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n          if (!column_1) {\n            this.parent.log('initial_action', {\n              moduleName: 'filter',\n              columnName: col.field\n            });\n          }\n          if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n            actualFilter.push(col);\n            if (!column_1.columnData.length) {\n              foreignColEmpty = true;\n            }\n            predicateList = this.fGeneratePredicate(column_1, predicateList);\n          } else {\n            var excelPredicate = CheckBoxFilterBase.getPredicate(columns);\n            for (var _f = 0, _g = Object.keys(excelPredicate); _f < _g.length; _f++) {\n              var prop = _g[_f];\n              predicateList.push(excelPredicate[\"\" + prop]);\n            }\n          }\n        }\n      }\n      if (predicateList.length && !foreignColEmpty) {\n        query.where(Predicate.and(predicateList));\n      } else {\n        this.parent.notify(events.showEmptyGrid, {});\n      }\n    }\n    return query;\n  };\n  Data.prototype.fGeneratePredicate = function (col, predicateList) {\n    var fPredicate = {};\n    if (col) {\n      this.parent.notify(events.generateQuery, {\n        predicate: fPredicate,\n        column: col\n      });\n      if (fPredicate.predicate.predicates.length) {\n        predicateList.push(fPredicate.predicate);\n      }\n    }\n    return predicateList;\n  };\n  /**\n   * The function is used to get dataManager promise by executing given Query.\n   *\n   * @param {object} args - specifies the object\n   * @param {string} args.requestType - Defines the request type\n   * @param {string[]} args.foreignKeyData - Defines the foreignKeyData.string\n   * @param {Object} args.data - Defines the data.\n   * @param {number} args.index - Defines the index .\n   * @param {Query} query - Defines the query which will execute along with data processing.\n   * @returns {Promise<Object>} - returns the object\n   * @hidden\n   */\n  Data.prototype.getData = function (args, query) {\n    var _this = this;\n    if (args === void 0) {\n      args = {\n        requestType: ''\n      };\n    }\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n    this.parent.log('datasource_syntax_mismatch', {\n      dataState: this.parent\n    });\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      var def = this.eventPromise(args, query, key);\n      return def.promise;\n    } else {\n      var crud = void 0;\n      switch (args.requestType) {\n        case 'delete':\n          query = query ? query : this.generateQuery();\n          // eslint-disable-next-line no-case-declarations\n          var len = Object.keys(args.data).length;\n          if (len === 1) {\n            crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n          } else {\n            var changes = {\n              addedRecords: [],\n              deletedRecords: [],\n              changedRecords: []\n            };\n            changes.deletedRecords = args.data;\n            crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n          }\n          break;\n        case 'save':\n          query = query ? query : this.generateQuery();\n          args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n          crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n          break;\n      }\n      var promise = 'promise';\n      args[\"\" + promise] = crud;\n      // eslint-disable-next-line no-prototype-builtins\n      if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n        return crud.then(function () {\n          return _this.insert(query, args);\n        });\n      } else {\n        return this.insert(query, args);\n      }\n    }\n  };\n  Data.prototype.insert = function (query, args) {\n    if (args.requestType === 'save') {\n      this.parent.notify(events.recordAdded, args);\n    }\n    return this.executeQuery(query);\n  };\n  Data.prototype.executeQuery = function (query) {\n    var _this = this;\n    if (this.dataManager.ready) {\n      var deferred_1 = new Deferred();\n      var ready = this.dataManager.ready;\n      ready.then(function () {\n        _this.dataManager.executeQuery(query).then(function (result) {\n          deferred_1.resolve(result);\n        });\n      }).catch(function (e) {\n        deferred_1.reject(e);\n      });\n      return deferred_1.promise;\n    } else {\n      return this.dataManager.executeQuery(query);\n    }\n  };\n  Data.prototype.formatGroupColumn = function (value, field) {\n    var serviceLocator = this.serviceLocator;\n    var column = this.getColumnByField(field);\n    var date = value;\n    if (!column.type) {\n      column.type = date.getDay ? date.getHours() > 0 || date.getMinutes() > 0 || date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date' : typeof value;\n    }\n    if (isNullOrUndefined(column.getFormatter())) {\n      setFormatter(serviceLocator, column);\n    }\n    var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n    return formatVal;\n  };\n  Data.prototype.crudActions = function (args) {\n    var query = this.generateQuery();\n    var promise = null;\n    var pr = 'promise';\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      this.eventPromise(args, query, key);\n    }\n    switch (args.requestType) {\n      case 'save':\n        promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n        break;\n    }\n    args[\"\" + pr] = promise ? promise : args[\"\" + pr];\n    this.parent.notify(events.crudAction, args);\n  };\n  /**\n   * @param {object} changes - specifies the changes\n   * @param {string} key - specifies the key\n   * @param {object} original - specifies the original data\n   * @param {Query} query - specifies the query\n   * @returns {Promise<Object>} returns the object\n   * @hidden\n   */\n  Data.prototype.saveChanges = function (changes, key, original, query) {\n    if (query === void 0) {\n      query = this.generateQuery();\n    }\n    query.requiresCount();\n    if ('result' in this.parent.dataSource) {\n      var deff = new Deferred();\n      var args = {\n        requestType: 'batchsave',\n        changes: changes,\n        key: key,\n        query: query,\n        endEdit: deff.resolve\n      };\n      this.setState({\n        isPending: true,\n        resolver: deff.resolve\n      });\n      this.parent.trigger(events.dataSourceChanged, args);\n      return deff.promise;\n    } else {\n      var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n      return promise;\n    }\n  };\n  Data.prototype.getKey = function (keys) {\n    if (keys && keys.length) {\n      return keys[0];\n    }\n    return undefined;\n  };\n  /**\n   * @returns {boolean} returns whether its remote data\n   * @hidden\n   */\n  Data.prototype.isRemote = function () {\n    return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined && this.dataManager.dataSource.url !== '';\n  };\n  Data.prototype.addRows = function (e) {\n    for (var i = e.records.length; i > 0; i--) {\n      if (this.parent.dataSource instanceof DataManager && this.dataManager.dataSource.offline) {\n        this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n      } else if (!this.parent.getDataModule().isRemote() && !isNullOrUndefined(this.parent.dataSource) && !this.parent.dataSource.result) {\n        this.parent.dataSource['splice'](e.toIndex, 0, e.records[i - 1]);\n      }\n    }\n  };\n  Data.prototype.removeRows = function (e) {\n    var json = this.dataManager.dataSource.json;\n    if (this.parent.dataSource instanceof DataManager && this.dataManager.dataSource.offline) {\n      this.dataManager.dataSource.json = json.filter(function (value) {\n        return e.records.indexOf(value) === -1;\n      });\n    } else if (!this.parent.getDataModule().isRemote() && !isNullOrUndefined(this.parent.dataSource) && !this.parent.dataSource.result) {\n      this.parent.dataSource = json.filter(function (value) {\n        return e.records.indexOf(value) === -1;\n      });\n    }\n  };\n  Data.prototype.getColumnByField = function (field) {\n    var col;\n    return this.parent.columnModel.some(function (column) {\n      col = column;\n      return column.field === field;\n    }) && col;\n  };\n  Data.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(events.rowsAdded, this.addRows);\n    this.parent.off(events.rowsRemoved, this.removeRows);\n    this.parent.off(events.dataSourceModified, this.initDataManager);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.updateData, this.crudActions);\n    this.parent.off(events.addDeleteAction, this.getData);\n    this.parent.off(events.autoCol, this.refreshFilteredCols);\n    this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n  };\n  Data.prototype.getState = function () {\n    return this.dataState;\n  };\n  Data.prototype.setState = function (state) {\n    return this.dataState = state;\n  };\n  Data.prototype.getForeignKeyDataState = function () {\n    return this.foreignKeyDataState;\n  };\n  Data.prototype.setForeignKeyDataState = function (state) {\n    this.foreignKeyDataState = state;\n  };\n  Data.prototype.getStateEventArgument = function (query) {\n    var adaptr = new UrlAdaptor();\n    var dm = new DataManager({\n      url: '',\n      adaptor: new UrlAdaptor()\n    });\n    var state = adaptr.processQuery(dm, query);\n    var data = JSON.parse(state.data);\n    return extend(data, state.pvtData);\n  };\n  Data.prototype.eventPromise = function (args, query, key) {\n    var _this = this;\n    var dataArgs = args;\n    var state = this.getStateEventArgument(query);\n    var def = new Deferred();\n    var deff = new Deferred();\n    if ((args.requestType !== undefined || this.parent.groupSettings.disablePageWiseAggregates && query.queries.some(function (query) {\n      return query.fn === 'onGroup';\n    })) && this.dataState.isDataChanged !== false) {\n      state.action = args;\n      if (args.requestType === 'save' || args.requestType === 'delete') {\n        var editArgs_1 = args;\n        editArgs_1.key = key;\n        var promise = 'promise';\n        editArgs_1[\"\" + promise] = deff.promise;\n        editArgs_1.state = state;\n        this.setState({\n          isPending: true,\n          resolver: deff.resolve\n        });\n        dataArgs.endEdit = deff.resolve;\n        dataArgs.cancelEdit = deff.reject;\n        this.parent.trigger(events.dataSourceChanged, editArgs_1);\n        deff.promise.then(function () {\n          _this.setState({\n            isPending: true,\n            resolver: def.resolve,\n            group: state.group,\n            aggregates: state.aggregates\n          });\n          if (editArgs_1.requestType === 'save') {\n            _this.parent.notify(events.recordAdded, editArgs_1);\n          }\n          _this.parent.trigger(events.dataStateChange, state);\n        }).catch(function () {\n          return void 0;\n        });\n      } else {\n        this.setState({\n          isPending: true,\n          resolver: def.resolve,\n          group: state.group,\n          aggregates: state.aggregates\n        });\n        this.parent.trigger(events.dataStateChange, state);\n      }\n    } else {\n      this.setState({});\n      def.resolve(this.parent.dataSource);\n    }\n    return def;\n  };\n  /**\n   * Gets the columns where searching needs to be performed from the Grid.\n   *\n   * @returns {string[]} returns the searched column field names\n   */\n  Data.prototype.getSearchColumnFieldNames = function () {\n    var colFieldNames = [];\n    var columns = this.parent.getColumns();\n    for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n      var col = columns_2[_i];\n      if (col.allowSearching && !isNullOrUndefined(col.field)) {\n        colFieldNames.push(col.field);\n      }\n    }\n    return colFieldNames;\n  };\n  Data.prototype.refreshFilteredCols = function () {\n    if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n      refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n    }\n  };\n  return Data;\n}();\nexport { Data };","map":{"version":3,"names":["isNullOrUndefined","extend","Query","DataManager","Predicate","Deferred","UrlAdaptor","RemoteSaveAdaptor","setFormatter","isGroupAdaptive","getColumnByForeignKeyValue","refreshFilteredColsUid","events","ValueFormatter","CheckBoxFilterBase","Data","parent","serviceLocator","dataState","isPending","resolver","group","foreignKeyDataState","initDataManager","isDestroyed","getModuleName","on","rowsAdded","addRows","rowPositionChanged","reorderRows","rowsRemoved","removeRows","dataSourceModified","destroy","updateData","crudActions","addDeleteAction","getData","autoCol","refreshFilteredCols","columnsPrepared","prototype","e","dataManager","dataSource","json","splice","toIndex","fromIndex","gObj","isAngular","query","setProperties","isQueryInvokedFromData","generateQuery","skipPage","isAutoCompleteCall","getQuery","clone","columnQueryMode","select","getColumns","filter","column","isPrimaryKey","visible","field","undefined","map","selectQueryFields","columns","i","length","push","parseInt","toString","filterQuery","searchQuery","aggregateQuery","sortQuery","virtualGroupPageQuery","pageQuery","groupQuery","rows","aggregates","row","j","cols","types","type","Array","k","aggregate","toLowerCase","fName","queries","args","notify","setVirtualPageQuery","allowPaging","enableVirtualization","enableInfiniteScrolling","pageSettings","currentPage","Math","max","pageCount","pageSize","infiniteScrollModule","infinitePageQuery","page","pagerModule","pagerObj","isAllPage","isManualRefresh","offline","adaptor","allowGrouping","groupSettings","enableLazyLoading","lazyLoad","key","value","len","getColumnByField","log","moduleName","columnName","isGrpFmt","enableGroupByFormat","format","formatGroupColumn","bind","allowSorting","sortSettings","sortGrp","col","setSortDirection","direction","fn","sortComparer","isRemote","indexOf","isForeignColumn","sortByForeignKey","sortBy","getSortDirection","fcolumn","isForeignKey","sSettings","searchSettings","fields","getSearchColumnFieldNames","predicateList","needForeignKeySearch","getForeignKeyColumns","some","foreignKeyValue","fGeneratePredicate","operator","ignoreCase","ignoreAccent","predList","or","where","search","skipFoerign","actualFilter","foreignColumn","foreignColEmpty","allowFiltering","filterSettings","colType","_i","_a","foreignCols","defaultFltrCols","_b","columns_1","gridColumn","getColumnByUid","uid","grabColumnByFieldFromAllCols","excelPredicate","getPredicate","_c","_d","Object","keys","prop","_e","foreignCols_1","column_1","grabColumnByUidFromAllCols","columnData","_f","_g","and","showEmptyGrid","fPredicate","predicate","predicates","_this","requestType","getKey","foreignKeyData","getPrimaryKeyFieldNames","def","eventPromise","promise","crud","data","remove","fromTable","changes","addedRecords","deletedRecords","changedRecords","saveChanges","requiresCount","index","insert","isArray","hasOwnProperty","then","recordAdded","executeQuery","ready","deferred_1","result","resolve","catch","reject","date","getDay","getHours","getMinutes","getSeconds","getMilliseconds","getFormatter","formatVal","toView","pr","update","previousData","crudAction","original","deff","endEdit","setState","trigger","dataSourceChanged","url","records","getDataModule","columnModel","off","getState","state","getForeignKeyDataState","setForeignKeyDataState","getStateEventArgument","adaptr","dm","processQuery","JSON","parse","pvtData","dataArgs","disablePageWiseAggregates","isDataChanged","action","editArgs_1","cancelEdit","dataStateChange","colFieldNames","columns_2","allowSearching"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js"],"sourcesContent":["import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n *\n * @hidden\n */\nvar Data = /** @class */ (function () {\n    /**\n     * Constructor for data module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the service locator\n     * @hidden\n     */\n    function Data(parent, serviceLocator) {\n        this.dataState = { isPending: false, resolver: null, group: [] };\n        this.foreignKeyDataState = { isPending: false, resolver: null };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.initDataManager();\n        if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n            return;\n        }\n        this.parent.on(events.rowsAdded, this.addRows, this);\n        this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n        this.parent.on(events.rowsRemoved, this.removeRows, this);\n        this.parent.on(events.dataSourceModified, this.initDataManager, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.updateData, this.crudActions, this);\n        this.parent.on(events.addDeleteAction, this.getData, this);\n        this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n        this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n    }\n    Data.prototype.reorderRows = function (e) {\n        this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n    };\n    Data.prototype.getModuleName = function () {\n        return 'data';\n    };\n    /**\n     * The function used to initialize dataManager and external query\n     *\n     * @returns {void}\n     */\n    Data.prototype.initDataManager = function () {\n        var gObj = this.parent;\n        this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource :\n            (isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource));\n        if (gObj.isAngular && !(gObj.query instanceof Query)) {\n            gObj.setProperties({ query: new Query() }, true);\n        }\n        else {\n            this.isQueryInvokedFromData = true;\n            gObj.query = gObj.query instanceof Query ? gObj.query : new Query();\n        }\n    };\n    /**\n     * The function is used to generate updated Query from Grid model.\n     *\n     * @param {boolean} skipPage - specifies the boolean to skip the page\n     * @param {boolean} isAutoCompleteCall - specifies for auto complete call\n     * @returns {Query} returns the Query\n     * @hidden\n     */\n    Data.prototype.generateQuery = function (skipPage, isAutoCompleteCall) {\n        var gObj = this.parent;\n        var query = gObj.getQuery().clone();\n        if (this.parent.columnQueryMode === 'ExcludeHidden') {\n            query.select(this.parent.getColumns().filter(function (column) { return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined); }).map(function (column) { return column.field; }));\n        }\n        else if (this.parent.columnQueryMode === 'Schema') {\n            var selectQueryFields = [];\n            var columns = this.parent.columns;\n            for (var i = 0; i < columns.length; i++) {\n                selectQueryFields.push(columns[parseInt(i.toString(), 10)].field);\n            }\n            query.select(selectQueryFields);\n        }\n        this.filterQuery(query);\n        this.searchQuery(query);\n        this.aggregateQuery(query);\n        this.sortQuery(query);\n        if (isGroupAdaptive(this.parent)) {\n            this.virtualGroupPageQuery(query);\n        }\n        else {\n            this.pageQuery(query, skipPage);\n        }\n        if (isNullOrUndefined(isAutoCompleteCall) || !isAutoCompleteCall) {\n            this.groupQuery(query);\n        }\n        return query;\n    };\n    /**\n     * @param {Query} query - specifies the query\n     * @returns {Query} - returns the query\n     * @hidden\n     */\n    Data.prototype.aggregateQuery = function (query) {\n        var rows = this.parent.aggregates;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            for (var j = 0; j < row.columns.length; j++) {\n                var cols = row.columns[parseInt(j.toString(), 10)];\n                var types = cols.type instanceof Array ? cols.type : [cols.type];\n                for (var k = 0; k < types.length; k++) {\n                    query.aggregate(types[parseInt(k.toString(), 10)].toLowerCase(), cols.field);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.virtualGroupPageQuery = function (query) {\n        var fName = 'fn';\n        if (query.queries.length) {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[parseInt(i.toString(), 10)][\"\" + fName] === 'onPage') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.pageQuery = function (query, skipPage) {\n        var gObj = this.parent;\n        var fName = 'fn';\n        var args = { query: query, skipPage: false };\n        gObj.notify(events.setVirtualPageQuery, args);\n        if (args.skipPage) {\n            return query;\n        }\n        if ((gObj.allowPaging || gObj.enableVirtualization || gObj.enableInfiniteScrolling) && skipPage !== true) {\n            gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n            if (gObj.pageSettings.pageCount <= 0) {\n                gObj.pageSettings.pageCount = 8;\n            }\n            if (gObj.pageSettings.pageSize <= 0) {\n                gObj.pageSettings.pageSize = 12;\n            }\n            if (query.queries.length) {\n                for (var i = 0; i < query.queries.length; i++) {\n                    if (query.queries[parseInt(i.toString(), 10)][\"\" + fName] === 'onPage') {\n                        query.queries.splice(i, 1);\n                    }\n                }\n            }\n            if (!isNullOrUndefined(gObj.infiniteScrollModule) && gObj.enableInfiniteScrolling) {\n                this.parent.notify(events.infinitePageQuery, query);\n            }\n            else {\n                query.page(gObj.pageSettings.currentPage, gObj.allowPaging && gObj.pagerModule &&\n                    (gObj.pagerModule.pagerObj.isAllPage && !gObj.isManualRefresh) &&\n                    (!this.dataManager.dataSource.offline && !(this.dataManager.adaptor instanceof RemoteSaveAdaptor)) ?\n                    null : gObj.pageSettings.pageSize);\n            }\n        }\n        return query;\n    };\n    Data.prototype.groupQuery = function (query) {\n        var gObj = this.parent;\n        if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n            if (this.parent.groupSettings.enableLazyLoading) {\n                query.lazyLoad.push({ key: 'isLazyLoad', value: this.parent.groupSettings.enableLazyLoading });\n            }\n            var columns = gObj.groupSettings.columns;\n            for (var i = 0, len = columns.length; i < len; i++) {\n                var column = this.getColumnByField(columns[parseInt(i.toString(), 10)]);\n                if (!column) {\n                    this.parent.log('initial_action', { moduleName: 'group', columnName: columns[parseInt(i.toString(), 10)] });\n                }\n                var isGrpFmt = column.enableGroupByFormat;\n                var format = column.format;\n                if (isGrpFmt) {\n                    query.group(columns[parseInt(i.toString(), 10)], this.formatGroupColumn.bind(this), format);\n                }\n                else {\n                    query.group(columns[parseInt(i.toString(), 10)], null);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.sortQuery = function (query) {\n        var gObj = this.parent;\n        if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n            var columns = gObj.sortSettings.columns;\n            var sortGrp = [];\n            for (var i = columns.length - 1; i > -1; i--) {\n                var col = this.getColumnByField(columns[parseInt(i.toString(), 10)].field);\n                if (col) {\n                    col.setSortDirection(columns[parseInt(i.toString(), 10)].direction);\n                }\n                else {\n                    this.parent.log('initial_action', { moduleName: 'sort', columnName: columns[parseInt(i.toString(), 10)].field });\n                    return query;\n                }\n                var fn = columns[parseInt(i.toString(), 10)].direction;\n                if (col.sortComparer) {\n                    this.parent.log('grid_sort_comparer');\n                    fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[parseInt(i.toString(), 10)].direction;\n                }\n                if (gObj.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) === -1) {\n                    if (col.isForeignColumn() || col.sortComparer) {\n                        query.sortByForeignKey(col.field, fn, undefined, columns[parseInt(i.toString(), 10)].direction.toLowerCase());\n                    }\n                    else {\n                        query.sortBy(col.field, fn);\n                    }\n                }\n                else {\n                    sortGrp.push({ direction: fn, field: col.field });\n                }\n            }\n            for (var i = 0, len = sortGrp.length; i < len; i++) {\n                if (typeof sortGrp[parseInt(i.toString(), 10)].direction === 'string') {\n                    query.sortBy(sortGrp[parseInt(i.toString(), 10)].field, sortGrp[parseInt(i.toString(), 10)].direction);\n                }\n                else {\n                    var col = this.getColumnByField(sortGrp[parseInt(i.toString(), 10)].field);\n                    query.sortByForeignKey(sortGrp[parseInt(i.toString(), 10)].field, sortGrp[parseInt(i.toString(), 10)].direction, undefined, col.getSortDirection().toLowerCase());\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.searchQuery = function (query, fcolumn, isForeignKey) {\n        var sSettings = this.parent.searchSettings;\n        var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n        var predicateList = [];\n        var needForeignKeySearch = false;\n        if (this.parent.searchSettings.key.length) {\n            needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) { return fields.indexOf(col.field) > -1; });\n            var adaptor = !isForeignKey ? this.dataManager.adaptor : fcolumn.dataSource.adaptor;\n            if (needForeignKeySearch || (adaptor.getModuleName &&\n                adaptor.getModuleName() === 'ODataV4Adaptor')) {\n                fields = isForeignKey ? [fcolumn.foreignKeyValue] : fields;\n                for (var i = 0; i < fields.length; i++) {\n                    var column = isForeignKey ? fcolumn : this.getColumnByField(fields[parseInt(i.toString(), 10)]);\n                    if (column.isForeignColumn() && !isForeignKey) {\n                        predicateList = this.fGeneratePredicate(column, predicateList);\n                    }\n                    else {\n                        predicateList.push(new Predicate(fields[parseInt(i.toString(), 10)], sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n                    }\n                }\n                var predList = Predicate.or(predicateList);\n                predList.key = sSettings.key;\n                query.where(predList);\n            }\n            else {\n                query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n            }\n        }\n        return query;\n    };\n    Data.prototype.filterQuery = function (query, column, skipFoerign) {\n        var gObj = this.parent;\n        var predicateList = [];\n        var actualFilter = [];\n        var foreignColumn = this.parent.getForeignKeyColumns();\n        var foreignColEmpty;\n        if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n            var columns = column ? column : gObj.filterSettings.columns;\n            var colType = {};\n            for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n            }\n            var foreignCols = [];\n            var defaultFltrCols = [];\n            for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n                var col = columns_1[_b];\n                var gridColumn = col.isForeignKey ? gObj.getColumnByUid(col.uid) : gObj.getColumnByField(col.field);\n                if (isNullOrUndefined(col.type) && gridColumn && (gridColumn.type === 'date' || gridColumn.type === 'datetime' || gridColumn.type === 'dateonly')) {\n                    col.type = col.isForeignKey ? gObj.getColumnByUid(col.uid).type : gObj.getColumnByField(col.field).type;\n                }\n                if (col.isForeignKey) {\n                    foreignCols.push(col);\n                }\n                else {\n                    defaultFltrCols.push(col);\n                }\n            }\n            if (defaultFltrCols.length) {\n                for (var i = 0, len = defaultFltrCols.length; i < len; i++) {\n                    defaultFltrCols[parseInt(i.toString(), 10)].uid = defaultFltrCols[parseInt(i.toString(), 10)].uid ||\n                        this.parent.grabColumnByFieldFromAllCols(defaultFltrCols[parseInt(i.toString(), 10)].field, defaultFltrCols[parseInt(i.toString(), 10)].isForeignKey).uid;\n                }\n                var excelPredicate = CheckBoxFilterBase.getPredicate(defaultFltrCols);\n                for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n                    var prop = _d[_c];\n                    predicateList.push(excelPredicate[\"\" + prop]);\n                }\n            }\n            if (foreignCols.length) {\n                for (var _e = 0, foreignCols_1 = foreignCols; _e < foreignCols_1.length; _e++) {\n                    var col = foreignCols_1[_e];\n                    col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field, col.isForeignKey).uid;\n                    var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n                    if (!column_1) {\n                        this.parent.log('initial_action', { moduleName: 'filter', columnName: col.field });\n                    }\n                    if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n                        actualFilter.push(col);\n                        if (!column_1.columnData.length) {\n                            foreignColEmpty = true;\n                        }\n                        predicateList = this.fGeneratePredicate(column_1, predicateList);\n                    }\n                    else {\n                        var excelPredicate = CheckBoxFilterBase.getPredicate(columns);\n                        for (var _f = 0, _g = Object.keys(excelPredicate); _f < _g.length; _f++) {\n                            var prop = _g[_f];\n                            predicateList.push(excelPredicate[\"\" + prop]);\n                        }\n                    }\n                }\n            }\n            if (predicateList.length && !foreignColEmpty) {\n                query.where(Predicate.and(predicateList));\n            }\n            else {\n                this.parent.notify(events.showEmptyGrid, {});\n            }\n        }\n        return query;\n    };\n    Data.prototype.fGeneratePredicate = function (col, predicateList) {\n        var fPredicate = {};\n        if (col) {\n            this.parent.notify(events.generateQuery, { predicate: fPredicate, column: col });\n            if (fPredicate.predicate.predicates.length) {\n                predicateList.push(fPredicate.predicate);\n            }\n        }\n        return predicateList;\n    };\n    /**\n     * The function is used to get dataManager promise by executing given Query.\n     *\n     * @param {object} args - specifies the object\n     * @param {string} args.requestType - Defines the request type\n     * @param {string[]} args.foreignKeyData - Defines the foreignKeyData.string\n     * @param {Object} args.data - Defines the data.\n     * @param {number} args.index - Defines the index .\n     * @param {Query} query - Defines the query which will execute along with data processing.\n     * @returns {Promise<Object>} - returns the object\n     * @hidden\n     */\n    Data.prototype.getData = function (args, query) {\n        var _this = this;\n        if (args === void 0) { args = { requestType: '' }; }\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ?\n            args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n        this.parent.log('datasource_syntax_mismatch', { dataState: this.parent });\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            var def = this.eventPromise(args, query, key);\n            return def.promise;\n        }\n        else {\n            var crud = void 0;\n            switch (args.requestType) {\n                case 'delete':\n                    query = query ? query : this.generateQuery();\n                    // eslint-disable-next-line no-case-declarations\n                    var len = Object.keys(args.data).length;\n                    if (len === 1) {\n                        crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n                    }\n                    else {\n                        var changes = {\n                            addedRecords: [],\n                            deletedRecords: [],\n                            changedRecords: []\n                        };\n                        changes.deletedRecords = args.data;\n                        crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n                    }\n                    break;\n                case 'save':\n                    query = query ? query : this.generateQuery();\n                    args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n                    crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n                    break;\n            }\n            var promise = 'promise';\n            args[\"\" + promise] = crud;\n            // eslint-disable-next-line no-prototype-builtins\n            if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n                return crud.then(function () {\n                    return _this.insert(query, args);\n                });\n            }\n            else {\n                return this.insert(query, args);\n            }\n        }\n    };\n    Data.prototype.insert = function (query, args) {\n        if (args.requestType === 'save') {\n            this.parent.notify(events.recordAdded, args);\n        }\n        return this.executeQuery(query);\n    };\n    Data.prototype.executeQuery = function (query) {\n        var _this = this;\n        if (this.dataManager.ready) {\n            var deferred_1 = new Deferred();\n            var ready = this.dataManager.ready;\n            ready.then(function () {\n                _this.dataManager.executeQuery(query).then(function (result) {\n                    deferred_1.resolve(result);\n                });\n            }).catch(function (e) {\n                deferred_1.reject(e);\n            });\n            return deferred_1.promise;\n        }\n        else {\n            return this.dataManager.executeQuery(query);\n        }\n    };\n    Data.prototype.formatGroupColumn = function (value, field) {\n        var serviceLocator = this.serviceLocator;\n        var column = this.getColumnByField(field);\n        var date = value;\n        if (!column.type) {\n            column.type = date.getDay ? (date.getHours() > 0 || date.getMinutes() > 0 ||\n                date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);\n        }\n        if (isNullOrUndefined(column.getFormatter())) {\n            setFormatter(serviceLocator, column);\n        }\n        var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n        return formatVal;\n    };\n    Data.prototype.crudActions = function (args) {\n        var query = this.generateQuery();\n        var promise = null;\n        var pr = 'promise';\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ? args.foreignKeyData :\n            this.parent.getPrimaryKeyFieldNames());\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            this.eventPromise(args, query, key);\n        }\n        switch (args.requestType) {\n            case 'save':\n                promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n                break;\n        }\n        args[\"\" + pr] = promise ? promise : args[\"\" + pr];\n        this.parent.notify(events.crudAction, args);\n    };\n    /**\n     * @param {object} changes - specifies the changes\n     * @param {string} key - specifies the key\n     * @param {object} original - specifies the original data\n     * @param {Query} query - specifies the query\n     * @returns {Promise<Object>} returns the object\n     * @hidden\n     */\n    Data.prototype.saveChanges = function (changes, key, original, query) {\n        if (query === void 0) { query = this.generateQuery(); }\n        query.requiresCount();\n        if ('result' in this.parent.dataSource) {\n            var deff = new Deferred();\n            var args = {\n                requestType: 'batchsave', changes: changes, key: key, query: query,\n                endEdit: deff.resolve\n            };\n            this.setState({ isPending: true, resolver: deff.resolve });\n            this.parent.trigger(events.dataSourceChanged, args);\n            return deff.promise;\n        }\n        else {\n            var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n            return promise;\n        }\n    };\n    Data.prototype.getKey = function (keys) {\n        if (keys && keys.length) {\n            return keys[0];\n        }\n        return undefined;\n    };\n    /**\n     * @returns {boolean} returns whether its remote data\n     * @hidden\n     */\n    Data.prototype.isRemote = function () {\n        return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined &&\n            this.dataManager.dataSource.url !== '';\n    };\n    Data.prototype.addRows = function (e) {\n        for (var i = e.records.length; i > 0; i--) {\n            if (this.parent.dataSource instanceof DataManager && this.dataManager.dataSource.offline) {\n                this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n            }\n            else if (((!this.parent.getDataModule().isRemote()) && (!isNullOrUndefined(this.parent.dataSource))) &&\n                (!this.parent.dataSource.result)) {\n                this.parent.dataSource['splice'](e.toIndex, 0, e.records[i - 1]);\n            }\n        }\n    };\n    Data.prototype.removeRows = function (e) {\n        var json = this.dataManager.dataSource.json;\n        if (this.parent.dataSource instanceof DataManager && this.dataManager.dataSource.offline) {\n            this.dataManager.dataSource.json = json.filter(function (value) { return e.records.indexOf(value) === -1; });\n        }\n        else if (((!this.parent.getDataModule().isRemote()) && (!isNullOrUndefined(this.parent.dataSource))) &&\n            (!this.parent.dataSource.result)) {\n            this.parent.dataSource = json.filter(function (value) { return e.records.indexOf(value) === -1; });\n        }\n    };\n    Data.prototype.getColumnByField = function (field) {\n        var col;\n        return (this.parent.columnModel).some(function (column) {\n            col = column;\n            return column.field === field;\n        }) && col;\n    };\n    Data.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowsAdded, this.addRows);\n        this.parent.off(events.rowsRemoved, this.removeRows);\n        this.parent.off(events.dataSourceModified, this.initDataManager);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.updateData, this.crudActions);\n        this.parent.off(events.addDeleteAction, this.getData);\n        this.parent.off(events.autoCol, this.refreshFilteredCols);\n        this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n    };\n    Data.prototype.getState = function () {\n        return this.dataState;\n    };\n    Data.prototype.setState = function (state) {\n        return this.dataState = state;\n    };\n    Data.prototype.getForeignKeyDataState = function () {\n        return this.foreignKeyDataState;\n    };\n    Data.prototype.setForeignKeyDataState = function (state) {\n        this.foreignKeyDataState = state;\n    };\n    Data.prototype.getStateEventArgument = function (query) {\n        var adaptr = new UrlAdaptor();\n        var dm = new DataManager({ url: '', adaptor: new UrlAdaptor });\n        var state = adaptr.processQuery(dm, query);\n        var data = JSON.parse(state.data);\n        return extend(data, state.pvtData);\n    };\n    Data.prototype.eventPromise = function (args, query, key) {\n        var _this = this;\n        var dataArgs = args;\n        var state = this.getStateEventArgument(query);\n        var def = new Deferred();\n        var deff = new Deferred();\n        if ((args.requestType !== undefined || (this.parent.groupSettings.disablePageWiseAggregates && query.queries.some(function (query) { return query.fn === 'onGroup'; })))\n            && this.dataState.isDataChanged !== false) {\n            state.action = args;\n            if (args.requestType === 'save' || args.requestType === 'delete') {\n                var editArgs_1 = args;\n                editArgs_1.key = key;\n                var promise = 'promise';\n                editArgs_1[\"\" + promise] = deff.promise;\n                editArgs_1.state = state;\n                this.setState({ isPending: true, resolver: deff.resolve });\n                dataArgs.endEdit = deff.resolve;\n                dataArgs.cancelEdit = deff.reject;\n                this.parent.trigger(events.dataSourceChanged, editArgs_1);\n                deff.promise.then(function () {\n                    _this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                    if (editArgs_1.requestType === 'save') {\n                        _this.parent.notify(events.recordAdded, editArgs_1);\n                    }\n                    _this.parent.trigger(events.dataStateChange, state);\n                })\n                    .catch(function () { return void 0; });\n            }\n            else {\n                this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                this.parent.trigger(events.dataStateChange, state);\n            }\n        }\n        else {\n            this.setState({});\n            def.resolve(this.parent.dataSource);\n        }\n        return def;\n    };\n    /**\n     * Gets the columns where searching needs to be performed from the Grid.\n     *\n     * @returns {string[]} returns the searched column field names\n     */\n    Data.prototype.getSearchColumnFieldNames = function () {\n        var colFieldNames = [];\n        var columns = this.parent.getColumns();\n        for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n            var col = columns_2[_i];\n            if (col.allowSearching && !isNullOrUndefined(col.field)) {\n                colFieldNames.push(col.field);\n            }\n        }\n        return colFieldNames;\n    };\n    Data.prototype.refreshFilteredCols = function () {\n        if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n            refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n        }\n    };\n    return Data;\n}());\nexport { Data };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}