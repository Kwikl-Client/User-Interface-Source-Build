{"ast":null,"code":"import { IsFormatted } from './isformatted';\nimport * as CONSTANT from './../base/constant';\nimport { NodeSelection } from './../../selection/index';\nimport { getDefaultHtmlTbStatus } from './../../common/util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Update Toolbar Status\n *\n * @hidden\n\n */\nexport var statusCollection = getDefaultHtmlTbStatus();\nvar ToolbarStatus = /** @class */function () {\n  function ToolbarStatus() {}\n  /**\n   * get method\n   *\n   * @param {Document} docElement - specifies the document element\n   * @param {Node} targetNode - specifies the target node\n   * @param {string[]} formatNode - specifies the format node\n   * @param {string[]} fontSize - specifies the font size\n   * @param {string[]} fontName - specifies the font name.\n   * @param {Node} documentNode - specifies the document node.\n   * @returns {IToolbarStatus} - returns the toolbar status\n   * @hidden\n    */\n  ToolbarStatus.get = function (docElement, targetNode, formatNode, fontSize, fontName, documentNode) {\n    var formatCollection = JSON.parse(JSON.stringify(statusCollection));\n    var nodeCollection = JSON.parse(JSON.stringify(statusCollection));\n    var nodeSelection = new NodeSelection();\n    var range = nodeSelection.getRange(docElement);\n    var nodes = documentNode ? [documentNode] : range.collapsed ? nodeSelection.getNodeCollection(range) : nodeSelection.getSelectionNodeCollectionBr(range);\n    var nodesLength = nodes.length;\n    var isNodeChanged = false;\n    for (var index = 0; index < nodes.length; index++) {\n      while (nodes[index].nodeType === 3 && range.startContainer.nodeType === 3 && nodes[index].parentNode && nodes[index].parentNode.lastElementChild && nodes[index].parentNode.lastElementChild.nodeName !== 'BR' && this.getImmediateBlockNode(nodes[index].parentNode).textContent.replace(/\\u200B/g, '').length === 0 && range.startContainer.textContent.replace(/\\u200B/g, '').length === 0 && nodeSelection.get(docElement).toString().replace(/\\u200B/g, '').length === 0) {\n        nodes[index] = nodes[index].parentNode.lastElementChild.firstChild;\n        isNodeChanged = true;\n      }\n      if (isNodeChanged && nodes[index]) {\n        nodeSelection.setCursorPoint(docElement, nodes[index], nodes[index].textContent.length);\n        isNodeChanged = false;\n      }\n      if (nodes[index].nodeName !== 'BR' && nodes[index].nodeType !== 3 || nodesLength > 1 && nodes[index].nodeType === 3 && nodes[index].textContent.trim() === '') {\n        nodes.splice(index, 1);\n        index--;\n      }\n    }\n    for (var index = 0; index < nodes.length; index++) {\n      // eslint-disable-next-line max-len\n      formatCollection = this.getFormatParent(docElement, formatCollection, nodes[index], targetNode, formatNode, fontSize, fontName);\n      if (index === 0 && formatCollection.bold || !formatCollection.bold) {\n        nodeCollection.bold = formatCollection.bold;\n      }\n      if (index === 0 && formatCollection.insertcode || !formatCollection.insertcode) {\n        nodeCollection.insertcode = formatCollection.insertcode;\n      }\n      if (index === 0 && formatCollection.italic || !formatCollection.italic) {\n        nodeCollection.italic = formatCollection.italic;\n      }\n      if (index === 0 && formatCollection.underline || !formatCollection.underline) {\n        nodeCollection.underline = formatCollection.underline;\n      }\n      if (index === 0 && formatCollection.strikethrough || !formatCollection.strikethrough) {\n        nodeCollection.strikethrough = formatCollection.strikethrough;\n      }\n      if (index === 0 && formatCollection.superscript || !formatCollection.superscript) {\n        nodeCollection.superscript = formatCollection.superscript;\n      }\n      if (index === 0 && formatCollection.subscript || !formatCollection.subscript) {\n        nodeCollection.subscript = formatCollection.subscript;\n      }\n      if (index === 0 && formatCollection.fontcolor || !formatCollection.fontcolor) {\n        nodeCollection.fontcolor = formatCollection.fontcolor;\n      }\n      if (index === 0 && formatCollection.fontname) {\n        nodeCollection.fontname = formatCollection.fontname;\n      } else {\n        nodeCollection.fontname = formatCollection.fontname === nodeCollection.fontname ? formatCollection.fontname : 'empty';\n      }\n      if (index === 0 && formatCollection.fontsize) {\n        nodeCollection.fontsize = formatCollection.fontsize;\n      } else {\n        nodeCollection.fontsize = formatCollection.fontsize === nodeCollection.fontsize ? formatCollection.fontsize : 'empty';\n      }\n      if (index === 0 && formatCollection.backgroundcolor || !formatCollection.backgroundcolor) {\n        nodeCollection.backgroundcolor = formatCollection.backgroundcolor;\n      }\n      if (index === 0 && formatCollection.orderedlist || !formatCollection.orderedlist) {\n        nodeCollection.orderedlist = formatCollection.orderedlist;\n      }\n      if (index === 0 && formatCollection.unorderedlist || !formatCollection.unorderedlist) {\n        nodeCollection.unorderedlist = formatCollection.unorderedlist;\n      }\n      if (index === 0 && formatCollection.alignments || !formatCollection.alignments) {\n        nodeCollection.alignments = formatCollection.alignments;\n      }\n      if (index === 0 && formatCollection.formats) {\n        nodeCollection.formats = formatCollection.formats;\n      } else {\n        nodeCollection.formats = formatCollection.formats === nodeCollection.formats ? formatCollection.formats : 'empty';\n      }\n      if (index === 0 && formatCollection.createlink || !formatCollection.createlink) {\n        nodeCollection.createlink = formatCollection.createlink;\n      }\n      if (index === 0 && formatCollection.numberFormatList || !formatCollection.numberFormatList) {\n        nodeCollection.numberFormatList = formatCollection.numberFormatList;\n      }\n      if (index === 0 && formatCollection.bulletFormatList || !formatCollection.bulletFormatList) {\n        nodeCollection.bulletFormatList = formatCollection.bulletFormatList;\n      }\n      formatCollection = JSON.parse(JSON.stringify(statusCollection));\n    }\n    return nodeCollection;\n  };\n  ToolbarStatus.getImmediateBlockNode = function (node) {\n    do {\n      node = node.parentNode;\n    } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n    return node;\n  };\n  ToolbarStatus.getFormatParent = function (docElement, formatCollection, node, targetNode, formatNode, fontSize, fontName) {\n    if (targetNode.contains(node) || node.nodeType === 3 && targetNode.nodeType !== 3 && targetNode.contains(node.parentNode)) {\n      do {\n        formatCollection = this.isFormattedNode(docElement, formatCollection, node, formatNode, fontSize, fontName);\n        node = node.parentNode;\n      } while (node && node !== targetNode);\n    }\n    return formatCollection;\n  };\n  ToolbarStatus.isFormattedNode = function (docElement, formatCollection, node, formatNode, fontSize, fontName) {\n    if (!formatCollection.bold) {\n      formatCollection.bold = IsFormatted.isBold(node);\n    }\n    if (!formatCollection.italic) {\n      formatCollection.italic = IsFormatted.isItalic(node);\n    }\n    if (!formatCollection.underline) {\n      formatCollection.underline = IsFormatted.isUnderline(node);\n    }\n    if (!formatCollection.strikethrough) {\n      formatCollection.strikethrough = IsFormatted.isStrikethrough(node);\n    }\n    if (!formatCollection.superscript) {\n      formatCollection.superscript = IsFormatted.isSuperscript(node);\n    }\n    if (!formatCollection.subscript) {\n      formatCollection.subscript = IsFormatted.isSubscript(node);\n    }\n    if (!formatCollection.fontcolor) {\n      formatCollection.fontcolor = this.isFontColor(docElement, node);\n    }\n    if (!formatCollection.fontname) {\n      formatCollection.fontname = this.isFontName(docElement, node, fontName);\n    }\n    if (!formatCollection.fontsize) {\n      formatCollection.fontsize = this.isFontSize(docElement, node, fontSize);\n    }\n    if (!formatCollection.backgroundcolor) {\n      formatCollection.backgroundcolor = this.isBackgroundColor(node);\n    }\n    if (!formatCollection.orderedlist) {\n      formatCollection.orderedlist = this.isOrderedList(node);\n    }\n    if (!formatCollection.unorderedlist) {\n      formatCollection.unorderedlist = this.isUnorderedList(node);\n    }\n    if (!formatCollection.alignments) {\n      formatCollection.alignments = this.isAlignment(node);\n    }\n    if (!formatCollection.formats) {\n      formatCollection.formats = this.isFormats(node, formatNode);\n      if (formatCollection.formats === 'pre') {\n        formatCollection.insertcode = true;\n      }\n    }\n    if (!formatCollection.createlink) {\n      formatCollection.createlink = this.isLink(node);\n    }\n    if (!formatCollection.numberFormatList) {\n      formatCollection.numberFormatList = this.isNumberFormatList(node);\n    }\n    if (!formatCollection.bulletFormatList) {\n      formatCollection.bulletFormatList = this.isBulletFormatList(node);\n    }\n    return formatCollection;\n  };\n  ToolbarStatus.isFontColor = function (docElement, node) {\n    var color = node.style && node.style.color;\n    if ((color === null || color === undefined || color === '') && node.nodeType !== 3) {\n      color = this.getComputedStyle(docElement, node, 'color');\n    }\n    if (color !== null && color !== '' && color !== undefined) {\n      return color;\n    } else {\n      return null;\n    }\n  };\n  ToolbarStatus.isLink = function (node) {\n    if (node.nodeName.toLocaleLowerCase() === 'a') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  ToolbarStatus.isBackgroundColor = function (node) {\n    var backColor = node.style && node.style.backgroundColor;\n    if (backColor !== null && backColor !== '' && backColor !== undefined) {\n      return backColor;\n    } else {\n      return null;\n    }\n  };\n  ToolbarStatus.isFontSize = function (docElement, node, fontSize) {\n    var size = node.style && node.style.fontSize;\n    if ((size === null || size === undefined || size === '') && node.nodeType !== 3 && node.parentElement.classList.contains('e-content')) {\n      size = this.getComputedStyle(docElement, node, 'font-size');\n    }\n    if (size !== null && size !== '' && size !== undefined && (fontSize === null || fontSize === undefined || fontSize.indexOf(size) > -1)) {\n      return size;\n    } else {\n      return null;\n    }\n  };\n  ToolbarStatus.isFontName = function (docElement, node, fontName) {\n    var name = node.style && node.style.fontFamily;\n    if ((name === null || name === undefined || name === '') && node.nodeType !== 3) {\n      name = this.getComputedStyle(docElement, node, 'font-family');\n    }\n    var index = null;\n    if (name !== null && name !== '' && name !== undefined && (fontName === null || fontName === undefined || fontName.filter(function (value, pos) {\n      // eslint-disable-next-line\n      var pattern = new RegExp(name, 'i');\n      if (value.replace(/\"/g, '').replace(/ /g, '').toLowerCase() === name.replace(/\"/g, '').replace(/ /g, '').toLowerCase() || value.split(',')[0] && !isNullOrUndefined(value.split(',')[0].trim().match(pattern)) && value.split(',')[0].trim() === value.split(',')[0].trim().match(pattern)[0]) {\n        index = pos;\n      }\n    }) && index !== null)) {\n      // eslint-disable-next-line\n      return index !== null ? fontName[index] : name.replace(/\"/g, '');\n    } else {\n      return null;\n    }\n  };\n  ToolbarStatus.isOrderedList = function (node) {\n    if (node.nodeName.toLocaleLowerCase() === 'ol') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  ToolbarStatus.isUnorderedList = function (node) {\n    if (node.nodeName.toLocaleLowerCase() === 'ul') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  ToolbarStatus.isAlignment = function (node) {\n    var align = node.style && node.style.textAlign;\n    if (align === 'left') {\n      return 'justifyleft';\n    } else if (align === 'center') {\n      return 'justifycenter';\n    } else if (align === 'right') {\n      return 'justifyright';\n    } else if (align === 'justify') {\n      return 'justifyfull';\n    } else {\n      return null;\n    }\n  };\n  ToolbarStatus.isFormats = function (node, formatNode) {\n    if ((formatNode === undefined || formatNode === null) && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) > -1 || formatNode !== null && formatNode !== undefined && formatNode.indexOf(node.nodeName.toLocaleLowerCase()) > -1) {\n      return node.nodeName.toLocaleLowerCase();\n    } else {\n      return null;\n    }\n  };\n  ToolbarStatus.getComputedStyle = function (docElement, node, prop) {\n    return docElement.defaultView.getComputedStyle(node, null).getPropertyValue(prop);\n  };\n  ToolbarStatus.isNumberFormatList = function (node) {\n    var list = node.style && node.style.listStyleType;\n    if (list === 'lower-alpha') {\n      return 'Lower Alpha';\n    } else if (list === 'number') {\n      return 'Number';\n    } else if (list === 'upper-alpha') {\n      return 'Upper Alpha';\n    } else if (list === 'lower-roman') {\n      return 'Lower Roman';\n    } else if (list === 'upper-roman') {\n      return 'Upper Roman';\n    } else if (list === 'lower-greek') {\n      return 'Lower Greek';\n    } else if (list === 'none') {\n      return 'None';\n    } else if (this.isOrderedList(node)) {\n      return true;\n    } else {\n      return null;\n    }\n  };\n  ToolbarStatus.isBulletFormatList = function (node) {\n    var list = node.style && node.style.listStyleType;\n    if (list === 'circle') {\n      return 'Circle';\n    } else if (list === 'square') {\n      return 'Square';\n    } else if (list === 'none') {\n      return 'None';\n    } else if (list === 'disc') {\n      return 'Disc';\n    } else if (this.isUnorderedList(node)) {\n      return true;\n    } else {\n      return null;\n    }\n  };\n  return ToolbarStatus;\n}();\nexport { ToolbarStatus };","map":{"version":3,"names":["IsFormatted","CONSTANT","NodeSelection","getDefaultHtmlTbStatus","isNullOrUndefined","statusCollection","ToolbarStatus","get","docElement","targetNode","formatNode","fontSize","fontName","documentNode","formatCollection","JSON","parse","stringify","nodeCollection","nodeSelection","range","getRange","nodes","collapsed","getNodeCollection","getSelectionNodeCollectionBr","nodesLength","length","isNodeChanged","index","nodeType","startContainer","parentNode","lastElementChild","nodeName","getImmediateBlockNode","textContent","replace","toString","firstChild","setCursorPoint","trim","splice","getFormatParent","bold","insertcode","italic","underline","strikethrough","superscript","subscript","fontcolor","fontname","fontsize","backgroundcolor","orderedlist","unorderedlist","alignments","formats","createlink","numberFormatList","bulletFormatList","node","BLOCK_TAGS","indexOf","toLocaleLowerCase","contains","isFormattedNode","isBold","isItalic","isUnderline","isStrikethrough","isSuperscript","isSubscript","isFontColor","isFontName","isFontSize","isBackgroundColor","isOrderedList","isUnorderedList","isAlignment","isFormats","isLink","isNumberFormatList","isBulletFormatList","color","style","undefined","getComputedStyle","backColor","backgroundColor","size","parentElement","classList","name","fontFamily","filter","value","pos","pattern","RegExp","toLowerCase","split","match","align","textAlign","prop","defaultView","getPropertyValue","list","listStyleType"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/toolbar-status.js"],"sourcesContent":["import { IsFormatted } from './isformatted';\nimport * as CONSTANT from './../base/constant';\nimport { NodeSelection } from './../../selection/index';\nimport { getDefaultHtmlTbStatus } from './../../common/util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Update Toolbar Status\n *\n * @hidden\n\n */\nexport var statusCollection = getDefaultHtmlTbStatus();\nvar ToolbarStatus = /** @class */ (function () {\n    function ToolbarStatus() {\n    }\n    /**\n     * get method\n     *\n     * @param {Document} docElement - specifies the document element\n     * @param {Node} targetNode - specifies the target node\n     * @param {string[]} formatNode - specifies the format node\n     * @param {string[]} fontSize - specifies the font size\n     * @param {string[]} fontName - specifies the font name.\n     * @param {Node} documentNode - specifies the document node.\n     * @returns {IToolbarStatus} - returns the toolbar status\n     * @hidden\n\n     */\n    ToolbarStatus.get = function (docElement, targetNode, formatNode, fontSize, fontName, documentNode) {\n        var formatCollection = JSON.parse(JSON.stringify(statusCollection));\n        var nodeCollection = JSON.parse(JSON.stringify(statusCollection));\n        var nodeSelection = new NodeSelection();\n        var range = nodeSelection.getRange(docElement);\n        var nodes = documentNode ? [documentNode] : range.collapsed ? nodeSelection.getNodeCollection(range) :\n            nodeSelection.getSelectionNodeCollectionBr(range);\n        var nodesLength = nodes.length;\n        var isNodeChanged = false;\n        for (var index = 0; index < nodes.length; index++) {\n            while (nodes[index].nodeType === 3 && range.startContainer.nodeType === 3 && nodes[index].parentNode &&\n                nodes[index].parentNode.lastElementChild && nodes[index].parentNode.lastElementChild.nodeName !== 'BR' &&\n                (this.getImmediateBlockNode(nodes[index].parentNode)).textContent.replace(/\\u200B/g, '').length === 0 &&\n                range.startContainer.textContent.replace(/\\u200B/g, '').length === 0 &&\n                nodeSelection.get(docElement).toString().replace(/\\u200B/g, '').length === 0) {\n                nodes[index] = nodes[index].parentNode.lastElementChild.firstChild;\n                isNodeChanged = true;\n            }\n            if (isNodeChanged && nodes[index]) {\n                nodeSelection.setCursorPoint(docElement, nodes[index], nodes[index].textContent.length);\n                isNodeChanged = false;\n            }\n            if ((nodes[index].nodeName !== 'BR' && nodes[index].nodeType !== 3) ||\n                (nodesLength > 1 && nodes[index].nodeType === 3 && nodes[index].textContent.trim() === '')) {\n                nodes.splice(index, 1);\n                index--;\n            }\n        }\n        for (var index = 0; index < nodes.length; index++) {\n            // eslint-disable-next-line max-len\n            formatCollection = this.getFormatParent(docElement, formatCollection, nodes[index], targetNode, formatNode, fontSize, fontName);\n            if ((index === 0 && formatCollection.bold) || !formatCollection.bold) {\n                nodeCollection.bold = formatCollection.bold;\n            }\n            if ((index === 0 && formatCollection.insertcode) || !formatCollection.insertcode) {\n                nodeCollection.insertcode = formatCollection.insertcode;\n            }\n            if ((index === 0 && formatCollection.italic) || !formatCollection.italic) {\n                nodeCollection.italic = formatCollection.italic;\n            }\n            if ((index === 0 && formatCollection.underline) || !formatCollection.underline) {\n                nodeCollection.underline = formatCollection.underline;\n            }\n            if ((index === 0 && formatCollection.strikethrough) || !formatCollection.strikethrough) {\n                nodeCollection.strikethrough = formatCollection.strikethrough;\n            }\n            if ((index === 0 && formatCollection.superscript) || !formatCollection.superscript) {\n                nodeCollection.superscript = formatCollection.superscript;\n            }\n            if ((index === 0 && formatCollection.subscript) || !formatCollection.subscript) {\n                nodeCollection.subscript = formatCollection.subscript;\n            }\n            if ((index === 0 && formatCollection.fontcolor) || !formatCollection.fontcolor) {\n                nodeCollection.fontcolor = formatCollection.fontcolor;\n            }\n            if (index === 0 && formatCollection.fontname) {\n                nodeCollection.fontname = formatCollection.fontname;\n            }\n            else {\n                nodeCollection.fontname = formatCollection.fontname === nodeCollection.fontname ? formatCollection.fontname : 'empty';\n            }\n            if (index === 0 && formatCollection.fontsize) {\n                nodeCollection.fontsize = formatCollection.fontsize;\n            }\n            else {\n                nodeCollection.fontsize = formatCollection.fontsize === nodeCollection.fontsize ? formatCollection.fontsize : 'empty';\n            }\n            if ((index === 0 && formatCollection.backgroundcolor) || !formatCollection.backgroundcolor) {\n                nodeCollection.backgroundcolor = formatCollection.backgroundcolor;\n            }\n            if ((index === 0 && formatCollection.orderedlist) || !formatCollection.orderedlist) {\n                nodeCollection.orderedlist = formatCollection.orderedlist;\n            }\n            if ((index === 0 && formatCollection.unorderedlist) || !formatCollection.unorderedlist) {\n                nodeCollection.unorderedlist = formatCollection.unorderedlist;\n            }\n            if ((index === 0 && formatCollection.alignments) || !formatCollection.alignments) {\n                nodeCollection.alignments = formatCollection.alignments;\n            }\n            if (index === 0 && formatCollection.formats) {\n                nodeCollection.formats = formatCollection.formats;\n            }\n            else {\n                nodeCollection.formats = formatCollection.formats === nodeCollection.formats ? formatCollection.formats : 'empty';\n            }\n            if ((index === 0 && formatCollection.createlink) || !formatCollection.createlink) {\n                nodeCollection.createlink = formatCollection.createlink;\n            }\n            if ((index === 0 && formatCollection.numberFormatList) || !formatCollection.numberFormatList) {\n                nodeCollection.numberFormatList = formatCollection.numberFormatList;\n            }\n            if ((index === 0 && formatCollection.bulletFormatList) || !formatCollection.bulletFormatList) {\n                nodeCollection.bulletFormatList = formatCollection.bulletFormatList;\n            }\n            formatCollection = JSON.parse(JSON.stringify(statusCollection));\n        }\n        return nodeCollection;\n    };\n    ToolbarStatus.getImmediateBlockNode = function (node) {\n        do {\n            node = node.parentNode;\n        } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n        return node;\n    };\n    ToolbarStatus.getFormatParent = function (docElement, formatCollection, node, targetNode, formatNode, fontSize, fontName) {\n        if (targetNode.contains(node) ||\n            (node.nodeType === 3 && targetNode.nodeType !== 3 && targetNode.contains(node.parentNode))) {\n            do {\n                formatCollection = this.isFormattedNode(docElement, formatCollection, node, formatNode, fontSize, fontName);\n                node = node.parentNode;\n            } while (node && (node !== targetNode));\n        }\n        return formatCollection;\n    };\n    ToolbarStatus.isFormattedNode = function (docElement, formatCollection, node, formatNode, fontSize, fontName) {\n        if (!formatCollection.bold) {\n            formatCollection.bold = IsFormatted.isBold(node);\n        }\n        if (!formatCollection.italic) {\n            formatCollection.italic = IsFormatted.isItalic(node);\n        }\n        if (!formatCollection.underline) {\n            formatCollection.underline = IsFormatted.isUnderline(node);\n        }\n        if (!formatCollection.strikethrough) {\n            formatCollection.strikethrough = IsFormatted.isStrikethrough(node);\n        }\n        if (!formatCollection.superscript) {\n            formatCollection.superscript = IsFormatted.isSuperscript(node);\n        }\n        if (!formatCollection.subscript) {\n            formatCollection.subscript = IsFormatted.isSubscript(node);\n        }\n        if (!formatCollection.fontcolor) {\n            formatCollection.fontcolor = this.isFontColor(docElement, node);\n        }\n        if (!formatCollection.fontname) {\n            formatCollection.fontname = this.isFontName(docElement, node, fontName);\n        }\n        if (!formatCollection.fontsize) {\n            formatCollection.fontsize = this.isFontSize(docElement, node, fontSize);\n        }\n        if (!formatCollection.backgroundcolor) {\n            formatCollection.backgroundcolor = this.isBackgroundColor(node);\n        }\n        if (!formatCollection.orderedlist) {\n            formatCollection.orderedlist = this.isOrderedList(node);\n        }\n        if (!formatCollection.unorderedlist) {\n            formatCollection.unorderedlist = this.isUnorderedList(node);\n        }\n        if (!formatCollection.alignments) {\n            formatCollection.alignments = this.isAlignment(node);\n        }\n        if (!formatCollection.formats) {\n            formatCollection.formats = this.isFormats(node, formatNode);\n            if (formatCollection.formats === 'pre') {\n                formatCollection.insertcode = true;\n            }\n        }\n        if (!formatCollection.createlink) {\n            formatCollection.createlink = this.isLink(node);\n        }\n        if (!formatCollection.numberFormatList) {\n            formatCollection.numberFormatList = this.isNumberFormatList(node);\n        }\n        if (!formatCollection.bulletFormatList) {\n            formatCollection.bulletFormatList = this.isBulletFormatList(node);\n        }\n        return formatCollection;\n    };\n    ToolbarStatus.isFontColor = function (docElement, node) {\n        var color = node.style && node.style.color;\n        if ((color === null || color === undefined || color === '') && node.nodeType !== 3) {\n            color = this.getComputedStyle(docElement, node, 'color');\n        }\n        if (color !== null && color !== '' && color !== undefined) {\n            return color;\n        }\n        else {\n            return null;\n        }\n    };\n    ToolbarStatus.isLink = function (node) {\n        if (node.nodeName.toLocaleLowerCase() === 'a') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ToolbarStatus.isBackgroundColor = function (node) {\n        var backColor = node.style && node.style.backgroundColor;\n        if (backColor !== null && backColor !== '' && backColor !== undefined) {\n            return backColor;\n        }\n        else {\n            return null;\n        }\n    };\n    ToolbarStatus.isFontSize = function (docElement, node, fontSize) {\n        var size = node.style && node.style.fontSize;\n        if ((size === null || size === undefined || size === '') && node.nodeType !== 3 &&\n            node.parentElement.classList.contains('e-content')) {\n            size = this.getComputedStyle(docElement, node, 'font-size');\n        }\n        if ((size !== null && size !== '' && size !== undefined)\n            && (fontSize === null || fontSize === undefined || (fontSize.indexOf(size) > -1))) {\n            return size;\n        }\n        else {\n            return null;\n        }\n    };\n    ToolbarStatus.isFontName = function (docElement, node, fontName) {\n        var name = node.style && node.style.fontFamily;\n        if ((name === null || name === undefined || name === '') && node.nodeType !== 3) {\n            name = this.getComputedStyle(docElement, node, 'font-family');\n        }\n        var index = null;\n        if ((name !== null && name !== '' && name !== undefined)\n            && (fontName === null || fontName === undefined || (fontName.filter(function (value, pos) {\n                // eslint-disable-next-line\n                var pattern = new RegExp(name, 'i');\n                if ((value.replace(/\"/g, '').replace(/ /g, '').toLowerCase() === name.replace(/\"/g, '').replace(/ /g, '').toLowerCase()) ||\n                    (value.split(',')[0] && !isNullOrUndefined(value.split(',')[0].trim().match(pattern)) &&\n                        value.split(',')[0].trim() === value.split(',')[0].trim().match(pattern)[0])) {\n                    index = pos;\n                }\n            }) && (index !== null)))) {\n            // eslint-disable-next-line\n            return (index !== null) ? fontName[index] : name.replace(/\"/g, '');\n        }\n        else {\n            return null;\n        }\n    };\n    ToolbarStatus.isOrderedList = function (node) {\n        if (node.nodeName.toLocaleLowerCase() === 'ol') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ToolbarStatus.isUnorderedList = function (node) {\n        if (node.nodeName.toLocaleLowerCase() === 'ul') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ToolbarStatus.isAlignment = function (node) {\n        var align = node.style && node.style.textAlign;\n        if (align === 'left') {\n            return 'justifyleft';\n        }\n        else if (align === 'center') {\n            return 'justifycenter';\n        }\n        else if (align === 'right') {\n            return 'justifyright';\n        }\n        else if (align === 'justify') {\n            return 'justifyfull';\n        }\n        else {\n            return null;\n        }\n    };\n    ToolbarStatus.isFormats = function (node, formatNode) {\n        if (((formatNode === undefined || formatNode === null)\n            && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) > -1)\n            || (formatNode !== null && formatNode !== undefined\n                && formatNode.indexOf(node.nodeName.toLocaleLowerCase()) > -1)) {\n            return node.nodeName.toLocaleLowerCase();\n        }\n        else {\n            return null;\n        }\n    };\n    ToolbarStatus.getComputedStyle = function (docElement, node, prop) {\n        return docElement.defaultView.getComputedStyle(node, null).getPropertyValue(prop);\n    };\n    ToolbarStatus.isNumberFormatList = function (node) {\n        var list = node.style && node.style.listStyleType;\n        if (list === 'lower-alpha') {\n            return 'Lower Alpha';\n        }\n        else if (list === 'number') {\n            return 'Number';\n        }\n        else if (list === 'upper-alpha') {\n            return 'Upper Alpha';\n        }\n        else if (list === 'lower-roman') {\n            return 'Lower Roman';\n        }\n        else if (list === 'upper-roman') {\n            return 'Upper Roman';\n        }\n        else if (list === 'lower-greek') {\n            return 'Lower Greek';\n        }\n        else if (list === 'none') {\n            return 'None';\n        }\n        else if (this.isOrderedList(node)) {\n            return true;\n        }\n        else {\n            return null;\n        }\n    };\n    ToolbarStatus.isBulletFormatList = function (node) {\n        var list = node.style && node.style.listStyleType;\n        if (list === 'circle') {\n            return 'Circle';\n        }\n        else if (list === 'square') {\n            return 'Square';\n        }\n        else if (list === 'none') {\n            return 'None';\n        }\n        else if (list === 'disc') {\n            return 'Disc';\n        }\n        else if (this.isUnorderedList(node)) {\n            return true;\n        }\n        else {\n            return null;\n        }\n    };\n    return ToolbarStatus;\n}());\nexport { ToolbarStatus };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}