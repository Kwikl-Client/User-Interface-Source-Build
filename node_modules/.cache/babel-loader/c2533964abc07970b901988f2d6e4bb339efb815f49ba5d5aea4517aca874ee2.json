{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */function () {\n  function _ExportHelper() {\n    this._asPerSpecification = false;\n    this._fileName = '';\n    this._formKey = '';\n    this._exportEmptyFields = false;\n    this._groupReferences = new Map();\n    this._groupHolders = [];\n    this._richTextPrefix = '<?xml version=\"1.0\"?>';\n    this._table = new Map(); // eslint-disable-line\n    this._fields = new Map();\n    this._richTextValues = new Map();\n    this._jsonData = [];\n    this._openingBrace = 123;\n    this._openingBracket = 91;\n    this._closingBrace = 125;\n    this._closingBracket = 93;\n    this._colon = 58;\n    this._doubleQuotes = 34;\n    this._comma = 44;\n    this._space = 32;\n    this.fdfString = '';\n    this._xmlImport = false;\n  }\n  _ExportHelper.prototype._exportFormFieldsData = function (field) {\n    var textValue = '';\n    if (field !== null && typeof field !== 'undefined' && field.export) {\n      var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n      if (type && type.name !== null && typeof type.name !== 'undefined') {\n        var font = this._getEncodedFontDictionary(field._dictionary);\n        var fieldName = field.name;\n        if (font !== null && typeof font !== 'undefined') {\n          fieldName = this._getEncodedValue(fieldName, font);\n        }\n        var value = void 0; // eslint-disable-line\n        var selectedValue = void 0;\n        switch (type.name) {\n          case 'Tx':\n            textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n            if (textValue !== null && typeof textValue !== 'undefined') {\n              textValue = this._getEncodedValue(textValue, font);\n              this._table.set(fieldName, textValue);\n            } else if (this._exportEmptyFields) {\n              textValue = '';\n              this._table.set(fieldName, textValue);\n            }\n            break;\n          case 'Ch':\n            value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n            if (value !== null && typeof value !== 'undefined') {\n              selectedValue = this._getExportValue(value);\n            }\n            if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n              selectedValue = field._obtainSelectedValue();\n            }\n            if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n              if (typeof selectedValue === 'string' && selectedValue !== '') {\n                selectedValue = this._getEncodedValue(selectedValue, font);\n                textValue = selectedValue;\n                this._table.set(fieldName, textValue);\n              } else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                var values = [];\n                for (var i = 0; i < selectedValue.length; i++) {\n                  values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                }\n                this._table.set(fieldName, values);\n                return values;\n              }\n            } else if (this._exportEmptyFields) {\n              textValue = '';\n              this._table.set(fieldName, textValue);\n            }\n            break;\n          case 'Btn':\n            value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n            if (value !== null && typeof value !== 'undefined') {\n              var text = this._getExportValue(value, field);\n              if (text !== null && typeof text !== 'undefined' && text !== '') {\n                var radioButton = void 0;\n                if (field instanceof PdfRadioButtonListField) {\n                  radioButton = field;\n                }\n                if (!field._dictionary.has('Opt') || radioButton !== null && typeof radioButton !== 'undefined' && radioButton.selectedIndex === -1) {\n                  text = this._getEncodedValue(text, font);\n                  textValue = text;\n                  this._table.set(fieldName, textValue);\n                } else {\n                  if (field._dictionary.has('Opt')) {\n                    var options = field._dictionary.getArray('Opt');\n                    var index = Number.parseInt(text, 10);\n                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                      index = 0;\n                    }\n                    if (options !== null && typeof options !== 'undefined') {\n                      var current = void 0;\n                      if (radioButton) {\n                        current = options[radioButton.selectedIndex];\n                      } else {\n                        current = options[Number.parseInt(index.toString(), 10)];\n                      }\n                      if (current !== null && typeof current !== 'undefined') {\n                        text = current;\n                      }\n                      if (text !== null && typeof text !== 'undefined' && text !== '') {\n                        text = this._getEncodedValue(text, font);\n                        textValue = text;\n                        this._table.set(fieldName, textValue);\n                      }\n                    }\n                  }\n                }\n              } else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                if (this._exportEmptyFields) {\n                  textValue = text;\n                } else {\n                  textValue = 'Off';\n                }\n                this._table.set(fieldName, textValue);\n              }\n            } else {\n              if (field instanceof PdfRadioButtonListField) {\n                textValue = field._getAppearanceStateValue();\n                if (!textValue) {\n                  if (this._exportEmptyFields) {\n                    textValue = '';\n                  } else {\n                    textValue = 'Off';\n                  }\n                }\n                this._table.set(fieldName, textValue);\n              } else {\n                var widget = field.itemAt(field._defaultIndex);\n                var dictionary = void 0;\n                if (widget) {\n                  dictionary = widget._dictionary;\n                } else {\n                  dictionary = field._dictionary;\n                }\n                if (dictionary && dictionary.has('AS')) {\n                  textValue = dictionary.get('AS').name;\n                  this._table.set(fieldName, textValue);\n                } else if (this._exportEmptyFields) {\n                  textValue = '';\n                  this._table.set(fieldName, textValue);\n                }\n              }\n            }\n            break;\n        }\n      }\n    }\n    return textValue;\n  };\n  _ExportHelper.prototype._exportFormFieldData = function (field) {\n    var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n    if (type && type.name !== null && typeof type.name !== 'undefined') {\n      var font = this._getEncodedFontDictionary(field._dictionary);\n      var fieldName = field.name;\n      if (font !== null && typeof font !== 'undefined') {\n        fieldName = this._getEncodedValue(fieldName, font);\n      }\n      var textValue = void 0;\n      var value = void 0; // eslint-disable-line\n      switch (type.name) {\n        case 'Tx':\n          textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n          if (this._asPerSpecification) {\n            if (field._dictionary.has('RV')) {\n              textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n              if (textValue !== null && typeof textValue !== 'undefined') {\n                textValue += this._key;\n                this._formKey = this._key;\n                this._table.set(fieldName, textValue);\n              }\n            } else if (textValue !== null && typeof textValue !== 'undefined') {\n              textValue = this._getEncodedValue(textValue, font);\n              var replaceValue = textValue;\n              if (field instanceof PdfTextBoxField && field.multiLine) {\n                replaceValue = replaceValue.replace('\\n', '');\n                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                textValue = replaceValue;\n              }\n              this._table.set(fieldName, textValue);\n            }\n          } else {\n            if (textValue !== null && typeof textValue !== 'undefined') {\n              textValue = this._getEncodedValue(textValue, font);\n              this._table.set(fieldName, textValue);\n            } else if (this._exportEmptyFields) {\n              this._table.set(fieldName, '');\n            }\n          }\n          break;\n        case 'Ch':\n          value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n          if (this._asPerSpecification) {\n            if (field instanceof PdfListField) {\n              if (Array.isArray(value)) {\n                this._table.set(fieldName, value);\n              } else {\n                if (typeof value === 'string') {\n                  value = this._getEncodedValue(value, font);\n                  this._table.set(fieldName, value);\n                } else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                  var selectedValue = field._obtainSelectedValue();\n                  if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                    if (typeof selectedValue === 'string' && selectedValue !== '') {\n                      selectedValue = this._getEncodedValue(selectedValue, font);\n                      this._table.set(fieldName, textValue);\n                    } else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                      var values = [];\n                      for (var i = 0; i < selectedValue.length; i++) {\n                        values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                      }\n                      this._table.set(fieldName, values);\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            var selectedValue = void 0;\n            if (value !== null && typeof value !== 'undefined') {\n              selectedValue = this._getExportValue(value);\n            }\n            if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n              selectedValue = field._obtainSelectedValue();\n            }\n            if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n              if (typeof selectedValue === 'string' && selectedValue !== '') {\n                selectedValue = this._getEncodedValue(selectedValue, font);\n                this._table.set(fieldName, selectedValue);\n              } else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                var values = [];\n                for (var i = 0; i < selectedValue.length; i++) {\n                  values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                }\n                this._table.set(fieldName, values);\n              } else if (this._exportEmptyFields) {\n                this._table.set(fieldName, '');\n              }\n            } else if (this._exportEmptyFields) {\n              this._table.set(fieldName, '');\n            }\n          }\n          break;\n        case 'Btn':\n          value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n          if (value !== null && typeof value !== 'undefined') {\n            var text = this._getExportValue(value, field);\n            if (text !== null && typeof text !== 'undefined' && text !== '') {\n              if (this._asPerSpecification && this._format !== 'XML') {\n                text = _hexStringToString(text);\n              }\n              var radioButton = void 0;\n              if (field instanceof PdfRadioButtonListField) {\n                radioButton = field;\n              }\n              if (!field._dictionary.has('Opt') || radioButton !== null && typeof radioButton !== 'undefined' && radioButton.selectedIndex === -1) {\n                text = this._getEncodedValue(text, font);\n                this._table.set(fieldName, text);\n              } else {\n                if (field._dictionary.has('Opt')) {\n                  var options = field._dictionary.getArray('Opt');\n                  var index = Number.parseInt(text, 10);\n                  if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                    index = 0;\n                  }\n                  if (options !== null && typeof options !== 'undefined') {\n                    var current = void 0;\n                    if (radioButton) {\n                      current = options[radioButton.selectedIndex];\n                    } else {\n                      current = options[Number.parseInt(index.toString(), 10)];\n                    }\n                    if (current !== null && typeof current !== 'undefined') {\n                      text = current;\n                    }\n                    if (text !== null && typeof text !== 'undefined' && text !== '') {\n                      text = this._getEncodedValue(text, font);\n                      this._table.set(fieldName, text);\n                    }\n                  }\n                }\n              }\n            } else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n              if (this._exportEmptyFields) {\n                this._table.set(fieldName, text);\n              } else {\n                this._table.set(fieldName, 'Off');\n              }\n            }\n          } else {\n            if (field instanceof PdfRadioButtonListField) {\n              var text = field._getAppearanceStateValue();\n              if (!text) {\n                if (this._exportEmptyFields) {\n                  text = '';\n                } else {\n                  text = 'Off';\n                }\n              }\n              this._table.set(fieldName, text);\n            } else {\n              var widget = field.itemAt(field._defaultIndex);\n              var dictionary = void 0;\n              if (widget) {\n                dictionary = widget._dictionary;\n              } else {\n                dictionary = field._dictionary;\n              }\n              if (dictionary && dictionary.has('AS')) {\n                this._table.set(fieldName, dictionary.get('AS').name);\n              } else if (this._exportEmptyFields) {\n                this._table.set(fieldName, '');\n              }\n            }\n          }\n          break;\n      }\n    }\n  };\n  _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n    var type = '';\n    if (dictionary.has('Subtype')) {\n      var subtype = dictionary.get('Subtype');\n      if (subtype) {\n        type = subtype.name;\n      }\n    }\n    return type;\n  };\n  _ExportHelper.prototype._getValue = function (primitive, isJson) {\n    if (isJson === void 0) {\n      isJson = false;\n    }\n    var value = '';\n    if (typeof primitive !== 'undefined' && primitive !== null) {\n      if (primitive instanceof _PdfName) {\n        value = primitive.name;\n      } else if (typeof primitive === 'boolean') {\n        value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n      } else if (typeof primitive === 'string') {\n        value = this._getValidString(primitive);\n      } else if (Array.isArray(primitive)) {\n        var colorArray = primitive; // eslint-disable-line\n        if (colorArray.length > 0) {\n          value = this._getValue(colorArray[0], isJson);\n        }\n        for (var i = 1; i < colorArray.length; i++) {\n          value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n        }\n      } else if (typeof primitive === 'number') {\n        value = primitive.toString();\n      }\n    }\n    return value;\n  };\n  _ExportHelper.prototype._getColor = function (primitive) {\n    var color = '';\n    if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n      var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n      var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n      var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n      color = '#' + (r.length === 1 ? '0' + r : r) + (g.length === 1 ? '0' + g : g) + (b.length === 1 ? '0' + b : b);\n    }\n    return color;\n  };\n  _ExportHelper.prototype._getValidString = function (value) {\n    if (value.indexOf('\\n') !== -1) {\n      value = value.replace(/\\n/g, '\\\\n');\n    }\n    if (value.indexOf('\\r') !== -1) {\n      value = value.replace(/\\r/g, '\\\\r');\n    }\n    return value;\n  };\n  _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n    var font;\n    var kids; // eslint-disable-line\n    if (source.has('Kids') && !source.has('AP')) {\n      kids = source.getArray('Kids');\n    }\n    if (source.has('AP') || kids !== null && typeof kids !== 'undefined' && Array.isArray(kids)) {\n      var appearance = void 0;\n      if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n        var kid = kids[0];\n        if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n          appearance = kid.get('AP');\n        }\n      } else {\n        appearance = source.get('AP');\n      }\n      if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n        var normal = appearance.get('N');\n        if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n          var resource = normal.dictionary.get('Resources');\n          if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n            font = resource.get('Font');\n          }\n        }\n      }\n    }\n    return font;\n  };\n  _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n    var _this = this;\n    var text = value;\n    var structure;\n    if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n      structure = new _FontStructure(this._encodeDictionary);\n      return this._replaceNotUsedCharacters(text, structure);\n    } else {\n      var root = this._document.form._dictionary;\n      if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n        var resource = root.get('DR');\n        if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n          var encoding = resource.get('Encoding');\n          if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n            var pdfEncoding = encoding.get('PDFDocEncoding');\n            if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n              var encodingDictionary = new _PdfDictionary(this._crossReference);\n              encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n              var reference = this._crossReference._getNextReference();\n              this._crossReference._cacheMap.set(reference, encodingDictionary);\n              var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n              fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n              fontEncodeDictionary.set('Encoding', reference);\n              structure = new _FontStructure(fontEncodeDictionary);\n              if (structure !== null && typeof structure !== 'undefined' && structure.differencesDictionary !== null && typeof structure.differencesDictionary !== 'undefined' && structure.differencesDictionary.size > 0) {\n                this._encodeDictionary = fontEncodeDictionary;\n                return this._replaceNotUsedCharacters(text, structure);\n              }\n            }\n          }\n        }\n      }\n      if (value !== null && typeof value !== 'undefined' && dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n        var result_1;\n        var isSkip_1 = false;\n        dictionary.forEach(function (key, value) {\n          if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n            var fontDictionary = void 0;\n            if (value instanceof _PdfDictionary) {\n              fontDictionary = value;\n            } else if (value instanceof _PdfReference) {\n              var holder = _this._crossReference._fetch(value); // eslint-disable-line\n              if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                fontDictionary = holder;\n              }\n            }\n            if (fontDictionary) {\n              structure = new _FontStructure(fontDictionary);\n              result_1 = _this._replaceNotUsedCharacters(text, structure);\n              isSkip_1 = true;\n            }\n          }\n        });\n        if (!isSkip_1) {\n          return result_1;\n        }\n      }\n      return text;\n    }\n  };\n  _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n    var updatedString = '';\n    var differencesDictionary = structure.differencesDictionary;\n    for (var i = 0; i < input.length; i++) {\n      var text = input[Number.parseInt(i.toString(), 10)];\n      var code = input.charCodeAt(i);\n      if (differencesDictionary.has(text)) {\n        var difference = differencesDictionary.get(text);\n        if (difference.length > 1 && structure._fontType !== 'Type3' || code > 127 && code <= 255 && structure._fontType === 'Type1' && structure._baseFontEncoding !== 'WinAnsiEncoding' && structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats') {\n          updatedString += text;\n        } else {\n          updatedString += difference;\n        }\n      } else {\n        updatedString += text;\n      }\n    }\n    return updatedString;\n  };\n  _ExportHelper.prototype._getExportValue = function (primitive, field) {\n    var value;\n    if (primitive !== null && typeof primitive !== 'undefined') {\n      if (field !== null && typeof field !== 'undefined') {\n        if (primitive instanceof _PdfName) {\n          value = primitive.name;\n        } else if (typeof primitive === 'string') {\n          value = primitive;\n        }\n        if (value !== null && typeof value !== 'undefined' && value !== '' && field instanceof PdfRadioButtonListField && field.selectedIndex !== -1) {\n          var item = field.itemAt(field.selectedIndex);\n          if (item !== null && typeof item !== 'undefined' && item.value === value) {\n            value = item.value;\n          }\n        }\n      } else {\n        if (primitive instanceof _PdfName) {\n          value = primitive.name;\n        } else if (typeof primitive === 'string') {\n          value = primitive;\n        } else if (Array.isArray(primitive)) {\n          var values = [];\n          for (var i = 0; i < primitive.length; i++) {\n            var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n            if (element instanceof _PdfName) {\n              values.push(element.name);\n            } else if (typeof element === 'string') {\n              values.push(element);\n            }\n          }\n          return values;\n        }\n      }\n    }\n    return value;\n  };\n  _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n    var name = dictionary.get('NM');\n    if (name && name !== '') {\n      this._groupReferences.set(name, reference);\n      if (dictionary.has('IRT')) {\n        this._groupHolders.push(dictionary);\n      }\n    } else if (!name && dictionary.has('IRT')) {\n      name = dictionary.get('IRT');\n      if (name && name !== '' && this._groupReferences.has(name)) {\n        dictionary.update('IRT', this._groupReferences.get(name));\n      }\n    }\n  };\n  _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n    if (annotationDictionary.has('Popup')) {\n      var popupReference = annotationDictionary.getRaw('Popup');\n      var popup = annotationDictionary.get('Popup');\n      if (popup instanceof _PdfDictionary) {\n        if (popupReference && popup) {\n          popup.update('Parent', reference);\n        }\n        var popupAnnotation = annotations._parseAnnotation(popup);\n        var index = annotations._annotations.length;\n        annotations._annotations.push(reference);\n        pageDictionary.set('Annots', annotations._annotations);\n        pageDictionary._updated = true;\n        annotations._parsedAnnotations.set(index, popupAnnotation);\n      }\n    }\n  };\n  _ExportHelper.prototype._importField = function () {\n    var _this = this;\n    var form = this._document.form;\n    var count = form.count;\n    if (count) {\n      this._fields.forEach(function (value, key) {\n        var richTextValue;\n        if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n          richTextValue = _this._richTextValues.get(key);\n        }\n        var index = form._getFieldIndex(key);\n        if (index !== -1 && index < count) {\n          var field = form.fieldAt(index);\n          if (field && field !== null && typeof field !== 'undefined') {\n            if (richTextValue && richTextValue !== '') {\n              field._dictionary.update('RV', richTextValue);\n            }\n            _this._importFieldData(field, value);\n          }\n        }\n      });\n    }\n  };\n  _ExportHelper.prototype._importFieldData = function (field, values) {\n    if (values !== null && typeof values !== 'undefined' && values.length > 0 && field !== null && typeof field !== 'undefined' && !field.readOnly) {\n      var value = values[0];\n      if (field instanceof PdfTextBoxField) {\n        if (value !== null && typeof value !== 'undefined') {\n          if (field instanceof PdfTextBoxField && field.multiLine) {\n            value = value.replace('\\r\\n', '\\r');\n            value = value.replace('\\n', '\\r');\n          }\n          field.text = value;\n        }\n      } else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n        var selectedValues_1;\n        if (values.length > 1) {\n          selectedValues_1 = values;\n        } else {\n          if (this._xmlImport) {\n            selectedValues_1 = value.indexOf(',') !== -1 ? value.split(',') : [value];\n          } else {\n            selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n          }\n        }\n        var indexes_1 = [];\n        var options_1 = field._options;\n        if (options_1 && options_1.length > 0) {\n          options_1.forEach(function (option) {\n            if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n              indexes_1.push(options_1.indexOf(option));\n            }\n          });\n        }\n        if (indexes_1.length > 0) {\n          field.selectedIndex = indexes_1;\n          if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n            delete field._dictionary._map.AP;\n            field._dictionary._updated = true;\n          }\n        }\n      } else if (field instanceof PdfCheckBoxField) {\n        var lowerCase = value.toLowerCase();\n        if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n          field.checked = true;\n        } else {\n          field.checked = false;\n        }\n      } else if (field instanceof PdfRadioButtonListField) {\n        var index = -1;\n        for (var i = 0; i < field._kidsCount; i++) {\n          var item = field.itemAt(i);\n          if (item && item.value && item.value === value) {\n            index = i;\n            break;\n          }\n        }\n        if (index !== -1 && field.selectedIndex !== index) {\n          field.selectedIndex = index;\n        }\n      }\n    }\n  };\n  _ExportHelper.prototype._containsExportValue = function (value, field) {\n    var result = false;\n    if (field._kidsCount > 0) {\n      for (var i = 0; i < field._kidsCount; i++) {\n        var kid = field.itemAt(i);\n        if (kid && this._checkSelected(kid._dictionary, value)) {\n          return true;\n        }\n      }\n    } else {\n      result = this._checkSelected(field._dictionary, value);\n      if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n        var asEntry = field._dictionary.get('AS');\n        if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n          if (field._dictionary.has('Opt')) {\n            var options = field._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n              options.forEach(function (option) {\n                if (option === value) {\n                  result = true;\n                }\n              });\n            }\n          }\n        } else {\n          result = true;\n        }\n      }\n    }\n    return result;\n  };\n  _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n    if (dictionary && dictionary.has('AP')) {\n      var appearance = dictionary.get('AP');\n      if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n        var normalTemplate = appearance.get('N');\n        if (normalTemplate && normalTemplate instanceof _PdfDictionary && normalTemplate.has(value) && !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  _ExportHelper.prototype._dispose = function () {\n    this.exportAppearance = undefined;\n    this._asPerSpecification = undefined;\n    this._skipBorderStyle = undefined;\n    this._fileName = undefined;\n    this._document = undefined;\n    this._crossReference = undefined;\n    this._isAnnotationExport = undefined;\n    this._isAnnotationImport = undefined;\n    this._key = undefined;\n    this._formKey = undefined;\n    this._exportEmptyFields = undefined;\n    this._groupReferences = undefined;\n    this._groupHolders = undefined;\n    this._encodeDictionary = undefined;\n    this._annotationTypes = undefined;\n    this._annotationAttributes = undefined;\n    this._xmlDocument = undefined;\n    this._parser = undefined;\n    this._table = undefined;\n    this._fields = undefined;\n    this._richTextValues = undefined;\n    this._jsonData = undefined;\n  };\n  return _ExportHelper;\n}();\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */function (_super) {\n  __extends(_XfdfDocument, _super);\n  function _XfdfDocument(fileName) {\n    var _this = _super.call(this) || this;\n    if (fileName !== null && typeof fileName !== 'undefined') {\n      _this._fileName = fileName;\n    }\n    return _this;\n  }\n  // #region Export Annotations\n  _XfdfDocument.prototype._exportAnnotations = function (document) {\n    this._document = document;\n    this._crossReference = document._crossReference;\n    this._isAnnotationExport = true;\n    return this._save();\n  };\n  _XfdfDocument.prototype._exportFormFields = function (document) {\n    this._document = document;\n    this._crossReference = document._crossReference;\n    this._isAnnotationExport = false;\n    this._key = _getNewGuidString();\n    return this._save();\n  };\n  _XfdfDocument.prototype._save = function () {\n    var writer = new _XmlWriter();\n    writer._writeStartDocument();\n    writer._writeStartElement('xfdf');\n    writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n    writer._writeAttributeString('space', 'preserve', 'xml', null);\n    if (this._isAnnotationExport) {\n      writer._writeStartElement('annots');\n      if (this._document) {\n        for (var i = 0; i < this._document.pageCount; i++) {\n          var page = this._document.getPage(i);\n          var annotations = page.annotations;\n          for (var j = 0; j < annotations.count; j++) {\n            var annotation = annotations.at(j);\n            if (annotation && (!this._annotationTypes || this._annotationTypes.length === 0 || this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation))) {\n              this._exportAnnotationData(annotation, writer, i);\n            }\n          }\n        }\n      }\n      writer._writeEndElement();\n    } else {\n      var form = this._document.form;\n      if (form !== null && typeof form !== 'undefined') {\n        this._exportEmptyFields = form.exportEmptyFields;\n        var count = this._document.form.count;\n        for (var i = 0; i < count; i++) {\n          var field = this._document.form.fieldAt(i);\n          if (field !== null && typeof field !== 'undefined' && field.export) {\n            this._exportFormFieldData(field);\n          }\n        }\n        this._writeFormFieldData(writer, this._asPerSpecification);\n      }\n    }\n    if (!this._asPerSpecification) {\n      writer._writeStartElement('f');\n      writer._writeAttributeString('href', this._fileName);\n    }\n    var result = writer._save();\n    writer._destroy();\n    return result;\n  };\n  _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n    var _this = this;\n    if (isAcrobat === void 0) {\n      isAcrobat = false;\n    }\n    if (isAcrobat) {\n      writer._writeStartElement('f');\n      writer._writeAttributeString('href', this._fileName);\n      writer._writeEndElement();\n      var elements = this._getElements(this._table); // eslint-disable-line\n      if (elements && elements.size > 0) {\n        writer._writeStartElement('fields');\n        var flag_1 = false;\n        elements.forEach(function (value, key) {\n          writer._writeStartElement('field');\n          writer._writeAttributeString('name', key.toString());\n          if (Array.isArray(value)) {\n            value.forEach(function (item) {\n              writer._writeStartElement('value');\n              writer._writeString(item.toString());\n              writer._writeEndElement();\n              flag_1 = true;\n            });\n          }\n          if (value instanceof Map) {\n            _this._writeFieldName(value, writer);\n          } else if (!flag_1 && !value.toString().endsWith(_this._formKey) || !flag_1 && _this._formKey === '') {\n            writer._writeStartElement('value');\n            writer._writeString(value.toString());\n            writer._writeEndElement();\n          } else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n            writer._writeStartElement('value-richtext');\n            var text = value.toString();\n            if (text.startsWith('<?xml version=\"1.0\"?>')) {\n              text = text.substring(21);\n            }\n            var start = text.length - _this._formKey.length;\n            text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n            writer._writeRaw(text);\n            writer._writeEndElement();\n          }\n          writer._writeEndElement();\n          flag_1 = false;\n        });\n        writer._writeEndElement();\n      }\n      writer._writeStartElement('ids');\n      var hasId = false;\n      if (this._crossReference._root.has('ID')) {\n        var id = this._crossReference._root.getArray('ID');\n        if (id && id.length >= 1) {\n          writer._writeAttributeString('original', id[0]);\n          writer._writeAttributeString('modified', id[1]);\n          hasId = true;\n        }\n      }\n      if (!hasId) {\n        writer._writeAttributeString('original', '');\n        writer._writeAttributeString('modified', '');\n      }\n      writer._writeEndElement();\n    } else {\n      writer._writeStartElement('fields');\n      this._table.forEach(function (value, key) {\n        writer._writeStartElement('field');\n        writer._writeAttributeString('name', key.toString());\n        if (Array.isArray(value)) {\n          value.forEach(function (item) {\n            writer._writeStartElement('value');\n            writer._writeString(item.toString());\n            writer._writeEndElement();\n          });\n        } else {\n          writer._writeStartElement('value');\n          writer._writeString(value.toString());\n          writer._writeEndElement();\n        }\n        writer._writeEndElement();\n      });\n      writer._writeEndElement();\n    }\n  };\n  _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n    var _this = this;\n    value.forEach(function (value, key) {\n      if (value instanceof Map) {\n        writer._writeStartElement('field');\n        writer._writeAttributeString('name', key.toString());\n        _this._writeFieldName(value, writer);\n        writer._writeEndElement();\n      } else {\n        writer._writeStartElement('field');\n        writer._writeAttributeString('name', key.toString());\n        if (Array.isArray(value)) {\n          value.forEach(function (item) {\n            writer._writeStartElement('value');\n            writer._writeString(item.toString());\n            writer._writeEndElement();\n          });\n        } else {\n          if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n            writer._writeStartElement('value');\n            writer._writeString(value.toString());\n          } else {\n            writer._writeStartElement('value-richtext');\n            var text = value.toString();\n            if (text.startsWith('<?xml version=\"1.0\"?>')) {\n              text = text.substring(21);\n            }\n            var start = text.length - _this._formKey.length;\n            text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n            writer._writeRaw(text);\n          }\n          writer._writeEndElement();\n        }\n        writer._writeEndElement();\n      }\n    });\n  };\n  _XfdfDocument.prototype._getElements = function (table) {\n    var _this = this;\n    var elements = new Map(); // eslint-disable-line\n    table.forEach(function (value, key) {\n      var parentElements = elements; // eslint-disable-line\n      if (key.toString().indexOf('.') !== -1) {\n        var values = key.toString().split('.');\n        for (var i = 0; i < values.length; i++) {\n          var element = values[Number.parseInt(i.toString(), 10)];\n          if (parentElements.has(element)) {\n            _this._getElements(parentElements[element]); // eslint-disable-line\n            parentElements = parentElements[element]; // eslint-disable-line\n          } else {\n            if (i === values.length - 1) {\n              parentElements.set(element, value);\n            } else {\n              var newTable = new Map(); // eslint-disable-line\n              parentElements.set(element, newTable);\n              parentElements = newTable;\n            }\n          }\n        }\n      } else {\n        parentElements.set(key, value);\n      }\n    });\n    return elements;\n  };\n  _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n    return typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1;\n  };\n  _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n    if (annotation._dictionary && !(annotation instanceof PdfFileLinkAnnotation || annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation || annotation instanceof PdfUriAnnotation)) {\n      this._writeAnnotationData(writer, pageIndex, annotation);\n    }\n  };\n  _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n    var hasAppearance = false;\n    var annotation;\n    var dictionary;\n    if (source instanceof PdfAnnotation) {\n      annotation = source;\n      dictionary = source._dictionary;\n    } else {\n      dictionary = source;\n    }\n    var type = this._getAnnotationType(dictionary);\n    this._skipBorderStyle = false;\n    if (type && type !== '') {\n      if (!this._annotationAttributes) {\n        this._annotationAttributes = [];\n      }\n      writer._writeStartElement(type.toLowerCase());\n      writer._writeAttributeString('page', pageIndex.toString());\n      var lineAnnotation = void 0;\n      var points = void 0;\n      switch (type) {\n        case 'Line':\n          lineAnnotation = annotation;\n          points = lineAnnotation.linePoints;\n          writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n          writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n          break;\n        case 'Stamp':\n          hasAppearance = true;\n          break;\n        case 'Square':\n          hasAppearance = true;\n          break;\n      }\n      if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n        var borderEffect = dictionary.get('BE');\n        if (borderEffect && borderEffect.has('S')) {\n          this._skipBorderStyle = true;\n        }\n      }\n      this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n      writer._writeEndElement();\n      this._annotationAttributes = [];\n    }\n  };\n  _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n    var _this = this;\n    var isBorderStyle = false;\n    if (dictionary.has('Type')) {\n      var type = dictionary.get('Type');\n      isBorderStyle = type && type.name === 'Border' && this._skipBorderStyle;\n    }\n    dictionary.forEach(function (key, value) {\n      if (!(!hasAppearance && key === 'AP' || key === 'P' || key === 'Parent')) {\n        var entry = void 0; // eslint-disable-line\n        if (value instanceof _PdfReference) {\n          entry = dictionary.get(key);\n        }\n        if (entry && entry instanceof _PdfDictionary) {\n          switch (key) {\n            case 'BS':\n              _this._writeDictionary(entry, pageIndex, writer, false);\n              break;\n            case 'BE':\n              _this._writeDictionary(entry, pageIndex, writer, false);\n              break;\n            case 'IRT':\n              if (entry.has('NM')) {\n                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n              }\n              break;\n          }\n        } else if (value instanceof _PdfDictionary) {\n          _this._writeDictionary(value, pageIndex, writer, false);\n        } else if (!isBorderStyle || isBorderStyle && key !== 'S') {\n          _this._writeAttribute(writer, key, value);\n        }\n      }\n    });\n    if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n      var stream = this._getAppearanceString(dictionary.get('AP'));\n      if (stream && stream.length > 0) {\n        writer._writeStartElement('appearance');\n        writer._writeRaw(_encode(stream));\n        writer._writeEndElement();\n      }\n    }\n    if (dictionary.has('Measure')) {\n      this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n    }\n    if (dictionary.has('Sound')) {\n      var sound = dictionary.get('Sound');\n      if (sound && sound.dictionary) {\n        var soundDictionary = sound.dictionary;\n        if (soundDictionary.has('B')) {\n          writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n        }\n        if (soundDictionary.has('C')) {\n          writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n        }\n        if (soundDictionary.has('E')) {\n          writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n        }\n        if (soundDictionary.has('R')) {\n          writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n        }\n        if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n          var data = _byteArrayToHexString(sound.getBytes());\n          if (data && data !== '') {\n            writer._writeStartElement('data');\n            writer._writeAttributeString('MODE', 'raw');\n            writer._writeAttributeString('encoding', 'hex');\n            if (soundDictionary.has('Length')) {\n              writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n            }\n            if (soundDictionary.has('Filter')) {\n              writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n            }\n            writer._writeRaw(data);\n            writer._writeEndElement();\n          }\n        }\n      }\n    } else if (dictionary.has('FS')) {\n      var fsDictionary = dictionary.get('FS');\n      if (fsDictionary) {\n        if (fsDictionary.has('F')) {\n          writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n        }\n        if (fsDictionary.has('EF')) {\n          var efDictionary = fsDictionary.get('EF');\n          if (efDictionary && efDictionary.has('F')) {\n            var fStream = efDictionary.get('F');\n            if (fStream && fStream.dictionary) {\n              var fDictionary = fStream.dictionary;\n              if (fDictionary.has('Params')) {\n                var paramsDictionary = fDictionary.get('Params');\n                if (paramsDictionary) {\n                  if (paramsDictionary.has('CreationDate')) {\n                    var value = this._getValue(paramsDictionary.get('CreationDate'));\n                    writer._writeAttributeString('creation', value);\n                  }\n                  if (paramsDictionary.has('ModificationDate')) {\n                    var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                    writer._writeAttributeString('modification', value);\n                  }\n                  if (paramsDictionary.has('Size')) {\n                    writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                  }\n                  if (paramsDictionary.has('CheckSum')) {\n                    var value = this._getValue(paramsDictionary.get('CheckSum'));\n                    var checksum = _stringToBytes(value);\n                    var hexString = _byteArrayToHexString(checksum);\n                    writer._writeAttributeString('checksum', hexString);\n                  }\n                }\n              }\n              var data = _byteArrayToHexString(fStream.getBytes());\n              if (data && data !== '') {\n                writer._writeStartElement('data');\n                writer._writeAttributeString('MODE', 'raw');\n                writer._writeAttributeString('encoding', 'hex');\n                if (fDictionary.has('Length')) {\n                  writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                }\n                if (fDictionary.has('Filter')) {\n                  writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                }\n                writer._writeRaw(data);\n                writer._writeEndElement();\n              }\n            }\n          }\n        }\n      }\n    }\n    if (dictionary.has('Vertices')) {\n      writer._writeStartElement('vertices');\n      var vertices = dictionary.getArray('Vertices');\n      if (vertices && vertices.length > 0) {\n        var elementCount = vertices.length;\n        if (elementCount % 2 === 0) {\n          var value = '';\n          for (var i = 0; i < elementCount - 1; i++) {\n            value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n          }\n          value += this._getValue(vertices[elementCount - 1]);\n          if (value && value !== '') {\n            writer._writeRaw(value);\n          }\n        }\n      }\n      writer._writeEndElement();\n    }\n    if (dictionary.has('Popup')) {\n      var popup = dictionary.get('Popup');\n      if (popup) {\n        this._writeAnnotationData(writer, pageIndex, popup);\n      }\n    }\n    if (dictionary.has('DA')) {\n      var defaultAppearance = dictionary.get('DA');\n      if (defaultAppearance) {\n        this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n      }\n    }\n    if (dictionary.has('DS')) {\n      var defaultStyle = dictionary.get('DS');\n      if (defaultStyle) {\n        this._writeRawData(writer, 'defaultstyle', defaultStyle);\n      }\n    }\n    if (dictionary.has('InkList')) {\n      var inkList = dictionary.getArray('InkList');\n      if (inkList && inkList.length > 0) {\n        writer._writeStartElement('inklist');\n        for (var j = 0; j < inkList.length; j++) {\n          writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n        }\n        writer._writeEndElement();\n      }\n    }\n    if (dictionary.has('RC')) {\n      var value = dictionary.get('RC');\n      if (value && value !== '') {\n        var index = value.indexOf('<body');\n        if (index > 0) {\n          value = value.substring(index);\n        }\n        this._writeRawData(writer, 'contents-richtext', value);\n      }\n    }\n    if (dictionary.has('Contents')) {\n      var value = dictionary.get('Contents');\n      if (value && value.length > 0) {\n        writer._writeStartElement('contents');\n        writer._writeString(value);\n        writer._writeEndElement();\n      }\n    }\n  };\n  _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n    var textWriter = new _XmlWriter(true);\n    textWriter._writeStartElement('DICT');\n    textWriter._writeAttributeString('KEY', 'AP');\n    this._writeAppearanceDictionary(textWriter, appearance);\n    textWriter._writeEndElement();\n    var buffer = textWriter.buffer;\n    textWriter._destroy();\n    return buffer;\n  };\n  _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n    var _this = this;\n    if (dictionary && dictionary.size > 0) {\n      dictionary.forEach(function (key, value) {\n        _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n      });\n    }\n  };\n  _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key) {\n    if (primitive !== null && typeof primitive !== 'undefined') {\n      if (primitive instanceof _PdfName) {\n        this._writePrefix(writer, 'NAME', key);\n        writer._writeAttributeString('VAL', primitive.name);\n        writer._writeEndElement();\n      } else if (Array.isArray(primitive)) {\n        this._writePrefix(writer, 'ARRAY', key);\n        this._writeArray(writer, dictionary.getArray(key), dictionary);\n        writer._writeEndElement();\n      } else if (typeof primitive === 'string') {\n        this._writePrefix(writer, 'STRING', key);\n        writer._writeAttributeString('VAL', primitive);\n        writer._writeEndElement();\n      } else if (typeof primitive === 'number') {\n        if (Number.isInteger(primitive)) {\n          this._writePrefix(writer, 'INT', key);\n          writer._writeAttributeString('VAL', primitive.toString());\n        } else {\n          this._writePrefix(writer, 'FIXED', key);\n          writer._writeAttributeString('VAL', primitive.toFixed(6));\n        }\n        writer._writeEndElement();\n      } else if (typeof primitive === 'boolean') {\n        this._writePrefix(writer, 'BOOL', key);\n        writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n        writer._writeEndElement();\n      } else if (primitive instanceof _PdfDictionary) {\n        this._writePrefix(writer, 'DICT', key);\n        this._writeAppearanceDictionary(writer, primitive);\n        writer._writeEndElement();\n      } else if (primitive === null) {\n        this._writePrefix(writer, 'NULL', key);\n        writer._writeEndElement();\n      } else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n        var streamDictionary = primitive.dictionary;\n        this._writePrefix(writer, 'STREAM', key);\n        writer._writeAttributeString('DEFINE', '');\n        if (streamDictionary.has('Subtype') && this._getValue(streamDictionary.get('Subtype')) === 'Image' || !streamDictionary.has('Type') && !streamDictionary.has('Subtype')) {\n          var data = primitive.getString(true);\n          if (!streamDictionary.has('Length') && data && data !== '') {\n            streamDictionary.update('Length', primitive.length);\n          }\n          this._writeAppearanceDictionary(writer, streamDictionary);\n          writer._writeStartElement('DATA');\n          writer._writeAttributeString('MODE', 'RAW');\n          writer._writeAttributeString('ENCODING', 'HEX');\n          if (data && data !== '') {\n            writer._writeRaw(data);\n          }\n        } else {\n          var data = primitive.getString();\n          if (!streamDictionary.has('Length') && data && data !== '') {\n            streamDictionary.update('Length', primitive.length);\n          }\n          this._writeAppearanceDictionary(writer, streamDictionary);\n          writer._writeStartElement('DATA');\n          writer._writeAttributeString('MODE', 'FILTERED');\n          writer._writeAttributeString('ENCODING', 'ASCII');\n          if (data && data !== '') {\n            writer._writeRaw(data);\n          }\n        }\n        writer._writeEndElement();\n        writer._writeEndElement();\n      } else if (primitive instanceof _PdfReference && this._crossReference) {\n        this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key);\n      }\n    }\n  };\n  _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n    writer._writeStartElement(name);\n    if (key) {\n      writer._writeAttributeString('KEY', key);\n    }\n  };\n  _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n    var _this = this;\n    array.forEach(function (entry) {\n      _this._writeObject(writer, entry, dictionary);\n    });\n  };\n  _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n    if (isParsing === void 0) {\n      isParsing = false;\n    }\n    if (isParsing) {\n      value = value.replace('&amp;', '&');\n      value = value.replace('&lt;', '<');\n      value = value.replace('&gt;', '>');\n    } else {\n      value = value.replace('&', '&amp;');\n      value = value.replace('<', '&lt;');\n      value = value.replace('>', '&gt;');\n    }\n    return value;\n  };\n  _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n    if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n      switch (key) {\n        case 'C':\n          this._writeColor(writer, primitive, 'color', 'c');\n          break;\n        case 'IC':\n          this._writeColor(writer, primitive, 'interior-color');\n          break;\n        case 'M':\n          this._writeAttributeString(writer, 'date', primitive);\n          break;\n        case 'NM':\n          this._writeAttributeString(writer, 'name', primitive);\n          break;\n        case 'Name':\n          this._writeAttributeString(writer, 'icon', primitive);\n          break;\n        case 'Subj':\n          this._writeAttributeString(writer, 'subject', primitive);\n          break;\n        case 'T':\n          this._writeAttributeString(writer, 'title', primitive);\n          break;\n        case 'Rotate':\n          this._writeAttributeString(writer, 'rotation', primitive);\n          break;\n        case 'W':\n          this._writeAttributeString(writer, 'width', primitive);\n          break;\n        case 'LE':\n          if (primitive && Array.isArray(primitive)) {\n            if (primitive.length === 2) {\n              writer._writeAttributeString('head', this._getValue(primitive[0]));\n              writer._writeAttributeString('tail', this._getValue(primitive[1]));\n            }\n          } else if (primitive instanceof _PdfName) {\n            this._writeAttributeString(writer, 'head', primitive);\n          }\n          break;\n        case 'S':\n          if (this._annotationAttributes.indexOf('style') === -1) {\n            switch (this._getValue(primitive)) {\n              case 'D':\n                writer._writeAttributeString('style', 'dash');\n                break;\n              case 'C':\n                writer._writeAttributeString('style', 'cloudy');\n                break;\n              case 'S':\n                writer._writeAttributeString('style', 'solid');\n                break;\n              case 'B':\n                writer._writeAttributeString('style', 'bevelled');\n                break;\n              case 'I':\n                writer._writeAttributeString('style', 'inset');\n                break;\n              case 'U':\n                writer._writeAttributeString('style', 'underline');\n                break;\n            }\n            this._annotationAttributes.push('style');\n          }\n          break;\n        case 'D':\n          this._writeAttributeString(writer, 'dashes', primitive);\n          break;\n        case 'I':\n          this._writeAttributeString(writer, 'intensity', primitive);\n          break;\n        case 'RD':\n          this._writeAttributeString(writer, 'fringe', primitive);\n          break;\n        case 'IT':\n          this._writeAttributeString(writer, 'IT', primitive);\n          break;\n        case 'RT':\n          this._writeAttributeString(writer, 'replyType', primitive, true);\n          break;\n        case 'LL':\n          this._writeAttributeString(writer, 'leaderLength', primitive);\n          break;\n        case 'LLE':\n          this._writeAttributeString(writer, 'leaderExtend', primitive);\n          break;\n        case 'Cap':\n          this._writeAttributeString(writer, 'caption', primitive);\n          break;\n        case 'Q':\n          this._writeAttributeString(writer, 'justification', primitive);\n          break;\n        case 'CP':\n          this._writeAttributeString(writer, 'caption-style', primitive);\n          break;\n        case 'CL':\n          this._writeAttributeString(writer, 'callout', primitive);\n          break;\n        case 'QuadPoints':\n          this._writeAttributeString(writer, 'coords', primitive);\n          break;\n        case 'CA':\n          this._writeAttributeString(writer, 'opacity', primitive);\n          break;\n        case 'F':\n          if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n            var flag = _annotationFlagsToString(primitive);\n            writer._writeAttributeString('flags', flag);\n            this._annotationAttributes.push('flags');\n          }\n          break;\n        case 'InkList':\n        case 'Type':\n        case 'Subtype':\n        case 'P':\n        case 'Parent':\n        case 'L':\n        case 'Contents':\n        case 'RC':\n        case 'DA':\n        case 'DS':\n        case 'FS':\n        case 'MeasurementTypes':\n        case 'Vertices':\n        case 'GroupNesting':\n        case 'ITEx':\n        case 'TextMarkupContent':\n          break;\n        default:\n          this._writeAttributeString(writer, key.toLowerCase(), primitive);\n          break;\n      }\n    }\n  };\n  _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n    if (isLowerCase === void 0) {\n      isLowerCase = false;\n    }\n    if (this._annotationAttributes.indexOf(attribute) === -1) {\n      var value = this._getValue(primitive);\n      writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n      this._annotationAttributes.push(attribute);\n    }\n  };\n  _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n    if (value && value !== '') {\n      writer._writeStartElement(name);\n      writer._writeRaw(value);\n      writer._writeEndElement();\n    }\n  };\n  _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n    var color = this._getColor(primitive);\n    if (typeof primitive === 'number' && tag) {\n      var c = this._getValue(primitive);\n      if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n        writer._writeAttributeString(tag, c);\n        this._annotationAttributes.push(tag);\n      }\n    }\n    if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n      writer._writeAttributeString(attribute, color);\n      this._annotationAttributes.push(attribute);\n    }\n  };\n  _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n    writer._writeStartElement('measure');\n    if (dictionary) {\n      if (dictionary.has('R')) {\n        writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n      }\n      if (dictionary.has('A')) {\n        var array = dictionary.getArray('A');\n        writer._writeStartElement('area');\n        this._exportMeasureFormatDetails(array[0], writer);\n        writer._writeEndElement();\n      }\n      if (dictionary.has('D')) {\n        var array = dictionary.getArray('D');\n        writer._writeStartElement('distance');\n        this._exportMeasureFormatDetails(array[0], writer);\n        writer._writeEndElement();\n      }\n      if (dictionary.has('X')) {\n        var array = dictionary.getArray('X');\n        writer._writeStartElement('xformat');\n        this._exportMeasureFormatDetails(array[0], writer);\n        writer._writeEndElement();\n      }\n    }\n    writer._writeEndElement();\n  };\n  _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n    if (measurementDetails.has('C')) {\n      writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n    }\n    if (measurementDetails.has('F')) {\n      writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n    }\n    if (measurementDetails.has('D')) {\n      writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n    }\n    if (measurementDetails.has('RD')) {\n      writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n    }\n    if (measurementDetails.has('U')) {\n      writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n    }\n    if (measurementDetails.has('RT')) {\n      writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n    }\n    if (measurementDetails.has('SS')) {\n      writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n    }\n    if (measurementDetails.has('FD')) {\n      writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n    }\n  };\n  //#endregion Export Annotations\n  //#region Import Annotations\n  _XfdfDocument.prototype._importAnnotations = function (document, data) {\n    this._document = document;\n    this._crossReference = document._crossReference;\n    this._isAnnotationExport = false;\n    var xml = _bytesToString(data);\n    this._xmlDocument = new DOMParser().parseFromString(xml, 'text/xml');\n    this._isAnnotationImport = true;\n    this._readXmlData(this._xmlDocument.documentElement);\n  };\n  _XfdfDocument.prototype._importFormData = function (document, data) {\n    this._document = document;\n    this._crossReference = document._crossReference;\n    this._isAnnotationExport = false;\n    this._xmlDocument = new DOMParser().parseFromString(_bytesToString(data), 'text/xml');\n    this._readXmlData(this._xmlDocument.documentElement);\n  };\n  _XfdfDocument.prototype._readXmlData = function (root) {\n    if (root && root.nodeType === 1) {\n      this._checkXfdf(root);\n      if (this._isAnnotationImport) {\n        var xList = root.getElementsByTagName('annots');\n        if (xList && xList.length > 0) {\n          for (var i = 0; i < xList.length; i++) {\n            var child = xList.item(i);\n            if (child && child.localName === 'annots' && child.hasChildNodes()) {\n              var childeNodes = child.childNodes;\n              for (var j = 0; j < childeNodes.length; j++) {\n                var childNode = childeNodes.item(j);\n                if (childNode && childNode.nodeType === 1) {\n                  var element = childNode;\n                  if (element && element.nodeType === 1) {\n                    this._parseAnnotationData(element);\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (this._groupHolders.length > 0) {\n          for (var i = 0; i < this._groupHolders.length; i++) {\n            var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n            var inReplyTo = dictionary.get('IRT');\n            if (inReplyTo && inReplyTo !== '') {\n              if (this._groupReferences.has(inReplyTo)) {\n                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n              } else {\n                delete dictionary._map.IRT;\n              }\n            }\n          }\n        }\n        this._groupHolders = [];\n        this._groupReferences = new Map();\n      } else {\n        this._parseFormData(root);\n      }\n    }\n    this._dispose();\n  };\n  _XfdfDocument.prototype._checkXfdf = function (element) {\n    if (element.nodeName !== 'xfdf') {\n      throw new Error('Invalid XFDF file.');\n    }\n  };\n  _XfdfDocument.prototype._parseFormData = function (root) {\n    var list = root.getElementsByTagName('f');\n    if (list && list.length > 0) {\n      var fileNameElement = list.item(0);\n      if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n        var fileName = fileNameElement.getAttribute('href');\n        if (fileName && fileName !== '') {\n          this._fileName = fileName;\n        }\n      }\n    }\n    list = root.getElementsByTagName('ids');\n    if (list && list.length > 0) {\n      this._asPerSpecification = true;\n    }\n    var child = root.childNodes;\n    if (child && child.length > 0) {\n      for (var i = 0; i < child.length; i++) {\n        var childNode = child.item(i);\n        if (childNode && childNode.nodeType === 1) {\n          var element = childNode;\n          if (element && element.localName === 'fields' && element.hasChildNodes()) {\n            var fieldList = element.childNodes;\n            var elements = [];\n            for (var j = 0; j < fieldList.length; j++) {\n              var field = fieldList.item(j);\n              if (field && field.nodeType === 1) {\n                var filedElement = field;\n                if (filedElement && filedElement.localName === 'field') {\n                  elements.push(filedElement);\n                }\n              }\n            }\n            this._importFormNodes(elements);\n          }\n        }\n      }\n    }\n    this._importField();\n  };\n  _XfdfDocument.prototype._importFormNodes = function (list) {\n    for (var i = 0; i < list.length; i++) {\n      var child = list[Number.parseInt(i.toString(), 10)];\n      var fieldName = '';\n      if (child) {\n        if (child.hasAttribute('name')) {\n          fieldName = child.getAttribute('name');\n        }\n        if (fieldName && fieldName !== '') {\n          var values = child.getElementsByTagName('value');\n          if (values && values.length > 0) {\n            var node = child;\n            var textName = '';\n            while (node.localName !== 'fields') {\n              if (textName.length > 0) {\n                textName = '.' + textName;\n              }\n              var skip = false;\n              if (node.hasAttribute('name')) {\n                var name_1 = node.getAttribute('name');\n                if (name_1 && name_1 !== '') {\n                  textName = name_1 + textName;\n                  skip = true;\n                }\n              }\n              if (!skip) {\n                textName += node.localName;\n              }\n              node = node.parentElement;\n            }\n            fieldName = textName;\n            var dataValues = void 0;\n            if (this._fields.has(fieldName)) {\n              dataValues = this._fields.get(fieldName);\n            } else {\n              dataValues = [];\n            }\n            for (var j = 0; j < values.length; j++) {\n              dataValues.push(values.item(j).textContent);\n            }\n            this._fields.set(fieldName, dataValues);\n          } else {\n            values = child.getElementsByTagName('value-richtext');\n            if (values && values.length > 0) {\n              var element = values.item(0);\n              if (element) {\n                var node = child;\n                var textName = '';\n                while (node.localName !== 'fields') {\n                  if (textName.length > 0) {\n                    textName = '.' + textName;\n                  }\n                  var skip = false;\n                  if (node.hasAttribute('name')) {\n                    var name_2 = node.getAttribute('name');\n                    if (name_2 && name_2 !== '') {\n                      textName = name_2 + textName;\n                      skip = true;\n                    }\n                  }\n                  if (!skip) {\n                    textName += node.localName;\n                  }\n                  node = node.parentElement;\n                }\n                fieldName = textName;\n                var richText = element.textContent;\n                if (element.childNodes && element.childNodes.length > 0) {\n                  var childNode = element.childNodes[0];\n                  if (childNode && childNode.hasChildNodes()) {\n                    richText = '';\n                    var childNodes = childNode.childNodes;\n                    for (var j = void 0; j < childNodes.length; j++) {\n                      richText += childNodes.item(j).textContent + '\\r';\n                    }\n                    if (richText.length > 0) {\n                      richText = richText.substring(0, richText.length - 1);\n                    } else {\n                      richText = element.textContent;\n                    }\n                  }\n                }\n                var dataValues = void 0;\n                if (this._fields.has(fieldName)) {\n                  dataValues = this._fields.get(fieldName);\n                } else {\n                  dataValues = [];\n                }\n                for (var j = 0; j < values.length; j++) {\n                  dataValues.push(richText);\n                }\n                this._fields.set(fieldName, dataValues);\n                if (!this._richTextValues.has(fieldName)) {\n                  this._richTextValues.set(fieldName, element.innerHTML);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  _XfdfDocument.prototype._parseAnnotationData = function (element) {\n    if (element) {\n      var pageIndex = -1;\n      if (element.hasAttributes && element.hasAttribute('page')) {\n        pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n        if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n          var page = this._document.getPage(pageIndex);\n          var annotationDictionary = this._getAnnotationDictionary(page, element);\n          if (annotationDictionary && annotationDictionary.size > 0) {\n            var pageDictionary = page._pageDictionary;\n            if (pageDictionary) {\n              var annotations = page.annotations;\n              var annotation = annotations._parseAnnotation(annotationDictionary);\n              if (annotation) {\n                annotation._isImported = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                  this._addReferenceToGroup(reference, annotationDictionary);\n                }\n                annotation._ref = reference;\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, annotation);\n                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n    var dictionary = new _PdfDictionary(this._crossReference);\n    dictionary.update('Type', _PdfName.get('Annot'));\n    var isValidType = true;\n    switch (element.localName.toLowerCase()) {\n      case 'line':\n        dictionary.update('Subtype', _PdfName.get('Line'));\n        if (element.hasAttribute('start') && element.hasAttribute('end')) {\n          var points_1 = [];\n          element.getAttribute('start').split(',').forEach(function (value) {\n            points_1.push(Number.parseFloat(value));\n          });\n          element.getAttribute('end').split(',').forEach(function (value) {\n            points_1.push(Number.parseFloat(value));\n          });\n          if (points_1.length === 4) {\n            dictionary.update('L', points_1);\n          }\n        }\n        this._addLineEndStyle(dictionary, element);\n        break;\n      case 'circle':\n        dictionary.update('Subtype', _PdfName.get('Circle'));\n        break;\n      case 'square':\n        dictionary.update('Subtype', _PdfName.get('Square'));\n        break;\n      case 'polyline':\n        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        this._addLineEndStyle(dictionary, element);\n        break;\n      case 'polygon':\n        dictionary.update('Subtype', _PdfName.get('Polygon'));\n        this._addLineEndStyle(dictionary, element);\n        break;\n      case 'ink':\n        dictionary.update('Subtype', _PdfName.get('Ink'));\n        break;\n      case 'popup':\n        dictionary.update('Subtype', _PdfName.get('Popup'));\n        break;\n      case 'text':\n        dictionary.update('Subtype', _PdfName.get('Text'));\n        break;\n      case 'freetext':\n        dictionary.update('Subtype', _PdfName.get('FreeText'));\n        this._addLineEndStyle(dictionary, element);\n        break;\n      case 'stamp':\n        dictionary.update('Subtype', _PdfName.get('Stamp'));\n        break;\n      case 'highlight':\n        dictionary.update('Subtype', _PdfName.get('Highlight'));\n        break;\n      case 'squiggly':\n        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n        break;\n      case 'underline':\n        dictionary.update('Subtype', _PdfName.get('Underline'));\n        break;\n      case 'strikeout':\n        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n        break;\n      case 'fileattachment':\n        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        break;\n      case 'sound':\n        dictionary.update('Subtype', _PdfName.get('Sound'));\n        break;\n      case 'caret':\n        dictionary.update('Subtype', _PdfName.get('Caret'));\n        break;\n      case 'redact':\n        dictionary.update('Subtype', _PdfName.get('Redact'));\n        break;\n      default:\n        isValidType = false;\n        break;\n    }\n    if (isValidType) {\n      this._addAnnotationData(dictionary, element, page);\n    }\n    return dictionary;\n  };\n  _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n    this._addBorderStyle(dictionary, element);\n    this._applyAttributeValues(dictionary, element.attributes);\n    this._parseInnerElements(dictionary, element, page);\n    this._addMeasureDictionary(dictionary, element);\n  };\n  _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n    var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n    var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n    if (element.hasAttribute('width')) {\n      borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n    }\n    var isBasicStyle = true;\n    if (element.hasAttribute('style')) {\n      var style = '';\n      switch (element.getAttribute('style')) {\n        case 'dash':\n          style = 'D';\n          break;\n        case 'solid':\n          style = 'S';\n          break;\n        case 'bevelled':\n          style = 'B';\n          break;\n        case 'inset':\n          style = 'I';\n          break;\n        case 'underline':\n          style = 'U';\n          break;\n        case 'cloudy':\n          style = 'C';\n          isBasicStyle = false;\n          break;\n      }\n      if (style !== '') {\n        (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n        if (!isBasicStyle && element.hasAttribute('intensity')) {\n          borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n        } else if (element.hasAttribute('dashes')) {\n          var dashes_1 = [];\n          element.getAttribute('dashes').split(',').forEach(function (value) {\n            dashes_1.push(Number.parseFloat(value));\n          });\n          borderStyleDictionary.update('D', dashes_1);\n        }\n      }\n    }\n    if (borderEffectDictionary.size > 0) {\n      dictionary.update('BE', borderEffectDictionary);\n    }\n    if (borderStyleDictionary.size > 0) {\n      borderStyleDictionary.update('Type', 'Border');\n      dictionary.update('BS', borderStyleDictionary);\n    }\n  };\n  _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n    for (var i = 0; i < attributes.length; i++) {\n      var attribute = attributes[Number.parseInt(i.toString(), 10)];\n      var value = attribute.value;\n      var values = void 0;\n      var leaderExtend = void 0;\n      switch (attribute.name.toLowerCase()) {\n        case 'page':\n        case 'start':\n        case 'end':\n        case 'width':\n        case 'head':\n        case 'tail':\n        case 'style':\n        case 'intensity':\n        case 'itex':\n          break;\n        case 'state':\n          this._addString(dictionary, 'State', value);\n          break;\n        case 'statemodel':\n          this._addString(dictionary, 'StateModel', value);\n          break;\n        case 'replytype':\n          if (value === 'group') {\n            dictionary.update('RT', _PdfName.get('Group'));\n          }\n          break;\n        case 'inreplyto':\n          this._addString(dictionary, 'IRT', value);\n          break;\n        case 'rect':\n          values = this._obtainPoints(value);\n          if (values && values.length === 4) {\n            dictionary.update('Rect', values);\n          }\n          break;\n        case 'color':\n          values = _convertToColor(value);\n          if (values && values.length === 3) {\n            dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n          }\n          break;\n        case 'interior-color':\n          values = _convertToColor(value);\n          if (values && values.length === 3) {\n            dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n          }\n          break;\n        case 'date':\n          this._addString(dictionary, 'M', value);\n          break;\n        case 'creationdate':\n          this._addString(dictionary, 'CreationDate', value);\n          break;\n        case 'name':\n          this._addString(dictionary, 'NM', value);\n          break;\n        case 'icon':\n          if (value && value !== '') {\n            dictionary.update('Name', _PdfName.get(value));\n          }\n          break;\n        case 'subject':\n          this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n          break;\n        case 'title':\n          this._addString(dictionary, 'T', this._getFormatedString(value, true));\n          break;\n        case 'rotation':\n          this._addInt(dictionary, 'Rotate', value);\n          break;\n        case 'justification':\n          this._addInt(dictionary, 'Q', value);\n          break;\n        case 'fringe':\n          this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n          break;\n        case 'it':\n          if (value && value !== '') {\n            dictionary.update('IT', _PdfName.get(value));\n          }\n          break;\n        case 'leaderlength':\n          this._addFloat(dictionary, 'LL', value);\n          break;\n        case 'leaderextend':\n          leaderExtend = Number.parseFloat(value);\n          if (typeof leaderExtend !== 'undefined') {\n            dictionary.update('LLE', leaderExtend);\n          }\n          break;\n        case 'caption':\n          if (value && value !== '') {\n            dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n          }\n          break;\n        case 'caption-style':\n          if (value && value !== '') {\n            dictionary.update('CP', _PdfName.get(value));\n          }\n          break;\n        case 'callout':\n          this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n          break;\n        case 'coords':\n          this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n          break;\n        case 'border':\n          this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n          break;\n        case 'opacity':\n          this._addFloat(dictionary, 'CA', value);\n          break;\n        case 'flags':\n          if (value && value !== '') {\n            var annotFlag = PdfAnnotationFlag.default;\n            var flags = value.split(',');\n            for (var i_1 = 0; i_1 < flags.length; i_1++) {\n              var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n              if (i_1 === 0) {\n                annotFlag = flagType;\n              } else {\n                annotFlag |= flagType;\n              }\n            }\n            dictionary.update('F', annotFlag);\n          }\n          break;\n        case 'open':\n          if (value && value !== '') {\n            dictionary.update('Open', value === 'true' || value === 'yes' ? true : false);\n          }\n          break;\n        case 'calibrate':\n          this._addString(dictionary, 'Calibrate', value);\n          break;\n        case 'customdata':\n          this._addString(dictionary, 'CustomData', value);\n          break;\n        case 'overlaytext':\n          dictionary.update('OverlayText', value);\n          break;\n        case 'repeat':\n          dictionary.update('Repeat', value === 'true' || value === 'yes' ? true : false);\n          break;\n        default:\n          if (this._document._allowImportCustomData) {\n            this._addString(dictionary, attribute.name, value);\n          }\n          break;\n      }\n    }\n  };\n  _XfdfDocument.prototype._obtainPoints = function (value) {\n    var points = [];\n    value.split(',').forEach(function (value) {\n      points.push(Number.parseFloat(value));\n    });\n    return points;\n  };\n  _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n    if (element.hasChildNodes) {\n      var children = element.childNodes;\n      var _loop_1 = function (index) {\n        var child = children[Number.parseInt(index.toString(), 10)];\n        if (child.nodeType === 1) {\n          var childElement = child;\n          var textContent = child.textContent;\n          var innerHTML = childElement.innerHTML;\n          switch (child.nodeName.toLowerCase()) {\n            case 'popup':\n              if (childElement && childElement.hasAttributes) {\n                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                if (popupDictionary.size > 0) {\n                  var reference = this_1._crossReference._getNextReference();\n                  this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                  dictionary.update('Popup', reference);\n                  if (popupDictionary.has('NM')) {\n                    this_1._addReferenceToGroup(reference, popupDictionary);\n                  }\n                }\n              }\n              break;\n            case 'contents':\n              if (textContent && textContent !== '') {\n                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n              }\n              break;\n            case 'contents-richtext':\n              if (innerHTML && innerHTML !== '') {\n                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n              }\n              break;\n            case 'defaultstyle':\n              this_1._addString(dictionary, 'DS', textContent);\n              break;\n            case 'defaultappearance':\n              this_1._addString(dictionary, 'DA', textContent);\n              break;\n            case 'vertices':\n              if (textContent && textContent !== '') {\n                var vertices_1 = [];\n                textContent.split(',').forEach(function (value) {\n                  if (value.indexOf(';') !== -1) {\n                    value.split(';').forEach(function (innerValue) {\n                      vertices_1.push(innerValue);\n                    });\n                  } else {\n                    vertices_1.push(value);\n                  }\n                });\n                if (vertices_1.length > 0) {\n                  var verticesArray_1 = [];\n                  vertices_1.forEach(function (value) {\n                    verticesArray_1.push(Number.parseFloat(value));\n                  });\n                  dictionary.update('Vertices', verticesArray_1);\n                }\n              }\n              break;\n            case 'appearance':\n              this_1._addAppearanceData(child, dictionary);\n              break;\n            case 'inklist':\n              if (child.hasChildNodes) {\n                var inkListCollection = [];\n                var childNodes = child.childNodes;\n                var _loop_2 = function (i) {\n                  var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                  if (inkChild && inkChild.nodeType === 1) {\n                    var inkChildElement = inkChild;\n                    if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                      if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                        var points_2 = [];\n                        inkChildElement.textContent.split(',').forEach(function (value) {\n                          if (value.indexOf(';') !== -1) {\n                            value.split(';').forEach(function (innerValue) {\n                              points_2.push(innerValue);\n                            });\n                          } else {\n                            points_2.push(value);\n                          }\n                        });\n                        if (points_2.length > 0) {\n                          var pointsArray_1 = [];\n                          points_2.forEach(function (value) {\n                            pointsArray_1.push(Number.parseFloat(value));\n                          });\n                          inkListCollection.push(pointsArray_1);\n                        }\n                      }\n                    }\n                  }\n                };\n                for (var i = 0; i < childNodes.length; i++) {\n                  _loop_2(i);\n                }\n                dictionary.update('InkList', inkListCollection);\n              }\n              break;\n            case 'data':\n              this_1._addStreamData(child, dictionary, element);\n              break;\n          }\n        }\n      };\n      var this_1 = this;\n      for (var index = 0; index < children.length; index++) {\n        _loop_1(index);\n      }\n    }\n  };\n  _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n    if (child && child.textContent && child.textContent !== '') {\n      var raw = _hexStringToByteArray(child.textContent, true);\n      if (raw && raw.length > 0) {\n        if (dictionary.has('Subtype')) {\n          var subtype = dictionary.get('Subtype');\n          if (subtype && subtype.name === 'FileAttachment') {\n            this._addFileAttachment(dictionary, parent, raw);\n          } else if (subtype && subtype.name === 'Sound') {\n            this._addSound(dictionary, parent, raw);\n          }\n        }\n      }\n    }\n  };\n  _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n    var soundStream = new _PdfContentStream(raw);\n    soundStream.dictionary._crossReference = this._crossReference;\n    soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n    if (element.hasAttribute('bits')) {\n      this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n    }\n    if (element.hasAttribute('rate')) {\n      this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n    }\n    if (element.hasAttribute('channels')) {\n      this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n    }\n    if (element.hasAttribute('encoding')) {\n      var value = element.getAttribute('encoding');\n      if (value && value !== '') {\n        soundStream.dictionary.update('E', _PdfName.get(value));\n      }\n    }\n    if (element.hasAttribute('filter')) {\n      soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n    }\n    var soundReference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(soundReference, soundStream);\n    dictionary.update('Sound', soundReference);\n  };\n  _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n    var fileDictionary = new _PdfDictionary(this._crossReference);\n    fileDictionary.update('Type', _PdfName.get('Filespec'));\n    if (element.hasAttribute('file')) {\n      var value = element.getAttribute('file');\n      this._addString(fileDictionary, 'F', value);\n      this._addString(fileDictionary, 'UF', value);\n    }\n    var fileStream = new _PdfContentStream(raw);\n    fileStream.dictionary._crossReference = this._crossReference;\n    var param = new _PdfDictionary(this._crossReference);\n    if (element.hasAttribute('size')) {\n      var size = Number.parseInt(element.getAttribute('size'), 10);\n      if (typeof size !== 'undefined') {\n        param.update('Size', size);\n        fileStream.dictionary.update('DL', size);\n      }\n    }\n    if (element.hasAttribute('modification')) {\n      this._addString(param, 'ModDate', element.getAttribute('modification'));\n    }\n    if (element.hasAttribute('creation')) {\n      this._addString(param, 'CreationDate', element.getAttribute('creation'));\n    }\n    fileStream.dictionary.update('Params', param);\n    if (element.hasAttribute('mimetype')) {\n      this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n    }\n    fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n    var embeddedFile = new _PdfDictionary(this._crossReference);\n    var reference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(reference, fileStream);\n    embeddedFile.update('F', reference);\n    fileDictionary.update('EF', embeddedFile);\n    var fileReference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(fileReference, fileDictionary);\n    dictionary.update('FS', fileReference);\n  };\n  _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n    var innerText = element.textContent;\n    if (innerText && innerText !== '') {\n      var document_1 = new DOMParser().parseFromString(atob(innerText), 'text/xml');\n      if (document_1 && document_1.hasChildNodes) {\n        var childNodes = document_1.childNodes;\n        if (childNodes && childNodes.length === 1) {\n          var rootNode = childNodes[0];\n          if (rootNode && rootNode.nodeType === 1) {\n            var rootElement = rootNode;\n            if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n              var key = rootElement.getAttribute('KEY');\n              if (key && key === 'AP' && rootElement.hasChildNodes) {\n                var appearance = new _PdfDictionary(this._crossReference);\n                childNodes = rootElement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                  this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                }\n                if (appearance.size > 0) {\n                  dictionary.update('AP', appearance);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  _XfdfDocument.prototype._getAppearance = function (source, child) {\n    var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n    if (child && child.nodeType === 1) {\n      var element = child;\n      if (element && element.localName) {\n        var stream = void 0;\n        var dictionary = void 0;\n        var data = void 0;\n        switch (element.localName) {\n          case 'STREAM':\n            stream = this._getStream(element);\n            if (stream) {\n              var reference = this._crossReference._getNextReference();\n              this._crossReference._cacheMap.set(reference, stream);\n              this._addKey(reference, appearance, element);\n            }\n            break;\n          case 'DICT':\n            dictionary = this._getDictionary(element);\n            if (dictionary) {\n              var reference = this._crossReference._getNextReference();\n              this._crossReference._cacheMap.set(reference, dictionary);\n              this._addKey(reference, appearance, element);\n            }\n            break;\n          case 'ARRAY':\n            this._addKey(this._getArray(element), appearance, element);\n            break;\n          case 'FIXED':\n            this._addKey(this._getFixed(element), appearance, element);\n            break;\n          case 'INT':\n            this._addKey(this._getInt(element), appearance, element);\n            break;\n          case 'STRING':\n            this._addKey(this._getString(element), appearance, element);\n            break;\n          case 'NAME':\n            this._addKey(this._getName(element), appearance, element);\n            break;\n          case 'BOOL':\n            this._addKey(this._getBoolean(element), appearance, element);\n            break;\n          case 'DATA':\n            data = this._getData(element);\n            if (data && data.length > 0 && source instanceof _PdfContentStream) {\n              source._bytes = data;\n              var isImage = false;\n              if (appearance && appearance.has('Subtype')) {\n                var type = appearance.get('Subtype');\n                isImage = type && type.name === 'Image';\n              }\n              if (isImage) {\n                source._isCompress = false;\n              } else {\n                if (source.dictionary.has('Length')) {\n                  delete source.dictionary._map.Length;\n                }\n                if (source.dictionary.has('Filter')) {\n                  delete source.dictionary._map.Filter;\n                }\n              }\n            }\n            break;\n        }\n      }\n    }\n  };\n  _XfdfDocument.prototype._getStream = function (element) {\n    var stream = new _PdfContentStream([]);\n    stream.dictionary._crossReference = this._crossReference;\n    if (element.hasChildNodes) {\n      var childNodes = element.childNodes;\n      for (var i = 0; i < childNodes.length; i++) {\n        var child = childNodes[Number.parseInt(i.toString(), 10)];\n        if (child && child.nodeType === 1) {\n          this._getAppearance(stream, child);\n        }\n      }\n    }\n    return stream;\n  };\n  _XfdfDocument.prototype._getDictionary = function (element) {\n    var dictionary = new _PdfDictionary(this._crossReference);\n    if (element.hasChildNodes) {\n      var childNodes = element.childNodes;\n      for (var i = 0; i < childNodes.length; i++) {\n        var child = childNodes[Number.parseInt(i.toString(), 10)];\n        if (child && child.nodeType === 1) {\n          this._getAppearance(dictionary, child);\n        }\n      }\n    }\n    return dictionary;\n  };\n  _XfdfDocument.prototype._getArray = function (element) {\n    var array = []; // eslint-disable-line\n    if (element.hasChildNodes) {\n      var childNodes = element.childNodes;\n      for (var i = 0; i < childNodes.length; i++) {\n        var child = childNodes[Number.parseInt(i.toString(), 10)];\n        if (child && child.nodeType === 1) {\n          this._addArrayElements(array, child);\n        }\n      }\n    }\n    return array;\n  };\n  _XfdfDocument.prototype._getData = function (element) {\n    var data = [];\n    if (element && element.textContent && element.textContent !== '' && element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n      var mode = element.getAttribute('MODE');\n      var encoding = element.getAttribute('ENCODING');\n      if (mode && encoding) {\n        var innerText = this._getFormatedString(element.textContent, true);\n        if (mode === 'FILTERED' && encoding === 'ASCII') {\n          data = _stringToBytes(innerText, true);\n        } else if (mode === 'RAW' && encoding === 'HEX') {\n          data = _hexStringToByteArray(innerText, true);\n        }\n      }\n    }\n    return data;\n  };\n  _XfdfDocument.prototype._addArrayElements = function (array, child) {\n    if (child && child.nodeType === 1) {\n      var element = child;\n      var stream = void 0;\n      var dictionary = void 0;\n      var value = void 0; // eslint-disable-line\n      var floatValue = void 0;\n      var intValue = void 0;\n      var name_3;\n      var bool = void 0;\n      switch (element.localName) {\n        case 'STREAM':\n          stream = this._getStream(element);\n          if (stream) {\n            var reference = this._crossReference._getNextReference();\n            stream.reference = reference;\n            this._crossReference._cacheMap.set(reference, stream);\n            array.push(reference);\n          }\n          break;\n        case 'DICT':\n          dictionary = this._getDictionary(element);\n          if (dictionary) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, dictionary);\n            array.push(reference);\n          }\n          break;\n        case 'ARRAY':\n          value = this._getArray(element);\n          if (value) {\n            array.push(value);\n          }\n          break;\n        case 'FIXED':\n          floatValue = this._getFixed(element);\n          if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n            array.push(floatValue);\n          }\n          break;\n        case 'INT':\n          intValue = this._getInt(element);\n          if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n            array.push(intValue);\n          }\n          break;\n        case 'NAME':\n          name_3 = this._getName(element);\n          if (name_3) {\n            array.push(name_3);\n          }\n          break;\n        case 'BOOL':\n          bool = this._getBoolean(element);\n          if (typeof bool !== 'undefined' && bool !== null) {\n            array.push(bool);\n          }\n          break;\n      }\n    }\n  };\n  _XfdfDocument.prototype._getFixed = function (element) {\n    var value;\n    if (element && element.hasAttribute('VAL')) {\n      value = Number.parseFloat(element.getAttribute('VAL'));\n    }\n    return value;\n  };\n  _XfdfDocument.prototype._getInt = function (element) {\n    var value;\n    if (element && element.hasAttribute('VAL')) {\n      value = Number.parseInt(element.getAttribute('VAL'), 10);\n    }\n    return value;\n  };\n  _XfdfDocument.prototype._getString = function (element) {\n    var value;\n    if (element && element.hasAttribute('VAL')) {\n      value = element.getAttribute('VAL');\n    }\n    return value;\n  };\n  _XfdfDocument.prototype._getName = function (element) {\n    var value;\n    if (element && element.hasAttribute('VAL')) {\n      value = _PdfName.get(element.getAttribute('VAL'));\n    }\n    return value;\n  };\n  _XfdfDocument.prototype._getBoolean = function (element) {\n    var value;\n    if (element && element.hasAttribute('VAL')) {\n      value = element.getAttribute('VAL') === 'true' ? true : false;\n    }\n    return value;\n  };\n  _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n    var measurement;\n    var area;\n    var distance;\n    var xformat;\n    if (element.hasChildNodes) {\n      var childNodes = element.childNodes;\n      for (var i = 0; i < childNodes.length; i++) {\n        var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n        if (childElement && childElement.localName === 'measure') {\n          measurement = childElement;\n          break;\n        }\n      }\n    }\n    var measureDictionary = new _PdfDictionary(this._crossReference);\n    var dDict = new _PdfDictionary(this._crossReference);\n    var aDict = new _PdfDictionary(this._crossReference);\n    var xDict = new _PdfDictionary(this._crossReference);\n    var dArray = [];\n    var aArray = [];\n    var xArray = [];\n    if (measurement) {\n      measureDictionary.update('Type', _PdfName.get('Measure'));\n      if (measurement.hasAttribute('rateValue')) {\n        var attribute = measurement.getAttribute('rateValue');\n        if (attribute && attribute !== '') {\n          measureDictionary.update('R', attribute);\n        }\n      }\n      if (measurement.hasChildNodes) {\n        var childNodes = measurement.childNodes;\n        for (var i = 0; i < childNodes.length; i++) {\n          var child = childNodes[Number.parseInt(i.toString(), 10)];\n          if (child && child.nodeType === 1) {\n            var childElement = child;\n            switch (childElement.nodeName.toLowerCase()) {\n              case 'distance':\n                distance = childElement;\n                break;\n              case 'area':\n                area = childElement;\n                break;\n              case 'xformat':\n                xformat = childElement;\n                break;\n            }\n          }\n        }\n      }\n    }\n    if (xformat) {\n      this._addElements(xformat, xDict);\n      xArray.push(xDict);\n    }\n    if (distance) {\n      this._addElements(distance, dDict);\n      dArray.push(dDict);\n    }\n    if (area) {\n      this._addElements(area, aDict);\n      aArray.push(aDict);\n    }\n    measureDictionary.set('A', aArray);\n    measureDictionary.set('D', dArray);\n    measureDictionary.set('X', xArray);\n    if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, measureDictionary);\n      dictionary.update('Measure', reference);\n    }\n  };\n  _XfdfDocument.prototype._addElements = function (element, dictionary) {\n    if (element.hasAttribute('d')) {\n      this._addFloat(dictionary, 'D', element.getAttribute('d'));\n    }\n    if (element.hasAttribute('c')) {\n      this._addFloat(dictionary, 'C', element.getAttribute('c'));\n    }\n    if (element.hasAttribute('rt')) {\n      dictionary.update('RT', element.getAttribute('rt'));\n    }\n    if (element.hasAttribute('rd')) {\n      dictionary.update('RD', element.getAttribute('rt'));\n    }\n    if (element.hasAttribute('ss')) {\n      dictionary.update('SS', element.getAttribute('ss'));\n    }\n    if (element.hasAttribute('u')) {\n      dictionary.update('U', element.getAttribute('u'));\n    }\n    if (element.hasAttribute('f')) {\n      dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n    }\n    if (element.hasAttribute('fd')) {\n      dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n    }\n  };\n  _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n    if (value && value !== '') {\n      dictionary.update(key, value);\n    }\n  };\n  _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n    var intValue = Number.parseInt(value, 10);\n    if (typeof intValue !== 'undefined') {\n      dictionary.update(key, intValue);\n    }\n  };\n  _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n    var floatValue = Number.parseFloat(value);\n    if (typeof floatValue !== 'undefined') {\n      dictionary.update(key, floatValue);\n    }\n  };\n  _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n    if (points && points.length > 0) {\n      dictionary.update(key, points);\n    }\n  };\n  _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n    if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n      dictionary.update(element.getAttribute('KEY'), primitive);\n    }\n  };\n  _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n    var beginLineStyle = '';\n    if (element.hasAttribute('head')) {\n      beginLineStyle = element.getAttribute('head');\n    }\n    var endLineStyle = '';\n    if (element.hasAttribute('tail')) {\n      endLineStyle = element.getAttribute('tail');\n    }\n    if (beginLineStyle && beginLineStyle !== '') {\n      if (endLineStyle && endLineStyle !== '') {\n        var lineEndingStyles = [];\n        lineEndingStyles.push(_PdfName.get(beginLineStyle));\n        lineEndingStyles.push(_PdfName.get(endLineStyle));\n        dictionary.update('LE', lineEndingStyles);\n      } else {\n        dictionary.update('LE', _PdfName.get(beginLineStyle));\n      }\n    } else if (endLineStyle && endLineStyle !== '') {\n      dictionary.update('LE', _PdfName.get(endLineStyle));\n    }\n  };\n  return _XfdfDocument;\n}(_ExportHelper);\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */function () {\n  function _FontStructure(dictionary) {\n    this._baseFontEncoding = '';\n    this._dictionary = dictionary;\n    this._fontType = this._dictionary.get('Subtype').name;\n  }\n  Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n    get: function () {\n      if (!this._differencesDictionary) {\n        this._differencesDictionary = this._getDifferencesDictionary();\n      }\n      return this._differencesDictionary;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n    get: function () {\n      return this._baseFontEncoding;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n    get: function () {\n      if (!this._fontEncoding) {\n        this._fontEncoding = this._getFontEncoding();\n      }\n      return this._fontEncoding;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n    get: function () {\n      if (!this._fontName) {\n        this._fontName = this._getFontName();\n      }\n      return this._fontName;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  _FontStructure.prototype._getFontEncoding = function () {\n    var encoding = '';\n    if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n      var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n      if (baseFont instanceof _PdfName) {\n        encoding = baseFont.name;\n      } else if (baseFont instanceof _PdfDictionary) {\n        if (baseFont.has('BaseEncoding')) {\n          var baseFontEncoding = baseFont.get('BaseEncoding');\n          if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n            this._baseFontEncoding = baseFontEncoding.name;\n          }\n        }\n        if (baseFont.has('Type')) {\n          var fontEncoding = baseFont.get('Type');\n          if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n            encoding = fontEncoding.name;\n          }\n        }\n      }\n    }\n    if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n      encoding = 'Identity-H';\n    }\n    return encoding;\n  };\n  _FontStructure.prototype._getDifferencesDictionary = function () {\n    var result = new Map();\n    if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n      var encoding = this._dictionary.get('Encoding');\n      if (encoding !== null && typeof encoding !== 'undefined' && encoding instanceof _PdfDictionary && encoding.has('Differences')) {\n        var differences = encoding.getArray('Differences'); // eslint-disable-line\n        var count = 0;\n        if (differences !== null && typeof differences !== 'undefined') {\n          for (var i = 0; i < differences.length; i++) {\n            var text = '';\n            var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n            if (typeof item === 'number') {\n              text = item.toString();\n              count = Number.parseInt(text, 10);\n            } else if (item instanceof _PdfName) {\n              text = item.name;\n              if (this._fontType === 'Type1' && text === '.notdef') {\n                text = ' ';\n                result.set(count.toString(), _getLatinCharacter(text));\n              } else {\n                text = _getLatinCharacter(text);\n                text = _getSpecialCharacter(text);\n                if (!result.has(count.toString())) {\n                  result.set(count.toString(), _getLatinCharacter(text));\n                }\n                count++;\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  };\n  _FontStructure.prototype._getFontName = function () {\n    var fontName = '';\n    if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n      var baseFont = this._dictionary.get('BaseFont');\n      var font = baseFont.name;\n      if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n        var index = font.lastIndexOf('#20');\n        font = font.substring(0, index);\n        font += '+';\n      }\n      if (baseFont.name.indexOf('+') !== -1) {\n        fontName = baseFont.name.split('+')[1];\n      } else {\n        fontName = baseFont.name;\n      }\n      if (fontName.indexOf('-') !== -1) {\n        fontName = fontName.split('-')[0];\n      } else if (fontName.indexOf(',') !== -1) {\n        fontName = fontName.split(',')[0];\n      }\n      if (fontName.indexOf('MT') !== -1) {\n        fontName = fontName.replace('MT', '');\n      }\n      if (fontName.indexOf('#20') !== -1) {\n        fontName = fontName.replace('#20', ' ');\n      }\n      if (fontName.indexOf('#') !== -1) {\n        fontName = this._decodeHexFontName(fontName);\n      }\n    }\n    return fontName;\n  };\n  _FontStructure.prototype._decodeHexFontName = function (fontName) {\n    var result = fontName;\n    for (var i = 0; i < fontName.length; i++) {\n      if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n        var hexValue = fontName[i + 1] + fontName[i + 2];\n        var value = Number.parseInt(hexValue, 16);\n        if (value !== 0) {\n          result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n          i += 2;\n        }\n        if (result.indexOf('#') === -1) {\n          break;\n        }\n      }\n    }\n    return result;\n  };\n  return _FontStructure;\n}();\nexport { _FontStructure };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","_XmlWriter","PdfAnnotation","PdfFileLinkAnnotation","PdfTextWebLinkAnnotation","PdfDocumentLinkAnnotation","PdfUriAnnotation","PdfAnnotationFlag","_PdfDictionary","_PdfName","_PdfReference","_PdfBaseStream","_PdfContentStream","_hexStringToByteArray","_stringToAnnotationFlags","_convertToColor","_bytesToString","_hexStringToString","_getSpecialCharacter","_getLatinCharacter","_getInheritableProperty","_getNewGuidString","_byteArrayToHexString","_stringToBytes","_annotationFlagsToString","_encode","PdfCheckBoxField","PdfComboBoxField","PdfListBoxField","PdfRadioButtonListField","PdfTextBoxField","PdfListField","_ExportHelper","_asPerSpecification","_fileName","_formKey","_exportEmptyFields","_groupReferences","Map","_groupHolders","_richTextPrefix","_table","_fields","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","field","textValue","export","type","_dictionary","name","font","_getEncodedFontDictionary","fieldName","_getEncodedValue","value","selectedValue","set","_getExportValue","has","_obtainSelectedValue","length","values","i","push","Number","parseInt","toString","text","radioButton","selectedIndex","options","getArray","index","isNaN","current","_getAppearanceStateValue","widget","itemAt","_defaultIndex","dictionary","get","_exportFormFieldData","_key","replaceValue","multiLine","replace","isArray","_format","_getAnnotationType","subtype","_getValue","primitive","isJson","_getValidString","colorArray","_getColor","color","r","Math","round","toUpperCase","g","indexOf","source","kids","appearance","kid","normal","resource","_this","structure","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","root","_document","form","encoding","pdfEncoding","encodingDictionary","_crossReference","reference","_getNextReference","_cacheMap","fontEncodeDictionary","differencesDictionary","size","result_1","isSkip_1","forEach","key","fontDictionary","holder","_fetch","input","updatedString","code","charCodeAt","difference","_fontType","_baseFontEncoding","_fontEncoding","_fontName","item","element","_addReferenceToGroup","update","_handlePopup","annotations","annotationDictionary","pageDictionary","popupReference","getRaw","popup","popupAnnotation","_parseAnnotation","_annotations","_updated","_parsedAnnotations","_importField","count","richTextValue","_getFieldIndex","fieldAt","_importFieldData","readOnly","selectedValues_1","split","indexes_1","options_1","_options","option","_map","AP","lowerCase","toLowerCase","_containsExportValue","checked","_kidsCount","result","_checkSelected","asEntry","normalTemplate","toLocaleLowerCase","_dispose","exportAppearance","undefined","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","_super","fileName","call","_exportAnnotations","document","_save","_exportFormFields","writer","_writeStartDocument","_writeStartElement","_writeAttributeString","pageCount","page","getPage","j","annotation","at","_checkAnnotationType","_exportAnnotationData","_writeEndElement","exportEmptyFields","_writeFormFieldData","_destroy","isAcrobat","elements","_getElements","flag_1","_writeString","_writeFieldName","endsWith","startsWith","substring","start","_writeRaw","hasId","_root","id","table","parentElements","newTable","_type","pageIndex","_writeAnnotationData","hasAppearance","lineAnnotation","points","linePoints","borderEffect","_writeDictionary","isBorderStyle","entry","_writeAttribute","stream","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","data","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","checksum","hexString","vertices","elementCount","defaultAppearance","_writeRawData","defaultStyle","inkList","_writeElementString","textWriter","_writeAppearanceDictionary","buffer","_writeObject","_writePrefix","_writeArray","isInteger","toFixed","streamDictionary","getString","array","_getFormatedString","isParsing","_writeColor","flag","attribute","isLowerCase","tag","c","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","localName","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","Error","list","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","skip","name_1","parentElement","dataValues","textContent","name_2","richText","innerHTML","hasAttributes","_getAnnotationDictionary","_pageDictionary","_isImported","_ref","isValidType","points_1","parseFloat","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","style","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","default","flags","i_1","flagType","_allowImportCustomData","children","_loop_1","childElement","popupDictionary","this_1","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","_loop_2","inkChild","inkChildElement","points_2","pointsArray_1","_addStreamData","parent","raw","_addFileAttachment","_addSound","soundStream","soundReference","fileDictionary","fileStream","param","embeddedFile","fileReference","innerText","document_1","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getString","_getName","_getBoolean","_getData","_bytes","isImage","_isCompress","Length","Filter","_addArrayElements","mode","floatValue","intValue","name_3","bool","measurement","area","distance","xformat","measureDictionary","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","beginLineStyle","endLineStyle","lineEndingStyles","defineProperty","_differencesDictionary","_getDifferencesDictionary","enumerable","configurable","_getFontEncoding","_getFontName","baseFont","baseFontEncoding","fontEncoding","differences","fontName","lastIndexOf","_decodeHexFontName","hexValue","String","fromCharCode"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/import-export/xfdf-document.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                this._writeArray(writer, dictionary.getArray(key), dictionary);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = primitive.getString(true);\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                case 'TextMarkupContent':\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}