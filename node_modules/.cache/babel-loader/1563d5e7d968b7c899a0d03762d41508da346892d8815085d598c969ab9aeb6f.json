{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */function (_super) {\n  __extends(TextElement, _super);\n  /**\n   * set the id for each element\n   */\n  function TextElement() {\n    var _this = _super.call(this) || this;\n    /**\n     * sets or gets the image source\n     */\n    _this.textContent = '';\n    /** @private */\n    _this.canMeasure = true;\n    /** @private */\n    _this.canConsiderBounds = true;\n    /** @private */\n    _this.doWrap = true;\n    _this.textNodes = [];\n    /**\n     * Defines the appearance of the text element\n     */\n    _this.style = {\n      color: 'black',\n      fill: 'transparent',\n      strokeColor: 'black',\n      strokeWidth: 1,\n      fontFamily: 'Arial',\n      fontSize: 12,\n      whiteSpace: 'CollapseSpace',\n      textWrapping: 'WrapWithOverflow',\n      textAlign: 'Center',\n      italic: false,\n      bold: false,\n      textDecoration: 'None',\n      strokeDashArray: '',\n      opacity: 1,\n      textOverflow: 'Wrap'\n    };\n    _this.style.fill = 'transparent';\n    _this.style.strokeColor = 'transparent';\n    return _this;\n  }\n  Object.defineProperty(TextElement.prototype, \"content\", {\n    /**\n     * gets the content for the text element\n     */\n    get: function () {\n      return this.textContent;\n    },\n    /**\n     * sets the content for the text element\n     */\n    set: function (value) {\n      if (this.textContent !== value) {\n        this.textContent = value;\n        this.isDirt = true;\n        this.doWrap = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextElement.prototype, \"childNodes\", {\n    /**\n     * sets the content for the text element\n     */\n    get: function () {\n      return this.textNodes;\n    },\n    /**\n     * gets the content for the text element\n     */\n    set: function (value) {\n      this.textNodes = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n    /**\n     * gets the wrapBounds for the text\n     */\n    get: function () {\n      return this.textWrapBounds;\n    },\n    /**\n     * sets the wrapBounds for the text\n     */\n    set: function (value) {\n      this.textWrapBounds = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @private */\n  TextElement.prototype.refreshTextElement = function () {\n    this.isDirt = true;\n  };\n  /**\n   * Measures the minimum size that is required for the text element\n   * @param availableSize\n   */\n  TextElement.prototype.measure = function (availableSize) {\n    var size;\n    if (this.isDirt && this.canMeasure) {\n      size = measureText(this, this.style, this.content, this.width || availableSize.width);\n    } else {\n      size = this.desiredSize;\n    }\n    if (this.width === undefined || this.height === undefined) {\n      this.desiredSize = new Size(size.width, size.height);\n    } else {\n      this.desiredSize = new Size(this.width, this.height);\n    }\n    this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n    return this.desiredSize;\n  };\n  /**\n   * Arranges the text element\n   * @param desiredSize\n   */\n  TextElement.prototype.arrange = function (desiredSize) {\n    if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n      this.doWrap = true;\n    }\n    this.actualSize = desiredSize;\n    this.updateBounds();\n    this.isDirt = false;\n    return this.actualSize;\n  };\n  return TextElement;\n}(DrawingElement);\nexport { TextElement };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Size","DrawingElement","measureText","TextElement","_super","_this","call","textContent","canMeasure","canConsiderBounds","doWrap","textNodes","style","color","fill","strokeColor","strokeWidth","fontFamily","fontSize","whiteSpace","textWrapping","textAlign","italic","bold","textDecoration","strokeDashArray","opacity","textOverflow","defineProperty","get","set","value","isDirt","enumerable","configurable","textWrapBounds","refreshTextElement","measure","availableSize","size","content","width","desiredSize","undefined","height","validateDesiredSize","arrange","actualSize","updateBounds"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-drawings/src/drawing/core/elements/text-element.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 1,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DrawingElement));\nexport { TextElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}