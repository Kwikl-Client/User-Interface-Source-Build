{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _convertStringToBytes, _bytesToString, _hexStringToByteArray, _decode } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */function (_super) {\n  __extends(_JsonDocument, _super);\n  function _JsonDocument(fileName) {\n    var _this = _super.call(this) || this;\n    if (fileName !== null && typeof fileName !== 'undefined') {\n      _this._fileName = fileName;\n    }\n    return _this;\n  }\n  // #region Export Annotations\n  _JsonDocument.prototype._exportAnnotations = function (document) {\n    this._document = document;\n    this._crossReference = document._crossReference;\n    this._isAnnotationExport = true;\n    this._exportAnnotationData(document, document.pageCount);\n    return this._save();\n  };\n  _JsonDocument.prototype._exportFormFields = function (document) {\n    this._document = document;\n    this._crossReference = document._crossReference;\n    this._isAnnotationExport = false;\n    var form = this._document.form;\n    if (form !== null && typeof form !== 'undefined') {\n      this._exportEmptyFields = form.exportEmptyFields;\n      var count = this._document.form.count;\n      for (var i = 0; i < count; i++) {\n        var field = this._document.form.fieldAt(i);\n        this._exportFormFieldsData(field);\n      }\n      this._writeFormFieldData();\n    }\n    return this._save();\n  };\n  _JsonDocument.prototype._save = function () {\n    var result = new Uint8Array(this._jsonData);\n    this._jsonData = [];\n    return result;\n  };\n  _JsonDocument.prototype._writeFormFieldData = function () {\n    var _this = this;\n    this._jsonData.push(this._openingBrace);\n    var index = 0;\n    this._table.forEach(function (value, key) {\n      key = _this._getValidString(key);\n      _this._jsonData.push(_this._doubleQuotes);\n      for (var i = 0; i < key.length; i++) {\n        _this._jsonData.push(key.charCodeAt(i));\n      }\n      if (typeof value === 'string' || Array.isArray(value) && value.length === 1) {\n        value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n        _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n        for (var i = 0; i < value.length; i++) {\n          _this._jsonData.push(value.charCodeAt(i));\n        }\n        _this._jsonData.push(_this._doubleQuotes);\n      } else {\n        _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n        for (var j = 0; j < value.length; j++) {\n          _this._jsonData.push(_this._doubleQuotes);\n          var entry = value[Number.parseInt(j.toString(), 10)];\n          for (var k = 0; k < entry.length; k++) {\n            _this._jsonData.push(entry.charCodeAt(k));\n          }\n          _this._jsonData.push(_this._doubleQuotes);\n          if (j < value.length - 1) {\n            _this._jsonData.push(_this._comma);\n          }\n        }\n        _this._jsonData.push(_this._closingBracket);\n      }\n      if (index < _this._table.size - 1) {\n        _this._jsonData.push(_this._comma);\n      }\n      index++;\n    });\n    this._jsonData.push(this._closingBrace);\n  };\n  _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n    var _this = this;\n    var isAnnotationAdded = false;\n    this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n    for (var i = 0; i < pageCount; i++) {\n      var page = document.getPage(i);\n      if (page && page.annotations.count > 0) {\n        this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n        var pageNumber = _convertStringToBytes(i.toString(), []);\n        pageNumber.forEach(function (entry) {\n          _this._jsonData.push(entry);\n        });\n        this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n        isAnnotationAdded = true;\n      }\n      for (var k = 0; k < page.annotations.count; k++) {\n        var annotation = page.annotations.at(k);\n        if (annotation) {\n          this._exportAnnotation(annotation, i);\n          this._jsonData = _convertStringToBytes(this._convertToJson(this._table), this._jsonData);\n          if (k < page.annotations.count - 1) {\n            this._jsonData.push(this._comma);\n          }\n          this._table.clear();\n        }\n      }\n      if (page && page.annotations.count > 0) {\n        this._jsonData.push(this._closingBracket, this._closingBrace);\n      }\n    }\n    this._jsonData.push(this._closingBrace, this._closingBrace);\n  };\n  _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n    var hasAppearance = false;\n    var dictionary = annotation._dictionary;\n    var type = this._getAnnotationType(annotation._dictionary);\n    this._skipBorderStyle = false;\n    if (type && type !== '') {\n      this._table.set('type', type);\n      this._table.set('page', index.toString());\n      var lineAnnotation = void 0;\n      var points = void 0;\n      switch (type) {\n        case 'Line':\n          lineAnnotation = annotation;\n          points = lineAnnotation.linePoints;\n          this._table.set('start', points[0].toString() + ',' + points[1].toString());\n          this._table.set('end', points[2].toString() + ',' + points[3].toString());\n          break;\n        case 'Stamp':\n          hasAppearance = true;\n          break;\n        case 'Square':\n          hasAppearance = true;\n          break;\n      }\n      if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n        var borderEffect = dictionary.get('BE');\n        if (borderEffect && borderEffect.has('S')) {\n          this._skipBorderStyle = true;\n        }\n      }\n      this._writeDictionary(dictionary, index, hasAppearance);\n    }\n  };\n  _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n    var _this = this;\n    var isBorderStyle = false;\n    if (dictionary.has('Type')) {\n      var type = dictionary.get('Type');\n      isBorderStyle = type && type.name === 'Border' && this._skipBorderStyle;\n    }\n    dictionary.forEach(function (key, value) {\n      if (!(!hasAppearance && key === 'AP' || key === 'P' || key === 'Parent')) {\n        var entry = void 0; // eslint-disable-line\n        if (value instanceof _PdfReference) {\n          entry = dictionary.get(key);\n        }\n        if (entry && entry instanceof _PdfDictionary) {\n          switch (key) {\n            case 'BS':\n            case 'BE':\n              _this._writeDictionary(entry, pageIndex, false);\n              break;\n            case 'IRT':\n              if (entry.has('NM')) {\n                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n              }\n              break;\n          }\n        } else if (value instanceof _PdfDictionary) {\n          _this._writeDictionary(value, pageIndex, false);\n        } else if (!isBorderStyle || isBorderStyle && key !== 'S') {\n          _this._writeAttribute(key, value, dictionary);\n        }\n      }\n    });\n    if (dictionary.has('Measure')) {\n      this._exportMeasureDictionary(dictionary.get('Measure'));\n    }\n    if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n      var stream = this._getAppearanceString(dictionary.get('AP'));\n      if (stream && stream.length > 0) {\n        this._table.set('appearance', _encode(stream));\n      }\n    }\n    if (dictionary.has('Sound')) {\n      var sound = dictionary.get('Sound');\n      if (sound && sound.dictionary) {\n        var soundDictionary = sound.dictionary;\n        if (soundDictionary.has('B')) {\n          this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n        }\n        if (soundDictionary.has('C')) {\n          this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n        }\n        if (soundDictionary.has('E')) {\n          this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n        }\n        if (soundDictionary.has('R')) {\n          this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n        }\n        if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n          var data = _byteArrayToHexString(sound.getBytes());\n          if (data && data !== '') {\n            this._table.set('MODE', 'raw');\n            this._table.set('encoding', 'hex');\n            if (soundDictionary.has('Length')) {\n              this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n            }\n            if (soundDictionary.has('Filter')) {\n              this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n            }\n            this._table.set('data', data);\n          }\n        }\n      }\n    } else if (dictionary.has('FS')) {\n      var fsDictionary = dictionary.get('FS');\n      if (fsDictionary) {\n        if (fsDictionary.has('F')) {\n          this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n        }\n        if (fsDictionary.has('EF')) {\n          var efDictionary = fsDictionary.get('EF');\n          if (efDictionary && efDictionary.has('F')) {\n            var fStream = efDictionary.get('F');\n            if (fStream && fStream.dictionary) {\n              var fDictionary = fStream.dictionary;\n              if (fDictionary.has('Params')) {\n                var paramsDictionary = fDictionary.get('Params');\n                if (paramsDictionary) {\n                  if (paramsDictionary.has('CreationDate')) {\n                    var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                    this._table.set('creation', value);\n                  }\n                  if (paramsDictionary.has('ModificationDate')) {\n                    var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                    this._table.set('modification', value);\n                  }\n                  if (paramsDictionary.has('Size')) {\n                    this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                  }\n                  if (paramsDictionary.has('CheckSum')) {\n                    var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                    var checksum = _stringToBytes(value);\n                    var hexString = _byteArrayToHexString(checksum);\n                    this._table.set('checksum', hexString);\n                  }\n                }\n              }\n              var data = _byteArrayToHexString(fStream.getBytes());\n              if (data && data !== '') {\n                this._table.set('MODE', 'raw');\n                this._table.set('encoding', 'hex');\n                if (fDictionary.has('Length')) {\n                  this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                }\n                if (fDictionary.has('Filter')) {\n                  this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                }\n                this._table.set('data', data);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n    var color = this._getColor(primitive);\n    if (typeof primitive === 'number' && tag) {\n      var c = this._getValue(primitive, true);\n      if (c && c !== '') {\n        this._table.set(tag, c);\n      }\n    }\n    if (color && color !== '') {\n      this._table.set(attribute, color);\n    }\n  };\n  _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n    if (isLowerCase === void 0) {\n      isLowerCase = false;\n    }\n    var value = this._getValue(primitive, true);\n    this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n  };\n  _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n    var value;\n    switch (key) {\n      case 'C':\n        this._writeColor(primitive, 'color', 'c');\n        break;\n      case 'IC':\n        this._writeColor(primitive, 'interior-color');\n        break;\n      case 'DA':\n        value = dictionary.get('DA');\n        if (value) {\n          this._table.set('defaultappearance', value);\n        }\n        break;\n      case 'M':\n        this._writeAttributeString('date', primitive);\n        break;\n      case 'NM':\n        this._table.set('name', primitive);\n        break;\n      case 'Name':\n        this._writeAttributeString('icon', primitive);\n        break;\n      case 'Subj':\n        this._writeAttributeString('subject', primitive);\n        break;\n      case 'T':\n        this._writeAttributeString('title', primitive);\n        break;\n      case 'Rect':\n        value = this._getValue(primitive, true);\n        if (value) {\n          var rectArray = value.split(',');\n          var subTable = new Map();\n          subTable.set('x', rectArray[0]);\n          subTable.set('y', rectArray[1]);\n          subTable.set('width', rectArray[2]);\n          subTable.set('height', rectArray[3]);\n          this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n        }\n        break;\n      case 'CreationDate':\n        this._writeAttributeString('creationdate', primitive);\n        break;\n      case 'Rotate':\n        this._writeAttributeString('rotation', primitive);\n        break;\n      case 'W':\n        this._writeAttributeString('width', primitive);\n        break;\n      case 'LE':\n        if (primitive && Array.isArray(primitive)) {\n          if (primitive.length === 2) {\n            this._table.set('head', this._getValue(primitive[0], true));\n            this._table.set('tail', this._getValue(primitive[1], true));\n          }\n        } else if (primitive instanceof _PdfName) {\n          this._writeAttributeString('head', primitive);\n        }\n        break;\n      case 'S':\n        switch (this._getValue(primitive, true)) {\n          case 'D':\n            this._table.set('style', 'dash');\n            break;\n          case 'C':\n            this._table.set('style', 'cloudy');\n            break;\n          case 'S':\n            this._table.set('style', 'solid');\n            break;\n          case 'B':\n            this._table.set('style', 'bevelled');\n            break;\n          case 'I':\n            this._table.set('style', 'inset');\n            break;\n          case 'U':\n            this._table.set('style', 'underline');\n            break;\n        }\n        break;\n      case 'D':\n        this._writeAttributeString('dashes', primitive);\n        break;\n      case 'I':\n        this._writeAttributeString('intensity', primitive);\n        break;\n      case 'RD':\n        this._writeAttributeString('fringe', primitive);\n        break;\n      case 'IT':\n        this._writeAttributeString('IT', primitive);\n        break;\n      case 'RT':\n        this._writeAttributeString('replyType', primitive, true);\n        break;\n      case 'LL':\n        this._writeAttributeString('leaderLength', primitive);\n        break;\n      case 'LLE':\n        this._writeAttributeString('leaderExtend', primitive);\n        break;\n      case 'Cap':\n        this._writeAttributeString('caption', primitive);\n        break;\n      case 'CP':\n        this._writeAttributeString('caption-style', primitive);\n        break;\n      case 'CL':\n        this._writeAttributeString('callout', primitive);\n        break;\n      case 'QuadPoints':\n        this._writeAttributeString('coords', primitive);\n        break;\n      case 'CA':\n        this._writeAttributeString('opacity', primitive);\n        break;\n      case 'F':\n        if (typeof primitive === 'number') {\n          var flag = _annotationFlagsToString(primitive);\n          this._table.set('flags', flag);\n        }\n        break;\n      case 'Contents':\n        value = dictionary.get('Contents');\n        if (value && value.length > 0) {\n          this._table.set('contents', this._getValidString(value));\n        }\n        break;\n      case 'InkList':\n        this._writeInkList(dictionary);\n        break;\n      case 'Vertices':\n        this._writeVertices(dictionary);\n        break;\n      case 'DS':\n        value = dictionary.get('DS');\n        if (value) {\n          var styleTable = new Map();\n          var textStyle = value.split(';');\n          for (var i = 0; i < textStyle.length; i++) {\n            var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n            if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n              text[0] = text[0].substring(1);\n            }\n            styleTable.set(text[0], text[1]);\n          }\n          this._table.set('defaultStyle', this._convertToJson(styleTable));\n        }\n        break;\n      case 'AllowedInteractions':\n        if (primitive.indexOf('\"') !== -1) {\n          primitive = primitive.replace(/\"/g, '\\\\\"');\n        }\n        this._table.set(key, primitive);\n        break;\n      case 'Type':\n      case 'Subtype':\n      case 'P':\n      case 'Parent':\n      case 'L':\n      case 'RC':\n      case 'FS':\n      case 'MeasurementTypes':\n      case 'GroupNesting':\n      case 'ITEx':\n      case 'TextMarkupContent':\n        break;\n      case 'Border':\n      case 'A':\n      case 'R':\n      case 'X':\n      case 'ca':\n        this._writeAttributeString(key.toLowerCase(), primitive);\n        break;\n      default:\n        this._writeAttributeString(key, primitive);\n        break;\n    }\n  };\n  _JsonDocument.prototype._writeVertices = function (dictionary) {\n    var vertices = dictionary.getArray('Vertices');\n    if (vertices && vertices.length > 0) {\n      var elementCount = vertices.length;\n      if (elementCount % 2 === 0) {\n        var vertice = '';\n        for (var i = 0; i < elementCount - 1; i++) {\n          vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n        }\n        vertice += this._getValue(vertices[elementCount - 1], true);\n        if (vertice && vertice !== '') {\n          this._table.set('vertices', vertice);\n        }\n      }\n    }\n  };\n  _JsonDocument.prototype._writeInkList = function (dictionary) {\n    var inkList = dictionary.getArray('InkList');\n    if (inkList && inkList.length > 0) {\n      var points = new Map();\n      var json = '[';\n      for (var j = 0; j < inkList.length; j++) {\n        json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n        if (j < inkList.length - 1) {\n          json += ',';\n        }\n      }\n      json += ']';\n      points.set('gesture', json);\n      this._table.set('inklist', this._convertToJson(points));\n    }\n  };\n  _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n    if (dictionary) {\n      if (dictionary.has('Type')) {\n        this._table.set('type1', 'Measure');\n      }\n      if (dictionary.has('R')) {\n        this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n      }\n      if (dictionary.has('SubType')) {\n        this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n      }\n      if (dictionary.has('TargetUnitConversion')) {\n        this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n      }\n      if (dictionary.has('A')) {\n        var array = dictionary.getArray('A');\n        this._exportMeasureFormatDetails('area', array[0]);\n      }\n      if (dictionary.has('D')) {\n        var array = dictionary.getArray('D');\n        this._exportMeasureFormatDetails('distance', array[0]);\n      }\n      if (dictionary.has('X')) {\n        var array = dictionary.getArray('X');\n        this._exportMeasureFormatDetails('xformat', array[0]);\n      }\n      if (dictionary.has('T')) {\n        var array = dictionary.getArray('T');\n        this._exportMeasureFormatDetails('tformat', array[0]);\n      }\n      if (dictionary.has('V')) {\n        var array = dictionary.getArray('V');\n        this._exportMeasureFormatDetails('vformat', array[0]);\n      }\n    }\n  };\n  _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n    var details = new Map();\n    if (measurementDetails.has('C')) {\n      details.set('c', this._getValue(measurementDetails.get('C'), true));\n    }\n    if (measurementDetails.has('F')) {\n      details.set('f', this._getValue(measurementDetails.get('F'), true));\n    }\n    if (measurementDetails.has('D')) {\n      details.set('d', this._getValue(measurementDetails.get('D'), true));\n    }\n    if (measurementDetails.has('RD')) {\n      details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n    }\n    if (measurementDetails.has('U')) {\n      details.set('u', this._getValue(measurementDetails.get('U'), true));\n    }\n    if (measurementDetails.has('RT')) {\n      details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n    }\n    if (measurementDetails.has('SS')) {\n      details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n    }\n    if (measurementDetails.has('FD')) {\n      details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n    }\n    this._table.set(key, this._convertToJson(details));\n  };\n  _JsonDocument.prototype._getAppearanceString = function (appearance) {\n    var parentTable = new Map();\n    var appearanceTable = new Map();\n    this._writeAppearanceDictionary(appearanceTable, appearance);\n    parentTable.set('ap', this._convertToJson(appearanceTable));\n    return _stringToBytes(this._convertToJson(parentTable));\n  };\n  _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n    var _this = this;\n    if (dictionary && dictionary.size > 0) {\n      dictionary.forEach(function (key, value) {\n        _this._writeObject(table, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n      });\n    }\n  };\n  _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array) {\n    if (value instanceof _PdfName) {\n      this._writeTable('name', value.name, table, key, array);\n    } else if (Array.isArray(value)) {\n      var array_1 = [];\n      this._writeArray(array_1, value, dictionary);\n      this._writeTable('array', this._convertToJsonArray(array_1), table, key, array_1);\n    } else if (typeof value === 'string') {\n      this._writeTable('string', value, table, key, array);\n    } else if (typeof value === 'number') {\n      this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n    } else if (typeof value === 'boolean') {\n      this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n    } else if (value instanceof _PdfDictionary) {\n      var subTable = new Map();\n      this._writeAppearanceDictionary(subTable, value);\n      this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n    } else if (value instanceof _PdfBaseStream && value.dictionary) {\n      var dataTable = new Map(); // eslint-disable-line\n      var streamTable = new Map(); // eslint-disable-line\n      var streamDictionary = value.dictionary;\n      var data = value.getString(true);\n      if (!streamDictionary.has('Length') && data && data !== '') {\n        streamDictionary.update('Length', value.length);\n      }\n      this._writeAppearanceDictionary(streamTable, streamDictionary);\n      var type = void 0;\n      if (streamDictionary.has('Subtype')) {\n        type = this._getValue(streamDictionary.get('Subtype'));\n      }\n      if (!streamDictionary.has('Type') && !streamDictionary.has('Subtype') || streamDictionary.has('Subtype') && (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType')) {\n        dataTable.set('mode', 'raw');\n        dataTable.set('encoding', 'hex');\n      } else {\n        dataTable.set('mode', 'filtered');\n        dataTable.set('encoding', 'ascii');\n      }\n      if (data && data !== '') {\n        dataTable.set('bytes', data);\n      }\n      streamTable.set('data', this._convertToJson(dataTable));\n      this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n    } else if (value instanceof _PdfReference && this._crossReference) {\n      this._writeObject(table, this._crossReference._fetch(value), dictionary, key);\n    } else if (value === null || typeof value === 'undefined') {\n      this._writeTable('null', 'null', table, key, array);\n    }\n  };\n  _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n    var map = new Map();\n    map.set(tableKey, value);\n    if (key) {\n      table.set(key, this._convertToJson(map));\n    } else if (array) {\n      array.push(map);\n    }\n  };\n  _JsonDocument.prototype._writeArray = function (array, value, dictionary) {\n    for (var i = 0; i < value.length; i++) {\n      this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n    }\n  };\n  _JsonDocument.prototype._convertToJson = function (table) {\n    var j = 0;\n    var json = '{';\n    table.forEach(function (value, key) {\n      if (value.startsWith('{') || value.startsWith('[')) {\n        if (key === 'AllowedInteractions') {\n          json += '\"' + key + '\":\"' + value + '\"';\n        } else {\n          json += '\"' + key + '\":' + value;\n        }\n      } else {\n        if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n          value = value.substring(1);\n        }\n        json += '\"' + key + '\":\"' + value + '\"';\n      }\n      if (j < table.size - 1) {\n        json += ',';\n      }\n      j++;\n    });\n    return json + '}';\n  };\n  _JsonDocument.prototype._convertToJsonArray = function (array) {\n    var json = '[';\n    for (var i = 0; i < array.length; i++) {\n      json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n      if (i < array.length - 1) {\n        json += ',';\n      }\n    }\n    return json + ']';\n  };\n  // #import\n  _JsonDocument.prototype._parseJson = function (document, data) {\n    this._document = document;\n    this._crossReference = document._crossReference;\n    var stringData = _bytesToString(data);\n    if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n      while (stringData.length > 0 && !stringData.endsWith('}')) {\n        stringData = stringData.substring(0, stringData.length - 1);\n      }\n    }\n    return JSON.parse(stringData);\n  };\n  _JsonDocument.prototype._importFormData = function (document, data) {\n    var _this = this;\n    var json = this._parseJson(document, data); // eslint-disable-line\n    if (json) {\n      var keys = Object.keys(json);\n      if (keys && keys.length > 0) {\n        var _loop_1 = function (i) {\n          var key = keys[Number.parseInt(i.toString(), 10)];\n          var value = json[key]; // eslint-disable-line\n          if (Array.isArray(value)) {\n            if (this_1._fields.has('key')) {\n              value.forEach(function (entry) {\n                _this._fields.get(key).push(entry);\n              });\n            } else {\n              this_1._fields.set(key, value);\n            }\n          } else {\n            if (this_1._fields.has('key')) {\n              this_1._fields.get(key).push(value);\n            } else {\n              this_1._fields.set(key, [value]);\n            }\n          }\n        };\n        var this_1 = this;\n        for (var i = 0; i < keys.length; i++) {\n          _loop_1(i);\n        }\n        this._importField();\n      }\n    }\n  };\n  _JsonDocument.prototype._importAnnotations = function (document, data) {\n    var _this = this;\n    var json = this._parseJson(document, data); // eslint-disable-line\n    if (json) {\n      var keys = Object.keys(json);\n      if (keys.indexOf('pdfAnnotation') !== -1) {\n        var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n        var pageCount_1 = document.pageCount;\n        var pageKeys = Object.keys(pageAnnotations_1);\n        if (pageKeys && pageKeys.length > 0) {\n          pageKeys.forEach(function (key) {\n            var pageIndex = Number.parseInt(key, 10);\n            if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n              var page_1 = document.getPage(pageIndex);\n              var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n              if (pageAnnotation) {\n                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                  var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                  if (annotations && annotations.length > 0) {\n                    annotations.forEach(function (annotation) {\n                      var annotationKeys = Object.keys(annotation);\n                      if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                        var dictionary = new _PdfDictionary(_this._crossReference);\n                        dictionary.update('Type', _PdfName.get('Annot'));\n                        var isValidType = true;\n                        switch (annotation['type'].toLowerCase()) {\n                          case 'line':\n                            dictionary.update('Subtype', _PdfName.get('Line'));\n                            break;\n                          case 'circle':\n                            dictionary.update('Subtype', _PdfName.get('Circle'));\n                            break;\n                          case 'square':\n                            dictionary.update('Subtype', _PdfName.get('Square'));\n                            break;\n                          case 'polyline':\n                            dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                            break;\n                          case 'polygon':\n                            dictionary.update('Subtype', _PdfName.get('Polygon'));\n                            break;\n                          case 'ink':\n                            dictionary.update('Subtype', _PdfName.get('Ink'));\n                            break;\n                          case 'popup':\n                            dictionary.update('Subtype', _PdfName.get('Popup'));\n                            break;\n                          case 'text':\n                            dictionary.update('Subtype', _PdfName.get('Text'));\n                            break;\n                          case 'freetext':\n                            dictionary.update('Subtype', _PdfName.get('FreeText'));\n                            break;\n                          case 'stamp':\n                            dictionary.update('Subtype', _PdfName.get('Stamp'));\n                            break;\n                          case 'highlight':\n                            dictionary.update('Subtype', _PdfName.get('Highlight'));\n                            break;\n                          case 'squiggly':\n                            dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                            break;\n                          case 'underline':\n                            dictionary.update('Subtype', _PdfName.get('Underline'));\n                            break;\n                          case 'strikeout':\n                            dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                            break;\n                          case 'fileattachment':\n                            dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                            break;\n                          case 'sound':\n                            dictionary.update('Subtype', _PdfName.get('Sound'));\n                            break;\n                          case 'redact':\n                            dictionary.update('Subtype', _PdfName.get('Redact'));\n                            break;\n                          case 'caret':\n                            dictionary.update('Subtype', _PdfName.get('Caret'));\n                            break;\n                          default:\n                            isValidType = false;\n                            break;\n                        }\n                        if (isValidType) {\n                          _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                          var pageDictionary = page_1._pageDictionary;\n                          if (pageDictionary) {\n                            var annotations_1 = page_1.annotations;\n                            var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                            if (annotation_1) {\n                              annotation_1._isImported = true;\n                              var reference = _this._crossReference._getNextReference();\n                              _this._crossReference._cacheMap.set(reference, dictionary);\n                              if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                _this._addReferenceToGroup(reference, dictionary);\n                              }\n                              annotation_1._ref = reference;\n                              var index = annotations_1._annotations.length;\n                              annotations_1._annotations.push(reference);\n                              pageDictionary.set('Annots', annotations_1._annotations);\n                              pageDictionary._updated = true;\n                              annotations_1._parsedAnnotations.set(index, annotation_1);\n                              _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                            }\n                          }\n                        }\n                      }\n                    });\n                  }\n                }\n              }\n            }\n          });\n        }\n        if (this._groupHolders.length > 0) {\n          for (var i = 0; i < this._groupHolders.length; i++) {\n            var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n            var inReplyTo = dictionary.get('IRT');\n            if (inReplyTo && inReplyTo !== '') {\n              if (this._groupReferences.has(inReplyTo)) {\n                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n              } else {\n                delete dictionary._map.IRT;\n              }\n            }\n          }\n        }\n        this._groupHolders = [];\n        this._groupReferences = new Map();\n      }\n    }\n  };\n  _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n    var _this = this;\n    var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n    var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n    var dataStream = new Map();\n    var linePoints = [];\n    var beginLineStyle;\n    var endLineStyle;\n    var values = '';\n    var rect;\n    var outColor;\n    annotationKeys.forEach(function (key) {\n      var value = annotation[key]; // eslint-disable-line\n      switch (key.toLowerCase()) {\n        case 'start':\n        case 'end':\n          _this._addLinePoints(value, linePoints);\n          if (linePoints.length === 4) {\n            dictionary.update('L', linePoints);\n            linePoints = [];\n          }\n          break;\n        case 'itex':\n          break;\n        case 'state':\n          _this._addString(dictionary, 'State', value);\n          break;\n        case 'statemodel':\n          _this._addString(dictionary, 'StateModel', value);\n          break;\n        case 'replytype':\n          if (value.toLowerCase() === 'group') {\n            dictionary.update('RT', _PdfName.get('Group'));\n          }\n          break;\n        case 'inreplyto':\n          _this._addString(dictionary, 'IRT', value);\n          break;\n        case 'dashes':\n        case 'width':\n        case 'intensity':\n        case 'style':\n          _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n          break;\n        case 'rect':\n          rect = value;\n          if (rect) {\n            var points = [];\n            points.push(Number.parseFloat(rect.x));\n            points.push(Number.parseFloat(rect.y));\n            points.push(Number.parseFloat(rect.width));\n            points.push(Number.parseFloat(rect.height));\n            if (points && points.length === 4) {\n              dictionary.update('Rect', points);\n            }\n          }\n          break;\n        case 'color':\n          value = _convertToColor(value);\n          if (value && value.length === 3) {\n            dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n          }\n          break;\n        case 'oc':\n          if (value && dictionary.get('Subtype').name === 'Redact') {\n            outColor = value.split(',');\n            var color_1 = [];\n            outColor.forEach(function (entry) {\n              color_1.push(Number.parseFloat(entry));\n            });\n            if (color_1 && color_1.length > 0) {\n              dictionary.update('OC', color_1);\n            }\n          }\n          break;\n        case 'interior-color':\n          value = _convertToColor(value);\n          if (value && value.length === 3) {\n            dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n          }\n          break;\n        case 'date':\n          _this._addString(dictionary, 'M', value);\n          break;\n        case 'creationdate':\n          _this._addString(dictionary, 'CreationDate', value);\n          break;\n        case 'name':\n          _this._addString(dictionary, 'NM', value);\n          break;\n        case 'icon':\n          if (value) {\n            dictionary.update('Name', _PdfName.get(value));\n          }\n          break;\n        case 'subject':\n          _this._addString(dictionary, 'Subj', value);\n          break;\n        case 'title':\n          _this._addString(dictionary, 'T', value);\n          break;\n        case 'rotation':\n          dictionary.update('Rotate', Number.parseFloat(value));\n          break;\n        case 'fringe':\n          _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n          break;\n        case 'it':\n          if (value) {\n            dictionary.update('IT', _PdfName.get(value));\n          }\n          break;\n        case 'leaderlength':\n          dictionary.update('LL', Number.parseFloat(value));\n          break;\n        case 'leaderextend':\n          dictionary.update('LLE', Number.parseFloat(value));\n          break;\n        case 'caption':\n          _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n          break;\n        case 'caption-style':\n          if (value) {\n            dictionary.update('CP', _PdfName.get(value));\n          }\n          break;\n        case 'callout':\n          _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n          break;\n        case 'coords':\n          _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n          break;\n        case 'border':\n          _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n          break;\n        case 'opacity':\n          dictionary.update('CA', Number.parseFloat(value));\n          break;\n        case 'defaultstyle':\n          if (value) {\n            var styleKeys_1 = Object.keys(value);\n            if (styleKeys_1 && styleKeys_1.length > 0) {\n              var style_1 = '';\n              var count_1 = 0;\n              styleKeys_1.forEach(function (styleKey) {\n                var styleValue = value[styleKey]; // eslint-disable-line\n                style_1 += styleKey + ':' + styleValue;\n                if (count_1 < styleKeys_1.length - 1) {\n                  style_1 += ';';\n                }\n                count_1++;\n              });\n              _this._addString(dictionary, 'DS', style_1);\n            }\n          }\n          break;\n        case 'defaultappearance':\n          _this._addString(dictionary, 'DA', value);\n          break;\n        case 'flags':\n          if (value && typeof value === 'string') {\n            var annotFlag = PdfAnnotationFlag.default;\n            var flags = value.split(',');\n            for (var i = 0; i < flags.length; i++) {\n              var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n              if (i === 0) {\n                annotFlag = flagType;\n              } else {\n                annotFlag |= flagType;\n              }\n            }\n            dictionary.update('F', annotFlag);\n          }\n          break;\n        case 'open':\n          _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n          break;\n        case 'repeat':\n          _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n          break;\n        case 'overlaytext':\n          _this._addString(dictionary, 'OverlayText', value);\n          break;\n        case 'contents':\n          if (typeof value === 'string') {\n            if (value.indexOf('\\\\r') !== -1) {\n              value = value.replace('\\\\r', '\\r');\n            }\n            if (value) {\n              _this._addString(dictionary, 'Contents', value);\n            }\n          }\n          break;\n        case 'q':\n          dictionary.update('Q', Number.parseInt(value, 10));\n          break;\n        case 'inklist':\n          if (value) {\n            var gestureKeys = Object.keys(value);\n            if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n              var gesture = value.gesture;\n              if (gesture && gesture.length > 0) {\n                dictionary.update('InkList', gesture);\n              }\n            }\n          }\n          break;\n        case 'head':\n          beginLineStyle = value;\n          break;\n        case 'tail':\n          endLineStyle = value;\n          break;\n        case 'creation':\n        case 'modification':\n        case 'file':\n        case 'bits':\n        case 'channels':\n        case 'encoding':\n        case 'rate':\n        case 'length':\n        case 'filter':\n        case 'mode':\n        case 'size':\n          dataStream.set(key, value);\n          break;\n        case 'data':\n          values = value;\n          break;\n        case 'vertices':\n          if (value && typeof value === 'string') {\n            var split = value.split(/[,;]/);\n            if (split && split.length > 0) {\n              var vertices = [];\n              for (var i = 0; i < split.length; i++) {\n                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n              }\n              if (vertices.length > 0 && vertices.length % 2 === 0) {\n                dictionary.update('Vertices', vertices);\n              }\n            }\n          }\n          break;\n        case 'customdata':\n          _this._addString(dictionary, 'CustomData', value);\n          break;\n        case 'appearance':\n          _this._addAppearanceData(dictionary, value);\n          break;\n        case 'allowedinteractions':\n          _this._addString(dictionary, 'AllowedInteractions', value);\n          break;\n        default:\n          if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n            _this._addString(dictionary, key, value);\n          }\n          break;\n      }\n    });\n    this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n    if (beginLineStyle) {\n      if (endLineStyle) {\n        dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n      } else {\n        dictionary.update('LE', beginLineStyle);\n      }\n    } else if (endLineStyle) {\n      dictionary.update('LE', endLineStyle);\n    }\n    if (borderStyleDictionary.size > 0) {\n      borderStyleDictionary.update('Type', _PdfName.get('Border'));\n      var reference = this._crossReference._getNextReference();\n      borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n      this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n      dictionary.update('BS', reference);\n    }\n    if (borderEffectDictionary.size > 0) {\n      var reference = this._crossReference._getNextReference();\n      borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n      this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n      dictionary.update('BE', reference);\n    }\n    this._addStreamData(dictionary, dataStream, values);\n  };\n  _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n    if (value && value.indexOf(',') !== -1) {\n      var points = value.split(',');\n      points.forEach(function (point) {\n        linePoints.push(Number.parseFloat(point));\n      });\n    }\n  };\n  _JsonDocument.prototype._addString = function (dictionary, key, value) {\n    if (value) {\n      dictionary.update(key, value);\n    }\n  };\n  _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n    if (value) {\n      dictionary.update(key, value === 'yes' || value === 'true');\n    }\n  };\n  _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n    var style = '';\n    var isBasicStyle = true;\n    switch (value) {\n      case 'dash':\n        style = 'D';\n        break;\n      case 'solid':\n        style = 'S';\n        break;\n      case 'bevelled':\n        style = 'B';\n        break;\n      case 'inset':\n        style = 'I';\n        break;\n      case 'underline':\n        style = 'U';\n        break;\n      case 'cloudy':\n        style = 'C';\n        isBasicStyle = false;\n        break;\n    }\n    switch (key.toLowerCase()) {\n      case 'width':\n        borderStyleDictionary.update('W', Number.parseFloat(value));\n        break;\n      case 'intensity':\n        borderEffectDictionary.update('I', Number.parseFloat(value));\n        break;\n      case 'dashes':\n        if (value && value.indexOf(',') !== -1) {\n          borderStyleDictionary.update('D', this._parseFloatPoints(value));\n        }\n        break;\n    }\n    if (style) {\n      if (isBasicStyle) {\n        borderStyleDictionary.update('S', _PdfName.get(style));\n      } else {\n        borderEffectDictionary.update('S', _PdfName.get(style));\n      }\n    }\n  };\n  _JsonDocument.prototype._parseFloatPoints = function (value) {\n    var dashes = value.split(',');\n    var dashArray = [];\n    dashes.forEach(function (dash) {\n      dashArray.push(Number.parseFloat(dash));\n    });\n    return dashArray;\n  };\n  _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n    if (value && value.length > 0) {\n      dictionary.update(key, value);\n    }\n  };\n  _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n    var measureDictionary = new _PdfDictionary(this._crossReference);\n    var aArray = [];\n    var dArray = [];\n    var xArray = [];\n    var tArray = [];\n    var vArray = [];\n    measureDictionary.set('A', aArray);\n    measureDictionary.set('D', dArray);\n    measureDictionary.set('X', xArray);\n    measureDictionary.set('T', tArray);\n    measureDictionary.set('V', vArray);\n    if (annotationKeys.indexOf('ratevalue') !== -1) {\n      this._addString(measureDictionary, 'R', annotation['ratevalue']);\n    }\n    if (annotationKeys.indexOf('subtype') !== -1) {\n      this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n    }\n    if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n      this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n    }\n    if (annotationKeys.indexOf('area') !== -1) {\n      aArray.push(this._readDictionaryElements(annotation['area']));\n    }\n    if (annotationKeys.indexOf('distance') !== -1) {\n      dArray.push(this._readDictionaryElements(annotation['distance']));\n    }\n    if (annotationKeys.indexOf('xformat') !== -1) {\n      xArray.push(this._readDictionaryElements(annotation['xformat']));\n    }\n    if (annotationKeys.indexOf('tformat') !== -1) {\n      tArray.push(this._readDictionaryElements(annotation['tformat']));\n    }\n    if (annotationKeys.indexOf('vformat') !== -1) {\n      vArray.push(this._readDictionaryElements(annotation['vformat']));\n    }\n    if (annotationKeys.indexOf('type1') !== -1) {\n      measureDictionary.set('Type', _PdfName.get('Measure'));\n      var reference = this._crossReference._getNextReference();\n      measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n      this._crossReference._cacheMap.set(reference, measureDictionary);\n      dictionary.update('Measure', reference);\n    }\n  };\n  _JsonDocument.prototype._readDictionaryElements = function (elements) {\n    var keys = Object.keys(elements);\n    var dictionary = new _PdfDictionary(this._crossReference);\n    if (keys && keys.length > 0) {\n      keys.forEach(function (key) {\n        var value = elements[key]; // eslint-disable-line\n        if (key && value) {\n          switch (key) {\n            case 'd':\n              dictionary.set('D', Number.parseFloat(value));\n              break;\n            case 'c':\n              dictionary.set('C', Number.parseFloat(value));\n              break;\n            case 'rt':\n              dictionary.set('RT', value);\n              break;\n            case 'rd':\n              dictionary.set('RD', value);\n              break;\n            case 'ss':\n              dictionary.set('SS', value);\n              break;\n            case 'u':\n              dictionary.set('U', value);\n              break;\n            case 'f':\n              dictionary.set('F', _PdfName.get(value));\n              break;\n            case 'fd':\n              dictionary.set('FD', value);\n              break;\n            case 'type':\n              dictionary.set('Type', _PdfName.get(value));\n              break;\n          }\n        }\n      });\n    }\n    return dictionary;\n  };\n  _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n    var _this = this;\n    var subtype = dictionary.get('Subtype').name;\n    var bytes = _hexStringToByteArray(values, true);\n    if (subtype === 'Sound') {\n      var soundStream_1 = new _PdfContentStream(bytes);\n      soundStream_1.dictionary._crossReference = this._crossReference;\n      soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n      data.forEach(function (value, key) {\n        if (key && value) {\n          switch (key) {\n            case 'bits':\n            case 'rate':\n            case 'channels':\n              soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n              break;\n            case 'encoding':\n              soundStream_1.dictionary.set('E', _PdfName.get(value));\n              break;\n            case 'filter':\n              soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n              break;\n          }\n        }\n      });\n      soundStream_1.reference = this._crossReference._getNextReference();\n      soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n      this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n      dictionary.update('Sound', soundStream_1.reference);\n    } else if (subtype === 'FileAttachment') {\n      var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n      fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n      var fileStream_1 = new _PdfContentStream(bytes);\n      fileStream_1.dictionary._crossReference = this._crossReference;\n      var param_1 = new _PdfDictionary(this._crossReference);\n      data.forEach(function (value, key) {\n        if (key && value) {\n          var size = void 0;\n          switch (key) {\n            case 'file':\n              _this._addString(fileDictionary_1, 'F', value);\n              _this._addString(fileDictionary_1, 'UF', value);\n              break;\n            case 'size':\n              size = Number.parseInt(value, 10);\n              if (typeof size !== 'undefined') {\n                param_1.update('Size', size);\n                fileStream_1.dictionary.update('DL', size);\n              }\n              break;\n            case 'creation':\n              _this._addString(param_1, 'CreationDate', value);\n              break;\n            case 'modification':\n              _this._addString(param_1, 'ModificationDate', value);\n              break;\n          }\n        }\n      });\n      fileStream_1.dictionary.update('Params', param_1);\n      fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n      fileStream_1.reference = this._crossReference._getNextReference();\n      fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n      this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n      var embeddedFile = new _PdfDictionary(this._crossReference);\n      embeddedFile.update('F', fileStream_1.reference);\n      fileDictionary_1.update('EF', embeddedFile);\n      var reference = this._crossReference._getNextReference();\n      fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n      this._crossReference._cacheMap.set(reference, fileDictionary_1);\n      dictionary.update('FS', reference);\n    }\n  };\n  _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n    if (data) {\n      var encoded = _decode(data, false);\n      var decoded = _bytesToString(encoded);\n      if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n        while (decoded.length > 0 && !decoded.endsWith('}')) {\n          decoded = decoded.substring(0, decoded.length - 1);\n        }\n      }\n      var json = JSON.parse(decoded); // eslint-disable-line\n      if (json) {\n        var keys = Object.keys(json);\n        if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n          dictionary.update('AP', this._parseDictionary(json['ap']));\n        }\n      }\n    }\n  };\n  _JsonDocument.prototype._parseAppearance = function (element) {\n    var _this = this;\n    var value; // eslint-disable-line\n    var keys = Object.keys(element);\n    if (keys.indexOf('name') !== -1) {\n      value = _PdfName.get(element.name);\n    } else if (keys.indexOf('int') !== -1) {\n      value = Number.parseInt(element.int, 10);\n    } else if (keys.indexOf('fixed') !== -1) {\n      value = Number.parseFloat(element.fixed);\n    } else if (keys.indexOf('string') !== -1) {\n      value = element.string;\n    } else if (keys.indexOf('boolean') !== -1) {\n      value = element.boolean === 'true' ? true : false;\n    } else if (keys.indexOf('array') !== -1) {\n      var array = element.array; // eslint-disable-line\n      value = [];\n      array.forEach(function (element) {\n        value.push(_this._parseAppearance(element));\n      });\n    } else if (keys.indexOf('dict') !== -1) {\n      var dictionary = this._parseDictionary(element.dict);\n      value = this._crossReference._getNextReference();\n      dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n      this._crossReference._cacheMap.set(value, dictionary);\n    } else if (keys.indexOf('stream') !== -1) {\n      var stream = this._parseStream(element.stream);\n      value = this._crossReference._getNextReference();\n      stream.reference = value;\n      stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n      this._crossReference._cacheMap.set(value, stream);\n    } else {\n      value = null;\n    }\n    return value;\n  };\n  _JsonDocument.prototype._parseDictionary = function (element) {\n    var _this = this;\n    var result = new _PdfDictionary(this._crossReference);\n    if (element) {\n      var keys = Object.keys(element);\n      if (keys && keys.length > 0) {\n        keys.forEach(function (key) {\n          var value = element[key]; // eslint-disable-line\n          if (key !== 'data') {\n            var primitive = _this._parseAppearance(value); // eslint-disable-line\n            result.update(key, primitive);\n          }\n        });\n      }\n    }\n    return result;\n  };\n  _JsonDocument.prototype._parseStream = function (element) {\n    var result;\n    var keys = Object.keys(element);\n    if (element && keys.indexOf('data')) {\n      var data = element.data; // eslint-disable-line\n      var bytes = void 0;\n      if (data) {\n        var dataKeys = Object.keys(data);\n        if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n          var byteString = data.bytes;\n          if (byteString) {\n            bytes = _hexStringToByteArray(byteString, true);\n          }\n        }\n      }\n      if (!bytes) {\n        bytes = [];\n      }\n      var stream = new _PdfContentStream(bytes);\n      var dictionary = this._parseDictionary(element);\n      var isImage = false;\n      if (dictionary && dictionary.has('Subtype')) {\n        var type = dictionary.get('Subtype');\n        isImage = type && type.name === 'Image';\n      }\n      if (isImage) {\n        stream._isCompress = false;\n      } else {\n        if (dictionary.has('Length')) {\n          delete dictionary._map.Length;\n        }\n        if (dictionary.has('Filter')) {\n          delete dictionary._map.Filter;\n        }\n      }\n      stream.dictionary = dictionary;\n      result = stream;\n    }\n    return result;\n  };\n  _JsonDocument.prototype._getValidString = function (value) {\n    if (value.indexOf('\\\\') !== -1) {\n      value = value.replace(/\\\\/g, '\\\\\\\\');\n    }\n    if (value.indexOf('\"') !== -1) {\n      value = value.replace(/\"/g, '\\\\\"');\n    }\n    if (value.indexOf('[') !== -1) {\n      value = value.replace(/\\[/g, '\\\\[');\n    }\n    if (value.indexOf(']') !== -1) {\n      value = value.replace(/\\[/g, '\\\\]');\n    }\n    if (value.indexOf('{') !== -1) {\n      value = value.replace(/\\[/g, '\\\\{');\n    }\n    if (value.indexOf('}') !== -1) {\n      value = value.replace(/\\}/g, '\\\\}');\n    }\n    if (value.indexOf('\\n') !== -1) {\n      value = value.replace(/\\n/g, '\\\\n');\n    }\n    if (value.indexOf('\\r') !== -1) {\n      value = value.replace(/\\r/g, '\\\\r');\n    }\n    return value;\n  };\n  return _JsonDocument;\n}(_ExportHelper);\nexport { _JsonDocument };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","_ExportHelper","_stringToAnnotationFlags","_convertToColor","_encode","_byteArrayToHexString","_stringToBytes","_annotationFlagsToString","_convertStringToBytes","_bytesToString","_hexStringToByteArray","_decode","_PdfDictionary","_PdfName","_PdfReference","_PdfBaseStream","_PdfContentStream","PdfAnnotationFlag","_JsonDocument","_super","fileName","_this","call","_fileName","_exportAnnotations","document","_document","_crossReference","_isAnnotationExport","_exportAnnotationData","pageCount","_save","_exportFormFields","form","_exportEmptyFields","exportEmptyFields","count","i","field","fieldAt","_exportFormFieldsData","_writeFormFieldData","result","Uint8Array","_jsonData","push","_openingBrace","index","_table","forEach","value","key","_getValidString","_doubleQuotes","length","charCodeAt","isArray","_colon","_openingBracket","j","entry","Number","parseInt","toString","k","_comma","_closingBracket","size","_closingBrace","isAnnotationAdded","page","getPage","annotations","_space","pageNumber","annotation","at","_exportAnnotation","_convertToJson","clear","hasAppearance","dictionary","_dictionary","type","_getAnnotationType","_skipBorderStyle","set","lineAnnotation","points","linePoints","has","borderEffect","get","_writeDictionary","pageIndex","isBorderStyle","name","_getValue","_writeAttribute","_exportMeasureDictionary","exportAppearance","stream","_getAppearanceString","sound","soundDictionary","data","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","checksum","hexString","_writeColor","primitive","attribute","tag","color","_getColor","c","_writeAttributeString","isLowerCase","toLowerCase","rectArray","split","subTable","Map","flag","_writeInkList","_writeVertices","styleTable","textStyle","text","startsWith","substring","indexOf","replace","vertices","getArray","elementCount","vertice","inkList","json","array","_exportMeasureFormatDetails","measurementDetails","details","appearance","parentTable","appearanceTable","_writeAppearanceDictionary","table","_writeObject","_writeTable","array_1","_writeArray","_convertToJsonArray","isInteger","dataTable","streamTable","streamDictionary","getString","update","_fetch","tableKey","map","_parseJson","stringData","endsWith","JSON","parse","_importFormData","keys","_loop_1","this_1","_fields","_importField","_importAnnotations","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","page_1","pageAnnotation","pageAnnotationKeys","annotationKeys","isValidType","_addAnnotationData","pageDictionary","_pageDictionary","annotations_1","annotation_1","_parseAnnotation","_isImported","reference","_getNextReference","_cacheMap","_addReferenceToGroup","_ref","_annotations","_updated","_parsedAnnotations","_handlePopup","_groupHolders","inReplyTo","_groupReferences","_map","IRT","borderEffectDictionary","borderStyleDictionary","dataStream","beginLineStyle","endLineStyle","values","rect","outColor","_addLinePoints","_addString","_addBorderStyle","parseFloat","x","y","width","height","color_1","_addFloatPoints","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","count_1","styleKey","styleValue","annotFlag","default","flags","flagType","gestureKeys","gesture","_addAppearanceData","_allowImportCustomData","_addMeasureDictionary","objId","objectNumber","generationNumber","_addStreamData","point","style","isBasicStyle","dashes","dashArray","dash","measureDictionary","aArray","dArray","xArray","tArray","vArray","_readDictionaryElements","elements","subtype","bytes","soundStream_1","fileDictionary_1","fileStream_1","param_1","embeddedFile","encoded","decoded","_parseDictionary","_parseAppearance","element","int","fixed","string","boolean","dict","_parseStream","dataKeys","byteString","isImage","_isCompress","Length","Filter"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/import-export/json-document.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _convertStringToBytes, _bytesToString, _hexStringToByteArray, _decode } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            for (var i = 0; i < key.length; i++) {\n                _this._jsonData.push(key.charCodeAt(i));\n            }\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                for (var i = 0; i < value.length; i++) {\n                    _this._jsonData.push(value.charCodeAt(i));\n                }\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _convertStringToBytes(i.toString(), []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _convertStringToBytes(this._convertToJson(this._table), this._jsonData);\n                    if (k < page.annotations.count - 1) {\n                        this._jsonData.push(this._comma);\n                    }\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (value) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive.indexOf('\"') !== -1) {\n                    primitive = primitive.replace(/\"/g, '\\\\\"');\n                }\n                this._table.set(key, primitive);\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'RC':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n            case 'TextMarkupContent':\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            default:\n                this._writeAttributeString(key, primitive);\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (vertices && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                this._exportMeasureFormatDetails('area', array[0]);\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                this._exportMeasureFormatDetails('distance', array[0]);\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                this._exportMeasureFormatDetails('xformat', array[0]);\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                this._exportMeasureFormatDetails('tformat', array[0]);\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                this._exportMeasureFormatDetails('vformat', array[0]);\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails.has('C')) {\n            details.set('c', this._getValue(measurementDetails.get('C'), true));\n        }\n        if (measurementDetails.has('F')) {\n            details.set('f', this._getValue(measurementDetails.get('F'), true));\n        }\n        if (measurementDetails.has('D')) {\n            details.set('d', this._getValue(measurementDetails.get('D'), true));\n        }\n        if (measurementDetails.has('RD')) {\n            details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n        }\n        if (measurementDetails.has('U')) {\n            details.set('u', this._getValue(measurementDetails.get('U'), true));\n        }\n        if (measurementDetails.has('RT')) {\n            details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n        }\n        if (measurementDetails.has('SS')) {\n            details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n        }\n        if (measurementDetails.has('FD')) {\n            details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array) {\n        if (value instanceof _PdfName) {\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var array_1 = [];\n            this._writeArray(array_1, value, dictionary);\n            this._writeTable('array', this._convertToJsonArray(array_1), table, key, array_1);\n        }\n        else if (typeof value === 'string') {\n            this._writeTable('string', value, table, key, array);\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = value.getString(true);\n            if (!streamDictionary.has('Length') && data && data !== '') {\n                streamDictionary.update('Length', value.length);\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += '\"' + key + '\":\"' + value + '\"';\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'customdata':\n                    _this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    _this._addString(dictionary, 'AllowedInteractions', value);\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, value);\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            value = this._crossReference._getNextReference();\n            dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, dictionary);\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACJ,SAASI,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,wBAAwB,EAAEC,eAAe,EAAEC,OAAO,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,wBAAwB,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,OAAO,QAAQ,YAAY;AACvN,SAASC,cAAc,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,qBAAqB;AAC7E,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,kBAAkB;AACpE,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,IAAIC,aAAa,GAAG,aAAe,UAAUC,MAAM,EAAE;EACjDhC,SAAS,CAAC+B,aAAa,EAAEC,MAAM,CAAC;EAChC,SAASD,aAAaA,CAACE,QAAQ,EAAE;IAC7B,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrC,IAAIF,QAAQ,KAAK,IAAI,IAAI,OAAOA,QAAQ,KAAK,WAAW,EAAE;MACtDC,KAAK,CAACE,SAAS,GAAGH,QAAQ;IAC9B;IACA,OAAOC,KAAK;EAChB;EACA;EACAH,aAAa,CAACnB,SAAS,CAACyB,kBAAkB,GAAG,UAAUC,QAAQ,EAAE;IAC7D,IAAI,CAACC,SAAS,GAAGD,QAAQ;IACzB,IAAI,CAACE,eAAe,GAAGF,QAAQ,CAACE,eAAe;IAC/C,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACC,qBAAqB,CAACJ,QAAQ,EAAEA,QAAQ,CAACK,SAAS,CAAC;IACxD,OAAO,IAAI,CAACC,KAAK,CAAC,CAAC;EACvB,CAAC;EACDb,aAAa,CAACnB,SAAS,CAACiC,iBAAiB,GAAG,UAAUP,QAAQ,EAAE;IAC5D,IAAI,CAACC,SAAS,GAAGD,QAAQ;IACzB,IAAI,CAACE,eAAe,GAAGF,QAAQ,CAACE,eAAe;IAC/C,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAChC,IAAIK,IAAI,GAAG,IAAI,CAACP,SAAS,CAACO,IAAI;IAC9B,IAAIA,IAAI,KAAK,IAAI,IAAI,OAAOA,IAAI,KAAK,WAAW,EAAE;MAC9C,IAAI,CAACC,kBAAkB,GAAGD,IAAI,CAACE,iBAAiB;MAChD,IAAIC,KAAK,GAAG,IAAI,CAACV,SAAS,CAACO,IAAI,CAACG,KAAK;MACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,EAAEC,CAAC,EAAE,EAAE;QAC5B,IAAIC,KAAK,GAAG,IAAI,CAACZ,SAAS,CAACO,IAAI,CAACM,OAAO,CAACF,CAAC,CAAC;QAC1C,IAAI,CAACG,qBAAqB,CAACF,KAAK,CAAC;MACrC;MACA,IAAI,CAACG,mBAAmB,CAAC,CAAC;IAC9B;IACA,OAAO,IAAI,CAACV,KAAK,CAAC,CAAC;EACvB,CAAC;EACDb,aAAa,CAACnB,SAAS,CAACgC,KAAK,GAAG,YAAY;IACxC,IAAIW,MAAM,GAAG,IAAIC,UAAU,CAAC,IAAI,CAACC,SAAS,CAAC;IAC3C,IAAI,CAACA,SAAS,GAAG,EAAE;IACnB,OAAOF,MAAM;EACjB,CAAC;EACDxB,aAAa,CAACnB,SAAS,CAAC0C,mBAAmB,GAAG,YAAY;IACtD,IAAIpB,KAAK,GAAG,IAAI;IAChB,IAAI,CAACuB,SAAS,CAACC,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC;IACvC,IAAIC,KAAK,GAAG,CAAC;IACb,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;MACtCA,GAAG,GAAG9B,KAAK,CAAC+B,eAAe,CAACD,GAAG,CAAC;MAChC9B,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAACgC,aAAa,CAAC;MACzC,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,GAAG,CAACG,MAAM,EAAEjB,CAAC,EAAE,EAAE;QACjChB,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACM,GAAG,CAACI,UAAU,CAAClB,CAAC,CAAC,CAAC;MAC3C;MACA,IAAI,OAAOa,KAAK,KAAK,QAAQ,IAAKxD,KAAK,CAAC8D,OAAO,CAACN,KAAK,CAAC,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAE,EAAE;QAC3EJ,KAAK,GAAG7B,KAAK,CAAC+B,eAAe,CAAC,OAAOF,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3E7B,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAACgC,aAAa,EAAEhC,KAAK,CAACoC,MAAM,EAAEpC,KAAK,CAACgC,aAAa,CAAC;QAC5E,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,KAAK,CAACI,MAAM,EAAEjB,CAAC,EAAE,EAAE;UACnChB,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACK,KAAK,CAACK,UAAU,CAAClB,CAAC,CAAC,CAAC;QAC7C;QACAhB,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAACgC,aAAa,CAAC;MAC7C,CAAC,MACI;QACDhC,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAACgC,aAAa,EAAEhC,KAAK,CAACoC,MAAM,EAAEpC,KAAK,CAACqC,eAAe,CAAC;QAC9E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACI,MAAM,EAAEK,CAAC,EAAE,EAAE;UACnCtC,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAACgC,aAAa,CAAC;UACzC,IAAIO,KAAK,GAAGV,KAAK,CAACW,MAAM,CAACC,QAAQ,CAACH,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UACpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACN,MAAM,EAAEU,CAAC,EAAE,EAAE;YACnC3C,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACe,KAAK,CAACL,UAAU,CAACS,CAAC,CAAC,CAAC;UAC7C;UACA3C,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAACgC,aAAa,CAAC;UACzC,IAAIM,CAAC,GAAGT,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;YACtBjC,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAAC4C,MAAM,CAAC;UACtC;QACJ;QACA5C,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAAC6C,eAAe,CAAC;MAC/C;MACA,IAAInB,KAAK,GAAG1B,KAAK,CAAC2B,MAAM,CAACmB,IAAI,GAAG,CAAC,EAAE;QAC/B9C,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACxB,KAAK,CAAC4C,MAAM,CAAC;MACtC;MACAlB,KAAK,EAAE;IACX,CAAC,CAAC;IACF,IAAI,CAACH,SAAS,CAACC,IAAI,CAAC,IAAI,CAACuB,aAAa,CAAC;EAC3C,CAAC;EACDlD,aAAa,CAACnB,SAAS,CAAC8B,qBAAqB,GAAG,UAAUJ,QAAQ,EAAEK,SAAS,EAAE;IAC3E,IAAIT,KAAK,GAAG,IAAI;IAChB,IAAIgD,iBAAiB,GAAG,KAAK;IAC7B,IAAI,CAACzB,SAAS,CAACC,IAAI,CAAC,IAAI,CAACC,aAAa,EAAE,IAAI,CAACO,aAAa,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAACA,aAAa,EAAE,IAAI,CAACI,MAAM,EAAE,IAAI,CAACX,aAAa,CAAC;IAC/K,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,SAAS,EAAEO,CAAC,EAAE,EAAE;MAChC,IAAIiC,IAAI,GAAG7C,QAAQ,CAAC8C,OAAO,CAAClC,CAAC,CAAC;MAC9B,IAAIiC,IAAI,IAAIA,IAAI,CAACE,WAAW,CAACpC,KAAK,GAAG,CAAC,EAAE;QACpC,IAAI,CAACQ,SAAS,CAACC,IAAI,CAACR,CAAC,KAAK,CAAC,IAAIgC,iBAAiB,GAAG,IAAI,CAACJ,MAAM,GAAG,IAAI,CAACQ,MAAM,EAAE,IAAI,CAACpB,aAAa,CAAC;QACjG,IAAIqB,UAAU,GAAGlE,qBAAqB,CAAC6B,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;QACxDW,UAAU,CAACzB,OAAO,CAAC,UAAUW,KAAK,EAAE;UAChCvC,KAAK,CAACuB,SAAS,CAACC,IAAI,CAACe,KAAK,CAAC;QAC/B,CAAC,CAAC;QACF,IAAI,CAAChB,SAAS,CAACC,IAAI,CAAC,IAAI,CAACQ,aAAa,EAAE,IAAI,CAACI,MAAM,EAAE,IAAI,CAACX,aAAa,EAAE,IAAI,CAACO,aAAa,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAACA,aAAa,EAAE,IAAI,CAACI,MAAM,EAAE,IAAI,CAACC,eAAe,CAAC;QAC3NW,iBAAiB,GAAG,IAAI;MAC5B;MACA,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,IAAI,CAACE,WAAW,CAACpC,KAAK,EAAE4B,CAAC,EAAE,EAAE;QAC7C,IAAIW,UAAU,GAAGL,IAAI,CAACE,WAAW,CAACI,EAAE,CAACZ,CAAC,CAAC;QACvC,IAAIW,UAAU,EAAE;UACZ,IAAI,CAACE,iBAAiB,CAACF,UAAU,EAAEtC,CAAC,CAAC;UACrC,IAAI,CAACO,SAAS,GAAGpC,qBAAqB,CAAC,IAAI,CAACsE,cAAc,CAAC,IAAI,CAAC9B,MAAM,CAAC,EAAE,IAAI,CAACJ,SAAS,CAAC;UACxF,IAAIoB,CAAC,GAAGM,IAAI,CAACE,WAAW,CAACpC,KAAK,GAAG,CAAC,EAAE;YAChC,IAAI,CAACQ,SAAS,CAACC,IAAI,CAAC,IAAI,CAACoB,MAAM,CAAC;UACpC;UACA,IAAI,CAACjB,MAAM,CAAC+B,KAAK,CAAC,CAAC;QACvB;MACJ;MACA,IAAIT,IAAI,IAAIA,IAAI,CAACE,WAAW,CAACpC,KAAK,GAAG,CAAC,EAAE;QACpC,IAAI,CAACQ,SAAS,CAACC,IAAI,CAAC,IAAI,CAACqB,eAAe,EAAE,IAAI,CAACE,aAAa,CAAC;MACjE;IACJ;IACA,IAAI,CAACxB,SAAS,CAACC,IAAI,CAAC,IAAI,CAACuB,aAAa,EAAE,IAAI,CAACA,aAAa,CAAC;EAC/D,CAAC;EACDlD,aAAa,CAACnB,SAAS,CAAC8E,iBAAiB,GAAG,UAAUF,UAAU,EAAE5B,KAAK,EAAE;IACrE,IAAIiC,aAAa,GAAG,KAAK;IACzB,IAAIC,UAAU,GAAGN,UAAU,CAACO,WAAW;IACvC,IAAIC,IAAI,GAAG,IAAI,CAACC,kBAAkB,CAACT,UAAU,CAACO,WAAW,CAAC;IAC1D,IAAI,CAACG,gBAAgB,GAAG,KAAK;IAC7B,IAAIF,IAAI,IAAIA,IAAI,KAAK,EAAE,EAAE;MACrB,IAAI,CAACnC,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC;MAC7B,IAAI,CAACnC,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAEvC,KAAK,CAACgB,QAAQ,CAAC,CAAC,CAAC;MACzC,IAAIwB,cAAc,GAAG,KAAK,CAAC;MAC3B,IAAIC,MAAM,GAAG,KAAK,CAAC;MACnB,QAAQL,IAAI;QACR,KAAK,MAAM;UACPI,cAAc,GAAGZ,UAAU;UAC3Ba,MAAM,GAAGD,cAAc,CAACE,UAAU;UAClC,IAAI,CAACzC,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAEE,MAAM,CAAC,CAAC,CAAC,CAACzB,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAGyB,MAAM,CAAC,CAAC,CAAC,CAACzB,QAAQ,CAAC,CAAC,CAAC;UAC3E,IAAI,CAACf,MAAM,CAACsC,GAAG,CAAC,KAAK,EAAEE,MAAM,CAAC,CAAC,CAAC,CAACzB,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAGyB,MAAM,CAAC,CAAC,CAAC,CAACzB,QAAQ,CAAC,CAAC,CAAC;UACzE;QACJ,KAAK,OAAO;UACRiB,aAAa,GAAG,IAAI;UACpB;QACJ,KAAK,QAAQ;UACTA,aAAa,GAAG,IAAI;UACpB;MACR;MACA,IAAIC,UAAU,IAAIA,UAAU,CAACS,GAAG,CAAC,IAAI,CAAC,IAAIT,UAAU,CAACS,GAAG,CAAC,IAAI,CAAC,EAAE;QAC5D,IAAIC,YAAY,GAAGV,UAAU,CAACW,GAAG,CAAC,IAAI,CAAC;QACvC,IAAID,YAAY,IAAIA,YAAY,CAACD,GAAG,CAAC,GAAG,CAAC,EAAE;UACvC,IAAI,CAACL,gBAAgB,GAAG,IAAI;QAChC;MACJ;MACA,IAAI,CAACQ,gBAAgB,CAACZ,UAAU,EAAElC,KAAK,EAAEiC,aAAa,CAAC;IAC3D;EACJ,CAAC;EACD9D,aAAa,CAACnB,SAAS,CAAC8F,gBAAgB,GAAG,UAAUZ,UAAU,EAAEa,SAAS,EAAEd,aAAa,EAAE;IACvF,IAAI3D,KAAK,GAAG,IAAI;IAChB,IAAI0E,aAAa,GAAG,KAAK;IACzB,IAAId,UAAU,CAACS,GAAG,CAAC,MAAM,CAAC,EAAE;MACxB,IAAIP,IAAI,GAAGF,UAAU,CAACW,GAAG,CAAC,MAAM,CAAC;MACjCG,aAAa,GAAIZ,IAAI,IAAIA,IAAI,CAACa,IAAI,KAAK,QAAQ,IAAI,IAAI,CAACX,gBAAiB;IAC7E;IACAJ,UAAU,CAAChC,OAAO,CAAC,UAAUE,GAAG,EAAED,KAAK,EAAE;MACrC,IAAI,EAAG,CAAC8B,aAAa,IAAI7B,GAAG,KAAK,IAAI,IAAKA,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,QAAQ,CAAC,EAAE;QACxE,IAAIS,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;QACpB,IAAIV,KAAK,YAAYpC,aAAa,EAAE;UAChC8C,KAAK,GAAGqB,UAAU,CAACW,GAAG,CAACzC,GAAG,CAAC;QAC/B;QACA,IAAIS,KAAK,IAAIA,KAAK,YAAYhD,cAAc,EAAE;UAC1C,QAAQuC,GAAG;YACP,KAAK,IAAI;YACT,KAAK,IAAI;cACL9B,KAAK,CAACwE,gBAAgB,CAACjC,KAAK,EAAEkC,SAAS,EAAE,KAAK,CAAC;cAC/C;YACJ,KAAK,KAAK;cACN,IAAIlC,KAAK,CAAC8B,GAAG,CAAC,IAAI,CAAC,EAAE;gBACjBrE,KAAK,CAAC2B,MAAM,CAACsC,GAAG,CAAC,WAAW,EAAEjE,KAAK,CAAC4E,SAAS,CAACrC,KAAK,CAACgC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;cACzE;cACA;UACR;QACJ,CAAC,MACI,IAAI1C,KAAK,YAAYtC,cAAc,EAAE;UACtCS,KAAK,CAACwE,gBAAgB,CAAC3C,KAAK,EAAE4C,SAAS,EAAE,KAAK,CAAC;QACnD,CAAC,MACI,IAAK,CAACC,aAAa,IAAMA,aAAa,IAAI5C,GAAG,KAAK,GAAI,EAAE;UACzD9B,KAAK,CAAC6E,eAAe,CAAC/C,GAAG,EAAED,KAAK,EAAE+B,UAAU,CAAC;QACjD;MACJ;IACJ,CAAC,CAAC;IACF,IAAIA,UAAU,CAACS,GAAG,CAAC,SAAS,CAAC,EAAE;MAC3B,IAAI,CAACS,wBAAwB,CAAClB,UAAU,CAACW,GAAG,CAAC,SAAS,CAAC,CAAC;IAC5D;IACA,IAAI,CAAC,IAAI,CAACQ,gBAAgB,IAAIpB,aAAa,KAAKC,UAAU,CAACS,GAAG,CAAC,IAAI,CAAC,EAAE;MAClE,IAAIW,MAAM,GAAG,IAAI,CAACC,oBAAoB,CAACrB,UAAU,CAACW,GAAG,CAAC,IAAI,CAAC,CAAC;MAC5D,IAAIS,MAAM,IAAIA,MAAM,CAAC/C,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAI,CAACN,MAAM,CAACsC,GAAG,CAAC,YAAY,EAAElF,OAAO,CAACiG,MAAM,CAAC,CAAC;MAClD;IACJ;IACA,IAAIpB,UAAU,CAACS,GAAG,CAAC,OAAO,CAAC,EAAE;MACzB,IAAIa,KAAK,GAAGtB,UAAU,CAACW,GAAG,CAAC,OAAO,CAAC;MACnC,IAAIW,KAAK,IAAIA,KAAK,CAACtB,UAAU,EAAE;QAC3B,IAAIuB,eAAe,GAAGD,KAAK,CAACtB,UAAU;QACtC,IAAIuB,eAAe,CAACd,GAAG,CAAC,GAAG,CAAC,EAAE;UAC1B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACW,SAAS,CAACO,eAAe,CAACZ,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3E;QACA,IAAIY,eAAe,CAACd,GAAG,CAAC,GAAG,CAAC,EAAE;UAC1B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACW,SAAS,CAACO,eAAe,CAACZ,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/E;QACA,IAAIY,eAAe,CAACd,GAAG,CAAC,GAAG,CAAC,EAAE;UAC1B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACW,SAAS,CAACO,eAAe,CAACZ,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/E;QACA,IAAIY,eAAe,CAACd,GAAG,CAAC,GAAG,CAAC,EAAE;UAC1B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACW,SAAS,CAACO,eAAe,CAACZ,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3E;QACA,IAAIY,eAAe,CAACd,GAAG,CAAC,QAAQ,CAAC,IAAIc,eAAe,CAACZ,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;UACpE,IAAIa,IAAI,GAAGpG,qBAAqB,CAACkG,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;UAClD,IAAID,IAAI,IAAIA,IAAI,KAAK,EAAE,EAAE;YACrB,IAAI,CAACzD,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;YAC9B,IAAI,CAACtC,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;YAClC,IAAIkB,eAAe,CAACd,GAAG,CAAC,QAAQ,CAAC,EAAE;cAC/B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACW,SAAS,CAACO,eAAe,CAACZ,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;YAClF;YACA,IAAIY,eAAe,CAACd,GAAG,CAAC,QAAQ,CAAC,EAAE;cAC/B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACW,SAAS,CAACO,eAAe,CAACZ,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;YAClF;YACA,IAAI,CAAC5C,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAEmB,IAAI,CAAC;UACjC;QACJ;MACJ;IACJ,CAAC,MACI,IAAIxB,UAAU,CAACS,GAAG,CAAC,IAAI,CAAC,EAAE;MAC3B,IAAIiB,YAAY,GAAG1B,UAAU,CAACW,GAAG,CAAC,IAAI,CAAC;MACvC,IAAIe,YAAY,EAAE;QACd,IAAIA,YAAY,CAACjB,GAAG,CAAC,GAAG,CAAC,EAAE;UACvB,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACW,SAAS,CAACU,YAAY,CAACf,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;QACxE;QACA,IAAIe,YAAY,CAACjB,GAAG,CAAC,IAAI,CAAC,EAAE;UACxB,IAAIkB,YAAY,GAAGD,YAAY,CAACf,GAAG,CAAC,IAAI,CAAC;UACzC,IAAIgB,YAAY,IAAIA,YAAY,CAAClB,GAAG,CAAC,GAAG,CAAC,EAAE;YACvC,IAAImB,OAAO,GAAGD,YAAY,CAAChB,GAAG,CAAC,GAAG,CAAC;YACnC,IAAIiB,OAAO,IAAIA,OAAO,CAAC5B,UAAU,EAAE;cAC/B,IAAI6B,WAAW,GAAGD,OAAO,CAAC5B,UAAU;cACpC,IAAI6B,WAAW,CAACpB,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC3B,IAAIqB,gBAAgB,GAAGD,WAAW,CAAClB,GAAG,CAAC,QAAQ,CAAC;gBAChD,IAAImB,gBAAgB,EAAE;kBAClB,IAAIA,gBAAgB,CAACrB,GAAG,CAAC,cAAc,CAAC,EAAE;oBACtC,IAAIxC,KAAK,GAAG,IAAI,CAAC+C,SAAS,CAACc,gBAAgB,CAACnB,GAAG,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC;oBACtE,IAAI,CAAC5C,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAEpC,KAAK,CAAC;kBACtC;kBACA,IAAI6D,gBAAgB,CAACrB,GAAG,CAAC,kBAAkB,CAAC,EAAE;oBAC1C,IAAIxC,KAAK,GAAG,IAAI,CAAC+C,SAAS,CAACc,gBAAgB,CAACnB,GAAG,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC;oBAC1E,IAAI,CAAC5C,MAAM,CAACsC,GAAG,CAAC,cAAc,EAAEpC,KAAK,CAAC;kBAC1C;kBACA,IAAI6D,gBAAgB,CAACrB,GAAG,CAAC,MAAM,CAAC,EAAE;oBAC9B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACW,SAAS,CAACc,gBAAgB,CAACnB,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;kBAC/E;kBACA,IAAImB,gBAAgB,CAACrB,GAAG,CAAC,UAAU,CAAC,EAAE;oBAClC,IAAIxC,KAAK,GAAG,IAAI,CAAC+C,SAAS,CAACc,gBAAgB,CAACnB,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC;oBAClE,IAAIoB,QAAQ,GAAG1G,cAAc,CAAC4C,KAAK,CAAC;oBACpC,IAAI+D,SAAS,GAAG5G,qBAAqB,CAAC2G,QAAQ,CAAC;oBAC/C,IAAI,CAAChE,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAE2B,SAAS,CAAC;kBAC1C;gBACJ;cACJ;cACA,IAAIR,IAAI,GAAGpG,qBAAqB,CAACwG,OAAO,CAACH,QAAQ,CAAC,CAAC,CAAC;cACpD,IAAID,IAAI,IAAIA,IAAI,KAAK,EAAE,EAAE;gBACrB,IAAI,CAACzD,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;gBAC9B,IAAI,CAACtC,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;gBAClC,IAAIwB,WAAW,CAACpB,GAAG,CAAC,QAAQ,CAAC,EAAE;kBAC3B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACW,SAAS,CAACa,WAAW,CAAClB,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;gBAC9E;gBACA,IAAIkB,WAAW,CAACpB,GAAG,CAAC,QAAQ,CAAC,EAAE;kBAC3B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACW,SAAS,CAACa,WAAW,CAAClB,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;gBAC9E;gBACA,IAAI,CAAC5C,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAEmB,IAAI,CAAC;cACjC;YACJ;UACJ;QACJ;MACJ;IACJ;EACJ,CAAC;EACDvF,aAAa,CAACnB,SAAS,CAACmH,WAAW,GAAG,UAAUC,SAAS,EAAEC,SAAS,EAAEC,GAAG,EAAE;IACvE,IAAIC,KAAK,GAAG,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC;IACrC,IAAI,OAAOA,SAAS,KAAK,QAAQ,IAAIE,GAAG,EAAE;MACtC,IAAIG,CAAC,GAAG,IAAI,CAACvB,SAAS,CAACkB,SAAS,EAAE,IAAI,CAAC;MACvC,IAAIK,CAAC,IAAIA,CAAC,KAAK,EAAE,EAAE;QACf,IAAI,CAACxE,MAAM,CAACsC,GAAG,CAAC+B,GAAG,EAAEG,CAAC,CAAC;MAC3B;IACJ;IACA,IAAIF,KAAK,IAAIA,KAAK,KAAK,EAAE,EAAE;MACvB,IAAI,CAACtE,MAAM,CAACsC,GAAG,CAAC8B,SAAS,EAAEE,KAAK,CAAC;IACrC;EACJ,CAAC;EACDpG,aAAa,CAACnB,SAAS,CAAC0H,qBAAqB,GAAG,UAAUL,SAAS,EAAED,SAAS,EAAEO,WAAW,EAAE;IACzF,IAAIA,WAAW,KAAK,KAAK,CAAC,EAAE;MAAEA,WAAW,GAAG,KAAK;IAAE;IACnD,IAAIxE,KAAK,GAAG,IAAI,CAAC+C,SAAS,CAACkB,SAAS,EAAE,IAAI,CAAC;IAC3C,IAAI,CAACnE,MAAM,CAACsC,GAAG,CAAC8B,SAAS,EAAEM,WAAW,GAAGxE,KAAK,CAACyE,WAAW,CAAC,CAAC,GAAGzE,KAAK,CAAC;EACzE,CAAC;EACDhC,aAAa,CAACnB,SAAS,CAACmG,eAAe,GAAG,UAAU/C,GAAG,EAAEgE,SAAS,EAAElC,UAAU,EAAE;IAC5E,IAAI/B,KAAK;IACT,QAAQC,GAAG;MACP,KAAK,GAAG;QACJ,IAAI,CAAC+D,WAAW,CAACC,SAAS,EAAE,OAAO,EAAE,GAAG,CAAC;QACzC;MACJ,KAAK,IAAI;QACL,IAAI,CAACD,WAAW,CAACC,SAAS,EAAE,gBAAgB,CAAC;QAC7C;MACJ,KAAK,IAAI;QACLjE,KAAK,GAAG+B,UAAU,CAACW,GAAG,CAAC,IAAI,CAAC;QAC5B,IAAI1C,KAAK,EAAE;UACP,IAAI,CAACF,MAAM,CAACsC,GAAG,CAAC,mBAAmB,EAAEpC,KAAK,CAAC;QAC/C;QACA;MACJ,KAAK,GAAG;QACJ,IAAI,CAACuE,qBAAqB,CAAC,MAAM,EAAEN,SAAS,CAAC;QAC7C;MACJ,KAAK,IAAI;QACL,IAAI,CAACnE,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE6B,SAAS,CAAC;QAClC;MACJ,KAAK,MAAM;QACP,IAAI,CAACM,qBAAqB,CAAC,MAAM,EAAEN,SAAS,CAAC;QAC7C;MACJ,KAAK,MAAM;QACP,IAAI,CAACM,qBAAqB,CAAC,SAAS,EAAEN,SAAS,CAAC;QAChD;MACJ,KAAK,GAAG;QACJ,IAAI,CAACM,qBAAqB,CAAC,OAAO,EAAEN,SAAS,CAAC;QAC9C;MACJ,KAAK,MAAM;QACPjE,KAAK,GAAG,IAAI,CAAC+C,SAAS,CAACkB,SAAS,EAAE,IAAI,CAAC;QACvC,IAAIjE,KAAK,EAAE;UACP,IAAI0E,SAAS,GAAG1E,KAAK,CAAC2E,KAAK,CAAC,GAAG,CAAC;UAChC,IAAIC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;UACxBD,QAAQ,CAACxC,GAAG,CAAC,GAAG,EAAEsC,SAAS,CAAC,CAAC,CAAC,CAAC;UAC/BE,QAAQ,CAACxC,GAAG,CAAC,GAAG,EAAEsC,SAAS,CAAC,CAAC,CAAC,CAAC;UAC/BE,QAAQ,CAACxC,GAAG,CAAC,OAAO,EAAEsC,SAAS,CAAC,CAAC,CAAC,CAAC;UACnCE,QAAQ,CAACxC,GAAG,CAAC,QAAQ,EAAEsC,SAAS,CAAC,CAAC,CAAC,CAAC;UACpC,IAAI,CAAC5E,MAAM,CAACsC,GAAG,CAACnC,GAAG,CAACwE,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC7C,cAAc,CAACgD,QAAQ,CAAC,CAAC;QACrE;QACA;MACJ,KAAK,cAAc;QACf,IAAI,CAACL,qBAAqB,CAAC,cAAc,EAAEN,SAAS,CAAC;QACrD;MACJ,KAAK,QAAQ;QACT,IAAI,CAACM,qBAAqB,CAAC,UAAU,EAAEN,SAAS,CAAC;QACjD;MACJ,KAAK,GAAG;QACJ,IAAI,CAACM,qBAAqB,CAAC,OAAO,EAAEN,SAAS,CAAC;QAC9C;MACJ,KAAK,IAAI;QACL,IAAIA,SAAS,IAAIzH,KAAK,CAAC8D,OAAO,CAAC2D,SAAS,CAAC,EAAE;UACvC,IAAIA,SAAS,CAAC7D,MAAM,KAAK,CAAC,EAAE;YACxB,IAAI,CAACN,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACW,SAAS,CAACkB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAC3D,IAAI,CAACnE,MAAM,CAACsC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACW,SAAS,CAACkB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;UAC/D;QACJ,CAAC,MACI,IAAIA,SAAS,YAAYtG,QAAQ,EAAE;UACpC,IAAI,CAAC4G,qBAAqB,CAAC,MAAM,EAAEN,SAAS,CAAC;QACjD;QACA;MACJ,KAAK,GAAG;QACJ,QAAQ,IAAI,CAAClB,SAAS,CAACkB,SAAS,EAAE,IAAI,CAAC;UACnC,KAAK,GAAG;YACJ,IAAI,CAACnE,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;YAChC;UACJ,KAAK,GAAG;YACJ,IAAI,CAACtC,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;YAClC;UACJ,KAAK,GAAG;YACJ,IAAI,CAACtC,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;YACjC;UACJ,KAAK,GAAG;YACJ,IAAI,CAACtC,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC;YACpC;UACJ,KAAK,GAAG;YACJ,IAAI,CAACtC,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;YACjC;UACJ,KAAK,GAAG;YACJ,IAAI,CAACtC,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;YACrC;QACR;QACA;MACJ,KAAK,GAAG;QACJ,IAAI,CAACmC,qBAAqB,CAAC,QAAQ,EAAEN,SAAS,CAAC;QAC/C;MACJ,KAAK,GAAG;QACJ,IAAI,CAACM,qBAAqB,CAAC,WAAW,EAAEN,SAAS,CAAC;QAClD;MACJ,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAAC,QAAQ,EAAEN,SAAS,CAAC;QAC/C;MACJ,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAAC,IAAI,EAAEN,SAAS,CAAC;QAC3C;MACJ,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAAC,WAAW,EAAEN,SAAS,EAAE,IAAI,CAAC;QACxD;MACJ,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAAC,cAAc,EAAEN,SAAS,CAAC;QACrD;MACJ,KAAK,KAAK;QACN,IAAI,CAACM,qBAAqB,CAAC,cAAc,EAAEN,SAAS,CAAC;QACrD;MACJ,KAAK,KAAK;QACN,IAAI,CAACM,qBAAqB,CAAC,SAAS,EAAEN,SAAS,CAAC;QAChD;MACJ,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAAC,eAAe,EAAEN,SAAS,CAAC;QACtD;MACJ,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAAC,SAAS,EAAEN,SAAS,CAAC;QAChD;MACJ,KAAK,YAAY;QACb,IAAI,CAACM,qBAAqB,CAAC,QAAQ,EAAEN,SAAS,CAAC;QAC/C;MACJ,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAAC,SAAS,EAAEN,SAAS,CAAC;QAChD;MACJ,KAAK,GAAG;QACJ,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;UAC/B,IAAIa,IAAI,GAAGzH,wBAAwB,CAAC4G,SAAS,CAAC;UAC9C,IAAI,CAACnE,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE0C,IAAI,CAAC;QAClC;QACA;MACJ,KAAK,UAAU;QACX9E,KAAK,GAAG+B,UAAU,CAACW,GAAG,CAAC,UAAU,CAAC;QAClC,IAAI1C,KAAK,IAAIA,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;UAC3B,IAAI,CAACN,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAClC,eAAe,CAACF,KAAK,CAAC,CAAC;QAC5D;QACA;MACJ,KAAK,SAAS;QACV,IAAI,CAAC+E,aAAa,CAAChD,UAAU,CAAC;QAC9B;MACJ,KAAK,UAAU;QACX,IAAI,CAACiD,cAAc,CAACjD,UAAU,CAAC;QAC/B;MACJ,KAAK,IAAI;QACL/B,KAAK,GAAG+B,UAAU,CAACW,GAAG,CAAC,IAAI,CAAC;QAC5B,IAAI1C,KAAK,EAAE;UACP,IAAIiF,UAAU,GAAG,IAAIJ,GAAG,CAAC,CAAC;UAC1B,IAAIK,SAAS,GAAGlF,KAAK,CAAC2E,KAAK,CAAC,GAAG,CAAC;UAChC,KAAK,IAAIxF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+F,SAAS,CAAC9E,MAAM,EAAEjB,CAAC,EAAE,EAAE;YACvC,IAAIgG,IAAI,GAAGD,SAAS,CAACvE,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC8D,KAAK,CAAC,GAAG,CAAC;YAClE,IAAIQ,IAAI,IAAIA,IAAI,CAAC/E,MAAM,GAAG,CAAC,IAAI+E,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAAC/E,MAAM,GAAG,CAAC,IAAI+E,IAAI,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;cACrFD,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;YAClC;YACAJ,UAAU,CAAC7C,GAAG,CAAC+C,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;UACpC;UACA,IAAI,CAACrF,MAAM,CAACsC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACR,cAAc,CAACqD,UAAU,CAAC,CAAC;QACpE;QACA;MACJ,KAAK,qBAAqB;QACtB,IAAIhB,SAAS,CAACqB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;UAC/BrB,SAAS,GAAGA,SAAS,CAACsB,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;QAC9C;QACA,IAAI,CAACzF,MAAM,CAACsC,GAAG,CAACnC,GAAG,EAAEgE,SAAS,CAAC;QAC/B;MACJ,KAAK,MAAM;MACX,KAAK,SAAS;MACd,KAAK,GAAG;MACR,KAAK,QAAQ;MACb,KAAK,GAAG;MACR,KAAK,IAAI;MACT,KAAK,IAAI;MACT,KAAK,kBAAkB;MACvB,KAAK,cAAc;MACnB,KAAK,MAAM;MACX,KAAK,mBAAmB;QACpB;MACJ,KAAK,QAAQ;MACb,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,IAAI;QACL,IAAI,CAACM,qBAAqB,CAACtE,GAAG,CAACwE,WAAW,CAAC,CAAC,EAAER,SAAS,CAAC;QACxD;MACJ;QACI,IAAI,CAACM,qBAAqB,CAACtE,GAAG,EAAEgE,SAAS,CAAC;QAC1C;IACR;EACJ,CAAC;EACDjG,aAAa,CAACnB,SAAS,CAACmI,cAAc,GAAG,UAAUjD,UAAU,EAAE;IAC3D,IAAIyD,QAAQ,GAAGzD,UAAU,CAAC0D,QAAQ,CAAC,UAAU,CAAC;IAC9C,IAAID,QAAQ,IAAIA,QAAQ,CAACpF,MAAM,GAAG,CAAC,EAAE;MACjC,IAAIsF,YAAY,GAAGF,QAAQ,CAACpF,MAAM;MAClC,IAAIsF,YAAY,GAAG,CAAC,KAAK,CAAC,EAAE;QACxB,IAAIC,OAAO,GAAG,EAAE;QAChB,KAAK,IAAIxG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuG,YAAY,GAAG,CAAC,EAAEvG,CAAC,EAAE,EAAE;UACvCwG,OAAO,IAAI,IAAI,CAAC5C,SAAS,CAACyC,QAAQ,CAAC7E,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI1B,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;QAC5G;QACAwG,OAAO,IAAI,IAAI,CAAC5C,SAAS,CAACyC,QAAQ,CAACE,YAAY,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;QAC3D,IAAIC,OAAO,IAAIA,OAAO,KAAK,EAAE,EAAE;UAC3B,IAAI,CAAC7F,MAAM,CAACsC,GAAG,CAAC,UAAU,EAAEuD,OAAO,CAAC;QACxC;MACJ;IACJ;EACJ,CAAC;EACD3H,aAAa,CAACnB,SAAS,CAACkI,aAAa,GAAG,UAAUhD,UAAU,EAAE;IAC1D,IAAI6D,OAAO,GAAG7D,UAAU,CAAC0D,QAAQ,CAAC,SAAS,CAAC;IAC5C,IAAIG,OAAO,IAAIA,OAAO,CAACxF,MAAM,GAAG,CAAC,EAAE;MAC/B,IAAIkC,MAAM,GAAG,IAAIuC,GAAG,CAAC,CAAC;MACtB,IAAIgB,IAAI,GAAG,GAAG;MACd,KAAK,IAAIpF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmF,OAAO,CAACxF,MAAM,EAAEK,CAAC,EAAE,EAAE;QACrCoF,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC9C,SAAS,CAAC6C,OAAO,CAACjF,MAAM,CAACC,QAAQ,CAACH,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG;QACpF,IAAIJ,CAAC,GAAGmF,OAAO,CAACxF,MAAM,GAAG,CAAC,EAAE;UACxByF,IAAI,IAAI,GAAG;QACf;MACJ;MACAA,IAAI,IAAI,GAAG;MACXvD,MAAM,CAACF,GAAG,CAAC,SAAS,EAAEyD,IAAI,CAAC;MAC3B,IAAI,CAAC/F,MAAM,CAACsC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,cAAc,CAACU,MAAM,CAAC,CAAC;IAC3D;EACJ,CAAC;EACDtE,aAAa,CAACnB,SAAS,CAACoG,wBAAwB,GAAG,UAAUlB,UAAU,EAAE;IACrE,IAAIA,UAAU,EAAE;MACZ,IAAIA,UAAU,CAACS,GAAG,CAAC,MAAM,CAAC,EAAE;QACxB,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC;MACvC;MACA,IAAIL,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,EAAE;QACrB,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACW,SAAS,CAAChB,UAAU,CAACW,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;MAC3E;MACA,IAAIX,UAAU,CAACS,GAAG,CAAC,SAAS,CAAC,EAAE;QAC3B,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACW,SAAS,CAAChB,UAAU,CAACW,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;MAC/E;MACA,IAAIX,UAAU,CAACS,GAAG,CAAC,sBAAsB,CAAC,EAAE;QACxC,IAAI,CAAC1C,MAAM,CAACsC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACW,SAAS,CAAChB,UAAU,CAACW,GAAG,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,CAAC;MACzG;MACA,IAAIX,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,EAAE;QACrB,IAAIsD,KAAK,GAAG/D,UAAU,CAAC0D,QAAQ,CAAC,GAAG,CAAC;QACpC,IAAI,CAACM,2BAA2B,CAAC,MAAM,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;MACtD;MACA,IAAI/D,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,EAAE;QACrB,IAAIsD,KAAK,GAAG/D,UAAU,CAAC0D,QAAQ,CAAC,GAAG,CAAC;QACpC,IAAI,CAACM,2BAA2B,CAAC,UAAU,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1D;MACA,IAAI/D,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,EAAE;QACrB,IAAIsD,KAAK,GAAG/D,UAAU,CAAC0D,QAAQ,CAAC,GAAG,CAAC;QACpC,IAAI,CAACM,2BAA2B,CAAC,SAAS,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;MACzD;MACA,IAAI/D,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,EAAE;QACrB,IAAIsD,KAAK,GAAG/D,UAAU,CAAC0D,QAAQ,CAAC,GAAG,CAAC;QACpC,IAAI,CAACM,2BAA2B,CAAC,SAAS,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;MACzD;MACA,IAAI/D,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,EAAE;QACrB,IAAIsD,KAAK,GAAG/D,UAAU,CAAC0D,QAAQ,CAAC,GAAG,CAAC;QACpC,IAAI,CAACM,2BAA2B,CAAC,SAAS,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;MACzD;IACJ;EACJ,CAAC;EACD9H,aAAa,CAACnB,SAAS,CAACkJ,2BAA2B,GAAG,UAAU9F,GAAG,EAAE+F,kBAAkB,EAAE;IACrF,IAAIC,OAAO,GAAG,IAAIpB,GAAG,CAAC,CAAC;IACvB,IAAImB,kBAAkB,CAACxD,GAAG,CAAC,GAAG,CAAC,EAAE;MAC7ByD,OAAO,CAAC7D,GAAG,CAAC,GAAG,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IACvE;IACA,IAAIsD,kBAAkB,CAACxD,GAAG,CAAC,GAAG,CAAC,EAAE;MAC7ByD,OAAO,CAAC7D,GAAG,CAAC,GAAG,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IACvE;IACA,IAAIsD,kBAAkB,CAACxD,GAAG,CAAC,GAAG,CAAC,EAAE;MAC7ByD,OAAO,CAAC7D,GAAG,CAAC,GAAG,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IACvE;IACA,IAAIsD,kBAAkB,CAACxD,GAAG,CAAC,IAAI,CAAC,EAAE;MAC9ByD,OAAO,CAAC7D,GAAG,CAAC,IAAI,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACzE;IACA,IAAIsD,kBAAkB,CAACxD,GAAG,CAAC,GAAG,CAAC,EAAE;MAC7ByD,OAAO,CAAC7D,GAAG,CAAC,GAAG,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IACvE;IACA,IAAIsD,kBAAkB,CAACxD,GAAG,CAAC,IAAI,CAAC,EAAE;MAC9ByD,OAAO,CAAC7D,GAAG,CAAC,IAAI,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACzE;IACA,IAAIsD,kBAAkB,CAACxD,GAAG,CAAC,IAAI,CAAC,EAAE;MAC9ByD,OAAO,CAAC7D,GAAG,CAAC,IAAI,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACzE;IACA,IAAIsD,kBAAkB,CAACxD,GAAG,CAAC,IAAI,CAAC,EAAE;MAC9ByD,OAAO,CAAC7D,GAAG,CAAC,IAAI,EAAE,IAAI,CAACW,SAAS,CAACiD,kBAAkB,CAACtD,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACzE;IACA,IAAI,CAAC5C,MAAM,CAACsC,GAAG,CAACnC,GAAG,EAAE,IAAI,CAAC2B,cAAc,CAACqE,OAAO,CAAC,CAAC;EACtD,CAAC;EACDjI,aAAa,CAACnB,SAAS,CAACuG,oBAAoB,GAAG,UAAU8C,UAAU,EAAE;IACjE,IAAIC,WAAW,GAAG,IAAItB,GAAG,CAAC,CAAC;IAC3B,IAAIuB,eAAe,GAAG,IAAIvB,GAAG,CAAC,CAAC;IAC/B,IAAI,CAACwB,0BAA0B,CAACD,eAAe,EAAEF,UAAU,CAAC;IAC5DC,WAAW,CAAC/D,GAAG,CAAC,IAAI,EAAE,IAAI,CAACR,cAAc,CAACwE,eAAe,CAAC,CAAC;IAC3D,OAAOhJ,cAAc,CAAC,IAAI,CAACwE,cAAc,CAACuE,WAAW,CAAC,CAAC;EAC3D,CAAC;EACDnI,aAAa,CAACnB,SAAS,CAACwJ,0BAA0B,GAAG,UAAUC,KAAK,EAAEvE,UAAU,EAAE;IAC9E,IAAI5D,KAAK,GAAG,IAAI;IAChB,IAAI4D,UAAU,IAAIA,UAAU,CAACd,IAAI,GAAG,CAAC,EAAE;MACnCc,UAAU,CAAChC,OAAO,CAAC,UAAUE,GAAG,EAAED,KAAK,EAAE;QACrC7B,KAAK,CAACoI,YAAY,CAACD,KAAK,EAAItG,KAAK,YAAYpC,aAAa,GAAImE,UAAU,CAACW,GAAG,CAACzC,GAAG,CAAC,GAAGD,KAAK,EAAG+B,UAAU,EAAE9B,GAAG,CAAC;MAChH,CAAC,CAAC;IACN;EACJ,CAAC;EACDjC,aAAa,CAACnB,SAAS,CAAC0J,YAAY,GAAG,UAAUD,KAAK,EAAEtG,KAAK,EAAE+B,UAAU,EAAE9B,GAAG,EAAE6F,KAAK,EAAE;IACnF,IAAI9F,KAAK,YAAYrC,QAAQ,EAAE;MAC3B,IAAI,CAAC6I,WAAW,CAAC,MAAM,EAAExG,KAAK,CAAC8C,IAAI,EAAEwD,KAAK,EAAErG,GAAG,EAAE6F,KAAK,CAAC;IAC3D,CAAC,MACI,IAAItJ,KAAK,CAAC8D,OAAO,CAACN,KAAK,CAAC,EAAE;MAC3B,IAAIyG,OAAO,GAAG,EAAE;MAChB,IAAI,CAACC,WAAW,CAACD,OAAO,EAAEzG,KAAK,EAAE+B,UAAU,CAAC;MAC5C,IAAI,CAACyE,WAAW,CAAC,OAAO,EAAE,IAAI,CAACG,mBAAmB,CAACF,OAAO,CAAC,EAAEH,KAAK,EAAErG,GAAG,EAAEwG,OAAO,CAAC;IACrF,CAAC,MACI,IAAI,OAAOzG,KAAK,KAAK,QAAQ,EAAE;MAChC,IAAI,CAACwG,WAAW,CAAC,QAAQ,EAAExG,KAAK,EAAEsG,KAAK,EAAErG,GAAG,EAAE6F,KAAK,CAAC;IACxD,CAAC,MACI,IAAI,OAAO9F,KAAK,KAAK,QAAQ,EAAE;MAChC,IAAI,CAACwG,WAAW,CAAC7F,MAAM,CAACiG,SAAS,CAAC5G,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO,EAAEA,KAAK,CAACa,QAAQ,CAAC,CAAC,EAAEyF,KAAK,EAAErG,GAAG,EAAE6F,KAAK,CAAC;IACpG,CAAC,MACI,IAAI,OAAO9F,KAAK,KAAK,SAAS,EAAE;MACjC,IAAI,CAACwG,WAAW,CAAC,SAAS,EAAExG,KAAK,GAAG,MAAM,GAAG,OAAO,EAAEsG,KAAK,EAAErG,GAAG,EAAE6F,KAAK,CAAC;IAC5E,CAAC,MACI,IAAI9F,KAAK,YAAYtC,cAAc,EAAE;MACtC,IAAIkH,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;MACxB,IAAI,CAACwB,0BAA0B,CAACzB,QAAQ,EAAE5E,KAAK,CAAC;MAChD,IAAI,CAACwG,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC5E,cAAc,CAACgD,QAAQ,CAAC,EAAE0B,KAAK,EAAErG,GAAG,EAAE6F,KAAK,CAAC;IAC9E,CAAC,MACI,IAAI9F,KAAK,YAAYnC,cAAc,IAAImC,KAAK,CAAC+B,UAAU,EAAE;MAC1D,IAAI8E,SAAS,GAAG,IAAIhC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3B,IAAIiC,WAAW,GAAG,IAAIjC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7B,IAAIkC,gBAAgB,GAAG/G,KAAK,CAAC+B,UAAU;MACvC,IAAIwB,IAAI,GAAGvD,KAAK,CAACgH,SAAS,CAAC,IAAI,CAAC;MAChC,IAAI,CAACD,gBAAgB,CAACvE,GAAG,CAAC,QAAQ,CAAC,IAAIe,IAAI,IAAIA,IAAI,KAAK,EAAE,EAAE;QACxDwD,gBAAgB,CAACE,MAAM,CAAC,QAAQ,EAAEjH,KAAK,CAACI,MAAM,CAAC;MACnD;MACA,IAAI,CAACiG,0BAA0B,CAACS,WAAW,EAAEC,gBAAgB,CAAC;MAC9D,IAAI9E,IAAI,GAAG,KAAK,CAAC;MACjB,IAAI8E,gBAAgB,CAACvE,GAAG,CAAC,SAAS,CAAC,EAAE;QACjCP,IAAI,GAAG,IAAI,CAACc,SAAS,CAACgE,gBAAgB,CAACrE,GAAG,CAAC,SAAS,CAAC,CAAC;MAC1D;MACA,IAAK,CAACqE,gBAAgB,CAACvE,GAAG,CAAC,MAAM,CAAC,IAAI,CAACuE,gBAAgB,CAACvE,GAAG,CAAC,SAAS,CAAC,IACjEuE,gBAAgB,CAACvE,GAAG,CAAC,SAAS,CAAC,KAC3BP,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,eAAe,IAAIA,IAAI,KAAK,UAAU,CAAE,EAAE;QAC/F4E,SAAS,CAACzE,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;QAC5ByE,SAAS,CAACzE,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;MACpC,CAAC,MACI;QACDyE,SAAS,CAACzE,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;QACjCyE,SAAS,CAACzE,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC;MACtC;MACA,IAAImB,IAAI,IAAIA,IAAI,KAAK,EAAE,EAAE;QACrBsD,SAAS,CAACzE,GAAG,CAAC,OAAO,EAAEmB,IAAI,CAAC;MAChC;MACAuD,WAAW,CAAC1E,GAAG,CAAC,MAAM,EAAE,IAAI,CAACR,cAAc,CAACiF,SAAS,CAAC,CAAC;MACvD,IAAI,CAACL,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC5E,cAAc,CAACkF,WAAW,CAAC,EAAER,KAAK,EAAErG,GAAG,EAAE6F,KAAK,CAAC;IACnF,CAAC,MACI,IAAI9F,KAAK,YAAYpC,aAAa,IAAI,IAAI,CAACa,eAAe,EAAE;MAC7D,IAAI,CAAC8H,YAAY,CAACD,KAAK,EAAE,IAAI,CAAC7H,eAAe,CAACyI,MAAM,CAAClH,KAAK,CAAC,EAAE+B,UAAU,EAAE9B,GAAG,CAAC;IACjF,CAAC,MACI,IAAID,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;MACrD,IAAI,CAACwG,WAAW,CAAC,MAAM,EAAE,MAAM,EAAEF,KAAK,EAAErG,GAAG,EAAE6F,KAAK,CAAC;IACvD;EACJ,CAAC;EACD9H,aAAa,CAACnB,SAAS,CAAC2J,WAAW,GAAG,UAAUW,QAAQ,EAAEnH,KAAK,EAAEsG,KAAK,EAAErG,GAAG,EAAE6F,KAAK,EAAE;IAChF,IAAIsB,GAAG,GAAG,IAAIvC,GAAG,CAAC,CAAC;IACnBuC,GAAG,CAAChF,GAAG,CAAC+E,QAAQ,EAAEnH,KAAK,CAAC;IACxB,IAAIC,GAAG,EAAE;MACLqG,KAAK,CAAClE,GAAG,CAACnC,GAAG,EAAE,IAAI,CAAC2B,cAAc,CAACwF,GAAG,CAAC,CAAC;IAC5C,CAAC,MACI,IAAItB,KAAK,EAAE;MACZA,KAAK,CAACnG,IAAI,CAACyH,GAAG,CAAC;IACnB;EACJ,CAAC;EACDpJ,aAAa,CAACnB,SAAS,CAAC6J,WAAW,GAAG,UAAUZ,KAAK,EAAE9F,KAAK,EAAE+B,UAAU,EAAE;IACtE,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,KAAK,CAACI,MAAM,EAAEjB,CAAC,EAAE,EAAE;MACnC,IAAI,CAACoH,YAAY,CAAC,IAAI,EAAEvG,KAAK,CAACW,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAEkB,UAAU,EAAE,IAAI,EAAE+D,KAAK,CAAC;IAC9F;EACJ,CAAC;EACD9H,aAAa,CAACnB,SAAS,CAAC+E,cAAc,GAAG,UAAU0E,KAAK,EAAE;IACtD,IAAI7F,CAAC,GAAG,CAAC;IACT,IAAIoF,IAAI,GAAG,GAAG;IACdS,KAAK,CAACvG,OAAO,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;MAChC,IAAID,KAAK,CAACoF,UAAU,CAAC,GAAG,CAAC,IAAIpF,KAAK,CAACoF,UAAU,CAAC,GAAG,CAAC,EAAE;QAChD,IAAInF,GAAG,KAAK,qBAAqB,EAAE;UAC/B4F,IAAI,IAAI,GAAG,GAAG5F,GAAG,GAAG,KAAK,GAAGD,KAAK,GAAG,GAAG;QAC3C,CAAC,MACI;UACD6F,IAAI,IAAI,GAAG,GAAG5F,GAAG,GAAG,IAAI,GAAGD,KAAK;QACpC;MACJ,CAAC,MACI;QACD,IAAIA,KAAK,CAACoF,UAAU,CAAC,GAAG,CAAC,IAAIpF,KAAK,CAACI,MAAM,GAAG,CAAC,KAAKJ,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE;UACrFA,KAAK,GAAGA,KAAK,CAACqF,SAAS,CAAC,CAAC,CAAC;QAC9B;QACAQ,IAAI,IAAI,GAAG,GAAG5F,GAAG,GAAG,KAAK,GAAGD,KAAK,GAAG,GAAG;MAC3C;MACA,IAAIS,CAAC,GAAG6F,KAAK,CAACrF,IAAI,GAAG,CAAC,EAAE;QACpB4E,IAAI,IAAI,GAAG;MACf;MACApF,CAAC,EAAE;IACP,CAAC,CAAC;IACF,OAAOoF,IAAI,GAAG,GAAG;EACrB,CAAC;EACD7H,aAAa,CAACnB,SAAS,CAAC8J,mBAAmB,GAAG,UAAUb,KAAK,EAAE;IAC3D,IAAID,IAAI,GAAG,GAAG;IACd,KAAK,IAAI1G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2G,KAAK,CAAC1F,MAAM,EAAEjB,CAAC,EAAE,EAAE;MACnC0G,IAAI,IAAI,IAAI,CAACjE,cAAc,CAACkE,KAAK,CAACnF,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACrE,IAAI1B,CAAC,GAAG2G,KAAK,CAAC1F,MAAM,GAAG,CAAC,EAAE;QACtByF,IAAI,IAAI,GAAG;MACf;IACJ;IACA,OAAOA,IAAI,GAAG,GAAG;EACrB,CAAC;EACD;EACA7H,aAAa,CAACnB,SAAS,CAACwK,UAAU,GAAG,UAAU9I,QAAQ,EAAEgF,IAAI,EAAE;IAC3D,IAAI,CAAC/E,SAAS,GAAGD,QAAQ;IACzB,IAAI,CAACE,eAAe,GAAGF,QAAQ,CAACE,eAAe;IAC/C,IAAI6I,UAAU,GAAG/J,cAAc,CAACgG,IAAI,CAAC;IACrC,IAAI+D,UAAU,CAAClC,UAAU,CAAC,GAAG,CAAC,IAAI,CAACkC,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MACzD,OAAOD,UAAU,CAAClH,MAAM,GAAG,CAAC,IAAI,CAACkH,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACvDD,UAAU,GAAGA,UAAU,CAACjC,SAAS,CAAC,CAAC,EAAEiC,UAAU,CAAClH,MAAM,GAAG,CAAC,CAAC;MAC/D;IACJ;IACA,OAAOoH,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC;EACjC,CAAC;EACDtJ,aAAa,CAACnB,SAAS,CAAC6K,eAAe,GAAG,UAAUnJ,QAAQ,EAAEgF,IAAI,EAAE;IAChE,IAAIpF,KAAK,GAAG,IAAI;IAChB,IAAI0H,IAAI,GAAG,IAAI,CAACwB,UAAU,CAAC9I,QAAQ,EAAEgF,IAAI,CAAC,CAAC,CAAC;IAC5C,IAAIsC,IAAI,EAAE;MACN,IAAI8B,IAAI,GAAGtL,MAAM,CAACsL,IAAI,CAAC9B,IAAI,CAAC;MAC5B,IAAI8B,IAAI,IAAIA,IAAI,CAACvH,MAAM,GAAG,CAAC,EAAE;QACzB,IAAIwH,OAAO,GAAG,SAAAA,CAAUzI,CAAC,EAAE;UACvB,IAAIc,GAAG,GAAG0H,IAAI,CAAChH,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UACjD,IAAIb,KAAK,GAAG6F,IAAI,CAAC5F,GAAG,CAAC,CAAC,CAAC;UACvB,IAAIzD,KAAK,CAAC8D,OAAO,CAACN,KAAK,CAAC,EAAE;YACtB,IAAI6H,MAAM,CAACC,OAAO,CAACtF,GAAG,CAAC,KAAK,CAAC,EAAE;cAC3BxC,KAAK,CAACD,OAAO,CAAC,UAAUW,KAAK,EAAE;gBAC3BvC,KAAK,CAAC2J,OAAO,CAACpF,GAAG,CAACzC,GAAG,CAAC,CAACN,IAAI,CAACe,KAAK,CAAC;cACtC,CAAC,CAAC;YACN,CAAC,MACI;cACDmH,MAAM,CAACC,OAAO,CAAC1F,GAAG,CAACnC,GAAG,EAAED,KAAK,CAAC;YAClC;UACJ,CAAC,MACI;YACD,IAAI6H,MAAM,CAACC,OAAO,CAACtF,GAAG,CAAC,KAAK,CAAC,EAAE;cAC3BqF,MAAM,CAACC,OAAO,CAACpF,GAAG,CAACzC,GAAG,CAAC,CAACN,IAAI,CAACK,KAAK,CAAC;YACvC,CAAC,MACI;cACD6H,MAAM,CAACC,OAAO,CAAC1F,GAAG,CAACnC,GAAG,EAAE,CAACD,KAAK,CAAC,CAAC;YACpC;UACJ;QACJ,CAAC;QACD,IAAI6H,MAAM,GAAG,IAAI;QACjB,KAAK,IAAI1I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwI,IAAI,CAACvH,MAAM,EAAEjB,CAAC,EAAE,EAAE;UAClCyI,OAAO,CAACzI,CAAC,CAAC;QACd;QACA,IAAI,CAAC4I,YAAY,CAAC,CAAC;MACvB;IACJ;EACJ,CAAC;EACD/J,aAAa,CAACnB,SAAS,CAACmL,kBAAkB,GAAG,UAAUzJ,QAAQ,EAAEgF,IAAI,EAAE;IACnE,IAAIpF,KAAK,GAAG,IAAI;IAChB,IAAI0H,IAAI,GAAG,IAAI,CAACwB,UAAU,CAAC9I,QAAQ,EAAEgF,IAAI,CAAC,CAAC,CAAC;IAC5C,IAAIsC,IAAI,EAAE;MACN,IAAI8B,IAAI,GAAGtL,MAAM,CAACsL,IAAI,CAAC9B,IAAI,CAAC;MAC5B,IAAI8B,IAAI,CAACrC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE;QACtC,IAAI2C,iBAAiB,GAAGpC,IAAI,CAACqC,aAAa,CAAC,CAAC;QAC5C,IAAIC,WAAW,GAAG5J,QAAQ,CAACK,SAAS;QACpC,IAAIwJ,QAAQ,GAAG/L,MAAM,CAACsL,IAAI,CAACM,iBAAiB,CAAC;QAC7C,IAAIG,QAAQ,IAAIA,QAAQ,CAAChI,MAAM,GAAG,CAAC,EAAE;UACjCgI,QAAQ,CAACrI,OAAO,CAAC,UAAUE,GAAG,EAAE;YAC5B,IAAI2C,SAAS,GAAGjC,MAAM,CAACC,QAAQ,CAACX,GAAG,EAAE,EAAE,CAAC;YACxC,IAAI,OAAO2C,SAAS,KAAK,WAAW,IAAIA,SAAS,GAAGuF,WAAW,EAAE;cAC7D,IAAIE,MAAM,GAAG9J,QAAQ,CAAC8C,OAAO,CAACuB,SAAS,CAAC;cACxC,IAAI0F,cAAc,GAAGL,iBAAiB,CAAChI,GAAG,CAAC,CAAC,CAAC;cAC7C,IAAIqI,cAAc,EAAE;gBAChB,IAAIC,kBAAkB,GAAGlM,MAAM,CAACsL,IAAI,CAACW,cAAc,CAAC;gBACpD,IAAIC,kBAAkB,IAAIA,kBAAkB,CAACnI,MAAM,GAAG,CAAC,IAAImI,kBAAkB,CAACjD,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE;kBAC7G,IAAIhE,WAAW,GAAGgH,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC;kBACrD,IAAIhH,WAAW,IAAIA,WAAW,CAAClB,MAAM,GAAG,CAAC,EAAE;oBACvCkB,WAAW,CAACvB,OAAO,CAAC,UAAU0B,UAAU,EAAE;sBACtC,IAAI+G,cAAc,GAAGnM,MAAM,CAACsL,IAAI,CAAClG,UAAU,CAAC;sBAC5C,IAAI+G,cAAc,IAAIA,cAAc,CAACpI,MAAM,GAAG,CAAC,IAAIoI,cAAc,CAAClD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;wBACtF,IAAIvD,UAAU,GAAG,IAAIrE,cAAc,CAACS,KAAK,CAACM,eAAe,CAAC;wBAC1DsD,UAAU,CAACkF,MAAM,CAAC,MAAM,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,OAAO,CAAC,CAAC;wBAChD,IAAI+F,WAAW,GAAG,IAAI;wBACtB,QAAQhH,UAAU,CAAC,MAAM,CAAC,CAACgD,WAAW,CAAC,CAAC;0BACpC,KAAK,MAAM;4BACP1C,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,MAAM,CAAC,CAAC;4BAClD;0BACJ,KAAK,QAAQ;4BACTX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,QAAQ,CAAC,CAAC;4BACpD;0BACJ,KAAK,QAAQ;4BACTX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,QAAQ,CAAC,CAAC;4BACpD;0BACJ,KAAK,UAAU;4BACXX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,UAAU,CAAC,CAAC;4BACtD;0BACJ,KAAK,SAAS;4BACVX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,SAAS,CAAC,CAAC;4BACrD;0BACJ,KAAK,KAAK;4BACNX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,KAAK,CAAC,CAAC;4BACjD;0BACJ,KAAK,OAAO;4BACRX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,OAAO,CAAC,CAAC;4BACnD;0BACJ,KAAK,MAAM;4BACPX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,MAAM,CAAC,CAAC;4BAClD;0BACJ,KAAK,UAAU;4BACXX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,UAAU,CAAC,CAAC;4BACtD;0BACJ,KAAK,OAAO;4BACRX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,OAAO,CAAC,CAAC;4BACnD;0BACJ,KAAK,WAAW;4BACZX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,WAAW,CAAC,CAAC;4BACvD;0BACJ,KAAK,UAAU;4BACXX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,UAAU,CAAC,CAAC;4BACtD;0BACJ,KAAK,WAAW;4BACZX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,WAAW,CAAC,CAAC;4BACvD;0BACJ,KAAK,WAAW;4BACZX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,WAAW,CAAC,CAAC;4BACvD;0BACJ,KAAK,gBAAgB;4BACjBX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,gBAAgB,CAAC,CAAC;4BAC5D;0BACJ,KAAK,OAAO;4BACRX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,OAAO,CAAC,CAAC;4BACnD;0BACJ,KAAK,QAAQ;4BACTX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,QAAQ,CAAC,CAAC;4BACpD;0BACJ,KAAK,OAAO;4BACRX,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,OAAO,CAAC,CAAC;4BACnD;0BACJ;4BACI+F,WAAW,GAAG,KAAK;4BACnB;wBACR;wBACA,IAAIA,WAAW,EAAE;0BACbtK,KAAK,CAACuK,kBAAkB,CAAC3G,UAAU,EAAEN,UAAU,EAAE+G,cAAc,CAAC;0BAChE,IAAIG,cAAc,GAAGN,MAAM,CAACO,eAAe;0BAC3C,IAAID,cAAc,EAAE;4BAChB,IAAIE,aAAa,GAAGR,MAAM,CAAC/G,WAAW;4BACtC,IAAIwH,YAAY,GAAGD,aAAa,CAACE,gBAAgB,CAAChH,UAAU,CAAC;4BAC7D,IAAI+G,YAAY,EAAE;8BACdA,YAAY,CAACE,WAAW,GAAG,IAAI;8BAC/B,IAAIC,SAAS,GAAG9K,KAAK,CAACM,eAAe,CAACyK,iBAAiB,CAAC,CAAC;8BACzD/K,KAAK,CAACM,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAAC6G,SAAS,EAAElH,UAAU,CAAC;8BAC1D,IAAIA,UAAU,CAACS,GAAG,CAAC,IAAI,CAAC,IAAIT,UAAU,CAACS,GAAG,CAAC,KAAK,CAAC,EAAE;gCAC/CrE,KAAK,CAACiL,oBAAoB,CAACH,SAAS,EAAElH,UAAU,CAAC;8BACrD;8BACA+G,YAAY,CAACO,IAAI,GAAGJ,SAAS;8BAC7B,IAAIpJ,KAAK,GAAGgJ,aAAa,CAACS,YAAY,CAAClJ,MAAM;8BAC7CyI,aAAa,CAACS,YAAY,CAAC3J,IAAI,CAACsJ,SAAS,CAAC;8BAC1CN,cAAc,CAACvG,GAAG,CAAC,QAAQ,EAAEyG,aAAa,CAACS,YAAY,CAAC;8BACxDX,cAAc,CAACY,QAAQ,GAAG,IAAI;8BAC9BV,aAAa,CAACW,kBAAkB,CAACpH,GAAG,CAACvC,KAAK,EAAEiJ,YAAY,CAAC;8BACzD3K,KAAK,CAACsL,YAAY,CAACZ,aAAa,EAAEI,SAAS,EAAElH,UAAU,EAAE4G,cAAc,CAAC;4BAC5E;0BACJ;wBACJ;sBACJ;oBACJ,CAAC,CAAC;kBACN;gBACJ;cACJ;YACJ;UACJ,CAAC,CAAC;QACN;QACA,IAAI,IAAI,CAACe,aAAa,CAACtJ,MAAM,GAAG,CAAC,EAAE;UAC/B,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACuK,aAAa,CAACtJ,MAAM,EAAEjB,CAAC,EAAE,EAAE;YAChD,IAAI4C,UAAU,GAAG,IAAI,CAAC2H,aAAa,CAAC/I,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACtE,IAAI8I,SAAS,GAAG5H,UAAU,CAACW,GAAG,CAAC,KAAK,CAAC;YACrC,IAAIiH,SAAS,IAAIA,SAAS,KAAK,EAAE,EAAE;cAC/B,IAAI,IAAI,CAACC,gBAAgB,CAACpH,GAAG,CAACmH,SAAS,CAAC,EAAE;gBACtC5H,UAAU,CAACkF,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC2C,gBAAgB,CAAClH,GAAG,CAACiH,SAAS,CAAC,CAAC;cAClE,CAAC,MACI;gBACD,OAAO5H,UAAU,CAAC8H,IAAI,CAACC,GAAG;cAC9B;YACJ;UACJ;QACJ;QACA,IAAI,CAACJ,aAAa,GAAG,EAAE;QACvB,IAAI,CAACE,gBAAgB,GAAG,IAAI/E,GAAG,CAAC,CAAC;MACrC;IACJ;EACJ,CAAC;EACD7G,aAAa,CAACnB,SAAS,CAAC6L,kBAAkB,GAAG,UAAU3G,UAAU,EAAEN,UAAU,EAAE+G,cAAc,EAAE;IAC3F,IAAIrK,KAAK,GAAG,IAAI;IAChB,IAAI4L,sBAAsB,GAAG,IAAIrM,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;IACrE,IAAIuL,qBAAqB,GAAG,IAAItM,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;IACpE,IAAIwL,UAAU,GAAG,IAAIpF,GAAG,CAAC,CAAC;IAC1B,IAAItC,UAAU,GAAG,EAAE;IACnB,IAAI2H,cAAc;IAClB,IAAIC,YAAY;IAChB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,IAAI;IACR,IAAIC,QAAQ;IACZ9B,cAAc,CAACzI,OAAO,CAAC,UAAUE,GAAG,EAAE;MAClC,IAAID,KAAK,GAAGyB,UAAU,CAACxB,GAAG,CAAC,CAAC,CAAC;MAC7B,QAAQA,GAAG,CAACwE,WAAW,CAAC,CAAC;QACrB,KAAK,OAAO;QACZ,KAAK,KAAK;UACNtG,KAAK,CAACoM,cAAc,CAACvK,KAAK,EAAEuC,UAAU,CAAC;UACvC,IAAIA,UAAU,CAACnC,MAAM,KAAK,CAAC,EAAE;YACzB2B,UAAU,CAACkF,MAAM,CAAC,GAAG,EAAE1E,UAAU,CAAC;YAClCA,UAAU,GAAG,EAAE;UACnB;UACA;QACJ,KAAK,MAAM;UACP;QACJ,KAAK,OAAO;UACRpE,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,OAAO,EAAE/B,KAAK,CAAC;UAC5C;QACJ,KAAK,YAAY;UACb7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,YAAY,EAAE/B,KAAK,CAAC;UACjD;QACJ,KAAK,WAAW;UACZ,IAAIA,KAAK,CAACyE,WAAW,CAAC,CAAC,KAAK,OAAO,EAAE;YACjC1C,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,OAAO,CAAC,CAAC;UAClD;UACA;QACJ,KAAK,WAAW;UACZvE,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,KAAK,EAAE/B,KAAK,CAAC;UAC1C;QACJ,KAAK,QAAQ;QACb,KAAK,OAAO;QACZ,KAAK,WAAW;QAChB,KAAK,OAAO;UACR7B,KAAK,CAACsM,eAAe,CAACxK,GAAG,EAAED,KAAK,EAAE+J,sBAAsB,EAAEC,qBAAqB,CAAC;UAChF;QACJ,KAAK,MAAM;UACPK,IAAI,GAAGrK,KAAK;UACZ,IAAIqK,IAAI,EAAE;YACN,IAAI/H,MAAM,GAAG,EAAE;YACfA,MAAM,CAAC3C,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAACL,IAAI,CAACM,CAAC,CAAC,CAAC;YACtCrI,MAAM,CAAC3C,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAACL,IAAI,CAACO,CAAC,CAAC,CAAC;YACtCtI,MAAM,CAAC3C,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAACL,IAAI,CAACQ,KAAK,CAAC,CAAC;YAC1CvI,MAAM,CAAC3C,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAACL,IAAI,CAACS,MAAM,CAAC,CAAC;YAC3C,IAAIxI,MAAM,IAAIA,MAAM,CAAClC,MAAM,KAAK,CAAC,EAAE;cAC/B2B,UAAU,CAACkF,MAAM,CAAC,MAAM,EAAE3E,MAAM,CAAC;YACrC;UACJ;UACA;QACJ,KAAK,OAAO;UACRtC,KAAK,GAAG/C,eAAe,CAAC+C,KAAK,CAAC;UAC9B,IAAIA,KAAK,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;YAC7B2B,UAAU,CAACkF,MAAM,CAAC,GAAG,EAAE,CAACjH,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;UAC5E;UACA;QACJ,KAAK,IAAI;UACL,IAAIA,KAAK,IAAI+B,UAAU,CAACW,GAAG,CAAC,SAAS,CAAC,CAACI,IAAI,KAAK,QAAQ,EAAE;YACtDwH,QAAQ,GAAGtK,KAAK,CAAC2E,KAAK,CAAC,GAAG,CAAC;YAC3B,IAAIoG,OAAO,GAAG,EAAE;YAChBT,QAAQ,CAACvK,OAAO,CAAC,UAAUW,KAAK,EAAE;cAC9BqK,OAAO,CAACpL,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAAChK,KAAK,CAAC,CAAC;YAC1C,CAAC,CAAC;YACF,IAAIqK,OAAO,IAAIA,OAAO,CAAC3K,MAAM,GAAG,CAAC,EAAE;cAC/B2B,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAE8D,OAAO,CAAC;YACpC;UACJ;UACA;QACJ,KAAK,gBAAgB;UACjB/K,KAAK,GAAG/C,eAAe,CAAC+C,KAAK,CAAC;UAC9B,IAAIA,KAAK,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;YAC7B2B,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAE,CAACjH,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;UAC7E;UACA;QACJ,KAAK,MAAM;UACP7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,GAAG,EAAE/B,KAAK,CAAC;UACxC;QACJ,KAAK,cAAc;UACf7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,cAAc,EAAE/B,KAAK,CAAC;UACnD;QACJ,KAAK,MAAM;UACP7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,IAAI,EAAE/B,KAAK,CAAC;UACzC;QACJ,KAAK,MAAM;UACP,IAAIA,KAAK,EAAE;YACP+B,UAAU,CAACkF,MAAM,CAAC,MAAM,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC1C,KAAK,CAAC,CAAC;UAClD;UACA;QACJ,KAAK,SAAS;UACV7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,MAAM,EAAE/B,KAAK,CAAC;UAC3C;QACJ,KAAK,OAAO;UACR7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,GAAG,EAAE/B,KAAK,CAAC;UACxC;QACJ,KAAK,UAAU;UACX+B,UAAU,CAACkF,MAAM,CAAC,QAAQ,EAAEtG,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;UACrD;QACJ,KAAK,QAAQ;UACT7B,KAAK,CAAC6M,eAAe,CAACjJ,UAAU,EAAE,IAAI,EAAE5D,KAAK,CAAC8M,iBAAiB,CAACjL,KAAK,CAAC,CAAC;UACvE;QACJ,KAAK,IAAI;UACL,IAAIA,KAAK,EAAE;YACP+B,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC1C,KAAK,CAAC,CAAC;UAChD;UACA;QACJ,KAAK,cAAc;UACf+B,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEtG,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;UACjD;QACJ,KAAK,cAAc;UACf+B,UAAU,CAACkF,MAAM,CAAC,KAAK,EAAEtG,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;UAClD;QACJ,KAAK,SAAS;UACV7B,KAAK,CAAC+M,WAAW,CAACnJ,UAAU,EAAE,KAAK,EAAE/B,KAAK,CAACyE,WAAW,CAAC,CAAC,CAAC;UACzD;QACJ,KAAK,eAAe;UAChB,IAAIzE,KAAK,EAAE;YACP+B,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC1C,KAAK,CAAC,CAAC;UAChD;UACA;QACJ,KAAK,SAAS;UACV7B,KAAK,CAAC6M,eAAe,CAACjJ,UAAU,EAAE,IAAI,EAAE5D,KAAK,CAAC8M,iBAAiB,CAACjL,KAAK,CAAC,CAAC;UACvE;QACJ,KAAK,QAAQ;UACT7B,KAAK,CAAC6M,eAAe,CAACjJ,UAAU,EAAE,YAAY,EAAE5D,KAAK,CAAC8M,iBAAiB,CAACjL,KAAK,CAAC,CAAC;UAC/E;QACJ,KAAK,QAAQ;UACT7B,KAAK,CAAC6M,eAAe,CAACjJ,UAAU,EAAE,QAAQ,EAAE5D,KAAK,CAAC8M,iBAAiB,CAACjL,KAAK,CAAC,CAAC;UAC3E;QACJ,KAAK,SAAS;UACV+B,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEtG,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;UACjD;QACJ,KAAK,cAAc;UACf,IAAIA,KAAK,EAAE;YACP,IAAImL,WAAW,GAAG9O,MAAM,CAACsL,IAAI,CAAC3H,KAAK,CAAC;YACpC,IAAImL,WAAW,IAAIA,WAAW,CAAC/K,MAAM,GAAG,CAAC,EAAE;cACvC,IAAIgL,OAAO,GAAG,EAAE;cAChB,IAAIC,OAAO,GAAG,CAAC;cACfF,WAAW,CAACpL,OAAO,CAAC,UAAUuL,QAAQ,EAAE;gBACpC,IAAIC,UAAU,GAAGvL,KAAK,CAACsL,QAAQ,CAAC,CAAC,CAAC;gBAClCF,OAAO,IAAIE,QAAQ,GAAG,GAAG,GAAGC,UAAU;gBACtC,IAAIF,OAAO,GAAGF,WAAW,CAAC/K,MAAM,GAAG,CAAC,EAAE;kBAClCgL,OAAO,IAAI,GAAG;gBAClB;gBACAC,OAAO,EAAE;cACb,CAAC,CAAC;cACFlN,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,IAAI,EAAEqJ,OAAO,CAAC;YAC/C;UACJ;UACA;QACJ,KAAK,mBAAmB;UACpBjN,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,IAAI,EAAE/B,KAAK,CAAC;UACzC;QACJ,KAAK,OAAO;UACR,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;YACpC,IAAIwL,SAAS,GAAGzN,iBAAiB,CAAC0N,OAAO;YACzC,IAAIC,KAAK,GAAG1L,KAAK,CAAC2E,KAAK,CAAC,GAAG,CAAC;YAC5B,KAAK,IAAIxF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuM,KAAK,CAACtL,MAAM,EAAEjB,CAAC,EAAE,EAAE;cACnC,IAAIwM,QAAQ,GAAG3O,wBAAwB,CAAC0O,KAAK,CAAC/K,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;cACjF,IAAI1B,CAAC,KAAK,CAAC,EAAE;gBACTqM,SAAS,GAAGG,QAAQ;cACxB,CAAC,MACI;gBACDH,SAAS,IAAIG,QAAQ;cACzB;YACJ;YACA5J,UAAU,CAACkF,MAAM,CAAC,GAAG,EAAEuE,SAAS,CAAC;UACrC;UACA;QACJ,KAAK,MAAM;UACPrN,KAAK,CAAC+M,WAAW,CAACnJ,UAAU,EAAE,MAAM,EAAE/B,KAAK,CAACyE,WAAW,CAAC,CAAC,CAAC;UAC1D;QACJ,KAAK,QAAQ;UACTtG,KAAK,CAAC+M,WAAW,CAACnJ,UAAU,EAAE,QAAQ,EAAE/B,KAAK,CAACyE,WAAW,CAAC,CAAC,CAAC;UAC5D;QACJ,KAAK,aAAa;UACdtG,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,aAAa,EAAE/B,KAAK,CAAC;UAClD;QACJ,KAAK,UAAU;UACX,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAIA,KAAK,CAACsF,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;cAC7BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;YACtC;YACA,IAAIvF,KAAK,EAAE;cACP7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,UAAU,EAAE/B,KAAK,CAAC;YACnD;UACJ;UACA;QACJ,KAAK,GAAG;UACJ+B,UAAU,CAACkF,MAAM,CAAC,GAAG,EAAEtG,MAAM,CAACC,QAAQ,CAACZ,KAAK,EAAE,EAAE,CAAC,CAAC;UAClD;QACJ,KAAK,SAAS;UACV,IAAIA,KAAK,EAAE;YACP,IAAI4L,WAAW,GAAGvP,MAAM,CAACsL,IAAI,CAAC3H,KAAK,CAAC;YACpC,IAAI4L,WAAW,IAAIA,WAAW,CAACxL,MAAM,GAAG,CAAC,IAAIwL,WAAW,CAACtG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;cAChF,IAAIuG,OAAO,GAAG7L,KAAK,CAAC6L,OAAO;cAC3B,IAAIA,OAAO,IAAIA,OAAO,CAACzL,MAAM,GAAG,CAAC,EAAE;gBAC/B2B,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAE4E,OAAO,CAAC;cACzC;YACJ;UACJ;UACA;QACJ,KAAK,MAAM;UACP3B,cAAc,GAAGlK,KAAK;UACtB;QACJ,KAAK,MAAM;UACPmK,YAAY,GAAGnK,KAAK;UACpB;QACJ,KAAK,UAAU;QACf,KAAK,cAAc;QACnB,KAAK,MAAM;QACX,KAAK,MAAM;QACX,KAAK,UAAU;QACf,KAAK,UAAU;QACf,KAAK,MAAM;QACX,KAAK,QAAQ;QACb,KAAK,QAAQ;QACb,KAAK,MAAM;QACX,KAAK,MAAM;UACPiK,UAAU,CAAC7H,GAAG,CAACnC,GAAG,EAAED,KAAK,CAAC;UAC1B;QACJ,KAAK,MAAM;UACPoK,MAAM,GAAGpK,KAAK;UACd;QACJ,KAAK,UAAU;UACX,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;YACpC,IAAI2E,KAAK,GAAG3E,KAAK,CAAC2E,KAAK,CAAC,MAAM,CAAC;YAC/B,IAAIA,KAAK,IAAIA,KAAK,CAACvE,MAAM,GAAG,CAAC,EAAE;cAC3B,IAAIoF,QAAQ,GAAG,EAAE;cACjB,KAAK,IAAIrG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwF,KAAK,CAACvE,MAAM,EAAEjB,CAAC,EAAE,EAAE;gBACnCqG,QAAQ,CAAC7F,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAAC/F,KAAK,CAAChE,MAAM,CAACC,QAAQ,CAACzB,CAAC,CAAC0B,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;cAC9E;cACA,IAAI2E,QAAQ,CAACpF,MAAM,GAAG,CAAC,IAAIoF,QAAQ,CAACpF,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;gBAClD2B,UAAU,CAACkF,MAAM,CAAC,UAAU,EAAEzB,QAAQ,CAAC;cAC3C;YACJ;UACJ;UACA;QACJ,KAAK,YAAY;UACbrH,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,YAAY,EAAE/B,KAAK,CAAC;UACjD;QACJ,KAAK,YAAY;UACb7B,KAAK,CAAC2N,kBAAkB,CAAC/J,UAAU,EAAE/B,KAAK,CAAC;UAC3C;QACJ,KAAK,qBAAqB;UACtB7B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE,qBAAqB,EAAE/B,KAAK,CAAC;UAC1D;QACJ;UACI,IAAI7B,KAAK,CAACK,SAAS,CAACuN,sBAAsB,IAAI9L,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,MAAM,EAAE;YAC5E9B,KAAK,CAACqM,UAAU,CAACzI,UAAU,EAAE9B,GAAG,EAAED,KAAK,CAAC;UAC5C;UACA;MACR;IACJ,CAAC,CAAC;IACF,IAAI,CAACgM,qBAAqB,CAACjK,UAAU,EAAEN,UAAU,EAAE+G,cAAc,CAAC;IAClE,IAAI0B,cAAc,EAAE;MAChB,IAAIC,YAAY,EAAE;QACdpI,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAE,CAACtJ,QAAQ,CAAC+E,GAAG,CAACwH,cAAc,CAAC,EAAEvM,QAAQ,CAAC+E,GAAG,CAACyH,YAAY,CAAC,CAAC,CAAC;MACvF,CAAC,MACI;QACDpI,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEiD,cAAc,CAAC;MAC3C;IACJ,CAAC,MACI,IAAIC,YAAY,EAAE;MACnBpI,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEkD,YAAY,CAAC;IACzC;IACA,IAAIH,qBAAqB,CAAC/I,IAAI,GAAG,CAAC,EAAE;MAChC+I,qBAAqB,CAAC/C,MAAM,CAAC,MAAM,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,QAAQ,CAAC,CAAC;MAC5D,IAAIuG,SAAS,GAAG,IAAI,CAACxK,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MACxDc,qBAAqB,CAACiC,KAAK,GAAGhD,SAAS,CAACiD,YAAY,GAAG,GAAG,GAAGjD,SAAS,CAACkD,gBAAgB;MACvF,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAAC6G,SAAS,EAAEe,qBAAqB,CAAC;MACpEjI,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEgC,SAAS,CAAC;IACtC;IACA,IAAIc,sBAAsB,CAAC9I,IAAI,GAAG,CAAC,EAAE;MACjC,IAAIgI,SAAS,GAAG,IAAI,CAACxK,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MACxDc,qBAAqB,CAACiC,KAAK,GAAGhD,SAAS,CAACiD,YAAY,GAAG,GAAG,GAAGjD,SAAS,CAACkD,gBAAgB;MACvF,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAAC6G,SAAS,EAAEc,sBAAsB,CAAC;MACrEhI,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEgC,SAAS,CAAC;IACtC;IACA,IAAI,CAACmD,cAAc,CAACrK,UAAU,EAAEkI,UAAU,EAAEG,MAAM,CAAC;EACvD,CAAC;EACDpM,aAAa,CAACnB,SAAS,CAAC0N,cAAc,GAAG,UAAUvK,KAAK,EAAEuC,UAAU,EAAE;IAClE,IAAIvC,KAAK,IAAIA,KAAK,CAACsF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACpC,IAAIhD,MAAM,GAAGtC,KAAK,CAAC2E,KAAK,CAAC,GAAG,CAAC;MAC7BrC,MAAM,CAACvC,OAAO,CAAC,UAAUsM,KAAK,EAAE;QAC5B9J,UAAU,CAAC5C,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAAC2B,KAAK,CAAC,CAAC;MAC7C,CAAC,CAAC;IACN;EACJ,CAAC;EACDrO,aAAa,CAACnB,SAAS,CAAC2N,UAAU,GAAG,UAAUzI,UAAU,EAAE9B,GAAG,EAAED,KAAK,EAAE;IACnE,IAAIA,KAAK,EAAE;MACP+B,UAAU,CAACkF,MAAM,CAAChH,GAAG,EAAED,KAAK,CAAC;IACjC;EACJ,CAAC;EACDhC,aAAa,CAACnB,SAAS,CAACqO,WAAW,GAAG,UAAUnJ,UAAU,EAAE9B,GAAG,EAAED,KAAK,EAAE;IACpE,IAAIA,KAAK,EAAE;MACP+B,UAAU,CAACkF,MAAM,CAAChH,GAAG,EAAED,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,MAAM,CAAC;IAC/D;EACJ,CAAC;EACDhC,aAAa,CAACnB,SAAS,CAAC4N,eAAe,GAAG,UAAUxK,GAAG,EAAED,KAAK,EAAE+J,sBAAsB,EAAEC,qBAAqB,EAAE;IAC3G,IAAIsC,KAAK,GAAG,EAAE;IACd,IAAIC,YAAY,GAAG,IAAI;IACvB,QAAQvM,KAAK;MACT,KAAK,MAAM;QACPsM,KAAK,GAAG,GAAG;QACX;MACJ,KAAK,OAAO;QACRA,KAAK,GAAG,GAAG;QACX;MACJ,KAAK,UAAU;QACXA,KAAK,GAAG,GAAG;QACX;MACJ,KAAK,OAAO;QACRA,KAAK,GAAG,GAAG;QACX;MACJ,KAAK,WAAW;QACZA,KAAK,GAAG,GAAG;QACX;MACJ,KAAK,QAAQ;QACTA,KAAK,GAAG,GAAG;QACXC,YAAY,GAAG,KAAK;QACpB;IACR;IACA,QAAQtM,GAAG,CAACwE,WAAW,CAAC,CAAC;MACrB,KAAK,OAAO;QACRuF,qBAAqB,CAAC/C,MAAM,CAAC,GAAG,EAAEtG,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;QAC3D;MACJ,KAAK,WAAW;QACZ+J,sBAAsB,CAAC9C,MAAM,CAAC,GAAG,EAAEtG,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;QAC5D;MACJ,KAAK,QAAQ;QACT,IAAIA,KAAK,IAAIA,KAAK,CAACsF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;UACpC0E,qBAAqB,CAAC/C,MAAM,CAAC,GAAG,EAAE,IAAI,CAACgE,iBAAiB,CAACjL,KAAK,CAAC,CAAC;QACpE;QACA;IACR;IACA,IAAIsM,KAAK,EAAE;MACP,IAAIC,YAAY,EAAE;QACdvC,qBAAqB,CAAC/C,MAAM,CAAC,GAAG,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC4J,KAAK,CAAC,CAAC;MAC1D,CAAC,MACI;QACDvC,sBAAsB,CAAC9C,MAAM,CAAC,GAAG,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC4J,KAAK,CAAC,CAAC;MAC3D;IACJ;EACJ,CAAC;EACDtO,aAAa,CAACnB,SAAS,CAACoO,iBAAiB,GAAG,UAAUjL,KAAK,EAAE;IACzD,IAAIwM,MAAM,GAAGxM,KAAK,CAAC2E,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAI8H,SAAS,GAAG,EAAE;IAClBD,MAAM,CAACzM,OAAO,CAAC,UAAU2M,IAAI,EAAE;MAC3BD,SAAS,CAAC9M,IAAI,CAACgB,MAAM,CAAC+J,UAAU,CAACgC,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC;IACF,OAAOD,SAAS;EACpB,CAAC;EACDzO,aAAa,CAACnB,SAAS,CAACmO,eAAe,GAAG,UAAUjJ,UAAU,EAAE9B,GAAG,EAAED,KAAK,EAAE;IACxE,IAAIA,KAAK,IAAIA,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;MAC3B2B,UAAU,CAACkF,MAAM,CAAChH,GAAG,EAAED,KAAK,CAAC;IACjC;EACJ,CAAC;EACDhC,aAAa,CAACnB,SAAS,CAACmP,qBAAqB,GAAG,UAAUjK,UAAU,EAAEN,UAAU,EAAE+G,cAAc,EAAE;IAC9F,IAAImE,iBAAiB,GAAG,IAAIjP,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;IAChE,IAAImO,MAAM,GAAG,EAAE;IACf,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,MAAM,GAAG,EAAE;IACfL,iBAAiB,CAACvK,GAAG,CAAC,GAAG,EAAEwK,MAAM,CAAC;IAClCD,iBAAiB,CAACvK,GAAG,CAAC,GAAG,EAAEyK,MAAM,CAAC;IAClCF,iBAAiB,CAACvK,GAAG,CAAC,GAAG,EAAE0K,MAAM,CAAC;IAClCH,iBAAiB,CAACvK,GAAG,CAAC,GAAG,EAAE2K,MAAM,CAAC;IAClCJ,iBAAiB,CAACvK,GAAG,CAAC,GAAG,EAAE4K,MAAM,CAAC;IAClC,IAAIxE,cAAc,CAAClD,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5C,IAAI,CAACkF,UAAU,CAACmC,iBAAiB,EAAE,GAAG,EAAElL,UAAU,CAAC,WAAW,CAAC,CAAC;IACpE;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1C,IAAI,CAACkF,UAAU,CAACmC,iBAAiB,EAAE,SAAS,EAAElL,UAAU,CAAC,SAAS,CAAC,CAAC;IACxE;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAE;MACvD,IAAI,CAACkF,UAAU,CAACmC,iBAAiB,EAAE,sBAAsB,EAAElL,UAAU,CAAC,sBAAsB,CAAC,CAAC;IAClG;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MACvCsH,MAAM,CAACjN,IAAI,CAAC,IAAI,CAACsN,uBAAuB,CAACxL,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjE;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3CuH,MAAM,CAAClN,IAAI,CAAC,IAAI,CAACsN,uBAAuB,CAACxL,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACrE;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1CwH,MAAM,CAACnN,IAAI,CAAC,IAAI,CAACsN,uBAAuB,CAACxL,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACpE;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1CyH,MAAM,CAACpN,IAAI,CAAC,IAAI,CAACsN,uBAAuB,CAACxL,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACpE;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1C0H,MAAM,CAACrN,IAAI,CAAC,IAAI,CAACsN,uBAAuB,CAACxL,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACpE;IACA,IAAI+G,cAAc,CAAClD,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MACxCqH,iBAAiB,CAACvK,GAAG,CAAC,MAAM,EAAEzE,QAAQ,CAAC+E,GAAG,CAAC,SAAS,CAAC,CAAC;MACtD,IAAIuG,SAAS,GAAG,IAAI,CAACxK,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MACxDyD,iBAAiB,CAACV,KAAK,GAAGhD,SAAS,CAACiD,YAAY,GAAG,GAAG,GAAGjD,SAAS,CAACkD,gBAAgB;MACnF,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAAC6G,SAAS,EAAE0D,iBAAiB,CAAC;MAChE5K,UAAU,CAACkF,MAAM,CAAC,SAAS,EAAEgC,SAAS,CAAC;IAC3C;EACJ,CAAC;EACDjL,aAAa,CAACnB,SAAS,CAACoQ,uBAAuB,GAAG,UAAUC,QAAQ,EAAE;IAClE,IAAIvF,IAAI,GAAGtL,MAAM,CAACsL,IAAI,CAACuF,QAAQ,CAAC;IAChC,IAAInL,UAAU,GAAG,IAAIrE,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;IACzD,IAAIkJ,IAAI,IAAIA,IAAI,CAACvH,MAAM,GAAG,CAAC,EAAE;MACzBuH,IAAI,CAAC5H,OAAO,CAAC,UAAUE,GAAG,EAAE;QACxB,IAAID,KAAK,GAAGkN,QAAQ,CAACjN,GAAG,CAAC,CAAC,CAAC;QAC3B,IAAIA,GAAG,IAAID,KAAK,EAAE;UACd,QAAQC,GAAG;YACP,KAAK,GAAG;cACJ8B,UAAU,CAACK,GAAG,CAAC,GAAG,EAAEzB,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;cAC7C;YACJ,KAAK,GAAG;cACJ+B,UAAU,CAACK,GAAG,CAAC,GAAG,EAAEzB,MAAM,CAAC+J,UAAU,CAAC1K,KAAK,CAAC,CAAC;cAC7C;YACJ,KAAK,IAAI;cACL+B,UAAU,CAACK,GAAG,CAAC,IAAI,EAAEpC,KAAK,CAAC;cAC3B;YACJ,KAAK,IAAI;cACL+B,UAAU,CAACK,GAAG,CAAC,IAAI,EAAEpC,KAAK,CAAC;cAC3B;YACJ,KAAK,IAAI;cACL+B,UAAU,CAACK,GAAG,CAAC,IAAI,EAAEpC,KAAK,CAAC;cAC3B;YACJ,KAAK,GAAG;cACJ+B,UAAU,CAACK,GAAG,CAAC,GAAG,EAAEpC,KAAK,CAAC;cAC1B;YACJ,KAAK,GAAG;cACJ+B,UAAU,CAACK,GAAG,CAAC,GAAG,EAAEzE,QAAQ,CAAC+E,GAAG,CAAC1C,KAAK,CAAC,CAAC;cACxC;YACJ,KAAK,IAAI;cACL+B,UAAU,CAACK,GAAG,CAAC,IAAI,EAAEpC,KAAK,CAAC;cAC3B;YACJ,KAAK,MAAM;cACP+B,UAAU,CAACK,GAAG,CAAC,MAAM,EAAEzE,QAAQ,CAAC+E,GAAG,CAAC1C,KAAK,CAAC,CAAC;cAC3C;UACR;QACJ;MACJ,CAAC,CAAC;IACN;IACA,OAAO+B,UAAU;EACrB,CAAC;EACD/D,aAAa,CAACnB,SAAS,CAACuP,cAAc,GAAG,UAAUrK,UAAU,EAAEwB,IAAI,EAAE6G,MAAM,EAAE;IACzE,IAAIjM,KAAK,GAAG,IAAI;IAChB,IAAIgP,OAAO,GAAGpL,UAAU,CAACW,GAAG,CAAC,SAAS,CAAC,CAACI,IAAI;IAC5C,IAAIsK,KAAK,GAAG5P,qBAAqB,CAAC4M,MAAM,EAAE,IAAI,CAAC;IAC/C,IAAI+C,OAAO,KAAK,OAAO,EAAE;MACrB,IAAIE,aAAa,GAAG,IAAIvP,iBAAiB,CAACsP,KAAK,CAAC;MAChDC,aAAa,CAACtL,UAAU,CAACtD,eAAe,GAAG,IAAI,CAACA,eAAe;MAC/D4O,aAAa,CAACtL,UAAU,CAACkF,MAAM,CAAC,MAAM,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,OAAO,CAAC,CAAC;MAC9Da,IAAI,CAACxD,OAAO,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;QAC/B,IAAIA,GAAG,IAAID,KAAK,EAAE;UACd,QAAQC,GAAG;YACP,KAAK,MAAM;YACX,KAAK,MAAM;YACX,KAAK,UAAU;cACXoN,aAAa,CAACtL,UAAU,CAACK,GAAG,CAACnC,GAAG,EAAEU,MAAM,CAACC,QAAQ,CAACZ,KAAK,EAAE,EAAE,CAAC,CAAC;cAC7D;YACJ,KAAK,UAAU;cACXqN,aAAa,CAACtL,UAAU,CAACK,GAAG,CAAC,GAAG,EAAEzE,QAAQ,CAAC+E,GAAG,CAAC1C,KAAK,CAAC,CAAC;cACtD;YACJ,KAAK,QAAQ;cACTqN,aAAa,CAACtL,UAAU,CAACK,GAAG,CAAC,QAAQ,EAAEzE,QAAQ,CAAC+E,GAAG,CAAC,aAAa,CAAC,CAAC;cACnE;UACR;QACJ;MACJ,CAAC,CAAC;MACF2K,aAAa,CAACpE,SAAS,GAAG,IAAI,CAACxK,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MAClEmE,aAAa,CAACtL,UAAU,CAACkK,KAAK,GAAGoB,aAAa,CAACpE,SAAS,CAACiD,YAAY,GAAG,GAAG,GAAGmB,aAAa,CAACpE,SAAS,CAACkD,gBAAgB;MACtH,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAACiL,aAAa,CAACpE,SAAS,EAAEoE,aAAa,CAAC;MAC1EtL,UAAU,CAACkF,MAAM,CAAC,OAAO,EAAEoG,aAAa,CAACpE,SAAS,CAAC;IACvD,CAAC,MACI,IAAIkE,OAAO,KAAK,gBAAgB,EAAE;MACnC,IAAIG,gBAAgB,GAAG,IAAI5P,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;MAC/D6O,gBAAgB,CAACrG,MAAM,CAAC,MAAM,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,UAAU,CAAC,CAAC;MACzD,IAAI6K,YAAY,GAAG,IAAIzP,iBAAiB,CAACsP,KAAK,CAAC;MAC/CG,YAAY,CAACxL,UAAU,CAACtD,eAAe,GAAG,IAAI,CAACA,eAAe;MAC9D,IAAI+O,OAAO,GAAG,IAAI9P,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;MACtD8E,IAAI,CAACxD,OAAO,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;QAC/B,IAAIA,GAAG,IAAID,KAAK,EAAE;UACd,IAAIiB,IAAI,GAAG,KAAK,CAAC;UACjB,QAAQhB,GAAG;YACP,KAAK,MAAM;cACP9B,KAAK,CAACqM,UAAU,CAAC8C,gBAAgB,EAAE,GAAG,EAAEtN,KAAK,CAAC;cAC9C7B,KAAK,CAACqM,UAAU,CAAC8C,gBAAgB,EAAE,IAAI,EAAEtN,KAAK,CAAC;cAC/C;YACJ,KAAK,MAAM;cACPiB,IAAI,GAAGN,MAAM,CAACC,QAAQ,CAACZ,KAAK,EAAE,EAAE,CAAC;cACjC,IAAI,OAAOiB,IAAI,KAAK,WAAW,EAAE;gBAC7BuM,OAAO,CAACvG,MAAM,CAAC,MAAM,EAAEhG,IAAI,CAAC;gBAC5BsM,YAAY,CAACxL,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEhG,IAAI,CAAC;cAC9C;cACA;YACJ,KAAK,UAAU;cACX9C,KAAK,CAACqM,UAAU,CAACgD,OAAO,EAAE,cAAc,EAAExN,KAAK,CAAC;cAChD;YACJ,KAAK,cAAc;cACf7B,KAAK,CAACqM,UAAU,CAACgD,OAAO,EAAE,kBAAkB,EAAExN,KAAK,CAAC;cACpD;UACR;QACJ;MACJ,CAAC,CAAC;MACFuN,YAAY,CAACxL,UAAU,CAACkF,MAAM,CAAC,QAAQ,EAAEuG,OAAO,CAAC;MACjDD,YAAY,CAACxL,UAAU,CAACkF,MAAM,CAAC,QAAQ,EAAEtJ,QAAQ,CAAC+E,GAAG,CAAC,aAAa,CAAC,CAAC;MACrE6K,YAAY,CAACtE,SAAS,GAAG,IAAI,CAACxK,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MACjEqE,YAAY,CAACxL,UAAU,CAACkK,KAAK,GAAGsB,YAAY,CAACtE,SAAS,CAACiD,YAAY,GAAG,GAAG,GAAGqB,YAAY,CAACtE,SAAS,CAACkD,gBAAgB;MACnH,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAACmL,YAAY,CAACtE,SAAS,EAAEsE,YAAY,CAAC;MACxE,IAAIE,YAAY,GAAG,IAAI/P,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;MAC3DgP,YAAY,CAACxG,MAAM,CAAC,GAAG,EAAEsG,YAAY,CAACtE,SAAS,CAAC;MAChDqE,gBAAgB,CAACrG,MAAM,CAAC,IAAI,EAAEwG,YAAY,CAAC;MAC3C,IAAIxE,SAAS,GAAG,IAAI,CAACxK,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MACxDoE,gBAAgB,CAACrB,KAAK,GAAGhD,SAAS,CAACiD,YAAY,GAAG,GAAG,GAAGjD,SAAS,CAACkD,gBAAgB;MAClF,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAAC6G,SAAS,EAAEqE,gBAAgB,CAAC;MAC/DvL,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAEgC,SAAS,CAAC;IACtC;EACJ,CAAC;EACDjL,aAAa,CAACnB,SAAS,CAACiP,kBAAkB,GAAG,UAAU/J,UAAU,EAAEwB,IAAI,EAAE;IACrE,IAAIA,IAAI,EAAE;MACN,IAAImK,OAAO,GAAGjQ,OAAO,CAAC8F,IAAI,EAAE,KAAK,CAAC;MAClC,IAAIoK,OAAO,GAAGpQ,cAAc,CAACmQ,OAAO,CAAC;MACrC,IAAIC,OAAO,CAACvI,UAAU,CAAC,GAAG,CAAC,IAAI,CAACuI,OAAO,CAACpG,QAAQ,CAAC,GAAG,CAAC,EAAE;QACnD,OAAOoG,OAAO,CAACvN,MAAM,GAAG,CAAC,IAAI,CAACuN,OAAO,CAACpG,QAAQ,CAAC,GAAG,CAAC,EAAE;UACjDoG,OAAO,GAAGA,OAAO,CAACtI,SAAS,CAAC,CAAC,EAAEsI,OAAO,CAACvN,MAAM,GAAG,CAAC,CAAC;QACtD;MACJ;MACA,IAAIyF,IAAI,GAAG2B,IAAI,CAACC,KAAK,CAACkG,OAAO,CAAC,CAAC,CAAC;MAChC,IAAI9H,IAAI,EAAE;QACN,IAAI8B,IAAI,GAAGtL,MAAM,CAACsL,IAAI,CAAC9B,IAAI,CAAC;QAC5B,IAAI8B,IAAI,IAAIA,IAAI,CAACvH,MAAM,GAAG,CAAC,IAAIuH,IAAI,CAACrC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;UACtDvD,UAAU,CAACkF,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC2G,gBAAgB,CAAC/H,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D;MACJ;IACJ;EACJ,CAAC;EACD7H,aAAa,CAACnB,SAAS,CAACgR,gBAAgB,GAAG,UAAUC,OAAO,EAAE;IAC1D,IAAI3P,KAAK,GAAG,IAAI;IAChB,IAAI6B,KAAK,CAAC,CAAC;IACX,IAAI2H,IAAI,GAAGtL,MAAM,CAACsL,IAAI,CAACmG,OAAO,CAAC;IAC/B,IAAInG,IAAI,CAACrC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MAC7BtF,KAAK,GAAGrC,QAAQ,CAAC+E,GAAG,CAACoL,OAAO,CAAChL,IAAI,CAAC;IACtC,CAAC,MACI,IAAI6E,IAAI,CAACrC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MACjCtF,KAAK,GAAGW,MAAM,CAACC,QAAQ,CAACkN,OAAO,CAACC,GAAG,EAAE,EAAE,CAAC;IAC5C,CAAC,MACI,IAAIpG,IAAI,CAACrC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MACnCtF,KAAK,GAAGW,MAAM,CAAC+J,UAAU,CAACoD,OAAO,CAACE,KAAK,CAAC;IAC5C,CAAC,MACI,IAAIrG,IAAI,CAACrC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MACpCtF,KAAK,GAAG8N,OAAO,CAACG,MAAM;IAC1B,CAAC,MACI,IAAItG,IAAI,CAACrC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MACrCtF,KAAK,GAAG8N,OAAO,CAACI,OAAO,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;IACrD,CAAC,MACI,IAAIvG,IAAI,CAACrC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MACnC,IAAIQ,KAAK,GAAGgI,OAAO,CAAChI,KAAK,CAAC,CAAC;MAC3B9F,KAAK,GAAG,EAAE;MACV8F,KAAK,CAAC/F,OAAO,CAAC,UAAU+N,OAAO,EAAE;QAC7B9N,KAAK,CAACL,IAAI,CAACxB,KAAK,CAAC0P,gBAAgB,CAACC,OAAO,CAAC,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC,MACI,IAAInG,IAAI,CAACrC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MAClC,IAAIvD,UAAU,GAAG,IAAI,CAAC6L,gBAAgB,CAACE,OAAO,CAACK,IAAI,CAAC;MACpDnO,KAAK,GAAG,IAAI,CAACvB,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MAChDnH,UAAU,CAACkK,KAAK,GAAGjM,KAAK,CAACkM,YAAY,GAAG,GAAG,GAAGlM,KAAK,CAACmM,gBAAgB;MACpE,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAACpC,KAAK,EAAE+B,UAAU,CAAC;IACzD,CAAC,MACI,IAAI4F,IAAI,CAACrC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MACpC,IAAInC,MAAM,GAAG,IAAI,CAACiL,YAAY,CAACN,OAAO,CAAC3K,MAAM,CAAC;MAC9CnD,KAAK,GAAG,IAAI,CAACvB,eAAe,CAACyK,iBAAiB,CAAC,CAAC;MAChD/F,MAAM,CAAC8F,SAAS,GAAGjJ,KAAK;MACxBmD,MAAM,CAACpB,UAAU,CAACkK,KAAK,GAAGjM,KAAK,CAACkM,YAAY,GAAG,GAAG,GAAGlM,KAAK,CAACmM,gBAAgB;MAC3E,IAAI,CAAC1N,eAAe,CAAC0K,SAAS,CAAC/G,GAAG,CAACpC,KAAK,EAAEmD,MAAM,CAAC;IACrD,CAAC,MACI;MACDnD,KAAK,GAAG,IAAI;IAChB;IACA,OAAOA,KAAK;EAChB,CAAC;EACDhC,aAAa,CAACnB,SAAS,CAAC+Q,gBAAgB,GAAG,UAAUE,OAAO,EAAE;IAC1D,IAAI3P,KAAK,GAAG,IAAI;IAChB,IAAIqB,MAAM,GAAG,IAAI9B,cAAc,CAAC,IAAI,CAACe,eAAe,CAAC;IACrD,IAAIqP,OAAO,EAAE;MACT,IAAInG,IAAI,GAAGtL,MAAM,CAACsL,IAAI,CAACmG,OAAO,CAAC;MAC/B,IAAInG,IAAI,IAAIA,IAAI,CAACvH,MAAM,GAAG,CAAC,EAAE;QACzBuH,IAAI,CAAC5H,OAAO,CAAC,UAAUE,GAAG,EAAE;UACxB,IAAID,KAAK,GAAG8N,OAAO,CAAC7N,GAAG,CAAC,CAAC,CAAC;UAC1B,IAAIA,GAAG,KAAK,MAAM,EAAE;YAChB,IAAIgE,SAAS,GAAG9F,KAAK,CAAC0P,gBAAgB,CAAC7N,KAAK,CAAC,CAAC,CAAC;YAC/CR,MAAM,CAACyH,MAAM,CAAChH,GAAG,EAAEgE,SAAS,CAAC;UACjC;QACJ,CAAC,CAAC;MACN;IACJ;IACA,OAAOzE,MAAM;EACjB,CAAC;EACDxB,aAAa,CAACnB,SAAS,CAACuR,YAAY,GAAG,UAAUN,OAAO,EAAE;IACtD,IAAItO,MAAM;IACV,IAAImI,IAAI,GAAGtL,MAAM,CAACsL,IAAI,CAACmG,OAAO,CAAC;IAC/B,IAAIA,OAAO,IAAInG,IAAI,CAACrC,OAAO,CAAC,MAAM,CAAC,EAAE;MACjC,IAAI/B,IAAI,GAAGuK,OAAO,CAACvK,IAAI,CAAC,CAAC;MACzB,IAAI6J,KAAK,GAAG,KAAK,CAAC;MAClB,IAAI7J,IAAI,EAAE;QACN,IAAI8K,QAAQ,GAAGhS,MAAM,CAACsL,IAAI,CAACpE,IAAI,CAAC;QAChC,IAAI8K,QAAQ,IAAIA,QAAQ,CAAC/I,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;UAC9C,IAAIgJ,UAAU,GAAG/K,IAAI,CAAC6J,KAAK;UAC3B,IAAIkB,UAAU,EAAE;YACZlB,KAAK,GAAG5P,qBAAqB,CAAC8Q,UAAU,EAAE,IAAI,CAAC;UACnD;QACJ;MACJ;MACA,IAAI,CAAClB,KAAK,EAAE;QACRA,KAAK,GAAG,EAAE;MACd;MACA,IAAIjK,MAAM,GAAG,IAAIrF,iBAAiB,CAACsP,KAAK,CAAC;MACzC,IAAIrL,UAAU,GAAG,IAAI,CAAC6L,gBAAgB,CAACE,OAAO,CAAC;MAC/C,IAAIS,OAAO,GAAG,KAAK;MACnB,IAAIxM,UAAU,IAAIA,UAAU,CAACS,GAAG,CAAC,SAAS,CAAC,EAAE;QACzC,IAAIP,IAAI,GAAGF,UAAU,CAACW,GAAG,CAAC,SAAS,CAAC;QACpC6L,OAAO,GAAGtM,IAAI,IAAIA,IAAI,CAACa,IAAI,KAAK,OAAO;MAC3C;MACA,IAAIyL,OAAO,EAAE;QACTpL,MAAM,CAACqL,WAAW,GAAG,KAAK;MAC9B,CAAC,MACI;QACD,IAAIzM,UAAU,CAACS,GAAG,CAAC,QAAQ,CAAC,EAAE;UAC1B,OAAOT,UAAU,CAAC8H,IAAI,CAAC4E,MAAM;QACjC;QACA,IAAI1M,UAAU,CAACS,GAAG,CAAC,QAAQ,CAAC,EAAE;UAC1B,OAAOT,UAAU,CAAC8H,IAAI,CAAC6E,MAAM;QACjC;MACJ;MACAvL,MAAM,CAACpB,UAAU,GAAGA,UAAU;MAC9BvC,MAAM,GAAG2D,MAAM;IACnB;IACA,OAAO3D,MAAM;EACjB,CAAC;EACDxB,aAAa,CAACnB,SAAS,CAACqD,eAAe,GAAG,UAAUF,KAAK,EAAE;IACvD,IAAIA,KAAK,CAACsF,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;IACxC;IACA,IAAIvF,KAAK,CAACsF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;IACtC;IACA,IAAIvF,KAAK,CAACsF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACvC;IACA,IAAIvF,KAAK,CAACsF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACvC;IACA,IAAIvF,KAAK,CAACsF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACvC;IACA,IAAIvF,KAAK,CAACsF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACvC;IACA,IAAIvF,KAAK,CAACsF,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACvC;IACA,IAAIvF,KAAK,CAACsF,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5BtF,KAAK,GAAGA,KAAK,CAACuF,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACvC;IACA,OAAOvF,KAAK;EAChB,CAAC;EACD,OAAOhC,aAAa;AACxB,CAAC,CAACjB,aAAa,CAAE;AACjB,SAASiB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}