{"ast":null,"code":"import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */function () {\n  function _PdfCatalog(xref) {\n    this._crossReference = xref;\n    this._catalogDictionary = xref._getCatalogObj();\n    if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n      throw new FormatError('Catalog object is not a dictionary.');\n    } else {\n      this._catalogDictionary.isCatalog = true;\n    }\n    this._topPagesDictionary = this._catalogDictionary.get('Pages');\n    this.pageKidsCountCache = new _PdfReferenceSetCache();\n    this.pageIndexCache = new _PdfReferenceSetCache();\n  }\n  Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n    get: function () {\n      var value;\n      if (this._catalogDictionary.has('Version')) {\n        var version = this._catalogDictionary.get('Version');\n        if (version) {\n          value = version.name;\n        }\n      }\n      return value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n    get: function () {\n      var obj = this._topPagesDictionary.get('Count');\n      if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n        throw new FormatError('Invalid page count');\n      }\n      return obj;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n    get: function () {\n      var form;\n      if (this._catalogDictionary.has('AcroForm')) {\n        form = this._catalogDictionary.get('AcroForm');\n      }\n      if (form === null || typeof form === 'undefined') {\n        form = this._createForm();\n      }\n      return form;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /* eslint-disable */\n  _PdfCatalog.prototype._createForm = function () {\n    var form = new _PdfDictionary(this._crossReference);\n    var ref = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(ref, form);\n    this._catalogDictionary.set('AcroForm', ref);\n    this._catalogDictionary._updated = true;\n    return form;\n  };\n  _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n    var nodesToVisit = [this._topPagesDictionary];\n    var visitedNodes = new _PdfReferenceSet();\n    var pagesRef = this._catalogDictionary.getRaw('Pages');\n    if (pagesRef instanceof _PdfReference) {\n      visitedNodes.put(pagesRef);\n    }\n    var xref = this._crossReference;\n    var pageKidsCountCache = this.pageKidsCountCache;\n    var pageIndexCache = this.pageIndexCache;\n    var currentPageIndex = 0;\n    while (nodesToVisit.length > 0) {\n      var currentNode = nodesToVisit.pop();\n      if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n        var count_1 = pageKidsCountCache.get(currentNode);\n        if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n          currentPageIndex += count_1;\n          continue;\n        }\n        if (visitedNodes.has(currentNode)) {\n          throw new FormatError('Pages tree contains circular reference.');\n        }\n        visitedNodes.put(currentNode);\n        var obj = xref._fetch(currentNode);\n        if (obj instanceof _PdfDictionary) {\n          var type = obj.getRaw('Type');\n          if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n            type = xref._fetch(type);\n          }\n          if (_isName(type, 'Page') || !obj.has('Kids')) {\n            if (!pageKidsCountCache.has(currentNode)) {\n              pageKidsCountCache.put(currentNode, 1);\n            }\n            if (!pageIndexCache.has(currentNode)) {\n              pageIndexCache.put(currentNode, currentPageIndex);\n            }\n            if (currentPageIndex === pageIndex) {\n              return {\n                dictionary: obj,\n                reference: currentNode\n              };\n            }\n            currentPageIndex++;\n            continue;\n          }\n        }\n        nodesToVisit.push(obj);\n        continue;\n      }\n      if (!(currentNode instanceof _PdfDictionary)) {\n        throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n      }\n      var objId = currentNode.objId;\n      var count = currentNode.get('Count');\n      if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n        count = xref._fetch(count);\n      }\n      if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n        if (objId && !pageKidsCountCache.has(objId)) {\n          pageKidsCountCache.set(objId, count);\n        }\n        if (currentPageIndex + count <= pageIndex) {\n          currentPageIndex += count;\n          continue;\n        }\n      }\n      var kids = currentNode.getRaw('Kids');\n      if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n        kids = xref._fetch(kids);\n      }\n      if (!Array.isArray(kids)) {\n        var type = currentNode.getRaw('Type');\n        if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n          type = xref._fetch(type);\n        }\n        if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n          if (currentPageIndex === pageIndex) {\n            return {\n              dictionary: currentNode,\n              reference: null\n            };\n          }\n          currentPageIndex++;\n          continue;\n        }\n        throw new FormatError('Page dictionary kids object is not an array.');\n      }\n      for (var last = kids.length - 1; last >= 0; last--) {\n        nodesToVisit.push(kids[last]);\n      }\n    }\n    throw new Error(\"Page index \" + pageIndex + \" not found.\");\n  };\n  _PdfCatalog.prototype._destroy = function () {\n    if (this._catalogDictionary) {\n      this._catalogDictionary = undefined;\n    }\n    if (this._topPagesDictionary) {\n      this._topPagesDictionary = undefined;\n    }\n    if (this.pageIndexCache) {\n      this.pageIndexCache.clear();\n      this.pageIndexCache = undefined;\n    }\n    if (this.pageKidsCountCache) {\n      this.pageKidsCountCache.clear();\n      this.pageKidsCountCache = undefined;\n    }\n  };\n  return _PdfCatalog;\n}();\nexport { _PdfCatalog };","map":{"version":3,"names":["_PdfDictionary","_PdfReferenceSet","_PdfReferenceSetCache","_PdfReference","_isName","FormatError","_PdfCatalog","xref","_crossReference","_catalogDictionary","_getCatalogObj","isCatalog","_topPagesDictionary","get","pageKidsCountCache","pageIndexCache","Object","defineProperty","prototype","value","has","version","name","enumerable","configurable","obj","Number","isInteger","form","_createForm","ref","_getNextReference","_cacheMap","set","_updated","getPageDictionary","pageIndex","nodesToVisit","visitedNodes","pagesRef","getRaw","put","currentPageIndex","length","currentNode","pop","count_1","_fetch","type","dictionary","reference","push","objId","count","kids","Array","isArray","last","Error","_destroy","undefined","clear"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/pdf-catalog.js"],"sourcesContent":["import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}