{"ast":null,"code":"import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util';\n// import { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */function () {\n  function CanvasRenderer() {}\n  /**   @private  */\n  CanvasRenderer.getContext = function (canvas) {\n    return canvas.getContext('2d');\n  };\n  CanvasRenderer.prototype.setStyle = function (canvas, style) {\n    var ctx = CanvasRenderer.getContext(canvas);\n    if (style.fill === 'none') {\n      style.fill = 'transparent';\n    }\n    if (style.stroke === 'none') {\n      style.stroke = 'transparent';\n    }\n    ctx.strokeStyle = style.stroke;\n    ctx.lineWidth = style.strokeWidth;\n    if (style.strokeWidth === 0) {\n      ctx.strokeStyle = 'transparent';\n    }\n    ctx.globalAlpha = style.opacity;\n    var dashArray = [];\n    if (style.dashArray) {\n      dashArray = this.parseDashArray(style.dashArray);\n    }\n    ctx.setLineDash(dashArray);\n    ctx.fillStyle = style.fill;\n  };\n  CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n    var ctx = CanvasRenderer.getContext(canvas);\n    ctx.translate(x, y);\n    ctx.rotate(angle * Math.PI / 180);\n    ctx.translate(-x, -y);\n  };\n  CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n    var ctx = CanvasRenderer.getContext(canvas);\n    var font = '';\n    if (text.italic) {\n      font += 'italic ';\n    }\n    if (text.bold) {\n      font += 'bold ';\n    }\n    font += text.fontSize + 'px ';\n    font += text.fontFamily;\n    ctx.font = font;\n  };\n  /**   @private  */\n  CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n    var dashes = [];\n    var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n    var splittedDashes = dashArray.split(separator);\n    for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n      var i = splittedDashes_1[_i];\n      dashes.push(Number(i));\n    }\n    return dashes;\n  };\n  //Rendering Part\n  /**   @private  */\n  CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n    if (options.visible === true) {\n      if (options.cornerRadius) {\n        options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n        this.drawPath(canvas, options);\n      } else {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var cornerRadius = options.cornerRadius;\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.rect(options.x, options.y, options.width, options.height);\n        ctx.fillRect(options.x, options.y, options.width, options.height);\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n      }\n    }\n  };\n  /**   @private  */\n  CanvasRenderer.prototype.drawPath = function (canvas, options) {\n    var collection = [];\n    collection = processPathData(options.data);\n    collection = pathSegmentCollection(collection);\n    var ctx = CanvasRenderer.getContext(canvas);\n    ctx.save();\n    ctx.beginPath();\n    var pivotY = options.y + options.height * options.pivotY;\n    var pivotX = options.x + options.width * options.pivotX;\n    this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    this.setStyle(canvas, options);\n    ctx.translate(options.x, options.y);\n    this.renderPath(canvas, options, collection);\n    ctx.fill();\n    ctx.translate(-options.x, -options.y);\n    ctx.stroke();\n    ctx.restore();\n  };\n  /**   @private  */\n  CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n    if (options.visible === true) {\n      var ctx = CanvasRenderer.getContext(canvas);\n      var x0 = void 0;\n      var y0 = void 0;\n      var x1 = void 0;\n      var y1 = void 0;\n      var x2 = void 0;\n      var y2 = void 0;\n      var x = void 0;\n      var y = void 0;\n      var length_1;\n      var i = void 0;\n      var newSeg = void 0;\n      var segs = collection;\n      for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n        var obj = segs[parseInt(i.toString(), 10)];\n        var seg = obj;\n        var char = seg.command;\n        if ('x1' in seg) {\n          x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n          x2 = seg.x2;\n        }\n        if ('y1' in seg) {\n          y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n          y2 = seg.y2;\n        }\n        if ('x' in seg) {\n          x = seg.x;\n        }\n        if ('y' in seg) {\n          y = seg.y;\n        }\n        switch (char) {\n          case 'M':\n            ctx.moveTo(x, y);\n            seg.x = x;\n            seg.y = y;\n            break;\n          case 'L':\n            ctx.lineTo(x, y);\n            seg.x = x;\n            seg.y = y;\n            break;\n          case 'C':\n            ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n            seg.x = x;\n            seg.y = y;\n            seg.x1 = x1;\n            seg.y1 = y1;\n            seg.x2 = x2;\n            seg.y2 = y2;\n            break;\n          case 'Q':\n            ctx.quadraticCurveTo(x1, y1, x, y);\n            seg.x = x;\n            seg.y = y;\n            seg.x1 = x1;\n            seg.y1 = y1;\n            break;\n          case 'A':\n            var curr = {\n              x: x0,\n              y: y0\n            };\n            var rx = seg.r1;\n            var ry = seg.r2;\n            var xAxisRotation = seg.angle * (Math.PI / 180.0);\n            var largeArc = seg.largeArc;\n            var sweep = seg.sweep;\n            var cp = {\n              x: x,\n              y: y\n            };\n            var currp = {\n              x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n              y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n            };\n            var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n            if (l > 1) {\n              rx *= Math.sqrt(l);\n              ry *= Math.sqrt(l);\n            }\n            var k = Math.pow(ry, 2) * Math.pow(currp.x, 2);\n            var s = (largeArc === sweep ? -1 : 1) * Math.sqrt((Math.pow(rx, 2) * Math.pow(ry, 2) - Math.pow(rx, 2) * Math.pow(currp.y, 2) - k) / (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n            if (isNaN(s)) {\n              s = 0;\n            }\n            var cpp = {\n              x: s * rx * currp.y / ry,\n              y: s * -ry * currp.x / rx\n            };\n            var centp = {\n              x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n              y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n            };\n            var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n            var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n            var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n            var ad = this.a(u, v);\n            if (this.r(u, v) <= -1) {\n              ad = Math.PI;\n            }\n            if (this.r(u, v) >= 1) {\n              ad = 0;\n            }\n            var dir = !sweep ? -1.0 : 1.0;\n            var ah = a1 + dir * (ad / 2.0);\n            var halfWay = {\n              x: centp.x + rx * Math.cos(ah),\n              y: centp.y + ry * Math.sin(ah)\n            };\n            seg.centp = centp;\n            seg.xAxisRotation = xAxisRotation;\n            seg.rx = rx;\n            seg.ry = ry;\n            seg.a1 = a1;\n            seg.ad = ad;\n            seg.sweep = sweep;\n            if (ctx != null) {\n              var ra = rx > ry ? rx : ry;\n              var sx = rx > ry ? 1 : rx / ry;\n              var sy = rx > ry ? ry / rx : 1;\n              ctx.save();\n              ctx.translate(centp.x, centp.y);\n              ctx.rotate(xAxisRotation);\n              ctx.scale(sx, sy);\n              ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n              ctx.scale(1 / sx, 1 / sy);\n              ctx.rotate(-xAxisRotation);\n              ctx.translate(-centp.x, -centp.y);\n              ctx.restore();\n            }\n            break;\n          case 'Z':\n          case 'z':\n            ctx.closePath();\n            x = x0;\n            y = y0;\n            break;\n        }\n        x0 = x;\n        y0 = y;\n      }\n    }\n  };\n  /**   @private  */\n  CanvasRenderer.prototype.drawText = function (canvas, options) {\n    if (options.content && options.visible === true) {\n      var ctx = CanvasRenderer.getContext(canvas);\n      ctx.save();\n      this.setStyle(canvas, options);\n      var pivotX = options.x + options.width * options.pivotX;\n      var pivotY = options.y + options.height * options.pivotY;\n      this.rotateContext(canvas, options.angle, pivotX, pivotY);\n      this.setFontStyle(canvas, options);\n      var i = 0;\n      var childNodes = [];\n      childNodes = options.childNodes;\n      var wrapBounds = options.wrapBounds;\n      ctx.fillStyle = options.color;\n      if (wrapBounds) {\n        var position = this.labelAlign(options, wrapBounds, childNodes);\n        for (i = 0; i < childNodes.length; i++) {\n          var child = childNodes[parseInt(i.toString(), 10)];\n          if (child.text !== '\\n') {\n            var offsetX = position.x + child.x - wrapBounds.x;\n            var offsetY = position.y + child.dy * i + options.fontSize * 0.8;\n            // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n            //     child.text = overFlow(child.text, options);\n            // }\n            ctx.fillText(child.text, offsetX, offsetY);\n            if (options.textDecoration === 'Underline' || options.textDecoration === 'Overline' || options.textDecoration === 'LineThrough') {\n              var startPointX = offsetX;\n              var startPointY = void 0;\n              var textlength = ctx.measureText(child.text).width;\n              var endPointX = offsetX + textlength;\n              var endPointY = void 0;\n              switch (options.textDecoration) {\n                case 'Underline':\n                  startPointY = offsetY + 2;\n                  endPointY = offsetY + 2;\n                  break;\n                case 'Overline':\n                  startPointY = position.y + child.dy * i;\n                  endPointY = position.y + child.dy * i;\n                  break;\n                case 'LineThrough':\n                  startPointY = (offsetY + position.y + child.dy * i) / 2 + 2;\n                  endPointY = (offsetY + position.y + child.dy * i) / 2 + 2;\n              }\n              ctx.beginPath();\n              ctx.moveTo(startPointX, startPointY);\n              ctx.lineTo(endPointX, endPointY);\n              ctx.strokeStyle = options.color;\n              ctx.lineWidth = options.fontSize * .08;\n              ctx.globalAlpha = options.opacity;\n              ctx.stroke();\n            }\n          }\n        }\n      }\n      ctx.restore();\n    }\n  };\n  //end region\n  // vector magnitude\n  CanvasRenderer.prototype.m = function (v) {\n    return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2));\n  };\n  // ratio between two vectors\n  CanvasRenderer.prototype.r = function (u, v) {\n    return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v));\n  };\n  // angle between two vectors\n  CanvasRenderer.prototype.a = function (u, v) {\n    return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v));\n  };\n  CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n    var max = Math.max(res, dest);\n    var min = Math.min(res, dest);\n    switch (arg) {\n      case 'min':\n        return 0;\n      case 'mid':\n        return (max - min) / 2;\n      case 'max':\n        return max - min;\n      default:\n        return 0;\n    }\n  };\n  CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n    switch (arg) {\n      case 'min':\n        return 0;\n      case 'mid':\n        return (res - dest) / 2 * src / res;\n      case 'max':\n        return (res - dest) * src / res;\n      default:\n        return 0;\n    }\n  };\n  CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n    ctx.beginPath();\n    var srcWidth = image.width;\n    var srcHeight = image.height;\n    var destinationW = width;\n    var destinationH = height;\n    var resultWidth = 0;\n    var resultHeight = 0;\n    ctx.globalAlpha = alignOptions.opacity;\n    if (alignOptions && alignOptions.alignment !== 'None') {\n      var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n      var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n      if (alignOptions.scale === 'Slice') {\n        var a = function () {\n          resultWidth = destinationW;\n          resultHeight = srcHeight * destinationW / srcWidth;\n        };\n        var b = function () {\n          resultWidth = srcWidth * destinationH / srcHeight;\n          resultHeight = destinationH;\n        };\n        if (destinationW > destinationH) {\n          a();\n          if (destinationH > resultHeight) {\n            b();\n          }\n        } else if (destinationW === destinationH) {\n          if (srcWidth > srcHeight) {\n            b();\n          } else {\n            a();\n          }\n        } else {\n          b();\n          if (destinationW > resultWidth) {\n            a();\n          }\n        }\n        var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n        var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n        var sWidth = srcWidth - x1;\n        var sHeight = srcHeight - y1;\n        var dWidth = resultWidth - x1 * (resultWidth / srcWidth);\n        var dHeight = resultHeight - y1 * (resultHeight / srcHeight);\n        var canvas1 = createHtmlElement('canvas', {\n          'width': width.toString(),\n          'height': height.toString()\n        });\n        var ctx1 = canvas1.getContext('2d');\n        ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n        ctx.drawImage(canvas1, x, y, width, height);\n      } else if (alignOptions.scale === 'Meet') {\n        var srcRatio = srcHeight / srcWidth;\n        var destRatio = destinationH / destinationW;\n        resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n        resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n        x += this.getMeetOffset(xalign, resultWidth, destinationW);\n        y += this.getMeetOffset(yalign, resultHeight, destinationH);\n        ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n      } else {\n        ctx.drawImage(image, x, y, width, height);\n      }\n    } else {\n      if (image.complete) {\n        ctx.drawImage(image, x, y, width, height);\n      } else {\n        var transform_1 = ctx.getTransform();\n        image.onload = function () {\n          ctx.setTransform(transform_1.a, transform_1.b, transform_1.c, transform_1.d, transform_1.e, transform_1.f);\n          ctx.drawImage(image, x, y, width, height);\n        };\n      }\n    }\n    ctx.closePath();\n  };\n  // text utility\n  CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n    this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n    var image;\n    if (window.customStampCollection && window.customStampCollection.get(obj.printID)) {\n      image = window.customStampCollection.get(obj.printID);\n    } else {\n      image = new Image();\n      image.src = obj.source;\n    }\n    this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n  };\n  /**   @private  */\n  CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n    var _this = this;\n    if (obj.visible) {\n      var ctx_1 = CanvasRenderer.getContext(canvas);\n      ctx_1.save();\n      var pivotX_1 = obj.x + obj.width * obj.pivotX;\n      var pivotY_1 = obj.y + obj.height * obj.pivotY;\n      var imageObj = new Image();\n      imageObj.src = obj.source;\n      var id = ctx_1.canvas.id.split('_');\n      var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n      /**\n       *  Since Clipping portion for node with slice option is not calculated properly\n       * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n       *  && obj.sourceHeight !== undefined) {\n       *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n       *  } else {\n       *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n       * }\n       */\n      if (!fromPalette) {\n        this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n      } else {\n        imageObj.onload = function () {\n          _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n        };\n      }\n      ctx_1.restore();\n    }\n  };\n  /**   @private  */\n  CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n    var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n    var position = {\n      x: 0,\n      y: 0\n    };\n    var labelX = text.x;\n    var labelY = text.y;\n    var offsetx = text.width * 0.5;\n    var offsety = text.height * 0.5;\n    var pointx = offsetx;\n    var pointy = offsety;\n    if (text.textAlign === 'left') {\n      pointx = 0;\n    } else if (text.textAlign === 'center') {\n      if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n        pointx = 0;\n      } else {\n        pointx = text.width * 0.5;\n      }\n    } else if (text.textAlign === 'right') {\n      pointx = text.width * 1;\n    }\n    position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n    position.y = labelY + pointy - bounds.height / 2;\n    return position;\n  };\n  return CanvasRenderer;\n}();\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer) {\n  for (var i = 0; i < drawingObjects.length; i++) {\n    renderer.renderElement(drawingObjects[parseInt(i.toString(), 10)], canvas, undefined);\n  }\n}","map":{"version":3,"names":["Size","pathSegmentCollection","getRectanglePath","processPathData","createHtmlElement","CanvasRenderer","getContext","canvas","prototype","setStyle","style","ctx","fill","stroke","strokeStyle","lineWidth","strokeWidth","globalAlpha","opacity","dashArray","parseDashArray","setLineDash","fillStyle","rotateContext","angle","x","y","translate","rotate","Math","PI","setFontStyle","text","font","italic","bold","fontSize","fontFamily","dashes","separator","indexOf","splittedDashes","split","_i","splittedDashes_1","length","i","push","Number","drawRectangle","options","visible","cornerRadius","data","height","width","drawPath","save","beginPath","pivotX","pivotY","rect","fillRect","closePath","restore","collection","renderPath","x0","y0","x1","y1","x2","y2","length_1","newSeg","segs","obj","parseInt","toString","seg","char","command","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","r1","ry","r2","xAxisRotation","largeArc","sweep","cp","currp","cos","sin","l","pow","sqrt","k","s","isNaN","cpp","centp","a1","a","u","v","ad","r","dir","ah","halfWay","ra","sx","sy","scale","arc","drawText","content","childNodes","wrapBounds","color","position","labelAlign","child","offsetX","offsetY","dy","fillText","textDecoration","startPointX","startPointY","textlength","measureText","endPointX","endPointY","m","acos","getMeetOffset","arg","res","dest","max","min","getSliceOffset","src","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","alignment","xalign","toLowerCase","substr","yalign","b","sWidth","sHeight","dWidth","dHeight","canvas1","ctx1","drawImage","srcRatio","destRatio","complete","transform_1","getTransform","onload","setTransform","c","d","e","f","loadImage","window","customStampCollection","get","printID","Image","source","parentSvg","fromPalette","_this","ctx_1","pivotX_1","pivotY_1","imageObj","id","value","bounds","labelX","labelY","offsetx","offsety","pointx","pointy","textAlign","textOverflow","refreshDiagramElements","drawingObjects","renderer","renderElement","undefined"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-drawings/src/drawing/rendering/canvas-renderer.js"],"sourcesContent":["import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util';\n// import { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        ctx.fillStyle = style.fill;\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[parseInt(i.toString(), 10)];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[parseInt(i.toString(), 10)];\n                    if (child.text !== '\\n') {\n                        var offsetX = position.x + child.x - wrapBounds.x;\n                        var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                        // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        //     child.text = overFlow(child.text, options);\n                        // }\n                        ctx.fillText(child.text, offsetX, offsetY);\n                        if (options.textDecoration === 'Underline'\n                            || options.textDecoration === 'Overline'\n                            || options.textDecoration === 'LineThrough') {\n                            var startPointX = offsetX;\n                            var startPointY = void 0;\n                            var textlength = ctx.measureText(child.text).width;\n                            var endPointX = offsetX + textlength;\n                            var endPointY = void 0;\n                            switch (options.textDecoration) {\n                                case 'Underline':\n                                    startPointY = offsetY + 2;\n                                    endPointY = offsetY + 2;\n                                    break;\n                                case 'Overline':\n                                    startPointY = (position.y + child.dy * i);\n                                    endPointY = (position.y + child.dy * i);\n                                    break;\n                                case 'LineThrough':\n                                    startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                    endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                            }\n                            ctx.beginPath();\n                            ctx.moveTo(startPointX, startPointY);\n                            ctx.lineTo(endPointX, endPointY);\n                            ctx.strokeStyle = options.color;\n                            ctx.lineWidth = options.fontSize * .08;\n                            ctx.globalAlpha = options.opacity;\n                            ctx.stroke();\n                        }\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        ctx.globalAlpha = alignOptions.opacity;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            if (image.complete) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n            else {\n                var transform_1 = ctx.getTransform();\n                image.onload = function () {\n                    ctx.setTransform(transform_1.a, transform_1.b, transform_1.c, transform_1.d, transform_1.e, transform_1.f);\n                    ctx.drawImage(image, x, y, width, height);\n                };\n            }\n        }\n        ctx.closePath();\n    };\n    // text utility\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image;\n        if (window.customStampCollection && window.customStampCollection.get(obj.printID)) {\n            image = window.customStampCollection.get(obj.printID);\n        }\n        else {\n            image = new Image();\n            image.src = obj.source;\n        }\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer) {\n    for (var i = 0; i < drawingObjects.length; i++) {\n        renderer.renderElement(drawingObjects[parseInt(i.toString(), 10)], canvas, undefined);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}