{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */function (_super) {\n  __extends(Canvas, _super);\n  function Canvas() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Not applicable for canvas\n     *  @private\n     */\n    _this.measureChildren = undefined;\n    return _this;\n  }\n  /**\n   * Measures the minimum space that the canvas requires\n   * @param availableSize\n   */\n  Canvas.prototype.measure = function (availableSize) {\n    var desired = undefined;\n    var desiredBounds = undefined;\n    if (this.hasChildren()) {\n      //Measuring the children\n      for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        if (child instanceof TextElement) {\n          if (child.canMeasure) {\n            availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n            child.measure(availableSize);\n          } else {\n            break;\n          }\n        } else if (!(child instanceof TextElement)) {\n          child.measure(availableSize);\n        }\n        var childSize = child.desiredSize.clone();\n        if (child.rotateAngle !== 0) {\n          childSize = rotateSize(childSize, child.rotateAngle);\n        }\n        var right = childSize.width + child.margin.right;\n        var bottom = childSize.height + child.margin.bottom;\n        var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n        if (child.float) {\n          var position = child.getAbsolutePosition(childSize);\n          if (position !== undefined) {\n            continue;\n          }\n        }\n        if (!(child instanceof TextElement) || child instanceof TextElement && child.canConsiderBounds) {\n          if (desiredBounds === undefined) {\n            desiredBounds = childBounds;\n          } else {\n            desiredBounds.uniteRect(childBounds);\n          }\n        }\n      }\n      if (desiredBounds) {\n        var leftMargin = 0;\n        var topMargin = 0;\n        leftMargin = Math.max(desiredBounds.left, 0);\n        topMargin = Math.max(desiredBounds.top, 0);\n        desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n      }\n    }\n    desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n    _super.prototype.stretchChildren.call(this, desired);\n    this.desiredSize = desired;\n    return desired;\n  };\n  /**\n   * Arranges the child elements of the canvas\n   */\n  Canvas.prototype.arrange = function (desiredSize) {\n    this.outerBounds = new Rect();\n    if (this.hasChildren()) {\n      var y = void 0;\n      var x = void 0;\n      y = this.offsetY - desiredSize.height * this.pivot.y;\n      x = this.offsetX - desiredSize.width * this.pivot.x;\n      for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        if ((child.transform & RotateTransform.Parent) !== 0) {\n          child.parentTransform = this.parentTransform + this.rotateAngle;\n          var childSize = child.desiredSize.clone();\n          var topLeft = void 0;\n          var center = {\n            x: 0,\n            y: 0\n          };\n          var childX = x;\n          var childY = y;\n          if (child.relativeMode === 'Point') {\n            var position = child.getAbsolutePosition(desiredSize);\n            if (position !== undefined) {\n              childX += position.x;\n              childY += position.y;\n            }\n          }\n          if (child.relativeMode === 'Object') {\n            topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n          } else {\n            topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n          }\n          center = {\n            x: topLeft.x + childSize.width / 2,\n            y: topLeft.y + childSize.height / 2\n          };\n          if (child.rotateValue) {\n            var rotateValue = {\n              x: this.offsetX + (child.rotateValue.x || 0),\n              y: this.offsetY + (child.rotateValue.y || 0)\n            };\n            var centerPoint = {\n              x: this.offsetX,\n              y: this.offsetY\n            };\n            var angle = child.rotateValue.angle | 0;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n            center = transformPointByMatrix(matrix, rotateValue);\n          }\n          _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n        }\n        if (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch') {\n          child.arrange(desiredSize);\n        } else {\n          if (child instanceof TextElement && child.canMeasure) {\n            child.arrange(child.desiredSize);\n            this.outerBounds.uniteRect(child.outerBounds);\n          } else if (!(child instanceof TextElement)) {\n            child.arrange(child.desiredSize);\n            this.outerBounds.uniteRect(child.outerBounds);\n          }\n        }\n      }\n    }\n    this.actualSize = desiredSize;\n    this.updateBounds();\n    this.outerBounds.uniteRect(this.bounds);\n    return desiredSize;\n  };\n  /**\n   * Aligns the child element based on its parent\n   * @param child\n   * @param childSize\n   * @param parentSize\n   * @param x\n   * @param y\n   */\n  Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n    switch (child.horizontalAlignment) {\n      case 'Auto':\n      case 'Left':\n        x += child.margin.left;\n        break;\n      case 'Right':\n        x += parentSize.width - childSize.width - child.margin.right;\n        break;\n      case 'Stretch':\n      case 'Center':\n        x += parentSize.width / 2 - childSize.width / 2;\n        break;\n    }\n    switch (child.verticalAlignment) {\n      case 'Auto':\n      case 'Top':\n        y += child.margin.top;\n        break;\n      case 'Bottom':\n        y += parentSize.height - childSize.height - child.margin.bottom;\n        break;\n      case 'Stretch':\n      case 'Center':\n        y += parentSize.height / 2 - childSize.height / 2;\n        break;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  };\n  /**\n   * Aligns the child elements based on a point\n   * @param child\n   * @param x\n   * @param y\n   */\n  Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n    x += child.margin.left - child.margin.right;\n    y += child.margin.top - child.margin.bottom;\n    switch (child.horizontalAlignment) {\n      case 'Auto':\n      case 'Left':\n        x = x;\n        break;\n      case 'Stretch':\n      case 'Center':\n        x -= child.desiredSize.width * child.pivot.x;\n        break;\n      case 'Right':\n        x -= child.desiredSize.width;\n        break;\n    }\n    switch (child.verticalAlignment) {\n      case 'Auto':\n      case 'Top':\n        y = y;\n        break;\n      case 'Stretch':\n      case 'Center':\n        y -= child.desiredSize.height * child.pivot.y;\n        break;\n      case 'Bottom':\n        y -= child.desiredSize.height;\n        break;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  };\n  return Canvas;\n}(Container);\nexport { Canvas };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Container","RotateTransform","Size","Rect","TextElement","identityMatrix","rotateMatrix","transformPointByMatrix","rotateSize","Canvas","_super","_this","apply","arguments","measureChildren","undefined","measure","availableSize","desired","desiredBounds","hasChildren","_i","_a","children","length","child","canMeasure","width","maxWidth","minWidth","childSize","desiredSize","clone","rotateAngle","right","margin","bottom","height","childBounds","left","top","float","position","getAbsolutePosition","canConsiderBounds","uniteRect","leftMargin","topMargin","Math","max","validateDesiredSize","call","stretchChildren","arrange","outerBounds","y","x","offsetY","pivot","offsetX","transform","Parent","parentTransform","topLeft","center","childX","childY","relativeMode","alignChildBasedOnParent","alignChildBasedOnaPoint","rotateValue","centerPoint","angle","matrix","findChildOffsetFromCenter","horizontalAlignment","verticalAlignment","actualSize","updateBounds","bounds","parentSize"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-drawings/src/drawing/core/containers/canvas.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y;\n            x = this.offsetX - desiredSize.width * this.pivot.x;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & RotateTransform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    if (child.rotateValue) {\n                        var rotateValue = {\n                            x: this.offsetX + (child.rotateValue.x || 0),\n                            y: this.offsetY + (child.rotateValue.y || 0)\n                        };\n                        var centerPoint = { x: this.offsetX, y: this.offsetY };\n                        var angle = child.rotateValue.angle | 0;\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n                        center = transformPointByMatrix(matrix, rotateValue);\n                    }\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if ((child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACJ,SAASI,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,cAAc,EAAEC,YAAY,EAAEC,sBAAsB,QAAQ,yBAAyB;AAC9F,SAASC,UAAU,QAAQ,yBAAyB;AACpD;AACA;AACA;AACA,IAAIC,MAAM,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC1CxB,SAAS,CAACuB,MAAM,EAAEC,MAAM,CAAC;EACzB,SAASD,MAAMA,CAAA,EAAG;IACd,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpE;AACR;AACA;AACA;IACQF,KAAK,CAACG,eAAe,GAAGC,SAAS;IACjC,OAAOJ,KAAK;EAChB;EACA;AACJ;AACA;AACA;EACIF,MAAM,CAACX,SAAS,CAACkB,OAAO,GAAG,UAAUC,aAAa,EAAE;IAChD,IAAIC,OAAO,GAAGH,SAAS;IACvB,IAAII,aAAa,GAAGJ,SAAS;IAC7B,IAAI,IAAI,CAACK,WAAW,CAAC,CAAC,EAAE;MACpB;MACA,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,IAAI,CAACC,QAAQ,EAAEF,EAAE,GAAGC,EAAE,CAACE,MAAM,EAAEH,EAAE,EAAE,EAAE;QACvD,IAAII,KAAK,GAAGH,EAAE,CAACD,EAAE,CAAC;QAClB,IAAII,KAAK,YAAYrB,WAAW,EAAE;UAC9B,IAAIqB,KAAK,CAACC,UAAU,EAAE;YAClBT,aAAa,CAACU,KAAK,GAAGV,aAAa,CAACU,KAAK,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,QAAQ;YAC3EJ,KAAK,CAACT,OAAO,CAACC,aAAa,CAAC;UAChC,CAAC,MACI;YACD;UACJ;QACJ,CAAC,MACI,IAAI,EAAEQ,KAAK,YAAYrB,WAAW,CAAC,EAAE;UACtCqB,KAAK,CAACT,OAAO,CAACC,aAAa,CAAC;QAChC;QACA,IAAIa,SAAS,GAAGL,KAAK,CAACM,WAAW,CAACC,KAAK,CAAC,CAAC;QACzC,IAAIP,KAAK,CAACQ,WAAW,KAAK,CAAC,EAAE;UACzBH,SAAS,GAAGtB,UAAU,CAACsB,SAAS,EAAEL,KAAK,CAACQ,WAAW,CAAC;QACxD;QACA,IAAIC,KAAK,GAAGJ,SAAS,CAACH,KAAK,GAAGF,KAAK,CAACU,MAAM,CAACD,KAAK;QAChD,IAAIE,MAAM,GAAGN,SAAS,CAACO,MAAM,GAAGZ,KAAK,CAACU,MAAM,CAACC,MAAM;QACnD,IAAIE,WAAW,GAAG,IAAInC,IAAI,CAACsB,KAAK,CAACU,MAAM,CAACI,IAAI,EAAEd,KAAK,CAACU,MAAM,CAACK,GAAG,EAAEN,KAAK,EAAEE,MAAM,CAAC;QAC9E,IAAIX,KAAK,CAACgB,KAAK,EAAE;UACb,IAAIC,QAAQ,GAAGjB,KAAK,CAACkB,mBAAmB,CAACb,SAAS,CAAC;UACnD,IAAIY,QAAQ,KAAK3B,SAAS,EAAE;YACxB;UACJ;QACJ;QACA,IAAK,EAAEU,KAAK,YAAYrB,WAAW,CAAC,IAAMqB,KAAK,YAAYrB,WAAW,IAAIqB,KAAK,CAACmB,iBAAkB,EAAE;UAChG,IAAIzB,aAAa,KAAKJ,SAAS,EAAE;YAC7BI,aAAa,GAAGmB,WAAW;UAC/B,CAAC,MACI;YACDnB,aAAa,CAAC0B,SAAS,CAACP,WAAW,CAAC;UACxC;QACJ;MACJ;MACA,IAAInB,aAAa,EAAE;QACf,IAAI2B,UAAU,GAAG,CAAC;QAClB,IAAIC,SAAS,GAAG,CAAC;QACjBD,UAAU,GAAGE,IAAI,CAACC,GAAG,CAAC9B,aAAa,CAACoB,IAAI,EAAE,CAAC,CAAC;QAC5CQ,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC9B,aAAa,CAACqB,GAAG,EAAE,CAAC,CAAC;QAC1CtB,OAAO,GAAG,IAAIhB,IAAI,CAACiB,aAAa,CAACQ,KAAK,GAAGmB,UAAU,EAAE3B,aAAa,CAACkB,MAAM,GAAGU,SAAS,CAAC;MAC1F;IACJ;IACA7B,OAAO,GAAGR,MAAM,CAACZ,SAAS,CAACoD,mBAAmB,CAACC,IAAI,CAAC,IAAI,EAAEjC,OAAO,EAAED,aAAa,CAAC;IACjFP,MAAM,CAACZ,SAAS,CAACsD,eAAe,CAACD,IAAI,CAAC,IAAI,EAAEjC,OAAO,CAAC;IACpD,IAAI,CAACa,WAAW,GAAGb,OAAO;IAC1B,OAAOA,OAAO;EAClB,CAAC;EACD;AACJ;AACA;EACIT,MAAM,CAACX,SAAS,CAACuD,OAAO,GAAG,UAAUtB,WAAW,EAAE;IAC9C,IAAI,CAACuB,WAAW,GAAG,IAAInD,IAAI,CAAC,CAAC;IAC7B,IAAI,IAAI,CAACiB,WAAW,CAAC,CAAC,EAAE;MACpB,IAAImC,CAAC,GAAG,KAAK,CAAC;MACd,IAAIC,CAAC,GAAG,KAAK,CAAC;MACdD,CAAC,GAAG,IAAI,CAACE,OAAO,GAAG1B,WAAW,CAACM,MAAM,GAAG,IAAI,CAACqB,KAAK,CAACH,CAAC;MACpDC,CAAC,GAAG,IAAI,CAACG,OAAO,GAAG5B,WAAW,CAACJ,KAAK,GAAG,IAAI,CAAC+B,KAAK,CAACF,CAAC;MACnD,KAAK,IAAInC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,IAAI,CAACC,QAAQ,EAAEF,EAAE,GAAGC,EAAE,CAACE,MAAM,EAAEH,EAAE,EAAE,EAAE;QACvD,IAAII,KAAK,GAAGH,EAAE,CAACD,EAAE,CAAC;QAClB,IAAI,CAACI,KAAK,CAACmC,SAAS,GAAG3D,eAAe,CAAC4D,MAAM,MAAM,CAAC,EAAE;UAClDpC,KAAK,CAACqC,eAAe,GAAG,IAAI,CAACA,eAAe,GAAG,IAAI,CAAC7B,WAAW;UAC/D,IAAIH,SAAS,GAAGL,KAAK,CAACM,WAAW,CAACC,KAAK,CAAC,CAAC;UACzC,IAAI+B,OAAO,GAAG,KAAK,CAAC;UACpB,IAAIC,MAAM,GAAG;YAAER,CAAC,EAAE,CAAC;YAAED,CAAC,EAAE;UAAE,CAAC;UAC3B,IAAIU,MAAM,GAAGT,CAAC;UACd,IAAIU,MAAM,GAAGX,CAAC;UACd,IAAI9B,KAAK,CAAC0C,YAAY,KAAK,OAAO,EAAE;YAChC,IAAIzB,QAAQ,GAAGjB,KAAK,CAACkB,mBAAmB,CAACZ,WAAW,CAAC;YACrD,IAAIW,QAAQ,KAAK3B,SAAS,EAAE;cACxBkD,MAAM,IAAIvB,QAAQ,CAACc,CAAC;cACpBU,MAAM,IAAIxB,QAAQ,CAACa,CAAC;YACxB;UACJ;UACA,IAAI9B,KAAK,CAAC0C,YAAY,KAAK,QAAQ,EAAE;YACjCJ,OAAO,GAAG,IAAI,CAACK,uBAAuB,CAAC3C,KAAK,EAAEK,SAAS,EAAEC,WAAW,EAAEkC,MAAM,EAAEC,MAAM,CAAC;UACzF,CAAC,MACI;YACDH,OAAO,GAAG,IAAI,CAACM,uBAAuB,CAAC5C,KAAK,EAAEwC,MAAM,EAAEC,MAAM,CAAC;UACjE;UACAF,MAAM,GAAG;YAAER,CAAC,EAAEO,OAAO,CAACP,CAAC,GAAG1B,SAAS,CAACH,KAAK,GAAG,CAAC;YAAE4B,CAAC,EAAEQ,OAAO,CAACR,CAAC,GAAGzB,SAAS,CAACO,MAAM,GAAG;UAAE,CAAC;UACpF,IAAIZ,KAAK,CAAC6C,WAAW,EAAE;YACnB,IAAIA,WAAW,GAAG;cACdd,CAAC,EAAE,IAAI,CAACG,OAAO,IAAIlC,KAAK,CAAC6C,WAAW,CAACd,CAAC,IAAI,CAAC,CAAC;cAC5CD,CAAC,EAAE,IAAI,CAACE,OAAO,IAAIhC,KAAK,CAAC6C,WAAW,CAACf,CAAC,IAAI,CAAC;YAC/C,CAAC;YACD,IAAIgB,WAAW,GAAG;cAAEf,CAAC,EAAE,IAAI,CAACG,OAAO;cAAEJ,CAAC,EAAE,IAAI,CAACE;YAAQ,CAAC;YACtD,IAAIe,KAAK,GAAG/C,KAAK,CAAC6C,WAAW,CAACE,KAAK,GAAG,CAAC;YACvC,IAAIC,MAAM,GAAGpE,cAAc,CAAC,CAAC;YAC7BC,YAAY,CAACmE,MAAM,EAAED,KAAK,EAAED,WAAW,CAACf,CAAC,EAAEe,WAAW,CAAChB,CAAC,CAAC;YACzDS,MAAM,GAAGzD,sBAAsB,CAACkE,MAAM,EAAEH,WAAW,CAAC;UACxD;UACA5D,MAAM,CAACZ,SAAS,CAAC4E,yBAAyB,CAACvB,IAAI,CAAC,IAAI,EAAE1B,KAAK,EAAEuC,MAAM,CAAC;QACxE;QACA,IAAKvC,KAAK,CAACkD,mBAAmB,KAAK,SAAS,IAAIlD,KAAK,CAACmD,iBAAiB,KAAK,SAAS,EAAG;UACpFnD,KAAK,CAAC4B,OAAO,CAACtB,WAAW,CAAC;QAC9B,CAAC,MACI;UACD,IAAIN,KAAK,YAAYrB,WAAW,IAAIqB,KAAK,CAACC,UAAU,EAAE;YAClDD,KAAK,CAAC4B,OAAO,CAAC5B,KAAK,CAACM,WAAW,CAAC;YAChC,IAAI,CAACuB,WAAW,CAACT,SAAS,CAACpB,KAAK,CAAC6B,WAAW,CAAC;UACjD,CAAC,MACI,IAAI,EAAE7B,KAAK,YAAYrB,WAAW,CAAC,EAAE;YACtCqB,KAAK,CAAC4B,OAAO,CAAC5B,KAAK,CAACM,WAAW,CAAC;YAChC,IAAI,CAACuB,WAAW,CAACT,SAAS,CAACpB,KAAK,CAAC6B,WAAW,CAAC;UACjD;QACJ;MACJ;IACJ;IACA,IAAI,CAACuB,UAAU,GAAG9C,WAAW;IAC7B,IAAI,CAAC+C,YAAY,CAAC,CAAC;IACnB,IAAI,CAACxB,WAAW,CAACT,SAAS,CAAC,IAAI,CAACkC,MAAM,CAAC;IACvC,OAAOhD,WAAW;EACtB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACItB,MAAM,CAACX,SAAS,CAACsE,uBAAuB,GAAG,UAAU3C,KAAK,EAAEK,SAAS,EAAEkD,UAAU,EAAExB,CAAC,EAAED,CAAC,EAAE;IACrF,QAAQ9B,KAAK,CAACkD,mBAAmB;MAC7B,KAAK,MAAM;MACX,KAAK,MAAM;QACPnB,CAAC,IAAI/B,KAAK,CAACU,MAAM,CAACI,IAAI;QACtB;MACJ,KAAK,OAAO;QACRiB,CAAC,IAAIwB,UAAU,CAACrD,KAAK,GAAGG,SAAS,CAACH,KAAK,GAAGF,KAAK,CAACU,MAAM,CAACD,KAAK;QAC5D;MACJ,KAAK,SAAS;MACd,KAAK,QAAQ;QACTsB,CAAC,IAAIwB,UAAU,CAACrD,KAAK,GAAG,CAAC,GAAGG,SAAS,CAACH,KAAK,GAAG,CAAC;QAC/C;IACR;IACA,QAAQF,KAAK,CAACmD,iBAAiB;MAC3B,KAAK,MAAM;MACX,KAAK,KAAK;QACNrB,CAAC,IAAI9B,KAAK,CAACU,MAAM,CAACK,GAAG;QACrB;MACJ,KAAK,QAAQ;QACTe,CAAC,IAAIyB,UAAU,CAAC3C,MAAM,GAAGP,SAAS,CAACO,MAAM,GAAGZ,KAAK,CAACU,MAAM,CAACC,MAAM;QAC/D;MACJ,KAAK,SAAS;MACd,KAAK,QAAQ;QACTmB,CAAC,IAAIyB,UAAU,CAAC3C,MAAM,GAAG,CAAC,GAAGP,SAAS,CAACO,MAAM,GAAG,CAAC;QACjD;IACR;IACA,OAAO;MAAEmB,CAAC,EAAEA,CAAC;MAAED,CAAC,EAAEA;IAAE,CAAC;EACzB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI9C,MAAM,CAACX,SAAS,CAACuE,uBAAuB,GAAG,UAAU5C,KAAK,EAAE+B,CAAC,EAAED,CAAC,EAAE;IAC9DC,CAAC,IAAI/B,KAAK,CAACU,MAAM,CAACI,IAAI,GAAGd,KAAK,CAACU,MAAM,CAACD,KAAK;IAC3CqB,CAAC,IAAI9B,KAAK,CAACU,MAAM,CAACK,GAAG,GAAGf,KAAK,CAACU,MAAM,CAACC,MAAM;IAC3C,QAAQX,KAAK,CAACkD,mBAAmB;MAC7B,KAAK,MAAM;MACX,KAAK,MAAM;QACPnB,CAAC,GAAGA,CAAC;QACL;MACJ,KAAK,SAAS;MACd,KAAK,QAAQ;QACTA,CAAC,IAAI/B,KAAK,CAACM,WAAW,CAACJ,KAAK,GAAGF,KAAK,CAACiC,KAAK,CAACF,CAAC;QAC5C;MACJ,KAAK,OAAO;QACRA,CAAC,IAAI/B,KAAK,CAACM,WAAW,CAACJ,KAAK;QAC5B;IACR;IACA,QAAQF,KAAK,CAACmD,iBAAiB;MAC3B,KAAK,MAAM;MACX,KAAK,KAAK;QACNrB,CAAC,GAAGA,CAAC;QACL;MACJ,KAAK,SAAS;MACd,KAAK,QAAQ;QACTA,CAAC,IAAI9B,KAAK,CAACM,WAAW,CAACM,MAAM,GAAGZ,KAAK,CAACiC,KAAK,CAACH,CAAC;QAC7C;MACJ,KAAK,QAAQ;QACTA,CAAC,IAAI9B,KAAK,CAACM,WAAW,CAACM,MAAM;QAC7B;IACR;IACA,OAAO;MAAEmB,CAAC,EAAEA,CAAC;MAAED,CAAC,EAAEA;IAAE,CAAC;EACzB,CAAC;EACD,OAAO9C,MAAM;AACjB,CAAC,CAACT,SAAS,CAAE;AACb,SAASS,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}