{"ast":null,"code":"import { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { createElement, Browser, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { Point } from '@syncfusion/ej2-drawings';\n/**\n * @hidden\n */\nvar MeasureAnnotation = /** @class */function () {\n  function MeasureAnnotation(pdfviewer, pdfViewerBase) {\n    /**\n     * @private\n     */\n    this.measureShapeCount = 0;\n    /**\n     * @private\n     */\n    this.isAddAnnotationProgramatically = false;\n    this.pdfViewer = pdfviewer;\n    this.pdfViewerBase = pdfViewerBase;\n  }\n  Object.defineProperty(MeasureAnnotation.prototype, \"pixelToPointFactor\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return 72 / 96;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @param isImportAction\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @param isImportAction\n   * @private\n   */\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.renderMeasureShapeAnnotations = function (shapeAnnotations, pageNumber, isImportAction, isAnnotOrderAction) {\n    if (shapeAnnotations) {\n      if (shapeAnnotations.length >= 1) {\n        // eslint-disable-next-line\n        var measureAnnots = this.pdfViewer.annotation.getStoredAnnotations(pageNumber, shapeAnnotations, '_annotations_shape_measure');\n        if (!measureAnnots || isImportAction || isAnnotOrderAction) {\n          for (var i = 0; i < shapeAnnotations.length; i++) {\n            // eslint-disable-next-line\n            var annotation = shapeAnnotations[i];\n            var annotationObject = null;\n            this.measureShapeCount = this.measureShapeCount + 1;\n            // eslint-disable-next-line max-len\n            annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n            var isAnnotationRotated = void 0;\n            if (annotation.ShapeAnnotationType) {\n              if (isImportAction) {\n                if (this.pdfViewerBase.isJsonImported) {\n                  annotation.Bounds = this.pdfViewerBase.importJsonForRotatedDocuments(annotation.Rotate, pageNumber, annotation.Bounds, annotation.AnnotationRotation);\n                  isAnnotationRotated = this.pdfViewerBase.isPageRotated;\n                }\n              }\n              var vertexPoints = null;\n              if (annotation.VertexPoints) {\n                vertexPoints = [];\n                if (isImportAction && this.pdfViewerBase.isJsonImported) {\n                  vertexPoints = this.pdfViewerBase.calculateVertexPoints(annotation.Rotate, pageNumber, annotation.VertexPoints, annotation.AnnotationRotation);\n                } else {\n                  for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                    var x = annotation.VertexPoints[j].X ? annotation.VertexPoints[j].X : annotation.VertexPoints[j].x;\n                    var y = annotation.VertexPoints[j].Y ? annotation.VertexPoints[j].Y : annotation.VertexPoints[j].y;\n                    var point = {\n                      x: x,\n                      y: y\n                    };\n                    vertexPoints.push(point);\n                  }\n                }\n              }\n              if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n                // eslint-disable-next-line max-len\n                annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n                annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n                annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n                annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n                annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n                // eslint-disable-next-line max-len\n                annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n              }\n              // eslint-disable-next-line max-len\n              annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n              // eslint-disable-next-line max-len\n              annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n              var isPrint = annotation.IsPrint;\n              var measureObject = {\n                // eslint-disable-next-line max-len\n                ratio: annotation.Calibrate.Ratio,\n                x: this.getNumberFormatArray(annotation.Calibrate.X),\n                distance: this.getNumberFormatArray(annotation.Calibrate.Distance),\n                area: this.getNumberFormatArray(annotation.Calibrate.Area),\n                angle: this.getNumberFormatArray(annotation.Calibrate.Angle),\n                volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n                targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n              };\n              if (annotation.Calibrate.Depth) {\n                measureObject.depth = annotation.Calibrate.Depth;\n              }\n              var left = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n              var top_1 = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n              var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n              var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n              annotationObject = {\n                // eslint-disable-next-line max-len\n                id: 'measure' + this.measureShapeCount,\n                shapeAnnotationType: annotation.ShapeAnnotationType,\n                author: annotation.Author,\n                allowedInteractions: annotation.allowedInteractions,\n                modifiedDate: annotation.ModifiedDate,\n                subject: annotation.Subject,\n                note: annotation.Note,\n                strokeColor: annotation.StrokeColor,\n                fillColor: annotation.FillColor,\n                opacity: annotation.Opacity,\n                thickness: annotation.Thickness,\n                rectangleDifference: annotation.RectangleDifference,\n                // eslint-disable-next-line max-len\n                borderStyle: annotation.BorderStyle,\n                borderDashArray: annotation.BorderDashArray,\n                rotateAngle: annotation.RotateAngle,\n                isCloudShape: annotation.IsCloudShape,\n                cloudIntensity: annotation.CloudIntensity,\n                vertexPoints: vertexPoints,\n                lineHeadStart: annotation.LineHeadStart,\n                lineHeadEnd: annotation.LineHeadEnd,\n                isLocked: annotation.IsLocked,\n                // eslint-disable-next-line max-len\n                bounds: {\n                  left: left,\n                  top: top_1,\n                  width: width,\n                  height: height,\n                  right: annotation.Bounds.Right,\n                  bottom: annotation.Bounds.Bottom\n                },\n                caption: annotation.Caption,\n                captionPosition: annotation.CaptionPosition,\n                calibrate: measureObject,\n                leaderLength: annotation.LeaderLength,\n                leaderLineExtension: annotation.LeaderLineExtension,\n                // eslint-disable-next-line max-len\n                leaderLineOffset: annotation.LeaderLineOffset,\n                indent: annotation.Indent,\n                annotName: annotation.AnnotName,\n                comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n                review: {\n                  state: annotation.State,\n                  stateModel: annotation.StateModel,\n                  modifiedDate: annotation.ModifiedDate,\n                  author: annotation.Author\n                },\n                // eslint-disable-next-line max-len\n                labelContent: annotation.LabelContent,\n                enableShapeLabel: annotation.EnableShapeLabel,\n                labelFillColor: annotation.LabelFillColor,\n                fontColor: annotation.FontColor,\n                labelBorderColor: annotation.LabelBorderColor,\n                fontSize: annotation.FontSize,\n                // eslint-disable-next-line max-len\n                labelBounds: annotation.LabelBounds,\n                annotationSelectorSettings: this.getSettings(annotation),\n                labelSettings: annotation.LabelSettings,\n                annotationSettings: annotation.AnnotationSettings,\n                customData: this.pdfViewer.annotation.getCustomData(annotation),\n                isPrint: annotation.IsPrint,\n                isCommentLock: annotation.IsCommentLock,\n                isAnnotationRotated: isAnnotationRotated\n              };\n              var annot = void 0;\n              // eslint-disable-next-line\n              var vPoints = annotationObject.vertexPoints;\n              if (vertexPoints == null) {\n                vPoints = [];\n              }\n              // eslint-disable-next-line max-len\n              annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n              // eslint-disable-next-line max-len\n              annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n              annot = {\n                // eslint-disable-next-line max-len\n                id: 'measure' + this.measureShapeCount,\n                shapeAnnotationType: this.getShapeType(annotationObject),\n                author: annotationObject.author,\n                allowedInteractions: annotation.allowedInteractions,\n                modifiedDate: annotationObject.modifiedDate,\n                subject: annotationObject.subject,\n                notes: annotationObject.note,\n                fillColor: annotationObject.fillColor,\n                strokeColor: annotationObject.strokeColor,\n                opacity: annotationObject.opacity,\n                // eslint-disable-next-line max-len\n                thickness: annotationObject.thickness,\n                borderStyle: annotationObject.borderStyle,\n                borderDashArray: annotationObject.borderDashArray.toString(),\n                rotateAngle: parseFloat(annotationObject.rotateAngle.split('Angle')[1]),\n                isCloudShape: annotationObject.isCloudShape,\n                cloudIntensity: annotationObject.cloudIntensity,\n                taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadEnd),\n                sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadStart),\n                // eslint-disable-next-line max-len\n                vertexPoints: vPoints,\n                bounds: {\n                  x: annotationObject.bounds.left,\n                  y: annotationObject.bounds.top,\n                  width: annotationObject.bounds.width,\n                  height: annotationObject.bounds.height\n                },\n                leaderHeight: annotationObject.leaderLength,\n                pageIndex: pageNumber,\n                annotName: annotationObject.annotName,\n                comments: annotationObject.comments,\n                review: annotationObject.review,\n                measureType: this.getMeasureType(annotationObject),\n                // eslint-disable-next-line max-len\n                labelContent: annotation.LabelContent,\n                enableShapeLabel: annotation.EnableShapeLabel,\n                labelFillColor: annotation.LabelFillColor,\n                fontColor: annotation.FontColor,\n                labelBorderColor: annotation.LabelBorderColor,\n                fontSize: annotation.FontSize,\n                labelBounds: annotation.LabelBounds,\n                annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n                annotationSettings: annotationObject.annotationSettings,\n                annotationAddMode: annotation.annotationAddMode,\n                isPrint: isPrint,\n                isCommentLock: annotationObject.isCommentLock\n              };\n              this.pdfViewer.annotation.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n              if (this.isAddAnnotationProgramatically) {\n                var settings = {\n                  opacity: annot.opacity,\n                  strokeColor: annot.strokeColor,\n                  thickness: annot.thickness,\n                  modifiedDate: annot.modifiedDate,\n                  width: annot.bounds.width,\n                  height: annot.bounds.height\n                };\n                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, annotation.ShapeAnnotationType, annot.bounds, settings);\n              }\n              this.pdfViewer.add(annot);\n            }\n          }\n        }\n      } else if (shapeAnnotations.shapeAnnotationType) {\n        var annotationObject = this.createAnnotationObject(shapeAnnotations);\n        this.pdfViewer.annotationModule.isFormFieldShape = false;\n        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n        this.pdfViewer.annotationModule.triggerAnnotationAdd(shapeAnnotations);\n      }\n    }\n  };\n  /**\n   * @param annotation\n   * @private\n   */\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.getSettings = function (annotation) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n    if (annotation.AnnotationSelectorSettings) {\n      selector = annotation.AnnotationSelectorSettings;\n    } else {\n      selector = this.getSelector(annotation.Subject);\n    }\n    return selector;\n  };\n  /**\n   * @param type\n   * @private\n   */\n  MeasureAnnotation.prototype.setAnnotationType = function (type) {\n    var author = 'Guest';\n    var subject = \"\";\n    this.updateMeasureproperties();\n    this.pdfViewerBase.disableTextSelectionMode();\n    switch (type) {\n      case 'Distance':\n        this.currentAnnotationMode = 'Distance';\n        var modifiedDateDist = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.distanceSettings.author ? this.pdfViewer.distanceSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.distanceSettings.subject ? this.pdfViewer.distanceSettings.subject : 'Distance calculation';\n        this.pdfViewer.drawingObject = {\n          sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceStartHead),\n          taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceEndHead),\n          measureType: 'Distance',\n          fillColor: this.distanceFillColor,\n          notes: '',\n          strokeColor: this.distanceStrokeColor,\n          leaderHeight: this.leaderLength,\n          opacity: this.distanceOpacity,\n          thickness: this.distanceThickness,\n          borderDashArray: this.distanceDashArray.toString(),\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Distance',\n          author: author,\n          subject: subject,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Distance';\n        break;\n      case 'Perimeter':\n        this.currentAnnotationMode = 'Perimeter';\n        var modifiedDatePeri = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.perimeterSettings.author ? this.pdfViewer.perimeterSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.perimeterSettings.subject ? this.pdfViewer.perimeterSettings.subject : 'Perimeter calculation';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'LineWidthArrowHead',\n          fillColor: this.perimeterFillColor,\n          notes: '',\n          strokeColor: this.perimeterStrokeColor,\n          opacity: this.perimeterOpacity,\n          thickness: this.perimeterThickness,\n          sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterStartHead),\n          // eslint-disable-next-line max-len\n          taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterEndHead),\n          measureType: 'Perimeter',\n          borderDashArray: this.perimeterDashArray.toString(),\n          author: author,\n          subject: subject,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Perimeter';\n        break;\n      case 'Area':\n        this.currentAnnotationMode = 'Area';\n        var modifiedDateArea = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.areaSettings.author ? this.pdfViewer.areaSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.areaSettings.subject ? this.pdfViewer.areaSettings.subject : 'Area calculation';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Polygon',\n          fillColor: this.areaFillColor,\n          notes: '',\n          strokeColor: this.areaStrokeColor,\n          thickness: this.areaThickness,\n          opacity: this.areaOpacity,\n          measureType: 'Area',\n          modifiedDate: modifiedDateArea,\n          borderStyle: '',\n          borderDashArray: '0',\n          author: author,\n          subject: subject,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Polygon';\n        break;\n      case 'Radius':\n        this.currentAnnotationMode = 'Radius';\n        var modifiedDateRad = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.radiusSettings.author ? this.pdfViewer.radiusSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.radiusSettings.subject ? this.pdfViewer.radiusSettings.subject : 'Radius calculation';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Radius',\n          fillColor: this.radiusFillColor,\n          notes: '',\n          strokeColor: this.radiusStrokeColor,\n          opacity: this.radiusOpacity,\n          thickness: this.radiusThickness,\n          measureType: 'Radius',\n          modifiedDate: modifiedDateRad,\n          borderStyle: '',\n          borderDashArray: '0',\n          author: author,\n          subject: subject,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'DrawTool';\n        break;\n      case 'Volume':\n        this.currentAnnotationMode = 'Volume';\n        var modifiedDateVol = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        // eslint-disable-next-line max-len\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.volumeSettings.author ? this.pdfViewer.volumeSettings.author : 'Guest';\n        subject = this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.volumeSettings.subject ? this.pdfViewer.volumeSettings.subject : 'Volume calculation';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Polygon',\n          notes: '',\n          fillColor: this.volumeFillColor,\n          strokeColor: this.volumeStrokeColor,\n          opacity: this.volumeOpacity,\n          thickness: this.volumeThickness,\n          measureType: 'Volume',\n          modifiedDate: modifiedDateVol,\n          borderStyle: '',\n          borderDashArray: '0',\n          author: author,\n          subject: subject,\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Polygon';\n        break;\n    }\n  };\n  MeasureAnnotation.prototype.updateMeasureproperties = function () {\n    this.distanceFillColor = this.pdfViewer.distanceSettings.fillColor ? this.pdfViewer.distanceSettings.fillColor : '#ff0000';\n    this.distanceStrokeColor = this.pdfViewer.distanceSettings.strokeColor ? this.pdfViewer.distanceSettings.strokeColor : '#ff0000';\n    this.distanceOpacity = this.pdfViewer.distanceSettings.opacity ? this.pdfViewer.distanceSettings.opacity : 1;\n    this.distanceThickness = this.pdfViewer.distanceSettings.thickness ? this.pdfViewer.distanceSettings.thickness : 1;\n    this.distanceDashArray = this.pdfViewer.distanceSettings.borderDashArray ? this.pdfViewer.distanceSettings.borderDashArray : 0;\n    this.leaderLength = this.pdfViewer.distanceSettings.leaderLength != null ? this.pdfViewer.distanceSettings.leaderLength : 40;\n    // eslint-disable-next-line max-len\n    this.distanceStartHead = this.pdfViewer.distanceSettings.lineHeadStartStyle ? this.pdfViewer.distanceSettings.lineHeadStartStyle : 'Closed';\n    this.distanceEndHead = this.pdfViewer.distanceSettings.lineHeadEndStyle ? this.pdfViewer.distanceSettings.lineHeadEndStyle : 'Closed';\n    this.perimeterFillColor = this.pdfViewer.perimeterSettings.fillColor ? this.pdfViewer.perimeterSettings.fillColor : '#ffffff00';\n    this.perimeterStrokeColor = this.pdfViewer.perimeterSettings.strokeColor ? this.pdfViewer.perimeterSettings.strokeColor : '#ff0000';\n    this.perimeterOpacity = this.pdfViewer.perimeterSettings.opacity ? this.pdfViewer.perimeterSettings.opacity : 1;\n    this.perimeterThickness = this.pdfViewer.perimeterSettings.thickness ? this.pdfViewer.perimeterSettings.thickness : 1;\n    this.perimeterDashArray = this.pdfViewer.perimeterSettings.borderDashArray ? this.pdfViewer.perimeterSettings.borderDashArray : 0;\n    // eslint-disable-next-line max-len\n    this.perimeterStartHead = this.pdfViewer.perimeterSettings.lineHeadStartStyle ? this.pdfViewer.perimeterSettings.lineHeadStartStyle : 'Open';\n    this.perimeterEndHead = this.pdfViewer.perimeterSettings.lineHeadEndStyle ? this.pdfViewer.perimeterSettings.lineHeadEndStyle : 'Open';\n    this.areaFillColor = this.pdfViewer.areaSettings.fillColor ? this.pdfViewer.areaSettings.fillColor : '#ffffff00';\n    this.areaStrokeColor = this.pdfViewer.areaSettings.strokeColor ? this.pdfViewer.areaSettings.strokeColor : '#ff0000';\n    this.areaOpacity = this.pdfViewer.areaSettings.opacity ? this.pdfViewer.areaSettings.opacity : 1;\n    this.areaThickness = this.pdfViewer.areaSettings.thickness ? this.pdfViewer.areaSettings.thickness : 1;\n    this.radiusFillColor = this.pdfViewer.radiusSettings.fillColor ? this.pdfViewer.radiusSettings.fillColor : '#ffffff00';\n    this.radiusStrokeColor = this.pdfViewer.radiusSettings.strokeColor ? this.pdfViewer.radiusSettings.strokeColor : '#ff0000';\n    this.radiusOpacity = this.pdfViewer.radiusSettings.opacity ? this.pdfViewer.radiusSettings.opacity : 1;\n    this.radiusThickness = this.pdfViewer.radiusSettings.thickness ? this.pdfViewer.radiusSettings.thickness : 1;\n    this.volumeFillColor = this.pdfViewer.volumeSettings.fillColor ? this.pdfViewer.volumeSettings.fillColor : '#ffffff00';\n    this.volumeStrokeColor = this.pdfViewer.volumeSettings.strokeColor ? this.pdfViewer.volumeSettings.strokeColor : '#ff0000';\n    this.volumeOpacity = this.pdfViewer.volumeSettings.opacity ? this.pdfViewer.volumeSettings.opacity : 1;\n    this.volumeThickness = this.pdfViewer.volumeSettings.thickness ? this.pdfViewer.volumeSettings.thickness : 1;\n    this.unit = this.pdfViewer.measurementSettings.conversionUnit.toLowerCase();\n    this.displayUnit = this.pdfViewer.measurementSettings.displayUnit.toLowerCase();\n    this.ratio = this.pdfViewer.measurementSettings.scaleRatio;\n    this.volumeDepth = this.pdfViewer.measurementSettings.depth;\n    this.scaleRatioString = '1 ' + this.unit + ' = ' + this.ratio.toString() + ' ' + this.displayUnit;\n  };\n  MeasureAnnotation.prototype.createAnnotationObject = function (annotationModel) {\n    var bound;\n    var labelBound;\n    var annotationName = this.pdfViewer.annotation.createGUID();\n    // eslint-disable-next-line max-len\n    var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('shape_measure', annotationModel.pageIndex + 1, annotationModel.measureType);\n    if (commentsDivid) {\n      document.getElementById(commentsDivid).id = annotationName;\n    }\n    annotationModel.annotName = annotationName;\n    annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationModel.subject);\n    this.pdfViewer.annotation.stickyNotesAnnotationModule.addTextToComments(annotationName, annotationModel.notes);\n    if (annotationModel.wrapper.bounds) {\n      bound = {\n        // eslint-disable-next-line max-len\n        left: annotationModel.wrapper.bounds.x,\n        top: annotationModel.wrapper.bounds.y,\n        height: annotationModel.wrapper.bounds.height,\n        width: annotationModel.wrapper.bounds.width,\n        right: annotationModel.wrapper.bounds.right,\n        bottom: annotationModel.wrapper.bounds.bottom\n      };\n      labelBound = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationModel.wrapper.bounds);\n    } else {\n      bound = {\n        left: 0,\n        top: 0,\n        height: 0,\n        width: 0,\n        right: 0,\n        bottom: 0\n      };\n      labelBound = {\n        left: 0,\n        top: 0,\n        height: 0,\n        width: 0,\n        right: 0,\n        bottom: 0\n      };\n    }\n    // eslint-disable-next-line radix\n    var borderDashArray = parseInt(annotationModel.borderDashArray);\n    borderDashArray = isNaN(borderDashArray) ? 0 : borderDashArray;\n    // eslint-disable-next-line max-len\n    var measure = {\n      ratio: this.scaleRatioString,\n      x: [this.createNumberFormat('x')],\n      distance: [this.createNumberFormat('d')],\n      area: [this.createNumberFormat('a')]\n    };\n    if (annotationModel.measureType === 'Volume') {\n      measure.depth = this.volumeDepth;\n    }\n    // eslint-disable-next-line\n    var annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(annotationModel, true);\n    // eslint-disable-next-line\n    var allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotationModel);\n    annotationModel.isPrint = annotationSettings.isPrint;\n    var setting = this.pdfViewer.shapeLabelSettings;\n    var labelSettings = {\n      borderColor: annotationModel.strokeColor,\n      fillColor: annotationModel.fillColor,\n      fontColor: annotationModel.fontColor,\n      fontSize: annotationModel.fontSize,\n      labelContent: annotationModel.labelContent,\n      labelHeight: setting.labelHeight,\n      labelWidth: setting.labelMaxWidth,\n      opacity: annotationModel.opacity\n    };\n    return {\n      // eslint-disable-next-line max-len\n      id: annotationModel.id,\n      shapeAnnotationType: this.getShapeAnnotType(annotationModel.measureType),\n      author: annotationModel.author,\n      allowedInteractions: allowedInteractions,\n      subject: annotationModel.subject,\n      note: annotationModel.notes,\n      strokeColor: annotationModel.strokeColor,\n      fillColor: annotationModel.fillColor,\n      opacity: annotationModel.opacity,\n      thickness: annotationModel.thickness,\n      // eslint-disable-next-line max-len\n      borderStyle: annotationModel.borderStyle,\n      borderDashArray: borderDashArray,\n      bounds: bound,\n      // eslint-disable-next-line max-len\n      modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n      rotateAngle: 'RotateAngle' + annotationModel.rotateAngle,\n      isCloudShape: annotationModel.isCloudShape,\n      cloudIntensity: annotationModel.cloudIntensity,\n      // eslint-disable-next-line max-len\n      vertexPoints: annotationModel.vertexPoints,\n      lineHeadStart: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.sourceDecoraterShapes),\n      lineHeadEnd: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.taregetDecoraterShapes),\n      rectangleDifference: [],\n      isLocked: annotationSettings.isLock,\n      // eslint-disable-next-line max-len\n      leaderLength: annotationModel.leaderHeight,\n      leaderLineExtension: 2,\n      leaderLineOffset: 0,\n      calibrate: measure,\n      caption: true,\n      captionPosition: 'Top',\n      indent: this.getIndent(annotationModel.measureType),\n      annotName: annotationName,\n      comments: [],\n      review: {\n        state: '',\n        stateModel: '',\n        modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n        author: annotationModel.author\n      },\n      // eslint-disable-next-line max-len\n      labelContent: annotationModel.labelContent,\n      enableShapeLabel: annotationModel.enableShapeLabel,\n      labelFillColor: annotationModel.labelFillColor,\n      labelBorderColor: annotationModel.labelBorderColor,\n      fontColor: annotationModel.fontColor,\n      fontSize: annotationModel.fontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: labelBound,\n      annotationSelectorSettings: this.getSelector(annotationModel.subject),\n      labelSettings: labelSettings,\n      annotationSettings: annotationSettings,\n      customData: this.pdfViewer.annotation.getMeasureData(annotationModel.subject),\n      isPrint: annotationModel.isPrint,\n      isCommentLock: annotationModel.isCommentLock,\n      isAnnotationRotated: false\n    };\n  };\n  MeasureAnnotation.prototype.getSelector = function (type) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n    if (type === 'Distance calculation' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.distanceSettings.annotationSelectorSettings;\n    } else if (type === 'Perimeter calculation' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.perimeterSettings.annotationSelectorSettings;\n      // eslint-disable-next-line max-len\n    } else if (type === 'Area calculation' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.areaSettings.annotationSelectorSettings;\n    } else if (type === 'Radius calculation' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.radiusSettings.annotationSelectorSettings;\n    } else if (type === 'Volume calculation' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.volumeSettings.annotationSelectorSettings;\n    }\n    return selector;\n  };\n  MeasureAnnotation.prototype.getShapeAnnotType = function (measureType) {\n    var annotationType;\n    switch (measureType) {\n      case 'Distance':\n        annotationType = 'Line';\n        break;\n      case 'Perimeter':\n        annotationType = 'Polyline';\n        break;\n      case 'Area':\n      case 'Volume':\n        annotationType = 'Polygon';\n        break;\n      case 'Radius':\n        annotationType = 'Circle';\n        break;\n    }\n    return annotationType;\n  };\n  MeasureAnnotation.prototype.getShapeType = function (shape) {\n    var shapeType;\n    if (shape.shapeAnnotationType === 'Line') {\n      shapeType = 'Distance';\n    } else if (shape.shapeAnnotationType === 'Polyline') {\n      shapeType = 'LineWidthArrowHead';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n      shapeType = 'Polygon';\n      // eslint-disable-next-line max-len\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius' || shape.shapeAnnotationType === 'Circle') {\n      shapeType = 'Radius';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n      shapeType = 'Polygon';\n    }\n    return shapeType;\n  };\n  MeasureAnnotation.prototype.getMeasureType = function (shape) {\n    var measureType;\n    if (shape.shapeAnnotationType === 'Line') {\n      measureType = 'Distance';\n    } else if (shape.shapeAnnotationType === 'Polyline') {\n      measureType = 'Perimeter';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n      measureType = 'Area';\n      // eslint-disable-next-line max-len\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius' || shape.shapeAnnotationType === 'Circle') {\n      measureType = 'Radius';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n      measureType = 'Volume';\n    }\n    return measureType;\n  };\n  MeasureAnnotation.prototype.getIndent = function (measureType) {\n    var indent;\n    switch (measureType) {\n      case 'Distance':\n        indent = 'LineDimension';\n        break;\n      case 'Perimeter':\n        indent = 'PolyLineDimension';\n        break;\n      case 'Area':\n        indent = 'PolygonDimension';\n        break;\n      case 'Radius':\n        indent = 'PolygonRadius';\n        break;\n      case 'Volume':\n        indent = 'PolygonVolume';\n        break;\n    }\n    return indent;\n  };\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.getNumberFormatArray = function (list) {\n    // eslint-disable-next-line\n    var numberFormatArray = new Array();\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        // eslint-disable-next-line max-len\n        numberFormatArray[i] = {\n          unit: list[i].Unit,\n          fractionalType: list[i].FractionalType,\n          conversionFactor: list[i].ConversionFactor,\n          denominator: list[i].Denominator,\n          formatDenominator: list[i].FormatDenominator\n        };\n      }\n    }\n    return numberFormatArray;\n  };\n  MeasureAnnotation.prototype.createNumberFormat = function (type) {\n    var cFactor = 1;\n    var unit = this.displayUnit;\n    if (type === 'x') {\n      cFactor = this.getFactor(this.unit);\n    }\n    if (type === 'a') {\n      unit = 'sq ' + this.displayUnit;\n    }\n    // eslint-disable-next-line max-len\n    var numberFormat = {\n      unit: unit,\n      fractionalType: 'D',\n      conversionFactor: cFactor,\n      denominator: 100,\n      formatDenominator: false\n    };\n    return numberFormat;\n  };\n  /**\n   * @private\n   */\n  MeasureAnnotation.prototype.saveMeasureShapeAnnotations = function () {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n    }\n    // eslint-disable-next-line\n    var annotations = new Array();\n    for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n      annotations[j] = [];\n    }\n    if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n      var annotationCollection = JSON.parse(storeObject);\n      for (var i = 0; i < annotationCollection.length; i++) {\n        var newArray = [];\n        var pageAnnotationObject = annotationCollection[i];\n        if (pageAnnotationObject) {\n          for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n            this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n            if (this.pdfViewerBase.isJsonExported) {\n              if (pageAnnotationObject.annotations[z].isAnnotationRotated) {\n                pageAnnotationObject.annotations[z].bounds = this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex);\n                pageAnnotationObject.annotations[z].vertexPoints = this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex);\n              } else {\n                var pageDetails = this.pdfViewerBase.pageSize[pageAnnotationObject.pageIndex];\n                if (pageDetails) {\n                  pageAnnotationObject.annotations[z].annotationRotation = pageDetails.rotation;\n                }\n              }\n            }\n            // eslint-disable-next-line max-len\n            pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n            var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n            pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n            var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n            pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n            // eslint-disable-next-line max-len\n            pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex));\n            if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n            }\n            // eslint-disable-next-line max-len\n            pageAnnotationObject.annotations[z].calibrate = this.getStringifiedMeasure(pageAnnotationObject.annotations[z].calibrate);\n            if (pageAnnotationObject.annotations[z].enableShapeLabel === true) {\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].labelBounds = JSON.stringify(this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(JSON.parse(pageAnnotationObject.annotations[z].bounds), pageAnnotationObject.pageIndex));\n              var labelFillColorString = pageAnnotationObject.annotations[z].labelFillColor;\n              pageAnnotationObject.annotations[z].labelFillColor = JSON.stringify(this.getRgbCode(labelFillColorString));\n              var labelBorderColorString = pageAnnotationObject.annotations[z].labelBorderColor;\n              pageAnnotationObject.annotations[z].labelBorderColor = JSON.stringify(this.getRgbCode(labelBorderColorString));\n              pageAnnotationObject.annotations[z].labelSettings.fillColor = labelFillColorString;\n              var fontColorString = pageAnnotationObject.annotations[z].labelSettings.fontColor;\n              pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n            }\n          }\n          newArray = pageAnnotationObject.annotations;\n        }\n        annotations[pageAnnotationObject.pageIndex] = newArray;\n      }\n    }\n    return JSON.stringify(annotations);\n  };\n  /**\n   * @private\n   */\n  MeasureAnnotation.prototype.createScaleRatioWindow = function () {\n    var _this = this;\n    if (!isBlazor()) {\n      var elementID = this.pdfViewer.element.id;\n      // eslint-disable-next-line max-len\n      var dialogDiv = createElement('div', {\n        id: elementID + '_scale_ratio_window',\n        className: 'e-pv-scale-ratio-window'\n      });\n      this.pdfViewerBase.pageContainer.appendChild(dialogDiv);\n      var contentElement = this.createRatioUI();\n      this.scaleRatioDialog = new Dialog({\n        showCloseIcon: true,\n        closeOnEscape: false,\n        isModal: true,\n        header: this.pdfViewer.localeObj.getConstant('Scale Ratio'),\n        target: this.pdfViewer.element,\n        content: contentElement,\n        close: function () {\n          _this.sourceTextBox.destroy();\n          _this.convertUnit.destroy();\n          _this.destTextBox.destroy();\n          _this.dispUnit.destroy();\n          _this.scaleRatioDialog.destroy();\n          var dialogElement = _this.pdfViewerBase.getElement('_scale_ratio_window');\n          dialogElement.parentElement.removeChild(dialogElement);\n        }\n      });\n      if (!Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n        this.scaleRatioDialog.buttons = [\n        // eslint-disable-next-line max-len\n        {\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('OK'),\n            isPrimary: true\n          },\n          click: this.onOkClicked.bind(this)\n        }, {\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('Cancel')\n          },\n          click: this.onCancelClicked.bind(this)\n        }];\n      } else {\n        this.scaleRatioDialog.buttons = [{\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('Cancel')\n          },\n          click: this.onCancelClicked.bind(this)\n        },\n        // eslint-disable-next-line max-len\n        {\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('OK'),\n            isPrimary: true\n          },\n          click: this.onOkClicked.bind(this)\n        }];\n      }\n      if (this.pdfViewer.enableRtl) {\n        this.scaleRatioDialog.enableRtl = true;\n      }\n      this.scaleRatioDialog.appendTo(dialogDiv);\n      this.convertUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.unit)).outerHTML;\n      this.dispUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n      this.depthUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n    } else {\n      this.pdfViewer._dotnetInstance.invokeMethodAsync('OpenScaleRatioDialog');\n    }\n  };\n  MeasureAnnotation.prototype.createRatioUI = function () {\n    var element = createElement('div');\n    var elementID = this.pdfViewer.element.id;\n    // eslint-disable-next-line max-len\n    var items = [{\n      text: this.pdfViewer.localeObj.getConstant('pt'),\n      label: 'pt'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('in'),\n      label: 'in'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('mm'),\n      label: 'mm'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('cm'),\n      label: 'cm'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('p'),\n      label: 'p'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('ft'),\n      label: 'ft'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('ft_in'),\n      label: 'ft_in'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('m'),\n      label: 'm'\n    }];\n    var labelText = createElement('div', {\n      id: elementID + '_scale_ratio_label',\n      className: 'e-pv-scale-ratio-text'\n    });\n    labelText.textContent = this.pdfViewer.localeObj.getConstant('Scale Ratio');\n    element.appendChild(labelText);\n    var sourceContainer = createElement('div', {\n      id: elementID + '_scale_src_container'\n    });\n    element.appendChild(sourceContainer);\n    // eslint-disable-next-line max-len\n    var srcInputElement = this.createInputElement('input', 'e-pv-scale-ratio-src-input', elementID + '_src_input', sourceContainer);\n    this.sourceTextBox = new NumericTextBox({\n      value: this.ratio ? this.ratio : 1,\n      format: '##',\n      cssClass: 'e-pv-scale-ratio-src-input',\n      min: 1,\n      max: 100\n    }, srcInputElement);\n    // eslint-disable-next-line max-len\n    var srcUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-src-unit', elementID + '_src_unit', sourceContainer);\n    this.convertUnit = new DropDownButton({\n      items: items,\n      cssClass: 'e-pv-scale-ratio-src-unit'\n    }, srcUnitElement);\n    this.convertUnit.select = this.convertUnitSelect.bind(this);\n    var destinationContainer = createElement('div', {\n      id: elementID + '_scale_dest_container'\n    });\n    // eslint-disable-next-line max-len\n    var destInputElement = this.createInputElement('input', 'e-pv-scale-ratio-dest-input', elementID + '_dest_input', destinationContainer);\n    this.destTextBox = new NumericTextBox({\n      value: 1,\n      format: '##',\n      cssClass: 'e-pv-scale-ratio-dest-input',\n      min: 1,\n      max: 100\n    }, destInputElement);\n    // eslint-disable-next-line max-len\n    var destUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-dest-unit', elementID + '_dest_unit', destinationContainer);\n    this.dispUnit = new DropDownButton({\n      items: items,\n      cssClass: 'e-pv-scale-ratio-dest-unit'\n    }, destUnitElement);\n    this.dispUnit.select = this.dispUnitSelect.bind(this);\n    element.appendChild(destinationContainer);\n    var depthLabelText = createElement('div', {\n      id: elementID + '_depth_label',\n      className: 'e-pv-depth-text'\n    });\n    depthLabelText.textContent = this.pdfViewer.localeObj.getConstant('Depth');\n    element.appendChild(depthLabelText);\n    var depthContainer = createElement('div', {\n      id: elementID + '_depth_container'\n    });\n    element.appendChild(depthContainer);\n    // eslint-disable-next-line max-len\n    var depthInputElement = this.createInputElement('input', 'e-pv-depth-input', elementID + '_depth_input', depthContainer);\n    this.depthTextBox = new NumericTextBox({\n      value: this.volumeDepth,\n      format: '##',\n      cssClass: 'e-pv-depth-input',\n      min: 1\n    }, depthInputElement);\n    // eslint-disable-next-line max-len\n    var depthUnitElement = this.createInputElement('button', 'e-pv-depth-unit', elementID + '_depth_unit', depthContainer);\n    this.depthUnit = new DropDownButton({\n      items: items,\n      cssClass: 'e-pv-depth-unit'\n    }, depthUnitElement);\n    this.depthUnit.select = this.depthUnitSelect.bind(this);\n    return element;\n  };\n  MeasureAnnotation.prototype.convertUnitSelect = function (args) {\n    this.convertUnit.content = this.createContent(args.item.text).outerHTML;\n  };\n  MeasureAnnotation.prototype.dispUnitSelect = function (args) {\n    this.dispUnit.content = this.createContent(args.item.text).outerHTML;\n    this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n  };\n  MeasureAnnotation.prototype.depthUnitSelect = function (args) {\n    this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n  };\n  MeasureAnnotation.prototype.createContent = function (text) {\n    var divElement = createElement('div', {\n      className: 'e-pv-scale-unit-content'\n    });\n    divElement.textContent = text;\n    return divElement;\n  };\n  MeasureAnnotation.prototype.createInputElement = function (input, className, idString, parentElement) {\n    var container = createElement('div', {\n      id: idString + '_container',\n      className: className + '-container'\n    });\n    var textBoxInput = createElement(input, {\n      id: idString\n    });\n    if (input === 'input') {\n      textBoxInput.type = 'text';\n    }\n    container.appendChild(textBoxInput);\n    parentElement.appendChild(container);\n    return textBoxInput;\n  };\n  /**\n   * @private\n   */\n  MeasureAnnotation.prototype.onOkClicked = function () {\n    if (isBlazor()) {\n      // eslint-disable-next-line\n      var unitElement = document.querySelector('#' + this.pdfViewer.element.id + '_src_unit');\n      // eslint-disable-next-line\n      var displayElement = document.querySelector('#' + this.pdfViewer.element.id + '_dest_unit');\n      // eslint-disable-next-line\n      var sourceTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_ratio_input');\n      // eslint-disable-next-line\n      var destTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_dest_input');\n      // eslint-disable-next-line\n      var depthTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_depth_input');\n      if (unitElement && displayElement && sourceTextBox && destTextBox && depthTextBox) {\n        this.unit = unitElement.value;\n        this.displayUnit = displayElement.value;\n        // eslint-disable-next-line\n        this.ratio = parseInt(destTextBox.value) / parseInt(sourceTextBox.value);\n        // eslint-disable-next-line\n        this.volumeDepth = parseInt(depthTextBox.value);\n      }\n      // eslint-disable-next-line\n      this.scaleRatioString = parseInt(sourceTextBox.value) + ' ' + this.unit + ' = ' + parseInt(destTextBox.value) + ' ' + this.displayUnit;\n      this.updateMeasureValues(this.scaleRatioString, this.displayUnit, this.unit, this.volumeDepth);\n    } else {\n      this.unit = this.getContent(this.convertUnit.content);\n      this.displayUnit = this.getContent(this.dispUnit.content);\n      this.ratio = this.destTextBox.value / this.sourceTextBox.value;\n      this.volumeDepth = this.depthTextBox.value;\n      this.scaleRatioString = this.sourceTextBox.value + ' ' + this.unit + ' = ' + this.destTextBox.value + ' ' + this.displayUnit;\n      this.scaleRatioDialog.hide();\n      var originalUnit = void 0;\n      var originalDisplayUnit = void 0;\n      originalUnit = this.restoreUnit(this.convertUnit);\n      originalDisplayUnit = this.restoreUnit(this.dispUnit);\n      this.updateMeasureValues(this.scaleRatioString, originalDisplayUnit, originalUnit, this.volumeDepth);\n    }\n  };\n  MeasureAnnotation.prototype.restoreUnit = function (dropdownObject) {\n    var calibUnit;\n    for (var i = 0; i < dropdownObject.items.length; i++) {\n      var convertUnitItem = dropdownObject.items[i];\n      if (this.unit === convertUnitItem.text) {\n        calibUnit = convertUnitItem.label;\n      }\n    }\n    return calibUnit;\n  };\n  /**\n   * @param ratio\n   * @param displayUnit\n   * @param conversionUnit\n   * @param depth\n   * @private\n   */\n  MeasureAnnotation.prototype.updateMeasureValues = function (ratio, displayUnit, conversionUnit, depth) {\n    this.scaleRatioString = ratio;\n    this.displayUnit = displayUnit;\n    this.unit = conversionUnit;\n    this.volumeDepth = depth;\n    for (var i = 0; i < this.pdfViewerBase.pageCount; i++) {\n      var pageAnnotations = this.getAnnotations(i, null);\n      if (pageAnnotations) {\n        for (var j = 0; j < pageAnnotations.length; j++) {\n          pageAnnotations = this.getAnnotations(i, null);\n          var measureObject = pageAnnotations[j];\n          if (!measureObject.annotationSettings.isLock) {\n            measureObject.calibrate.ratio = ratio;\n            measureObject.calibrate.x[0].unit = displayUnit;\n            measureObject.calibrate.distance[0].unit = displayUnit;\n            measureObject.calibrate.area[0].unit = displayUnit;\n            measureObject.calibrate.x[0].conversionFactor = this.getFactor(conversionUnit);\n            if (measureObject.indent === 'PolygonVolume') {\n              measureObject.calibrate.depth = depth;\n            }\n            pageAnnotations[j] = measureObject;\n            this.manageAnnotations(pageAnnotations, i);\n            this.pdfViewer.annotation.updateCalibrateValues(this.getAnnotationBaseModel(measureObject.id));\n          }\n        }\n      }\n      this.pdfViewer.annotation.renderAnnotations(i, null, null, null, null, false);\n    }\n  };\n  MeasureAnnotation.prototype.getAnnotationBaseModel = function (id) {\n    var annotationBase = null;\n    for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n      if (id === this.pdfViewer.annotations[i].id) {\n        annotationBase = this.pdfViewer.annotations[i];\n        break;\n      }\n    }\n    return annotationBase;\n  };\n  MeasureAnnotation.prototype.getContent = function (unit) {\n    return unit.split('</div>')[0].split('\">')[1];\n  };\n  /**\n   * @param value\n   * @param currentAnnot\n   * @private\n   */\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.setConversion = function (value, currentAnnot) {\n    // eslint-disable-next-line\n    var values;\n    if (currentAnnot) {\n      var pageIndex = currentAnnot.pageIndex;\n      if (currentAnnot.id === 'diagram_helper') {\n        pageIndex = currentAnnot.pageIndex ? currentAnnot.pageIndex : this.pdfViewerBase.activeElements.activePageID;\n        currentAnnot = this.getCurrentObject(pageIndex, null, currentAnnot.annotName);\n      }\n      if (currentAnnot) {\n        values = this.getCurrentValues(currentAnnot.id, pageIndex);\n      } else {\n        values = this.getCurrentValues();\n      }\n    } else {\n      values = this.getCurrentValues();\n    }\n    var scaledValue = value * values.ratio;\n    return this.convertPointToUnits(values.factor, scaledValue, values.unit);\n  };\n  MeasureAnnotation.prototype.onCancelClicked = function () {\n    this.scaleRatioDialog.hide();\n  };\n  /**\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @private\n   */\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewlyAdded) {\n    if (!isNullOrUndefined(annotationBase.formFieldAnnotationType) && annotationBase.formFieldAnnotationType !== \"\") {\n      this.pdfViewer.annotationModule.isFormFieldShape = true;\n    } else {\n      this.pdfViewer.annotationModule.isFormFieldShape = false;\n    }\n    var currentAnnotObject = null;\n    var isEdited = false;\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n    if (pageAnnotations != null && annotationBase) {\n      for (var i = 0; i < pageAnnotations.length; i++) {\n        if (annotationBase.id === pageAnnotations[i].id) {\n          if (property === 'bounds') {\n            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationModifiedDate(annotationBase, true);\n            if (pageAnnotations[i].shapeAnnotationType === 'Line' || pageAnnotations[i].shapeAnnotationType === 'Polyline') {\n              pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            } else if (pageAnnotations[i].shapeAnnotationType === 'Polygon') {\n              pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            } else {\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            }\n            if (pageAnnotations[i].enableShapeLabel === true && annotationBase.wrapper) {\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].labelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationBase.wrapper.bounds);\n            }\n          } else if (property === 'fill') {\n            pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n            if (this.pdfViewer.enableShapeLabel) {\n              pageAnnotations[i].labelFillColor = annotationBase.wrapper.children[0].style.fill;\n            }\n          } else if (property === 'stroke') {\n            pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n          } else if (property === 'opacity') {\n            pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n          } else if (property === 'thickness') {\n            pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n          } else if (property === 'dashArray') {\n            pageAnnotations[i].borderDashArray = annotationBase.wrapper.children[0].style.strokeDashArray;\n            pageAnnotations[i].borderStyle = annotationBase.borderStyle;\n          } else if (property === 'startArrow') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].lineHeadStart = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.sourceDecoraterShapes);\n          } else if (property === 'endArrow') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].lineHeadEnd = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.taregetDecoraterShapes);\n          } else if (property === 'leaderLength') {\n            pageAnnotations[i].leaderLength = annotationBase.leaderHeight;\n          } else if (property === 'notes') {\n            pageAnnotations[i].note = annotationBase.notes;\n            if (pageAnnotations[i].enableShapeLabel === true) {\n              isEdited = true;\n              pageAnnotations[i].labelContent = annotationBase.notes;\n            }\n          } else if (property === 'delete') {\n            currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n            break;\n          } else if (property === 'labelContent') {\n            pageAnnotations[i].note = annotationBase.labelContent;\n            pageAnnotations[i].labelContent = annotationBase.labelContent;\n            break;\n          } else if (property === 'fontColor') {\n            pageAnnotations[i].fontColor = annotationBase.fontColor;\n          } else if (property === 'fontSize') {\n            pageAnnotations[i].fontSize = annotationBase.fontSize;\n          }\n          // eslint-disable-next-line max-len\n          pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n          this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n        }\n      }\n      this.manageAnnotations(pageAnnotations, pageNumber);\n    }\n    if (!isNewlyAdded && isEdited) {\n      this.pdfViewerBase.updateDocumentEditedProperty(true);\n    }\n    return currentAnnotObject;\n  };\n  /**\n   * @param pageNumber\n   * @param annotationBase\n   * @param pageNumber\n   * @param annotationBase\n   * @private\n   */\n  MeasureAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n    if (pageAnnotations) {\n      pageAnnotations.push(annotationBase);\n    }\n    this.manageAnnotations(pageAnnotations, pageNumber);\n  };\n  MeasureAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n    }\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      if (!this.pdfViewerBase.isStorageExceed) {\n        window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n      }\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n      if (annotObject[index]) {\n        annotObject[index].annotations = pageAnnotations;\n      }\n      var annotationStringified = JSON.stringify(annotObject);\n      if (this.pdfViewerBase.isStorageExceed) {\n        this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'] = annotationStringified;\n      } else {\n        window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_shape_measure', annotationStringified);\n      }\n    }\n  };\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n    // eslint-disable-next-line\n    var annotationCollection;\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n    }\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n      if (annotObject[index]) {\n        annotationCollection = annotObject[index].annotations;\n      } else {\n        annotationCollection = shapeAnnotations;\n      }\n    } else {\n      annotationCollection = shapeAnnotations;\n    }\n    return annotationCollection;\n  };\n  MeasureAnnotation.prototype.getCurrentObject = function (pageNumber, id, annotName) {\n    var currentAnnotObject = null;\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n    if (pageAnnotations != null) {\n      for (var i = 0; i < pageAnnotations.length; i++) {\n        if (id) {\n          if (id === pageAnnotations[i].id) {\n            currentAnnotObject = pageAnnotations[i];\n            break;\n          }\n        } else if (annotName) {\n          if (annotName === pageAnnotations[i].annotName) {\n            currentAnnotObject = pageAnnotations[i];\n            break;\n          }\n        }\n      }\n    }\n    return currentAnnotObject;\n  };\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.getCurrentValues = function (id, pageNumber) {\n    var ratio;\n    var unit;\n    var factor;\n    var depth;\n    if (id && !isNaN(pageNumber)) {\n      var currentAnnotObject = this.getCurrentObject(pageNumber, id);\n      if (currentAnnotObject) {\n        ratio = this.getCurrentRatio(currentAnnotObject.calibrate.ratio);\n        unit = currentAnnotObject.calibrate.x[0].unit;\n        factor = currentAnnotObject.calibrate.x[0].conversionFactor;\n        depth = currentAnnotObject.calibrate.depth;\n      } else {\n        ratio = this.ratio;\n        unit = this.displayUnit;\n        factor = this.getFactor(this.unit);\n        depth = this.volumeDepth;\n      }\n    } else {\n      ratio = this.ratio;\n      unit = this.displayUnit;\n      factor = this.getFactor(this.unit);\n      depth = this.volumeDepth;\n    }\n    return {\n      ratio: ratio,\n      unit: unit,\n      factor: factor,\n      depth: depth\n    };\n  };\n  MeasureAnnotation.prototype.getCurrentRatio = function (ratioString) {\n    var stringArray = ratioString.split(' ');\n    if (stringArray[3] === '=') {\n      return parseFloat(stringArray[4]) / parseFloat(stringArray[0]);\n    } else {\n      return parseFloat(stringArray[3]) / parseFloat(stringArray[0]);\n    }\n  };\n  /**\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @private\n   */\n  MeasureAnnotation.prototype.calculateArea = function (points, id, pageNumber) {\n    // eslint-disable-next-line\n    var values = this.getCurrentValues(id, pageNumber);\n    var area = this.getArea(points, values.factor, values.unit) * values.ratio;\n    if (values.unit === 'ft_in') {\n      // eslint-disable-next-line\n      var calculateValue = Math.round(area * 100) / 100;\n      if (calculateValue >= 12) {\n        calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n        calculateValue = calculateValue.split('.');\n        if (calculateValue[1]) {\n          // eslint-disable-next-line\n          var inchValue = 0;\n          if (calculateValue[1].charAt(1)) {\n            // eslint-disable-next-line\n            inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n            inchValue = Math.round(inchValue);\n          } else {\n            inchValue = calculateValue[1];\n          }\n          if (!inchValue) {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n          } else {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n          }\n        } else {\n          return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n        }\n      } else {\n        return Math.round(area * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n      }\n    }\n    if (values.unit === 'm') {\n      return area * 100 / 100 + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n    }\n    return Math.round(area * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n  };\n  MeasureAnnotation.prototype.getArea = function (points, factor, unit) {\n    var area = 0;\n    var j = points.length - 1;\n    for (var i = 0; i < points.length; i++) {\n      // eslint-disable-next-line max-len\n      area += (points[j].x * this.pixelToPointFactor * factor + points[i].x * this.pixelToPointFactor * factor) * (points[j].y * this.pixelToPointFactor * factor - points[i].y * this.pixelToPointFactor * factor);\n      j = i;\n    }\n    if (unit === 'ft_in') {\n      return Math.abs(area * 2.0);\n    } else {\n      return Math.abs(area / 2.0);\n    }\n  };\n  /**\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @private\n   */\n  MeasureAnnotation.prototype.calculateVolume = function (points, id, pageNumber) {\n    // eslint-disable-next-line\n    var values = this.getCurrentValues(id, pageNumber);\n    var depth = values.depth ? values.depth : this.volumeDepth;\n    var area = this.getArea(points, values.factor, values.unit);\n    var volume = area * (depth * this.convertUnitToPoint(values.unit) * values.factor) * values.ratio;\n    if (values.unit === 'ft_in') {\n      // eslint-disable-next-line\n      var calculateValue = Math.round(volume * 100) / 100;\n      if (calculateValue >= 12) {\n        calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n        calculateValue = calculateValue.split('.');\n        if (calculateValue[1]) {\n          // eslint-disable-next-line\n          var inchValue = 0;\n          if (calculateValue[1].charAt(1)) {\n            // eslint-disable-next-line\n            inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n            inchValue = Math.round(inchValue);\n          } else {\n            inchValue = calculateValue[1];\n          }\n          if (!inchValue) {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n          } else {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n          }\n        } else {\n          return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n        }\n      } else {\n        return Math.round(volume * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n      }\n    }\n    return Math.round(volume * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n  };\n  /**\n   * @param pdfAnnotationBase\n   * @private\n   */\n  MeasureAnnotation.prototype.calculatePerimeter = function (pdfAnnotationBase) {\n    var perimeter = Point.getLengthFromListOfPoints(pdfAnnotationBase.vertexPoints);\n    return this.setConversion(perimeter * this.pixelToPointFactor, pdfAnnotationBase);\n  };\n  MeasureAnnotation.prototype.getFactor = function (unit) {\n    var factor;\n    switch (unit) {\n      case 'in':\n        factor = 1 / 72;\n        break;\n      case 'cm':\n        factor = 1 / 28.346;\n        break;\n      case 'mm':\n        factor = 1 / 2.835;\n        break;\n      case 'pt':\n        factor = 1;\n        break;\n      case 'p':\n        factor = 1 / 12;\n        break;\n      case 'ft':\n        factor = 1 / 864;\n        break;\n      case 'ft_in':\n        factor = 1 / 72;\n        break;\n      case 'm':\n        factor = 1 / 2834.64567;\n        break;\n    }\n    return factor;\n  };\n  MeasureAnnotation.prototype.convertPointToUnits = function (factor, value, unit) {\n    var convertedValue;\n    if (unit === 'ft_in') {\n      // eslint-disable-next-line\n      var calculateValue = Math.round(value * factor * 100) / 100;\n      if (calculateValue >= 12) {\n        calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n        calculateValue = calculateValue.split('.');\n        if (calculateValue[1]) {\n          // eslint-disable-next-line\n          var inchValue = 0;\n          if (calculateValue[1].charAt(1)) {\n            // eslint-disable-next-line\n            inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n            inchValue = Math.round(inchValue);\n          } else {\n            inchValue = calculateValue[1];\n          }\n          if (!inchValue) {\n            convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n          } else {\n            convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n          }\n        } else {\n          convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n        }\n      } else {\n        convertedValue = Math.round(value * factor * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('in');\n      }\n    } else {\n      convertedValue = Math.round(value * factor * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant(unit);\n    }\n    return convertedValue;\n  };\n  MeasureAnnotation.prototype.convertUnitToPoint = function (unit) {\n    var factor;\n    switch (unit) {\n      case 'in':\n        factor = 72;\n        break;\n      case 'cm':\n        factor = 28.346;\n        break;\n      case 'mm':\n        factor = 2.835;\n        break;\n      case 'pt':\n        factor = 1;\n        break;\n      case 'p':\n        factor = 12;\n        break;\n      case 'ft':\n        factor = 864;\n        break;\n      case 'ft_in':\n        factor = 72;\n        break;\n      case 'm':\n        factor = 2834.64567;\n        break;\n    }\n    return factor;\n  };\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.getStringifiedMeasure = function (measure) {\n    if (!isNullOrUndefined(measure)) {\n      measure.angle = JSON.stringify(measure.angle);\n      measure.area = JSON.stringify(measure.area);\n      measure.distance = JSON.stringify(measure.distance);\n      measure.volume = JSON.stringify(measure.volume);\n    }\n    return JSON.stringify(measure);\n  };\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.getRgbCode = function (colorString) {\n    if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n      colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n    }\n    var stringArray = colorString.split(',');\n    if (isNullOrUndefined(stringArray[1])) {\n      colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n      stringArray = colorString.split(',');\n    }\n    // eslint-disable-next-line radix\n    var r = parseInt(stringArray[0].split('(')[1]);\n    // eslint-disable-next-line radix\n    var g = parseInt(stringArray[1]);\n    // eslint-disable-next-line radix\n    var b = parseInt(stringArray[2]);\n    // eslint-disable-next-line radix\n    var a = parseInt(stringArray[3]);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  };\n  /**\n   * @param annotation\n   * @param pageNumber\n   * @param annotation\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.saveImportedMeasureAnnotations = function (annotation, pageNumber) {\n    var annotationObject = null;\n    var vertexPoints = null;\n    if (annotation.VertexPoints) {\n      vertexPoints = [];\n      for (var j = 0; j < annotation.VertexPoints.length; j++) {\n        var point = {\n          x: annotation.VertexPoints[j].X,\n          y: annotation.VertexPoints[j].Y\n        };\n        vertexPoints.push(point);\n      }\n    }\n    var measureObject = {\n      // eslint-disable-next-line max-len\n      ratio: annotation.Calibrate.Ratio,\n      x: this.getNumberFormatArray(annotation.Calibrate.X),\n      distance: this.getNumberFormatArray(annotation.Calibrate.Distance),\n      area: this.getNumberFormatArray(annotation.Calibrate.Area),\n      angle: this.getNumberFormatArray(annotation.Calibrate.Angle),\n      volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n      targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n    };\n    if (annotation.Calibrate.Depth) {\n      measureObject.depth = annotation.Calibrate.Depth;\n    }\n    if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n      // eslint-disable-next-line max-len\n      annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n      annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n      annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n      annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n      annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n      annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n    }\n    // eslint-disable-next-line max-len\n    annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n    annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n    annotation.Author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotation.Subject);\n    annotationObject = {\n      // eslint-disable-next-line max-len\n      id: 'measure',\n      shapeAnnotationType: annotation.ShapeAnnotationType,\n      author: annotation.Author,\n      allowedInteractions: annotation.allowedInteractions,\n      modifiedDate: annotation.ModifiedDate,\n      subject: annotation.Subject,\n      note: annotation.Note,\n      strokeColor: annotation.StrokeColor,\n      fillColor: annotation.FillColor,\n      opacity: annotation.Opacity,\n      thickness: annotation.Thickness,\n      rectangleDifference: annotation.RectangleDifference,\n      // eslint-disable-next-line max-len\n      borderStyle: annotation.BorderStyle,\n      borderDashArray: annotation.BorderDashArray,\n      rotateAngle: annotation.RotateAngle,\n      isCloudShape: annotation.IsCloudShape,\n      cloudIntensity: annotation.CloudIntensity,\n      vertexPoints: vertexPoints,\n      lineHeadStart: annotation.LineHeadStart,\n      lineHeadEnd: annotation.LineHeadEnd,\n      isLocked: annotation.IsLocked,\n      // eslint-disable-next-line max-len\n      bounds: {\n        left: annotation.Bounds.X,\n        top: annotation.Bounds.Y,\n        width: annotation.Bounds.Width,\n        height: annotation.Bounds.Height,\n        right: annotation.Bounds.Right,\n        bottom: annotation.Bounds.Bottom\n      },\n      caption: annotation.Caption,\n      captionPosition: annotation.CaptionPosition,\n      calibrate: measureObject,\n      leaderLength: annotation.LeaderLength,\n      leaderLineExtension: annotation.LeaderLineExtension,\n      // eslint-disable-next-line max-len\n      leaderLineOffset: annotation.LeaderLineOffset,\n      indent: annotation.Indent,\n      annotName: annotation.AnnotName,\n      comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n      review: {\n        state: annotation.State,\n        stateModel: annotation.StateModel,\n        modifiedDate: annotation.ModifiedDate,\n        author: annotation.Author\n      },\n      labelContent: annotation.LabelContent,\n      enableShapeLabel: annotation.EnableShapeLabel,\n      labelFillColor: annotation.LabelFillColor,\n      labelBorderColor: annotation.LabelBorderColor,\n      fontColor: annotation.FontColor,\n      fontSize: annotation.FontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: annotation.LabelBounds,\n      annotationSelectorSettings: this.getSettings(annotation),\n      labelSettings: annotation.LabelSettings,\n      annotationSettings: annotation.AnnotationSettings,\n      customData: this.pdfViewer.annotation.getCustomData(annotation),\n      isPrint: annotation.IsPrint,\n      isCommentLock: annotation.IsCommentLock,\n      isAnnotationRotated: false\n    };\n    this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n  };\n  /**\n   * @param annotation\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n  MeasureAnnotation.prototype.updateMeasureAnnotationCollections = function (annotation, pageNumber) {\n    // eslint-disable-next-line\n    var annotationObject = null;\n    var vertexPoints = null;\n    if (annotation.VertexPoints) {\n      vertexPoints = [];\n      for (var j = 0; j < annotation.VertexPoints.length; j++) {\n        var point = {\n          x: annotation.VertexPoints[j].X,\n          y: annotation.VertexPoints[j].Y\n        };\n        vertexPoints.push(point);\n      }\n    }\n    var measureObject = {\n      // eslint-disable-next-line max-len\n      ratio: annotation.Calibrate.Ratio,\n      x: this.getNumberFormatArray(annotation.Calibrate.X),\n      distance: this.getNumberFormatArray(annotation.Calibrate.Distance),\n      area: this.getNumberFormatArray(annotation.Calibrate.Area),\n      angle: this.getNumberFormatArray(annotation.Calibrate.Angle),\n      volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n      targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n    };\n    if (annotation.Calibrate.Depth) {\n      measureObject.depth = annotation.Calibrate.Depth;\n    }\n    if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n      // eslint-disable-next-line max-len\n      annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n      annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n      annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n      annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n      annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n      var settings = this.pdfViewer.shapeLabelSettings;\n      var labelSettings = {\n        borderColor: annotation.StrokeColor,\n        fillColor: annotation.FillColor,\n        fontColor: annotation.FontColor,\n        fontSize: annotation.FontSize,\n        labelContent: annotation.LabelContent,\n        labelHeight: settings.labelHeight,\n        labelWidth: settings.labelWidth,\n        opacity: annotation.Opacity\n      };\n      annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : labelSettings;\n    }\n    annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n    // eslint-disable-next-line max-len\n    annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n    // eslint-disable-next-line max-len\n    annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n    if (annotation.IsLocked) {\n      annotation.AnnotationSettings.isLock = annotation.IsLocked;\n    }\n    annotationObject = {\n      // eslint-disable-next-line max-len\n      id: 'measure',\n      shapeAnnotationType: annotation.ShapeAnnotationType,\n      author: annotation.Author,\n      allowedInteractions: annotation.allowedInteractions,\n      modifiedDate: annotation.ModifiedDate,\n      subject: annotation.Subject,\n      note: annotation.Note,\n      strokeColor: annotation.StrokeColor,\n      fillColor: annotation.FillColor,\n      opacity: annotation.Opacity,\n      thickness: annotation.Thickness,\n      rectangleDifference: annotation.RectangleDifference,\n      // eslint-disable-next-line max-len\n      borderStyle: annotation.BorderStyle,\n      borderDashArray: annotation.BorderDashArray,\n      rotateAngle: annotation.RotateAngle,\n      isCloudShape: annotation.IsCloudShape,\n      cloudIntensity: annotation.CloudIntensity,\n      vertexPoints: vertexPoints,\n      lineHeadStart: annotation.LineHeadStart,\n      lineHeadEnd: annotation.LineHeadEnd,\n      isLocked: annotation.IsLocked,\n      // eslint-disable-next-line max-len\n      bounds: {\n        left: annotation.Bounds.X,\n        top: annotation.Bounds.Y,\n        width: annotation.Bounds.Width,\n        height: annotation.Bounds.Height,\n        right: annotation.Bounds.Right,\n        bottom: annotation.Bounds.Bottom\n      },\n      caption: annotation.Caption,\n      captionPosition: annotation.CaptionPosition,\n      calibrate: measureObject,\n      leaderLength: annotation.LeaderLength,\n      leaderLineExtension: annotation.LeaderLineExtension,\n      // eslint-disable-next-line max-len\n      leaderLineOffset: annotation.LeaderLineOffset,\n      indent: annotation.Indent,\n      annotationId: annotation.AnnotName,\n      comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n      review: {\n        state: annotation.State,\n        stateModel: annotation.StateModel,\n        modifiedDate: annotation.ModifiedDate,\n        author: annotation.Author\n      },\n      labelContent: annotation.LabelContent,\n      enableShapeLabel: annotation.EnableShapeLabel,\n      labelFillColor: annotation.LabelFillColor,\n      labelBorderColor: annotation.LabelBorderColor,\n      fontColor: annotation.FontColor,\n      fontSize: annotation.FontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: annotation.LabelBounds,\n      pageNumber: pageNumber,\n      annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n      labelSettings: annotation.labelSettings,\n      annotationSettings: annotation.AnnotationSettings,\n      customData: this.pdfViewer.annotation.getCustomData(annotation),\n      isPrint: annotation.IsPrint,\n      isCommentLock: annotation.IsCommentLock\n    };\n    return annotationObject;\n  };\n  /**\n  * This method used to add annotations with using program.\n  *\n  * @param annotationType - It describes the annotation type\n  * @param annotationObject - It describes type of annotation object\n  * @param offset - It describes about the annotation bounds or location\n  * @returns Object\n  * @private\n  */\n  MeasureAnnotation.prototype.updateAddAnnotationDetails = function (annotationType, annotationObject, offset) {\n    //Creating new object if annotationObject is null\n    if (!annotationObject) {\n      annotationObject = {\n        offset: {\n          x: 10,\n          y: 10\n        },\n        pageNumber: 0,\n        width: undefined,\n        height: undefined\n      };\n      offset = annotationObject.offset;\n    } else if (!annotationObject.offset) offset = {\n      x: 10,\n      y: 10\n    };else offset = annotationObject.offset;\n    //Initialize the annotation settings\n    var annotationSelectorSettings = null;\n    var allowedInteractions = null;\n    var annotationSettings = null;\n    var measureAnnotationType = '';\n    var shapeAnnotationType = '';\n    var subject = '';\n    var isArrow = false;\n    var vertexPoints = [];\n    //Creating the CurrentDate and Annotation name\n    var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n    var annotationName = this.pdfViewer.annotation.createGUID();\n    if (annotationType == 'Distance') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.lineSettings.annotationSelectorSettings ? this.pdfViewer.lineSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.lineSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n      allowedInteractions = this.pdfViewer.lineSettings.allowedInteractions ? this.pdfViewer.lineSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'LineDimension';\n      shapeAnnotationType = 'Line';\n      subject = this.pdfViewer.lineSettings.subject !== \"\" ? this.pdfViewer.lineSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Distance calculation';\n      isArrow = true;\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 100,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Perimeter') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.arrowSettings.annotationSelectorSettings ? this.pdfViewer.arrowSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.arrowSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n      allowedInteractions = this.pdfViewer.arrowSettings.allowedInteractions ? this.pdfViewer.arrowSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolyLineDimension';\n      shapeAnnotationType = 'Polyline';\n      subject = this.pdfViewer.arrowSettings.subject !== \"\" ? this.pdfViewer.arrowSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Perimeter calculation';\n      isArrow = true;\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 85,\n        y: offset.y\n      }, {\n        x: offset.x + 86,\n        y: offset.y + 62\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Area') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.rectangleSettings.annotationSelectorSettings ? this.pdfViewer.rectangleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.rectangleSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n      allowedInteractions = this.pdfViewer.rectangleSettings.allowedInteractions ? this.pdfViewer.rectangleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolygonDimension';\n      shapeAnnotationType = 'Polygon';\n      subject = this.pdfViewer.rectangleSettings.subject !== \"\" ? this.pdfViewer.rectangleSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Area calculation';\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 88,\n        y: offset.y - 1\n      }, {\n        x: offset.x + 89,\n        y: offset.y + 53\n      }, {\n        x: offset.x,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Radius') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.circleSettings.annotationSelectorSettings ? this.pdfViewer.circleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.circleSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n      allowedInteractions = this.pdfViewer.circleSettings.allowedInteractions ? this.pdfViewer.circleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolygonRadius';\n      shapeAnnotationType = 'Circle';\n      subject = this.pdfViewer.circleSettings.subject !== \"\" ? this.pdfViewer.circleSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Radius calculation';\n      annotationObject.width = annotationObject.width ? annotationObject.width : 100;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 100;\n      vertexPoints = null;\n    } else if (annotationType == 'Volume') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.polygonSettings.annotationSelectorSettings ? this.pdfViewer.polygonSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.polygonSettings);\n      annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n      allowedInteractions = this.pdfViewer.polygonSettings.allowedInteractions ? this.pdfViewer.polygonSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolygonVolume';\n      shapeAnnotationType = 'Polygon';\n      subject = this.pdfViewer.polygonSettings.subject !== \"\" ? this.pdfViewer.polygonSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Volume calculation';\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x,\n        y: offset.y + 109\n      }, {\n        x: offset.x + 120,\n        y: offset.y + 109\n      }, {\n        x: offset.x + 120,\n        y: offset.y - 1\n      }, {\n        x: offset.x,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    }\n    annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : annotationSettings.isLock;\n    annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : annotationSettings.minHeight;\n    annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : annotationSettings.minWidth;\n    annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : annotationSettings.maxWidth;\n    annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : annotationSettings.maxHeight;\n    //Calculating area for all the measurements\n    var values = {\n      depth: 96,\n      factor: 0.013888888888888888,\n      ratio: 1,\n      unit: 'in'\n    };\n    var notes = '';\n    if (vertexPoints || annotationType == 'Radius' || annotationType == 'Volume') {\n      if (annotationType == 'Distance' || annotationType == 'Perimeter' || annotationType == 'Radius') {\n        var length_1 = 0;\n        if (annotationType == 'Radius') {\n          length_1 = annotationObject.width / 2 * this.pixelToPointFactor;\n        } else {\n          for (var i_1 = 0; i_1 < vertexPoints.length - 1; i_1++) {\n            length_1 += Math.sqrt(Math.pow(vertexPoints[i_1].x - vertexPoints[i_1 + 1].x, 2) + Math.pow(vertexPoints[i_1].y - vertexPoints[i_1 + 1].y, 2));\n          }\n          length_1 = length_1 * this.pixelToPointFactor;\n        }\n        var scaledValue = length_1 * values.ratio;\n        notes = this.convertPointToUnits(values.factor, scaledValue, values.unit);\n      } else if (annotationType == 'Area' || annotationType == 'Volume') {\n        var area = 0;\n        var j = vertexPoints.length - 1;\n        for (var i = 0; i < vertexPoints.length; i++) {\n          area += (vertexPoints[j].x * this.pixelToPointFactor * values.factor + vertexPoints[i].x * this.pixelToPointFactor * values.factor) * (vertexPoints[j].y * this.pixelToPointFactor * values.factor - vertexPoints[i].y * this.pixelToPointFactor * values.factor);\n          j = i;\n        }\n        area = Math.abs(area / 2.0);\n        if (annotationType == 'Volume') {\n          area = area * (values.depth * this.convertUnitToPoint(values.unit) * values.factor) * values.ratio;\n          notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n        } else notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n      }\n    }\n    //Converting points model into vertex property\n    if (vertexPoints) vertexPoints = this.pdfViewer.annotation.getVertexPointsXY(vertexPoints);\n    //Creating Annotation objects with it's proper properties\n    var measureShapeAnnotation = [];\n    var shape = {\n      AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n      AnnotName: annotationName,\n      AnnotType: 'shape_measure',\n      AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n      AnnotationSettings: annotationSettings,\n      Author: annotationObject.author ? annotationObject.author : 'Guest',\n      BorderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray : 0,\n      BorderStyle: 'Solid',\n      Bounds: {\n        X: offset.x,\n        Y: offset.y,\n        Width: annotationObject.width,\n        Height: annotationObject.height,\n        Left: offset.x,\n        Top: offset.y,\n        Location: {\n          X: offset.x,\n          Y: offset.y\n        },\n        Size: {\n          Height: annotationObject.height,\n          IsEmpty: false,\n          Width: annotationObject.width\n        }\n      },\n      Calibrate: {\n        Area: [{\n          ConversionFactor: 1,\n          Denominator: 100,\n          FormatDenominator: false,\n          FractionalType: 'D',\n          Unit: 'sq in'\n        }],\n        Depth: annotationObject.depth ? annotationObject.depth : 0,\n        Distance: [{\n          ConversionFactor: 1,\n          Denominator: 100,\n          FormatDenominator: false,\n          FractionalType: 'D',\n          Unit: 'in'\n        }],\n        Ratio: '1 in = 1 in',\n        TargetUnitConversion: 0,\n        Volume: null,\n        X: [{\n          ConversionFactor: 0.013888889,\n          Denominator: 100,\n          FormatDenominator: false,\n          FractionalType: 'D',\n          Unit: 'in'\n        }]\n      },\n      Caption: true,\n      CaptionPosition: 'Top',\n      CloudIntensity: 0,\n      Comments: null,\n      CustomData: annotationObject.customData ? annotationObject.customData : null,\n      CreatedDate: currentDateString,\n      EnableShapeLabel: false,\n      ExistingCustomData: null,\n      FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n      FontColor: null,\n      FontSize: 0,\n      Indent: measureAnnotationType,\n      IsCloudShape: false,\n      IsCommentLock: false,\n      IsLocked: annotationObject.isLock ? annotationObject.isLock : false,\n      IsPrint: annotationObject.isPrint ? annotationObject.isPrint : true,\n      LabelBorderColor: null,\n      LabelBounds: {\n        X: 0,\n        Y: 0,\n        Width: 0,\n        Height: 0\n      },\n      LabelContent: null,\n      LabelFillColor: null,\n      LabelSettings: null,\n      LeaderLength: 0,\n      LeaderLineExtension: 0,\n      LeaderLineOffset: 0,\n      LineHeadEnd: annotationObject.lineHeadStartStyle ? annotationObject.lineHeadStartStyle : isArrow ? 'ClosedArrow' : 'None',\n      LineHeadStart: annotationObject.lineHeadEndStyle ? annotationObject.lineHeadEndStyle : isArrow ? 'ClosedArrow' : 'None',\n      ModifiedDate: '',\n      Note: notes,\n      Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n      RectangleDifference: [],\n      RotateAngle: 'RotateAngle0',\n      ShapeAnnotationType: shapeAnnotationType,\n      State: '',\n      StateModel: '',\n      StrokeColor: annotationObject.strokeColor ? annotationObject.strokeColor : '#ff0000',\n      Subject: annotationObject.subject ? annotationObject.subject : subject,\n      Thickness: annotationObject.thickness ? annotationObject.thickness : 1,\n      VertexPoints: vertexPoints\n    };\n    //Adding the annotation object to an array and return it\n    measureShapeAnnotation[0] = shape;\n    return {\n      measureShapeAnnotation: measureShapeAnnotation\n    };\n  };\n  return MeasureAnnotation;\n}();\nexport { MeasureAnnotation };","map":{"version":3,"names":["NumericTextBox","createElement","Browser","isNullOrUndefined","isBlazor","Dialog","DropDownButton","Point","MeasureAnnotation","pdfviewer","pdfViewerBase","measureShapeCount","isAddAnnotationProgramatically","pdfViewer","Object","defineProperty","prototype","get","enumerable","configurable","renderMeasureShapeAnnotations","shapeAnnotations","pageNumber","isImportAction","isAnnotOrderAction","length","measureAnnots","annotation","getStoredAnnotations","i","annotationObject","annotationAddMode","annotationModule","findAnnotationMode","AnnotType","isAnnotationRotated","ShapeAnnotationType","isJsonImported","Bounds","importJsonForRotatedDocuments","Rotate","AnnotationRotation","isPageRotated","vertexPoints","VertexPoints","calculateVertexPoints","j","x","X","y","Y","point","push","EnableShapeLabel","LabelBounds","inputElementModule","calculateLabelBoundsFromLoadedDocument","LabelBorderColor","StrokeColor","FontColor","LabelFillColor","FillColor","FontSize","LabelSettings","shapeLabelSettings","AnnotationSettings","updateAnnotationSettings","allowedInteractions","AllowedInteractions","updateAnnotationAllowedInteractions","isPrint","IsPrint","measureObject","ratio","Calibrate","Ratio","getNumberFormatArray","distance","Distance","area","Area","angle","Angle","volume","Volume","targetUnitConversion","TargetUnitConversion","Depth","depth","left","top_1","width","Width","height","Height","id","shapeAnnotationType","author","Author","modifiedDate","ModifiedDate","subject","Subject","note","Note","strokeColor","fillColor","opacity","Opacity","thickness","Thickness","rectangleDifference","RectangleDifference","borderStyle","BorderStyle","borderDashArray","BorderDashArray","rotateAngle","RotateAngle","isCloudShape","IsCloudShape","cloudIntensity","CloudIntensity","lineHeadStart","LineHeadStart","lineHeadEnd","LineHeadEnd","isLocked","IsLocked","bounds","top","right","Right","bottom","Bottom","caption","Caption","captionPosition","CaptionPosition","calibrate","leaderLength","LeaderLength","leaderLineExtension","LeaderLineExtension","leaderLineOffset","LeaderLineOffset","indent","Indent","annotName","AnnotName","comments","getAnnotationComments","Comments","review","state","State","stateModel","StateModel","labelContent","LabelContent","enableShapeLabel","labelFillColor","fontColor","labelBorderColor","fontSize","labelBounds","annotationSelectorSettings","getSettings","labelSettings","annotationSettings","customData","getCustomData","isCommentLock","IsCommentLock","annot","vPoints","AnnotationSelectorSettings","getShapeType","notes","toString","parseFloat","split","taregetDecoraterShapes","getArrowType","sourceDecoraterShapes","leaderHeight","pageIndex","measureType","getMeasureType","storeAnnotations","settings","fireAnnotationAdd","add","createAnnotationObject","isFormFieldShape","triggerAnnotationAdd","selector","getSelector","setAnnotationType","type","updateMeasureproperties","disableTextSelectionMode","currentAnnotationMode","modifiedDateDist","stickyNotesAnnotationModule","getDateAndTime","distanceSettings","drawingObject","distanceStartHead","distanceEndHead","distanceFillColor","distanceStrokeColor","distanceOpacity","distanceThickness","distanceDashArray","tool","modifiedDatePeri","perimeterSettings","perimeterFillColor","perimeterStrokeColor","perimeterOpacity","perimeterThickness","perimeterStartHead","perimeterEndHead","perimeterDashArray","modifiedDateArea","areaSettings","areaFillColor","areaStrokeColor","areaThickness","areaOpacity","modifiedDateRad","radiusSettings","radiusFillColor","radiusStrokeColor","radiusOpacity","radiusThickness","modifiedDateVol","volumeSettings","volumeFillColor","volumeStrokeColor","volumeOpacity","volumeThickness","lineHeadStartStyle","lineHeadEndStyle","unit","measurementSettings","conversionUnit","toLowerCase","displayUnit","scaleRatio","volumeDepth","scaleRatioString","annotationModel","bound","labelBound","annotationName","createGUID","commentsDivid","addComments","document","getElementById","updateAnnotationAuthor","addTextToComments","wrapper","calculateLabelBounds","parseInt","isNaN","measure","createNumberFormat","findAnnotationSettings","setting","borderColor","labelHeight","labelWidth","labelMaxWidth","getShapeAnnotType","getArrowTypeForCollection","isLock","getIndent","getMeasureData","annotationType","shape","shapeType","list","numberFormatArray","Array","Unit","fractionalType","FractionalType","conversionFactor","ConversionFactor","denominator","Denominator","formatDenominator","FormatDenominator","cFactor","getFactor","numberFormat","saveMeasureShapeAnnotations","storeObject","window","sessionStorage","getItem","documentId","isStorageExceed","annotationStorage","annotations","pageCount","skipDownload","annotationCollection","JSON","parse","newArray","pageAnnotationObject","z","updateModifiedDate","isJsonExported","getBounds","getVertexPoints","pageDetails","pageSize","annotationRotation","rotation","stringify","strokeColorString","getRgbCode","fillColorString","getStringifiedMeasure","labelFillColorString","labelBorderColorString","fontColorString","createScaleRatioWindow","_this","elementID","element","dialogDiv","className","pageContainer","appendChild","contentElement","createRatioUI","scaleRatioDialog","showCloseIcon","closeOnEscape","isModal","header","localeObj","getConstant","target","content","close","sourceTextBox","destroy","convertUnit","destTextBox","dispUnit","dialogElement","getElement","parentElement","removeChild","isDevice","enableDesktopMode","buttons","buttonModel","isPrimary","click","onOkClicked","bind","onCancelClicked","enableRtl","appendTo","createContent","outerHTML","depthUnit","_dotnetInstance","invokeMethodAsync","items","text","label","labelText","textContent","sourceContainer","srcInputElement","createInputElement","value","format","cssClass","min","max","srcUnitElement","select","convertUnitSelect","destinationContainer","destInputElement","destUnitElement","dispUnitSelect","depthLabelText","depthContainer","depthInputElement","depthTextBox","depthUnitElement","depthUnitSelect","args","item","divElement","input","idString","container","textBoxInput","unitElement","querySelector","displayElement","updateMeasureValues","getContent","hide","originalUnit","originalDisplayUnit","restoreUnit","dropdownObject","calibUnit","convertUnitItem","pageAnnotations","getAnnotations","manageAnnotations","updateCalibrateValues","getAnnotationBaseModel","renderAnnotations","annotationBase","setConversion","currentAnnot","values","activeElements","activePageID","getCurrentObject","getCurrentValues","scaledValue","convertPointToUnits","factor","modifyInCollection","property","isNewlyAdded","formFieldAnnotationType","currentAnnotObject","isEdited","updateAnnotationModifiedDate","children","style","fill","strokeWidth","strokeDashArray","splice","storeAnnotationCollections","updateDocumentEditedProperty","addInCollection","annotObject","removeItem","index","getPageCollection","annotationStringified","setItem","getCurrentRatio","ratioString","stringArray","calculateArea","points","getArea","calculateValue","Math","round","inchValue","charAt","pixelToPointFactor","abs","calculateVolume","convertUnitToPoint","calculatePerimeter","pdfAnnotationBase","perimeter","getLengthFromListOfPoints","convertedValue","colorString","match","nameToHash","getValue","r","g","b","a","saveImportedMeasureAnnotations","updateMeasureAnnotationCollections","annotationId","updateAddAnnotationDetails","offset","undefined","measureAnnotationType","isArrow","currentDateString","lineSettings","updateSettings","arrowSettings","rectangleSettings","circleSettings","polygonSettings","minHeight","minWidth","maxWidth","maxHeight","length_1","i_1","sqrt","pow","getVertexPointsXY","measureShapeAnnotation","Left","Top","Location","Size","IsEmpty","CustomData","CreatedDate","ExistingCustomData"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/annotation/measure-annotation.js"],"sourcesContent":["import { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { createElement, Browser, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { Point } from '@syncfusion/ej2-drawings';\n/**\n * @hidden\n */\nvar MeasureAnnotation = /** @class */ (function () {\n    function MeasureAnnotation(pdfviewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.measureShapeCount = 0;\n        /**\n         * @private\n         */\n        this.isAddAnnotationProgramatically = false;\n        this.pdfViewer = pdfviewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    Object.defineProperty(MeasureAnnotation.prototype, \"pixelToPointFactor\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return (72 / 96);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @param isImportAction\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @param isImportAction\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.renderMeasureShapeAnnotations = function (shapeAnnotations, pageNumber, isImportAction, isAnnotOrderAction) {\n        if (shapeAnnotations) {\n            if (shapeAnnotations.length >= 1) {\n                // eslint-disable-next-line\n                var measureAnnots = this.pdfViewer.annotation.getStoredAnnotations(pageNumber, shapeAnnotations, '_annotations_shape_measure');\n                if (!measureAnnots || isImportAction || isAnnotOrderAction) {\n                    for (var i = 0; i < shapeAnnotations.length; i++) {\n                        // eslint-disable-next-line\n                        var annotation = shapeAnnotations[i];\n                        var annotationObject = null;\n                        this.measureShapeCount = this.measureShapeCount + 1;\n                        // eslint-disable-next-line max-len\n                        annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n                        var isAnnotationRotated = void 0;\n                        if (annotation.ShapeAnnotationType) {\n                            if (isImportAction) {\n                                if (this.pdfViewerBase.isJsonImported) {\n                                    annotation.Bounds = this.pdfViewerBase.importJsonForRotatedDocuments(annotation.Rotate, pageNumber, annotation.Bounds, annotation.AnnotationRotation);\n                                    isAnnotationRotated = this.pdfViewerBase.isPageRotated;\n                                }\n                            }\n                            var vertexPoints = null;\n                            if (annotation.VertexPoints) {\n                                vertexPoints = [];\n                                if (isImportAction && this.pdfViewerBase.isJsonImported) {\n                                    vertexPoints = this.pdfViewerBase.calculateVertexPoints(annotation.Rotate, pageNumber, annotation.VertexPoints, annotation.AnnotationRotation);\n                                }\n                                else {\n                                    for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                                        var x = annotation.VertexPoints[j].X ? annotation.VertexPoints[j].X : annotation.VertexPoints[j].x;\n                                        var y = annotation.VertexPoints[j].Y ? annotation.VertexPoints[j].Y : annotation.VertexPoints[j].y;\n                                        var point = { x: x, y: y };\n                                        vertexPoints.push(point);\n                                    }\n                                }\n                            }\n                            if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n                                // eslint-disable-next-line max-len\n                                annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n                                annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n                                annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n                                annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n                                annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n                                // eslint-disable-next-line max-len\n                                annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n                            }\n                            // eslint-disable-next-line max-len\n                            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n                            // eslint-disable-next-line max-len\n                            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n                            var isPrint = annotation.IsPrint;\n                            var measureObject = {\n                                // eslint-disable-next-line max-len\n                                ratio: annotation.Calibrate.Ratio, x: this.getNumberFormatArray(annotation.Calibrate.X), distance: this.getNumberFormatArray(annotation.Calibrate.Distance), area: this.getNumberFormatArray(annotation.Calibrate.Area), angle: this.getNumberFormatArray(annotation.Calibrate.Angle), volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n                                targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n                            };\n                            if (annotation.Calibrate.Depth) {\n                                measureObject.depth = annotation.Calibrate.Depth;\n                            }\n                            var left = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n                            var top_1 = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n                            var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n                            var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n                            annotationObject = {\n                                // eslint-disable-next-line max-len\n                                id: 'measure' + this.measureShapeCount, shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject,\n                                note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n                                // eslint-disable-next-line max-len\n                                borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n                                cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked,\n                                // eslint-disable-next-line max-len\n                                bounds: { left: left, top: top_1, width: width, height: height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n                                caption: annotation.Caption, captionPosition: annotation.CaptionPosition, calibrate: measureObject, leaderLength: annotation.LeaderLength, leaderLineExtension: annotation.LeaderLineExtension,\n                                // eslint-disable-next-line max-len\n                                leaderLineOffset: annotation.LeaderLineOffset, indent: annotation.Indent, annotName: annotation.AnnotName, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n                                review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                                // eslint-disable-next-line max-len\n                                labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n                                fontColor: annotation.FontColor, labelBorderColor: annotation.LabelBorderColor, fontSize: annotation.FontSize,\n                                // eslint-disable-next-line max-len\n                                labelBounds: annotation.LabelBounds, annotationSelectorSettings: this.getSettings(annotation), labelSettings: annotation.LabelSettings, annotationSettings: annotation.AnnotationSettings,\n                                customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isAnnotationRotated: isAnnotationRotated\n                            };\n                            var annot = void 0;\n                            // eslint-disable-next-line\n                            var vPoints = annotationObject.vertexPoints;\n                            if (vertexPoints == null) {\n                                vPoints = [];\n                            }\n                            // eslint-disable-next-line max-len\n                            annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n                            // eslint-disable-next-line max-len\n                            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n                            annot = {\n                                // eslint-disable-next-line max-len\n                                id: 'measure' + this.measureShapeCount, shapeAnnotationType: this.getShapeType(annotationObject), author: annotationObject.author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotationObject.modifiedDate,\n                                subject: annotationObject.subject, notes: annotationObject.note, fillColor: annotationObject.fillColor, strokeColor: annotationObject.strokeColor, opacity: annotationObject.opacity,\n                                // eslint-disable-next-line max-len\n                                thickness: annotationObject.thickness, borderStyle: annotationObject.borderStyle, borderDashArray: annotationObject.borderDashArray.toString(), rotateAngle: parseFloat(annotationObject.rotateAngle.split('Angle')[1]),\n                                isCloudShape: annotationObject.isCloudShape, cloudIntensity: annotationObject.cloudIntensity, taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadEnd), sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadStart),\n                                // eslint-disable-next-line max-len\n                                vertexPoints: vPoints, bounds: { x: annotationObject.bounds.left, y: annotationObject.bounds.top, width: annotationObject.bounds.width, height: annotationObject.bounds.height }, leaderHeight: annotationObject.leaderLength,\n                                pageIndex: pageNumber, annotName: annotationObject.annotName, comments: annotationObject.comments, review: annotationObject.review,\n                                measureType: this.getMeasureType(annotationObject),\n                                // eslint-disable-next-line max-len\n                                labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n                                fontColor: annotation.FontColor, labelBorderColor: annotation.LabelBorderColor, fontSize: annotation.FontSize,\n                                labelBounds: annotation.LabelBounds, annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n                                annotationSettings: annotationObject.annotationSettings, annotationAddMode: annotation.annotationAddMode,\n                                isPrint: isPrint, isCommentLock: annotationObject.isCommentLock\n                            };\n                            this.pdfViewer.annotation.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n                            if (this.isAddAnnotationProgramatically) {\n                                var settings = {\n                                    opacity: annot.opacity, strokeColor: annot.strokeColor, thickness: annot.thickness, modifiedDate: annot.modifiedDate,\n                                    width: annot.bounds.width, height: annot.bounds.height\n                                };\n                                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, annotation.ShapeAnnotationType, annot.bounds, settings);\n                            }\n                            this.pdfViewer.add(annot);\n                        }\n                    }\n                }\n            }\n            else if (shapeAnnotations.shapeAnnotationType) {\n                var annotationObject = this.createAnnotationObject(shapeAnnotations);\n                this.pdfViewer.annotationModule.isFormFieldShape = false;\n                this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n                this.pdfViewer.annotationModule.triggerAnnotationAdd(shapeAnnotations);\n            }\n        }\n    };\n    /**\n     * @param annotation\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getSettings = function (annotation) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if (annotation.AnnotationSelectorSettings) {\n            selector = annotation.AnnotationSelectorSettings;\n        }\n        else {\n            selector = this.getSelector(annotation.Subject);\n        }\n        return selector;\n    };\n    /**\n     * @param type\n     * @private\n     */\n    MeasureAnnotation.prototype.setAnnotationType = function (type) {\n        var author = 'Guest';\n        var subject = \"\";\n        this.updateMeasureproperties();\n        this.pdfViewerBase.disableTextSelectionMode();\n        switch (type) {\n            case 'Distance':\n                this.currentAnnotationMode = 'Distance';\n                var modifiedDateDist = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.distanceSettings.author ? this.pdfViewer.distanceSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.distanceSettings.subject ? this.pdfViewer.distanceSettings.subject : 'Distance calculation';\n                this.pdfViewer.drawingObject = {\n                    sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceStartHead),\n                    taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceEndHead), measureType: 'Distance',\n                    fillColor: this.distanceFillColor, notes: '', strokeColor: this.distanceStrokeColor, leaderHeight: this.leaderLength,\n                    opacity: this.distanceOpacity, thickness: this.distanceThickness, borderDashArray: this.distanceDashArray.toString(),\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Distance', author: author, subject: subject, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Distance';\n                break;\n            case 'Perimeter':\n                this.currentAnnotationMode = 'Perimeter';\n                var modifiedDatePeri = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.perimeterSettings.author ? this.pdfViewer.perimeterSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.perimeterSettings.subject ? this.pdfViewer.perimeterSettings.subject : 'Perimeter calculation';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'LineWidthArrowHead', fillColor: this.perimeterFillColor, notes: '', strokeColor: this.perimeterStrokeColor, opacity: this.perimeterOpacity,\n                    thickness: this.perimeterThickness, sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterStartHead),\n                    // eslint-disable-next-line max-len\n                    taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterEndHead), measureType: 'Perimeter', borderDashArray: this.perimeterDashArray.toString(),\n                    author: author, subject: subject, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Perimeter';\n                break;\n            case 'Area':\n                this.currentAnnotationMode = 'Area';\n                var modifiedDateArea = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.areaSettings.author ? this.pdfViewer.areaSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.areaSettings.subject ? this.pdfViewer.areaSettings.subject : 'Area calculation';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Polygon', fillColor: this.areaFillColor, notes: '', strokeColor: this.areaStrokeColor,\n                    thickness: this.areaThickness, opacity: this.areaOpacity, measureType: 'Area',\n                    modifiedDate: modifiedDateArea, borderStyle: '', borderDashArray: '0',\n                    author: author, subject: subject, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Polygon';\n                break;\n            case 'Radius':\n                this.currentAnnotationMode = 'Radius';\n                var modifiedDateRad = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.radiusSettings.author ? this.pdfViewer.radiusSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.radiusSettings.subject ? this.pdfViewer.radiusSettings.subject : 'Radius calculation';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Radius', fillColor: this.radiusFillColor, notes: '', strokeColor: this.radiusStrokeColor, opacity: this.radiusOpacity,\n                    thickness: this.radiusThickness, measureType: 'Radius', modifiedDate: modifiedDateRad, borderStyle: '', borderDashArray: '0',\n                    author: author, subject: subject, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'DrawTool';\n                break;\n            case 'Volume':\n                this.currentAnnotationMode = 'Volume';\n                var modifiedDateVol = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.volumeSettings.author ? this.pdfViewer.volumeSettings.author : 'Guest';\n                subject = (this.pdfViewer.annotationSettings.subject !== \"\" && !isNullOrUndefined(this.pdfViewer.annotationSettings.subject)) ? this.pdfViewer.annotationSettings.subject : this.pdfViewer.volumeSettings.subject ? this.pdfViewer.volumeSettings.subject : 'Volume calculation';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Polygon', notes: '', fillColor: this.volumeFillColor, strokeColor: this.volumeStrokeColor,\n                    opacity: this.volumeOpacity, thickness: this.volumeThickness, measureType: 'Volume',\n                    modifiedDate: modifiedDateVol, borderStyle: '', borderDashArray: '0',\n                    author: author, subject: subject, isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Polygon';\n                break;\n        }\n    };\n    MeasureAnnotation.prototype.updateMeasureproperties = function () {\n        this.distanceFillColor = this.pdfViewer.distanceSettings.fillColor ? this.pdfViewer.distanceSettings.fillColor : '#ff0000';\n        this.distanceStrokeColor = this.pdfViewer.distanceSettings.strokeColor ? this.pdfViewer.distanceSettings.strokeColor : '#ff0000';\n        this.distanceOpacity = this.pdfViewer.distanceSettings.opacity ? this.pdfViewer.distanceSettings.opacity : 1;\n        this.distanceThickness = this.pdfViewer.distanceSettings.thickness ? this.pdfViewer.distanceSettings.thickness : 1;\n        this.distanceDashArray = this.pdfViewer.distanceSettings.borderDashArray ? this.pdfViewer.distanceSettings.borderDashArray : 0;\n        this.leaderLength = this.pdfViewer.distanceSettings.leaderLength != null ? this.pdfViewer.distanceSettings.leaderLength : 40;\n        // eslint-disable-next-line max-len\n        this.distanceStartHead = this.pdfViewer.distanceSettings.lineHeadStartStyle ? this.pdfViewer.distanceSettings.lineHeadStartStyle : 'Closed';\n        this.distanceEndHead = this.pdfViewer.distanceSettings.lineHeadEndStyle ? this.pdfViewer.distanceSettings.lineHeadEndStyle : 'Closed';\n        this.perimeterFillColor = this.pdfViewer.perimeterSettings.fillColor ? this.pdfViewer.perimeterSettings.fillColor : '#ffffff00';\n        this.perimeterStrokeColor = this.pdfViewer.perimeterSettings.strokeColor ? this.pdfViewer.perimeterSettings.strokeColor : '#ff0000';\n        this.perimeterOpacity = this.pdfViewer.perimeterSettings.opacity ? this.pdfViewer.perimeterSettings.opacity : 1;\n        this.perimeterThickness = this.pdfViewer.perimeterSettings.thickness ? this.pdfViewer.perimeterSettings.thickness : 1;\n        this.perimeterDashArray = this.pdfViewer.perimeterSettings.borderDashArray ? this.pdfViewer.perimeterSettings.borderDashArray : 0;\n        // eslint-disable-next-line max-len\n        this.perimeterStartHead = this.pdfViewer.perimeterSettings.lineHeadStartStyle ? this.pdfViewer.perimeterSettings.lineHeadStartStyle : 'Open';\n        this.perimeterEndHead = this.pdfViewer.perimeterSettings.lineHeadEndStyle ? this.pdfViewer.perimeterSettings.lineHeadEndStyle : 'Open';\n        this.areaFillColor = this.pdfViewer.areaSettings.fillColor ? this.pdfViewer.areaSettings.fillColor : '#ffffff00';\n        this.areaStrokeColor = this.pdfViewer.areaSettings.strokeColor ? this.pdfViewer.areaSettings.strokeColor : '#ff0000';\n        this.areaOpacity = this.pdfViewer.areaSettings.opacity ? this.pdfViewer.areaSettings.opacity : 1;\n        this.areaThickness = this.pdfViewer.areaSettings.thickness ? this.pdfViewer.areaSettings.thickness : 1;\n        this.radiusFillColor = this.pdfViewer.radiusSettings.fillColor ? this.pdfViewer.radiusSettings.fillColor : '#ffffff00';\n        this.radiusStrokeColor = this.pdfViewer.radiusSettings.strokeColor ? this.pdfViewer.radiusSettings.strokeColor : '#ff0000';\n        this.radiusOpacity = this.pdfViewer.radiusSettings.opacity ? this.pdfViewer.radiusSettings.opacity : 1;\n        this.radiusThickness = this.pdfViewer.radiusSettings.thickness ? this.pdfViewer.radiusSettings.thickness : 1;\n        this.volumeFillColor = this.pdfViewer.volumeSettings.fillColor ? this.pdfViewer.volumeSettings.fillColor : '#ffffff00';\n        this.volumeStrokeColor = this.pdfViewer.volumeSettings.strokeColor ? this.pdfViewer.volumeSettings.strokeColor : '#ff0000';\n        this.volumeOpacity = this.pdfViewer.volumeSettings.opacity ? this.pdfViewer.volumeSettings.opacity : 1;\n        this.volumeThickness = this.pdfViewer.volumeSettings.thickness ? this.pdfViewer.volumeSettings.thickness : 1;\n        this.unit = this.pdfViewer.measurementSettings.conversionUnit.toLowerCase();\n        this.displayUnit = this.pdfViewer.measurementSettings.displayUnit.toLowerCase();\n        this.ratio = this.pdfViewer.measurementSettings.scaleRatio;\n        this.volumeDepth = this.pdfViewer.measurementSettings.depth;\n        this.scaleRatioString = '1 ' + this.unit + ' = ' + this.ratio.toString() + ' ' + this.displayUnit;\n    };\n    MeasureAnnotation.prototype.createAnnotationObject = function (annotationModel) {\n        var bound;\n        var labelBound;\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        // eslint-disable-next-line max-len\n        var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('shape_measure', (annotationModel.pageIndex + 1), annotationModel.measureType);\n        if (commentsDivid) {\n            document.getElementById(commentsDivid).id = annotationName;\n        }\n        annotationModel.annotName = annotationName;\n        annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationModel.subject);\n        this.pdfViewer.annotation.stickyNotesAnnotationModule.addTextToComments(annotationName, annotationModel.notes);\n        if (annotationModel.wrapper.bounds) {\n            bound = {\n                // eslint-disable-next-line max-len\n                left: annotationModel.wrapper.bounds.x, top: annotationModel.wrapper.bounds.y, height: annotationModel.wrapper.bounds.height, width: annotationModel.wrapper.bounds.width,\n                right: annotationModel.wrapper.bounds.right, bottom: annotationModel.wrapper.bounds.bottom\n            };\n            labelBound = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationModel.wrapper.bounds);\n        }\n        else {\n            bound = { left: 0, top: 0, height: 0, width: 0, right: 0, bottom: 0 };\n            labelBound = { left: 0, top: 0, height: 0, width: 0, right: 0, bottom: 0 };\n        }\n        // eslint-disable-next-line radix\n        var borderDashArray = parseInt(annotationModel.borderDashArray);\n        borderDashArray = isNaN(borderDashArray) ? 0 : borderDashArray;\n        // eslint-disable-next-line max-len\n        var measure = { ratio: this.scaleRatioString, x: [this.createNumberFormat('x')], distance: [this.createNumberFormat('d')], area: [this.createNumberFormat('a')] };\n        if (annotationModel.measureType === 'Volume') {\n            measure.depth = this.volumeDepth;\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(annotationModel, true);\n        // eslint-disable-next-line\n        var allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotationModel);\n        annotationModel.isPrint = annotationSettings.isPrint;\n        var setting = this.pdfViewer.shapeLabelSettings;\n        var labelSettings = { borderColor: annotationModel.strokeColor, fillColor: annotationModel.fillColor, fontColor: annotationModel.fontColor,\n            fontSize: annotationModel.fontSize, labelContent: annotationModel.labelContent, labelHeight: setting.labelHeight, labelWidth: setting.labelMaxWidth, opacity: annotationModel.opacity\n        };\n        return {\n            // eslint-disable-next-line max-len\n            id: annotationModel.id, shapeAnnotationType: this.getShapeAnnotType(annotationModel.measureType), author: annotationModel.author, allowedInteractions: allowedInteractions,\n            subject: annotationModel.subject, note: annotationModel.notes, strokeColor: annotationModel.strokeColor,\n            fillColor: annotationModel.fillColor, opacity: annotationModel.opacity, thickness: annotationModel.thickness,\n            // eslint-disable-next-line max-len\n            borderStyle: annotationModel.borderStyle, borderDashArray: borderDashArray, bounds: bound,\n            // eslint-disable-next-line max-len\n            modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n            rotateAngle: 'RotateAngle' + annotationModel.rotateAngle, isCloudShape: annotationModel.isCloudShape, cloudIntensity: annotationModel.cloudIntensity,\n            // eslint-disable-next-line max-len\n            vertexPoints: annotationModel.vertexPoints, lineHeadStart: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.sourceDecoraterShapes),\n            lineHeadEnd: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.taregetDecoraterShapes), rectangleDifference: [], isLocked: annotationSettings.isLock,\n            // eslint-disable-next-line max-len\n            leaderLength: annotationModel.leaderHeight, leaderLineExtension: 2, leaderLineOffset: 0, calibrate: measure, caption: true, captionPosition: 'Top',\n            indent: this.getIndent(annotationModel.measureType), annotName: annotationName, comments: [], review: { state: '', stateModel: '', modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(), author: annotationModel.author },\n            // eslint-disable-next-line max-len\n            labelContent: annotationModel.labelContent, enableShapeLabel: annotationModel.enableShapeLabel, labelFillColor: annotationModel.labelFillColor,\n            labelBorderColor: annotationModel.labelBorderColor, fontColor: annotationModel.fontColor, fontSize: annotationModel.fontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: labelBound, annotationSelectorSettings: this.getSelector(annotationModel.subject), labelSettings: labelSettings, annotationSettings: annotationSettings,\n            customData: this.pdfViewer.annotation.getMeasureData(annotationModel.subject), isPrint: annotationModel.isPrint, isCommentLock: annotationModel.isCommentLock, isAnnotationRotated: false\n        };\n    };\n    MeasureAnnotation.prototype.getSelector = function (type) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if ((type === 'Distance calculation') && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.distanceSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Perimeter calculation') && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.perimeterSettings.annotationSelectorSettings;\n            // eslint-disable-next-line max-len\n        }\n        else if ((type === 'Area calculation') && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.areaSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Radius calculation') && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.radiusSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Volume calculation') && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.volumeSettings.annotationSelectorSettings;\n        }\n        return selector;\n    };\n    MeasureAnnotation.prototype.getShapeAnnotType = function (measureType) {\n        var annotationType;\n        switch (measureType) {\n            case 'Distance':\n                annotationType = 'Line';\n                break;\n            case 'Perimeter':\n                annotationType = 'Polyline';\n                break;\n            case 'Area':\n            case 'Volume':\n                annotationType = 'Polygon';\n                break;\n            case 'Radius':\n                annotationType = 'Circle';\n                break;\n        }\n        return annotationType;\n    };\n    MeasureAnnotation.prototype.getShapeType = function (shape) {\n        var shapeType;\n        if (shape.shapeAnnotationType === 'Line') {\n            shapeType = 'Distance';\n        }\n        else if (shape.shapeAnnotationType === 'Polyline') {\n            shapeType = 'LineWidthArrowHead';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n            shapeType = 'Polygon';\n            // eslint-disable-next-line max-len\n        }\n        else if ((shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius') || shape.shapeAnnotationType === 'Circle') {\n            shapeType = 'Radius';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n            shapeType = 'Polygon';\n        }\n        return shapeType;\n    };\n    MeasureAnnotation.prototype.getMeasureType = function (shape) {\n        var measureType;\n        if (shape.shapeAnnotationType === 'Line') {\n            measureType = 'Distance';\n        }\n        else if (shape.shapeAnnotationType === 'Polyline') {\n            measureType = 'Perimeter';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n            measureType = 'Area';\n            // eslint-disable-next-line max-len\n        }\n        else if ((shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius') || shape.shapeAnnotationType === 'Circle') {\n            measureType = 'Radius';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n            measureType = 'Volume';\n        }\n        return measureType;\n    };\n    MeasureAnnotation.prototype.getIndent = function (measureType) {\n        var indent;\n        switch (measureType) {\n            case 'Distance':\n                indent = 'LineDimension';\n                break;\n            case 'Perimeter':\n                indent = 'PolyLineDimension';\n                break;\n            case 'Area':\n                indent = 'PolygonDimension';\n                break;\n            case 'Radius':\n                indent = 'PolygonRadius';\n                break;\n            case 'Volume':\n                indent = 'PolygonVolume';\n                break;\n        }\n        return indent;\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getNumberFormatArray = function (list) {\n        // eslint-disable-next-line\n        var numberFormatArray = new Array();\n        if (list) {\n            for (var i = 0; i < list.length; i++) {\n                // eslint-disable-next-line max-len\n                numberFormatArray[i] = { unit: list[i].Unit, fractionalType: list[i].FractionalType, conversionFactor: list[i].ConversionFactor, denominator: list[i].Denominator, formatDenominator: list[i].FormatDenominator };\n            }\n        }\n        return numberFormatArray;\n    };\n    MeasureAnnotation.prototype.createNumberFormat = function (type) {\n        var cFactor = 1;\n        var unit = this.displayUnit;\n        if (type === 'x') {\n            cFactor = this.getFactor(this.unit);\n        }\n        if (type === 'a') {\n            unit = 'sq ' + this.displayUnit;\n        }\n        // eslint-disable-next-line max-len\n        var numberFormat = { unit: unit, fractionalType: 'D', conversionFactor: cFactor, denominator: 100, formatDenominator: false };\n        return numberFormat;\n    };\n    /**\n     * @private\n     */\n    MeasureAnnotation.prototype.saveMeasureShapeAnnotations = function () {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n        }\n        // eslint-disable-next-line\n        var annotations = new Array();\n        for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n            annotations[j] = [];\n        }\n        if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n            var annotationCollection = JSON.parse(storeObject);\n            for (var i = 0; i < annotationCollection.length; i++) {\n                var newArray = [];\n                var pageAnnotationObject = annotationCollection[i];\n                if (pageAnnotationObject) {\n                    for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n                        this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n                        if (this.pdfViewerBase.isJsonExported) {\n                            if (pageAnnotationObject.annotations[z].isAnnotationRotated) {\n                                pageAnnotationObject.annotations[z].bounds = this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex);\n                                pageAnnotationObject.annotations[z].vertexPoints = this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex);\n                            }\n                            else {\n                                var pageDetails = this.pdfViewerBase.pageSize[pageAnnotationObject.pageIndex];\n                                if (pageDetails) {\n                                    pageAnnotationObject.annotations[z].annotationRotation = pageDetails.rotation;\n                                }\n                            }\n                        }\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n                        var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n                        pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n                        var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n                        pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex));\n                        if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n                        }\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].calibrate = this.getStringifiedMeasure(pageAnnotationObject.annotations[z].calibrate);\n                        if (pageAnnotationObject.annotations[z].enableShapeLabel === true) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].labelBounds = JSON.stringify(this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(JSON.parse(pageAnnotationObject.annotations[z].bounds), pageAnnotationObject.pageIndex));\n                            var labelFillColorString = pageAnnotationObject.annotations[z].labelFillColor;\n                            pageAnnotationObject.annotations[z].labelFillColor = JSON.stringify(this.getRgbCode(labelFillColorString));\n                            var labelBorderColorString = pageAnnotationObject.annotations[z].labelBorderColor;\n                            pageAnnotationObject.annotations[z].labelBorderColor = JSON.stringify(this.getRgbCode(labelBorderColorString));\n                            pageAnnotationObject.annotations[z].labelSettings.fillColor = labelFillColorString;\n                            var fontColorString = pageAnnotationObject.annotations[z].labelSettings.fontColor;\n                            pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n                        }\n                    }\n                    newArray = pageAnnotationObject.annotations;\n                }\n                annotations[pageAnnotationObject.pageIndex] = newArray;\n            }\n        }\n        return JSON.stringify(annotations);\n    };\n    /**\n     * @private\n     */\n    MeasureAnnotation.prototype.createScaleRatioWindow = function () {\n        var _this = this;\n        if (!isBlazor()) {\n            var elementID = this.pdfViewer.element.id;\n            // eslint-disable-next-line max-len\n            var dialogDiv = createElement('div', { id: elementID + '_scale_ratio_window', className: 'e-pv-scale-ratio-window' });\n            this.pdfViewerBase.pageContainer.appendChild(dialogDiv);\n            var contentElement = this.createRatioUI();\n            this.scaleRatioDialog = new Dialog({\n                showCloseIcon: true, closeOnEscape: false, isModal: true, header: this.pdfViewer.localeObj.getConstant('Scale Ratio'),\n                target: this.pdfViewer.element, content: contentElement, close: function () {\n                    _this.sourceTextBox.destroy();\n                    _this.convertUnit.destroy();\n                    _this.destTextBox.destroy();\n                    _this.dispUnit.destroy();\n                    _this.scaleRatioDialog.destroy();\n                    var dialogElement = _this.pdfViewerBase.getElement('_scale_ratio_window');\n                    dialogElement.parentElement.removeChild(dialogElement);\n                }\n            });\n            if (!Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                this.scaleRatioDialog.buttons = [\n                    // eslint-disable-next-line max-len\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('OK'), isPrimary: true }, click: this.onOkClicked.bind(this) },\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('Cancel') }, click: this.onCancelClicked.bind(this) }\n                ];\n            }\n            else {\n                this.scaleRatioDialog.buttons = [\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('Cancel') }, click: this.onCancelClicked.bind(this) },\n                    // eslint-disable-next-line max-len\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('OK'), isPrimary: true }, click: this.onOkClicked.bind(this) }\n                ];\n            }\n            if (this.pdfViewer.enableRtl) {\n                this.scaleRatioDialog.enableRtl = true;\n            }\n            this.scaleRatioDialog.appendTo(dialogDiv);\n            this.convertUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.unit)).outerHTML;\n            this.dispUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n            this.depthUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n        }\n        else {\n            this.pdfViewer._dotnetInstance.invokeMethodAsync('OpenScaleRatioDialog');\n        }\n    };\n    MeasureAnnotation.prototype.createRatioUI = function () {\n        var element = createElement('div');\n        var elementID = this.pdfViewer.element.id;\n        // eslint-disable-next-line max-len\n        var items = [{ text: this.pdfViewer.localeObj.getConstant('pt'), label: 'pt' }, { text: this.pdfViewer.localeObj.getConstant('in'), label: 'in' }, { text: this.pdfViewer.localeObj.getConstant('mm'), label: 'mm' }, { text: this.pdfViewer.localeObj.getConstant('cm'), label: 'cm' }, { text: this.pdfViewer.localeObj.getConstant('p'), label: 'p' }, { text: this.pdfViewer.localeObj.getConstant('ft'), label: 'ft' }, { text: this.pdfViewer.localeObj.getConstant('ft_in'), label: 'ft_in' }, { text: this.pdfViewer.localeObj.getConstant('m'), label: 'm' }];\n        var labelText = createElement('div', { id: elementID + '_scale_ratio_label', className: 'e-pv-scale-ratio-text' });\n        labelText.textContent = this.pdfViewer.localeObj.getConstant('Scale Ratio');\n        element.appendChild(labelText);\n        var sourceContainer = createElement('div', { id: elementID + '_scale_src_container' });\n        element.appendChild(sourceContainer);\n        // eslint-disable-next-line max-len\n        var srcInputElement = this.createInputElement('input', 'e-pv-scale-ratio-src-input', elementID + '_src_input', sourceContainer);\n        this.sourceTextBox = new NumericTextBox({ value: this.ratio ? this.ratio : 1, format: '##', cssClass: 'e-pv-scale-ratio-src-input', min: 1, max: 100 }, srcInputElement);\n        // eslint-disable-next-line max-len\n        var srcUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-src-unit', elementID + '_src_unit', sourceContainer);\n        this.convertUnit = new DropDownButton({ items: items, cssClass: 'e-pv-scale-ratio-src-unit' }, srcUnitElement);\n        this.convertUnit.select = this.convertUnitSelect.bind(this);\n        var destinationContainer = createElement('div', { id: elementID + '_scale_dest_container' });\n        // eslint-disable-next-line max-len\n        var destInputElement = this.createInputElement('input', 'e-pv-scale-ratio-dest-input', elementID + '_dest_input', destinationContainer);\n        this.destTextBox = new NumericTextBox({ value: 1, format: '##', cssClass: 'e-pv-scale-ratio-dest-input', min: 1, max: 100 }, destInputElement);\n        // eslint-disable-next-line max-len\n        var destUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-dest-unit', elementID + '_dest_unit', destinationContainer);\n        this.dispUnit = new DropDownButton({ items: items, cssClass: 'e-pv-scale-ratio-dest-unit' }, destUnitElement);\n        this.dispUnit.select = this.dispUnitSelect.bind(this);\n        element.appendChild(destinationContainer);\n        var depthLabelText = createElement('div', { id: elementID + '_depth_label', className: 'e-pv-depth-text' });\n        depthLabelText.textContent = this.pdfViewer.localeObj.getConstant('Depth');\n        element.appendChild(depthLabelText);\n        var depthContainer = createElement('div', { id: elementID + '_depth_container' });\n        element.appendChild(depthContainer);\n        // eslint-disable-next-line max-len\n        var depthInputElement = this.createInputElement('input', 'e-pv-depth-input', elementID + '_depth_input', depthContainer);\n        this.depthTextBox = new NumericTextBox({ value: this.volumeDepth, format: '##', cssClass: 'e-pv-depth-input', min: 1 }, depthInputElement);\n        // eslint-disable-next-line max-len\n        var depthUnitElement = this.createInputElement('button', 'e-pv-depth-unit', elementID + '_depth_unit', depthContainer);\n        this.depthUnit = new DropDownButton({ items: items, cssClass: 'e-pv-depth-unit' }, depthUnitElement);\n        this.depthUnit.select = this.depthUnitSelect.bind(this);\n        return element;\n    };\n    MeasureAnnotation.prototype.convertUnitSelect = function (args) {\n        this.convertUnit.content = this.createContent(args.item.text).outerHTML;\n    };\n    MeasureAnnotation.prototype.dispUnitSelect = function (args) {\n        this.dispUnit.content = this.createContent(args.item.text).outerHTML;\n        this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n    };\n    MeasureAnnotation.prototype.depthUnitSelect = function (args) {\n        this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n    };\n    MeasureAnnotation.prototype.createContent = function (text) {\n        var divElement = createElement('div', { className: 'e-pv-scale-unit-content' });\n        divElement.textContent = text;\n        return divElement;\n    };\n    MeasureAnnotation.prototype.createInputElement = function (input, className, idString, parentElement) {\n        var container = createElement('div', { id: idString + '_container', className: className + '-container' });\n        var textBoxInput = createElement(input, { id: idString });\n        if (input === 'input') {\n            textBoxInput.type = 'text';\n        }\n        container.appendChild(textBoxInput);\n        parentElement.appendChild(container);\n        return textBoxInput;\n    };\n    /**\n     * @private\n     */\n    MeasureAnnotation.prototype.onOkClicked = function () {\n        if (isBlazor()) {\n            // eslint-disable-next-line\n            var unitElement = document.querySelector('#' + this.pdfViewer.element.id + '_src_unit');\n            // eslint-disable-next-line\n            var displayElement = document.querySelector('#' + this.pdfViewer.element.id + '_dest_unit');\n            // eslint-disable-next-line\n            var sourceTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_ratio_input');\n            // eslint-disable-next-line\n            var destTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_dest_input');\n            // eslint-disable-next-line\n            var depthTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_depth_input');\n            if (unitElement && displayElement && sourceTextBox && destTextBox && depthTextBox) {\n                this.unit = unitElement.value;\n                this.displayUnit = displayElement.value;\n                // eslint-disable-next-line\n                this.ratio = parseInt(destTextBox.value) / parseInt(sourceTextBox.value);\n                // eslint-disable-next-line\n                this.volumeDepth = parseInt(depthTextBox.value);\n            }\n            // eslint-disable-next-line\n            this.scaleRatioString = parseInt(sourceTextBox.value) + ' ' + this.unit + ' = ' + parseInt(destTextBox.value) + ' ' + this.displayUnit;\n            this.updateMeasureValues(this.scaleRatioString, this.displayUnit, this.unit, this.volumeDepth);\n        }\n        else {\n            this.unit = this.getContent(this.convertUnit.content);\n            this.displayUnit = this.getContent(this.dispUnit.content);\n            this.ratio = this.destTextBox.value / this.sourceTextBox.value;\n            this.volumeDepth = this.depthTextBox.value;\n            this.scaleRatioString = this.sourceTextBox.value + ' ' + this.unit + ' = ' + this.destTextBox.value + ' ' + this.displayUnit;\n            this.scaleRatioDialog.hide();\n            var originalUnit = void 0;\n            var originalDisplayUnit = void 0;\n            originalUnit = this.restoreUnit(this.convertUnit);\n            originalDisplayUnit = this.restoreUnit(this.dispUnit);\n            this.updateMeasureValues(this.scaleRatioString, originalDisplayUnit, originalUnit, this.volumeDepth);\n        }\n    };\n    MeasureAnnotation.prototype.restoreUnit = function (dropdownObject) {\n        var calibUnit;\n        for (var i = 0; i < dropdownObject.items.length; i++) {\n            var convertUnitItem = dropdownObject.items[i];\n            if (this.unit === convertUnitItem.text) {\n                calibUnit = convertUnitItem.label;\n            }\n        }\n        return calibUnit;\n    };\n    /**\n     * @param ratio\n     * @param displayUnit\n     * @param conversionUnit\n     * @param depth\n     * @private\n     */\n    MeasureAnnotation.prototype.updateMeasureValues = function (ratio, displayUnit, conversionUnit, depth) {\n        this.scaleRatioString = ratio;\n        this.displayUnit = displayUnit;\n        this.unit = conversionUnit;\n        this.volumeDepth = depth;\n        for (var i = 0; i < this.pdfViewerBase.pageCount; i++) {\n            var pageAnnotations = this.getAnnotations(i, null);\n            if (pageAnnotations) {\n                for (var j = 0; j < pageAnnotations.length; j++) {\n                    pageAnnotations = this.getAnnotations(i, null);\n                    var measureObject = pageAnnotations[j];\n                    if (!measureObject.annotationSettings.isLock) {\n                        measureObject.calibrate.ratio = ratio;\n                        measureObject.calibrate.x[0].unit = displayUnit;\n                        measureObject.calibrate.distance[0].unit = displayUnit;\n                        measureObject.calibrate.area[0].unit = displayUnit;\n                        measureObject.calibrate.x[0].conversionFactor = this.getFactor(conversionUnit);\n                        if (measureObject.indent === 'PolygonVolume') {\n                            measureObject.calibrate.depth = depth;\n                        }\n                        pageAnnotations[j] = measureObject;\n                        this.manageAnnotations(pageAnnotations, i);\n                        this.pdfViewer.annotation.updateCalibrateValues(this.getAnnotationBaseModel(measureObject.id));\n                    }\n                }\n            }\n            this.pdfViewer.annotation.renderAnnotations(i, null, null, null, null, false);\n        }\n    };\n    MeasureAnnotation.prototype.getAnnotationBaseModel = function (id) {\n        var annotationBase = null;\n        for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n            if (id === this.pdfViewer.annotations[i].id) {\n                annotationBase = this.pdfViewer.annotations[i];\n                break;\n            }\n        }\n        return annotationBase;\n    };\n    MeasureAnnotation.prototype.getContent = function (unit) {\n        return unit.split('</div>')[0].split('\">')[1];\n    };\n    /**\n     * @param value\n     * @param currentAnnot\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.setConversion = function (value, currentAnnot) {\n        // eslint-disable-next-line\n        var values;\n        if (currentAnnot) {\n            var pageIndex = currentAnnot.pageIndex;\n            if (currentAnnot.id === 'diagram_helper') {\n                pageIndex = currentAnnot.pageIndex ? currentAnnot.pageIndex : this.pdfViewerBase.activeElements.activePageID;\n                currentAnnot = this.getCurrentObject(pageIndex, null, currentAnnot.annotName);\n            }\n            if (currentAnnot) {\n                values = this.getCurrentValues(currentAnnot.id, pageIndex);\n            }\n            else {\n                values = this.getCurrentValues();\n            }\n        }\n        else {\n            values = this.getCurrentValues();\n        }\n        var scaledValue = value * values.ratio;\n        return this.convertPointToUnits(values.factor, scaledValue, values.unit);\n    };\n    MeasureAnnotation.prototype.onCancelClicked = function () {\n        this.scaleRatioDialog.hide();\n    };\n    /**\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewlyAdded) {\n        if (!isNullOrUndefined(annotationBase.formFieldAnnotationType) && annotationBase.formFieldAnnotationType !== \"\") {\n            this.pdfViewer.annotationModule.isFormFieldShape = true;\n        }\n        else {\n            this.pdfViewer.annotationModule.isFormFieldShape = false;\n        }\n        var currentAnnotObject = null;\n        var isEdited = false;\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations != null && annotationBase) {\n            for (var i = 0; i < pageAnnotations.length; i++) {\n                if (annotationBase.id === pageAnnotations[i].id) {\n                    if (property === 'bounds') {\n                        this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationModifiedDate(annotationBase, true);\n                        if (pageAnnotations[i].shapeAnnotationType === 'Line' || pageAnnotations[i].shapeAnnotationType === 'Polyline') {\n                            pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        else if (pageAnnotations[i].shapeAnnotationType === 'Polygon') {\n                            pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        else {\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        if (pageAnnotations[i].enableShapeLabel === true && annotationBase.wrapper) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].labelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationBase.wrapper.bounds);\n                        }\n                    }\n                    else if (property === 'fill') {\n                        pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n                        if (this.pdfViewer.enableShapeLabel) {\n                            pageAnnotations[i].labelFillColor = annotationBase.wrapper.children[0].style.fill;\n                        }\n                    }\n                    else if (property === 'stroke') {\n                        pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n                    }\n                    else if (property === 'opacity') {\n                        pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n                    }\n                    else if (property === 'thickness') {\n                        pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n                    }\n                    else if (property === 'dashArray') {\n                        pageAnnotations[i].borderDashArray = annotationBase.wrapper.children[0].style.strokeDashArray;\n                        pageAnnotations[i].borderStyle = annotationBase.borderStyle;\n                    }\n                    else if (property === 'startArrow') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].lineHeadStart = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.sourceDecoraterShapes);\n                    }\n                    else if (property === 'endArrow') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].lineHeadEnd = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.taregetDecoraterShapes);\n                    }\n                    else if (property === 'leaderLength') {\n                        pageAnnotations[i].leaderLength = annotationBase.leaderHeight;\n                    }\n                    else if (property === 'notes') {\n                        pageAnnotations[i].note = annotationBase.notes;\n                        if (pageAnnotations[i].enableShapeLabel === true) {\n                            isEdited = true;\n                            pageAnnotations[i].labelContent = annotationBase.notes;\n                        }\n                    }\n                    else if (property === 'delete') {\n                        currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n                        break;\n                    }\n                    else if (property === 'labelContent') {\n                        pageAnnotations[i].note = annotationBase.labelContent;\n                        pageAnnotations[i].labelContent = annotationBase.labelContent;\n                        break;\n                    }\n                    else if (property === 'fontColor') {\n                        pageAnnotations[i].fontColor = annotationBase.fontColor;\n                    }\n                    else if (property === 'fontSize') {\n                        pageAnnotations[i].fontSize = annotationBase.fontSize;\n                    }\n                    // eslint-disable-next-line max-len\n                    pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                    this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n                }\n            }\n            this.manageAnnotations(pageAnnotations, pageNumber);\n        }\n        if (!isNewlyAdded && isEdited) {\n            this.pdfViewerBase.updateDocumentEditedProperty(true);\n        }\n        return currentAnnotObject;\n    };\n    /**\n     * @param pageNumber\n     * @param annotationBase\n     * @param pageNumber\n     * @param annotationBase\n     * @private\n     */\n    MeasureAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations) {\n            pageAnnotations.push(annotationBase);\n        }\n        this.manageAnnotations(pageAnnotations, pageNumber);\n    };\n    MeasureAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            if (!this.pdfViewerBase.isStorageExceed) {\n                window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n            }\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n            if (annotObject[index]) {\n                annotObject[index].annotations = pageAnnotations;\n            }\n            var annotationStringified = JSON.stringify(annotObject);\n            if (this.pdfViewerBase.isStorageExceed) {\n                this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'] = annotationStringified;\n            }\n            else {\n                window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_shape_measure', annotationStringified);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n        // eslint-disable-next-line\n        var annotationCollection;\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n            if (annotObject[index]) {\n                annotationCollection = annotObject[index].annotations;\n            }\n            else {\n                annotationCollection = shapeAnnotations;\n            }\n        }\n        else {\n            annotationCollection = shapeAnnotations;\n        }\n        return annotationCollection;\n    };\n    MeasureAnnotation.prototype.getCurrentObject = function (pageNumber, id, annotName) {\n        var currentAnnotObject = null;\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations != null) {\n            for (var i = 0; i < pageAnnotations.length; i++) {\n                if (id) {\n                    if (id === pageAnnotations[i].id) {\n                        currentAnnotObject = pageAnnotations[i];\n                        break;\n                    }\n                }\n                else if (annotName) {\n                    if (annotName === pageAnnotations[i].annotName) {\n                        currentAnnotObject = pageAnnotations[i];\n                        break;\n                    }\n                }\n            }\n        }\n        return currentAnnotObject;\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getCurrentValues = function (id, pageNumber) {\n        var ratio;\n        var unit;\n        var factor;\n        var depth;\n        if (id && !isNaN(pageNumber)) {\n            var currentAnnotObject = this.getCurrentObject(pageNumber, id);\n            if (currentAnnotObject) {\n                ratio = this.getCurrentRatio(currentAnnotObject.calibrate.ratio);\n                unit = currentAnnotObject.calibrate.x[0].unit;\n                factor = currentAnnotObject.calibrate.x[0].conversionFactor;\n                depth = currentAnnotObject.calibrate.depth;\n            }\n            else {\n                ratio = this.ratio;\n                unit = this.displayUnit;\n                factor = this.getFactor(this.unit);\n                depth = this.volumeDepth;\n            }\n        }\n        else {\n            ratio = this.ratio;\n            unit = this.displayUnit;\n            factor = this.getFactor(this.unit);\n            depth = this.volumeDepth;\n        }\n        return { ratio: ratio, unit: unit, factor: factor, depth: depth };\n    };\n    MeasureAnnotation.prototype.getCurrentRatio = function (ratioString) {\n        var stringArray = ratioString.split(' ');\n        if (stringArray[3] === '=') {\n            return parseFloat(stringArray[4]) / parseFloat(stringArray[0]);\n        }\n        else {\n            return parseFloat(stringArray[3]) / parseFloat(stringArray[0]);\n        }\n    };\n    /**\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @private\n     */\n    MeasureAnnotation.prototype.calculateArea = function (points, id, pageNumber) {\n        // eslint-disable-next-line\n        var values = this.getCurrentValues(id, pageNumber);\n        var area = this.getArea(points, values.factor, values.unit) * values.ratio;\n        if (values.unit === 'ft_in') {\n            // eslint-disable-next-line\n            var calculateValue = Math.round(area * 100) / 100;\n            if (calculateValue >= 12) {\n                calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n                calculateValue = calculateValue.split('.');\n                if (calculateValue[1]) {\n                    // eslint-disable-next-line\n                    var inchValue = 0;\n                    if (calculateValue[1].charAt(1)) {\n                        // eslint-disable-next-line\n                        inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n                        inchValue = Math.round(inchValue);\n                    }\n                    else {\n                        inchValue = calculateValue[1];\n                    }\n                    if (!inchValue) {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                    }\n                    else {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in'));\n                    }\n                }\n                else {\n                    return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                }\n            }\n            else {\n                return (Math.round(area * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n            }\n        }\n        if (values.unit === 'm') {\n            return ((area * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n        }\n        return (Math.round(area * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n    };\n    MeasureAnnotation.prototype.getArea = function (points, factor, unit) {\n        var area = 0;\n        var j = points.length - 1;\n        for (var i = 0; i < points.length; i++) {\n            // eslint-disable-next-line max-len\n            area += (points[j].x * this.pixelToPointFactor * factor + points[i].x * this.pixelToPointFactor * factor) * (points[j].y * this.pixelToPointFactor * factor - points[i].y * this.pixelToPointFactor * factor);\n            j = i;\n        }\n        if (unit === 'ft_in') {\n            return (Math.abs((area) * 2.0));\n        }\n        else {\n            return (Math.abs((area) / 2.0));\n        }\n    };\n    /**\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @private\n     */\n    MeasureAnnotation.prototype.calculateVolume = function (points, id, pageNumber) {\n        // eslint-disable-next-line\n        var values = this.getCurrentValues(id, pageNumber);\n        var depth = values.depth ? values.depth : this.volumeDepth;\n        var area = this.getArea(points, values.factor, values.unit);\n        var volume = area * ((depth * this.convertUnitToPoint(values.unit)) * values.factor) * values.ratio;\n        if (values.unit === 'ft_in') {\n            // eslint-disable-next-line\n            var calculateValue = Math.round(volume * 100) / 100;\n            if (calculateValue >= 12) {\n                calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n                calculateValue = calculateValue.split('.');\n                if (calculateValue[1]) {\n                    // eslint-disable-next-line\n                    var inchValue = 0;\n                    if (calculateValue[1].charAt(1)) {\n                        // eslint-disable-next-line\n                        inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n                        inchValue = Math.round(inchValue);\n                    }\n                    else {\n                        inchValue = calculateValue[1];\n                    }\n                    if (!inchValue) {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                    }\n                    else {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in'));\n                    }\n                }\n                else {\n                    return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                }\n            }\n            else {\n                return (Math.round(volume * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n            }\n        }\n        return (Math.round(volume * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n    };\n    /**\n     * @param pdfAnnotationBase\n     * @private\n     */\n    MeasureAnnotation.prototype.calculatePerimeter = function (pdfAnnotationBase) {\n        var perimeter = Point.getLengthFromListOfPoints(pdfAnnotationBase.vertexPoints);\n        return this.setConversion(perimeter * this.pixelToPointFactor, pdfAnnotationBase);\n    };\n    MeasureAnnotation.prototype.getFactor = function (unit) {\n        var factor;\n        switch (unit) {\n            case 'in':\n                factor = (1 / 72);\n                break;\n            case 'cm':\n                factor = (1 / 28.346);\n                break;\n            case 'mm':\n                factor = (1 / 2.835);\n                break;\n            case 'pt':\n                factor = 1;\n                break;\n            case 'p':\n                factor = 1 / 12;\n                break;\n            case 'ft':\n                factor = 1 / 864;\n                break;\n            case 'ft_in':\n                factor = 1 / 72;\n                break;\n            case 'm':\n                factor = (1 / 2834.64567);\n                break;\n        }\n        return factor;\n    };\n    MeasureAnnotation.prototype.convertPointToUnits = function (factor, value, unit) {\n        var convertedValue;\n        if (unit === 'ft_in') {\n            // eslint-disable-next-line\n            var calculateValue = Math.round((value * factor) * 100) / 100;\n            if (calculateValue >= 12) {\n                calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n                calculateValue = calculateValue.split('.');\n                if (calculateValue[1]) {\n                    // eslint-disable-next-line\n                    var inchValue = 0;\n                    if (calculateValue[1].charAt(1)) {\n                        // eslint-disable-next-line\n                        inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n                        inchValue = Math.round(inchValue);\n                    }\n                    else {\n                        inchValue = calculateValue[1];\n                    }\n                    if (!inchValue) {\n                        convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n                    }\n                    else {\n                        convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n                    }\n                }\n                else {\n                    convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n                }\n            }\n            else {\n                convertedValue = Math.round((value * factor) * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('in');\n            }\n        }\n        else {\n            convertedValue = Math.round((value * factor) * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant(unit);\n        }\n        return convertedValue;\n    };\n    MeasureAnnotation.prototype.convertUnitToPoint = function (unit) {\n        var factor;\n        switch (unit) {\n            case 'in':\n                factor = 72;\n                break;\n            case 'cm':\n                factor = 28.346;\n                break;\n            case 'mm':\n                factor = 2.835;\n                break;\n            case 'pt':\n                factor = 1;\n                break;\n            case 'p':\n                factor = 12;\n                break;\n            case 'ft':\n                factor = 864;\n                break;\n            case 'ft_in':\n                factor = 72;\n                break;\n            case 'm':\n                factor = 2834.64567;\n                break;\n        }\n        return factor;\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getStringifiedMeasure = function (measure) {\n        if (!isNullOrUndefined(measure)) {\n            measure.angle = JSON.stringify(measure.angle);\n            measure.area = JSON.stringify(measure.area);\n            measure.distance = JSON.stringify(measure.distance);\n            measure.volume = JSON.stringify(measure.volume);\n        }\n        return JSON.stringify(measure);\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getRgbCode = function (colorString) {\n        if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n            colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n        }\n        var stringArray = colorString.split(',');\n        if (isNullOrUndefined(stringArray[1])) {\n            colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n            stringArray = colorString.split(',');\n        }\n        // eslint-disable-next-line radix\n        var r = parseInt(stringArray[0].split('(')[1]);\n        // eslint-disable-next-line radix\n        var g = parseInt(stringArray[1]);\n        // eslint-disable-next-line radix\n        var b = parseInt(stringArray[2]);\n        // eslint-disable-next-line radix\n        var a = parseInt(stringArray[3]);\n        return { r: r, g: g, b: b, a: a };\n    };\n    /**\n     * @param annotation\n     * @param pageNumber\n     * @param annotation\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.saveImportedMeasureAnnotations = function (annotation, pageNumber) {\n        var annotationObject = null;\n        var vertexPoints = null;\n        if (annotation.VertexPoints) {\n            vertexPoints = [];\n            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                vertexPoints.push(point);\n            }\n        }\n        var measureObject = {\n            // eslint-disable-next-line max-len\n            ratio: annotation.Calibrate.Ratio, x: this.getNumberFormatArray(annotation.Calibrate.X), distance: this.getNumberFormatArray(annotation.Calibrate.Distance), area: this.getNumberFormatArray(annotation.Calibrate.Area), angle: this.getNumberFormatArray(annotation.Calibrate.Angle), volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n            targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n        };\n        if (annotation.Calibrate.Depth) {\n            measureObject.depth = annotation.Calibrate.Depth;\n        }\n        if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n            // eslint-disable-next-line max-len\n            annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n            annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n            annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n            annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n            annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n            annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n        }\n        // eslint-disable-next-line max-len\n        annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n        annotation.Author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotation.Subject);\n        annotationObject = {\n            // eslint-disable-next-line max-len\n            id: 'measure', shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject,\n            note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n            // eslint-disable-next-line max-len\n            borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n            cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked,\n            // eslint-disable-next-line max-len\n            bounds: { left: annotation.Bounds.X, top: annotation.Bounds.Y, width: annotation.Bounds.Width, height: annotation.Bounds.Height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n            caption: annotation.Caption, captionPosition: annotation.CaptionPosition, calibrate: measureObject, leaderLength: annotation.LeaderLength, leaderLineExtension: annotation.LeaderLineExtension,\n            // eslint-disable-next-line max-len\n            leaderLineOffset: annotation.LeaderLineOffset, indent: annotation.Indent, annotName: annotation.AnnotName, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n            review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n            labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n            labelBorderColor: annotation.LabelBorderColor, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: annotation.LabelBounds, annotationSelectorSettings: this.getSettings(annotation), labelSettings: annotation.LabelSettings, annotationSettings: annotation.AnnotationSettings,\n            customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isAnnotationRotated: false\n        };\n        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n    };\n    /**\n     * @param annotation\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.updateMeasureAnnotationCollections = function (annotation, pageNumber) {\n        // eslint-disable-next-line\n        var annotationObject = null;\n        var vertexPoints = null;\n        if (annotation.VertexPoints) {\n            vertexPoints = [];\n            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                vertexPoints.push(point);\n            }\n        }\n        var measureObject = {\n            // eslint-disable-next-line max-len\n            ratio: annotation.Calibrate.Ratio, x: this.getNumberFormatArray(annotation.Calibrate.X), distance: this.getNumberFormatArray(annotation.Calibrate.Distance), area: this.getNumberFormatArray(annotation.Calibrate.Area), angle: this.getNumberFormatArray(annotation.Calibrate.Angle), volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n            targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n        };\n        if (annotation.Calibrate.Depth) {\n            measureObject.depth = annotation.Calibrate.Depth;\n        }\n        if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n            // eslint-disable-next-line max-len\n            annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n            annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n            annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n            annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n            annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n            var settings = this.pdfViewer.shapeLabelSettings;\n            var labelSettings = { borderColor: annotation.StrokeColor, fillColor: annotation.FillColor, fontColor: annotation.FontColor,\n                fontSize: annotation.FontSize, labelContent: annotation.LabelContent, labelHeight: settings.labelHeight, labelWidth: settings.labelWidth, opacity: annotation.Opacity\n            };\n            annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : labelSettings;\n        }\n        annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n        // eslint-disable-next-line max-len\n        annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n        // eslint-disable-next-line max-len\n        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n        if (annotation.IsLocked) {\n            annotation.AnnotationSettings.isLock = annotation.IsLocked;\n        }\n        annotationObject = {\n            // eslint-disable-next-line max-len\n            id: 'measure', shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject,\n            note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n            // eslint-disable-next-line max-len\n            borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n            cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked,\n            // eslint-disable-next-line max-len\n            bounds: { left: annotation.Bounds.X, top: annotation.Bounds.Y, width: annotation.Bounds.Width, height: annotation.Bounds.Height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n            caption: annotation.Caption, captionPosition: annotation.CaptionPosition, calibrate: measureObject, leaderLength: annotation.LeaderLength, leaderLineExtension: annotation.LeaderLineExtension,\n            // eslint-disable-next-line max-len\n            leaderLineOffset: annotation.LeaderLineOffset, indent: annotation.Indent, annotationId: annotation.AnnotName, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n            review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n            labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n            labelBorderColor: annotation.LabelBorderColor, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: annotation.LabelBounds, pageNumber: pageNumber, annotationSelectorSettings: annotation.AnnotationSelectorSettings, labelSettings: annotation.labelSettings, annotationSettings: annotation.AnnotationSettings,\n            customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock\n        };\n        return annotationObject;\n    };\n    /**\n    * This method used to add annotations with using program.\n    *\n    * @param annotationType - It describes the annotation type\n    * @param annotationObject - It describes type of annotation object\n    * @param offset - It describes about the annotation bounds or location\n    * @returns Object\n    * @private\n    */\n    MeasureAnnotation.prototype.updateAddAnnotationDetails = function (annotationType, annotationObject, offset) {\n        //Creating new object if annotationObject is null\n        if (!annotationObject) {\n            annotationObject = { offset: { x: 10, y: 10 }, pageNumber: 0, width: undefined, height: undefined };\n            offset = annotationObject.offset;\n        }\n        else if (!annotationObject.offset)\n            offset = { x: 10, y: 10 };\n        else\n            offset = annotationObject.offset;\n        //Initialize the annotation settings\n        var annotationSelectorSettings = null;\n        var allowedInteractions = null;\n        var annotationSettings = null;\n        var measureAnnotationType = '';\n        var shapeAnnotationType = '';\n        var subject = '';\n        var isArrow = false;\n        var vertexPoints = [];\n        //Creating the CurrentDate and Annotation name\n        var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        if (annotationType == 'Distance') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.lineSettings.annotationSelectorSettings ? this.pdfViewer.lineSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.lineSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n            allowedInteractions = this.pdfViewer.lineSettings.allowedInteractions ? this.pdfViewer.lineSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'LineDimension';\n            shapeAnnotationType = 'Line';\n            subject = this.pdfViewer.lineSettings.subject !== \"\" ? this.pdfViewer.lineSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Distance calculation';\n            isArrow = true;\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y }, { x: offset.x + 100, y: offset.y }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Perimeter') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.arrowSettings.annotationSelectorSettings ? this.pdfViewer.arrowSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.arrowSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n            allowedInteractions = this.pdfViewer.arrowSettings.allowedInteractions ? this.pdfViewer.arrowSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolyLineDimension';\n            shapeAnnotationType = 'Polyline';\n            subject = this.pdfViewer.arrowSettings.subject !== \"\" ? this.pdfViewer.arrowSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Perimeter calculation';\n            isArrow = true;\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y },\n                    { x: offset.x + 85, y: offset.y },\n                    { x: offset.x + 86, y: offset.y + 62 }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Area') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.rectangleSettings.annotationSelectorSettings ? this.pdfViewer.rectangleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.rectangleSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n            allowedInteractions = this.pdfViewer.rectangleSettings.allowedInteractions ? this.pdfViewer.rectangleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolygonDimension';\n            shapeAnnotationType = 'Polygon';\n            subject = this.pdfViewer.rectangleSettings.subject !== \"\" ? this.pdfViewer.rectangleSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Area calculation';\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y },\n                    { x: offset.x + 88, y: offset.y - 1 },\n                    { x: offset.x + 89, y: offset.y + 53 },\n                    { x: offset.x, y: offset.y }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Radius') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.circleSettings.annotationSelectorSettings ? this.pdfViewer.circleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.circleSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n            allowedInteractions = this.pdfViewer.circleSettings.allowedInteractions ? this.pdfViewer.circleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolygonRadius';\n            shapeAnnotationType = 'Circle';\n            subject = this.pdfViewer.circleSettings.subject !== \"\" ? this.pdfViewer.circleSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Radius calculation';\n            annotationObject.width = annotationObject.width ? annotationObject.width : 100;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 100;\n            vertexPoints = null;\n        }\n        else if (annotationType == 'Volume') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.polygonSettings.annotationSelectorSettings ? this.pdfViewer.polygonSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.polygonSettings);\n            annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationType);\n            allowedInteractions = this.pdfViewer.polygonSettings.allowedInteractions ? this.pdfViewer.polygonSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolygonVolume';\n            shapeAnnotationType = 'Polygon';\n            subject = this.pdfViewer.polygonSettings.subject !== \"\" ? this.pdfViewer.polygonSettings.subject : this.pdfViewer.annotationSettings.subject !== \"\" ? this.pdfViewer.annotationSettings.subject : 'Volume calculation';\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [\n                    { x: offset.x, y: offset.y },\n                    { x: offset.x, y: offset.y + 109 },\n                    { x: offset.x + 120, y: offset.y + 109 },\n                    { x: offset.x + 120, y: offset.y - 1 },\n                    { x: offset.x, y: offset.y }\n                ];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : annotationSettings.isLock;\n        annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : annotationSettings.minHeight;\n        annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : annotationSettings.minWidth;\n        annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : annotationSettings.maxWidth;\n        annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : annotationSettings.maxHeight;\n        //Calculating area for all the measurements\n        var values = { depth: 96,\n            factor: 0.013888888888888888,\n            ratio: 1,\n            unit: 'in' };\n        var notes = '';\n        if (vertexPoints || annotationType == 'Radius' || annotationType == 'Volume') {\n            if (annotationType == 'Distance' || annotationType == 'Perimeter' || annotationType == 'Radius') {\n                var length_1 = 0;\n                if (annotationType == 'Radius') {\n                    length_1 = (annotationObject.width / 2) * this.pixelToPointFactor;\n                }\n                else {\n                    for (var i_1 = 0; i_1 < vertexPoints.length - 1; i_1++) {\n                        length_1 += Math.sqrt(Math.pow((vertexPoints[i_1].x - vertexPoints[i_1 + 1].x), 2) + Math.pow((vertexPoints[i_1].y - vertexPoints[i_1 + 1].y), 2));\n                    }\n                    length_1 = length_1 * this.pixelToPointFactor;\n                }\n                var scaledValue = length_1 * values.ratio;\n                notes = this.convertPointToUnits(values.factor, scaledValue, values.unit);\n            }\n            else if (annotationType == 'Area' || annotationType == 'Volume') {\n                var area = 0;\n                var j = vertexPoints.length - 1;\n                for (var i = 0; i < vertexPoints.length; i++) {\n                    area += (vertexPoints[j].x * this.pixelToPointFactor * values.factor + vertexPoints[i].x * this.pixelToPointFactor * values.factor) * (vertexPoints[j].y * this.pixelToPointFactor * values.factor - vertexPoints[i].y * this.pixelToPointFactor * values.factor);\n                    j = i;\n                }\n                area = (Math.abs((area) / 2.0));\n                if (annotationType == 'Volume') {\n                    area = area * ((values.depth * this.convertUnitToPoint(values.unit)) * values.factor) * values.ratio;\n                    notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n                }\n                else\n                    notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n            }\n        }\n        //Converting points model into vertex property\n        if (vertexPoints)\n            vertexPoints = this.pdfViewer.annotation.getVertexPointsXY(vertexPoints);\n        //Creating Annotation objects with it's proper properties\n        var measureShapeAnnotation = [];\n        var shape = {\n            AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n            AnnotName: annotationName,\n            AnnotType: 'shape_measure',\n            AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n            AnnotationSettings: annotationSettings,\n            Author: annotationObject.author ? annotationObject.author : 'Guest',\n            BorderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray : 0,\n            BorderStyle: 'Solid',\n            Bounds: { X: offset.x, Y: offset.y, Width: annotationObject.width, Height: annotationObject.height, Left: offset.x, Top: offset.y, Location: { X: offset.x, Y: offset.y }, Size: { Height: annotationObject.height, IsEmpty: false, Width: annotationObject.width } },\n            Calibrate: {\n                Area: [{ ConversionFactor: 1, Denominator: 100, FormatDenominator: false, FractionalType: 'D', Unit: 'sq in' }],\n                Depth: annotationObject.depth ? annotationObject.depth : 0,\n                Distance: [{ ConversionFactor: 1, Denominator: 100, FormatDenominator: false, FractionalType: 'D', Unit: 'in' }],\n                Ratio: '1 in = 1 in',\n                TargetUnitConversion: 0,\n                Volume: null,\n                X: [{ ConversionFactor: 0.013888889, Denominator: 100, FormatDenominator: false, FractionalType: 'D', Unit: 'in' }]\n            },\n            Caption: true,\n            CaptionPosition: 'Top',\n            CloudIntensity: 0,\n            Comments: null,\n            CustomData: annotationObject.customData ? annotationObject.customData : null,\n            CreatedDate: currentDateString,\n            EnableShapeLabel: false,\n            ExistingCustomData: null,\n            FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n            FontColor: null,\n            FontSize: 0,\n            Indent: measureAnnotationType,\n            IsCloudShape: false,\n            IsCommentLock: false,\n            IsLocked: annotationObject.isLock ? annotationObject.isLock : false,\n            IsPrint: annotationObject.isPrint ? annotationObject.isPrint : true,\n            LabelBorderColor: null,\n            LabelBounds: { X: 0, Y: 0, Width: 0, Height: 0 },\n            LabelContent: null,\n            LabelFillColor: null,\n            LabelSettings: null,\n            LeaderLength: 0,\n            LeaderLineExtension: 0,\n            LeaderLineOffset: 0,\n            LineHeadEnd: annotationObject.lineHeadStartStyle ? annotationObject.lineHeadStartStyle : isArrow ? 'ClosedArrow' : 'None',\n            LineHeadStart: annotationObject.lineHeadEndStyle ? annotationObject.lineHeadEndStyle : isArrow ? 'ClosedArrow' : 'None',\n            ModifiedDate: '',\n            Note: notes,\n            Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n            RectangleDifference: [],\n            RotateAngle: 'RotateAngle0',\n            ShapeAnnotationType: shapeAnnotationType,\n            State: '',\n            StateModel: '',\n            StrokeColor: annotationObject.strokeColor ? annotationObject.strokeColor : '#ff0000',\n            Subject: annotationObject.subject ? annotationObject.subject : subject,\n            Thickness: annotationObject.thickness ? annotationObject.thickness : 1,\n            VertexPoints: vertexPoints\n        };\n        //Adding the annotation object to an array and return it\n        measureShapeAnnotation[0] = shape;\n        return { measureShapeAnnotation: measureShapeAnnotation };\n    };\n    return MeasureAnnotation;\n}());\nexport { MeasureAnnotation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}