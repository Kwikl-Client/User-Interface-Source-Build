{"ast":null,"code":"/* eslint-disable */\nimport { FontStyle } from './../base/types';\nimport { isBlazor, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar FreeTextAnnotation = /** @class */function () {\n  function FreeTextAnnotation(pdfviewer, pdfViewerBase) {\n    /**\n     * @private\n     */\n    this.inputBoxCount = 0;\n    /**\n     * @private\n     */\n    this.isFreeTextValueChange = false;\n    /**\n     * @private\n     */\n    this.isAddAnnotationProgramatically = false;\n    /**\n     * @private\n     */\n    this.isInuptBoxInFocus = false;\n    /**\n     * @private\n     */\n    // eslint-disable-next-line\n    this.freeTextPageNumbers = [];\n    /**\n     * @private\n     */\n    this.selectedText = '';\n    /**\n     * @private\n     */\n    this.isTextSelected = false;\n    this.selectionStart = 0;\n    this.selectionEnd = 0;\n    /**\n     * @private\n     */\n    this.isBold = false;\n    /**\n     * @private\n     */\n    this.isItalic = false;\n    /**\n     * @private\n     */\n    this.isUnderline = false;\n    /**\n     * @private\n     */\n    this.isStrikethrough = false;\n    this.isReadonly = false;\n    this.isMaximumWidthReached = false;\n    this.freeTextPaddingLeft = 4;\n    this.freeTextPaddingTop = 5;\n    this.defaultFontSize = 16;\n    this.lineGap = 1.5;\n    /**\n     * @private\n     */\n    this.previousText = 'Type Here';\n    /**\n     * @private\n     */\n    this.currentPosition = [];\n    this.pdfViewer = pdfviewer;\n    this.pdfViewerBase = pdfViewerBase;\n    this.updateTextProperties();\n    this.inputBoxElement = document.createElement('textarea');\n    this.inputBoxElement.style.position = 'absolute';\n    this.inputBoxElement.style.Width = this.defautWidth;\n    this.inputBoxElement.style.Height = this.defaultHeight;\n    this.inputBoxElement.style.zIndex = '5';\n    this.inputBoxElement.style.fontSize = this.fontSize + 'px';\n    this.inputBoxElement.className = 'free-text-input';\n    this.inputBoxElement.style.resize = 'none';\n    this.inputBoxElement.style.borderColor = this.borderColor;\n    this.inputBoxElement.style.background = this.fillColor;\n    this.inputBoxElement.style.borderStyle = this.borderStyle;\n    this.inputBoxElement.style.borderWidth = this.borderWidth + 'px';\n    this.inputBoxElement.style.padding = this.padding;\n    this.inputBoxElement.style.paddingLeft = this.freeTextPaddingLeft + 'px';\n    this.inputBoxElement.style.paddingTop = this.freeTextPaddingTop * (parseFloat(this.inputBoxElement.style.fontSize) / this.defaultFontSize) + 'px';\n    this.inputBoxElement.style.borderRadius = '2px';\n    this.inputBoxElement.style.verticalAlign = 'middle';\n    this.inputBoxElement.style.fontFamily = this.fontFamily;\n    this.inputBoxElement.style.color = this.pdfViewer.freeTextSettings.fontColor ? this.pdfViewer.freeTextSettings.fontColor : '#000';\n    this.inputBoxElement.style.overflow = 'hidden';\n    this.inputBoxElement.style.wordBreak = this.wordBreak;\n    this.inputBoxElement.readOnly = this.isReadonly;\n    this.inputBoxElement.addEventListener('focusout', this.onFocusOutInputBox.bind(this));\n    this.inputBoxElement.addEventListener('keydown', this.onKeyDownInputBox.bind(this));\n    this.inputBoxElement.addEventListener('mouseup', this.onMouseUpInputBox.bind(this));\n    this.freeTextPageNumbers = [];\n  }\n  /**\n   * @private\n   */\n  FreeTextAnnotation.prototype.updateTextProperties = function () {\n    this.defautWidth = this.pdfViewer.freeTextSettings.width ? this.pdfViewer.freeTextSettings.width : 151;\n    this.defaultHeight = this.pdfViewer.freeTextSettings.height ? this.pdfViewer.freeTextSettings.height : 24.6;\n    this.borderColor = this.pdfViewer.freeTextSettings.borderColor ? this.pdfViewer.freeTextSettings.borderColor : '#ffffff00';\n    this.fillColor = this.pdfViewer.freeTextSettings.fillColor ? this.pdfViewer.freeTextSettings.fillColor : '#fff';\n    this.borderStyle = this.pdfViewer.freeTextSettings.borderStyle ? this.pdfViewer.freeTextSettings.borderStyle : 'solid';\n    this.borderWidth = this.pdfViewer.freeTextSettings.borderWidth ? this.pdfViewer.freeTextSettings.borderWidth : 1;\n    this.fontSize = this.pdfViewer.freeTextSettings.fontSize ? this.pdfViewer.freeTextSettings.fontSize : 16;\n    this.opacity = this.pdfViewer.freeTextSettings.opacity ? this.pdfViewer.freeTextSettings.opacity : 1;\n    this.fontColor = this.pdfViewer.freeTextSettings.fontColor ? this.pdfViewer.freeTextSettings.fontColor : '#000';\n    // eslint-disable-next-line max-len\n    this.author = this.pdfViewer.freeTextSettings.author !== 'Guest' ? this.pdfViewer.freeTextSettings.author : this.pdfViewer.annotationSettings.author ? this.pdfViewer.annotationSettings.author : 'Guest';\n    if (!isNullOrUndefined(this.pdfViewer.annotationModule)) {\n      if (this.getRgbCode(this.borderColor).a === 0) {\n        this.borderWidth = 0;\n      }\n    }\n    if (this.pdfViewer.freeTextSettings.fontFamily) {\n      var fontName = this.pdfViewer.freeTextSettings.fontFamily;\n      if (fontName === 'Helvetica' || fontName === 'Times New Roman' || fontName === 'Courier' || fontName === 'Symbol' || fontName === 'ZapfDingbats') {\n        this.fontFamily = fontName;\n      } else {\n        this.fontFamily = 'Helvetica';\n      }\n    } else {\n      this.fontFamily = 'Helvetica';\n    }\n    this.textAlign = this.pdfViewer.freeTextSettings.textAlignment ? this.pdfViewer.freeTextSettings.textAlignment : 'Left';\n    this.defaultText = this.pdfViewer.freeTextSettings.defaultText ? this.pdfViewer.freeTextSettings.defaultText : 'Type here';\n    this.isReadonly = false;\n    if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n      this.wordBreak = 'break-all';\n      this.padding = '2px';\n    } else {\n      this.padding = '0px';\n      this.wordBreak = 'break-word';\n    }\n    // eslint-disable-next-line max-len\n    if (this.pdfViewer.freeTextSettings.isLock || this.pdfViewer.annotationSettings.isLock || this.pdfViewer.freeTextSettings.isReadonly) {\n      this.isReadonly = true;\n    }\n    if (this.pdfViewer.freeTextSettings.fontStyle === 1) {\n      this.isBold = true;\n    } else if (this.pdfViewer.freeTextSettings.fontStyle === 2) {\n      this.isItalic = true;\n    } else if (this.pdfViewer.freeTextSettings.fontStyle === 4) {\n      this.isUnderline = true;\n    } else if (this.pdfViewer.freeTextSettings.fontStyle === 8) {\n      this.isStrikethrough = true;\n    } else if (3 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isItalic = true;\n    } else if (5 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isUnderline = true;\n    } else if (9 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isStrikethrough = true;\n    } else if (7 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isItalic = true;\n      this.isUnderline = true;\n    } else if (11 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isItalic = true;\n      this.isStrikethrough = true;\n    } else if (14 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isUnderline = true;\n      this.isStrikethrough = true;\n    } else if (6 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isUnderline = true;\n      this.isItalic = true;\n    }\n  };\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @param isImportAction\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.renderFreeTextAnnotations = function (shapeAnnotations, pageNumber, isImportAction, isAnnotOrderAction) {\n    var isFreeTextAdded = false;\n    if (!isImportAction) {\n      for (var p = 0; p < this.freeTextPageNumbers.length; p++) {\n        if (this.freeTextPageNumbers[p] === pageNumber) {\n          isFreeTextAdded = true;\n          break;\n        }\n      }\n    }\n    if (shapeAnnotations && (!isFreeTextAdded || isAnnotOrderAction)) {\n      if (shapeAnnotations.length >= 1) {\n        this.freeTextPageNumbers.push(pageNumber);\n        for (var i = 0; i < shapeAnnotations.length; i++) {\n          // eslint-disable-next-line\n          var annotation = shapeAnnotations[i];\n          annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n          if (annotation.AnnotType) {\n            var vertexPoints = null;\n            if (annotation.VertexPoints) {\n              vertexPoints = [];\n              for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = {\n                  x: annotation.VertexPoints[j].X,\n                  y: annotation.VertexPoints[j].Y\n                };\n                vertexPoints.push(point);\n              }\n            }\n            // eslint-disable-next-line max-len\n            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n            var annot = void 0;\n            var paddingValue = 0.5;\n            var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X - paddingValue : annotation.Bounds.x;\n            var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y - paddingValue : annotation.Bounds.y;\n            var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n            var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n            var isAddedProgramatically = annotation.isAddAnnotationProgramatically ? annotation.isAddAnnotationProgramatically : false;\n            var rotateValue = this.getRotationValue(pageNumber, isAddedProgramatically);\n            var originalRotation = annotation.Rotate;\n            var pageRotate = annotation.PageRotation;\n            if (Math.sign(annotation.Rotate) === 1) {\n              annotation.Rotate = -annotation.Rotate + rotateValue;\n            } else {\n              annotation.Rotate = annotation.Rotate + rotateValue;\n            }\n            // eslint-disable-next-line\n            var rotateAngle = Math.abs(annotation.Rotate);\n            if (isImportAction && rotateValue !== pageRotate) {\n              if (this.pdfViewerBase.isJsonImported) {\n                var pageDetails = this.pdfViewerBase.pageSize[pageNumber];\n                var boundsX = annotation.Bounds.X;\n                var boundsY = annotation.Bounds.Y;\n                var annotationWidth = width;\n                var annotationHeight = height;\n                if (pageRotate > 0) {\n                  var rotatation = pageRotate / 90;\n                  if (rotatation === 1) {\n                    height = width;\n                    width = annotation.Bounds.Height;\n                    annotationBoundsX = annotation.Bounds.Y;\n                    if (rotateValue !== 270) {\n                      annotationBoundsY = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                    } else {\n                      annotationBoundsY = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                    }\n                  } else if (rotatation === 2) {\n                    if (rotateValue !== 270 && rotateValue !== 90) {\n                      annotationBoundsX = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                      annotationBoundsY = pageDetails.height - annotation.Bounds.Y - annotation.Bounds.Height;\n                    } else {\n                      annotationBoundsX = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                      annotationBoundsY = pageDetails.width - annotation.Bounds.Y - annotation.Bounds.Height;\n                    }\n                  } else if (rotatation === 3) {\n                    height = width;\n                    width = annotation.Bounds.Height;\n                    if (rotateValue !== 90) {\n                      annotationBoundsX = pageDetails.width - annotation.Bounds.Y - width;\n                    } else {\n                      annotationBoundsX = pageDetails.height - annotation.Bounds.Y - width;\n                    }\n                    annotationBoundsY = annotation.Bounds.X;\n                  }\n                  boundsX = annotationBoundsX;\n                  boundsY = annotationBoundsY;\n                  annotationWidth = width;\n                  annotationHeight = height;\n                }\n                rotateAngle = rotateValue / 90 % 4;\n                if (rotateAngle === 1) {\n                  height = width;\n                  width = annotationHeight;\n                  annotationBoundsX = pageDetails.width - boundsY - annotationHeight - paddingValue;\n                  annotationBoundsY = boundsX - paddingValue;\n                  rotateAngle = 90;\n                } else if (rotateAngle === 2) {\n                  annotationBoundsX = pageDetails.width - boundsX - annotationWidth - paddingValue;\n                  annotationBoundsY = pageDetails.height - boundsY - annotationHeight - paddingValue;\n                  rotateAngle = 180;\n                } else if (rotateAngle === 3) {\n                  height = width;\n                  width = annotationHeight;\n                  annotationBoundsX = boundsY - paddingValue;\n                  annotationBoundsY = pageDetails.height - boundsX - height - paddingValue;\n                  rotateAngle = 270;\n                } else if (rotateAngle === 0) {\n                  annotationBoundsX = boundsX - paddingValue;\n                  annotationBoundsY = boundsY - paddingValue;\n                }\n              }\n            }\n            if (rotateAngle === 90 || rotateAngle === 270) {\n              var rotationHeight = height;\n              var rotationWidth = width;\n              height = rotationWidth;\n              width = rotationHeight;\n              annotationBoundsX = annotationBoundsX - width / 2 + height / 2;\n              annotationBoundsY = annotationBoundsY + (width / 2 - height / 2);\n            }\n            // eslint-disable-next-line\n            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            if (!isNullOrUndefined(annotation) && annotation.MarkupText && annotation.MarkupText.includes('\\n')) {\n              var noOfLines = annotation.MarkupText.split(\"\\n\").length;\n              var newHeight = noOfLines * annotation.FontSize * this.lineGap;\n              var pageHeight = this.pdfViewerBase.pageSize[pageNumber].height - annotation.Bounds.Y;\n              if (height < newHeight) {\n                height = newHeight;\n              }\n              if (height > pageHeight) {\n                height = pageHeight;\n              }\n            }\n            // eslint-disable-next-line\n            annot = {\n              author: annotation.Author,\n              modifiedDate: annotation.ModifiedDate,\n              subject: annotation.Subject,\n              id: 'freetext' + this.inputBoxCount,\n              rotateAngle: annotation.Rotate,\n              dynamicText: annotation.MarkupText,\n              strokeColor: annotation.StrokeColor,\n              thickness: annotation.Thickness,\n              fillColor: annotation.FillColor,\n              bounds: {\n                x: annotationBoundsX,\n                y: annotationBoundsY,\n                left: annotationBoundsX,\n                top: annotationBoundsY,\n                width: width,\n                height: height,\n                right: annotation.Bounds.Right,\n                bottom: annotation.Bounds.Bottom\n              },\n              annotName: annotation.AnnotName,\n              shapeAnnotationType: 'FreeText',\n              // eslint-disable-next-line\n              pageIndex: pageNumber,\n              opacity: annotation.Opacity,\n              fontColor: annotation.FontColor,\n              fontSize: annotation.FontSize,\n              pageRotation: rotateValue,\n              fontFamily: annotation.FontFamily,\n              notes: annotation.MarkupText,\n              textAlign: annotation.TextAlign,\n              // eslint-disable-next-line\n              comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n              review: {\n                state: annotation.State,\n                stateModel: annotation.StateModel,\n                modifiedDate: annotation.ModifiedDate,\n                author: annotation.Author\n              },\n              // eslint-disable-next-line max-len\n              font: {\n                isBold: annotation.Font.Bold,\n                isItalic: annotation.Font.Italic,\n                isStrikeout: annotation.Font.Strikeout,\n                isUnderline: annotation.Font.Underline\n              },\n              annotationSelectorSettings: this.getSettings(annotation),\n              annotationSettings: annotation.AnnotationSettings,\n              // eslint-disable-next-line\n              customData: this.pdfViewer.annotation.getCustomData(annotation),\n              annotationAddMode: annotation.annotationAddMode,\n              allowedInteractions: annotation.allowedInteractions,\n              isPrint: annotation.IsPrint,\n              isCommentLock: annotation.IsCommentLock,\n              isReadonly: annotation.IsReadonly,\n              isAddAnnotationProgrammatically: isAddedProgramatically\n            };\n            if (isImportAction) {\n              annot.id = annotation.AnnotName;\n              annot.previousFontSize = annotation.FontSize ? annotation.FontSize : this.fontSize;\n            }\n            var addedAnnot = this.pdfViewer.add(annot);\n            this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n            if (this.isAddAnnotationProgramatically) {\n              // eslint-disable-next-line\n              var settings = {\n                opacity: annot.opacity,\n                borderColor: annot.strokeColor,\n                borderWidth: annot.thickness,\n                author: annotation.author,\n                subject: annotation.subject,\n                modifiedDate: annotation.modifiedDate,\n                // eslint-disable-next-line\n                fillColor: annot.fillColor,\n                fontSize: annot.fontSize,\n                width: annot.bounds.width,\n                height: annot.bounds.height,\n                fontColor: annot.fontColor,\n                fontFamily: annot.fontFamily,\n                defaultText: annot.dynamicText,\n                fontStyle: annot.font,\n                textAlignment: annot.textAlign\n              };\n              this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', annot.bounds, settings);\n            }\n            this.inputBoxCount += 1;\n            this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = true;\n            this.pdfViewer.nodePropertyChange(addedAnnot, {});\n            this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @param annotation\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.getSettings = function (annotation) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n    if (annotation.AnnotationSelectorSettings) {\n      selector = annotation.AnnotationSelectorSettings;\n    } else if (this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.freeTextSettings.annotationSelectorSettings;\n    }\n    return selector;\n  };\n  /**\n   * @param type\n   * @private\n   */\n  FreeTextAnnotation.prototype.setAnnotationType = function (type) {\n    this.pdfViewerBase.disableTextSelectionMode();\n    this.pdfViewer.annotationModule.isFormFieldShape = false;\n    switch (type) {\n      case 'FreeText':\n        this.currentAnnotationMode = 'FreeText';\n        this.updateTextProperties();\n        // eslint-disable-next-line max-len\n        var modifiedDateRect = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        this.pdfViewer.drawingObject = {\n          shapeAnnotationType: 'FreeText',\n          strokeColor: this.borderColor,\n          fillColor: this.fillColor,\n          opacity: this.opacity,\n          notes: '',\n          isCommentLock: false,\n          thickness: this.borderWidth,\n          borderDashArray: '0',\n          modifiedDate: modifiedDateRect,\n          // eslint-disable-next-line max-len\n          author: this.pdfViewer.freeTextSettings.author,\n          subject: this.pdfViewer.freeTextSettings.subject,\n          font: {\n            isBold: this.isBold,\n            isItalic: this.isItalic,\n            isStrikeout: this.isStrikethrough,\n            isUnderline: this.isUnderline\n          },\n          textAlign: this.textAlign\n        };\n        this.pdfViewer.tool = 'Select';\n        break;\n    }\n  };\n  /**\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewAdded) {\n    if (!isNullOrUndefined(annotationBase.formFieldAnnotationType) && annotationBase.formFieldAnnotationType !== \"\") {\n      this.pdfViewer.annotationModule.isFormFieldShape = true;\n    } else {\n      this.pdfViewer.annotationModule.isFormFieldShape = false;\n    }\n    var currentAnnotObject = null;\n    var isEdited = false;\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n    if (pageAnnotations != null && annotationBase) {\n      for (var i = 0; i < pageAnnotations.length; i++) {\n        if (annotationBase.id === pageAnnotations[i].id) {\n          if (property === 'bounds') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].bounds = {\n              left: annotationBase.bounds.x,\n              top: annotationBase.bounds.y,\n              width: annotationBase.bounds.width,\n              height: annotationBase.bounds.height,\n              right: annotationBase.bounds.right,\n              bottom: annotationBase.bounds.bottom\n            };\n          } else if (property === 'fill') {\n            pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n          } else if (property === 'stroke') {\n            pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n          } else if (property === 'opacity') {\n            pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n          } else if (property === 'thickness') {\n            pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n          } else if (property === 'notes') {\n            pageAnnotations[i].note = annotationBase.notes;\n          } else if (property === 'delete') {\n            currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n            break;\n          } else if (property === 'dynamicText') {\n            if (pageAnnotations[i].dynamicText !== annotationBase.dynamicText) {\n              isEdited = true;\n              this.pdfViewer.fireCommentEdit(pageAnnotations[i].annotName, annotationBase.dynamicText, pageAnnotations[i]);\n            }\n            pageAnnotations[i].dynamicText = annotationBase.dynamicText;\n          } else if (property === 'fontColor') {\n            pageAnnotations[i].fontColor = annotationBase.fontColor;\n          } else if (property === 'fontSize') {\n            pageAnnotations[i].fontSize = annotationBase.fontSize;\n          } else if (property === 'fontFamily') {\n            pageAnnotations[i].fontFamily = annotationBase.fontFamily;\n          } else if (property === 'textPropertiesChange') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].font = {\n              isBold: annotationBase.font.isBold,\n              isItalic: annotationBase.font.isItalic,\n              isStrikeout: annotationBase.font.isStrikeout,\n              isUnderline: annotationBase.font.isUnderline\n            };\n          } else if (property === 'textAlign') {\n            pageAnnotations[i].textAlign = annotationBase.textAlign;\n          }\n          // eslint-disable-next-line max-len\n          pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n          this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n        }\n      }\n      this.manageAnnotations(pageAnnotations, pageNumber);\n    }\n    if (!isNewAdded && isEdited) {\n      this.pdfViewerBase.updateDocumentEditedProperty(true);\n    }\n    return currentAnnotObject;\n  };\n  /**\n   * @param pageNumber\n   * @param annotationBase\n   * @private\n   */\n  FreeTextAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n    if (annotationBase) {\n      var pageAnnotations = this.getAnnotations(pageNumber, null);\n      if (pageAnnotations) {\n        pageAnnotations.push(annotationBase);\n      }\n      this.manageAnnotations(pageAnnotations, pageNumber);\n    }\n  };\n  /**\n   * @private\n   */\n  FreeTextAnnotation.prototype.saveFreeTextAnnotations = function () {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n    }\n    // eslint-disable-next-line\n    var annotations = new Array();\n    for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n      annotations[j] = [];\n    }\n    if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n      var annotationCollection = JSON.parse(storeObject);\n      for (var i = 0; i < annotationCollection.length; i++) {\n        var newArray = [];\n        var pageAnnotationObject = annotationCollection[i];\n        if (pageAnnotationObject) {\n          for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n            this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n            // eslint-disable-next-line max-len\n            pageAnnotationObject.annotations[z].bounds = this.getBoundsBasedOnRotation(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.annotations[z].rotateAngle, pageAnnotationObject.pageIndex, pageAnnotationObject.annotations[z]);\n            // eslint-disable-next-line max-len\n            pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n            var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n            pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n            var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n            pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n            var fontColorString = pageAnnotationObject.annotations[z].fontColor;\n            pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n            // eslint-disable-next-line max-len\n            pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(pageAnnotationObject.annotations[z].vertexPoints);\n            if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n            }\n            pageAnnotationObject.annotations[z].padding = this.getPaddingValues(this.fontSize);\n          }\n          newArray = pageAnnotationObject.annotations;\n        }\n        annotations[pageAnnotationObject.pageIndex] = newArray;\n      }\n    }\n    return JSON.stringify(annotations);\n  };\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.getRotationValue = function (pageIndex, isAddedProgrammatically) {\n    // eslint-disable-next-line\n    var pageDetails = this.pdfViewerBase.pageSize[pageIndex];\n    if (!isNullOrUndefined(isAddedProgrammatically) && isAddedProgrammatically) {\n      return 0;\n    } else {\n      if (pageDetails.rotation === 0) {\n        return 0;\n      } else if (pageDetails.rotation === 1) {\n        return 90;\n      } else if (pageDetails.rotation === 2) {\n        return 180;\n      } else if (pageDetails.rotation === 3) {\n        return 270;\n      }\n      return 0;\n    }\n  };\n  FreeTextAnnotation.prototype.getBoundsBasedOnRotation = function (bounds, rotateAngle, pageIndex, annotation, isAddedProgrammatically) {\n    var rotateValue = this.getRotationValue(pageIndex, isAddedProgrammatically);\n    var paddingValue = 0.5;\n    annotation.rotateAngle = rotateAngle - rotateValue;\n    annotation.pageRotation = rotateValue;\n    if (rotateAngle === 90 || rotateAngle === -90 || rotateAngle === 270 || rotateAngle === -270) {\n      var x = bounds.left + bounds.width / 2 - bounds.height / 2;\n      var y = bounds.top - (bounds.width / 2 - bounds.height / 2);\n      return {\n        x: x + paddingValue,\n        y: y + paddingValue,\n        left: x + paddingValue,\n        top: y + paddingValue,\n        width: bounds.height,\n        height: bounds.width\n      };\n    } else {\n      return {\n        x: bounds.left + paddingValue,\n        y: bounds.top + paddingValue,\n        left: bounds.left + paddingValue,\n        top: bounds.top + paddingValue,\n        width: bounds.width,\n        height: bounds.height\n      };\n    }\n  };\n  FreeTextAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n    }\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      if (!this.pdfViewerBase.isStorageExceed) {\n        window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n      }\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n      if (annotObject[index]) {\n        annotObject[index].annotations = pageAnnotations;\n      }\n      var annotationStringified = JSON.stringify(annotObject);\n      if (this.pdfViewerBase.isStorageExceed) {\n        this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'] = annotationStringified;\n      } else {\n        window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_freetext', annotationStringified);\n      }\n    }\n  };\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n    // eslint-disable-next-line\n    var annotationCollection;\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n    }\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n      if (annotObject[index]) {\n        annotationCollection = annotObject[index].annotations;\n      } else {\n        annotationCollection = shapeAnnotations;\n      }\n    } else {\n      annotationCollection = shapeAnnotations;\n    }\n    return annotationCollection;\n  };\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.getRgbCode = function (colorString) {\n    if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n      colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n    }\n    var stringArray = colorString.split(',');\n    if (isNullOrUndefined(stringArray[1])) {\n      colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n      stringArray = colorString.split(',');\n    }\n    // eslint-disable-next-line radix\n    var r = parseFloat(stringArray[0].split('(')[1]);\n    // eslint-disable-next-line radix\n    var g = parseFloat(stringArray[1]);\n    // eslint-disable-next-line radix\n    var b = parseFloat(stringArray[2]);\n    // eslint-disable-next-line radix\n    var a = parseFloat(stringArray[3]);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  };\n  /**\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.onFocusOutInputBox = function () {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n    if (!this.pdfViewerBase.isFreeTextContextMenu) {\n      this.pdfViewer.fireBeforeAddFreeTextAnnotation(this.inputBoxElement.value);\n      // eslint-disable-next-line\n      var pageIndex = this.inputBoxElement.id && this.inputBoxElement.id.split(\"_freeText_\")[1] && this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0] ? parseFloat(this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0]) : this.pdfViewerBase.currentPageNumber - 1;\n      var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex);\n      var width = parseFloat(this.inputBoxElement.style.width);\n      var padding = parseFloat(this.inputBoxElement.style.paddingLeft);\n      // Removed the line since when we click on the freetext the size gets changed. Task Id: 847135\n      if (this.pdfViewer.freeTextSettings.enableAutoFit && !this.isMaximumWidthReached && this.isNewFreeTextAnnot) {\n        width = parseFloat(this.inputBoxElement.style.width);\n        var characterLength = 8;\n        this.inputBoxElement.style.width = width - characterLength + 'px';\n      }\n      var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n      var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n      var inputEleLeft = parseFloat(this.inputBoxElement.style.left);\n      if (this.pdfViewerBase.isMixedSizeDocument) {\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        inputEleLeft = inputEleLeft - canvas.offsetLeft;\n      }\n      var inputEleTop = parseFloat(this.inputBoxElement.style.top);\n      var zoomFactor = this.pdfViewerBase.getZoomFactor();\n      if (this.pdfViewer.isValidFreeText) {\n        this.inputBoxElement.value = 'Type Here';\n        this.pdfViewer.isValidFreeText = false;\n      }\n      var inputValue = this.inputBoxElement.value;\n      var isNewlyAdded = false;\n      if (this.isNewFreeTextAnnot === true) {\n        // eslint-disable-next-line max-len\n        var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        this.isNewFreeTextAnnot = false;\n        isNewlyAdded = true;\n        var annot = void 0;\n        var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('freeText', pageIndex + 1);\n        if (commentsDivid) {\n          document.getElementById(commentsDivid).id = annotationName;\n        }\n        // eslint-disable-next-line\n        var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n        // eslint-disable-next-line\n        var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n        // eslint-disable-next-line\n        this.author = this.author ? this.author : this.pdfViewer.freeTextSettings.author ? this.pdfViewer.freeTextSettings.author : 'Guest';\n        this.subject = this.subject ? this.subject : this.pdfViewer.freeTextSettings.subject ? this.pdfViewer.freeTextSettings.subject : 'Text Box';\n        // eslint-disable-next-line\n        var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n        // eslint-disable-next-line\n        annot = {\n          author: this.author,\n          modifiedDate: currentDateString,\n          subject: this.subject,\n          id: 'free_text' + this.inputBoxCount,\n          // eslint-disable-next-line max-len\n          rotateAngle: 0,\n          dynamicText: inputValue,\n          strokeColor: this.borderColor,\n          thickness: this.borderWidth,\n          fillColor: this.fillColor,\n          bounds: {\n            left: inputEleLeft / zoomFactor,\n            top: inputEleTop / zoomFactor,\n            x: inputEleLeft / zoomFactor,\n            y: inputEleTop / zoomFactor,\n            width: inputEleWidth / zoomFactor,\n            height: inputEleHeight / zoomFactor\n          },\n          annotName: annotationName,\n          shapeAnnotationType: 'FreeText',\n          pageIndex: pageIndex,\n          fontColor: this.fontColor,\n          fontSize: this.fontSize,\n          fontFamily: this.fontFamily,\n          opacity: this.opacity,\n          comments: [],\n          textAlign: this.textAlign,\n          // eslint-disable-next-line max-len\n          font: {\n            isBold: this.isBold,\n            isItalic: this.isItalic,\n            isStrikeout: this.isStrikethrough,\n            isUnderline: this.isUnderline\n          },\n          review: {\n            state: 'Unmarked',\n            stateModel: 'None',\n            modifiedDate: currentDateString,\n            author: this.author\n          },\n          // eslint-disable-next-line max-len\n          annotationSelectorSettings: annotationSelectorSettings,\n          annotationSettings: annotationSettings,\n          customData: this.pdfViewer.annotationModule.getData('FreeText'),\n          isPrint: this.pdfViewer.freeTextSettings && !isNullOrUndefined(this.pdfViewer.freeTextSettings.isPrint) ? this.pdfViewer.freeTextSettings.isPrint : true,\n          allowedInteractions: allowedInteractions,\n          isReadonly: this.isReadonly\n        };\n        if (this.pdfViewer.enableRtl) {\n          annot.textAlign = 'Right';\n        }\n        var annotation = this.pdfViewer.add(annot);\n        // eslint-disable-next-line\n        var bounds = {\n          left: annot.bounds.x,\n          top: annot.bounds.y,\n          width: annot.bounds.width,\n          height: annot.bounds.height\n        };\n        // eslint-disable-next-line\n        var settings = {\n          opacity: annot.opacity,\n          borderColor: annot.strokeColor,\n          borderWidth: annot.thickness,\n          author: annotation.author,\n          subject: annotation.subject,\n          modifiedDate: annotation.modifiedDate,\n          // eslint-disable-next-line\n          fillColor: annot.fillColor,\n          fontSize: annot.fontSize,\n          width: annot.bounds.width,\n          height: annot.bounds.height,\n          fontColor: annot.fontColor,\n          fontFamily: annot.fontFamily,\n          defaultText: annot.dynamicText,\n          fontStyle: annot.font,\n          textAlignment: annot.textAlign\n        };\n        this.pdfViewer.annotation.storeAnnotations(pageIndex, annot, '_annotations_freetext');\n        this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', bounds, settings);\n        this.pdfViewer.fireCommentAdd(annot.annotName, annot.dynamicText, annot);\n        // eslint-disable-next-line\n        this.pdfViewer.annotation.addAction(pageIndex, null, annotation, 'Addition', '', annotation, annotation);\n        this.pdfViewer.renderSelector(annot.pageIndex);\n        this.pdfViewer.clearSelection(annot.pageIndex);\n        this.pdfViewerBase.updateDocumentEditedProperty(true);\n        this.selectedAnnotation = annotation;\n      }\n      this.isInuptBoxInFocus = false;\n      // eslint-disable-next-line\n      if (this.selectedAnnotation && this.pdfViewer.selectedItems.annotations) {\n        inputEleWidth = inputEleWidth / zoomFactor;\n        inputEleHeight = inputEleHeight / zoomFactor;\n        var heightDiff = inputEleHeight - this.selectedAnnotation.bounds.height;\n        var y = undefined;\n        if (heightDiff > 0) {\n          y = this.selectedAnnotation.wrapper.offsetY + heightDiff / 2;\n          y = y > 0 ? y : undefined;\n        }\n        var widthDiff = inputEleWidth - this.selectedAnnotation.bounds.width;\n        var x = undefined;\n        if (widthDiff > 0) {\n          x = this.selectedAnnotation.wrapper.offsetX + widthDiff / 2;\n          x = x > 0 ? x : undefined;\n        } else {\n          widthDiff = Math.abs(widthDiff);\n          x = this.selectedAnnotation.wrapper.offsetX - widthDiff / 2;\n        }\n        this.selectedAnnotation.bounds.width = inputEleWidth;\n        this.selectedAnnotation.bounds.height = inputEleHeight;\n        var lineSpace = 0;\n        lineSpace = parseFloat(this.inputBoxElement.style.fontSize) / zoomFactor / (this.defaultFontSize / 2);\n        this.selectedAnnotation.wrapper.children[1].margin.left = this.freeTextPaddingLeft;\n        this.selectedAnnotation.wrapper.children[1].margin.top = parseFloat(this.inputBoxElement.style.paddingTop) / zoomFactor + lineSpace;\n        this.pdfViewer.annotation.modifyDynamicTextValue(inputValue, this.selectedAnnotation.annotName);\n        this.selectedAnnotation.dynamicText = inputValue;\n        this.modifyInCollection('dynamicText', pageIndex, this.selectedAnnotation, isNewlyAdded);\n        this.modifyInCollection('bounds', pageIndex, this.selectedAnnotation, isNewlyAdded);\n        // eslint-disable-next-line\n        this.pdfViewer.nodePropertyChange(this.selectedAnnotation, {\n          bounds: {\n            width: this.selectedAnnotation.bounds.width,\n            height: this.selectedAnnotation.bounds.height,\n            y: y,\n            x: x\n          }\n        });\n        // eslint-disable-next-line\n        var commentsDiv = document.getElementById(this.selectedAnnotation.annotName);\n        if (commentsDiv && commentsDiv.childNodes) {\n          if (commentsDiv.childNodes[0].ej2_instances) {\n            commentsDiv.childNodes[0].ej2_instances[0].value = inputValue;\n          } else if (commentsDiv.childNodes[0].childNodes && commentsDiv.childNodes[0].childNodes[1].ej2_instances) {\n            commentsDiv.childNodes[0].childNodes[1].ej2_instances[0].value = inputValue;\n          }\n        }\n        this.pdfViewer.renderSelector(this.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n      }\n      if (this.inputBoxElement.parentElement) {\n        if (pageDiv && pageDiv.id === this.inputBoxElement.parentElement.id) {\n          pageDiv.removeChild(this.inputBoxElement);\n        } else {\n          this.inputBoxElement.parentElement.removeChild(this.inputBoxElement);\n        }\n      }\n      var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n      // eslint-disable-next-line\n      this.pdfViewer.renderDrawing(canvass, pageIndex);\n      this.inputBoxCount += 1;\n    } else {\n      this.inputBoxElement.focus();\n      if (!this.isTextSelected) {\n        window.getSelection().removeAllRanges();\n      }\n    }\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n  };\n  /**\n   * @param event\n   * @private\n   */\n  FreeTextAnnotation.prototype.onKeyDownInputBox = function (event) {\n    var inuptEleObj = this;\n    if (event.which === 9 || isNullOrUndefined(this.pdfViewer.selectedItems.annotations[0]) && !this.isNewFreeTextAnnot) {\n      event.preventDefault();\n    }\n    this.selectedAnnotation = this.pdfViewer.selectedItems.annotations && this.isNewFreeTextAnnot ? this.pdfViewer.selectedItems.annotations[0] : this.selectedAnnotation;\n    setTimeout(function () {\n      if (inuptEleObj.defaultHeight < inuptEleObj.inputBoxElement.scrollHeight\n      // eslint-disable-next-line radix\n      && parseInt(inuptEleObj.inputBoxElement.style.height) < inuptEleObj.inputBoxElement.scrollHeight) {\n        inuptEleObj.updateFreeTextAnnotationSize(true);\n      } else {\n        inuptEleObj.updateFreeTextAnnotationSize(false);\n      }\n      // eslint-disable-next-line\n    }, 0);\n  };\n  FreeTextAnnotation.prototype.updateFreeTextAnnotationSize = function (isSize) {\n    var inuptEleObj = this;\n    var enableAutoFit = inuptEleObj.pdfViewer.freeTextSettings.enableAutoFit;\n    if (enableAutoFit) {\n      this.autoFitFreeText();\n    } else {\n      this.isMaximumWidthReached = true;\n    }\n    if (this.isMaximumWidthReached) {\n      // eslint-disable-next-line max-len\n      var previousHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n      if (!isSize && !inuptEleObj.inputBoxElement.readOnly) {\n        inuptEleObj.inputBoxElement.style.height = 'auto';\n      }\n      var currentHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n      var difference = currentHeight - previousHeight;\n      var fontSize = parseFloat(inuptEleObj.inputBoxElement.style.fontSize);\n      // eslint-disable-next-line max-len\n      inuptEleObj.inputBoxElement.style.height = inuptEleObj.inputBoxElement.readOnly ? inuptEleObj.inputBoxElement.style.height : inuptEleObj.inputBoxElement.scrollHeight + fontSize / 2 + 'px';\n      inuptEleObj.inputBoxElement.style.height = difference < 0 && !inuptEleObj.inputBoxElement.readOnly ? previousHeight + 'px' : inuptEleObj.inputBoxElement.style.height;\n    }\n    var zoomFactor = inuptEleObj.pdfViewerBase.getZoomFactor();\n    var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n    var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n    inputEleHeight = inputEleHeight / zoomFactor;\n    inputEleWidth = inputEleWidth / zoomFactor;\n    if (this.selectedAnnotation) {\n      var heightDiff = inputEleHeight - inuptEleObj.selectedAnnotation.bounds.height;\n      var y = 0;\n      if (heightDiff > 0) {\n        y = inuptEleObj.selectedAnnotation.wrapper.offsetY + heightDiff / 2;\n      } else {\n        heightDiff = Math.abs(heightDiff);\n        y = inuptEleObj.selectedAnnotation.wrapper.offsetY - heightDiff / 2;\n      }\n      if (enableAutoFit) {\n        var widthDiff = inputEleWidth - inuptEleObj.selectedAnnotation.bounds.width;\n        var x = 0;\n        if (widthDiff > 0) {\n          x = inuptEleObj.selectedAnnotation.wrapper.offsetX + widthDiff / 2;\n        } else {\n          widthDiff = Math.abs(widthDiff);\n          x = inuptEleObj.selectedAnnotation.wrapper.offsetX - widthDiff / 2;\n        }\n      }\n      inuptEleObj.selectedAnnotation.bounds.width = inputEleWidth;\n      inuptEleObj.selectedAnnotation.bounds.height = inputEleHeight;\n      if (enableAutoFit) {\n        // eslint-disable-next-line\n        inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, {\n          bounds: {\n            width: inuptEleObj.selectedAnnotation.bounds.width,\n            height: inuptEleObj.selectedAnnotation.bounds.height,\n            y: y,\n            x: x\n          }\n        });\n      } else {\n        // eslint-disable-next-line\n        inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, {\n          bounds: {\n            width: inuptEleObj.selectedAnnotation.bounds.width,\n            height: inuptEleObj.selectedAnnotation.bounds.height,\n            y: y\n          }\n        });\n      }\n      inuptEleObj.pdfViewer.renderSelector(inuptEleObj.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n    }\n  };\n  /**\n   * @param event\n   * @private\n   */\n  FreeTextAnnotation.prototype.autoFitFreeText = function (xPosition, yPosition) {\n    var pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n    var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex);\n    // eslint-disable-next-line\n    var canvas = this.pdfViewerBase.getElement('_annotationCanvas_' + pageIndex);\n    // eslint-disable-next-line\n    var context = canvas.getContext(\"2d\");\n    // eslint-disable-next-line\n    var fontSize = this.inputBoxElement.style.fontSize;\n    if (this.pdfViewer.freeTextSettings.fontStyle === FontStyle.Bold || this.inputBoxElement.style.fontWeight === 'bold') {\n      context.font = 'bold' + ' ' + fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n    } else {\n      context.font = fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n    }\n    var highestTextNode = \"\";\n    // eslint-disable-next-line\n    var textNodes = [];\n    var textboxValue = this.inputBoxElement.value;\n    if (textboxValue.indexOf('\\n') > -1) {\n      textNodes = textboxValue.split('\\n');\n      for (var j = 0; j < textNodes.length; j++) {\n        // eslint-disable-next-line\n        var textNodeData = context.measureText(textNodes[j]);\n        // eslint-disable-next-line\n        var highestTextNodeData = context.measureText(highestTextNode);\n        if (textNodeData.width > highestTextNodeData.width) {\n          highestTextNode = textNodes[j];\n        }\n      }\n      this.isMaximumWidthReached = true;\n    } else {\n      highestTextNode = textboxValue;\n      this.isMaximumWidthReached = false;\n    }\n    // eslint-disable-next-line\n    var textwidth = context.measureText(highestTextNode);\n    fontSize = parseFloat(this.inputBoxElement.style.fontSize);\n    var inputEleWidth;\n    var characterLength = 8;\n    var inputEleHeight = fontSize + fontSize / 2;\n    if (this.isNewFreeTextAnnot) {\n      inputEleWidth = Math.ceil(textwidth.width + (characterLength + 1) * 2);\n      this.inputBoxElement.style.height = inputEleHeight + 'px';\n      this.inputBoxElement.style.top = yPosition - inputEleHeight / 2 + 'px';\n    } else {\n      inputEleWidth = Math.ceil(textwidth.width) + fontSize + Math.ceil(characterLength / 2);\n    }\n    // Removed the line since when we double click on the freetext the size gets changed. Task Id: 847135\n    this.inputBoxElement.style.width = inputEleWidth + 'px';\n    var maxWidth = this.pdfViewerBase.getPageWidth(pageIndex) - parseFloat(this.inputBoxElement.style.left);\n    if (parseFloat(this.inputBoxElement.style.width) > maxWidth) {\n      this.isMaximumWidthReached = true;\n      if (this.isNewAddedAnnot && xPosition) {\n        inputEleWidth = inputEleWidth - characterLength;\n        this.inputBoxElement.style.width = inputEleWidth + 'px';\n        var width = xPosition + inputEleWidth * this.pdfViewerBase.getZoomFactor();\n        var x = parseFloat(this.inputBoxElement.style.left);\n        if (width >= this.pdfViewerBase.getPageWidth(pageIndex)) {\n          x = this.pdfViewerBase.getPageWidth(pageIndex) - inputEleWidth;\n        }\n        this.inputBoxElement.style.left = x + 'px';\n      } else {\n        this.inputBoxElement.style.width = maxWidth + 'px';\n      }\n    }\n  };\n  /**\n   * @param event\n   * @private\n   */\n  FreeTextAnnotation.prototype.onMouseUpInputBox = function (event) {\n    // eslint-disable-next-line\n    var target = event.target;\n    this.selectionStart = 0;\n    this.selectionEnd = 0;\n    if (event.which === 3 && target) {\n      this.selectionStart = target.selectionStart;\n      this.selectionEnd = target.selectionEnd;\n    }\n    if (event.which === 3 && window.getSelection() != null && window.getSelection().toString() !== '') {\n      this.isTextSelected = true;\n    } else {\n      this.isTextSelected = false;\n    }\n  };\n  /**\n   * @param currentPosition\n   * @param annotation\n   * @param pageIndex\n   * @private\n   */\n  FreeTextAnnotation.prototype.addInuptElemet = function (currentPosition, annotation, pageIndex) {\n    if (annotation === void 0) {\n      annotation = null;\n    }\n    this.currentPosition = [];\n    if (isNullOrUndefined(pageIndex)) {\n      pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n    }\n    if (annotation) {\n      pageIndex = annotation.pageIndex;\n    }\n    if (isBlazor() && annotation === null && this.pdfViewer.selectedItems.annotations.length === 0) {\n      this.updateTextProperties();\n    }\n    this.inputBoxElement.id = this.pdfViewer.element.id + '_freeText_' + pageIndex + '_' + this.inputBoxCount;\n    var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex);\n    var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n    var zoomFactor = this.pdfViewerBase.getZoomFactor();\n    this.inputBoxElement.value = annotation && annotation.dynamicText ? annotation.dynamicText : this.defaultText;\n    this.inputBoxElement.style.boxSizing = 'border-box';\n    this.inputBoxElement.style.left = currentPosition.x + 'px';\n    this.inputBoxElement.style.top = currentPosition.y - this.defaultHeight * zoomFactor / 2 + 'px';\n    if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n      this.inputBoxElement.style.wordBreak = 'break-all';\n    } else {\n      this.inputBoxElement.style.wordBreak = 'break-word';\n    }\n    if (annotation) {\n      this.applyFreetextStyles(zoomFactor, annotation.isReadonly);\n    } else {\n      this.applyFreetextStyles(zoomFactor);\n    }\n    if (this.isBold) {\n      this.inputBoxElement.style.fontWeight = 'bold';\n    } else {\n      this.inputBoxElement.style.fontWeight = 'normal';\n    }\n    if (this.isItalic) {\n      this.inputBoxElement.style.fontStyle = 'italic';\n    } else {\n      this.inputBoxElement.style.fontStyle = 'normal';\n    }\n    this.inputBoxElement.style.textDecoration = 'none';\n    if (this.isUnderline) {\n      this.inputBoxElement.style.textDecoration = 'underline';\n    }\n    if (this.isStrikethrough) {\n      this.inputBoxElement.style.textDecoration = 'line-through';\n    }\n    if (this.pdfViewer.enableRtl) {\n      this.inputBoxElement.style.textAlign = 'right';\n      this.inputBoxElement.style.direction = 'rtl';\n      this.inputBoxElement.style.left = currentPosition.x - this.defautWidth * zoomFactor / 2;\n    } else {\n      this.inputBoxElement.style.textAlign = this.textAlign.toLowerCase();\n    }\n    this.inputBoxElement.style.borderColor = this.borderColor;\n    this.inputBoxElement.style.color = this.fontColor;\n    this.inputBoxElement.style.background = this.fillColor;\n    if (annotation && annotation.wrapper && annotation.wrapper.children[0]) {\n      this.inputBoxElement.style.opacity = annotation.wrapper.children[0].style.opacity;\n    }\n    if (this.isNewFreeTextAnnot === true) {\n      this.pdfViewer.clearSelection(pageIndex);\n    }\n    if (annotation && annotation.wrapper && annotation.wrapper.bounds) {\n      var annotationBounds = annotation.wrapper.bounds;\n      if (annotationBounds.left) {\n        this.inputBoxElement.style.left = annotationBounds.left * zoomFactor + 'px';\n      }\n      if (annotationBounds.top) {\n        this.inputBoxElement.style.top = annotationBounds.top * zoomFactor + 'px';\n      }\n      // eslint-disable-next-line max-len\n      this.inputBoxElement.style.height = annotationBounds.height ? annotationBounds.height * zoomFactor + 'px' : this.defaultHeight * zoomFactor + 'px';\n      // eslint-disable-next-line max-len\n      this.inputBoxElement.style.width = annotationBounds.width ? annotationBounds.width * zoomFactor + 'px' : this.defautWidth * zoomFactor + 'px';\n      this.selectedAnnotation = annotation;\n      this.previousText = this.selectedAnnotation.dynamicText;\n      this.selectedAnnotation.dynamicText = '';\n      this.inputBoxElement.style.borderColor = this.selectedAnnotation.strokeColor;\n      this.inputBoxElement.style.color = this.selectedAnnotation.fontColor;\n      this.inputBoxElement.style.background = this.selectedAnnotation.fillColor;\n      if (this.selectedAnnotation.font.isBold === true) {\n        this.inputBoxElement.style.fontWeight = 'bold';\n      }\n      if (this.selectedAnnotation.font.isItalic === true) {\n        this.inputBoxElement.style.fontStyle = 'italic';\n      }\n      if (this.selectedAnnotation.font.isUnderline === true) {\n        this.inputBoxElement.style.textDecoration = 'underline';\n      }\n      if (this.selectedAnnotation.font.isStrikeout === true) {\n        this.inputBoxElement.style.textDecoration = 'line-through';\n      }\n      if (this.pdfViewer.enableRtl) {\n        this.inputBoxElement.style.textAlign = 'right';\n        this.inputBoxElement.style.direction = 'rtl';\n      } else if (this.selectedAnnotation.textAlign) {\n        this.inputBoxElement.style.textAlign = this.selectedAnnotation.textAlign;\n      }\n      this.inputBoxElement.style.fontSize = this.selectedAnnotation.fontSize * zoomFactor + 'px';\n      this.inputBoxElement.style.fontFamily = this.selectedAnnotation.fontFamily;\n      this.pdfViewer.nodePropertyChange(this.selectedAnnotation, {});\n    }\n    if (this.pdfViewerBase.isMixedSizeDocument) {\n      this.inputBoxElement.style.left = parseFloat(this.inputBoxElement.style.left) + canvass.offsetLeft + 'px';\n    }\n    this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n    if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n      this.autoFitFreeText(currentPosition.x, currentPosition.y);\n    }\n    this.inputBoxElement.style.paddingLeft = this.freeTextPaddingLeft * zoomFactor + 'px';\n    this.inputBoxElement.style.paddingTop = parseFloat(this.inputBoxElement.style.fontSize) / zoomFactor / this.defaultFontSize / zoomFactor * this.freeTextPaddingTop + 'px';\n    var lineSpace = 0;\n    lineSpace = parseFloat(this.inputBoxElement.style.fontSize) / zoomFactor / (this.defaultFontSize / 2);\n    this.inputBoxElement.style.paddingTop = parseFloat(this.inputBoxElement.style.paddingTop) - lineSpace + 'px';\n    pageDiv.appendChild(this.inputBoxElement);\n    // eslint-disable-next-line\n    if (!this.pdfViewer.freeTextSettings.enableAutoFit && this.defaultHeight * zoomFactor < this.inputBoxElement.scrollHeight && parseInt(this.inputBoxElement.style.height) < this.inputBoxElement.scrollHeight) {\n      this.inputBoxElement.style.height = this.inputBoxElement.scrollHeight + 'px';\n    }\n    this.isInuptBoxInFocus = true;\n    this.inputBoxElement.focus();\n    if (this.isNewFreeTextAnnot === true || this.inputBoxElement.value === this.defaultText) {\n      this.inputBoxElement.select();\n      this.pdfViewerBase.isFreeTextSelected = true;\n    }\n    this.currentPosition.push(parseInt(this.inputBoxElement.style.left) / zoomFactor, parseInt(this.inputBoxElement.style.top) / zoomFactor, parseInt(this.inputBoxElement.style.width) / zoomFactor, parseInt(this.inputBoxElement.style.height) / zoomFactor);\n  };\n  FreeTextAnnotation.prototype.applyFreetextStyles = function (zoomFactor, isReadonly) {\n    this.inputBoxElement.style.height = this.defaultHeight * zoomFactor + 'px';\n    this.inputBoxElement.style.width = this.defautWidth * zoomFactor + 'px';\n    this.inputBoxElement.style.borderWidth = this.borderWidth * zoomFactor + 'px';\n    this.inputBoxElement.style.fontSize = this.fontSize * zoomFactor + 'px';\n    this.inputBoxElement.style.fontFamily = this.fontFamily;\n    this.inputBoxElement.readOnly = isNullOrUndefined(isReadonly) ? this.isReadonly : isReadonly;\n  };\n  /**\n   * @private\n   */\n  FreeTextAnnotation.prototype.copySelectedText = function () {\n    if (window.getSelection() !== null) {\n      this.selectedText = window.getSelection().toString();\n      var textArea = document.createElement('textarea');\n      textArea.contentEditable = 'true';\n      textArea.textContent = this.selectedText;\n      textArea.style.position = 'fixed';\n      document.body.appendChild(textArea);\n      textArea.select();\n      try {\n        document.execCommand('copy');\n      } catch (ex) {\n        console.warn('Copy to clipboard failed.', ex);\n      } finally {\n        if (textArea) {\n          document.body.removeChild(textArea);\n        }\n      }\n    }\n  };\n  /**\n   * @param target\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.pasteSelectedText = function (target) {\n    if (this.selectedText !== '' && target) {\n      // eslint-disable-next-line\n      var text = target.value;\n      target.value = text.slice(0, this.selectionStart) + this.selectedText + text.slice(this.selectionEnd, text.length);\n    }\n    // eslint-disable-next-line\n    var events = event;\n    this.onKeyDownInputBox(events);\n  };\n  /**\n   * @param target\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.cutSelectedText = function (target) {\n    if (window.getSelection() !== null) {\n      // eslint-disable-next-line\n      var text = target.value;\n      this.selectedText = window.getSelection().toString();\n      target.value = text.slice(0, target.selectionStart) + text.slice(target.selectionEnd);\n      var textArea = document.createElement('textarea');\n      textArea.contentEditable = 'true';\n      textArea.textContent = this.selectedText;\n      textArea.style.position = 'fixed';\n      document.body.appendChild(textArea);\n      textArea.select();\n      try {\n        document.execCommand('cut');\n      } catch (ex) {\n        console.warn('Copy to clipboard failed.', ex);\n      } finally {\n        if (textArea) {\n          document.body.removeChild(textArea);\n        }\n      }\n    }\n  };\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.saveImportedFreeTextAnnotations = function (shapeAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var annotation = shapeAnnotations;\n    if (annotation.AnnotType) {\n      var vertexPoints = null;\n      if (annotation.VertexPoints) {\n        vertexPoints = [];\n        for (var j = 0; j < annotation.VertexPoints.length; j++) {\n          var point = {\n            x: annotation.VertexPoints[j].X,\n            y: annotation.VertexPoints[j].Y\n          };\n          vertexPoints.push(point);\n        }\n      }\n      // eslint-disable-next-line max-len\n      annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n      var annot = void 0;\n      // eslint-disable-next-line max-len\n      annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n      var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X : annotation.Bounds.x;\n      var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y : annotation.Bounds.y;\n      var annotationBoundsWidth = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n      var annotationBoundsHeight = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n      // eslint-disable-next-line\n      annot = {\n        author: annotation.Author,\n        allowedInteractions: annotation.allowedInteractions,\n        modifiedDate: annotation.ModifiedDate,\n        subject: annotation.Subject,\n        id: 'freetext',\n        rotateAngle: annotation.Rotate,\n        dynamicText: annotation.MarkupText,\n        strokeColor: annotation.StrokeColor,\n        thickness: annotation.Thickness,\n        fillColor: annotation.FillColor,\n        bounds: {\n          x: annotationBoundsX,\n          y: annotationBoundsY,\n          left: annotationBoundsX,\n          top: annotationBoundsY,\n          width: annotationBoundsWidth,\n          height: annotationBoundsHeight,\n          right: annotation.Bounds.Right,\n          bottom: annotation.Bounds.Bottom\n        },\n        annotName: annotation.AnnotName,\n        shapeAnnotationType: 'FreeText',\n        // eslint-disable-next-line\n        pageIndex: pageNumber,\n        opacity: annotation.Opacity,\n        fontColor: annotation.FontColor,\n        fontSize: annotation.FontSize,\n        fontFamily: annotation.FontFamily,\n        notes: annotation.MarkupText,\n        textAlign: annotation.TextAlign,\n        // eslint-disable-next-line\n        comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n        review: {\n          state: annotation.State,\n          stateModel: annotation.StateModel,\n          modifiedDate: annotation.ModifiedDate,\n          author: annotation.Author\n        },\n        font: {\n          isBold: annotation.Font.Bold,\n          isItalic: annotation.Font.Italic,\n          isStrikeout: annotation.Font.Strikeout,\n          isUnderline: annotation.Font.Underline\n        },\n        annotationSelectorSettings: this.getSettings(annotation),\n        annotationSettings: annotation.AnnotationSettings,\n        // eslint-disable-next-line max-len\n        customData: this.pdfViewer.annotation.getCustomData(annotation),\n        isPrint: annotation.IsPrint,\n        isCommentLock: annotation.IsCommentLock,\n        isReadonly: annotation.IsReadonly\n      };\n      this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n    }\n  };\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n  FreeTextAnnotation.prototype.updateFreeTextAnnotationCollections = function (shapeAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var annotation = shapeAnnotations;\n    annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n    if (annotation.AnnotType) {\n      var vertexPoints = null;\n      if (annotation.VertexPoints) {\n        vertexPoints = [];\n        for (var j = 0; j < annotation.VertexPoints.length; j++) {\n          var point = {\n            x: annotation.VertexPoints[j].X,\n            y: annotation.VertexPoints[j].Y\n          };\n          vertexPoints.push(point);\n        }\n      }\n      // eslint-disable-next-line max-len\n      annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n      if (annotation.IsLocked) {\n        annotation.AnnotationSettings.isLock = annotation.IsLocked;\n      }\n      // eslint-disable-next-line max-len\n      annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n      var annotationBoundsX = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n      var annotationBoundsY = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n      var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n      var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n      // eslint-disable-next-line\n      var annot = void 0;\n      // eslint-disable-next-line\n      annot = {\n        author: annotation.Author,\n        allowedInteractions: annotation.allowedInteractions,\n        modifiedDate: annotation.ModifiedDate,\n        subject: annotation.Subject,\n        id: 'freetext',\n        rotateAngle: annotation.Rotate,\n        dynamicText: annotation.MarkupText,\n        strokeColor: annotation.StrokeColor,\n        thickness: annotation.Thickness,\n        fillColor: annotation.FillColor,\n        bounds: {\n          x: annotationBoundsX,\n          y: annotationBoundsY,\n          left: annotationBoundsX,\n          top: annotationBoundsY,\n          width: width,\n          height: height,\n          right: annotation.Bounds.Right,\n          bottom: annotation.Bounds.Bottom\n        },\n        annotationId: annotation.AnnotName,\n        shapeAnnotationType: 'FreeText',\n        // eslint-disable-next-line\n        pageIndex: pageNumber,\n        opacity: annotation.Opacity,\n        fontColor: annotation.FontColor,\n        fontSize: annotation.FontSize,\n        fontFamily: annotation.FontFamily,\n        notes: annotation.MarkupText,\n        // eslint-disable-next-line\n        comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n        review: {\n          state: annotation.State,\n          stateModel: annotation.StateModel,\n          modifiedDate: annotation.ModifiedDate,\n          author: annotation.Author\n        },\n        customData: this.pdfViewer.annotation.getCustomData(annotation),\n        font: {\n          isBold: annotation.Font.Bold,\n          isItalic: annotation.Font.Italic,\n          isStrikeout: annotation.Font.Strikeout,\n          isUnderline: annotation.Font.Underline\n        },\n        pageNumber: pageNumber,\n        annotationSettings: annotation.AnnotationSettings,\n        isCommentLock: annotation.IsCommentLock,\n        isReadonly: annotation.IsReadonly,\n        isPrint: annotation.IsPrint\n      };\n      return annot;\n    }\n  };\n  /**\n   * This method used to add annotations with using program.\n   *\n   * @param annotationType - It describes type of annotation\n   * @param offset - It describes about the annotation bounds\n   * @returns Object\n   * @private\n   */\n  FreeTextAnnotation.prototype.updateAddAnnotationDetails = function (annotationObject, offset) {\n    //Creating new object if annotationObject is null\n    if (!annotationObject) {\n      annotationObject = {\n        offset: {\n          x: 1,\n          y: 1\n        },\n        pageNumber: 0,\n        width: undefined,\n        height: undefined\n      };\n      offset = annotationObject.offset;\n    } else if (!annotationObject.offset) offset = {\n      x: 1,\n      y: 1\n    };else offset = annotationObject.offset;\n    //Creating the CurrentDate and Annotation name\n    var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n    var annotationName = this.pdfViewer.annotation.createGUID();\n    var fontStyle = annotationObject.fontStyle ? annotationObject.fontStyle : FontStyle.None;\n    //Creating annotation settings\n    var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n    var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n    var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n    annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('freeText', annotationSettings.annotationSubType);\n    annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : annotationSettings.isLock;\n    if (this.pdfViewer.freeTextSettings.isLock || this.pdfViewer.annotationSettings.isLock || this.pdfViewer.freeTextSettings.isReadonly) {\n      annotationObject.isReadonly = true;\n    }\n    annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : 0;\n    annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : 0;\n    annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : 0;\n    annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : 0;\n    annotationObject.width = annotationObject.width ? annotationObject.width : 150;\n    annotationObject.height = annotationObject.height ? annotationObject.height : 24.6;\n    //Creating Annotation objects with it's proper properties\n    var freeTextAnnotation = [];\n    var freeText = {\n      AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n      AnnotName: annotationName,\n      AnnotType: 'freeText',\n      AnnotationFlags: 'Default',\n      AnnotationIntent: null,\n      AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n      AnnotationSettings: annotationSettings,\n      Author: annotationObject.author ? annotationObject.author : 'Guest',\n      Border: {\n        HorizontalRadius: 0,\n        VerticalRadius: 0,\n        Width: annotationObject.borderWidth ? annotationObject.borderWidth : 1\n      },\n      BorderColor: {\n        IsEmpty: true,\n        B: 255,\n        Blue: 1,\n        C: 0,\n        G: 255\n      },\n      Bounds: {\n        X: offset.x,\n        Y: offset.y,\n        Width: annotationObject.width,\n        Height: annotationObject.height,\n        Left: offset.x,\n        Top: offset.y,\n        Right: offset.x + annotationObject.width,\n        Bottom: offset.y + annotationObject.height\n      },\n      CalloutLines: null,\n      Color: {\n        IsEmpty: false,\n        B: 51,\n        Blue: 0.2,\n        C: 0,\n        G: 255\n      },\n      Comments: null,\n      CreatedDate: currentDateString,\n      CustomData: annotationObject.customData ? annotationObject.customData : null,\n      ExistingCustomData: null,\n      FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n      Flatten: false,\n      FlattenPopups: false,\n      Font: {\n        Bold: fontStyle == FontStyle.Bold ? true : false,\n        Italic: fontStyle == FontStyle.Italic ? true : false,\n        Strikeout: fontStyle == FontStyle.Strikethrough ? true : false,\n        Underline: fontStyle == FontStyle.Underline ? true : false\n      },\n      FontColor: annotationObject.fontColor ? annotationObject.fontColor : '#000',\n      FontFamily: annotationObject.fontFamily ? annotationObject.fontFamily : 'Helvetica',\n      FontSize: annotationObject.fontSize ? annotationObject.fontSize : 16,\n      FreeTextAnnotationType: 'Text Box',\n      InnerColor: null,\n      IsCommentLock: false,\n      IsLock: annotationObject.isLock ? annotationObject.isLock : false,\n      IsPrint: annotationObject.isPrint !== null && annotationObject.isPrint !== undefined ? annotationObject.isPrint : true,\n      Layer: null,\n      LineEndingStyle: 'OpenArrow',\n      Location: null,\n      MarkupText: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n      ModifiedDate: '',\n      Name: annotationName,\n      Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n      Page: null,\n      PageTags: null,\n      ReviewHistory: null,\n      Rotate: 0,\n      IsReadonly: annotationObject.isReadonly ? annotationObject.isReadonly : false,\n      State: 'Unmarked',\n      StateModel: 'None',\n      StrokeColor: annotationObject.borderColor ? annotationObject.borderColor : '#ffffff00',\n      Subject: annotationObject.subject ? annotationObject.subject : 'Text Box',\n      Text: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n      TextAlign: annotationObject.textAlignment ? annotationObject.textAlignment : 'Left',\n      TextMarkupColor: null,\n      Thickness: annotationObject.borderWidth ? annotationObject.borderWidth : 1,\n      isAddAnnotationProgramatically: true\n    };\n    //Adding the annotation object to an array and return it\n    freeTextAnnotation[0] = freeText;\n    return {\n      freeTextAnnotation: freeTextAnnotation\n    };\n  };\n  /**\n   * This method used to get the padding.\n  */\n  FreeTextAnnotation.prototype.getPaddingValues = function (fontSize) {\n    var leftPadding = 4; // Left padding used in the drawing.js\n    var topPadding = 5; // Top padding used in the drawing.js\n    var inputBoxpadding = 2; // we have set the input box padding for the free text.\n    topPadding = (topPadding - inputBoxpadding) * (fontSize / 16);\n    return [leftPadding, topPadding];\n  };\n  /**\n   * @private\n   * This method used tp get the current position of x and y.\n  */\n  FreeTextAnnotation.prototype.addInputInZoom = function (currentPosition) {\n    var zoomFactor = this.pdfViewerBase.getZoomFactor();\n    this.inputBoxElement.style.left = currentPosition.x * zoomFactor + 'px';\n    this.inputBoxElement.style.top = currentPosition.y * zoomFactor + 'px';\n    this.inputBoxElement.style.height = currentPosition.height * zoomFactor + 'px';\n    this.inputBoxElement.style.width = currentPosition.width * zoomFactor + 'px';\n    this.inputBoxElement.style.borderWidth = this.borderWidth * zoomFactor + 'px';\n    this.inputBoxElement.style.fontSize = this.fontSize * zoomFactor + 'px';\n  };\n  return FreeTextAnnotation;\n}();\nexport { FreeTextAnnotation };","map":{"version":3,"names":["FontStyle","isBlazor","isNullOrUndefined","FreeTextAnnotation","pdfviewer","pdfViewerBase","inputBoxCount","isFreeTextValueChange","isAddAnnotationProgramatically","isInuptBoxInFocus","freeTextPageNumbers","selectedText","isTextSelected","selectionStart","selectionEnd","isBold","isItalic","isUnderline","isStrikethrough","isReadonly","isMaximumWidthReached","freeTextPaddingLeft","freeTextPaddingTop","defaultFontSize","lineGap","previousText","currentPosition","pdfViewer","updateTextProperties","inputBoxElement","document","createElement","style","position","Width","defautWidth","Height","defaultHeight","zIndex","fontSize","className","resize","borderColor","background","fillColor","borderStyle","borderWidth","padding","paddingLeft","paddingTop","parseFloat","borderRadius","verticalAlign","fontFamily","color","freeTextSettings","fontColor","overflow","wordBreak","readOnly","addEventListener","onFocusOutInputBox","bind","onKeyDownInputBox","onMouseUpInputBox","prototype","width","height","opacity","author","annotationSettings","annotationModule","getRgbCode","a","fontName","textAlign","textAlignment","defaultText","enableAutoFit","isLock","fontStyle","renderFreeTextAnnotations","shapeAnnotations","pageNumber","isImportAction","isAnnotOrderAction","isFreeTextAdded","p","length","push","i","annotation","annotationAddMode","findAnnotationMode","AnnotType","vertexPoints","VertexPoints","j","point","x","X","y","Y","AnnotationSettings","updateSettings","annot","paddingValue","annotationBoundsX","Bounds","annotationBoundsY","isAddedProgramatically","rotateValue","getRotationValue","originalRotation","Rotate","pageRotate","PageRotation","Math","sign","rotateAngle","abs","isJsonImported","pageDetails","pageSize","boundsX","boundsY","annotationWidth","annotationHeight","rotatation","rotationHeight","rotationWidth","allowedInteractions","AllowedInteractions","updateAnnotationAllowedInteractions","MarkupText","includes","noOfLines","split","newHeight","FontSize","pageHeight","Author","modifiedDate","ModifiedDate","subject","Subject","id","dynamicText","strokeColor","StrokeColor","thickness","Thickness","FillColor","bounds","left","top","right","Right","bottom","Bottom","annotName","AnnotName","shapeAnnotationType","pageIndex","Opacity","FontColor","pageRotation","FontFamily","notes","TextAlign","comments","getAnnotationComments","Comments","review","state","State","stateModel","StateModel","font","Font","Bold","Italic","isStrikeout","Strikeout","Underline","annotationSelectorSettings","getSettings","customData","getCustomData","isPrint","IsPrint","isCommentLock","IsCommentLock","IsReadonly","isAddAnnotationProgrammatically","previousFontSize","addedAnnot","add","storeAnnotations","settings","fireAnnotationAdd","freeTextAnnotationModule","nodePropertyChange","selector","AnnotationSelectorSettings","setAnnotationType","type","disableTextSelectionMode","isFormFieldShape","currentAnnotationMode","modifiedDateRect","stickyNotesAnnotationModule","getDateAndTime","drawingObject","borderDashArray","tool","modifyInCollection","property","annotationBase","isNewAdded","formFieldAnnotationType","currentAnnotObject","isEdited","pageAnnotations","getAnnotations","wrapper","children","fill","strokeWidth","note","splice","fireCommentEdit","storeAnnotationCollections","manageAnnotations","updateDocumentEditedProperty","addInCollection","saveFreeTextAnnotations","storeObject","window","sessionStorage","getItem","documentId","isStorageExceed","annotationStorage","annotations","Array","pageCount","skipDownload","annotationCollection","JSON","parse","newArray","pageAnnotationObject","z","updateModifiedDate","getBoundsBasedOnRotation","stringify","getBounds","strokeColorString","fillColorString","fontColorString","rectangleDifference","getPaddingValues","isAddedProgrammatically","rotation","annotObject","removeItem","index","getPageCollection","annotationStringified","setItem","colorString","match","nameToHash","stringArray","getValue","r","g","b","allowServerDataBind","allowServerDataBinding","enableServerDataBinding","isFreeTextContextMenu","fireBeforeAddFreeTextAnnotation","value","currentPageNumber","pageDiv","getElement","isNewFreeTextAnnot","characterLength","inputEleHeight","inputEleWidth","inputEleLeft","isMixedSizeDocument","canvas","getElementById","element","offsetLeft","inputEleTop","zoomFactor","getZoomFactor","isValidFreeText","inputValue","isNewlyAdded","currentDateString","annotationName","createGUID","commentsDivid","addComments","getData","enableRtl","fireCommentAdd","addAction","renderSelector","clearSelection","selectedAnnotation","selectedItems","heightDiff","undefined","offsetY","widthDiff","offsetX","lineSpace","margin","modifyDynamicTextValue","commentsDiv","childNodes","ej2_instances","parentElement","removeChild","canvass","renderDrawing","focus","getSelection","removeAllRanges","event","inuptEleObj","which","preventDefault","setTimeout","scrollHeight","parseInt","updateFreeTextAnnotationSize","isSize","autoFitFreeText","previousHeight","getBoundingClientRect","currentHeight","difference","xPosition","yPosition","context","getContext","fontWeight","highestTextNode","textNodes","textboxValue","indexOf","textNodeData","measureText","highestTextNodeData","textwidth","ceil","maxWidth","getPageWidth","isNewAddedAnnot","target","toString","addInuptElemet","boxSizing","applyFreetextStyles","textDecoration","direction","toLowerCase","annotationBounds","appendChild","select","isFreeTextSelected","copySelectedText","textArea","contentEditable","textContent","body","execCommand","ex","console","warn","pasteSelectedText","text","slice","events","cutSelectedText","saveImportedFreeTextAnnotations","annotationBoundsWidth","annotationBoundsHeight","updateFreeTextAnnotationCollections","IsLocked","annotationId","updateAddAnnotationDetails","annotationObject","offset","None","updateAnnotationAuthor","annotationSubType","minHeight","minWidth","maxHeight","freeTextAnnotation","freeText","AnnotationFlags","AnnotationIntent","Border","HorizontalRadius","VerticalRadius","BorderColor","IsEmpty","B","Blue","C","G","Left","Top","CalloutLines","Color","CreatedDate","CustomData","ExistingCustomData","Flatten","FlattenPopups","Strikethrough","FreeTextAnnotationType","InnerColor","IsLock","Layer","LineEndingStyle","Location","Name","Page","PageTags","ReviewHistory","Text","TextMarkupColor","leftPadding","topPadding","inputBoxpadding","addInputInZoom"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/annotation/free-text-annotation.js"],"sourcesContent":["/* eslint-disable */\nimport { FontStyle } from './../base/types';\nimport { isBlazor, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar FreeTextAnnotation = /** @class */ (function () {\n    function FreeTextAnnotation(pdfviewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.inputBoxCount = 0;\n        /**\n         * @private\n         */\n        this.isFreeTextValueChange = false;\n        /**\n         * @private\n         */\n        this.isAddAnnotationProgramatically = false;\n        /**\n         * @private\n         */\n        this.isInuptBoxInFocus = false;\n        /**\n         * @private\n         */\n        // eslint-disable-next-line\n        this.freeTextPageNumbers = [];\n        /**\n         * @private\n         */\n        this.selectedText = '';\n        /**\n         * @private\n         */\n        this.isTextSelected = false;\n        this.selectionStart = 0;\n        this.selectionEnd = 0;\n        /**\n         * @private\n         */\n        this.isBold = false;\n        /**\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * @private\n         */\n        this.isUnderline = false;\n        /**\n         * @private\n         */\n        this.isStrikethrough = false;\n        this.isReadonly = false;\n        this.isMaximumWidthReached = false;\n        this.freeTextPaddingLeft = 4;\n        this.freeTextPaddingTop = 5;\n        this.defaultFontSize = 16;\n        this.lineGap = 1.5;\n        /**\n         * @private\n         */\n        this.previousText = 'Type Here';\n        /**\n         * @private\n         */\n        this.currentPosition = [];\n        this.pdfViewer = pdfviewer;\n        this.pdfViewerBase = pdfViewerBase;\n        this.updateTextProperties();\n        this.inputBoxElement = document.createElement('textarea');\n        this.inputBoxElement.style.position = 'absolute';\n        this.inputBoxElement.style.Width = this.defautWidth;\n        this.inputBoxElement.style.Height = this.defaultHeight;\n        this.inputBoxElement.style.zIndex = '5';\n        this.inputBoxElement.style.fontSize = this.fontSize + 'px';\n        this.inputBoxElement.className = 'free-text-input';\n        this.inputBoxElement.style.resize = 'none';\n        this.inputBoxElement.style.borderColor = this.borderColor;\n        this.inputBoxElement.style.background = this.fillColor;\n        this.inputBoxElement.style.borderStyle = this.borderStyle;\n        this.inputBoxElement.style.borderWidth = this.borderWidth + 'px';\n        this.inputBoxElement.style.padding = this.padding;\n        this.inputBoxElement.style.paddingLeft = this.freeTextPaddingLeft + 'px';\n        this.inputBoxElement.style.paddingTop = this.freeTextPaddingTop * (parseFloat(this.inputBoxElement.style.fontSize) / this.defaultFontSize) + 'px';\n        this.inputBoxElement.style.borderRadius = '2px';\n        this.inputBoxElement.style.verticalAlign = 'middle';\n        this.inputBoxElement.style.fontFamily = this.fontFamily;\n        this.inputBoxElement.style.color = this.pdfViewer.freeTextSettings.fontColor ?\n            this.pdfViewer.freeTextSettings.fontColor : '#000';\n        this.inputBoxElement.style.overflow = 'hidden';\n        this.inputBoxElement.style.wordBreak = this.wordBreak;\n        this.inputBoxElement.readOnly = this.isReadonly;\n        this.inputBoxElement.addEventListener('focusout', this.onFocusOutInputBox.bind(this));\n        this.inputBoxElement.addEventListener('keydown', this.onKeyDownInputBox.bind(this));\n        this.inputBoxElement.addEventListener('mouseup', this.onMouseUpInputBox.bind(this));\n        this.freeTextPageNumbers = [];\n    }\n    /**\n     * @private\n     */\n    FreeTextAnnotation.prototype.updateTextProperties = function () {\n        this.defautWidth = this.pdfViewer.freeTextSettings.width ? this.pdfViewer.freeTextSettings.width : 151;\n        this.defaultHeight = this.pdfViewer.freeTextSettings.height ? this.pdfViewer.freeTextSettings.height : 24.6;\n        this.borderColor = this.pdfViewer.freeTextSettings.borderColor ? this.pdfViewer.freeTextSettings.borderColor : '#ffffff00';\n        this.fillColor = this.pdfViewer.freeTextSettings.fillColor ? this.pdfViewer.freeTextSettings.fillColor : '#fff';\n        this.borderStyle = this.pdfViewer.freeTextSettings.borderStyle ? this.pdfViewer.freeTextSettings.borderStyle : 'solid';\n        this.borderWidth = this.pdfViewer.freeTextSettings.borderWidth ? this.pdfViewer.freeTextSettings.borderWidth : 1;\n        this.fontSize = this.pdfViewer.freeTextSettings.fontSize ? this.pdfViewer.freeTextSettings.fontSize : 16;\n        this.opacity = this.pdfViewer.freeTextSettings.opacity ? this.pdfViewer.freeTextSettings.opacity : 1;\n        this.fontColor = this.pdfViewer.freeTextSettings.fontColor ? this.pdfViewer.freeTextSettings.fontColor : '#000';\n        // eslint-disable-next-line max-len\n        this.author = (this.pdfViewer.freeTextSettings.author !== 'Guest') ? this.pdfViewer.freeTextSettings.author : this.pdfViewer.annotationSettings.author ? this.pdfViewer.annotationSettings.author : 'Guest';\n        if (!isNullOrUndefined(this.pdfViewer.annotationModule)) {\n            if (this.getRgbCode(this.borderColor).a === 0) {\n                this.borderWidth = 0;\n            }\n        }\n        if (this.pdfViewer.freeTextSettings.fontFamily) {\n            var fontName = this.pdfViewer.freeTextSettings.fontFamily;\n            if (fontName === 'Helvetica' || fontName === 'Times New Roman' || fontName === 'Courier' || fontName === 'Symbol' || fontName === 'ZapfDingbats') {\n                this.fontFamily = fontName;\n            }\n            else {\n                this.fontFamily = 'Helvetica';\n            }\n        }\n        else {\n            this.fontFamily = 'Helvetica';\n        }\n        this.textAlign = this.pdfViewer.freeTextSettings.textAlignment ? this.pdfViewer.freeTextSettings.textAlignment : 'Left';\n        this.defaultText = this.pdfViewer.freeTextSettings.defaultText ? this.pdfViewer.freeTextSettings.defaultText : 'Type here';\n        this.isReadonly = false;\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n            this.wordBreak = 'break-all';\n            this.padding = '2px';\n        }\n        else {\n            this.padding = '0px';\n            this.wordBreak = 'break-word';\n        }\n        // eslint-disable-next-line max-len\n        if (this.pdfViewer.freeTextSettings.isLock || this.pdfViewer.annotationSettings.isLock || this.pdfViewer.freeTextSettings.isReadonly) {\n            this.isReadonly = true;\n        }\n        if (this.pdfViewer.freeTextSettings.fontStyle === 1) {\n            this.isBold = true;\n        }\n        else if (this.pdfViewer.freeTextSettings.fontStyle === 2) {\n            this.isItalic = true;\n        }\n        else if (this.pdfViewer.freeTextSettings.fontStyle === 4) {\n            this.isUnderline = true;\n        }\n        else if (this.pdfViewer.freeTextSettings.fontStyle === 8) {\n            this.isStrikethrough = true;\n        }\n        else if (3 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isItalic = true;\n        }\n        else if (5 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isUnderline = true;\n        }\n        else if (9 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isStrikethrough = true;\n        }\n        else if (7 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isItalic = true;\n            this.isUnderline = true;\n        }\n        else if (11 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isItalic = true;\n            this.isStrikethrough = true;\n        }\n        else if (14 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isUnderline = true;\n            this.isStrikethrough = true;\n        }\n        else if (6 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isUnderline = true;\n            this.isItalic = true;\n        }\n    };\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @param isImportAction\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.renderFreeTextAnnotations = function (shapeAnnotations, pageNumber, isImportAction, isAnnotOrderAction) {\n        var isFreeTextAdded = false;\n        if (!isImportAction) {\n            for (var p = 0; p < this.freeTextPageNumbers.length; p++) {\n                if (this.freeTextPageNumbers[p] === pageNumber) {\n                    isFreeTextAdded = true;\n                    break;\n                }\n            }\n        }\n        if (shapeAnnotations && (!isFreeTextAdded || isAnnotOrderAction)) {\n            if (shapeAnnotations.length >= 1) {\n                this.freeTextPageNumbers.push(pageNumber);\n                for (var i = 0; i < shapeAnnotations.length; i++) {\n                    // eslint-disable-next-line\n                    var annotation = shapeAnnotations[i];\n                    annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n                    if (annotation.AnnotType) {\n                        var vertexPoints = null;\n                        if (annotation.VertexPoints) {\n                            vertexPoints = [];\n                            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                                vertexPoints.push(point);\n                            }\n                        }\n                        // eslint-disable-next-line max-len\n                        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n                        var annot = void 0;\n                        var paddingValue = 0.5;\n                        var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X - paddingValue : annotation.Bounds.x;\n                        var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y - paddingValue : annotation.Bounds.y;\n                        var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n                        var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n                        var isAddedProgramatically = annotation.isAddAnnotationProgramatically ? annotation.isAddAnnotationProgramatically : false;\n                        var rotateValue = this.getRotationValue(pageNumber, isAddedProgramatically);\n                        var originalRotation = annotation.Rotate;\n                        var pageRotate = annotation.PageRotation;\n                        if (Math.sign(annotation.Rotate) === 1) {\n                            annotation.Rotate = -annotation.Rotate + rotateValue;\n                        }\n                        else {\n                            annotation.Rotate = annotation.Rotate + rotateValue;\n                        }\n                        // eslint-disable-next-line\n                        var rotateAngle = Math.abs(annotation.Rotate);\n                        if (isImportAction && rotateValue !== pageRotate) {\n                            if (this.pdfViewerBase.isJsonImported) {\n                                var pageDetails = this.pdfViewerBase.pageSize[pageNumber];\n                                var boundsX = annotation.Bounds.X;\n                                var boundsY = annotation.Bounds.Y;\n                                var annotationWidth = width;\n                                var annotationHeight = height;\n                                if (pageRotate > 0) {\n                                    var rotatation = pageRotate / 90;\n                                    if (rotatation === 1) {\n                                        height = width;\n                                        width = annotation.Bounds.Height;\n                                        annotationBoundsX = annotation.Bounds.Y;\n                                        if (rotateValue !== 270) {\n                                            annotationBoundsY = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                                        }\n                                        else {\n                                            annotationBoundsY = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                                        }\n                                    }\n                                    else if (rotatation === 2) {\n                                        if (rotateValue !== 270 && rotateValue !== 90) {\n                                            annotationBoundsX = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                                            annotationBoundsY = pageDetails.height - annotation.Bounds.Y - annotation.Bounds.Height;\n                                        }\n                                        else {\n                                            annotationBoundsX = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                                            annotationBoundsY = pageDetails.width - annotation.Bounds.Y - annotation.Bounds.Height;\n                                        }\n                                    }\n                                    else if (rotatation === 3) {\n                                        height = width;\n                                        width = annotation.Bounds.Height;\n                                        if (rotateValue !== 90) {\n                                            annotationBoundsX = pageDetails.width - annotation.Bounds.Y - width;\n                                        }\n                                        else {\n                                            annotationBoundsX = pageDetails.height - annotation.Bounds.Y - width;\n                                        }\n                                        annotationBoundsY = annotation.Bounds.X;\n                                    }\n                                    boundsX = annotationBoundsX;\n                                    boundsY = annotationBoundsY;\n                                    annotationWidth = width;\n                                    annotationHeight = height;\n                                }\n                                rotateAngle = (rotateValue / 90) % 4;\n                                if (rotateAngle === 1) {\n                                    height = width;\n                                    width = annotationHeight;\n                                    annotationBoundsX = pageDetails.width - boundsY - annotationHeight - paddingValue;\n                                    annotationBoundsY = boundsX - paddingValue;\n                                    rotateAngle = 90;\n                                }\n                                else if (rotateAngle === 2) {\n                                    annotationBoundsX = pageDetails.width - boundsX - annotationWidth - paddingValue;\n                                    annotationBoundsY = pageDetails.height - boundsY - annotationHeight - paddingValue;\n                                    rotateAngle = 180;\n                                }\n                                else if (rotateAngle === 3) {\n                                    height = width;\n                                    width = annotationHeight;\n                                    annotationBoundsX = boundsY - paddingValue;\n                                    annotationBoundsY = pageDetails.height - boundsX - height - paddingValue;\n                                    rotateAngle = 270;\n                                }\n                                else if (rotateAngle === 0) {\n                                    annotationBoundsX = boundsX - paddingValue;\n                                    annotationBoundsY = boundsY - paddingValue;\n                                }\n                            }\n                        }\n                        if (rotateAngle === 90 || rotateAngle === 270) {\n                            var rotationHeight = height;\n                            var rotationWidth = width;\n                            height = rotationWidth;\n                            width = rotationHeight;\n                            annotationBoundsX = (annotationBoundsX - (width / 2)) + (height / 2);\n                            annotationBoundsY = (annotationBoundsY) + (width / 2 - height / 2);\n                        }\n                        // eslint-disable-next-line\n                        annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n                        if (!isNullOrUndefined(annotation) && annotation.MarkupText && annotation.MarkupText.includes('\\n')) {\n                            var noOfLines = annotation.MarkupText.split(\"\\n\").length;\n                            var newHeight = noOfLines * annotation.FontSize * this.lineGap;\n                            var pageHeight = this.pdfViewerBase.pageSize[pageNumber].height - annotation.Bounds.Y;\n                            if (height < newHeight) {\n                                height = newHeight;\n                            }\n                            if (height > pageHeight) {\n                                height = pageHeight;\n                            }\n                        }\n                        // eslint-disable-next-line\n                        annot = {\n                            author: annotation.Author, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, id: 'freetext' + this.inputBoxCount,\n                            rotateAngle: annotation.Rotate, dynamicText: annotation.MarkupText, strokeColor: annotation.StrokeColor,\n                            thickness: annotation.Thickness, fillColor: annotation.FillColor,\n                            bounds: {\n                                x: annotationBoundsX, y: annotationBoundsY, left: annotationBoundsX, top: annotationBoundsY,\n                                width: width, height: height, right: annotation.Bounds.Right,\n                                bottom: annotation.Bounds.Bottom\n                            }, annotName: annotation.AnnotName, shapeAnnotationType: 'FreeText',\n                            // eslint-disable-next-line\n                            pageIndex: pageNumber, opacity: annotation.Opacity, fontColor: annotation.FontColor, fontSize: annotation.FontSize, pageRotation: rotateValue,\n                            fontFamily: annotation.FontFamily, notes: annotation.MarkupText, textAlign: annotation.TextAlign,\n                            // eslint-disable-next-line\n                            comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n                            review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                            // eslint-disable-next-line max-len\n                            font: { isBold: annotation.Font.Bold, isItalic: annotation.Font.Italic, isStrikeout: annotation.Font.Strikeout, isUnderline: annotation.Font.Underline },\n                            annotationSelectorSettings: this.getSettings(annotation), annotationSettings: annotation.AnnotationSettings,\n                            // eslint-disable-next-line\n                            customData: this.pdfViewer.annotation.getCustomData(annotation), annotationAddMode: annotation.annotationAddMode, allowedInteractions: annotation.allowedInteractions,\n                            isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isReadonly: annotation.IsReadonly,\n                            isAddAnnotationProgrammatically: isAddedProgramatically\n                        };\n                        if (isImportAction) {\n                            annot.id = annotation.AnnotName;\n                            annot.previousFontSize = annotation.FontSize ? annotation.FontSize : this.fontSize;\n                        }\n                        var addedAnnot = this.pdfViewer.add(annot);\n                        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n                        if (this.isAddAnnotationProgramatically) {\n                            // eslint-disable-next-line\n                            var settings = {\n                                opacity: annot.opacity, borderColor: annot.strokeColor, borderWidth: annot.thickness, author: annotation.author, subject: annotation.subject, modifiedDate: annotation.modifiedDate,\n                                // eslint-disable-next-line\n                                fillColor: annot.fillColor, fontSize: annot.fontSize, width: annot.bounds.width, height: annot.bounds.height, fontColor: annot.fontColor, fontFamily: annot.fontFamily, defaultText: annot.dynamicText, fontStyle: annot.font, textAlignment: annot.textAlign\n                            };\n                            this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', annot.bounds, settings);\n                        }\n                        this.inputBoxCount += 1;\n                        this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = true;\n                        this.pdfViewer.nodePropertyChange(addedAnnot, {});\n                        this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param annotation\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getSettings = function (annotation) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if (annotation.AnnotationSelectorSettings) {\n            selector = annotation.AnnotationSelectorSettings;\n        }\n        else if (this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.freeTextSettings.annotationSelectorSettings;\n        }\n        return selector;\n    };\n    /**\n     * @param type\n     * @private\n     */\n    FreeTextAnnotation.prototype.setAnnotationType = function (type) {\n        this.pdfViewerBase.disableTextSelectionMode();\n        this.pdfViewer.annotationModule.isFormFieldShape = false;\n        switch (type) {\n            case 'FreeText':\n                this.currentAnnotationMode = 'FreeText';\n                this.updateTextProperties();\n                // eslint-disable-next-line max-len\n                var modifiedDateRect = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                this.pdfViewer.drawingObject = {\n                    shapeAnnotationType: 'FreeText', strokeColor: this.borderColor,\n                    fillColor: this.fillColor, opacity: this.opacity, notes: '', isCommentLock: false,\n                    thickness: this.borderWidth, borderDashArray: '0', modifiedDate: modifiedDateRect,\n                    // eslint-disable-next-line max-len\n                    author: this.pdfViewer.freeTextSettings.author, subject: this.pdfViewer.freeTextSettings.subject, font: { isBold: this.isBold, isItalic: this.isItalic, isStrikeout: this.isStrikethrough, isUnderline: this.isUnderline }, textAlign: this.textAlign\n                };\n                this.pdfViewer.tool = 'Select';\n                break;\n        }\n    };\n    /**\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewAdded) {\n        if (!isNullOrUndefined(annotationBase.formFieldAnnotationType) && annotationBase.formFieldAnnotationType !== \"\") {\n            this.pdfViewer.annotationModule.isFormFieldShape = true;\n        }\n        else {\n            this.pdfViewer.annotationModule.isFormFieldShape = false;\n        }\n        var currentAnnotObject = null;\n        var isEdited = false;\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations != null && annotationBase) {\n            for (var i = 0; i < pageAnnotations.length; i++) {\n                if (annotationBase.id === pageAnnotations[i].id) {\n                    if (property === 'bounds') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                    }\n                    else if (property === 'fill') {\n                        pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n                    }\n                    else if (property === 'stroke') {\n                        pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n                    }\n                    else if (property === 'opacity') {\n                        pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n                    }\n                    else if (property === 'thickness') {\n                        pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n                    }\n                    else if (property === 'notes') {\n                        pageAnnotations[i].note = annotationBase.notes;\n                    }\n                    else if (property === 'delete') {\n                        currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n                        break;\n                    }\n                    else if (property === 'dynamicText') {\n                        if (pageAnnotations[i].dynamicText !== annotationBase.dynamicText) {\n                            isEdited = true;\n                            this.pdfViewer.fireCommentEdit(pageAnnotations[i].annotName, annotationBase.dynamicText, pageAnnotations[i]);\n                        }\n                        pageAnnotations[i].dynamicText = annotationBase.dynamicText;\n                    }\n                    else if (property === 'fontColor') {\n                        pageAnnotations[i].fontColor = annotationBase.fontColor;\n                    }\n                    else if (property === 'fontSize') {\n                        pageAnnotations[i].fontSize = annotationBase.fontSize;\n                    }\n                    else if (property === 'fontFamily') {\n                        pageAnnotations[i].fontFamily = annotationBase.fontFamily;\n                    }\n                    else if (property === 'textPropertiesChange') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].font = { isBold: annotationBase.font.isBold, isItalic: annotationBase.font.isItalic, isStrikeout: annotationBase.font.isStrikeout, isUnderline: annotationBase.font.isUnderline };\n                    }\n                    else if (property === 'textAlign') {\n                        pageAnnotations[i].textAlign = annotationBase.textAlign;\n                    }\n                    // eslint-disable-next-line max-len\n                    pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                    this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n                }\n            }\n            this.manageAnnotations(pageAnnotations, pageNumber);\n        }\n        if (!isNewAdded && isEdited) {\n            this.pdfViewerBase.updateDocumentEditedProperty(true);\n        }\n        return currentAnnotObject;\n    };\n    /**\n     * @param pageNumber\n     * @param annotationBase\n     * @private\n     */\n    FreeTextAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n        if (annotationBase) {\n            var pageAnnotations = this.getAnnotations(pageNumber, null);\n            if (pageAnnotations) {\n                pageAnnotations.push(annotationBase);\n            }\n            this.manageAnnotations(pageAnnotations, pageNumber);\n        }\n    };\n    /**\n     * @private\n     */\n    FreeTextAnnotation.prototype.saveFreeTextAnnotations = function () {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n        }\n        // eslint-disable-next-line\n        var annotations = new Array();\n        for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n            annotations[j] = [];\n        }\n        if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n            var annotationCollection = JSON.parse(storeObject);\n            for (var i = 0; i < annotationCollection.length; i++) {\n                var newArray = [];\n                var pageAnnotationObject = annotationCollection[i];\n                if (pageAnnotationObject) {\n                    for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n                        this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].bounds = this.getBoundsBasedOnRotation(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.annotations[z].rotateAngle, pageAnnotationObject.pageIndex, pageAnnotationObject.annotations[z]);\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n                        var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n                        pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n                        var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n                        pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n                        var fontColorString = pageAnnotationObject.annotations[z].fontColor;\n                        pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(pageAnnotationObject.annotations[z].vertexPoints);\n                        if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n                        }\n                        pageAnnotationObject.annotations[z].padding = this.getPaddingValues(this.fontSize);\n                    }\n                    newArray = pageAnnotationObject.annotations;\n                }\n                annotations[pageAnnotationObject.pageIndex] = newArray;\n            }\n        }\n        return JSON.stringify(annotations);\n    };\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getRotationValue = function (pageIndex, isAddedProgrammatically) {\n        // eslint-disable-next-line\n        var pageDetails = this.pdfViewerBase.pageSize[pageIndex];\n        if (!isNullOrUndefined(isAddedProgrammatically) && isAddedProgrammatically) {\n            return 0;\n        }\n        else {\n            if (pageDetails.rotation === 0) {\n                return 0;\n            }\n            else if (pageDetails.rotation === 1) {\n                return 90;\n            }\n            else if (pageDetails.rotation === 2) {\n                return 180;\n            }\n            else if (pageDetails.rotation === 3) {\n                return 270;\n            }\n            return 0;\n        }\n    };\n    FreeTextAnnotation.prototype.getBoundsBasedOnRotation = function (bounds, rotateAngle, pageIndex, annotation, isAddedProgrammatically) {\n        var rotateValue = this.getRotationValue(pageIndex, isAddedProgrammatically);\n        var paddingValue = 0.5;\n        annotation.rotateAngle = rotateAngle - rotateValue;\n        annotation.pageRotation = rotateValue;\n        if (rotateAngle === 90 || rotateAngle === -90 || rotateAngle === 270 || rotateAngle === -270) {\n            var x = bounds.left + (bounds.width / 2) - (bounds.height / 2);\n            var y = bounds.top - (bounds.width / 2 - bounds.height / 2);\n            return { x: x + paddingValue, y: y + paddingValue, left: x + paddingValue, top: y + paddingValue, width: bounds.height, height: bounds.width };\n        }\n        else {\n            return { x: bounds.left + paddingValue, y: bounds.top + paddingValue, left: bounds.left + paddingValue, top: bounds.top + paddingValue, width: bounds.width, height: bounds.height };\n        }\n    };\n    FreeTextAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            if (!this.pdfViewerBase.isStorageExceed) {\n                window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n            }\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n            if (annotObject[index]) {\n                annotObject[index].annotations = pageAnnotations;\n            }\n            var annotationStringified = JSON.stringify(annotObject);\n            if (this.pdfViewerBase.isStorageExceed) {\n                this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'] = annotationStringified;\n            }\n            else {\n                window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_freetext', annotationStringified);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n        // eslint-disable-next-line\n        var annotationCollection;\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n            if (annotObject[index]) {\n                annotationCollection = annotObject[index].annotations;\n            }\n            else {\n                annotationCollection = shapeAnnotations;\n            }\n        }\n        else {\n            annotationCollection = shapeAnnotations;\n        }\n        return annotationCollection;\n    };\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getRgbCode = function (colorString) {\n        if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n            colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n        }\n        var stringArray = colorString.split(',');\n        if (isNullOrUndefined(stringArray[1])) {\n            colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n            stringArray = colorString.split(',');\n        }\n        // eslint-disable-next-line radix\n        var r = parseFloat(stringArray[0].split('(')[1]);\n        // eslint-disable-next-line radix\n        var g = parseFloat(stringArray[1]);\n        // eslint-disable-next-line radix\n        var b = parseFloat(stringArray[2]);\n        // eslint-disable-next-line radix\n        var a = parseFloat(stringArray[3]);\n        return { r: r, g: g, b: b, a: a };\n    };\n    /**\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.onFocusOutInputBox = function () {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (!this.pdfViewerBase.isFreeTextContextMenu) {\n            this.pdfViewer.fireBeforeAddFreeTextAnnotation(this.inputBoxElement.value);\n            // eslint-disable-next-line\n            var pageIndex = this.inputBoxElement.id && this.inputBoxElement.id.split(\"_freeText_\")[1] && this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0] ? parseFloat(this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0]) : this.pdfViewerBase.currentPageNumber - 1;\n            var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + (pageIndex));\n            var width = parseFloat(this.inputBoxElement.style.width);\n            var padding = parseFloat(this.inputBoxElement.style.paddingLeft);\n            // Removed the line since when we click on the freetext the size gets changed. Task Id: 847135\n            if (this.pdfViewer.freeTextSettings.enableAutoFit && !this.isMaximumWidthReached && this.isNewFreeTextAnnot) {\n                width = parseFloat(this.inputBoxElement.style.width);\n                var characterLength = 8;\n                this.inputBoxElement.style.width = (width - characterLength) + 'px';\n            }\n            var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n            var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n            var inputEleLeft = parseFloat(this.inputBoxElement.style.left);\n            if (this.pdfViewerBase.isMixedSizeDocument) {\n                var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n                inputEleLeft = inputEleLeft - canvas.offsetLeft;\n            }\n            var inputEleTop = parseFloat(this.inputBoxElement.style.top);\n            var zoomFactor = this.pdfViewerBase.getZoomFactor();\n            if (this.pdfViewer.isValidFreeText) {\n                this.inputBoxElement.value = 'Type Here';\n                this.pdfViewer.isValidFreeText = false;\n            }\n            var inputValue = this.inputBoxElement.value;\n            var isNewlyAdded = false;\n            if (this.isNewFreeTextAnnot === true) {\n                // eslint-disable-next-line max-len\n                var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                var annotationName = this.pdfViewer.annotation.createGUID();\n                this.isNewFreeTextAnnot = false;\n                isNewlyAdded = true;\n                var annot = void 0;\n                var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('freeText', pageIndex + 1);\n                if (commentsDivid) {\n                    document.getElementById(commentsDivid).id = annotationName;\n                }\n                // eslint-disable-next-line\n                var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n                // eslint-disable-next-line\n                var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n                // eslint-disable-next-line\n                this.author = this.author ? this.author : this.pdfViewer.freeTextSettings.author ? this.pdfViewer.freeTextSettings.author : 'Guest';\n                this.subject = this.subject ? this.subject : this.pdfViewer.freeTextSettings.subject ? this.pdfViewer.freeTextSettings.subject : 'Text Box';\n                // eslint-disable-next-line\n                var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n                // eslint-disable-next-line\n                annot = {\n                    author: this.author, modifiedDate: currentDateString, subject: this.subject, id: 'free_text' + this.inputBoxCount,\n                    // eslint-disable-next-line max-len\n                    rotateAngle: 0, dynamicText: inputValue, strokeColor: this.borderColor, thickness: this.borderWidth, fillColor: this.fillColor,\n                    bounds: {\n                        left: inputEleLeft / zoomFactor, top: inputEleTop / zoomFactor, x: inputEleLeft / zoomFactor,\n                        y: inputEleTop / zoomFactor, width: inputEleWidth / zoomFactor, height: inputEleHeight / zoomFactor\n                    }, annotName: annotationName,\n                    shapeAnnotationType: 'FreeText', pageIndex: pageIndex, fontColor: this.fontColor, fontSize: this.fontSize,\n                    fontFamily: this.fontFamily, opacity: this.opacity, comments: [], textAlign: this.textAlign,\n                    // eslint-disable-next-line max-len\n                    font: { isBold: this.isBold, isItalic: this.isItalic, isStrikeout: this.isStrikethrough, isUnderline: this.isUnderline },\n                    review: { state: 'Unmarked', stateModel: 'None', modifiedDate: currentDateString, author: this.author },\n                    // eslint-disable-next-line max-len\n                    annotationSelectorSettings: annotationSelectorSettings, annotationSettings: annotationSettings,\n                    customData: this.pdfViewer.annotationModule.getData('FreeText'), isPrint: (this.pdfViewer.freeTextSettings && !isNullOrUndefined(this.pdfViewer.freeTextSettings.isPrint)) ? this.pdfViewer.freeTextSettings.isPrint : true,\n                    allowedInteractions: allowedInteractions, isReadonly: this.isReadonly\n                };\n                if (this.pdfViewer.enableRtl) {\n                    annot.textAlign = 'Right';\n                }\n                var annotation = this.pdfViewer.add(annot);\n                // eslint-disable-next-line\n                var bounds = { left: annot.bounds.x, top: annot.bounds.y, width: annot.bounds.width, height: annot.bounds.height };\n                // eslint-disable-next-line\n                var settings = {\n                    opacity: annot.opacity, borderColor: annot.strokeColor, borderWidth: annot.thickness, author: annotation.author, subject: annotation.subject, modifiedDate: annotation.modifiedDate,\n                    // eslint-disable-next-line\n                    fillColor: annot.fillColor, fontSize: annot.fontSize, width: annot.bounds.width, height: annot.bounds.height, fontColor: annot.fontColor, fontFamily: annot.fontFamily, defaultText: annot.dynamicText, fontStyle: annot.font, textAlignment: annot.textAlign\n                };\n                this.pdfViewer.annotation.storeAnnotations(pageIndex, annot, '_annotations_freetext');\n                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', bounds, settings);\n                this.pdfViewer.fireCommentAdd(annot.annotName, annot.dynamicText, annot);\n                // eslint-disable-next-line\n                this.pdfViewer.annotation.addAction(pageIndex, null, annotation, 'Addition', '', annotation, annotation);\n                this.pdfViewer.renderSelector(annot.pageIndex);\n                this.pdfViewer.clearSelection(annot.pageIndex);\n                this.pdfViewerBase.updateDocumentEditedProperty(true);\n                this.selectedAnnotation = annotation;\n            }\n            this.isInuptBoxInFocus = false;\n            // eslint-disable-next-line\n            if (this.selectedAnnotation && this.pdfViewer.selectedItems.annotations) {\n                inputEleWidth = (inputEleWidth / zoomFactor);\n                inputEleHeight = (inputEleHeight / zoomFactor);\n                var heightDiff = (inputEleHeight - this.selectedAnnotation.bounds.height);\n                var y = undefined;\n                if (heightDiff > 0) {\n                    y = this.selectedAnnotation.wrapper.offsetY + (heightDiff / 2);\n                    y = y > 0 ? y : undefined;\n                }\n                var widthDiff = (inputEleWidth - this.selectedAnnotation.bounds.width);\n                var x = undefined;\n                if (widthDiff > 0) {\n                    x = this.selectedAnnotation.wrapper.offsetX + (widthDiff / 2);\n                    x = x > 0 ? x : undefined;\n                }\n                else {\n                    widthDiff = Math.abs(widthDiff);\n                    x = this.selectedAnnotation.wrapper.offsetX - (widthDiff / 2);\n                }\n                this.selectedAnnotation.bounds.width = inputEleWidth;\n                this.selectedAnnotation.bounds.height = inputEleHeight;\n                var lineSpace = 0;\n                lineSpace = ((parseFloat(this.inputBoxElement.style.fontSize) / zoomFactor) / (this.defaultFontSize / 2));\n                this.selectedAnnotation.wrapper.children[1].margin.left = this.freeTextPaddingLeft;\n                this.selectedAnnotation.wrapper.children[1].margin.top = ((parseFloat(this.inputBoxElement.style.paddingTop) / zoomFactor)) + lineSpace;\n                this.pdfViewer.annotation.modifyDynamicTextValue(inputValue, this.selectedAnnotation.annotName);\n                this.selectedAnnotation.dynamicText = inputValue;\n                this.modifyInCollection('dynamicText', pageIndex, this.selectedAnnotation, isNewlyAdded);\n                this.modifyInCollection('bounds', pageIndex, this.selectedAnnotation, isNewlyAdded);\n                // eslint-disable-next-line\n                this.pdfViewer.nodePropertyChange(this.selectedAnnotation, { bounds: { width: this.selectedAnnotation.bounds.width, height: this.selectedAnnotation.bounds.height, y: y, x: x } });\n                // eslint-disable-next-line\n                var commentsDiv = document.getElementById(this.selectedAnnotation.annotName);\n                if (commentsDiv && commentsDiv.childNodes) {\n                    if (commentsDiv.childNodes[0].ej2_instances) {\n                        commentsDiv.childNodes[0].ej2_instances[0].value = inputValue;\n                    }\n                    else if (commentsDiv.childNodes[0].childNodes && commentsDiv.childNodes[0].childNodes[1].ej2_instances) {\n                        commentsDiv.childNodes[0].childNodes[1].ej2_instances[0].value = inputValue;\n                    }\n                }\n                this.pdfViewer.renderSelector(this.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n            }\n            if (this.inputBoxElement.parentElement) {\n                if (pageDiv && (pageDiv.id === this.inputBoxElement.parentElement.id)) {\n                    pageDiv.removeChild(this.inputBoxElement);\n                }\n                else {\n                    this.inputBoxElement.parentElement.removeChild(this.inputBoxElement);\n                }\n            }\n            var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n            // eslint-disable-next-line\n            this.pdfViewer.renderDrawing(canvass, pageIndex);\n            this.inputBoxCount += 1;\n        }\n        else {\n            this.inputBoxElement.focus();\n            if (!this.isTextSelected) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @param event\n     * @private\n     */\n    FreeTextAnnotation.prototype.onKeyDownInputBox = function (event) {\n        var inuptEleObj = this;\n        if (event.which === 9 || (isNullOrUndefined(this.pdfViewer.selectedItems.annotations[0]) && !this.isNewFreeTextAnnot)) {\n            event.preventDefault();\n        }\n        this.selectedAnnotation = this.pdfViewer.selectedItems.annotations && this.isNewFreeTextAnnot ? this.pdfViewer.selectedItems.annotations[0]\n            : this.selectedAnnotation;\n        setTimeout(function () {\n            if (inuptEleObj.defaultHeight < inuptEleObj.inputBoxElement.scrollHeight\n                // eslint-disable-next-line radix\n                && parseInt(inuptEleObj.inputBoxElement.style.height) < inuptEleObj.inputBoxElement.scrollHeight) {\n                inuptEleObj.updateFreeTextAnnotationSize(true);\n            }\n            else {\n                inuptEleObj.updateFreeTextAnnotationSize(false);\n            }\n            // eslint-disable-next-line\n        }, 0);\n    };\n    FreeTextAnnotation.prototype.updateFreeTextAnnotationSize = function (isSize) {\n        var inuptEleObj = this;\n        var enableAutoFit = inuptEleObj.pdfViewer.freeTextSettings.enableAutoFit;\n        if (enableAutoFit) {\n            this.autoFitFreeText();\n        }\n        else {\n            this.isMaximumWidthReached = true;\n        }\n        if (this.isMaximumWidthReached) {\n            // eslint-disable-next-line max-len\n            var previousHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n            if (!isSize && !inuptEleObj.inputBoxElement.readOnly) {\n                inuptEleObj.inputBoxElement.style.height = 'auto';\n            }\n            var currentHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n            var difference = currentHeight - previousHeight;\n            var fontSize = parseFloat(inuptEleObj.inputBoxElement.style.fontSize);\n            // eslint-disable-next-line max-len\n            inuptEleObj.inputBoxElement.style.height = inuptEleObj.inputBoxElement.readOnly ? inuptEleObj.inputBoxElement.style.height : inuptEleObj.inputBoxElement.scrollHeight + (fontSize / 2) + 'px';\n            inuptEleObj.inputBoxElement.style.height = (difference < 0 && !inuptEleObj.inputBoxElement.readOnly) ? (previousHeight + 'px') : inuptEleObj.inputBoxElement.style.height;\n        }\n        var zoomFactor = inuptEleObj.pdfViewerBase.getZoomFactor();\n        var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n        var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n        inputEleHeight = ((inputEleHeight) / zoomFactor);\n        inputEleWidth = ((inputEleWidth) / zoomFactor);\n        if (this.selectedAnnotation) {\n            var heightDiff = (inputEleHeight - inuptEleObj.selectedAnnotation.bounds.height);\n            var y = 0;\n            if (heightDiff > 0) {\n                y = inuptEleObj.selectedAnnotation.wrapper.offsetY + (heightDiff / 2);\n            }\n            else {\n                heightDiff = Math.abs(heightDiff);\n                y = inuptEleObj.selectedAnnotation.wrapper.offsetY - (heightDiff / 2);\n            }\n            if (enableAutoFit) {\n                var widthDiff = (inputEleWidth - inuptEleObj.selectedAnnotation.bounds.width);\n                var x = 0;\n                if (widthDiff > 0) {\n                    x = inuptEleObj.selectedAnnotation.wrapper.offsetX + (widthDiff / 2);\n                }\n                else {\n                    widthDiff = Math.abs(widthDiff);\n                    x = inuptEleObj.selectedAnnotation.wrapper.offsetX - (widthDiff / 2);\n                }\n            }\n            inuptEleObj.selectedAnnotation.bounds.width = inputEleWidth;\n            inuptEleObj.selectedAnnotation.bounds.height = inputEleHeight;\n            if (enableAutoFit) {\n                // eslint-disable-next-line\n                inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, { bounds: { width: inuptEleObj.selectedAnnotation.bounds.width, height: inuptEleObj.selectedAnnotation.bounds.height, y: y, x: x } });\n            }\n            else {\n                // eslint-disable-next-line\n                inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, { bounds: { width: inuptEleObj.selectedAnnotation.bounds.width, height: inuptEleObj.selectedAnnotation.bounds.height, y: y } });\n            }\n            inuptEleObj.pdfViewer.renderSelector(inuptEleObj.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n        }\n    };\n    /**\n     * @param event\n     * @private\n     */\n    FreeTextAnnotation.prototype.autoFitFreeText = function (xPosition, yPosition) {\n        var pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n        var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + (pageIndex));\n        // eslint-disable-next-line\n        var canvas = this.pdfViewerBase.getElement('_annotationCanvas_' + pageIndex);\n        // eslint-disable-next-line\n        var context = canvas.getContext(\"2d\");\n        // eslint-disable-next-line\n        var fontSize = this.inputBoxElement.style.fontSize;\n        if (this.pdfViewer.freeTextSettings.fontStyle === FontStyle.Bold || this.inputBoxElement.style.fontWeight === 'bold') {\n            context.font = 'bold' + ' ' + fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n        }\n        else {\n            context.font = fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n        }\n        var highestTextNode = \"\";\n        // eslint-disable-next-line\n        var textNodes = [];\n        var textboxValue = this.inputBoxElement.value;\n        if (textboxValue.indexOf('\\n') > -1) {\n            textNodes = textboxValue.split('\\n');\n            for (var j = 0; j < textNodes.length; j++) {\n                // eslint-disable-next-line\n                var textNodeData = context.measureText(textNodes[j]);\n                // eslint-disable-next-line\n                var highestTextNodeData = context.measureText(highestTextNode);\n                if (textNodeData.width > highestTextNodeData.width) {\n                    highestTextNode = textNodes[j];\n                }\n            }\n            this.isMaximumWidthReached = true;\n        }\n        else {\n            highestTextNode = textboxValue;\n            this.isMaximumWidthReached = false;\n        }\n        // eslint-disable-next-line\n        var textwidth = context.measureText(highestTextNode);\n        fontSize = parseFloat(this.inputBoxElement.style.fontSize);\n        var inputEleWidth;\n        var characterLength = 8;\n        var inputEleHeight = (fontSize + (fontSize / 2));\n        if (this.isNewFreeTextAnnot) {\n            inputEleWidth = Math.ceil(textwidth.width + ((characterLength + 1) * 2));\n            this.inputBoxElement.style.height = inputEleHeight + 'px';\n            this.inputBoxElement.style.top = (yPosition) - (inputEleHeight / 2) + 'px';\n        }\n        else {\n            inputEleWidth = Math.ceil(textwidth.width) + fontSize + Math.ceil(characterLength / 2);\n        }\n        // Removed the line since when we double click on the freetext the size gets changed. Task Id: 847135\n        this.inputBoxElement.style.width = inputEleWidth + 'px';\n        var maxWidth = this.pdfViewerBase.getPageWidth(pageIndex) - parseFloat(this.inputBoxElement.style.left);\n        if (parseFloat(this.inputBoxElement.style.width) > maxWidth) {\n            this.isMaximumWidthReached = true;\n            if (this.isNewAddedAnnot && xPosition) {\n                inputEleWidth = inputEleWidth - characterLength;\n                this.inputBoxElement.style.width = inputEleWidth + 'px';\n                var width = xPosition + (inputEleWidth * this.pdfViewerBase.getZoomFactor());\n                var x = parseFloat(this.inputBoxElement.style.left);\n                if (width >= this.pdfViewerBase.getPageWidth(pageIndex)) {\n                    x = this.pdfViewerBase.getPageWidth(pageIndex) - inputEleWidth;\n                }\n                this.inputBoxElement.style.left = x + 'px';\n            }\n            else {\n                this.inputBoxElement.style.width = maxWidth + 'px';\n            }\n        }\n    };\n    /**\n     * @param event\n     * @private\n     */\n    FreeTextAnnotation.prototype.onMouseUpInputBox = function (event) {\n        // eslint-disable-next-line\n        var target = event.target;\n        this.selectionStart = 0;\n        this.selectionEnd = 0;\n        if (event.which === 3 && target) {\n            this.selectionStart = target.selectionStart;\n            this.selectionEnd = target.selectionEnd;\n        }\n        if (event.which === 3 && window.getSelection() != null && window.getSelection().toString() !== '') {\n            this.isTextSelected = true;\n        }\n        else {\n            this.isTextSelected = false;\n        }\n    };\n    /**\n     * @param currentPosition\n     * @param annotation\n     * @param pageIndex\n     * @private\n     */\n    FreeTextAnnotation.prototype.addInuptElemet = function (currentPosition, annotation, pageIndex) {\n        if (annotation === void 0) { annotation = null; }\n        this.currentPosition = [];\n        if (isNullOrUndefined(pageIndex)) {\n            pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n        }\n        if (annotation) {\n            pageIndex = annotation.pageIndex;\n        }\n        if (isBlazor() && annotation === null && this.pdfViewer.selectedItems.annotations.length === 0) {\n            this.updateTextProperties();\n        }\n        this.inputBoxElement.id = this.pdfViewer.element.id + '_freeText_' + pageIndex + '_' + this.inputBoxCount;\n        var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + (pageIndex));\n        var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        var zoomFactor = this.pdfViewerBase.getZoomFactor();\n        this.inputBoxElement.value = (annotation && annotation.dynamicText) ? annotation.dynamicText : this.defaultText;\n        this.inputBoxElement.style.boxSizing = 'border-box';\n        this.inputBoxElement.style.left = ((currentPosition.x)) + 'px';\n        this.inputBoxElement.style.top = ((currentPosition.y)) - ((this.defaultHeight * zoomFactor) / 2) + 'px';\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n            this.inputBoxElement.style.wordBreak = 'break-all';\n        }\n        else {\n            this.inputBoxElement.style.wordBreak = 'break-word';\n        }\n        if (annotation) {\n            this.applyFreetextStyles(zoomFactor, annotation.isReadonly);\n        }\n        else {\n            this.applyFreetextStyles(zoomFactor);\n        }\n        if (this.isBold) {\n            this.inputBoxElement.style.fontWeight = 'bold';\n        }\n        else {\n            this.inputBoxElement.style.fontWeight = 'normal';\n        }\n        if (this.isItalic) {\n            this.inputBoxElement.style.fontStyle = 'italic';\n        }\n        else {\n            this.inputBoxElement.style.fontStyle = 'normal';\n        }\n        this.inputBoxElement.style.textDecoration = 'none';\n        if (this.isUnderline) {\n            this.inputBoxElement.style.textDecoration = 'underline';\n        }\n        if (this.isStrikethrough) {\n            this.inputBoxElement.style.textDecoration = 'line-through';\n        }\n        if (this.pdfViewer.enableRtl) {\n            this.inputBoxElement.style.textAlign = 'right';\n            this.inputBoxElement.style.direction = 'rtl';\n            this.inputBoxElement.style.left = ((currentPosition.x)) - ((this.defautWidth * zoomFactor / 2));\n        }\n        else {\n            this.inputBoxElement.style.textAlign = this.textAlign.toLowerCase();\n        }\n        this.inputBoxElement.style.borderColor = this.borderColor;\n        this.inputBoxElement.style.color = this.fontColor;\n        this.inputBoxElement.style.background = this.fillColor;\n        if (annotation && annotation.wrapper && annotation.wrapper.children[0]) {\n            this.inputBoxElement.style.opacity = annotation.wrapper.children[0].style.opacity;\n        }\n        if (this.isNewFreeTextAnnot === true) {\n            this.pdfViewer.clearSelection(pageIndex);\n        }\n        if (annotation && annotation.wrapper && annotation.wrapper.bounds) {\n            var annotationBounds = annotation.wrapper.bounds;\n            if (annotationBounds.left) {\n                this.inputBoxElement.style.left = ((annotationBounds.left) * zoomFactor) + 'px';\n            }\n            if (annotationBounds.top) {\n                this.inputBoxElement.style.top = ((annotationBounds.top) * zoomFactor) + 'px';\n            }\n            // eslint-disable-next-line max-len\n            this.inputBoxElement.style.height = annotationBounds.height ? (annotationBounds.height * zoomFactor) + 'px' : (this.defaultHeight * zoomFactor) + 'px';\n            // eslint-disable-next-line max-len\n            this.inputBoxElement.style.width = annotationBounds.width ? (annotationBounds.width * zoomFactor) + 'px' : (this.defautWidth * zoomFactor) + 'px';\n            this.selectedAnnotation = annotation;\n            this.previousText = this.selectedAnnotation.dynamicText;\n            this.selectedAnnotation.dynamicText = '';\n            this.inputBoxElement.style.borderColor = this.selectedAnnotation.strokeColor;\n            this.inputBoxElement.style.color = this.selectedAnnotation.fontColor;\n            this.inputBoxElement.style.background = this.selectedAnnotation.fillColor;\n            if (this.selectedAnnotation.font.isBold === true) {\n                this.inputBoxElement.style.fontWeight = 'bold';\n            }\n            if (this.selectedAnnotation.font.isItalic === true) {\n                this.inputBoxElement.style.fontStyle = 'italic';\n            }\n            if (this.selectedAnnotation.font.isUnderline === true) {\n                this.inputBoxElement.style.textDecoration = 'underline';\n            }\n            if (this.selectedAnnotation.font.isStrikeout === true) {\n                this.inputBoxElement.style.textDecoration = 'line-through';\n            }\n            if (this.pdfViewer.enableRtl) {\n                this.inputBoxElement.style.textAlign = 'right';\n                this.inputBoxElement.style.direction = 'rtl';\n            }\n            else if (this.selectedAnnotation.textAlign) {\n                this.inputBoxElement.style.textAlign = this.selectedAnnotation.textAlign;\n            }\n            this.inputBoxElement.style.fontSize = (this.selectedAnnotation.fontSize * zoomFactor) + 'px';\n            this.inputBoxElement.style.fontFamily = this.selectedAnnotation.fontFamily;\n            this.pdfViewer.nodePropertyChange(this.selectedAnnotation, {});\n        }\n        if (this.pdfViewerBase.isMixedSizeDocument) {\n            this.inputBoxElement.style.left = (parseFloat(this.inputBoxElement.style.left)) + canvass.offsetLeft + 'px';\n        }\n        this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n            this.autoFitFreeText(currentPosition.x, currentPosition.y);\n        }\n        this.inputBoxElement.style.paddingLeft = (this.freeTextPaddingLeft * zoomFactor) + 'px';\n        this.inputBoxElement.style.paddingTop = ((((parseFloat(this.inputBoxElement.style.fontSize) / zoomFactor) / this.defaultFontSize) / zoomFactor)) * this.freeTextPaddingTop + 'px';\n        var lineSpace = 0;\n        lineSpace = ((parseFloat(this.inputBoxElement.style.fontSize) / zoomFactor) / (this.defaultFontSize / 2));\n        this.inputBoxElement.style.paddingTop = ((parseFloat(this.inputBoxElement.style.paddingTop)) - lineSpace) + 'px';\n        pageDiv.appendChild(this.inputBoxElement);\n        // eslint-disable-next-line\n        if (!this.pdfViewer.freeTextSettings.enableAutoFit && (this.defaultHeight * zoomFactor) < this.inputBoxElement.scrollHeight && parseInt(this.inputBoxElement.style.height) < this.inputBoxElement.scrollHeight) {\n            this.inputBoxElement.style.height = this.inputBoxElement.scrollHeight + 'px';\n        }\n        this.isInuptBoxInFocus = true;\n        this.inputBoxElement.focus();\n        if (this.isNewFreeTextAnnot === true || this.inputBoxElement.value === this.defaultText) {\n            this.inputBoxElement.select();\n            this.pdfViewerBase.isFreeTextSelected = true;\n        }\n        this.currentPosition.push(parseInt(this.inputBoxElement.style.left) / zoomFactor, parseInt(this.inputBoxElement.style.top) / zoomFactor, parseInt(this.inputBoxElement.style.width) / zoomFactor, parseInt(this.inputBoxElement.style.height) / zoomFactor);\n    };\n    FreeTextAnnotation.prototype.applyFreetextStyles = function (zoomFactor, isReadonly) {\n        this.inputBoxElement.style.height = (this.defaultHeight * zoomFactor) + 'px';\n        this.inputBoxElement.style.width = (this.defautWidth * zoomFactor) + 'px';\n        this.inputBoxElement.style.borderWidth = (this.borderWidth * zoomFactor) + 'px';\n        this.inputBoxElement.style.fontSize = (this.fontSize * zoomFactor) + 'px';\n        this.inputBoxElement.style.fontFamily = this.fontFamily;\n        this.inputBoxElement.readOnly = isNullOrUndefined(isReadonly) ? this.isReadonly : isReadonly;\n    };\n    /**\n     * @private\n     */\n    FreeTextAnnotation.prototype.copySelectedText = function () {\n        if (window.getSelection() !== null) {\n            this.selectedText = window.getSelection().toString();\n            var textArea = document.createElement('textarea');\n            textArea.contentEditable = 'true';\n            textArea.textContent = this.selectedText;\n            textArea.style.position = 'fixed';\n            document.body.appendChild(textArea);\n            textArea.select();\n            try {\n                document.execCommand('copy');\n            }\n            catch (ex) {\n                console.warn('Copy to clipboard failed.', ex);\n            }\n            finally {\n                if (textArea) {\n                    document.body.removeChild(textArea);\n                }\n            }\n        }\n    };\n    /**\n     * @param target\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.pasteSelectedText = function (target) {\n        if (this.selectedText !== '' && target) {\n            // eslint-disable-next-line\n            var text = target.value;\n            target.value = text.slice(0, this.selectionStart) + this.selectedText + text.slice(this.selectionEnd, text.length);\n        }\n        // eslint-disable-next-line\n        var events = event;\n        this.onKeyDownInputBox(events);\n    };\n    /**\n     * @param target\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.cutSelectedText = function (target) {\n        if (window.getSelection() !== null) {\n            // eslint-disable-next-line\n            var text = target.value;\n            this.selectedText = window.getSelection().toString();\n            target.value = text.slice(0, target.selectionStart) + text.slice(target.selectionEnd);\n            var textArea = document.createElement('textarea');\n            textArea.contentEditable = 'true';\n            textArea.textContent = this.selectedText;\n            textArea.style.position = 'fixed';\n            document.body.appendChild(textArea);\n            textArea.select();\n            try {\n                document.execCommand('cut');\n            }\n            catch (ex) {\n                console.warn('Copy to clipboard failed.', ex);\n            }\n            finally {\n                if (textArea) {\n                    document.body.removeChild(textArea);\n                }\n            }\n        }\n    };\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.saveImportedFreeTextAnnotations = function (shapeAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var annotation = shapeAnnotations;\n        if (annotation.AnnotType) {\n            var vertexPoints = null;\n            if (annotation.VertexPoints) {\n                vertexPoints = [];\n                for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                    var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                    vertexPoints.push(point);\n                }\n            }\n            // eslint-disable-next-line max-len\n            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n            var annot = void 0;\n            // eslint-disable-next-line max-len\n            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X : annotation.Bounds.x;\n            var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y : annotation.Bounds.y;\n            var annotationBoundsWidth = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n            var annotationBoundsHeight = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n            // eslint-disable-next-line\n            annot = {\n                author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, id: 'freetext',\n                rotateAngle: annotation.Rotate, dynamicText: annotation.MarkupText, strokeColor: annotation.StrokeColor,\n                thickness: annotation.Thickness, fillColor: annotation.FillColor,\n                bounds: {\n                    x: annotationBoundsX, y: annotationBoundsY, left: annotationBoundsX, top: annotationBoundsY,\n                    width: annotationBoundsWidth, height: annotationBoundsHeight, right: annotation.Bounds.Right,\n                    bottom: annotation.Bounds.Bottom\n                }, annotName: annotation.AnnotName, shapeAnnotationType: 'FreeText',\n                // eslint-disable-next-line\n                pageIndex: pageNumber, opacity: annotation.Opacity, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n                fontFamily: annotation.FontFamily, notes: annotation.MarkupText, textAlign: annotation.TextAlign,\n                // eslint-disable-next-line\n                comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author), review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                font: { isBold: annotation.Font.Bold, isItalic: annotation.Font.Italic, isStrikeout: annotation.Font.Strikeout, isUnderline: annotation.Font.Underline },\n                annotationSelectorSettings: this.getSettings(annotation), annotationSettings: annotation.AnnotationSettings,\n                // eslint-disable-next-line max-len\n                customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isReadonly: annotation.IsReadonly\n            };\n            this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n        }\n    };\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.updateFreeTextAnnotationCollections = function (shapeAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var annotation = shapeAnnotations;\n        annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n        if (annotation.AnnotType) {\n            var vertexPoints = null;\n            if (annotation.VertexPoints) {\n                vertexPoints = [];\n                for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                    var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                    vertexPoints.push(point);\n                }\n            }\n            // eslint-disable-next-line max-len\n            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n            if (annotation.IsLocked) {\n                annotation.AnnotationSettings.isLock = annotation.IsLocked;\n            }\n            // eslint-disable-next-line max-len\n            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var annotationBoundsX = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n            var annotationBoundsY = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n            var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n            var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n            // eslint-disable-next-line\n            var annot = void 0;\n            // eslint-disable-next-line\n            annot = {\n                author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, id: 'freetext',\n                rotateAngle: annotation.Rotate, dynamicText: annotation.MarkupText, strokeColor: annotation.StrokeColor,\n                thickness: annotation.Thickness, fillColor: annotation.FillColor,\n                bounds: {\n                    x: annotationBoundsX, y: annotationBoundsY, left: annotationBoundsX, top: annotationBoundsY,\n                    width: width, height: height, right: annotation.Bounds.Right,\n                    bottom: annotation.Bounds.Bottom\n                }, annotationId: annotation.AnnotName, shapeAnnotationType: 'FreeText',\n                // eslint-disable-next-line\n                pageIndex: pageNumber, opacity: annotation.Opacity, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n                fontFamily: annotation.FontFamily, notes: annotation.MarkupText,\n                // eslint-disable-next-line\n                comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author), review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                customData: this.pdfViewer.annotation.getCustomData(annotation),\n                font: { isBold: annotation.Font.Bold, isItalic: annotation.Font.Italic, isStrikeout: annotation.Font.Strikeout, isUnderline: annotation.Font.Underline }, pageNumber: pageNumber, annotationSettings: annotation.AnnotationSettings, isCommentLock: annotation.IsCommentLock, isReadonly: annotation.IsReadonly, isPrint: annotation.IsPrint,\n            };\n            return annot;\n        }\n    };\n    /**\n     * This method used to add annotations with using program.\n     *\n     * @param annotationType - It describes type of annotation\n     * @param offset - It describes about the annotation bounds\n     * @returns Object\n     * @private\n     */\n    FreeTextAnnotation.prototype.updateAddAnnotationDetails = function (annotationObject, offset) {\n        //Creating new object if annotationObject is null\n        if (!annotationObject) {\n            annotationObject = { offset: { x: 1, y: 1 }, pageNumber: 0, width: undefined, height: undefined };\n            offset = annotationObject.offset;\n        }\n        else if (!annotationObject.offset)\n            offset = { x: 1, y: 1 };\n        else\n            offset = annotationObject.offset;\n        //Creating the CurrentDate and Annotation name\n        var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        var fontStyle = annotationObject.fontStyle ? annotationObject.fontStyle : FontStyle.None;\n        //Creating annotation settings\n        var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n        var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n        var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n        annotationObject.author = annotationObject.author ? annotationObject.author : this.pdfViewer.annotationModule.updateAnnotationAuthor('freeText', annotationSettings.annotationSubType);\n        annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : annotationSettings.isLock;\n        if (this.pdfViewer.freeTextSettings.isLock || this.pdfViewer.annotationSettings.isLock || this.pdfViewer.freeTextSettings.isReadonly) {\n            annotationObject.isReadonly = true;\n        }\n        annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : 0;\n        annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : 0;\n        annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : 0;\n        annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : 0;\n        annotationObject.width = annotationObject.width ? annotationObject.width : 150;\n        annotationObject.height = annotationObject.height ? annotationObject.height : 24.6;\n        //Creating Annotation objects with it's proper properties\n        var freeTextAnnotation = [];\n        var freeText = {\n            AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n            AnnotName: annotationName,\n            AnnotType: 'freeText',\n            AnnotationFlags: 'Default',\n            AnnotationIntent: null,\n            AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n            AnnotationSettings: annotationSettings,\n            Author: annotationObject.author ? annotationObject.author : 'Guest',\n            Border: { HorizontalRadius: 0, VerticalRadius: 0, Width: annotationObject.borderWidth ? annotationObject.borderWidth : 1 },\n            BorderColor: { IsEmpty: true, B: 255, Blue: 1, C: 0, G: 255 },\n            Bounds: { X: offset.x, Y: offset.y, Width: annotationObject.width, Height: annotationObject.height, Left: offset.x, Top: offset.y, Right: offset.x + annotationObject.width, Bottom: offset.y + annotationObject.height },\n            CalloutLines: null,\n            Color: { IsEmpty: false, B: 51, Blue: 0.2, C: 0, G: 255 },\n            Comments: null,\n            CreatedDate: currentDateString,\n            CustomData: annotationObject.customData ? annotationObject.customData : null,\n            ExistingCustomData: null,\n            FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n            Flatten: false,\n            FlattenPopups: false,\n            Font: { Bold: fontStyle == FontStyle.Bold ? true : false, Italic: fontStyle == FontStyle.Italic ? true : false, Strikeout: fontStyle == FontStyle.Strikethrough ? true : false, Underline: fontStyle == FontStyle.Underline ? true : false },\n            FontColor: annotationObject.fontColor ? annotationObject.fontColor : '#000',\n            FontFamily: annotationObject.fontFamily ? annotationObject.fontFamily : 'Helvetica',\n            FontSize: annotationObject.fontSize ? annotationObject.fontSize : 16,\n            FreeTextAnnotationType: 'Text Box',\n            InnerColor: null,\n            IsCommentLock: false,\n            IsLock: annotationObject.isLock ? annotationObject.isLock : false,\n            IsPrint: (annotationObject.isPrint !== null && annotationObject.isPrint !== undefined) ? annotationObject.isPrint : true,\n            Layer: null,\n            LineEndingStyle: 'OpenArrow',\n            Location: null,\n            MarkupText: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n            ModifiedDate: '',\n            Name: annotationName,\n            Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n            Page: null,\n            PageTags: null,\n            ReviewHistory: null,\n            Rotate: 0,\n            IsReadonly: annotationObject.isReadonly ? annotationObject.isReadonly : false,\n            State: 'Unmarked',\n            StateModel: 'None',\n            StrokeColor: annotationObject.borderColor ? annotationObject.borderColor : '#ffffff00',\n            Subject: annotationObject.subject ? annotationObject.subject : 'Text Box',\n            Text: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n            TextAlign: annotationObject.textAlignment ? annotationObject.textAlignment : 'Left',\n            TextMarkupColor: null,\n            Thickness: annotationObject.borderWidth ? annotationObject.borderWidth : 1,\n            isAddAnnotationProgramatically: true\n        };\n        //Adding the annotation object to an array and return it\n        freeTextAnnotation[0] = freeText;\n        return { freeTextAnnotation: freeTextAnnotation };\n    };\n    /**\n     * This method used to get the padding.\n    */\n    FreeTextAnnotation.prototype.getPaddingValues = function (fontSize) {\n        var leftPadding = 4; // Left padding used in the drawing.js\n        var topPadding = 5; // Top padding used in the drawing.js\n        var inputBoxpadding = 2; // we have set the input box padding for the free text.\n        topPadding = (topPadding - inputBoxpadding) * (fontSize / 16);\n        return [leftPadding, topPadding];\n    };\n    /**\n     * @private\n     * This method used tp get the current position of x and y.\n    */\n    FreeTextAnnotation.prototype.addInputInZoom = function (currentPosition) {\n        var zoomFactor = this.pdfViewerBase.getZoomFactor();\n        this.inputBoxElement.style.left = (currentPosition.x * zoomFactor) + 'px';\n        this.inputBoxElement.style.top = (currentPosition.y * zoomFactor) + 'px';\n        this.inputBoxElement.style.height = (currentPosition.height * zoomFactor) + 'px';\n        this.inputBoxElement.style.width = (currentPosition.width * zoomFactor) + 'px';\n        this.inputBoxElement.style.borderWidth = (this.borderWidth * zoomFactor) + 'px';\n        this.inputBoxElement.style.fontSize = (this.fontSize * zoomFactor) + 'px';\n    };\n    return FreeTextAnnotation;\n}());\nexport { FreeTextAnnotation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}