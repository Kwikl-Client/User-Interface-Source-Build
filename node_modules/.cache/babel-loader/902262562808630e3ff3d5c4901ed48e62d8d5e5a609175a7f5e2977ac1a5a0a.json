{"ast":null,"code":"// eslint-disable-next-line\nexport function PdfiumRunner() {\n  var moduleString = \"Module\";\n  var pageLoaded = false;\n  var moduleLoaded = false;\n  var FPDF = {};\n  var pdfiumWindow = pdfiumWindow || {};\n  var documentDetails;\n  var PDFiumModule = typeof pdfiumWindow[\"\" + moduleString] !== 'undefined' ? pdfiumWindow[\"\" + moduleString] : {};\n  var I8 = Int8Array;\n  var I16 = Int16Array;\n  var I32 = Int32Array;\n  var U8 = Uint8Array;\n  var CH = U8;\n  var U16 = Uint16Array;\n  var U32 = Uint32Array;\n  var F32 = Float32Array;\n  var F64 = Float64Array;\n  var H = function (t, s, d) {\n    return function (f) {\n      var _a = pdfiumWindow.heap(t, s),\n        m = _a[0],\n        a = _a.slice(1);\n      var v = f.apply(void 0, a.map(function (x) {\n        return x.p;\n      }));\n      if (!v) {\n        m.free();\n        return d;\n      }\n      var r = a.map(function (x) {\n        return x.v;\n      });\n      m.free();\n      return r;\n    };\n  };\n  var F = FPDF.Bitmap_BGRA;\n  var C = 4;\n  Object.assign(FPDF, {\n    LCD_TEXT: 0x02,\n    NO_NATIVETEXT: 0x04,\n    GRAYSCALE: 0x08,\n    DEBUG_INFO: 0x80,\n    NO_CATCH: 0x100,\n    RENDER_LIMITEDIMAGECACHE: 0x200,\n    RENDER_FORCEHALFTONE: 0x400,\n    PRINTING: 0x800,\n    REVERSE_BYTE_ORDER: 0x10,\n    Bitmap_Gray: 1,\n    Bitmap_BGR: 2,\n    Bitmap_BGRx: 3,\n    Bitmap_BGRA: 4,\n    LAST_ERROR: {\n      SUCCESS: 0,\n      UNKNOWN: 1,\n      FILE: 2,\n      FORMAT: 3,\n      PASSWORD: 4,\n      SECURITY: 5,\n      PAGE: 6\n    }\n  });\n  function initializeFPDF() {\n    FPDF.Init = PDFiumModule.cwrap('FPDF_InitLibrary');\n    FPDF.RenderPageBitmap = PDFiumModule.cwrap('FPDF_RenderPageBitmap', '', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number']);\n    FPDF.Bitmap_FillRect = PDFiumModule.cwrap('FPDFBitmap_FillRect', '', ['number', 'number', 'number', 'number', 'number', 'number']);\n    FPDF.Bitmap_CreateEx = PDFiumModule.cwrap('FPDFBitmap_CreateEx', 'number', ['number', 'number', 'number', 'number', 'number']);\n    FPDF.Bitmap_Destroy = PDFiumModule.cwrap('FPDFBitmap_Destroy', '', ['number']);\n    FPDF.LoadPage = PDFiumModule.cwrap('FPDF_LoadPage', 'number', ['number', 'number']);\n    FPDF.ClosePage = PDFiumModule.cwrap('FPDF_ClosePage', '', ['number']);\n    FPDF.LoadMemDocument = PDFiumModule.cwrap('FPDF_LoadMemDocument', 'number', ['number', 'number', 'string']);\n    FPDF.GetPageSizeByIndex = PDFiumModule.cwrap('FPDF_GetPageSizeByIndex', 'number', ['number', 'number', 'number', 'number']);\n    FPDF.GetLastError = PDFiumModule.cwrap('FPDF_GetLastError', 'number');\n    FPDF.GetPageCount = PDFiumModule.cwrap('FPDF_GetPageCount', 'number', ['number']);\n    FPDF.CloseDocument = PDFiumModule.cwrap('FPDF_CloseDocument', '', ['number']);\n    FPDF.DestroyLibrary = PDFiumModule.cwrap('FPDF_DestroyLibrary');\n    FPDF.LoadTextPage = PDFiumModule.cwrap('FPDFText_LoadPage', 'number', ['number']);\n    FPDF.CloseTextPage = PDFiumModule.cwrap('FPDFText_ClosePage', '', ['number']);\n    FPDF.TextCountChars = PDFiumModule.cwrap('FPDFText_CountChars', 'number', ['number']);\n    FPDF.GetUnicodeChar = PDFiumModule.cwrap('FPDFText_GetUnicode', 'number', ['number']);\n    FPDF.GetCharBox = PDFiumModule.cwrap('FPDFText_GetCharBox', 'number', ['number', 'number', 'number', 'number', 'number']);\n    FPDF.GetPageRotation = PDFiumModule.cwrap('FPDFPage_GetRotation', 'number', ['number']);\n    FPDF.GetCharAngle = PDFiumModule.cwrap('FPDFText_GetCharAngle', 'number', ['number']);\n    pdfiumWindow.heap = function (J, s) {\n      var E;\n      switch (J) {\n        case Int8Array:\n          E = PDFiumModule.HEAP8;\n          break;\n        case Int16Array:\n          E = PDFiumModule.HEAP16;\n          break;\n        case Int32Array:\n          E = PDFiumModule.HEAP32;\n          break;\n        case Uint8Array:\n          E = PDFiumModule.HEAPU8;\n          break;\n        case Uint16Array:\n          E = PDFiumModule.HEAPU16;\n          break;\n        case Uint32Array:\n          E = PDFiumModule.HEAPU32;\n          break;\n        case Float32Array:\n          E = PDFiumModule.HEAPF32;\n          break;\n        case Float64Array:\n          E = PDFiumModule.HEAPF64;\n          break;\n      }\n      var Z = J.BYTES_PER_ELEMENT;\n      var m = PDFiumModule.asm.malloc(s * Z);\n      var a = Array(1 + s);\n      a[0] = {\n        s: s,\n        J: J,\n        Z: Z,\n        E: E,\n        m: m,\n        free: function () {\n          return PDFiumModule.asm.free(m);\n        }\n      };\n      var _loop_1 = function (i) {\n        a[i + 1] = {\n          p: m + i * Z,\n          get v() {\n            return E[m / Z + i];\n          }\n        };\n      };\n      for (var i = 0; i < s; i++) {\n        _loop_1(i);\n      }\n      return a;\n    };\n  }\n  function checkIfEverythingWasLoaded() {\n    pageLoaded = true;\n    if (pageLoaded || moduleLoaded) {\n      startApp();\n    }\n  }\n  PDFiumModule.onRuntimeInitialized = function () {\n    moduleLoaded = true;\n    checkIfEverythingWasLoaded();\n  };\n  function startApp() {\n    initializeFPDF();\n    if (pdfiumWindow.loaded) {\n      pdfiumWindow.loaded();\n    }\n  }\n  pdfiumWindow.onload = function () {\n    pageLoaded = true;\n    checkIfEverythingWasLoaded();\n  };\n  pdfiumWindow.loaded = function () {\n    ctx.postMessage({\n      message: 'loaded'\n    });\n  };\n  var ctx = self;\n  ctx.onmessage = function (event) {\n    if (event.data.message === 'initialLoading') {\n      importScripts(event.data.url + '/pdfium.js');\n      PDFiumModule.url = event.data.url;\n      PDFiumModule.onRuntimeInitialized = function () {\n        moduleLoaded = true;\n        checkIfEverythingWasLoaded();\n      };\n      this['PDFiumModule'](PDFiumModule);\n    } else if (event.data.message === 'LoadPageCollection') {\n      pdfiumWindow.fileByteArray = event.data.uploadedFile;\n      var fileSize = pdfiumWindow.fileByteArray.length;\n      FPDF.Init();\n      var wasmBuffer = PDFiumModule.asm.malloc(fileSize);\n      PDFiumModule.HEAPU8.set(pdfiumWindow.fileByteArray, wasmBuffer);\n      documentDetails = new DocumentInfo({\n        wasm: FPDF.LoadMemDocument(wasmBuffer, fileSize, event.data.password),\n        wasmBuffer: wasmBuffer\n      });\n      var pages = FPDF.GetPageCount(documentDetails.processor.wasmData.wasm);\n      documentDetails.setPages(pages);\n      documentDetails.createAllPages();\n      ctx.postMessage({\n        message: 'PageLoaded',\n        pageIndex: event.data.pageIndex,\n        isZoomMode: event.data.isZoomMode\n      });\n    }\n    if (documentDetails) {\n      if (event.data.message === 'renderPage') {\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var ImageData_1 = event.data;\n        var data = firstPage.render(null, ImageData_1.zoomFactor, ImageData_1.isTextNeed, null, null, ImageData_1.textDetailsId);\n        ctx.postMessage(data);\n      } else if (event.data.message === 'renderPageSearch') {\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var ImageData_2 = event.data;\n        var data = firstPage.render(null, ImageData_2.zoomFactor, ImageData_2.isTextNeed, null, null, ImageData_2.textDetailsId);\n        data.message = 'imageRenderedSearch';\n        ctx.postMessage(data);\n      } else if (event.data.message === 'extractText') {\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var ImageData_3 = event.data;\n        var data = firstPage.render(null, ImageData_3.zoomFactor, ImageData_3.isTextNeed, null, null, ImageData_3.textDetailsId);\n        data.message = 'textExtracted';\n        ctx.postMessage(data);\n      } else if (event.data.message === 'renderThumbnail') {\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var data = firstPage.render(\"thumbnail\", null, false, null, null);\n        ctx.postMessage(data);\n      } else if (event.data.message === 'printImage') {\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var data = firstPage.render(\"print\", null, false, event.data.printScaleFactor, event.data.printDevicePixelRatio);\n        ctx.postMessage(data);\n      } else if (event.data.message === 'extractImage') {\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var ImageData_4 = event.data;\n        var data = firstPage.render(null, ImageData_4.zoomFactor, ImageData_4.isTextNeed, null, null, ImageData_4.textDetailsId);\n        data.message = 'imageExtracted';\n        ctx.postMessage(data);\n      } else if (event.data.message === 'renderImageAsTile') {\n        var values = event.data;\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var data = firstPage.renderTileImage(values.tileX, values.tileY, values.tileXCount, values.tileYCount, values.zoomFactor, event.data.isTextNeed, event.data.textDetailsId);\n        ctx.postMessage(data);\n      } else if (event.data.message === 'renderImageAsTileSearch') {\n        var values = event.data;\n        var firstPage = documentDetails.getPage(event.data.pageIndex);\n        var data = firstPage.renderTileImage(values.tileX, values.tileY, values.tileXCount, values.tileYCount, values.zoomFactor, event.data.isTextNeed, event.data.textDetailsId);\n        data.message = 'renderTileImageSearch';\n        ctx.postMessage(data);\n      } else if (event.data.message === 'unloadFPDF') {\n        if (documentDetails) {\n          PDFiumModule.asm.free(documentDetails.processor.wasmData.wasmBuffer);\n          FPDF.CloseDocument(documentDetails.processor.wasmData.wasm);\n          FPDF.DestroyLibrary();\n        }\n      }\n    }\n  };\n  var Page = /** @class */function () {\n    function Page(index, processor) {\n      this.index = index;\n      this.src = null;\n      this.processor = processor;\n    }\n    Page.prototype.render = function (message, zoomFactor, isTextNeed, printScaleFactor, printDevicePixelRatio, textDetailsId) {\n      return this.processor.render(this.index, message, zoomFactor, isTextNeed, printScaleFactor, printDevicePixelRatio, textDetailsId);\n    };\n    Page.prototype.renderTileImage = function (x, y, tileX, tileY, zoomFactor, isTextNeed, textDetailsId) {\n      return this.processor.renderTileImage(this.index, x, y, tileX, tileY, zoomFactor, isTextNeed, textDetailsId);\n    };\n    return Page;\n  }();\n  var RectAngle = /** @class */function () {\n    function RectAngle(X, Y, Width, Height, Text, Rotation) {\n      this.X = X;\n      this.Y = Y;\n      this.Width = Width;\n      this.Height = Height;\n      this.Bottom = this.Y + this.Height;\n      this.Right = this.X + this.Width;\n      this.Top = this.Y;\n      this.Left = this.X;\n      this.Rotation = Rotation;\n      this.Text = Text;\n    }\n    return RectAngle;\n  }();\n  ;\n  var Processor = /** @class */function () {\n    function Processor(wasmData) {\n      this.TextBounds = [];\n      this.TextContent = [];\n      this.CharacterBounds = [];\n      this.PageText = \"\";\n      this.wasmData = wasmData;\n    }\n    Processor.prototype.getPageSize = function (i) {\n      var _this = this;\n      if (i === void 0) {\n        i = 0;\n      }\n      return H(F64, 2, [-1, -1])(function (w, h) {\n        return FPDF.GetPageSizeByIndex(_this.wasmData.wasm, i, w, h);\n      }).map(function (v) {\n        return parseInt((v * (96 / 72)).toString());\n      });\n    };\n    Processor.prototype.getCharBounds = function (pagePointer, i) {\n      if (i === void 0) {\n        i = 0;\n      }\n      return H(F64, 4, [-1, -1, -1, -1])(function (left, right, bottom, top) {\n        return FPDF.GetCharBox(pagePointer, i, left, right, bottom, top);\n      });\n    };\n    Processor.prototype.getRender = function (i, w, h, isTextNeed) {\n      if (i === void 0) {\n        i = 0;\n      }\n      var flag = FPDF.REVERSE_BYTE_ORDER;\n      var heap = PDFiumModule.asm.malloc(w * h * 4);\n      PDFiumModule.HEAPU8.fill(0, heap, heap + w * h * 4);\n      var bmap = FPDF.Bitmap_CreateEx(w, h, FPDF.Bitmap_BGRA, heap, w * 4);\n      var page = FPDF.LoadPage(this.wasmData.wasm, i);\n      FPDF.Bitmap_FillRect(bmap, 0, 0, w, h, 0xFFFFFFFF);\n      FPDF.RenderPageBitmap(bmap, page, 0, 0, w, h, 0, flag);\n      FPDF.Bitmap_Destroy(bmap);\n      this.textExtraction(page, i, isTextNeed);\n      FPDF.ClosePage(page);\n      return heap;\n    };\n    Processor.prototype.textExtraction = function (pagePointer, pageIndex, isTextNeed) {\n      var _a;\n      if (isTextNeed) {\n        var _b = this.getPageSize(pageIndex),\n          pageWidth = _b[0],\n          pageHeight = _b[1];\n        var textPage = FPDF.LoadTextPage(pagePointer, pageIndex);\n        var pageRotation = FPDF.GetPageRotation(pagePointer);\n        var totalCharacterCount = FPDF.TextCountChars(textPage);\n        this.TextBounds = [];\n        this.TextContent = [];\n        this.CharacterBounds = [];\n        var pageText = \"\";\n        var minTop = 0;\n        var maxBottom = 0;\n        var minLeft = 0;\n        var maxRight = 0;\n        var top_1 = [];\n        var bottom = [];\n        var left = [];\n        var right = [];\n        var wordBounds = [];\n        var word = \"\";\n        var wordMinLeft = 0;\n        var wordMaxRight = 0;\n        var wordMinTop = 0;\n        var wordMaxBottom = 0;\n        var wordRotation = 0;\n        var wordStart = true;\n        var isZeroWidthSpace = false;\n        var isPreviousSpace = false;\n        var startNewLine = false;\n        var maximumSpaceForNewLine = 11;\n        for (var charCount = 0; charCount <= totalCharacterCount; charCount++) {\n          var result = FPDF.GetUnicodeChar(textPage, charCount);\n          var rotationRadian = FPDF.GetCharAngle(textPage, charCount);\n          var character = String.fromCharCode(result);\n          var _c = this.getCharBounds(textPage, charCount),\n            charLeft = _c[0],\n            charRight = _c[1],\n            charBottom = _c[2],\n            charTop = _c[3];\n          var X = this.pointerToPixelConverter(charLeft);\n          var Y = pageHeight - this.pointerToPixelConverter(charTop);\n          var Width = this.pointerToPixelConverter(charRight - charLeft);\n          var Height = this.pointerToPixelConverter(charTop - charBottom);\n          var rotationAngle = parseInt((rotationRadian * 180 / Math.PI).toString());\n          if (charCount < totalCharacterCount) {\n            pageText += character;\n            var currentCharacterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n            this.CharacterBounds.push(currentCharacterBounds);\n          }\n          if (pageRotation == 1 || pageRotation == 3) {\n            Y = pageWidth - this.pointerToPixelConverter(charTop);\n          }\n          switch (character) {\n            case \"\\0\":\n              minTop = Math.min.apply(Math, top_1);\n              maxBottom = Math.max.apply(Math, bottom);\n              minLeft = Math.min.apply(Math, left);\n              maxRight = Math.max.apply(Math, right);\n              var newWordBounds = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n              wordBounds.push(newWordBounds);\n              this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n              wordBounds = [];\n              wordStart = true;\n              isPreviousSpace = false;\n              word = \"\";\n              top_1 = [];\n              left = [];\n              bottom = [];\n              right = [];\n              minTop = 0;\n              maxBottom = 0;\n              minLeft = 0;\n              maxRight = 0;\n              break;\n            case \"\\r\":\n              if (charCount < totalCharacterCount) {\n                var characterBounds = new RectAngle(X, Y, Width, Height, \"\\r\\n\", rotationAngle);\n                top_1.push(characterBounds.Top);\n                bottom.push(characterBounds.Bottom);\n                left.push(characterBounds.Left);\n                right.push(characterBounds.Right);\n                minTop = Math.min.apply(Math, top_1);\n                maxBottom = Math.max.apply(Math, bottom);\n                minLeft = Math.min.apply(Math, left);\n                maxRight = Math.max.apply(Math, right);\n                var newWordBounds_1 = void 0;\n                if (wordStart == false) {\n                  newWordBounds_1 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                  wordBounds.push(newWordBounds_1);\n                }\n                wordBounds.push(characterBounds);\n                this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n                wordBounds = [];\n                wordStart = true;\n                isPreviousSpace = false;\n                word = \"\";\n                top_1 = [];\n                left = [];\n                bottom = [];\n                right = [];\n                minTop = 0;\n                maxBottom = 0;\n                minLeft = 0;\n                maxRight = 0;\n                pageText += '\\n';\n                rotationRadian = FPDF.GetCharAngle(textPage, charCount);\n                _a = this.getCharBounds(textPage, charCount), charLeft = _a[0], charRight = _a[1], charBottom = _a[2], charTop = _a[3];\n                X = this.pointerToPixelConverter(charLeft);\n                Y = pageHeight - this.pointerToPixelConverter(charTop);\n                Width = this.pointerToPixelConverter(charRight - charLeft);\n                Height = this.pointerToPixelConverter(charTop - charBottom);\n                rotationAngle = parseInt((rotationRadian * 180 / Math.PI).toString());\n                var currentCharacterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                this.CharacterBounds.push(currentCharacterBounds);\n                charCount++;\n              }\n              break;\n            case \"\\u0002\":\n            case \"\\ufffe\":\n              {\n                var characterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                top_1.push(characterBounds.Top);\n                bottom.push(characterBounds.Bottom);\n                left.push(characterBounds.Left);\n                right.push(characterBounds.Right);\n                minTop = Math.min.apply(Math, top_1);\n                maxBottom = Math.max.apply(Math, bottom);\n                minLeft = Math.min.apply(Math, left);\n                maxRight = Math.max.apply(Math, right);\n                var newWordBounds_2 = void 0;\n                if (wordStart == false) {\n                  newWordBounds_2 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                  wordBounds.push(newWordBounds_2);\n                }\n                if (character == \"\\u0002\") {\n                  wordBounds.push(characterBounds);\n                }\n                this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n                wordBounds = [];\n                wordStart = true;\n                isPreviousSpace = false;\n                word = \"\";\n                top_1 = [];\n                left = [];\n                bottom = [];\n                right = [];\n                minTop = 0;\n                maxBottom = 0;\n                minLeft = 0;\n                maxRight = 0;\n              }\n              break;\n            default:\n              if (Width == 0 || Height == 0) {\n                isZeroWidthSpace = true;\n                minTop = Math.min.apply(Math, top_1);\n                maxBottom = Math.max.apply(Math, bottom);\n                minLeft = Math.min.apply(Math, left);\n                maxRight = Math.max.apply(Math, right);\n                var newWordBounds_3 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                wordBounds.push(newWordBounds_3);\n                var characterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                wordMinTop = characterBounds.Top;\n                wordMaxBottom = characterBounds.Bottom;\n                wordMinLeft = characterBounds.Left;\n                wordMaxRight = characterBounds.Right;\n                word = character;\n                wordRotation = wordBounds[wordBounds.length - 1].Rotation;\n                newWordBounds_3 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                wordBounds.push(newWordBounds_3);\n                wordMinTop = 0;\n                wordMaxBottom = 0;\n                wordMinLeft = 0;\n                wordMaxRight = 0;\n                word = \"\";\n                wordRotation = 0;\n                wordStart = true;\n                isPreviousSpace = true;\n              } else {\n                if (wordStart == true) {\n                  wordMinTop = Y;\n                  wordMaxBottom = Y + Height;\n                  wordMinLeft = X;\n                  wordMaxRight = X + Width;\n                }\n                var characterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                if (character != \" \") {\n                  if (isPreviousSpace && wordBounds.length > 0 && rotationAngle == wordBounds[0].Rotation) {\n                    if ((rotationAngle == 180 || rotationAngle == 0) && Math.abs(characterBounds.Y - wordBounds[0].Y) > maximumSpaceForNewLine) {\n                      startNewLine = true;\n                    }\n                    if ((rotationAngle == 270 || rotationAngle == 90) && Math.abs(characterBounds.X - wordBounds[0].X) > maximumSpaceForNewLine) {\n                      startNewLine = true;\n                    }\n                  }\n                  if (isZeroWidthSpace && wordBounds.length >= 1 && wordBounds[wordBounds.length - 1].Rotation != characterBounds.Rotation || startNewLine) {\n                    isZeroWidthSpace = false;\n                    startNewLine = false;\n                    minTop = Math.min.apply(Math, top_1);\n                    maxBottom = Math.max.apply(Math, bottom);\n                    minLeft = Math.min.apply(Math, left);\n                    maxRight = Math.max.apply(Math, right);\n                    var newWordBounds_4 = void 0;\n                    if (wordStart == false) {\n                      newWordBounds_4 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                      wordBounds.push(newWordBounds_4);\n                    }\n                    this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n                    wordBounds = [];\n                    wordStart = true;\n                    word = \"\";\n                    top_1 = [];\n                    left = [];\n                    bottom = [];\n                    right = [];\n                    minTop = 0;\n                    maxBottom = 0;\n                    minLeft = 0;\n                    maxRight = 0;\n                  }\n                  top_1.push(characterBounds.Top);\n                  bottom.push(characterBounds.Bottom);\n                  left.push(characterBounds.Left);\n                  right.push(characterBounds.Right);\n                  wordMinTop = Math.min(wordMinTop, characterBounds.Top);\n                  wordMaxBottom = Math.max(wordMaxBottom, characterBounds.Bottom);\n                  wordMinLeft = Math.min(wordMinLeft, characterBounds.Left);\n                  wordMaxRight = Math.max(wordMaxRight, characterBounds.Right);\n                  word += character;\n                  wordRotation = characterBounds.Rotation;\n                  wordStart = false;\n                  isPreviousSpace = false;\n                } else {\n                  var newWordBounds_5 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                  wordBounds.push(newWordBounds_5);\n                  wordMinTop = characterBounds.Top;\n                  wordMaxBottom = characterBounds.Bottom;\n                  wordMinLeft = characterBounds.Left;\n                  wordMaxRight = characterBounds.Right;\n                  word = character;\n                  wordRotation = characterBounds.Rotation;\n                  newWordBounds_5 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                  wordBounds.push(newWordBounds_5);\n                  wordMinTop = 0;\n                  wordMaxBottom = 0;\n                  wordMinLeft = 0;\n                  wordMaxRight = 0;\n                  word = \"\";\n                  wordRotation = 0;\n                  wordStart = true;\n                  isPreviousSpace = true;\n                }\n              }\n              break;\n          }\n        }\n        FPDF.CloseTextPage(textPage);\n        this.Rotation = pageRotation;\n        this.PageText = pageText;\n      }\n    };\n    Processor.prototype.pointerToPixelConverter = function (pointerValue) {\n      return pointerValue * (96 / 72);\n    };\n    Processor.prototype.textBoundsCalculation = function (wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight) {\n      var newWordBounds;\n      var hasInBetweenRotation = false;\n      var inBetweenRotatedText = \"\";\n      var maximumSpaceBetweenWords = 30;\n      var sentence = wordBounds.reduce(function (word, rect) {\n        return word + rect.Text;\n      }, '');\n      var isRTLText = this.checkIsRtlText(sentence);\n      for (var count = 0; count < wordBounds.length; count++) {\n        var textRotation = wordBounds[count].Rotation;\n        if (textRotation == 0 || textRotation == 180) {\n          if (hasInBetweenRotation) {\n            this.TextBounds.push(newWordBounds);\n            this.TextContent.push(inBetweenRotatedText);\n            inBetweenRotatedText = \"\";\n          }\n          hasInBetweenRotation = false;\n          if (pageRotation == 0) {\n            newWordBounds = new RectAngle(wordBounds[count].Left, minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 1) {\n            newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count].Left, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 2) {\n            newWordBounds = new RectAngle(pageWidth - wordBounds[count].Left, pageHeight - minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 3) {\n            newWordBounds = new RectAngle(minTop, pageHeight - wordBounds[count].Left, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          }\n        } else if (textRotation == 90 || textRotation == 270) {\n          if (hasInBetweenRotation) {\n            this.TextBounds.push(newWordBounds);\n            this.TextContent.push(inBetweenRotatedText);\n            inBetweenRotatedText = \"\";\n          }\n          hasInBetweenRotation = false;\n          if (pageRotation == 0) {\n            newWordBounds = new RectAngle(minLeft, wordBounds[count].Top, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 1) {\n            newWordBounds = new RectAngle(pageWidth - wordBounds[count].Top, minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 2) {\n            newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - wordBounds[count].Top, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 3) {\n            newWordBounds = new RectAngle(wordBounds[count].Top, pageHeight - minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n          }\n        } else if (!hasInBetweenRotation) {\n          hasInBetweenRotation = true;\n          inBetweenRotatedText += wordBounds[count].Text;\n          if (pageRotation == 0) {\n            newWordBounds = new RectAngle(wordBounds[count].Left, minTop, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 1) {\n            newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count].Left, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 2) {\n            newWordBounds = new RectAngle(pageWidth - wordBounds[count].Left, pageHeight - minTop, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          } else if (pageRotation == 3) {\n            newWordBounds = new RectAngle(minTop, pageHeight - wordBounds[count].Left, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n          }\n        } else {\n          inBetweenRotatedText += wordBounds[count].Text;\n        }\n        if (!hasInBetweenRotation && wordBounds[count].Text === \" \" && count !== 0 && count + 1 <= wordBounds.length) {\n          if (!isRTLText) {\n            if (count + 1 != wordBounds.length) {\n              var spaceWidth = 0;\n              switch (textRotation) {\n                case 0:\n                  spaceWidth = wordBounds[count + 1].Left - (wordBounds[count - 1].Left + wordBounds[count - 1].Width);\n                  if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                    spaceWidth = 0;\n                  }\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(wordBounds[count - 1].Left + wordBounds[count - 1].Width, minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count - 1].Left + wordBounds[count - 1].Width, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), pageHeight - minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n                case 90:\n                  spaceWidth = wordBounds[count + 1].Top - (wordBounds[count - 1].Top + wordBounds[count - 1].Height);\n                  if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                    spaceWidth = 0;\n                  }\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(minLeft, wordBounds[count - 1].Top + wordBounds[count - 1].Height, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(wordBounds[count - 1].Top + wordBounds[count - 1].Height, pageHeight - minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n                case 180:\n                  spaceWidth = wordBounds[count - 1].Left - (wordBounds[count + 1].Left + wordBounds[count + 1].Width);\n                  if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                    spaceWidth = 0;\n                  }\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(wordBounds[count + 1].Left + wordBounds[count + 1].Width, minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count + 1].Left + wordBounds[count + 1].Width, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count + 1].Left + wordBounds[count + 1].Width), pageHeight - minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count + 1].Left + wordBounds[count + 1].Width), spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n                case 270:\n                  spaceWidth = wordBounds[count - 1].Top - (wordBounds[count + 1].Top + wordBounds[count + 1].Height);\n                  if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                    spaceWidth = 0;\n                  }\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(minLeft, wordBounds[count + 1].Top + wordBounds[count + 1].Height, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count + 1].Top + wordBounds[count + 1].Height), minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - (wordBounds[count + 1].Top + wordBounds[count + 1].Height), maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(wordBounds[count + 1].Top + wordBounds[count + 1].Height, pageHeight - minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n              }\n            } else {\n              switch (textRotation) {\n                case 90:\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(minLeft, wordBounds[count - 1].Top + wordBounds[count - 1].Height, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(wordBounds[count - 1].Top + wordBounds[count - 1].Height, pageHeight - minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n                case 270:\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(minLeft, wordBounds[count - 1].Top - wordBounds[count].Height, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Top - wordBounds[count].Height), minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - wordBounds[count - 1].Top - wordBounds[count].Height, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(wordBounds[count - 1].Top - wordBounds[count].Height, pageHeight - minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n                case 180:\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(wordBounds[count - 1].Left - wordBounds[count].Width, minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count - 1].Left - wordBounds[count].Width, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Left - wordBounds[count].Width), pageHeight - minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count - 1].Left - wordBounds[count].Width), wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n                case 0:\n                  if (pageRotation == 0) {\n                    newWordBounds = new RectAngle(wordBounds[count - 1].Left + wordBounds[count - 1].Width, minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 1) {\n                    newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count - 1].Left + wordBounds[count - 1].Width, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 2) {\n                    newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), pageHeight - minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  } else if (pageRotation == 3) {\n                    newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                  }\n                  break;\n              }\n            }\n          } else if (isRTLText && count + 1 != wordBounds.length) {\n            var spaceWidth = wordBounds[count - 1].Left - (wordBounds[count + 1].Left + wordBounds[count + 1].Width);\n            if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n              spaceWidth = 0;\n            }\n            newWordBounds = new RectAngle(wordBounds[count + 1].Left + wordBounds[count + 1].Width, minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, wordBounds[count].Rotation);\n          } else if (isRTLText) {\n            newWordBounds = new RectAngle(wordBounds[count - 1].Left - wordBounds[count].Width, minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, wordBounds[count].Rotation);\n          }\n        }\n        if (!hasInBetweenRotation) {\n          this.TextBounds.push(newWordBounds);\n          this.TextContent.push(wordBounds[count].Text);\n        }\n      }\n      if (hasInBetweenRotation) {\n        this.TextBounds.push(newWordBounds);\n        this.TextContent.push(inBetweenRotatedText);\n      }\n    };\n    Processor.prototype.checkIsRtlText = function (text) {\n      // eslint-disable-next-line max-len\n      var ltrChars = 'A-Za-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02B8\\\\u0300-\\\\u0590\\\\u0800-\\\\u1FFF' + '\\\\u2C00-\\\\uFB1C\\\\uFDFE-\\\\uFE6F\\\\uFEFD-\\\\uFFFF';\n      var rtlChars = '\\\\u0591-\\\\u07FF\\\\uFB1D-\\\\uFDFD\\\\uFE70-\\\\uFEFC';\n      // eslint-disable-next-line\n      var rtlDirCheck = new RegExp('^[^' + ltrChars + ']*[' + rtlChars + ']');\n      return rtlDirCheck.test(text);\n    };\n    Processor.prototype.getPageRender = function (n, w, h, isTextNeed) {\n      if (n === void 0) {\n        n = 0;\n      }\n      var pageRenderPtr = this.getRender(n, w, h, isTextNeed);\n      var pageRenderData = [];\n      pageRenderData = PDFiumModule.HEAPU8.slice(pageRenderPtr, pageRenderPtr + w * h * 4);\n      PDFiumModule.asm.free(pageRenderPtr);\n      return pageRenderData;\n    };\n    Processor.prototype.render = function (n, message, zoomFactor, isTextNeed, printScaleFactor, printDevicePixelRatio, textDetailsId) {\n      if (n === void 0) {\n        n = 0;\n      }\n      var _a = this.getPageSize(n),\n        w = _a[0],\n        h = _a[1];\n      var scaleFactor = 1.5;\n      var thumbnailWidth = 99.7;\n      var thumbnailHeight = 141;\n      if (message === 'thumbnail') {\n        var newWidth = Math.round(thumbnailWidth * scaleFactor);\n        var newHeight = Math.round(thumbnailHeight * scaleFactor);\n        var data = this.getPageRender(n, newWidth, newHeight, false);\n        return {\n          value: data,\n          width: newWidth,\n          height: newHeight,\n          pageIndex: n,\n          message: 'renderThumbnail'\n        };\n      } else if (message === 'print') {\n        //An A0 piece of paper measures 33.1 × 46.8 inches, with 46.8 inches being the greater dimension. The pixel value of 46.8 inches is 4493px. If the document size is too large, we may not be able to display the image. Therefore, we should consider the maximum size of A0 paper if the page size is greater than 4493 pixels.\n        var maxPageSize = 4493;\n        var scaleFactor_1 = 1.5;\n        var whichIsBigger = w > h ? 'Width' : 'Height';\n        var maxWidth = w;\n        var maxHeight = h;\n        if (whichIsBigger === 'Width') {\n          maxWidth = w > maxPageSize ? maxPageSize : w;\n          if (maxWidth === maxPageSize) {\n            maxHeight = h / (w / maxPageSize);\n          }\n        } else {\n          maxHeight = h > maxPageSize ? maxPageSize : h;\n          if (maxHeight === maxPageSize) {\n            maxWidth = w / (h / maxPageSize);\n          }\n        }\n        var newWidth = Math.round(maxWidth * printScaleFactor * scaleFactor_1);\n        var newHeight = Math.round(maxHeight * printScaleFactor * scaleFactor_1);\n        var data = this.getPageRender(n, newWidth, newHeight, false);\n        return {\n          value: data,\n          width: newWidth,\n          height: newHeight,\n          pageIndex: n,\n          pageWidth: w,\n          pageHeight: h,\n          message: 'printImage',\n          printDevicePixelRatio: printDevicePixelRatio\n        };\n      } else {\n        var newWidth = Math.round(w * scaleFactor * zoomFactor);\n        var newHeight = Math.round(h * scaleFactor * zoomFactor);\n        // Reduce the zoom factor if the new image size exceeds the memory limit\n        while (newWidth * newHeight * 4 * 2 >= 2147483648) {\n          zoomFactor = zoomFactor - 0.1;\n          newWidth = Math.round(this.pointerToPixelConverter(w) * zoomFactor);\n          newHeight = Math.round(this.pointerToPixelConverter(h) * zoomFactor);\n        }\n        var data = this.getPageRender(n, newWidth, newHeight, isTextNeed);\n        return {\n          value: data,\n          width: newWidth,\n          height: newHeight,\n          pageWidth: w,\n          pageHeight: h,\n          pageIndex: n,\n          message: 'imageRendered',\n          textBounds: this.TextBounds,\n          textContent: this.TextContent,\n          rotation: this.Rotation,\n          pageText: this.PageText,\n          characterBounds: this.CharacterBounds,\n          zoomFactor: zoomFactor,\n          isTextNeed: isTextNeed,\n          textDetailsId: textDetailsId\n        };\n      }\n    };\n    Processor.prototype.renderTileImage = function (n, tileX, tileY, xCount, yCount, zoomFactor, isTextNeed, textDetailsId) {\n      if (n === void 0) {\n        n = 0;\n      }\n      var _a = this.getPageSize(n),\n        w = _a[0],\n        h = _a[1];\n      var newWidth = Math.round(w * 1.5 * zoomFactor);\n      var newHeight = Math.round(h * 1.5 * zoomFactor);\n      var w1 = Math.round(newWidth / xCount);\n      var h1 = Math.round(newHeight / yCount);\n      var flag = FPDF.REVERSE_BYTE_ORDER;\n      var heap = PDFiumModule.asm.malloc(w1 * h1 * 4);\n      PDFiumModule.HEAPU8.fill(0, heap, heap + w1 * h1 * 4);\n      var bmap = FPDF.Bitmap_CreateEx(w1, h1, 4, heap, w1 * 4);\n      var page = FPDF.LoadPage(this.wasmData.wasm, n);\n      FPDF.Bitmap_FillRect(bmap, 0, 0, w1, h1, 0xFFFFFFFF);\n      FPDF.RenderPageBitmap(bmap, page, -tileX * w1, -tileY * h1, newWidth, newHeight, 0, flag);\n      FPDF.Bitmap_Destroy(bmap);\n      this.textExtraction(page, n, isTextNeed);\n      FPDF.ClosePage(page);\n      var pageRenderPtr = heap;\n      var data = [];\n      data = PDFiumModule.HEAPU8.slice(pageRenderPtr, pageRenderPtr + w1 * h1 * 4);\n      PDFiumModule.asm.free(pageRenderPtr);\n      if (tileX === 0 && tileY === 0) {\n        return {\n          value: data,\n          w: w1,\n          h: h1,\n          noTileX: xCount,\n          noTileY: yCount,\n          x: tileX,\n          y: tileY,\n          pageIndex: n,\n          message: 'renderTileImage',\n          textBounds: this.TextBounds,\n          textContent: this.TextContent,\n          rotation: this.Rotation,\n          pageText: this.PageText,\n          characterBounds: this.CharacterBounds,\n          textDetailsId: textDetailsId,\n          isTextNeed: isTextNeed,\n          zoomFactor: zoomFactor\n        };\n      } else {\n        return {\n          value: data,\n          w: w1,\n          h: h1,\n          noTileX: xCount,\n          noTileY: yCount,\n          x: tileX,\n          y: tileY,\n          pageIndex: n,\n          message: 'renderTileImage',\n          textDetailsId: textDetailsId,\n          isTextNeed: isTextNeed,\n          zoomFactor: zoomFactor\n        };\n      }\n    };\n    ;\n    Processor.prototype.getLastError = function () {\n      var lastError = FPDF.GetLastError();\n      switch (lastError) {\n        case FPDF.LAST_ERROR.SUCCESS:\n          return \"success\";\n        case FPDF.LAST_ERROR.UNKNOWN:\n          return \"unknown error\";\n        case FPDF.LAST_ERROR.FILE:\n          return \"file not found or could not be opened\";\n        case FPDF.LAST_ERROR.FORMAT:\n          return \"file not in PDF format or corrupted\";\n        case FPDF.LAST_ERROR.PASSWORD:\n          return \"password required or incorrect password\";\n        case FPDF.LAST_ERROR.SECURITY:\n          return \"unsupported security scheme\";\n        case FPDF.LAST_ERROR.PAGE:\n          return \"page not found or content error\";\n        default:\n          return \"unknown error\";\n      }\n    };\n    return Processor;\n  }();\n  var DocumentInfo = /** @class */function () {\n    function DocumentInfo(wasmData) {\n      this.pages = [];\n      this.processor = new Processor(wasmData);\n    }\n    DocumentInfo.prototype.setPages = function (pagesCount) {\n      this.pages = Array(pagesCount).fill(null);\n    };\n    DocumentInfo.prototype.createAllPages = function () {\n      for (var i = 0; i < this.pages.length; i++) {\n        this.pages[parseInt(i.toString(), 10)] = new Page(parseInt(i.toString(), 10), this.processor);\n      }\n    };\n    DocumentInfo.prototype.getPage = function (index) {\n      // eslint-disable-next-line\n      var page = this.pages[index];\n      if (!page) {\n        page = new Page(index);\n        // eslint-disable-next-line\n        this.pages[index] = page;\n      }\n      return page;\n    };\n    return DocumentInfo;\n  }();\n}","map":{"version":3,"names":["PdfiumRunner","moduleString","pageLoaded","moduleLoaded","FPDF","pdfiumWindow","documentDetails","PDFiumModule","I8","Int8Array","I16","Int16Array","I32","Int32Array","U8","Uint8Array","CH","U16","Uint16Array","U32","Uint32Array","F32","Float32Array","F64","Float64Array","H","t","s","d","f","_a","heap","m","a","slice","v","apply","map","x","p","free","r","F","Bitmap_BGRA","C","Object","assign","LCD_TEXT","NO_NATIVETEXT","GRAYSCALE","DEBUG_INFO","NO_CATCH","RENDER_LIMITEDIMAGECACHE","RENDER_FORCEHALFTONE","PRINTING","REVERSE_BYTE_ORDER","Bitmap_Gray","Bitmap_BGR","Bitmap_BGRx","LAST_ERROR","SUCCESS","UNKNOWN","FILE","FORMAT","PASSWORD","SECURITY","PAGE","initializeFPDF","Init","cwrap","RenderPageBitmap","Bitmap_FillRect","Bitmap_CreateEx","Bitmap_Destroy","LoadPage","ClosePage","LoadMemDocument","GetPageSizeByIndex","GetLastError","GetPageCount","CloseDocument","DestroyLibrary","LoadTextPage","CloseTextPage","TextCountChars","GetUnicodeChar","GetCharBox","GetPageRotation","GetCharAngle","J","E","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","Z","BYTES_PER_ELEMENT","asm","malloc","Array","_loop_1","i","checkIfEverythingWasLoaded","startApp","onRuntimeInitialized","loaded","onload","ctx","postMessage","message","self","onmessage","event","data","importScripts","url","fileByteArray","uploadedFile","fileSize","length","wasmBuffer","set","DocumentInfo","wasm","password","pages","processor","wasmData","setPages","createAllPages","pageIndex","isZoomMode","firstPage","getPage","ImageData_1","render","zoomFactor","isTextNeed","textDetailsId","ImageData_2","ImageData_3","printScaleFactor","printDevicePixelRatio","ImageData_4","values","renderTileImage","tileX","tileY","tileXCount","tileYCount","Page","index","src","prototype","y","RectAngle","X","Y","Width","Height","Text","Rotation","Bottom","Right","Top","Left","Processor","TextBounds","TextContent","CharacterBounds","PageText","getPageSize","_this","w","h","parseInt","toString","getCharBounds","pagePointer","left","right","bottom","top","getRender","flag","fill","bmap","page","textExtraction","_b","pageWidth","pageHeight","textPage","pageRotation","totalCharacterCount","pageText","minTop","maxBottom","minLeft","maxRight","top_1","wordBounds","word","wordMinLeft","wordMaxRight","wordMinTop","wordMaxBottom","wordRotation","wordStart","isZeroWidthSpace","isPreviousSpace","startNewLine","maximumSpaceForNewLine","charCount","result","rotationRadian","character","String","fromCharCode","_c","charLeft","charRight","charBottom","charTop","pointerToPixelConverter","rotationAngle","Math","PI","currentCharacterBounds","push","min","max","newWordBounds","textBoundsCalculation","characterBounds","newWordBounds_1","newWordBounds_2","newWordBounds_3","abs","newWordBounds_4","newWordBounds_5","pointerValue","hasInBetweenRotation","inBetweenRotatedText","maximumSpaceBetweenWords","sentence","reduce","rect","isRTLText","checkIsRtlText","count","textRotation","spaceWidth","text","ltrChars","rtlChars","rtlDirCheck","RegExp","test","getPageRender","n","pageRenderPtr","pageRenderData","scaleFactor","thumbnailWidth","thumbnailHeight","newWidth","round","newHeight","value","width","height","maxPageSize","scaleFactor_1","whichIsBigger","maxWidth","maxHeight","textBounds","textContent","rotation","xCount","yCount","w1","h1","noTileX","noTileY","getLastError","lastError","pagesCount"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdfium/pdfium-runner.js"],"sourcesContent":["// eslint-disable-next-line\nexport function PdfiumRunner() {\n    var moduleString = \"Module\";\n    var pageLoaded = false;\n    var moduleLoaded = false;\n    var FPDF = {};\n    var pdfiumWindow = pdfiumWindow || {};\n    var documentDetails;\n    var PDFiumModule = typeof (pdfiumWindow[\"\" + moduleString]) !== 'undefined' ? (pdfiumWindow[\"\" + moduleString]) : {};\n    var I8 = Int8Array;\n    var I16 = Int16Array;\n    var I32 = Int32Array;\n    var U8 = Uint8Array;\n    var CH = U8;\n    var U16 = Uint16Array;\n    var U32 = Uint32Array;\n    var F32 = Float32Array;\n    var F64 = Float64Array;\n    var H = function (t, s, d) { return function (f) {\n        var _a = pdfiumWindow.heap(t, s), m = _a[0], a = _a.slice(1);\n        var v = f.apply(void 0, a.map(function (x) { return x.p; }));\n        if (!v) {\n            m.free();\n            return d;\n        }\n        var r = a.map(function (x) { return x.v; });\n        m.free();\n        return r;\n    }; };\n    var F = FPDF.Bitmap_BGRA;\n    var C = 4;\n    Object.assign(FPDF, {\n        LCD_TEXT: 0x02,\n        NO_NATIVETEXT: 0x04,\n        GRAYSCALE: 0x08,\n        DEBUG_INFO: 0x80,\n        NO_CATCH: 0x100,\n        RENDER_LIMITEDIMAGECACHE: 0x200,\n        RENDER_FORCEHALFTONE: 0x400,\n        PRINTING: 0x800,\n        REVERSE_BYTE_ORDER: 0x10,\n        Bitmap_Gray: 1,\n        Bitmap_BGR: 2,\n        Bitmap_BGRx: 3,\n        Bitmap_BGRA: 4,\n        LAST_ERROR: {\n            SUCCESS: 0,\n            UNKNOWN: 1,\n            FILE: 2,\n            FORMAT: 3,\n            PASSWORD: 4,\n            SECURITY: 5,\n            PAGE: 6\n        }\n    });\n    function initializeFPDF() {\n        FPDF.Init = PDFiumModule.cwrap('FPDF_InitLibrary');\n        FPDF.RenderPageBitmap = PDFiumModule.cwrap('FPDF_RenderPageBitmap', '', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number']);\n        FPDF.Bitmap_FillRect = PDFiumModule.cwrap('FPDFBitmap_FillRect', '', ['number', 'number', 'number', 'number', 'number', 'number']);\n        FPDF.Bitmap_CreateEx = PDFiumModule.cwrap('FPDFBitmap_CreateEx', 'number', ['number', 'number', 'number', 'number', 'number']);\n        FPDF.Bitmap_Destroy = PDFiumModule.cwrap('FPDFBitmap_Destroy', '', ['number']);\n        FPDF.LoadPage = PDFiumModule.cwrap('FPDF_LoadPage', 'number', ['number', 'number']);\n        FPDF.ClosePage = PDFiumModule.cwrap('FPDF_ClosePage', '', ['number']);\n        FPDF.LoadMemDocument = PDFiumModule.cwrap('FPDF_LoadMemDocument', 'number', ['number', 'number', 'string']);\n        FPDF.GetPageSizeByIndex = PDFiumModule.cwrap('FPDF_GetPageSizeByIndex', 'number', ['number', 'number', 'number', 'number']);\n        FPDF.GetLastError = PDFiumModule.cwrap('FPDF_GetLastError', 'number');\n        FPDF.GetPageCount = PDFiumModule.cwrap('FPDF_GetPageCount', 'number', ['number']);\n        FPDF.CloseDocument = PDFiumModule.cwrap('FPDF_CloseDocument', '', ['number']);\n        FPDF.DestroyLibrary = PDFiumModule.cwrap('FPDF_DestroyLibrary');\n        FPDF.LoadTextPage = PDFiumModule.cwrap('FPDFText_LoadPage', 'number', ['number']);\n        FPDF.CloseTextPage = PDFiumModule.cwrap('FPDFText_ClosePage', '', ['number']);\n        FPDF.TextCountChars = PDFiumModule.cwrap('FPDFText_CountChars', 'number', ['number']);\n        FPDF.GetUnicodeChar = PDFiumModule.cwrap('FPDFText_GetUnicode', 'number', ['number']);\n        FPDF.GetCharBox = PDFiumModule.cwrap('FPDFText_GetCharBox', 'number', ['number', 'number', 'number', 'number', 'number']);\n        FPDF.GetPageRotation = PDFiumModule.cwrap('FPDFPage_GetRotation', 'number', ['number']);\n        FPDF.GetCharAngle = PDFiumModule.cwrap('FPDFText_GetCharAngle', 'number', ['number']);\n        pdfiumWindow.heap = function (J, s) {\n            var E;\n            switch (J) {\n                case Int8Array:\n                    E = PDFiumModule.HEAP8;\n                    break;\n                case Int16Array:\n                    E = PDFiumModule.HEAP16;\n                    break;\n                case Int32Array:\n                    E = PDFiumModule.HEAP32;\n                    break;\n                case Uint8Array:\n                    E = PDFiumModule.HEAPU8;\n                    break;\n                case Uint16Array:\n                    E = PDFiumModule.HEAPU16;\n                    break;\n                case Uint32Array:\n                    E = PDFiumModule.HEAPU32;\n                    break;\n                case Float32Array:\n                    E = PDFiumModule.HEAPF32;\n                    break;\n                case Float64Array:\n                    E = PDFiumModule.HEAPF64;\n                    break;\n            }\n            var Z = J.BYTES_PER_ELEMENT;\n            var m = PDFiumModule.asm.malloc(s * Z);\n            var a = Array(1 + s);\n            a[0] = ({ s: s, J: J, Z: Z, E: E, m: m, free: function () { return PDFiumModule.asm.free(m); } });\n            var _loop_1 = function (i) {\n                a[i + 1] = ({ p: m + (i * Z), get v() { return E[m / Z + i]; } });\n            };\n            for (var i = 0; i < s; i++) {\n                _loop_1(i);\n            }\n            return a;\n        };\n    }\n    function checkIfEverythingWasLoaded() {\n        pageLoaded = true;\n        if (pageLoaded || moduleLoaded) {\n            startApp();\n        }\n    }\n    PDFiumModule.onRuntimeInitialized = function () {\n        moduleLoaded = true;\n        checkIfEverythingWasLoaded();\n    };\n    function startApp() {\n        initializeFPDF();\n        if (pdfiumWindow.loaded) {\n            pdfiumWindow.loaded();\n        }\n    }\n    pdfiumWindow.onload = function () {\n        pageLoaded = true;\n        checkIfEverythingWasLoaded();\n    };\n    pdfiumWindow.loaded = function () {\n        ctx.postMessage({ message: 'loaded' });\n    };\n    var ctx = self;\n    ctx.onmessage = function (event) {\n        if (event.data.message === 'initialLoading') {\n            importScripts(event.data.url + '/pdfium.js');\n            PDFiumModule.url = event.data.url;\n            PDFiumModule.onRuntimeInitialized = function () {\n                moduleLoaded = true;\n                checkIfEverythingWasLoaded();\n            };\n            this['PDFiumModule'](PDFiumModule);\n        }\n        else if (event.data.message === 'LoadPageCollection') {\n            pdfiumWindow.fileByteArray = event.data.uploadedFile;\n            var fileSize = pdfiumWindow.fileByteArray.length;\n            FPDF.Init();\n            var wasmBuffer = PDFiumModule.asm.malloc(fileSize);\n            PDFiumModule.HEAPU8.set(pdfiumWindow.fileByteArray, wasmBuffer);\n            documentDetails = new DocumentInfo({\n                wasm: FPDF.LoadMemDocument(wasmBuffer, fileSize, event.data.password),\n                wasmBuffer: wasmBuffer,\n            });\n            var pages = FPDF.GetPageCount(documentDetails.processor.wasmData.wasm);\n            documentDetails.setPages(pages);\n            documentDetails.createAllPages();\n            ctx.postMessage({ message: 'PageLoaded', pageIndex: event.data.pageIndex, isZoomMode: event.data.isZoomMode });\n        }\n        if (documentDetails) {\n            if (event.data.message === 'renderPage') {\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var ImageData_1 = event.data;\n                var data = firstPage.render(null, ImageData_1.zoomFactor, ImageData_1.isTextNeed, null, null, ImageData_1.textDetailsId);\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'renderPageSearch') {\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var ImageData_2 = event.data;\n                var data = firstPage.render(null, ImageData_2.zoomFactor, ImageData_2.isTextNeed, null, null, ImageData_2.textDetailsId);\n                data.message = 'imageRenderedSearch';\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'extractText') {\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var ImageData_3 = event.data;\n                var data = firstPage.render(null, ImageData_3.zoomFactor, ImageData_3.isTextNeed, null, null, ImageData_3.textDetailsId);\n                data.message = 'textExtracted';\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'renderThumbnail') {\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var data = firstPage.render(\"thumbnail\", null, false, null, null);\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'printImage') {\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var data = firstPage.render(\"print\", null, false, event.data.printScaleFactor, event.data.printDevicePixelRatio);\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'extractImage') {\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var ImageData_4 = event.data;\n                var data = firstPage.render(null, ImageData_4.zoomFactor, ImageData_4.isTextNeed, null, null, ImageData_4.textDetailsId);\n                data.message = 'imageExtracted';\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'renderImageAsTile') {\n                var values = event.data;\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var data = firstPage.renderTileImage(values.tileX, values.tileY, values.tileXCount, values.tileYCount, values.zoomFactor, event.data.isTextNeed, event.data.textDetailsId);\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'renderImageAsTileSearch') {\n                var values = event.data;\n                var firstPage = documentDetails.getPage(event.data.pageIndex);\n                var data = firstPage.renderTileImage(values.tileX, values.tileY, values.tileXCount, values.tileYCount, values.zoomFactor, event.data.isTextNeed, event.data.textDetailsId);\n                data.message = 'renderTileImageSearch';\n                ctx.postMessage(data);\n            }\n            else if (event.data.message === 'unloadFPDF') {\n                if (documentDetails) {\n                    PDFiumModule.asm.free(documentDetails.processor.wasmData.wasmBuffer);\n                    FPDF.CloseDocument(documentDetails.processor.wasmData.wasm);\n                    FPDF.DestroyLibrary();\n                }\n            }\n        }\n    };\n    var Page = /** @class */ (function () {\n        function Page(index, processor) {\n            this.index = index;\n            this.src = null;\n            this.processor = processor;\n        }\n        Page.prototype.render = function (message, zoomFactor, isTextNeed, printScaleFactor, printDevicePixelRatio, textDetailsId) {\n            return this.processor.render(this.index, message, zoomFactor, isTextNeed, printScaleFactor, printDevicePixelRatio, textDetailsId);\n        };\n        Page.prototype.renderTileImage = function (x, y, tileX, tileY, zoomFactor, isTextNeed, textDetailsId) {\n            return this.processor.renderTileImage(this.index, x, y, tileX, tileY, zoomFactor, isTextNeed, textDetailsId);\n        };\n        return Page;\n    }());\n    var RectAngle = /** @class */ (function () {\n        function RectAngle(X, Y, Width, Height, Text, Rotation) {\n            this.X = X;\n            this.Y = Y;\n            this.Width = Width;\n            this.Height = Height;\n            this.Bottom = this.Y + this.Height;\n            this.Right = this.X + this.Width;\n            this.Top = this.Y;\n            this.Left = this.X;\n            this.Rotation = Rotation;\n            this.Text = Text;\n        }\n        return RectAngle;\n    }());\n    ;\n    var Processor = /** @class */ (function () {\n        function Processor(wasmData) {\n            this.TextBounds = [];\n            this.TextContent = [];\n            this.CharacterBounds = [];\n            this.PageText = \"\";\n            this.wasmData = wasmData;\n        }\n        Processor.prototype.getPageSize = function (i) {\n            var _this = this;\n            if (i === void 0) { i = 0; }\n            return H(F64, 2, [-1, -1])(function (w, h) { return FPDF.GetPageSizeByIndex(_this.wasmData.wasm, i, w, h); }).map(function (v) { return parseInt((v * (96 / 72)).toString()); });\n        };\n        Processor.prototype.getCharBounds = function (pagePointer, i) {\n            if (i === void 0) { i = 0; }\n            return H(F64, 4, [-1, -1, -1, -1])(function (left, right, bottom, top) { return FPDF.GetCharBox(pagePointer, i, left, right, bottom, top); });\n        };\n        Processor.prototype.getRender = function (i, w, h, isTextNeed) {\n            if (i === void 0) { i = 0; }\n            var flag = FPDF.REVERSE_BYTE_ORDER;\n            var heap = PDFiumModule.asm.malloc(w * h * 4);\n            PDFiumModule.HEAPU8.fill(0, heap, heap + (w * h * 4));\n            var bmap = FPDF.Bitmap_CreateEx(w, h, FPDF.Bitmap_BGRA, heap, w * 4);\n            var page = FPDF.LoadPage(this.wasmData.wasm, i);\n            FPDF.Bitmap_FillRect(bmap, 0, 0, w, h, 0xFFFFFFFF);\n            FPDF.RenderPageBitmap(bmap, page, 0, 0, w, h, 0, flag);\n            FPDF.Bitmap_Destroy(bmap);\n            this.textExtraction(page, i, isTextNeed);\n            FPDF.ClosePage(page);\n            return heap;\n        };\n        Processor.prototype.textExtraction = function (pagePointer, pageIndex, isTextNeed) {\n            var _a;\n            if (isTextNeed) {\n                var _b = this.getPageSize(pageIndex), pageWidth = _b[0], pageHeight = _b[1];\n                var textPage = FPDF.LoadTextPage(pagePointer, pageIndex);\n                var pageRotation = FPDF.GetPageRotation(pagePointer);\n                var totalCharacterCount = FPDF.TextCountChars(textPage);\n                this.TextBounds = [];\n                this.TextContent = [];\n                this.CharacterBounds = [];\n                var pageText = \"\";\n                var minTop = 0;\n                var maxBottom = 0;\n                var minLeft = 0;\n                var maxRight = 0;\n                var top_1 = [];\n                var bottom = [];\n                var left = [];\n                var right = [];\n                var wordBounds = [];\n                var word = \"\";\n                var wordMinLeft = 0;\n                var wordMaxRight = 0;\n                var wordMinTop = 0;\n                var wordMaxBottom = 0;\n                var wordRotation = 0;\n                var wordStart = true;\n                var isZeroWidthSpace = false;\n                var isPreviousSpace = false;\n                var startNewLine = false;\n                var maximumSpaceForNewLine = 11;\n                for (var charCount = 0; charCount <= totalCharacterCount; charCount++) {\n                    var result = FPDF.GetUnicodeChar(textPage, charCount);\n                    var rotationRadian = FPDF.GetCharAngle(textPage, charCount);\n                    var character = String.fromCharCode(result);\n                    var _c = this.getCharBounds(textPage, charCount), charLeft = _c[0], charRight = _c[1], charBottom = _c[2], charTop = _c[3];\n                    var X = this.pointerToPixelConverter(charLeft);\n                    var Y = (pageHeight) - this.pointerToPixelConverter(charTop);\n                    var Width = this.pointerToPixelConverter(charRight - charLeft);\n                    var Height = this.pointerToPixelConverter(charTop - charBottom);\n                    var rotationAngle = parseInt((rotationRadian * 180 / Math.PI).toString());\n                    if (charCount < totalCharacterCount) {\n                        pageText += character;\n                        var currentCharacterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                        this.CharacterBounds.push(currentCharacterBounds);\n                    }\n                    if (pageRotation == 1 || pageRotation == 3) {\n                        Y = (pageWidth) - this.pointerToPixelConverter(charTop);\n                    }\n                    switch (character) {\n                        case \"\\0\":\n                            minTop = Math.min.apply(Math, top_1);\n                            maxBottom = Math.max.apply(Math, bottom);\n                            minLeft = Math.min.apply(Math, left);\n                            maxRight = Math.max.apply(Math, right);\n                            var newWordBounds = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                            wordBounds.push(newWordBounds);\n                            this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n                            wordBounds = [];\n                            wordStart = true;\n                            isPreviousSpace = false;\n                            word = \"\";\n                            top_1 = [];\n                            left = [];\n                            bottom = [];\n                            right = [];\n                            minTop = 0;\n                            maxBottom = 0;\n                            minLeft = 0;\n                            maxRight = 0;\n                            break;\n                        case \"\\r\":\n                            if (charCount < totalCharacterCount) {\n                                var characterBounds = new RectAngle(X, Y, Width, Height, \"\\r\\n\", rotationAngle);\n                                top_1.push(characterBounds.Top);\n                                bottom.push(characterBounds.Bottom);\n                                left.push(characterBounds.Left);\n                                right.push(characterBounds.Right);\n                                minTop = Math.min.apply(Math, top_1);\n                                maxBottom = Math.max.apply(Math, bottom);\n                                minLeft = Math.min.apply(Math, left);\n                                maxRight = Math.max.apply(Math, right);\n                                var newWordBounds_1 = void 0;\n                                if (wordStart == false) {\n                                    newWordBounds_1 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                                    wordBounds.push(newWordBounds_1);\n                                }\n                                wordBounds.push(characterBounds);\n                                this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n                                wordBounds = [];\n                                wordStart = true;\n                                isPreviousSpace = false;\n                                word = \"\";\n                                top_1 = [];\n                                left = [];\n                                bottom = [];\n                                right = [];\n                                minTop = 0;\n                                maxBottom = 0;\n                                minLeft = 0;\n                                maxRight = 0;\n                                pageText += '\\n';\n                                rotationRadian = FPDF.GetCharAngle(textPage, charCount);\n                                _a = this.getCharBounds(textPage, charCount), charLeft = _a[0], charRight = _a[1], charBottom = _a[2], charTop = _a[3];\n                                X = this.pointerToPixelConverter(charLeft);\n                                Y = (pageHeight) - this.pointerToPixelConverter(charTop);\n                                Width = this.pointerToPixelConverter(charRight - charLeft);\n                                Height = this.pointerToPixelConverter(charTop - charBottom);\n                                rotationAngle = parseInt((rotationRadian * 180 / Math.PI).toString());\n                                var currentCharacterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                                this.CharacterBounds.push(currentCharacterBounds);\n                                charCount++;\n                            }\n                            break;\n                        case \"\\u0002\":\n                        case \"\\ufffe\":\n                            {\n                                var characterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                                top_1.push(characterBounds.Top);\n                                bottom.push(characterBounds.Bottom);\n                                left.push(characterBounds.Left);\n                                right.push(characterBounds.Right);\n                                minTop = Math.min.apply(Math, top_1);\n                                maxBottom = Math.max.apply(Math, bottom);\n                                minLeft = Math.min.apply(Math, left);\n                                maxRight = Math.max.apply(Math, right);\n                                var newWordBounds_2 = void 0;\n                                if (wordStart == false) {\n                                    newWordBounds_2 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                                    wordBounds.push(newWordBounds_2);\n                                }\n                                if (character == \"\\u0002\") {\n                                    wordBounds.push(characterBounds);\n                                }\n                                this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n                                wordBounds = [];\n                                wordStart = true;\n                                isPreviousSpace = false;\n                                word = \"\";\n                                top_1 = [];\n                                left = [];\n                                bottom = [];\n                                right = [];\n                                minTop = 0;\n                                maxBottom = 0;\n                                minLeft = 0;\n                                maxRight = 0;\n                            }\n                            break;\n                        default:\n                            if (Width == 0 || Height == 0) {\n                                isZeroWidthSpace = true;\n                                minTop = Math.min.apply(Math, top_1);\n                                maxBottom = Math.max.apply(Math, bottom);\n                                minLeft = Math.min.apply(Math, left);\n                                maxRight = Math.max.apply(Math, right);\n                                var newWordBounds_3 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                                wordBounds.push(newWordBounds_3);\n                                var characterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                                wordMinTop = characterBounds.Top;\n                                wordMaxBottom = characterBounds.Bottom;\n                                wordMinLeft = characterBounds.Left;\n                                wordMaxRight = characterBounds.Right;\n                                word = character;\n                                wordRotation = wordBounds[wordBounds.length - 1].Rotation;\n                                newWordBounds_3 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                                wordBounds.push(newWordBounds_3);\n                                wordMinTop = 0;\n                                wordMaxBottom = 0;\n                                wordMinLeft = 0;\n                                wordMaxRight = 0;\n                                word = \"\";\n                                wordRotation = 0;\n                                wordStart = true;\n                                isPreviousSpace = true;\n                            }\n                            else {\n                                if (wordStart == true) {\n                                    wordMinTop = Y;\n                                    wordMaxBottom = Y + Height;\n                                    wordMinLeft = X;\n                                    wordMaxRight = X + Width;\n                                }\n                                var characterBounds = new RectAngle(X, Y, Width, Height, character, rotationAngle);\n                                if (character != \" \") {\n                                    if (isPreviousSpace && wordBounds.length > 0 && (rotationAngle == wordBounds[0].Rotation)) {\n                                        if ((rotationAngle == 180 || rotationAngle == 0) && (Math.abs(characterBounds.Y - wordBounds[0].Y) > maximumSpaceForNewLine)) {\n                                            startNewLine = true;\n                                        }\n                                        if ((rotationAngle == 270 || rotationAngle == 90) && (Math.abs(characterBounds.X - wordBounds[0].X) > maximumSpaceForNewLine)) {\n                                            startNewLine = true;\n                                        }\n                                    }\n                                    if ((isZeroWidthSpace && wordBounds.length >= 1 && wordBounds[wordBounds.length - 1].Rotation != characterBounds.Rotation) || startNewLine) {\n                                        isZeroWidthSpace = false;\n                                        startNewLine = false;\n                                        minTop = Math.min.apply(Math, top_1);\n                                        maxBottom = Math.max.apply(Math, bottom);\n                                        minLeft = Math.min.apply(Math, left);\n                                        maxRight = Math.max.apply(Math, right);\n                                        var newWordBounds_4 = void 0;\n                                        if (wordStart == false) {\n                                            newWordBounds_4 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                                            wordBounds.push(newWordBounds_4);\n                                        }\n                                        this.textBoundsCalculation(wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight);\n                                        wordBounds = [];\n                                        wordStart = true;\n                                        word = \"\";\n                                        top_1 = [];\n                                        left = [];\n                                        bottom = [];\n                                        right = [];\n                                        minTop = 0;\n                                        maxBottom = 0;\n                                        minLeft = 0;\n                                        maxRight = 0;\n                                    }\n                                    top_1.push(characterBounds.Top);\n                                    bottom.push(characterBounds.Bottom);\n                                    left.push(characterBounds.Left);\n                                    right.push(characterBounds.Right);\n                                    wordMinTop = Math.min(wordMinTop, characterBounds.Top);\n                                    wordMaxBottom = Math.max(wordMaxBottom, characterBounds.Bottom);\n                                    wordMinLeft = Math.min(wordMinLeft, characterBounds.Left);\n                                    wordMaxRight = Math.max(wordMaxRight, characterBounds.Right);\n                                    word += character;\n                                    wordRotation = characterBounds.Rotation;\n                                    wordStart = false;\n                                    isPreviousSpace = false;\n                                }\n                                else {\n                                    var newWordBounds_5 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                                    wordBounds.push(newWordBounds_5);\n                                    wordMinTop = characterBounds.Top;\n                                    wordMaxBottom = characterBounds.Bottom;\n                                    wordMinLeft = characterBounds.Left;\n                                    wordMaxRight = characterBounds.Right;\n                                    word = character;\n                                    wordRotation = characterBounds.Rotation;\n                                    newWordBounds_5 = new RectAngle(wordMinLeft, wordMinTop, wordMaxRight - wordMinLeft, wordMaxBottom - wordMinTop, word, wordRotation);\n                                    wordBounds.push(newWordBounds_5);\n                                    wordMinTop = 0;\n                                    wordMaxBottom = 0;\n                                    wordMinLeft = 0;\n                                    wordMaxRight = 0;\n                                    word = \"\";\n                                    wordRotation = 0;\n                                    wordStart = true;\n                                    isPreviousSpace = true;\n                                }\n                            }\n                            break;\n                    }\n                }\n                FPDF.CloseTextPage(textPage);\n                this.Rotation = pageRotation;\n                this.PageText = pageText;\n            }\n        };\n        Processor.prototype.pointerToPixelConverter = function (pointerValue) {\n            return (pointerValue * (96 / 72));\n        };\n        Processor.prototype.textBoundsCalculation = function (wordBounds, minTop, maxBottom, maxRight, minLeft, pageRotation, pageWidth, pageHeight) {\n            var newWordBounds;\n            var hasInBetweenRotation = false;\n            var inBetweenRotatedText = \"\";\n            var maximumSpaceBetweenWords = 30;\n            var sentence = wordBounds.reduce(function (word, rect) { return word + rect.Text; }, '');\n            var isRTLText = this.checkIsRtlText(sentence);\n            for (var count = 0; count < wordBounds.length; count++) {\n                var textRotation = wordBounds[count].Rotation;\n                if (textRotation == 0 || textRotation == 180) {\n                    if (hasInBetweenRotation) {\n                        this.TextBounds.push(newWordBounds);\n                        this.TextContent.push(inBetweenRotatedText);\n                        inBetweenRotatedText = \"\";\n                    }\n                    hasInBetweenRotation = false;\n                    if (pageRotation == 0) {\n                        newWordBounds = new RectAngle(wordBounds[count].Left, minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 1) {\n                        newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count].Left, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 2) {\n                        newWordBounds = new RectAngle(pageWidth - wordBounds[count].Left, pageHeight - minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 3) {\n                        newWordBounds = new RectAngle(minTop, pageHeight - wordBounds[count].Left, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                }\n                else if (textRotation == 90 || textRotation == 270) {\n                    if (hasInBetweenRotation) {\n                        this.TextBounds.push(newWordBounds);\n                        this.TextContent.push(inBetweenRotatedText);\n                        inBetweenRotatedText = \"\";\n                    }\n                    hasInBetweenRotation = false;\n                    if (pageRotation == 0) {\n                        newWordBounds = new RectAngle(minLeft, wordBounds[count].Top, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 1) {\n                        newWordBounds = new RectAngle(pageWidth - wordBounds[count].Top, minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 2) {\n                        newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - wordBounds[count].Top, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 3) {\n                        newWordBounds = new RectAngle(wordBounds[count].Top, pageHeight - minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                    }\n                }\n                else if (!hasInBetweenRotation) {\n                    hasInBetweenRotation = true;\n                    inBetweenRotatedText += wordBounds[count].Text;\n                    if (pageRotation == 0) {\n                        newWordBounds = new RectAngle(wordBounds[count].Left, minTop, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 1) {\n                        newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count].Left, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 2) {\n                        newWordBounds = new RectAngle(pageWidth - wordBounds[count].Left, pageHeight - minTop, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                    else if (pageRotation == 3) {\n                        newWordBounds = new RectAngle(minTop, pageHeight - wordBounds[count].Left, maxRight - minLeft, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                    }\n                }\n                else {\n                    inBetweenRotatedText += wordBounds[count].Text;\n                }\n                if (!hasInBetweenRotation && wordBounds[count].Text === \" \" && count !== 0 && count + 1 <= wordBounds.length) {\n                    if (!isRTLText) {\n                        if (count + 1 != wordBounds.length) {\n                            var spaceWidth = 0;\n                            switch (textRotation) {\n                                case 0:\n                                    spaceWidth = wordBounds[count + 1].Left - (wordBounds[count - 1].Left + wordBounds[count - 1].Width);\n                                    if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                                        spaceWidth = 0;\n                                    }\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(wordBounds[count - 1].Left + wordBounds[count - 1].Width, minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count - 1].Left + wordBounds[count - 1].Width, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), pageHeight - minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                                case 90:\n                                    spaceWidth = wordBounds[count + 1].Top - (wordBounds[count - 1].Top + wordBounds[count - 1].Height);\n                                    if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                                        spaceWidth = 0;\n                                    }\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(minLeft, wordBounds[count - 1].Top + wordBounds[count - 1].Height, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle((wordBounds[count - 1].Top + wordBounds[count - 1].Height), pageHeight - minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                                case 180:\n                                    spaceWidth = wordBounds[count - 1].Left - (wordBounds[count + 1].Left + wordBounds[count + 1].Width);\n                                    if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                                        spaceWidth = 0;\n                                    }\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(wordBounds[count + 1].Left + wordBounds[count + 1].Width, minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count + 1].Left + wordBounds[count + 1].Width, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count + 1].Left + wordBounds[count + 1].Width), pageHeight - minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count + 1].Left + wordBounds[count + 1].Width), spaceWidth, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                                case 270:\n                                    spaceWidth = wordBounds[count - 1].Top - (wordBounds[count + 1].Top + wordBounds[count + 1].Height);\n                                    if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                                        spaceWidth = 0;\n                                    }\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(minLeft, wordBounds[count + 1].Top + wordBounds[count + 1].Height, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count + 1].Top + wordBounds[count + 1].Height), minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - (wordBounds[count + 1].Top + wordBounds[count + 1].Height), maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle((wordBounds[count + 1].Top + wordBounds[count + 1].Height), pageHeight - minLeft, maxRight - minLeft, spaceWidth, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                            }\n                        }\n                        else {\n                            switch (textRotation) {\n                                case 90:\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(minLeft, wordBounds[count - 1].Top + wordBounds[count - 1].Height, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - (wordBounds[count - 1].Top + wordBounds[count - 1].Height), maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle((wordBounds[count - 1].Top + wordBounds[count - 1].Height), pageHeight - minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                                case 270:\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(minLeft, wordBounds[count - 1].Top - wordBounds[count].Height, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Top - wordBounds[count].Height), minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - minLeft, pageHeight - wordBounds[count - 1].Top - wordBounds[count].Height, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle((wordBounds[count - 1].Top - wordBounds[count].Height), pageHeight - minLeft, maxRight - minLeft, wordBounds[count].Height, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                                case 180:\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(wordBounds[count - 1].Left - wordBounds[count].Width, minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle((pageWidth - minTop), wordBounds[count - 1].Left - wordBounds[count].Width, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Left - wordBounds[count].Width), pageHeight - minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count - 1].Left - wordBounds[count].Width), wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                                case 0:\n                                    if (pageRotation == 0) {\n                                        newWordBounds = new RectAngle(wordBounds[count - 1].Left + wordBounds[count - 1].Width, minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 1) {\n                                        newWordBounds = new RectAngle(pageWidth - minTop, wordBounds[count - 1].Left + wordBounds[count - 1].Width, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 2) {\n                                        newWordBounds = new RectAngle(pageWidth - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), pageHeight - minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    else if (pageRotation == 3) {\n                                        newWordBounds = new RectAngle(minTop, pageHeight - (wordBounds[count - 1].Left + wordBounds[count - 1].Width), wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, textRotation);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                    else if (isRTLText && count + 1 != wordBounds.length) {\n                        var spaceWidth = (wordBounds[count - 1].Left - (wordBounds[count + 1].Left + wordBounds[count + 1].Width));\n                        if (maximumSpaceBetweenWords < spaceWidth || spaceWidth < 0) {\n                            spaceWidth = 0;\n                        }\n                        newWordBounds = new RectAngle((wordBounds[count + 1].Left + wordBounds[count + 1].Width), minTop, spaceWidth, maxBottom - minTop, wordBounds[count].Text, wordBounds[count].Rotation);\n                    }\n                    else if (isRTLText) {\n                        newWordBounds = new RectAngle((wordBounds[count - 1].Left - wordBounds[count].Width), minTop, wordBounds[count].Width, maxBottom - minTop, wordBounds[count].Text, wordBounds[count].Rotation);\n                    }\n                }\n                if (!hasInBetweenRotation) {\n                    this.TextBounds.push(newWordBounds);\n                    this.TextContent.push(wordBounds[count].Text);\n                }\n            }\n            if (hasInBetweenRotation) {\n                this.TextBounds.push(newWordBounds);\n                this.TextContent.push(inBetweenRotatedText);\n            }\n        };\n        Processor.prototype.checkIsRtlText = function (text) {\n            // eslint-disable-next-line max-len\n            var ltrChars = 'A-Za-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02B8\\\\u0300-\\\\u0590\\\\u0800-\\\\u1FFF' + '\\\\u2C00-\\\\uFB1C\\\\uFDFE-\\\\uFE6F\\\\uFEFD-\\\\uFFFF';\n            var rtlChars = '\\\\u0591-\\\\u07FF\\\\uFB1D-\\\\uFDFD\\\\uFE70-\\\\uFEFC';\n            // eslint-disable-next-line\n            var rtlDirCheck = new RegExp('^[^' + ltrChars + ']*[' + rtlChars + ']');\n            return rtlDirCheck.test(text);\n        };\n        Processor.prototype.getPageRender = function (n, w, h, isTextNeed) {\n            if (n === void 0) { n = 0; }\n            var pageRenderPtr = this.getRender(n, w, h, isTextNeed);\n            var pageRenderData = [];\n            pageRenderData = PDFiumModule.HEAPU8.slice(pageRenderPtr, pageRenderPtr + (w * h * 4));\n            PDFiumModule.asm.free(pageRenderPtr);\n            return pageRenderData;\n        };\n        Processor.prototype.render = function (n, message, zoomFactor, isTextNeed, printScaleFactor, printDevicePixelRatio, textDetailsId) {\n            if (n === void 0) { n = 0; }\n            var _a = this.getPageSize(n), w = _a[0], h = _a[1];\n            var scaleFactor = 1.5;\n            var thumbnailWidth = 99.7;\n            var thumbnailHeight = 141;\n            if (message === 'thumbnail') {\n                var newWidth = Math.round(thumbnailWidth * scaleFactor);\n                var newHeight = Math.round(thumbnailHeight * scaleFactor);\n                var data = this.getPageRender(n, newWidth, newHeight, false);\n                return { value: data, width: newWidth, height: newHeight, pageIndex: n, message: 'renderThumbnail' };\n            }\n            else if (message === 'print') {\n                //An A0 piece of paper measures 33.1 × 46.8 inches, with 46.8 inches being the greater dimension. The pixel value of 46.8 inches is 4493px. If the document size is too large, we may not be able to display the image. Therefore, we should consider the maximum size of A0 paper if the page size is greater than 4493 pixels.\n                var maxPageSize = 4493;\n                var scaleFactor_1 = 1.5;\n                var whichIsBigger = (w > h) ? 'Width' : 'Height';\n                var maxWidth = w;\n                var maxHeight = h;\n                if (whichIsBigger === 'Width') {\n                    maxWidth = (w > maxPageSize) ? maxPageSize : w;\n                    if (maxWidth === maxPageSize) {\n                        maxHeight = h / (w / maxPageSize);\n                    }\n                }\n                else {\n                    maxHeight = (h > maxPageSize) ? maxPageSize : h;\n                    if (maxHeight === maxPageSize) {\n                        maxWidth = w / (h / maxPageSize);\n                    }\n                }\n                var newWidth = Math.round(maxWidth * printScaleFactor * scaleFactor_1);\n                var newHeight = Math.round(maxHeight * printScaleFactor * scaleFactor_1);\n                var data = this.getPageRender(n, newWidth, newHeight, false);\n                return { value: data, width: newWidth, height: newHeight, pageIndex: n, pageWidth: w, pageHeight: h, message: 'printImage', printDevicePixelRatio: printDevicePixelRatio };\n            }\n            else {\n                var newWidth = Math.round(w * scaleFactor * zoomFactor);\n                var newHeight = Math.round(h * scaleFactor * zoomFactor);\n                // Reduce the zoom factor if the new image size exceeds the memory limit\n                while (((newWidth * newHeight * 4) * 2) >= 2147483648) {\n                    zoomFactor = zoomFactor - 0.1;\n                    newWidth = Math.round(this.pointerToPixelConverter(w) * zoomFactor);\n                    newHeight = Math.round(this.pointerToPixelConverter(h) * zoomFactor);\n                }\n                var data = this.getPageRender(n, newWidth, newHeight, isTextNeed);\n                return { value: data, width: newWidth, height: newHeight, pageWidth: w, pageHeight: h, pageIndex: n, message: 'imageRendered', textBounds: this.TextBounds, textContent: this.TextContent, rotation: this.Rotation, pageText: this.PageText, characterBounds: this.CharacterBounds, zoomFactor: zoomFactor, isTextNeed: isTextNeed, textDetailsId: textDetailsId };\n            }\n        };\n        Processor.prototype.renderTileImage = function (n, tileX, tileY, xCount, yCount, zoomFactor, isTextNeed, textDetailsId) {\n            if (n === void 0) { n = 0; }\n            var _a = this.getPageSize(n), w = _a[0], h = _a[1];\n            var newWidth = Math.round(w * 1.5 * zoomFactor);\n            var newHeight = Math.round(h * 1.5 * zoomFactor);\n            var w1 = Math.round(newWidth / xCount);\n            var h1 = Math.round(newHeight / yCount);\n            var flag = FPDF.REVERSE_BYTE_ORDER;\n            var heap = PDFiumModule.asm.malloc(w1 * h1 * 4);\n            PDFiumModule.HEAPU8.fill(0, heap, heap + (w1 * h1 * 4));\n            var bmap = FPDF.Bitmap_CreateEx(w1, h1, 4, heap, w1 * 4);\n            var page = FPDF.LoadPage(this.wasmData.wasm, n);\n            FPDF.Bitmap_FillRect(bmap, 0, 0, w1, h1, 0xFFFFFFFF);\n            FPDF.RenderPageBitmap(bmap, page, -tileX * w1, -tileY * h1, newWidth, newHeight, 0, flag);\n            FPDF.Bitmap_Destroy(bmap);\n            this.textExtraction(page, n, isTextNeed);\n            FPDF.ClosePage(page);\n            var pageRenderPtr = heap;\n            var data = [];\n            data = PDFiumModule.HEAPU8.slice(pageRenderPtr, pageRenderPtr + (w1 * h1 * 4));\n            PDFiumModule.asm.free(pageRenderPtr);\n            if (tileX === 0 && tileY === 0) {\n                return {\n                    value: data,\n                    w: w1,\n                    h: h1,\n                    noTileX: xCount,\n                    noTileY: yCount,\n                    x: tileX,\n                    y: tileY,\n                    pageIndex: n,\n                    message: 'renderTileImage',\n                    textBounds: this.TextBounds,\n                    textContent: this.TextContent,\n                    rotation: this.Rotation,\n                    pageText: this.PageText,\n                    characterBounds: this.CharacterBounds,\n                    textDetailsId: textDetailsId,\n                    isTextNeed: isTextNeed,\n                    zoomFactor: zoomFactor\n                };\n            }\n            else {\n                return {\n                    value: data,\n                    w: w1,\n                    h: h1,\n                    noTileX: xCount,\n                    noTileY: yCount,\n                    x: tileX,\n                    y: tileY,\n                    pageIndex: n,\n                    message: 'renderTileImage',\n                    textDetailsId: textDetailsId,\n                    isTextNeed: isTextNeed,\n                    zoomFactor: zoomFactor\n                };\n            }\n        };\n        ;\n        Processor.prototype.getLastError = function () {\n            var lastError = FPDF.GetLastError();\n            switch (lastError) {\n                case FPDF.LAST_ERROR.SUCCESS:\n                    return \"success\";\n                case FPDF.LAST_ERROR.UNKNOWN:\n                    return \"unknown error\";\n                case FPDF.LAST_ERROR.FILE:\n                    return \"file not found or could not be opened\";\n                case FPDF.LAST_ERROR.FORMAT:\n                    return \"file not in PDF format or corrupted\";\n                case FPDF.LAST_ERROR.PASSWORD:\n                    return \"password required or incorrect password\";\n                case FPDF.LAST_ERROR.SECURITY:\n                    return \"unsupported security scheme\";\n                case FPDF.LAST_ERROR.PAGE:\n                    return \"page not found or content error\";\n                default:\n                    return \"unknown error\";\n            }\n        };\n        return Processor;\n    }());\n    var DocumentInfo = /** @class */ (function () {\n        function DocumentInfo(wasmData) {\n            this.pages = [];\n            this.processor = new Processor(wasmData);\n        }\n        DocumentInfo.prototype.setPages = function (pagesCount) {\n            this.pages = Array(pagesCount).fill(null);\n        };\n        DocumentInfo.prototype.createAllPages = function () {\n            for (var i = 0; i < this.pages.length; i++) {\n                this.pages[parseInt(i.toString(), 10)] = new Page(parseInt(i.toString(), 10), this.processor);\n            }\n        };\n        DocumentInfo.prototype.getPage = function (index) {\n            // eslint-disable-next-line\n            var page = this.pages[index];\n            if (!page) {\n                page = new Page(index);\n                // eslint-disable-next-line\n                this.pages[index] = page;\n            }\n            return page;\n        };\n        return DocumentInfo;\n    }());\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}