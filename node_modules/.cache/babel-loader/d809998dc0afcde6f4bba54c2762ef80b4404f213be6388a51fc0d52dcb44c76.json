{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */function () {\n  function PdfAnnotation() {\n    this._isImported = false;\n    this._isLoaded = false;\n    this._setAppearance = false;\n    this._isExport = false;\n    this._opacity = 1;\n    this._isAllRotation = true;\n    this._flatten = false;\n    this._hasData = false;\n    this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n    this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n    this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n    this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n  }\n  Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n    /**\n     * Gets the author of the annotation.\n     *\n     * @returns {string} Author.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the author of the annotation.\n     * let author: string = annotation.author;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n        var author = this._dictionary.get('Author');\n        if (author) {\n          this._author = author;\n        }\n      }\n      if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n        var author = this._dictionary.get('T');\n        if (author) {\n          this._author = author;\n        }\n      }\n      return this._author;\n    },\n    /**\n     * Sets the author of the annotation.\n     *\n     * @param {string} value Author.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the author of the annotation.\n     * annotation.author = ‘Syncfusion’;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n        var hasKey = false;\n        if (this._dictionary.has('T')) {\n          this._dictionary.update('T', value);\n          this._author = value;\n          hasKey = true;\n        }\n        if (this._dictionary.has('Author')) {\n          this._dictionary.update('Author', value);\n          this._author = value;\n          hasKey = true;\n        }\n        if (!hasKey) {\n          this._dictionary.update('T', value);\n          this._author = value;\n        }\n      }\n      if (!this._isLoaded && typeof value === 'string') {\n        this._dictionary.update('T', value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n    /**\n     * Gets the border of the annotation.\n     *\n     * @returns {PdfAnnotationBorder} Annotation border.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the border of the annotation.\n     * let border: PdfAnnotationBorder = annotation.border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._border === 'undefined') {\n        var value = new PdfAnnotationBorder();\n        value._dictionary = this._dictionary;\n        if (this._dictionary.has('Border')) {\n          var border = this._dictionary.getArray('Border');\n          if (border && border.length >= 3) {\n            value._hRadius = border[0];\n            value._vRadius = border[1];\n            value._width = border[2];\n          }\n        }\n        if (this._dictionary.has('BS')) {\n          var border = this._dictionary.get('BS');\n          if (border) {\n            if (border.has('W')) {\n              var width = border.get('W');\n              if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                value._width = width;\n              }\n            }\n            if (border.has('S')) {\n              var style = border.get('S');\n              if (style) {\n                switch (style.name) {\n                  case 'D':\n                    value._style = PdfBorderStyle.dashed;\n                    break;\n                  case 'B':\n                    value._style = PdfBorderStyle.beveled;\n                    break;\n                  case 'I':\n                    value._style = PdfBorderStyle.inset;\n                    break;\n                  case 'U':\n                    value._style = PdfBorderStyle.underline;\n                    break;\n                  default:\n                    value._style = PdfBorderStyle.solid;\n                    break;\n                }\n              }\n            }\n            if (border.has('D')) {\n              var dash = border.getArray('D');\n              if (dash) {\n                value._dash = dash;\n              }\n            }\n          }\n        }\n        this._border = value;\n      }\n      return this._border;\n    },\n    /**\n     * Sets the border of the annotation.\n     *\n     * @param {PdfAnnotationBorder} value Border.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n     * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n     * //Sets the width of the annotation border.\n     * border.width = 10;\n     * //Sets the style of the annotation border.\n     * border.style = PdfBorderStyle.dashed;\n     * //Sets the dash pattern of the annotation border.\n     * border.dash = [1, 2, 1];\n     * // Sets the border to the PDF annotation\n     * annotation.border = border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      var current = this.border;\n      var width;\n      if (!this._isLoaded || typeof value.width !== 'undefined' && current.width !== value.width) {\n        width = value.width;\n      }\n      var hRadius;\n      if (!this._isLoaded || typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius) {\n        hRadius = value.hRadius;\n      }\n      var vRadius;\n      if (!this._isLoaded || typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius) {\n        vRadius = value.vRadius;\n      }\n      var style;\n      if (!this._isLoaded || typeof value.style !== 'undefined' && current.style !== value.style) {\n        style = value.style;\n      }\n      var dash;\n      if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n        dash = value.dash;\n      }\n      if (!this._isWidget && (this._dictionary.has('Border') || width || vRadius || hRadius)) {\n        this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n        this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n        this._border._width = typeof width !== 'undefined' ? width : current.width;\n        this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n      }\n      if (this._dictionary.has('BS') || width || style || dash) {\n        this._border._width = typeof width !== 'undefined' ? width : current.width;\n        this._border._style = typeof style !== 'undefined' ? style : current.style;\n        this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n        var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n        bs.update('Type', _PdfName.get('Border'));\n        bs.update('W', this._border.width);\n        bs.update('S', _mapBorderStyle(this._border.style));\n        if (typeof this._border.dash !== 'undefined') {\n          bs.update('D', this._border.dash);\n        }\n        this._dictionary.update('BS', bs);\n        this._dictionary._updated = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n    /**\n     * Gets the flags of the annotation.\n     *\n     * @returns {PdfAnnotationFlag} Annotation flag.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the flags of the annotation.\n     * let flag: PdfAnnotationFlag = annotation.flags;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._annotFlags === 'undefined') {\n        this._annotFlags = PdfAnnotationFlag.default;\n        if (this._dictionary.has('F')) {\n          this._annotFlags = this._dictionary.get('F');\n        }\n      }\n      return this._annotFlags;\n    },\n    /**\n     * Sets the flags of the annotation.\n     *\n     * @param {PdfAnnotationFlag} value flag value.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the flags of the annotation.\n     * annotation.flags = PdfAnnotationFlag.print;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value !== this._annotFlags) {\n        this._annotFlags = value;\n        this._dictionary.update('F', value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n    /**\n     * Gets the fore color of the annotation.\n     *\n     * @returns {number[]} R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the color of the annotation.\n     * let color: number[] = annotation.color;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n        this._color = _parseColor(this._dictionary.getArray('C'));\n      }\n      return this._color;\n    },\n    /**\n     * Sets the fore color of the annotation.\n     *\n     * @param {number[]} value R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the color of the annotation.\n     * annotation.color = [255, 0, 0];\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value.length === 3) {\n        var extColor = this.color;\n        if (!this._isLoaded || typeof extColor === 'undefined' || extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2]) {\n          this._color = value;\n          this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)), Number.parseFloat((value[1] / 255).toFixed(7)), Number.parseFloat((value[2] / 255).toFixed(7))]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n    /**\n     * Gets the inner color of the annotation.\n     *\n     * @returns {number[]} R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the inner color of the annotation.\n     * let innerColor: number[] = annotation.innerColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n        this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n      }\n      return this._innerColor;\n    },\n    /**\n     * Sets the inner color of the annotation.\n     *\n     * @param {number[]} value R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the inner color of the annotation.\n     * annotation.innerColor = [255, 0, 0];\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value.length === 3) {\n        var extColor = this.innerColor;\n        if (!this._isLoaded || typeof extColor === 'undefined' || extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2]) {\n          this._innerColor = value;\n          this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)), Number.parseFloat((value[1] / 255).toFixed(7)), Number.parseFloat((value[2] / 255).toFixed(7))]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n    /**\n     * Gets the creation date of the annotation.\n     *\n     * @returns {Date} Creation date.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the creation date of the annotation.\n     * let creationDate: Date = annotation.creationDate;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n        var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n        if (value !== null && typeof value === 'string') {\n          this._creationDate = this._stringToDate(value);\n        }\n      }\n      return this._creationDate;\n    },\n    /**\n     * Sets the creation date of the annotation.\n     *\n     * @param {Date} value Creation date.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Set the creation date of the annotation.\n     * annotation.creationDate = new Date();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._creationDate = value;\n      this._dictionary.update('CreationDate', this._dateToString(value));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n    /**\n     * Gets the modification date of the annotation.\n     *\n     * @returns {Date} Modified date.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the modified date of the annotation.\n     * let modifiedDate: Date = annotation.modifiedDate;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._modifiedDate === 'undefined' || this._modifiedDate === null) {\n        var value = void 0; // eslint-disable-line\n        if (this._dictionary.has('ModDate')) {\n          value = this._dictionary.get('ModDate');\n        } else if (this._dictionary.has('M')) {\n          value = this._dictionary.get('M');\n        }\n        if (value !== null && typeof value === 'string') {\n          this._modifiedDate = this._stringToDate(value);\n        }\n      }\n      return this._modifiedDate;\n    },\n    /**\n     * Sets the modification date of the annotation.\n     *\n     * @param {Date} value Modified date.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Set the modified date of the annotation.\n     * annotation.modifiedDate = new Date();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._modifiedDate = value;\n      this._dictionary.update('M', this._dateToString(value));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n    /**\n     * Gets the bounds of the annotation.\n     *\n     * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the bounds of the annotation.\n     * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoaded) {\n        this._bounds = _calculateBounds(this._dictionary, this._page);\n      }\n      return this._bounds;\n    },\n    /**\n     * Sets the bounds of the annotation.\n     *\n     * @param {{x: number, y: number, width: number, height: number}} value bounds.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the bounds of the annotation.\n     * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value) {\n        this._isBounds = true;\n        if (this._isLoaded) {\n          if (value.x !== this.bounds.x || value.y !== this.bounds.y || value.width !== this.bounds.width || value.height !== this.bounds.height) {\n            var size = this._page.size;\n            if (size) {\n              var y = size[1] - (value.y + value.height);\n              var height = y + value.height;\n              this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n              this._bounds = value;\n            }\n          }\n        } else {\n          this._bounds = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n    /**\n     * Gets the caption of the annotation.\n     *\n     * @returns {PdfAnnotationCaption} Annotation caption.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the caption of the annotation.\n     * let caption: PdfAnnotationCaption = annotation.caption;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._caption === 'undefined') {\n        var value = new PdfAnnotationCaption();\n        value._dictionary = this._dictionary;\n        if (this._dictionary.has('Cap')) {\n          value._cap = this._dictionary.get('Cap');\n        }\n        if (this._dictionary.has('CP')) {\n          var capType = this._dictionary.get('CP');\n          if (capType) {\n            value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n          }\n        }\n        if (this._dictionary.has('CO')) {\n          value._offset = this._dictionary.getArray('CO');\n        }\n        this._caption = value;\n      }\n      return this._caption;\n    },\n    /**\n     * Sets the caption of the annotation.\n     *\n     * @param {PdfAnnotationCaption} value Annottion caption.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Create and set annotation caption values\n     * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      var current = this.caption;\n      if (value) {\n        if (!this._isLoaded || value.cap !== current.cap) {\n          this._caption.cap = value.cap;\n        }\n        if (!this._isLoaded || value.type !== current.type) {\n          this._caption.type = value.type;\n        }\n        if (!this._isLoaded || value.offset !== current.offset) {\n          this._caption.offset = value.offset;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n    /**\n     * Gets the opacity of the annotation.\n     *\n     * @returns {number} Opacity in between 0 t0 1.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the opacity of the annotation.\n     * let opacity: number = annotation.opacity;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('CA')) {\n        var opacity = this._dictionary.get('CA');\n        if (typeof opacity !== 'undefined') {\n          this._opacity = opacity;\n        }\n      }\n      return this._opacity;\n    },\n    /**\n     * Sets the opacity of the annotation.\n     *\n     * @param {number} value opacity in between 0 t0 1.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the opacity of the annotation.\n     * annotation.opacity = 0.5;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n        if (value >= 0 && value <= 1) {\n          this._dictionary.update('CA', value);\n          this._opacity = value;\n        } else if (value < 0) {\n          this._dictionary.update('CA', 0);\n        } else {\n          this._dictionary.update('CA', 1);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n    /**\n     * Gets the subject of the annotation.\n     *\n     * @returns {string} Subject.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the subject of the annotation.\n     * let subject: string = annotation.subject;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._subject === 'undefined') {\n        this._subject = this._dictionary.get('Subject', 'Subj');\n      }\n      return this._subject;\n    },\n    /**\n     * Sets the subject of the annotation.\n     *\n     * @param {string} value Subject.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the subject of the annotation.\n     * annotation.subject = 'Line Annotation';\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value === 'string') {\n        var hasKey = false;\n        if (this._dictionary.has('Subj')) {\n          this._dictionary.update('Subj', value);\n          this._subject = value;\n          hasKey = true;\n        }\n        if (!hasKey || this._dictionary.has('Subject')) {\n          this._dictionary.update('Subject', value);\n          this._subject = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n    /**\n     * Gets the name of the annotation.\n     *\n     * @returns {string} Name.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the name of the annotation.\n     * let name: string = annotation.name;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n        this._name = this._dictionary.get('NM');\n      }\n      return this._name;\n    },\n    /**\n     * Sets the name of the annotation.\n     *\n     * @param {string} value Name.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the name of the annotation.\n     * annotation.name = 'LineAnnotation';\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value === 'string') {\n        this._dictionary.update('NM', value);\n        this._name = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n    /**\n     * Gets the text of the annotation.\n     *\n     * @returns {string} Text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the text of the annotation.\n     * let text: string = annotation.text;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n        this._text = this._dictionary.get('Contents');\n      }\n      return this._text;\n    },\n    /**\n     * Sets the text of the annotation.\n     *\n     * @param {string} value Text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the text of the annotation.\n     * annotation.text = ‘LineAnnotation’;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value === 'string') {\n        this._text = this._dictionary.get('Contents');\n        if (value !== this._text) {\n          this._dictionary.update('Contents', value);\n          this._text = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n    /**\n     * Gets the rotation of the annotation.\n     *\n     * @returns {PdfRotationAngle} Rotation angle.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the rotation angle of the annotation.\n     * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._rotate === 'undefined' && this._dictionary.has('Rotate')) {\n        this._rotate = this._dictionary.get('Rotate') / 90;\n      }\n      if (this._rotate === null || typeof this._rotate === 'undefined') {\n        this._rotate = PdfRotationAngle.angle0;\n      }\n      return this._rotate;\n    },\n    /**\n     * Sets the rotation of the annotation.\n     *\n     * @param {PdfRotationAngle} value rotation angle.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the rotation angle of the annotation.\n     * annotation.rotationAngle = PdfRotationAngle.angle180;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      var prevRotate = this.rotationAngle;\n      if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n        value = (value + prevRotate) % 4;\n      }\n      this._dictionary.update('Rotate', value * 90);\n      this._rotate = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n    /**\n     * Gets the rotation angle of the annotation (Read only).\n     *\n     * @returns {number} Rotation angle.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * //Get the rotation angle of the annotation.\n     * let rotate: number = annotation.rotate;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      var angle = this._getRotationAngle();\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      if (angle >= 360) {\n        angle = 360 - angle;\n      }\n      return angle;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n    /**\n     * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n     *\n     * @returns {boolean} Flatten Popup.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n     * let flattenPopups: boolean = annotation.flattenPopups;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._isFlattenPopups;\n    },\n    /**\n     * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n     *\n     * @param {boolean} value Flatten Popup.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n     * annotation.flattenPopups = false;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._isFlattenPopups = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n    /**\n     * Gets the boolean flag indicating whether the annotation have been flattened or not.\n     *\n     * @returns {boolean} Flatten.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n     * let flatten: boolean = annotation.flatten;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._flatten;\n    },\n    /**\n     * Sets the boolean flag indicating whether the annotation have been flattened or not.\n     *\n     * @param {boolean} value Flatten.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n     * annotation.flatten = true;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._flatten = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n    get: function () {\n      return this._dictionary.has('F');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n    get: function () {\n      if (typeof this._ratio === 'undefined') {\n        this._ratio = Math.PI / 180;\n      }\n      return this._ratio;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Set the boolean flag to create a new appearance stream for annotations.\n   *\n   * @param {boolean} value Set appearance.\n   * @returns {void} Nothing.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Set the boolean flag to create a new appearance stream for annotations.\n   * document.getPage(0).annotations.at(0).setAppearance(true);\n   * // Save the document\n   * document.save('output.pdf');\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfAnnotation.prototype.setAppearance = function (value) {\n    this._setAppearance = value;\n    if (value) {\n      this._dictionary._updated = true;\n    }\n  };\n  /**\n   * Gets the values associated with the specified key.\n   *\n   * @param {string} name Key.\n   * @returns {string[]} Values associated with the key.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Gets the values associated with the key 'Author'.\n   * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n   * // Save the document\n   * document.save('output.pdf');\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfAnnotation.prototype.getValues = function (name) {\n    var values = [];\n    if (this._dictionary.has(name)) {\n      var value = this._dictionary.get(name); // eslint-disable-line\n      if (Array.isArray(value)) {\n        value = this._dictionary.getArray(name);\n        for (var i = 0; i < value.length; i++) {\n          var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n          if (element instanceof _PdfName) {\n            values.push(element.name);\n          } else if (typeof element === 'string') {\n            values.push(element);\n          } else if (typeof element === 'number') {\n            values.push(element.toString());\n          }\n        }\n      } else if (value instanceof _PdfName) {\n        values.push(value.name);\n      } else if (typeof value === 'string') {\n        values.push(value);\n      } else {\n        throw new Error('PdfException: ' + name + ' is not found');\n      }\n    } else {\n      throw new Error('PdfException: ' + name + ' is not found');\n    }\n    return values;\n  };\n  /**\n   * Sets the values associated with the specified key.\n   *\n   * @param {string} name Key.\n   * @param {string} value Value associated with the key..\n   * @returns {void} Nothing.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Access the annotation at index 0\n   * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n   * // Set Unknown state and model\n   * annotation.setValues('State', 'StateModel');\n   * annotation.setValues('StateModel', 'CustomState');\n   * // Save the document\n   * document.save('output.pdf');\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfAnnotation.prototype.setValues = function (name, value) {\n    if (name && name !== '' && value && value !== '') {\n      this._dictionary.update(name, value);\n    }\n  };\n  //Implementation\n  PdfAnnotation.prototype._initialize = function (page, dictionary) {\n    this._page = page;\n    this._crossReference = page._crossReference;\n    if (dictionary) {\n      this._dictionary = dictionary;\n    }\n    if (!this._isLoaded) {\n      this._dictionary.set('P', this._page._ref);\n      this._dictionary.assignXref(this._crossReference);\n    }\n  };\n  PdfAnnotation.prototype._getRotationAngle = function () {\n    var angle = 0;\n    if (this._dictionary.has('Rotate')) {\n      angle = this._dictionary.get('Rotate');\n    } else if (this._dictionary.has('Rotation')) {\n      angle = this._dictionary.get('Rotation');\n    }\n    return angle;\n  };\n  PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n    var count = linePoints.length;\n    var x = [];\n    var y = [];\n    if (linePoints && count > 0) {\n      var points = [];\n      for (var i = 0; i < linePoints.length; i++) {\n        var value = linePoints[Number.parseInt(i.toString(), 10)];\n        points.push(value);\n      }\n      var x1 = 0;\n      var y1 = 0;\n      for (var i = 0; i < points.length; i++) {\n        if (i % 2 === 0) {\n          x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n          x1++;\n        } else {\n          y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n          y1++;\n        }\n      }\n    }\n    x.sort(function (a, b) {\n      return a > b ? 1 : -1;\n    });\n    y.sort(function (a, b) {\n      return a > b ? 1 : -1;\n    });\n    return {\n      x: x[0],\n      y: y[0],\n      width: x[x.length - 1] - x[0],\n      height: y[y.length - 1] - y[0]\n    };\n  };\n  PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n    var isRotatedMatrix = false;\n    var isValidMatrix = true;\n    if (template === null || typeof template === 'undefined') {\n      if (dictionary && dictionary.has('Matrix')) {\n        var matrix = dictionary.getArray('Matrix');\n        if (matrix && matrix.length > 3) {\n          if (typeof matrix[0] !== 'undefined' && typeof matrix[1] !== 'undefined' && typeof matrix[2] !== 'undefined' && typeof matrix[3] !== 'undefined') {\n            if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n              isRotatedMatrix = true;\n              var locationX = 0;\n              var locationY = 0;\n              var templateX = 0;\n              var templateY = 0;\n              if (matrix.length > 4) {\n                templateX = -matrix[4];\n                if (matrix.length > 5) {\n                  templateY = -matrix[5];\n                }\n              }\n              var annotationBounds = void 0;\n              if (this._dictionary.has('Rect')) {\n                annotationBounds = this._dictionary.getArray('Rect');\n                if (annotationBounds && annotationBounds.length > 1) {\n                  locationX = annotationBounds[0];\n                  locationY = annotationBounds[1];\n                }\n              }\n              if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                this._locationDisplaced = true;\n              }\n            }\n          }\n        }\n      } else {\n        isRotatedMatrix = true;\n      }\n      return isRotatedMatrix;\n    } else {\n      var point = this.bounds;\n      if (dictionary && dictionary.has('Matrix')) {\n        var box = dictionary.getArray('BBox');\n        var matrix = dictionary.getArray('Matrix');\n        if (matrix && box && matrix.length > 3 && box.length > 2) {\n          if (typeof matrix[0] !== 'undefined' && typeof matrix[1] !== 'undefined' && typeof matrix[2] !== 'undefined' && typeof matrix[3] !== 'undefined') {\n            if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n              if (typeof box[0] !== 'undefined' && typeof box[1] !== 'undefined' && typeof box[2] !== 'undefined' && typeof box[3] !== 'undefined') {\n                if (box[0] !== -matrix[4] && box[1] !== -matrix[5] || box[0] === 0 && -matrix[4] === 0) {\n                  var graphics = this._page.graphics;\n                  var state = graphics.save();\n                  if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.setTransparency(this._opacity);\n                  }\n                  point.x -= box[0];\n                  point.y += box[1];\n                  graphics._drawTemplate(template, point);\n                  graphics.restore(state);\n                  this._removeAnnotationFromPage(this._page, this);\n                  isValidMatrix = false;\n                }\n              }\n            }\n          }\n        }\n      }\n      return isValidMatrix;\n    }\n  };\n  PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n    var graphics = this._page.graphics;\n    var currentBounds = this.bounds;\n    if (this._type === _PdfAnnotationType.lineAnnotation && !this._dictionary.has('AP')) {\n      currentBounds = _toRectangle([this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height]);\n      if (this._page) {\n        var size = this._page.size;\n        var mBox = this._page.mediaBox;\n        var cropBox = this._page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox')) {\n          if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] || size[1] === cropBox[3]) && currentBounds.x !== cropBox[0]) {\n            currentBounds.x -= cropBox[0];\n            currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n          } else {\n            currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n          }\n        } else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox')) {\n          if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n            currentBounds.x -= mBox[0];\n            currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n          } else {\n            currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n          }\n        } else {\n          currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n        }\n      } else {\n        currentBounds.y = currentBounds.y + currentBounds.height;\n      }\n    }\n    if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n      var state = graphics.save();\n      this._page._needInitializeGraphics = true;\n      if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n        var needScale = true;\n        if (this._dictionary.has('AP')) {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270 && appearanceStream.dictionary.has('Matrix')) {\n              var matrix = appearanceStream.dictionary.getArray('Matrix');\n              if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                needScale = false;\n              }\n            }\n          }\n          if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n            template._isAnnotationTemplate = true;\n            template._needScale = true;\n          }\n        }\n      }\n      if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n        template._isAnnotationTemplate = true;\n        template._needScale = true;\n      }\n      if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n        graphics.setTransparency(this._opacity);\n      }\n      var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n      if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n        var size = void 0;\n        var location_1;\n        if (this.rotate === PdfRotationAngle.angle0) {\n          size = [bounds.width, bounds.height];\n          location_1 = [bounds.x, bounds.y];\n        } else {\n          size = template._size;\n          location_1 = [bounds.x, bounds.y];\n        }\n        var isRotatedMatrix = false;\n        if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n          if (template._content.dictionary.has('Matrix')) {\n            var matrix = template._content.dictionary.getArray('Matrix');\n            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n              isRotatedMatrix = true;\n            }\n          }\n        }\n        var scaleX = template._size[0] > 0 ? bounds.width / template._size[0] : 1;\n        var scaleY = template._size[1] > 0 ? bounds.height / template._size[1] : 1;\n        var needScale = !(scaleX === 1 && scaleY === 1);\n        if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n          if (this.rotate === PdfRotationAngle.angle90) {\n            if (this._page.rotation === PdfRotationAngle.angle270) {\n              if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                location_1[0] += size[0] - size[1];\n                location_1[1] += size[0];\n              } else {\n                location_1[0] += size[1];\n                location_1[1] += size[0] - size[1] + (size[0] - size[1]);\n              }\n            } else if (!needScale) {\n              location_1[0] += size[1];\n            }\n          } else if (this.rotate === PdfRotationAngle.angle270) {\n            if (this._page.rotation === PdfRotationAngle.angle270) {\n              if (needScale && template._isAnnotationTemplate) {\n                location_1[1] = bounds.y - bounds.width;\n              } else if (needScale) {\n                location_1[1] += size[0] - size[1];\n              }\n            } else {\n              if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                location_1[1] += -size[0];\n              } else {\n                location_1[1] += -(size[0] - size[1]);\n              }\n            }\n          } else if (this.rotate === PdfRotationAngle.angle180) {\n            location_1[0] += size[0];\n            location_1[1] += -size[1];\n          }\n        }\n      }\n      graphics._drawTemplate(template, bounds);\n      graphics.restore(state);\n    }\n    this._removeAnnotationFromPage(this._page, this);\n  };\n  PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n    var annotationBounds = bounds;\n    var x = bounds.x;\n    var y = bounds.y;\n    var width = bounds.width;\n    var height = bounds.height;\n    if (!isNormalMatrix) {\n      var rect = this._dictionary.getArray('Rect');\n      if (rect) {\n        annotationBounds = _toRectangle(rect);\n      }\n    }\n    if (typeof page !== 'undefined') {\n      var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n      if (graphicsRotation === 90) {\n        graphics.translateTransform(template._size[1], 0);\n        graphics.rotateTransform(90);\n        if (isNormalMatrix || typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180) {\n          x = bounds.x;\n          if (!this._locationDisplaced) {\n            y = -(page.size[1] - bounds.y - bounds.height);\n          } else if (page._origin && page._o[1] !== 0) {\n            y = bounds.y + bounds.height;\n          } else {\n            y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n          }\n        } else {\n          x = bounds.x;\n          y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n          width = bounds.height;\n          height = bounds.width;\n        }\n      } else if (graphicsRotation === 180) {\n        graphics.translateTransform(template._size[0], template._size[1]);\n        graphics.rotateTransform(180);\n        if (isNormalMatrix) {\n          x = -(page.size[0] - (bounds.x + bounds.width));\n          y = -(page.size[1] - bounds.y - bounds.height);\n        } else {\n          x = -(page.size[0] - (bounds.x + template._size[0]));\n          y = -(page.size[1] - bounds.y - template._size[1]);\n          if (typeof this.rotationAngle !== 'undefined' && (this._rotate === PdfRotationAngle.angle90 || this._rotate === PdfRotationAngle.angle270)) {\n            y = -(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height);\n            width = bounds.height;\n            height = bounds.width;\n          }\n        }\n      } else if (graphicsRotation === 270) {\n        graphics.translateTransform(0, template._size[0]);\n        graphics.rotateTransform(270);\n        if (isNormalMatrix || typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180) {\n          x = -(page.size[0] - bounds.x - bounds.width);\n          y = bounds.y;\n        } else {\n          x = -(page.size[0] - annotationBounds.x - template._size[0]);\n          var matrix = template._content.dictionary.getArray('Matrix');\n          var box = template._content.dictionary.getArray('BBox');\n          if (matrix && box && matrix[5] !== box[2]) {\n            y = bounds.y - (bounds.height - bounds.width);\n          } else {\n            y = bounds.y + bounds.height - bounds.width;\n          }\n          width = bounds.height;\n          height = bounds.width;\n        }\n      } else if (graphicsRotation === 0) {\n        if (!isNormalMatrix && typeof this.rotationAngle !== 'undefined' && (this.rotationAngle === PdfRotationAngle.angle90 || this.rotationAngle === PdfRotationAngle.angle270)) {\n          x = bounds.x;\n          y = bounds.y + bounds.height - bounds.width;\n          width = bounds.height;\n          height = bounds.width;\n        }\n      }\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n    var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n    var angle = Math.round(radians * 180 / Math.PI);\n    switch (angle) {\n      case -90:\n        angle = 90;\n        break;\n      case -180:\n        angle = 180;\n        break;\n      case 90:\n        angle = 270;\n        break;\n    }\n    return angle;\n  };\n  PdfAnnotation.prototype._removeAnnotationFromPage = function (page, annotation) {\n    var annotations = [];\n    if (page._pageDictionary && page._pageDictionary.has('Annots')) {\n      annotations = page._pageDictionary.get('Annots');\n    }\n    annotation._dictionary.set('P', page._ref);\n    var index = annotations.indexOf(annotation._ref);\n    if (index !== -1) {\n      annotations.splice(index, 1);\n      if (this._crossReference._cacheMap.has(annotation._ref)) {\n        this._crossReference._cacheMap.delete(annotation._ref);\n      }\n    }\n    page._pageDictionary.set('Annots', annotations);\n  };\n  PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n    if (page && annotation) {\n      this._removeAnnotationFromPage(page, annotation);\n      page._pageDictionary._updated = true;\n    }\n  };\n  PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n    if (this._isClockWise(points)) {\n      var sortedPoints = [];\n      for (var i = points.length - 1; i >= 0; i--) {\n        sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n      }\n      points = sortedPoints;\n    }\n    var circles = [];\n    var circleOverlap = 2 * radius * overlap;\n    var previousPoint = points[points.length - 1];\n    for (var i = 0; i < points.length; i++) {\n      var currentPoint = points[Number.parseInt(i.toString(), 10)];\n      var dx = currentPoint[0] - previousPoint[0];\n      var dy = currentPoint[1] - previousPoint[1];\n      var length_1 = Math.sqrt(dx * dx + dy * dy);\n      dx = dx / length_1;\n      dy = dy / length_1;\n      for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n        var cur = new _CloudStyleArc();\n        cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n        circles.push(cur);\n      }\n      previousPoint = currentPoint;\n    }\n    var previousCurvedStyleArc = circles[circles.length - 1];\n    for (var i = 0; i < circles.length; i++) {\n      var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n      var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n      previousCurvedStyleArc.endAngle = angle[0];\n      currentCurvedStyleArc.startAngle = angle[1];\n      previousCurvedStyleArc = currentCurvedStyleArc;\n    }\n    var path = new _PdfPath();\n    for (var i = 0; i < circles.length; i++) {\n      var current = circles[Number.parseInt(i.toString(), 10)];\n      var startAngle = current.startAngle % 360;\n      var endAngle = current.endAngle % 360;\n      var sweepAngel = 0;\n      if (startAngle > 0 && endAngle < 0) {\n        sweepAngel = 180 - startAngle + (180 - (endAngle < 0 ? -endAngle : endAngle));\n      } else if (startAngle < 0 && endAngle > 0) {\n        sweepAngel = -startAngle + endAngle;\n      } else if (startAngle > 0 && endAngle > 0) {\n        var difference = 0;\n        if (startAngle > endAngle) {\n          difference = startAngle - endAngle;\n          sweepAngel = 360 - difference;\n        } else {\n          sweepAngel = endAngle - startAngle;\n        }\n      } else if (startAngle < 0 && endAngle < 0) {\n        var difference = 0;\n        if (startAngle > endAngle) {\n          difference = startAngle - endAngle;\n          sweepAngel = 360 - difference;\n        } else {\n          sweepAngel = -(startAngle + -endAngle);\n        }\n      }\n      if (sweepAngel < 0) {\n        sweepAngel = -sweepAngel;\n      }\n      current.endAngle = sweepAngel;\n      path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n    }\n    path._closeFigure();\n    var tempPoints = [];\n    if (isAppearance) {\n      for (var i = 0; i < path._points.length; i++) {\n        tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n      }\n    }\n    var pdfpath;\n    if (isAppearance) {\n      pdfpath = new _PdfPath();\n      pdfpath._points = tempPoints;\n      pdfpath._pathTypes = path._pathTypes;\n    } else {\n      pdfpath = new _PdfPath();\n      pdfpath._points = path._points;\n      pdfpath._pathTypes = path._pathTypes;\n    }\n    if (brush !== null) {\n      graphics._drawPath(pdfpath, null, brush);\n    }\n    var incise = 180 / (Math.PI * 3);\n    path = new _PdfPath();\n    for (var i = 0; i < circles.length; i++) {\n      var current = circles[Number.parseInt(i.toString(), 10)];\n      path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n    }\n    path._closeFigure();\n    tempPoints = [];\n    if (isAppearance) {\n      for (var i = 0; i < path._points.length; i++) {\n        tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n      }\n    }\n    if (isAppearance) {\n      pdfpath = new _PdfPath();\n      pdfpath._points = tempPoints;\n      pdfpath._pathTypes = path._pathTypes;\n    } else {\n      pdfpath = new _PdfPath();\n      pdfpath._points = path._points;\n      pdfpath._pathTypes = path._pathTypes;\n    }\n    graphics._drawPath(pdfpath, pen, null);\n  };\n  PdfAnnotation.prototype._isClockWise = function (points) {\n    var sum = 0;\n    for (var i = 0; i < points.length; i++) {\n      var first = points[Number.parseInt(i.toString(), 10)];\n      var second = points[(i + 1) % points.length];\n      sum += (second[0] - first[0]) * (second[1] + first[1]);\n    }\n    return sum > 0;\n  };\n  PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n    var dx = second[0] - first[0];\n    var dy = second[1] - first[1];\n    var length = Math.sqrt(dx * dx + dy * dy);\n    var a = 0.5 * length / radius;\n    if (a < -1) {\n      a = -1;\n    } else if (a > 1) {\n      a = 1;\n    }\n    var radian = Math.atan2(dy, dx);\n    var cosvalue = Math.acos(a);\n    return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n  };\n  PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n    var dash = this.border.dash;\n    if (dash && dash.length > 0) {\n      var dashPattern = [];\n      var isDash = false;\n      for (var i = 0; i < dash.length; i++) {\n        dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n        if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n          isDash = true;\n        }\n      }\n      if (isDash && this.border.style === PdfBorderStyle.dashed) {\n        borderPen._dashStyle = PdfDashStyle.dash;\n        borderPen._dashPattern = dashPattern;\n      }\n    }\n    if (parameter) {\n      if (parameter instanceof _PaintParameter) {\n        if (!this._isBounds && this._dictionary.has('RD')) {\n          var array = this._dictionary.getArray('RD');\n          if (array) {\n            rectangle[0] = rectangle[0] + array[0];\n            rectangle[1] = rectangle[1] + borderWidth + array[1];\n            rectangle[2] = rectangle[2] - (array[0] + array[2]);\n            rectangle[3] = rectangle[3] - (array[1] + array[3]);\n          }\n        } else {\n          rectangle[0] = rectangle[0] + borderWidth;\n          rectangle[1] = rectangle[1] + borderWidth;\n          rectangle[2] = rectangle[2] - this.border.width;\n          rectangle[3] = rectangle[3] - this.border.width;\n        }\n        parameter.bounds = rectangle;\n      } else {\n        if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n          var radius = parameter.intensity * 5;\n          rectangle[0] = rectangle[0] + radius + borderWidth;\n          rectangle[1] = rectangle[1] + radius + borderWidth;\n          rectangle[2] = rectangle[2] - 2 * radius - 2 * borderWidth;\n          rectangle[3] = rectangle[3] - 2 * radius - 2 * borderWidth;\n        } else {\n          rectangle[0] = rectangle[0] + borderWidth;\n          rectangle[1] = rectangle[1] + borderWidth;\n          rectangle[2] = rectangle[2] - this.border.width;\n          rectangle[3] = this.bounds.height - this.border.width;\n        }\n      }\n    } else {\n      if (!this._isBounds && this._dictionary.has('RD')) {\n        var array = this._dictionary.getArray('RD');\n        if (array) {\n          rectangle[0] = rectangle[0] + array[0];\n          rectangle[1] = rectangle[1] + borderWidth + array[1];\n          rectangle[2] = rectangle[2] - 2 * array[2];\n          rectangle[3] = rectangle[3] - this.border.width;\n          rectangle[3] = rectangle[3] - 2 * array[3];\n        }\n      } else {\n        rectangle[1] = rectangle[1] + borderWidth;\n        rectangle[3] = this.bounds.height - this.border.width;\n      }\n    }\n    return rectangle;\n  };\n  PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n    var width = this.border.width;\n    var rdArray = this._dictionary.getArray('RD');\n    if (!rdArray && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n      var cloudRectangle = {\n        x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n        y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n        width: this.bounds.width + borderEffect.intensity * 10 + width,\n        height: this.bounds.height + borderEffect.intensity * 10 + width\n      };\n      var radius = borderEffect.intensity * 5;\n      rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n      this._dictionary.set('RD', rdArray);\n      this.bounds = cloudRectangle;\n    }\n    if (!this._isBounds && rdArray) {\n      var cloudRectangle = {\n        x: this.bounds.x + rdArray[0],\n        y: this.bounds.y + rdArray[1],\n        width: this.bounds.width - rdArray[2] * 2,\n        height: this.bounds.height - rdArray[3] * 2\n      };\n      if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n        cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n        cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n        cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n        var radius = borderEffect.intensity * 5;\n        this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n      } else {\n        delete this._dictionary._map.RD;\n      }\n      this.bounds = cloudRectangle;\n    }\n    var borderWidth = width / 2;\n    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n    var template = new PdfTemplate(nativeRectangle, this._crossReference);\n    _setMatrix(template, this._getRotationAngle());\n    if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n      template._writeTransformation = false;\n    }\n    var graphics = template.graphics;\n    var parameter = new _PaintParameter();\n    if (this.innerColor) {\n      parameter.backBrush = new PdfBrush(this._innerColor);\n    }\n    if (width > 0 && this.color) {\n      parameter.borderPen = new PdfPen(this._color, width);\n    }\n    if (this.color) {\n      parameter.foreBrush = new PdfBrush(this._color);\n    }\n    var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n      graphics.save();\n      graphics.setTransparency(this._opacity);\n    }\n    if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n      this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n    } else {\n      graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n    }\n    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n      graphics.restore();\n    }\n    return template;\n  };\n  PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n    var graphicsPath = new _PdfPath();\n    graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n    var radius = intensity * 4.25;\n    if (radius > 0) {\n      var points = [];\n      for (var i = 0; i < graphicsPath._points.length; i++) {\n        var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0], -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n        points.push(sublist);\n      }\n      graphicsPath = new _PdfPath();\n      graphicsPath._addPolygon(points);\n      this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n    } else {\n      graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n    }\n  };\n  PdfAnnotation.prototype._createCircleAppearance = function () {\n    var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n    var template = new PdfTemplate(nativeBounds, this._crossReference);\n    _setMatrix(template, this._getRotationAngle());\n    if (this._dictionary.has('BE')) {\n      template._writeTransformation = false;\n    }\n    var graphics = template.graphics;\n    var width = this.border.width;\n    var borderPen = new PdfPen(this.color, width);\n    var parameter = new _PaintParameter();\n    if (this.innerColor) {\n      parameter.backBrush = new PdfBrush(this._innerColor);\n    }\n    if (width > 0) {\n      parameter.borderPen = borderPen;\n    }\n    if (this.color) {\n      parameter.foreBrush = new PdfBrush(this._color);\n    }\n    parameter.borderWidth = width;\n    var borderWidth = width / 2;\n    var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n      graphics.save();\n      graphics.setTransparency(this._opacity);\n    }\n    if (this._dictionary.has('BE')) {\n      this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n    } else {\n      graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n    }\n    if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n      graphics.restore();\n    }\n    return template;\n  };\n  PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n    var radius = 0;\n    if (this._dictionary.has('RD')) {\n      var array = this._dictionary.getArray('RD');\n      if (array && array.length > 0) {\n        radius = array[0];\n      }\n    }\n    if (radius > 0) {\n      var rect = [rectangle[0] + borderWidth, -rectangle[1] - rectangle[3], rectangle[2] - this.border.width, rectangle[3]];\n      var left = rect[0];\n      var top_1 = rect[1];\n      var right = rect[0] + rect[2];\n      var bottom = rect[1] + rect[3];\n      var controlPointList = [];\n      controlPointList.push([right, bottom]);\n      controlPointList.push([left, bottom]);\n      controlPointList.push([left, top_1]);\n      controlPointList.push([right, top_1]);\n      var startPointList = [];\n      startPointList.push([right, top_1 + rect[3] / 2]);\n      startPointList.push([left + rect[2] / 2, bottom]);\n      startPointList.push([left, top_1 + rect[3] / 2]);\n      startPointList.push([left + rect[2] / 2, top_1]);\n      var endPointList = [];\n      endPointList.push([left + rect[2] / 2, bottom]);\n      endPointList.push([left, top_1 + rect[3] / 2]);\n      endPointList.push([left + rect[2] / 2, top_1]);\n      endPointList.push([right, top_1 + rect[3] / 2]);\n      var points = [];\n      for (var i = 0; i < controlPointList.length; i++) {\n        this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n      }\n      this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n    } else {\n      graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n    }\n  };\n  PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n    bezierPoints.push(first);\n    this._populateBezierPoints(first, second, third, 0, bezierPoints);\n    bezierPoints.push(third);\n  };\n  PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n    if (currentIteration < 2) {\n      var midPoint1 = this._midPoint(first, second);\n      var midPoint2 = this._midPoint(second, third);\n      var midPoint3 = this._midPoint(midPoint1, midPoint2);\n      currentIteration++;\n      this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n      bezierPoints.push(midPoint3);\n      this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n    }\n  };\n  PdfAnnotation.prototype._midPoint = function (first, second) {\n    return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n  };\n  PdfAnnotation.prototype._getAngle = function (linePoints) {\n    var x1 = linePoints[0];\n    var y1 = linePoints[1];\n    var x2 = linePoints[2];\n    var y2 = linePoints[3];\n    var angle = 0;\n    if (x2 - x1 === 0) {\n      angle = y2 > y1 ? 90 : 270;\n    } else {\n      var angleRatio = (y2 - y1) / (x2 - x1);\n      var radians = Math.atan(angleRatio);\n      angle = radians * (180 / Math.PI);\n      if (x2 - x1 < 0 || y2 - y1 < 0) {\n        angle += 180;\n      }\n      if (x2 - x1 > 0 && y2 - y1 < 0) {\n        angle -= 180;\n      }\n      if (angle < 0) {\n        angle += 360;\n      }\n    }\n    return angle;\n  };\n  PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n    return [value[0] + Math.cos(angle * this._degreeToRadian) * length, value[1] + Math.sin(angle * this._degreeToRadian) * length];\n  };\n  PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n    var arraowAngle;\n    var count;\n    var startPoint;\n    var first;\n    var second;\n    var third;\n    var fourth;\n    var path;\n    switch (style) {\n      case PdfLineEndingStyle.square:\n        graphics.drawRectangle(axisPoint[0] - 3 * length, -(axisPoint[1] + 3 * length), 6 * length, 6 * length, pen, brush);\n        break;\n      case PdfLineEndingStyle.circle:\n        graphics.drawEllipse(axisPoint[0] - 3 * length, -(axisPoint[1] + 3 * length), 6 * length, 6 * length, pen, brush);\n        break;\n      case PdfLineEndingStyle.openArrow:\n        arraowAngle = isBegin ? 30 : 150;\n        count = 9 * length;\n        startPoint = this._getAxisValue(axisPoint, angle, isBegin ? length : -length);\n        first = this._getAxisValue(startPoint, angle + arraowAngle, count);\n        second = this._getAxisValue(startPoint, angle - arraowAngle, count);\n        path = new _PdfPath();\n        path._pen = pen;\n        path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n        path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n        graphics._stateControl(pen, null, null);\n        graphics._buildUpPath(path._points, path._pathTypes);\n        graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n        break;\n      case PdfLineEndingStyle.closedArrow:\n        arraowAngle = isBegin ? 30 : 150;\n        count = 9 * length;\n        startPoint = this._getAxisValue(axisPoint, angle, isBegin ? length : -length);\n        first = this._getAxisValue(startPoint, angle + arraowAngle, count);\n        second = this._getAxisValue(startPoint, angle - arraowAngle, count);\n        graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n        break;\n      case PdfLineEndingStyle.rOpenArrow:\n        arraowAngle = isBegin ? 150 : 30;\n        count = 9 * length;\n        startPoint = this._getAxisValue(axisPoint, angle, isBegin ? -length : length);\n        first = this._getAxisValue(startPoint, angle + arraowAngle, count);\n        second = this._getAxisValue(startPoint, angle - arraowAngle, count);\n        path = new _PdfPath();\n        path._pen = pen;\n        path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n        path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n        graphics._stateControl(pen, null, null);\n        graphics._buildUpPath(path._points, path._pathTypes);\n        graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n        break;\n      case PdfLineEndingStyle.rClosedArrow:\n        arraowAngle = isBegin ? 150 : 30;\n        count = 9 * length;\n        startPoint = this._getAxisValue(axisPoint, angle, isBegin ? -length : length);\n        first = this._getAxisValue(startPoint, angle + arraowAngle, count);\n        second = this._getAxisValue(startPoint, angle - arraowAngle, count);\n        graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n        break;\n      case PdfLineEndingStyle.slash:\n        count = 9 * length;\n        first = this._getAxisValue(startPoint, angle + 60, count);\n        second = this._getAxisValue(startPoint, angle - 120, count);\n        graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n        graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n        break;\n      case PdfLineEndingStyle.diamond:\n        count = 3 * length;\n        first = this._getAxisValue(axisPoint, 180, count);\n        second = this._getAxisValue(axisPoint, 90, count);\n        third = this._getAxisValue(axisPoint, 0, count);\n        fourth = this._getAxisValue(axisPoint, -90, count);\n        graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n        break;\n      case PdfLineEndingStyle.butt:\n        count = 3 * length;\n        first = this._getAxisValue(axisPoint, angle + 90, count);\n        second = this._getAxisValue(axisPoint, angle - 90, count);\n        graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n        break;\n    }\n  };\n  PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n    if (length === 0) {\n      length = 1;\n      pen = null;\n    }\n    this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n    this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n  };\n  PdfAnnotation.prototype._obtainFontDetails = function () {\n    var fontFamily = '';\n    var fontSize;\n    var style = PdfFontStyle.regular;\n    if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n      var fontStyle = void 0;\n      if (this._dictionary.has('DS')) {\n        var collection = this._dictionary.get('DS').split(';');\n        for (var i = 0; i < collection.length; i++) {\n          var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n          if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n            fontFamily = entry[1];\n          } else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n            if (entry[1].endsWith('pt')) {\n              fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n            }\n          } else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n            fontStyle = collection[Number.parseInt(i.toString(), 10)];\n          } else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n            var name_1 = entry[1];\n            var split = name_1.split(' ');\n            for (var j = 0; j < split.length; j++) {\n              if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n              }\n              if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n              }\n            }\n            while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n              fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n            }\n            if (fontFamily.indexOf(',') !== -1) {\n              fontFamily = fontFamily.split(',')[0];\n            }\n          }\n        }\n      } else {\n        var value = this._dictionary.get('DA');\n        if (value && value !== '' && value.indexOf('Tf') !== -1) {\n          var textCollection = value.split(' ');\n          for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n              fontFamily = textCollection[i - 2];\n              while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                fontFamily = fontFamily.substring(1);\n              }\n              fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n          }\n        }\n      }\n      if (fontStyle && fontStyle !== '') {\n        var styleArray = void 0;\n        if (fontStyle.includes(':')) {\n          styleArray = fontStyle.split(':');\n        } else if (fontStyle.includes(',')) {\n          styleArray = fontStyle.split(',');\n        }\n        if (styleArray) {\n          styleArray.forEach(function (entry) {\n            switch (entry.toLowerCase()) {\n              case 'bold':\n                style |= PdfFontStyle.bold;\n                break;\n              case 'italic':\n                style |= PdfFontStyle.italic;\n                break;\n              case 'strikeout':\n                style |= PdfFontStyle.strikeout;\n                break;\n              case 'underline':\n                style |= PdfFontStyle.underline;\n                break;\n            }\n          });\n        }\n      }\n      if (fontFamily) {\n        fontFamily = fontFamily.trim();\n      }\n    }\n    return {\n      name: fontFamily,\n      size: fontSize,\n      style: style\n    };\n  };\n  PdfAnnotation.prototype._obtainFont = function () {\n    var fontData = this._obtainFontDetails();\n    return _mapFont(fontData.name, fontData.size, fontData.style, this);\n  };\n  PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n    var graphicsUnit;\n    switch (measurementUnit) {\n      case PdfMeasurementUnit.inch:\n        graphicsUnit = _PdfGraphicsUnit.inch;\n        unitString = 'in';\n        break;\n      case PdfMeasurementUnit.centimeter:\n        graphicsUnit = _PdfGraphicsUnit.centimeter;\n        unitString = 'cm';\n        break;\n      case PdfMeasurementUnit.millimeter:\n        graphicsUnit = _PdfGraphicsUnit.millimeter;\n        unitString = 'mm';\n        break;\n      case PdfMeasurementUnit.pica:\n        graphicsUnit = _PdfGraphicsUnit.pica;\n        unitString = 'p';\n        break;\n      case PdfMeasurementUnit.point:\n        graphicsUnit = _PdfGraphicsUnit.point;\n        unitString = 'pt';\n        break;\n      default:\n        graphicsUnit = _PdfGraphicsUnit.inch;\n        unitString = 'in';\n        break;\n    }\n    return {\n      graphicsUnit: graphicsUnit,\n      unitString: unitString\n    };\n  };\n  PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n    var d = new _PdfDictionary();\n    d.set('C', 1);\n    d.set('D', 100);\n    d.set('F', _PdfName.get('D'));\n    d.set('RD', '.');\n    d.set('RT', '');\n    d.set('SS', '');\n    d.set('U', unitString);\n    var a = new _PdfDictionary();\n    a.set('C', 1);\n    a.set('D', 100);\n    a.set('F', _PdfName.get('D'));\n    a.set('RD', '.');\n    a.set('RT', '');\n    a.set('SS', '');\n    a.set('U', 'sq ' + unitString);\n    var x = new _PdfDictionary();\n    if (unitString === 'in') {\n      x.set('C', 0.0138889);\n    } else if (unitString === 'cm') {\n      x.set('C', 0.0352778);\n    } else if (unitString === 'mm') {\n      x.set('C', 0.352778);\n    } else if (unitString === 'pt') {\n      x.set('C', 1);\n    } else if (unitString === 'p') {\n      x.set('C', 0.0833333);\n    }\n    x.set('D', 100);\n    x.set('F', _PdfName.get('D'));\n    x.set('RD', '.');\n    x.set('RT', '');\n    x.set('SS', '');\n    x.set('U', unitString);\n    var measureDictionary = new _PdfDictionary();\n    measureDictionary.set('A', [a]);\n    measureDictionary.set('D', [d]);\n    measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n    measureDictionary.set('Type', _PdfName.get('Measure'));\n    measureDictionary.set('X', [x]);\n    return measureDictionary;\n  };\n  PdfAnnotation.prototype._colorToHex = function (col) {\n    if (col) {\n      return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n    } else {\n      return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n    }\n  };\n  PdfAnnotation.prototype._componentToHex = function (c) {\n    var hex = c.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  };\n  PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n    if (bounds.width > 0 && bounds.height > 0) {\n      var matrix = new _PdfTransformationMatrix();\n      matrix._rotate(rotateAngle);\n      var corners = [];\n      corners.push([bounds.x, bounds.y]);\n      corners.push([bounds.x + bounds.width, bounds.y]);\n      corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n      corners.push([bounds.x, bounds.y + bounds.height]);\n      for (var i = 0; i < corners.length; i++) {\n        corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n      }\n      var path = new _PdfPath();\n      path._addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n      for (var i = 0; i < 4; i++) {\n        path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n      }\n      var minX = corners[0][0];\n      var maxX = corners[3][0];\n      var minY = corners[0][1];\n      var maxY = corners[3][1];\n      for (var i = 0; i < 4; i++) {\n        if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n          minX = corners[Number.parseInt(i.toString(), 10)][0];\n        }\n        if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n          maxX = corners[Number.parseInt(i.toString(), 10)][0];\n        }\n        if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n          minY = corners[Number.parseInt(i.toString(), 10)][1];\n        }\n        if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n          maxY = corners[Number.parseInt(i.toString(), 10)][1];\n        }\n      }\n      return {\n        x: bounds.x,\n        y: bounds.y,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n    return bounds;\n  };\n  PdfAnnotation.prototype._flattenPopUp = function () {\n    this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n  };\n  PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n    var clientSize = [0, 0];\n    clientSize = _page.size;\n    var x = clientSize[0] - 180;\n    var annotBounds = boundsValue;\n    var y = annotBounds.y + 142 < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n    var bounds = [x, y, 180, 142];\n    if (this._dictionary.has('Popup')) {\n      var dictionary = this._dictionary.get('Popup');\n      if (dictionary) {\n        var rectValue = this._dictionary.getArray('Rect');\n        if (rectValue && rectValue.length === 4) {\n          var left = rectValue[0];\n          var top_2 = rectValue[1];\n          var width = rectValue[2];\n          var height = rectValue[3];\n          bounds = [left, top_2, width - left, height - top_2];\n        }\n      }\n    }\n    if (typeof color === 'undefined') {\n      color = [0, 0, 0];\n    }\n    var backBrush = new PdfBrush(color);\n    var borderWidth = border.width / 2;\n    var pen = new PdfPen([0, 0, 0], 1);\n    var track = 0;\n    var aBrush = new PdfBrush(this._getForeColor(color));\n    if (typeof author !== 'undefined' && author !== null && author !== '') {\n      track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n    } else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n      var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n      this._saveGraphics(_page, PdfBlendMode.hardLight);\n      _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n      _page.graphics.restore();\n      var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n      contentRect = [contentRect[0], contentRect[1] + contentRect[3] - 2, contentRect[2], titleRect[3] / 2];\n      this._saveGraphics(_page, PdfBlendMode.normal);\n      this._drawSubject(subject, contentRect, _page);\n      _page.graphics.restore();\n      track = 40;\n    } else {\n      this._saveGraphics(_page, PdfBlendMode.hardLight);\n      var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n      _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n      track = 20;\n      _page.graphics.restore();\n    }\n    var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track, bounds[2] - border.width, bounds[3] - (track + border.width)];\n    this._saveGraphics(_page, PdfBlendMode.hardLight);\n    _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n    rect[0] += 11;\n    rect[1] += 5;\n    rect[2] -= 22;\n    _page.graphics.restore();\n    this._saveGraphics(_page, PdfBlendMode.normal);\n    if (typeof text !== 'undefined' && text !== null && text !== '') {\n      _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n    }\n    _page.graphics.restore();\n  };\n  PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n    var content = '';\n    if (this._dictionary.has('Contents')) {\n      content = this._dictionary.get('Contents');\n    }\n    var author = this.author;\n    var subject = this.subject;\n    var pen = new PdfPen([0, 0, 0], 1);\n    if (!this._dictionary.has('Popup')) {\n      this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n      this._removeAnnotationFromPage(this._page, this);\n    } else {\n      var bounds = this._getRectangleBoundsValue();\n      if (typeof this.color === 'undefined') {\n        this.color = [0, 0, 0];\n      }\n      var backBrush = new PdfBrush(this.color);\n      var borderWidth = this.border.width / 2;\n      var track = 0;\n      var aBrush = new PdfBrush(this._getForeColor(this.color));\n      if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n        track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n      } else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n        this._saveGraphics(this._page, PdfBlendMode.hardLight);\n        this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n        this._page.graphics.restore();\n        var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n        contentRect = [contentRect[0], contentRect[1] + contentRect[3] - 2, contentRect[2], titleRect[3] / 2];\n        this._saveGraphics(this._page, PdfBlendMode.normal);\n        this._drawSubject(this.subject, contentRect, this._page);\n        track = 40;\n        this._page.graphics.restore();\n      } else {\n        this._saveGraphics(this._page, PdfBlendMode.hardLight);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n        this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n        track = 20;\n        this._page.graphics.restore();\n      }\n      this._saveGraphics(this._page, PdfBlendMode.hardLight);\n      var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track, bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n      this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n      rect[0] += 11;\n      rect[1] += 5;\n      rect[2] -= 22;\n      this._page.graphics.restore();\n      this._saveGraphics(this._page, PdfBlendMode.normal);\n      this._page.graphics.restore();\n      //let xmlData: Array<any> = Array<any>();\n      // if (this._dictionary.has('RC')) {\n      //     //xmlData = this.parseXMLData();\n      // }\n      // if (xmlData !== null) {\n      //     // Need to add xml data code\n      // } else {\n      if (typeof content !== 'undefined' && content !== null && content !== '') {\n        this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n      }\n      // }\n      this._page.graphics.restore();\n      this._removeAnnotationFromPage(this._page, this);\n    }\n  };\n  PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n    if (this._dictionary.has('Popup')) {\n      var dic = this._dictionary.get('Popup');\n      var rect = dic.getArray('Rect');\n      if (rect !== null) {\n        if (this._page !== null) {\n          if (rect[1] === 0 && rect[3] === 0) {\n            rect[1] = rect[1] + rect[3];\n          } else {\n            rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n          }\n        } else {\n          rect[1] = rect[1] - rect[3];\n        }\n        return rect;\n      } else {\n        return [0, 0, 0, 0];\n      }\n    } else {\n      return [0, 0, 0, 0];\n    }\n  };\n  PdfAnnotation.prototype._getForeColor = function (color) {\n    var fore = (color[0] + color[1] + color[2]) / 3 > 128 ? [0, 0, 0] : [255, 255, 255];\n    return fore;\n  };\n  PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n    var borderWidth = this.border.width / 2;\n    var pen = new PdfPen([0, 0, 0], 1);\n    var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n    var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n    if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n      titleRect[3] += 20;\n      trackingHeight = titleRect[3];\n      this._saveGraphics(_page, PdfBlendMode.hardLight);\n      _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n      _page.graphics.restore();\n      var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n      this._saveGraphics(this._page, PdfBlendMode.normal);\n      _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n      contentRect = [contentRect[0], contentRect[1] + contentRect[3] - 2, contentRect[2], titleRect[3] / 2];\n      this._drawSubject(subject, contentRect, _page);\n      _page.graphics.restore();\n    } else {\n      this._saveGraphics(_page, PdfBlendMode.hardLight);\n      _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n      _page.graphics.restore();\n      var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n      this._saveGraphics(_page, PdfBlendMode.normal);\n      _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n      trackingHeight = titleRect[3];\n      _page.graphics.restore();\n    }\n    return trackingHeight;\n  };\n  PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n    var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n    _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n  };\n  PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n    _page.graphics.save();\n    _page.graphics.setTransparency(0.8, 0.8, blendMode);\n  };\n  PdfAnnotation.prototype._getBorderColorString = function (color) {\n    return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n  };\n  PdfAnnotation.prototype._stringToDate = function (date) {\n    var dateFormat = new Date();\n    if (date[0] === 'D' && date[1] === ':') {\n      var year = date.substring(2, 6);\n      var month = date.substring(6, 8);\n      var day = date.substring(8, 10);\n      var hour = date.substring(10, 12);\n      var minute = date.substring(12, 14);\n      var second = date.substring(14, 16);\n      var difference = 0;\n      if (date.length === 23) {\n        var timeZone = date.substring(16, 22);\n        if (timeZone !== '+05\\'30\\'') {\n          var signature = timeZone[0];\n          var timeZoneHour = timeZone.substring(1, 3);\n          var timeZonMinute = timeZone.substring(4, 6);\n          difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + parseInt(timeZonMinute, 10) / 60);\n        }\n      }\n      dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n      if (difference !== 0) {\n        dateFormat.setTime(dateFormat.getTime() + difference * 60 * 60 * 1000);\n      }\n    } else if (date.indexOf('/') !== -1) {\n      var list = date.split('/');\n      var year = list[2].split(' ')[0];\n      var month = list[0];\n      if (month !== '10' && month !== '11' && month !== '12') {\n        month = '0' + month;\n      }\n      var day = list[1];\n      var hour = list[2].split(' ')[1].split(':')[0];\n      var minute = list[2].split(' ')[1].split(':')[1];\n      var second = list[2].split(' ')[1].split(':')[2];\n      dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n    } else {\n      dateFormat = new Date(date);\n    }\n    return dateFormat;\n  };\n  PdfAnnotation.prototype._dateToString = function (dateTime) {\n    var month = (dateTime.getMonth() + 1).toString();\n    if (month !== '10' && month !== '11' && month !== '12') {\n      month = '0' + month;\n    }\n    var date = dateTime.getDate().toString();\n    if (Number.parseInt(date) < 10) {\n      // eslint-disable-line\n      date = '0' + date;\n    }\n    var hours = dateTime.getHours().toString();\n    if (Number.parseInt(hours) < 10) {\n      // eslint-disable-line\n      hours = '0' + hours;\n    }\n    var minutes = dateTime.getMinutes().toString();\n    if (Number.parseInt(minutes) < 10) {\n      // eslint-disable-line\n      minutes = '0' + minutes;\n    }\n    var seconds = dateTime.getSeconds().toString();\n    if (Number.parseInt(seconds) < 10) {\n      // eslint-disable-line\n      seconds = '0' + seconds;\n    }\n    return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n  };\n  PdfAnnotation.prototype._obtainNativeRectangle = function () {\n    var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n    var cropBoxOrMediaBox;\n    if (this._page) {\n      var size = this._page.size;\n      rect[1] = size[1] - rect[3];\n      var cropBox = this._page.cropBox;\n      if (cropBox && _areNotEqual(cropBox, [0, 0, 0, 0])) {\n        cropBoxOrMediaBox = cropBox;\n      } else {\n        var mBox = this._page.mediaBox;\n        if (mBox && _areNotEqual(mBox, [0, 0, 0, 0])) {\n          cropBoxOrMediaBox = mBox;\n        }\n      }\n      if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n        rect[0] += cropBoxOrMediaBox[0];\n        rect[1] += cropBoxOrMediaBox[1];\n      }\n    }\n    return rect;\n  };\n  return PdfAnnotation;\n}();\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */function (_super) {\n  __extends(PdfComment, _super);\n  function PdfComment() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(PdfComment.prototype, \"comments\", {\n    /**\n     * Gets the comments of the PDF annotation (Read only).\n     *\n     * @returns {PdfPopupAnnotationCollection} Annotation comments\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n     * // Gets the comments of the PDF annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._comments) {\n        return this._comments;\n      } else {\n        return this._comments = new PdfPopupAnnotationCollection(this, false);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n    /**\n     * Gets the review history of the PDF annotation (Read only).\n     *\n     * @returns {PdfPopupAnnotationCollection} Annotation review history.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n     * // Gets the comments of the PDF annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._reviewHistory) {\n        return this._reviewHistory;\n      } else {\n        return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfComment;\n}(PdfAnnotation);\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */function (_super) {\n  __extends(PdfLineAnnotation, _super);\n  function PdfLineAnnotation(linePoints) {\n    var _this = _super.call(this) || this;\n    _this._unit = PdfMeasurementUnit.centimeter;\n    _this._unitString = '';\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Line'));\n    if (typeof linePoints !== 'undefined') {\n      _this.linePoints = linePoints;\n    }\n    _this._type = _PdfAnnotationType.lineAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n    /**\n     * Gets the line points of the line annotation.\n     *\n     * @returns {number[]} Line points.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the line points of the line annotation.\n     * let linePoints : number[] = annotation.linePoints;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n        var points = this._dictionary.getArray('L');\n        if (points) {\n          this._linePoints = points;\n        }\n      }\n      return this._linePoints;\n    },\n    /**\n     * Sets the line points of the line annotation.\n     *\n     * @param {number[]} value Line points.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the line points of the line annotation.\n     * annotation.linePoints = [10, 50, 250, 50];\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n        if (value.length === 4) {\n          this._dictionary.update('L', value);\n          this._linePoints = value;\n        } else {\n          throw new Error('Line points length should be 4.');\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n    /**\n     * Gets the line extension of the line annotation.\n     *\n     * @returns {number} Leader line extension.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the line extension of the line annotation.\n     * let leaderExt: number = annotation.leaderExt;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n        var leaderExt = this._dictionary.get('LLE');\n        if (typeof leaderExt !== 'undefined') {\n          this._leaderExt = leaderExt;\n        }\n      }\n      return this._leaderExt;\n    },\n    /**\n     * Sets the line extension of the line annotation.\n     *\n     * @param {number} value Line extension.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the line extension of the line annotation.\n     * annotation.leaderExt = 4;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!Number.isNaN(value)) {\n        this._dictionary.update('LLE', value);\n        this._leaderExt = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n    /**\n     * Gets the leader line of the line annotation.\n     *\n     * @returns {number} Leader line.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the leader line of the line annotation.\n     * let leaderLine: number = annotation.leaderLine;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n        var leaderLine = this._dictionary.get('LL');\n        if (typeof leaderLine !== 'undefined') {\n          this._leaderLine = leaderLine;\n        }\n      }\n      return this._leaderLine;\n    },\n    /**\n     * Sets the leader line of the line annotation.\n     *\n     * @param {number} value Leader line.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the leader line of the line annotation.\n     * annotation.leaderLine = 5;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!Number.isNaN(value) && this.leaderExt !== 0) {\n        this._dictionary.update('LL', value);\n        this._leaderLine = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n    /**\n     * Gets the line ending style of the line annotation.\n     *\n     * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the line ending style of the line annotation.\n     * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._lineEndingStyle === 'undefined') {\n        var value = new PdfAnnotationLineEndingStyle();\n        value._dictionary = this._dictionary;\n        if (this._dictionary.has('LE')) {\n          var lineStyles = this._dictionary.getArray('LE');\n          if (lineStyles && Array.isArray(lineStyles)) {\n            value._begin = _mapLineEndingStyle(lineStyles[0].name);\n            value._end = _mapLineEndingStyle(lineStyles[1].name);\n          }\n        }\n        this._lineEndingStyle = value;\n      }\n      return this._lineEndingStyle;\n    },\n    /**\n     * Sets the line ending style of the line annotation.\n     *\n     * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the line ending style of the line annotation.\n     * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      var style = this.lineEndingStyle;\n      if (style.begin !== value.begin || style.end !== value.end) {\n        style.begin = value.begin;\n        style.end = value.end;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n    /**\n     * Gets the leader offset of the line annotation.\n     *\n     * @returns {number} Leader offset.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the leader offset value of the line annotation\n     * let leaderOffset: number = annotation.leaderOffset;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n        var leaderOffset = this._dictionary.get('LLO');\n        if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n          this._leaderOffset = leaderOffset;\n        }\n      }\n      return this._leaderOffset;\n    },\n    /**\n     * Sets the leader offset of the line annotation.\n     *\n     * @param {number} value Leader line offset.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the leader offset of the line annotation.\n     * annotation.leaderOffset = 1;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!Number.isNaN(value)) {\n        this._dictionary.update('LLO', value);\n        this._leaderOffset = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n    /**\n     * Gets the line intent of the line annotation.\n     *\n     * @returns {PdfLineIntent} Line intent.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the line intent value of the line annotation\n     * let lineIntent: PdfLineIntent = annotation.lineIntent;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n        var lineIntent = this._dictionary.get('IT');\n        if (lineIntent) {\n          this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n        }\n      }\n      return this._lineIntent;\n    },\n    /**\n     * Sets the line intent of the line annotation.\n     *\n     * @param {PdfLineIntent} value Line intent.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the line intent of the line annotation.\n     * annotation.lineIntent = PdfLineIntent.lineDimension;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value !== this.lineIntent) {\n        this._lineIntent = value;\n        this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n    /**\n     * Gets the flag to have measurement dictionary of the line annotation.\n     *\n     * @returns {boolean} measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the flag to have measurement dictionary of the line annotation.\n     * let measure: boolean = annotation.measure;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._measure === 'undefined') {\n        this._measure = this._dictionary.has('Measure');\n      }\n      return this._measure;\n    },\n    /**\n     * Sets the flag to add measurement dictionary to the line annotation.\n     *\n     * @param {boolean} value Measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the flag to have measurement dictionary of the line annotation.\n     * annotation.measure = true;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value) {\n        if (!this._isLoaded) {\n          this._measure = value;\n          this.caption.cap = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n    /**\n     * Gets the measurement unit of the annotation.\n     *\n     * @returns {PdfMeasurementUnit} Measurement unit.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the measurement unit of the annotation.\n     * let unit: PdfMeasurementUnit = annotation.unit;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._unit === 'undefined') {\n        this._unit = PdfMeasurementUnit.centimeter;\n        if (this._dictionary.has('Contents')) {\n          var text = this._dictionary.get('Contents');\n          this._unitString = text.substring(text.length - 2);\n          this._unit = _mapMeasurementUnit(this._unitString);\n        }\n      }\n      return this._unit;\n    },\n    /**\n     * Sets the measurement unit of the line annotation.\n     *\n     * @param {PdfMeasurementUnit} value Measurement unit.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the measurement unit of the annotation.\n     * annotation.unit = PdfMeasurementUnit.centimeter;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._measure) {\n        if (!this._isLoaded && typeof value !== 'undefined') {\n          this._unit = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfLineAnnotation._load = function (page, dictionary) {\n    var annot = new PdfLineAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfLineAnnotation.prototype._postProcess = function (flatten) {\n    if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n      throw new Error('Line points cannot be null or undefined');\n    }\n    if (!this._dictionary.has('Cap')) {\n      this._dictionary.set('Cap', false);\n    }\n    if (!this._dictionary.has('CP')) {\n      this._dictionary.set('CP', _PdfName.get('Inline'));\n    }\n    if (!this._dictionary.has('LE')) {\n      this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n    }\n    if (!this._dictionary.has('LL')) {\n      this.leaderLine = 0;\n    }\n    if (!this._dictionary.has('LLE')) {\n      this.leaderExt = 0;\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    if (this._measure) {\n      this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n    } else {\n      if (this._setAppearance) {\n        this._appearanceTemplate = this._createAppearance();\n      }\n      var boundsArray = this._obtainLineBounds();\n      var bounds = {\n        x: boundsArray[0],\n        y: boundsArray[1],\n        width: boundsArray[2],\n        height: boundsArray[3]\n      };\n      this._bounds = bounds;\n      var updatedBounds = [this._bounds.x, this._bounds.y, this._bounds.x + this._bounds.width, this._bounds.y + this._bounds.height];\n      this._dictionary.update('Rect', updatedBounds);\n    }\n  };\n  PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        if (this._dictionary.has('Measure')) {\n          this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n        } else {\n          this._appearanceTemplate = this._createAppearance();\n        }\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          if (appearanceStream) {\n            var reference = dictionary.getRaw('N');\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate) {\n        if (isFlatten) {\n          if (!this._dictionary.has('AP')) {\n            this._appearanceTemplate = this._createAppearance();\n          } else {\n            var dictionary = this._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n              var appearanceStream = dictionary.get('N');\n              if (appearanceStream) {\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                  appearanceStream.reference = reference;\n                }\n                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n      if (this._isLoaded && !this._dictionary.has('Measure')) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n    }\n    if (!isFlatten && this._setAppearance && !this.measure) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_1 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_1, appearance);\n        this._dictionary.update('AP', reference_1);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n    var nativeRectangle = [0, 0, 0, 0];\n    var area = this._convertToUnit();\n    var linePoints1 = this._obtainLinePoints();\n    var points = [];\n    for (var j = 0; j < linePoints1.length; j = j + 2) {\n      points.push([linePoints1[Number.parseInt(j.toString(), 10)], linePoints1[j + 1]]);\n    }\n    var graphicsPath = new _PdfPath();\n    graphicsPath._points = points;\n    graphicsPath._pathTypes = [0, 1];\n    var rectPath = graphicsPath._getBounds();\n    this._bounds = {\n      x: rectPath[0],\n      y: rectPath[1],\n      width: rectPath[2],\n      height: rectPath[3]\n    };\n    var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n    var backBrush;\n    if (this.innerColor) {\n      backBrush = new PdfBrush(this._innerColor);\n    }\n    nativeRectangle = this._obtainLineBounds();\n    var template = new PdfTemplate(nativeRectangle, this._crossReference);\n    _setMatrix(template, this._getRotationAngle());\n    var parameter = new _PaintParameter();\n    template._writeTransformation = false;\n    var graphics = template.graphics;\n    parameter.borderPen = borderPen;\n    parameter.backBrush = backBrush;\n    parameter.foreBrush = new PdfBrush(this.color);\n    var linePoints = this._obtainLinePoints();\n    var font = this._obtainFont();\n    if (typeof font === 'undefined' || font === null || !this._isLoaded && font.size === 1) {\n      font = this._lineCaptionFont;\n      this._pdfFont = font;\n    }\n    if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n      var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n      var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n      var angle = this._getAngle(this._linePoints);\n      var leaderLine = 0;\n      var lineAngle = 0;\n      if (this.leaderLine < 0) {\n        leaderLine = -this.leaderLine;\n        lineAngle = angle + 180;\n      } else {\n        leaderLine = this.leaderLine;\n        lineAngle = angle;\n      }\n      var offset = typeof this.leaderOffset !== 'undefined' ? leaderLine + this.leaderOffset : leaderLine;\n      var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], lineAngle + 90, offset);\n      var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], lineAngle + 90, offset);\n      var lineDistance = Math.sqrt(Math.pow(endPoint[0] - startPoint[0], 2) + Math.pow(endPoint[1] - startPoint[1], 2));\n      var centerWidth = lineDistance / 2 - (fontSize[0] / 2 + this.border.width);\n      var first = this._getAxisValue(startPoint, angle, centerWidth);\n      var second = this._getAxisValue(endPoint, angle + 180, centerWidth);\n      var start = this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow || this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow ? this._getAxisValue(startPoint, angle, this.border.width) : startPoint;\n      var end = this.lineEndingStyle.end === PdfLineEndingStyle.openArrow || this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow ? this._getAxisValue(endPoint, angle, -this.border.width) : endPoint;\n      var state = void 0;\n      if (this.opacity && this._opacity < 1) {\n        state = graphics.save();\n        graphics.setTransparency(this._opacity);\n      }\n      if (this.caption.type === PdfLineCaptionType.top || !this.caption.cap && this.caption.type === PdfLineCaptionType.inline) {\n        graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n      } else {\n        graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n        graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n      }\n      if (this.opacity && this._opacity < 1) {\n        graphics.restore(state);\n      }\n      this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n      var leaderExt = typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0;\n      var beginLineExt = this._getAxisValue(startPoint, lineAngle + 90, leaderExt);\n      graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n      var endLineExt = this._getAxisValue(endPoint, lineAngle + 90, leaderExt);\n      graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n      var beginLeaderLine = this._getAxisValue(startPoint, lineAngle - 90, leaderLine);\n      graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n      var endLeaderLine = this._getAxisValue(endPoint, lineAngle - 90, leaderLine);\n      graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n      var midpoint = lineDistance / 2;\n      var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n      var captionPosition = void 0;\n      var height = font._metrics._getHeight();\n      if (this.caption.type === PdfLineCaptionType.top) {\n        captionPosition = this._getAxisValue(centerPoint, angle + 90, height);\n      } else {\n        captionPosition = this._getAxisValue(centerPoint, angle + 90, height / 2);\n      }\n      graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n      graphics.rotateTransform(-angle);\n      graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [-fontSize[0] / 2, 0, 0, 0], null, parameter.foreBrush);\n      graphics.restore();\n    }\n    if (typeof _isFlatten !== 'undefined' && !_isFlatten || !this._isLoaded) {\n      template._content.dictionary._updated = true;\n      var ref = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(ref, template._content);\n      template._content.reference = ref;\n      var nativeRectangle1 = [this.bounds.x, this.bounds.y + this.bounds.height, this.bounds.width, this.bounds.height];\n      var size = this._page.size;\n      nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n      if (this._isBounds && !this.measure) {\n        nativeRectangle = nativeRectangle1;\n        this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n      } else {\n        this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n      }\n      var ds = 'font:' + font._metrics._postScriptName + ' ' + font._size + 'pt; color:' + this._colorToHex(this.color);\n      this._dictionary.update('DS', ds);\n      if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n        if (this._dictionary.has('AP')) {\n          _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dic = new _PdfDictionary();\n        dic.set('N', ref);\n        dic._updated = true;\n        this._dictionary.set('AP', dic);\n        var measureDictionary = this._createMeasureDictionary(this._unitString);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        if (this._dictionary.has('Measure')) {\n          _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        this._dictionary.update('Measure', reference);\n      }\n      var lineStyles = [];\n      lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n      lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n      this._dictionary.update('LE', lineStyles);\n      if (this._linePoints !== null) {\n        this._dictionary.update('L', this._linePoints);\n      } else {\n        throw new Error('LinePoints cannot be null');\n      }\n      this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)), Number.parseFloat((this.color[1] / 255).toFixed(3)), Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n      var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n      this._dictionary.update('Subtype', new _PdfName('Line'));\n      if (this._text && this._text !== '') {\n        this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n      } else {\n        this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n      }\n      this._dictionary.update('IT', new _PdfName('LineDimension'));\n      this._dictionary.update('LLE', this.leaderExt);\n      this._dictionary.update('LLO', offset);\n      this._dictionary.update('LL', this.leaderLine);\n      this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n      this._dictionary.update('Cap', this.caption.cap);\n      var bounds = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[0] + nativeRectangle[2], nativeRectangle[1] + nativeRectangle[3]];\n      this._dictionary.update('Rect', bounds);\n      this._bounds = {\n        x: bounds[0],\n        y: bounds[1],\n        width: bounds[2],\n        height: bounds[3]\n      };\n    }\n    return template;\n  };\n  PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n    return -(Math.atan2(endPointY - startPointY, endPointX - startPointX) * (180 / Math.PI));\n  };\n  PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n    var bounds = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    if (linePoints && linePoints.length === 4) {\n      var angle = this._getAngle(linePoints);\n      var leaderLines = 0;\n      var lineAngle = 0;\n      if (leaderLine < 0) {\n        leaderLines = -leaderLine;\n        lineAngle = angle + 180;\n      } else {\n        leaderLines = leaderLine;\n        lineAngle = angle;\n      }\n      var x1y1 = [linePoints[0], linePoints[1]];\n      var x2y2 = [linePoints[2], linePoints[3]];\n      if (leaderOffset !== 0) {\n        var offsetPoint1 = this._getAxisValue(x1y1, lineAngle + 90, leaderOffset);\n        var offsetPoint2 = this._getAxisValue(x2y2, lineAngle + 90, leaderOffset);\n        linePoints[0] = offsetPoint1[0];\n        linePoints[1] = offsetPoint1[1];\n        linePoints[2] = offsetPoint2[0];\n        linePoints[3] = offsetPoint2[1];\n      }\n      var startingPoint = this._getAxisValue(x1y1, lineAngle + 90, leaderLines + leaderOffset);\n      var endingPoint = this._getAxisValue(x2y2, lineAngle + 90, leaderLines + leaderOffset);\n      var beginLineLeader = this._getAxisValue(x1y1, lineAngle + 90, leaderLineExt + leaderLines + leaderOffset);\n      var endLineLeader = this._getAxisValue(x2y2, lineAngle + 90, leaderLineExt + leaderLines + leaderOffset);\n      var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n      var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n      var widthX = [];\n      var heightY = [];\n      if (lineAngle >= 45 && lineAngle <= 135 || lineAngle >= 225 && lineAngle <= 315) {\n        widthX[0] = beginLinePoint.y;\n        heightY[0] = beginLinePoint.x;\n        widthX[1] = endLinePoint.y;\n        heightY[1] = endLinePoint.x;\n      } else {\n        widthX[0] = beginLinePoint.x;\n        heightY[0] = beginLinePoint.y;\n        widthX[1] = endLinePoint.x;\n        heightY[1] = endLinePoint.y;\n      }\n      var width = Math.max(widthX[0], widthX[1]);\n      var height = Math.max(heightY[0], heightY[1]);\n      if (width === 0) {\n        width = 1;\n      }\n      if (height === 0) {\n        height = 1;\n      }\n      if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n        startingPoint[0] -= width * borderWidth;\n        endingPoint[0] += width * borderWidth;\n        startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n        startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n        endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n        endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n      } else {\n        startingPoint[0] += width * borderWidth;\n        endingPoint[0] -= width * borderWidth;\n        startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n        startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n        endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n        endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n      }\n      if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n        startingPoint[1] -= height * borderWidth;\n        endingPoint[1] += height * borderWidth;\n        startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n        startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n        endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n        endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n      } else {\n        startingPoint[1] += height * borderWidth;\n        endingPoint[1] -= height * borderWidth;\n        startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n        startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n        endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n        endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n      }\n      bounds = this._getBounds([{\n        x: startingPoint[0],\n        y: startingPoint[1]\n      }, {\n        x: endingPoint[0],\n        y: endingPoint[1]\n      }]);\n    }\n    return bounds;\n  };\n  PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n    var point = {\n      x: 0,\n      y: 0\n    };\n    if (style) {\n      switch (style) {\n        case PdfLineEndingStyle.square:\n        case PdfLineEndingStyle.circle:\n        case PdfLineEndingStyle.diamond:\n          point.x = 3;\n          point.y = 3;\n          break;\n        case PdfLineEndingStyle.openArrow:\n        case PdfLineEndingStyle.closedArrow:\n          point.x = 1;\n          point.y = 5;\n          break;\n        case PdfLineEndingStyle.rOpenArrow:\n        case PdfLineEndingStyle.rClosedArrow:\n          point.x = 9 + borderWidth / 2;\n          point.y = 5 + borderWidth / 2;\n          break;\n        case PdfLineEndingStyle.slash:\n          point.x = 5;\n          point.y = 9;\n          break;\n        case PdfLineEndingStyle.butt:\n          point.x = 1;\n          point.y = 3;\n          break;\n        default:\n          point.x = 0;\n          point.y = 0;\n          break;\n      }\n    }\n    return point;\n  };\n  PdfLineAnnotation.prototype._getBounds = function (points) {\n    var bounds = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    if (points.length > 0) {\n      var xmin = points[0].x;\n      var xmax = points[0].x;\n      var ymin = points[0].y;\n      var ymax = points[0].y;\n      for (var i = 1; i < points.length; ++i) {\n        var point = points[Number.parseInt(i.toString(), 10)];\n        xmin = Math.min(point.x, xmin);\n        xmax = Math.max(point.x, xmax);\n        ymin = Math.min(point.y, ymin);\n        ymax = Math.max(point.y, ymax);\n      }\n      bounds.x = xmin;\n      bounds.y = ymin;\n      bounds.width = xmax - xmin;\n      bounds.height = ymax - ymin;\n    }\n    return bounds;\n  };\n  PdfLineAnnotation.prototype._obtainLineBounds = function () {\n    var bounds = this.bounds;\n    if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n      var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n      var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n      var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n      bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n      bounds = {\n        x: bounds.x - 8,\n        y: bounds.y - 8,\n        width: bounds.width + 2 * 8,\n        height: bounds.height + 2 * 8\n      };\n    }\n    return [bounds.x, bounds.y, bounds.width, bounds.height];\n  };\n  PdfLineAnnotation.prototype._createAppearance = function () {\n    var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n    var parameter = new _PaintParameter();\n    _setMatrix(template, this._getRotationAngle());\n    template._writeTransformation = false;\n    var graphics = template.graphics;\n    var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n    if (this.border.style === PdfBorderStyle.dashed) {\n      pen._dashStyle = PdfDashStyle.dash;\n    } else if (this.border.style === PdfBorderStyle.dot) {\n      pen._dashStyle = PdfDashStyle.dot;\n    }\n    parameter.borderPen = pen;\n    parameter.foreBrush = new PdfBrush(this.color);\n    var brush = new PdfBrush(typeof this.innerColor !== 'undefined' ? this._innerColor : [0, 0, 0]);\n    var font = this._obtainFont();\n    if (typeof font === 'undefined' || font === null || !this._isLoaded && font.size === 1) {\n      font = this._lineCaptionFont;\n      this._pdfFont = font;\n    }\n    if (!this.text && !this._dictionary.has('Contents')) {\n      this.text = this.subject;\n    }\n    var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n    var lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n    if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n      var angle = this._getAngle(this._linePoints);\n      var leaderLine = 0;\n      var lineAngle = 0;\n      if (this.leaderLine < 0) {\n        leaderLine = -this.leaderLine;\n        lineAngle = angle + 180;\n      } else {\n        leaderLine = this.leaderLine;\n        lineAngle = angle;\n      }\n      var offset = typeof this.leaderOffset !== 'undefined' ? leaderLine + this.leaderOffset : leaderLine;\n      var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], lineAngle + 90, offset);\n      var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], lineAngle + 90, offset);\n      var lineDistance = Math.sqrt(Math.pow(endPoint[0] - startPoint[0], 2) + Math.pow(endPoint[1] - startPoint[1], 2));\n      var centerWidth = lineDistance / 2 - (lineWidth / 2 + this.border.width);\n      var first = this._getAxisValue(startPoint, angle, centerWidth);\n      var second = this._getAxisValue(endPoint, angle + 180, centerWidth);\n      var start = this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow || this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow ? this._getAxisValue(startPoint, angle, this.border.width) : startPoint;\n      var end = this.lineEndingStyle.end === PdfLineEndingStyle.openArrow || this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow ? this._getAxisValue(endPoint, angle, -this.border.width) : endPoint;\n      if (this.opacity && this._opacity < 1) {\n        var state = graphics.save();\n        graphics.setTransparency(this._opacity);\n        this._drawLine(graphics, pen, start, end, first, second);\n        graphics.restore(state);\n      } else {\n        this._drawLine(graphics, pen, start, end, first, second);\n      }\n      this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n      var leaderExt = typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0;\n      var beginLineExt = this._getAxisValue(startPoint, lineAngle + 90, leaderExt);\n      graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n      var endLineExt = this._getAxisValue(endPoint, lineAngle + 90, leaderExt);\n      graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n      var beginLeaderLine = this._getAxisValue(startPoint, lineAngle - 90, leaderLine);\n      graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n      var endLeaderLine = this._getAxisValue(endPoint, lineAngle - 90, leaderLine);\n      graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n      var midpoint = lineDistance / 2;\n      var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n      var captionPosition = void 0;\n      var height = font._metrics._getHeight();\n      if (this.caption.type === PdfLineCaptionType.top) {\n        if (this._dictionary.has('Measure')) {\n          captionPosition = this._getAxisValue(centerPoint, angle + 90, 2 * height);\n        } else {\n          captionPosition = this._getAxisValue(centerPoint, angle + 90, height);\n        }\n      } else {\n        if (this._dictionary.has('Measure')) {\n          captionPosition = this._getAxisValue(centerPoint, angle + 90, 3 * (height / 2));\n        } else {\n          captionPosition = this._getAxisValue(centerPoint, angle + 90, height / 2);\n        }\n      }\n      graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n      graphics.rotateTransform(-angle);\n      if (this.caption.cap) {\n        graphics.drawString(this.text, font, [-lineWidth / 2, 0, 0, 0], null, parameter.foreBrush);\n      }\n      graphics.restore();\n      var bounds = this._obtainLineBounds();\n      var rectangleBounds = _fromRectangle({\n        x: bounds[0],\n        y: bounds[1],\n        width: bounds[2],\n        height: bounds[3]\n      });\n      this.bounds = {\n        x: rectangleBounds[0],\n        y: rectangleBounds[1],\n        width: rectangleBounds[2],\n        height: rectangleBounds[3]\n      };\n    }\n    return template;\n  };\n  PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n    if (typeof this.text === 'undefined' || this._text === '' || this.caption.type === PdfLineCaptionType.top || !this.caption.cap && this.caption.type === PdfLineCaptionType.inline) {\n      graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n    } else {\n      graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n      graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n    }\n  };\n  PdfLineAnnotation.prototype._convertToUnit = function () {\n    var points = this._obtainLinePoints();\n    var data = new Array(points.length / 2);\n    var count = 0;\n    for (var j = 0; j < points.length; j = j + 2) {\n      data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], points[j + 1]];\n      count++;\n    }\n    var distance = Math.sqrt(Math.pow(data[1][0] - data[0][0], 2) + Math.pow(data[1][1] - data[0][1], 2));\n    var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n    this._unitString = value.unitString;\n    return new _PdfUnitConvertor()._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n  };\n  PdfLineAnnotation.prototype._obtainLinePoints = function () {\n    var points = [];\n    if (this.linePoints) {\n      for (var i = 0; i < this._linePoints.length; i++) {\n        points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n      }\n    }\n    return points;\n  };\n  return PdfLineAnnotation;\n}(PdfComment);\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */function (_super) {\n  __extends(PdfCircleAnnotation, _super);\n  function PdfCircleAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._unit = PdfMeasurementUnit.centimeter;\n    _this._measureType = PdfCircleMeasurementType.diameter;\n    _this._unitString = '';\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.circleAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n    /**\n     * Gets the flag to have measurement dictionary of the circle annotation.\n     *\n     * @returns {boolean} measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n     * // Gets the flag to have measurement dictionary of the circle annotation.\n     * let measure: boolean = annotation.measure;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n        this._measure = this._dictionary.get('Measure');\n      }\n      return this._measure;\n    },\n    /**\n     * Sets the flag to add measurement dictionary to the annotation.\n     *\n     * @param {boolean} value Measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n     * // Sets the flag to have measurement dictionary of the circle annotation.\n     * annotation.measure = true;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value) {\n        if (!this._isLoaded) {\n          this._measure = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n    /**\n     * Gets the measurement unit of the annotation.\n     *\n     * @returns {PdfMeasurementUnit} Measurement unit.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n     * // Gets the measurement unit of the annotation.\n     * let unit: PdfMeasurementUnit = annotation.unit;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._unit === 'undefined') {\n        this._unit = PdfMeasurementUnit.centimeter;\n        if (this._dictionary.has('Contents')) {\n          var text = this._dictionary.get('Contents');\n          this._unitString = text.substring(text.length - 2);\n          this._unit = _mapMeasurementUnit(this._unitString);\n        }\n      }\n      return this._unit;\n    },\n    /**\n     * Sets the measurement unit of the annotation.\n     *\n     * @param {PdfMeasurementUnit} value Measurement unit.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n     * // Sets the measurement unit of the annotation.\n     * annotation.unit = PdfMeasurementUnit.centimeter;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._measure) {\n        if (!this._isLoaded && typeof value !== 'undefined') {\n          this._unit = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n    /**\n     * Gets the measurement type of the annotation.\n     *\n     * @returns {PdfCircleMeasurementType} Measurement type.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n     * // Gets the measurement type of the annotation.\n     * let type: PdfCircleMeasurementType = annotation.type;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Contents')) {\n        var text = this._dictionary.get('Contents');\n        this._unitString = text.substring(text.length - 2);\n        this._unit = _mapMeasurementUnit(this._unitString);\n        var value = text.substring(0, text.length - 2);\n        var converter = new _PdfUnitConvertor();\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n        if (radius.toString() === value) {\n          this._measureType = PdfCircleMeasurementType.radius;\n        } else {\n          this._measureType = PdfCircleMeasurementType.diameter;\n        }\n      }\n      return this._measureType;\n    },\n    /**\n     * Sets the measurement type of the annotation.\n     *\n     * @param {PdfCircleMeasurementType} value Measurement type.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n     * // Sets the measurement type of the annotation.\n     * annotation.type = PdfCircleMeasurementType.diameter;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._measure) {\n        if (!this._isLoaded && typeof value !== 'undefined') {\n          this._measureType = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfCircleAnnotation._load = function (page, dictionary) {\n    var annot = new PdfCircleAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    if (this._measure) {\n      this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n    } else {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createCircleAppearance();\n      }\n      var size = this._page.size;\n      var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n      this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    }\n  };\n  PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        if (this._dictionary.has('Measure')) {\n          this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        } else {\n          this._appearanceTemplate = this._createCircleAppearance();\n        }\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate && isFlatten) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createCircleAppearance();\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            var reference = dictionary.getRaw('N');\n            if (appearanceStream) {\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n      if (this._isLoaded && !this._dictionary.has('Measure')) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n    }\n    if (!isFlatten && this._setAppearance && !this.measure) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_2 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_2, appearance);\n        this._dictionary.update('AP', reference_2);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n    var borderWidth = this.border.width;\n    var font = this._obtainFont();\n    if (typeof font === 'undefined' || font === null || !this._isLoaded && font.size === 1) {\n      font = this._circleCaptionFont;\n      this._pdfFont = font;\n    }\n    var area = this._convertToUnit();\n    var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n    var str = area.toFixed(2) + ' ' + this._unitString;\n    var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n    var borderPen = new PdfPen(this.color, borderWidth);\n    var nativeRectangle = [this.bounds.x, this.bounds.y + this.bounds.height, this.bounds.width, this.bounds.height];\n    nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n    var template = new PdfTemplate(nativeRectangle, this._crossReference);\n    var parameter = new _PaintParameter();\n    template._writeTransformation = false;\n    var graphics = template.graphics;\n    var width = borderWidth / 2;\n    parameter.borderPen = borderPen;\n    if (this.innerColor) {\n      parameter.backBrush = new PdfBrush(this._innerColor);\n    }\n    parameter.foreBrush = new PdfBrush(this.color);\n    var rect = [nativeRectangle[0], -nativeRectangle[1] - nativeRectangle[3], nativeRectangle[2], nativeRectangle[3]];\n    graphics.save();\n    graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n    if (this._measureType === PdfCircleMeasurementType.diameter) {\n      graphics.save();\n      graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n      var x = nativeRectangle[3] / 2 - fontsize[0] / 2;\n      graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n      graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n      graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n      graphics.restore();\n    } else {\n      graphics.save();\n      graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n      var x = nativeRectangle[2] / 2 + (nativeRectangle[2] / 4 - fontsize[0] / 2);\n      graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n      graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n      graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n      graphics.restore();\n    }\n    graphics.restore();\n    if (typeof _isFlatten !== 'undefined' && !_isFlatten || !this._isLoaded) {\n      if (this._dictionary.has('AP')) {\n        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n      }\n      var dic = new _PdfDictionary();\n      graphics._template._content.dictionary._updated = true;\n      var ref = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(ref, graphics._template._content);\n      graphics._template._content.reference = ref;\n      dic.set('N', ref);\n      dic._updated = true;\n      this._dictionary.set('AP', dic);\n      var size = this._page.size;\n      var rect1 = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n      if (this._isBounds) {\n        nativeRectangle = rect1;\n      }\n      this._dictionary.update('Rect', [rect1[0], rect1[1], rect1[0] + rect1[2], rect1[1] + rect1[3]]);\n      if (this._dictionary.has('Measure')) {\n        _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n      }\n      var measureDictionary = this._createMeasureDictionary(this._unitString);\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, measureDictionary);\n      measureDictionary._updated = true;\n      this._dictionary.update('Measure', reference);\n      this._dictionary.update('Subtype', new _PdfName('Circle'));\n      if (this._text && this._text !== '') {\n        this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n      } else {\n        this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n      }\n      var ds = 'font:' + font._metrics._postScriptName + ' ' + font._size + 'pt; color:' + this._colorToHex(this.color);\n      this._dictionary.update('DS', ds);\n    }\n    return template;\n  };\n  PdfCircleAnnotation.prototype._convertToUnit = function () {\n    var converter = new _PdfUnitConvertor();\n    var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n    this._unitString = value.unitString;\n    var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n    if (this._measureType === PdfCircleMeasurementType.diameter) {\n      radius = 2 * radius;\n    }\n    return radius;\n  };\n  return PdfCircleAnnotation;\n}(PdfComment);\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */function (_super) {\n  __extends(PdfEllipseAnnotation, _super);\n  function PdfEllipseAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.ellipseAnnotation;\n    return _this;\n  }\n  PdfEllipseAnnotation._load = function (page, dictionary) {\n    var annot = new PdfEllipseAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n      this._appearanceTemplate = this._createCircleAppearance();\n    }\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n  };\n  PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createCircleAppearance();\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate && isFlatten) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createCircleAppearance();\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            var reference = dictionary.getRaw('N');\n            if (appearanceStream) {\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n    }\n    if (!isFlatten && this._setAppearance) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_3 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_3, appearance);\n        this._dictionary.update('AP', reference_3);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  return PdfEllipseAnnotation;\n}(PdfComment);\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */function (_super) {\n  __extends(PdfSquareAnnotation, _super);\n  function PdfSquareAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._unit = PdfMeasurementUnit.centimeter;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Square'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.squareAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n    /**\n     * Gets the border effect of the square annotation.\n     *\n     * @returns {PdfBorderEffect} Border effect.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Gets the border effect of the square annotation.\n     * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._borderEffect === 'undefined') {\n        var value = new PdfBorderEffect();\n        value._dictionary = this._dictionary;\n        if (this._dictionary.has('BE')) {\n          var dictionary = this._dictionary.get('BE');\n          value._intensity = dictionary.get('I');\n          value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n        }\n        this._borderEffect = value;\n      }\n      return this._borderEffect;\n    },\n    /**\n     * Sets the border effect of the square annotation.\n     *\n     * @param {PdfBorderEffect} value Border effect.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Sets the border effect of the square annotation.\n     * annotation.borderEffect.intensity = 1;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._borderEffect = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n    /**\n     * Gets the flag to have measurement dictionary of the Square annotation.\n     *\n     * @returns {boolean} measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Gets the flag to have measurement dictionary of the square annotation.\n     * let measure: boolean = annotation.measure;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n        this._measure = this._dictionary.get('Measure');\n      }\n      return this._measure;\n    },\n    /**\n     * Sets the flag to add measurement dictionary to the annotation.\n     *\n     * @param {boolean} value Measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Sets the flag to have measurement dictionary of the square annotation.\n     * annotation.measure = true;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        if (!this._isLoaded) {\n          this._measure = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n    /**\n     * Gets the measurement unit of the annotation.\n     *\n     * @returns {PdfMeasurementUnit} Measurement unit.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Gets the measurement unit of the annotation.\n     * let unit: PdfMeasurementUnit = annotation.unit;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._unit === 'undefined') {\n        this._unit = PdfMeasurementUnit.centimeter;\n        if (this._dictionary.has('Contents')) {\n          var text = this._dictionary.get('Contents');\n          this._unitString = text.substring(text.length - 2);\n          this._unit = _mapMeasurementUnit(this._unitString);\n        }\n      }\n      return this._unit;\n    },\n    /**\n     * Sets the measurement unit of the annotation.\n     *\n     * @param {PdfMeasurementUnit} value Measurement unit.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Sets the measurement unit of the annotation.\n     * annotation.unit = PdfMeasurementUnit.centimeter;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._measure) {\n        if (!this._isLoaded && typeof value !== 'undefined') {\n          this._unit = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfSquareAnnotation._load = function (page, dictionary) {\n    var annot = new PdfSquareAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    if (this._measure) {\n      this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n    } else {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n      }\n      var size = this._page.size;\n      var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n      this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n      if (typeof this._intensity === 'undefined' && typeof this._borderEffect !== 'undefined' && this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.set('I', this.borderEffect._intensity);\n        if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n          dictionary.set('S', _PdfName.get('C'));\n        }\n        this._dictionary.update('BE', dictionary);\n      }\n    }\n  };\n  PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        if (this._dictionary.has('Measure')) {\n          this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        } else {\n          this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate && isFlatten) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            var reference = dictionary.getRaw('N');\n            if (appearanceStream) {\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n      if (this._isLoaded && !this._dictionary.has('Measure')) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n    }\n    if (!isFlatten && this._setAppearance && !this.measure) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_4 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_4, appearance);\n        this._dictionary.update('AP', reference_4);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n    var borderWidth = this.border.width;\n    var font = this._obtainFont();\n    if (typeof font === 'undefined' || font === null || !this._isLoaded && font.size === 1) {\n      font = this._circleCaptionFont;\n      this._pdfFont = font;\n    }\n    var area = this._calculateAreaOfSquare();\n    var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n    var str = area.toFixed(2) + ' sq ' + this._unitString;\n    var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n    var borderPen = new PdfPen(this.color, borderWidth);\n    var backBrush;\n    if (this.innerColor) {\n      backBrush = new PdfBrush(this._innerColor);\n    }\n    var nativeRectangle = [this.bounds.x, this.bounds.y + this.bounds.height, this.bounds.width, this.bounds.height];\n    var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n    var appearance = new PdfAppearance(this, appearanceBounds);\n    nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n    appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n    var template = appearance.normal;\n    var parameter = new _PaintParameter();\n    template._writeTransformation = false;\n    var graphics = appearance.normal.graphics;\n    var width = borderWidth / 2;\n    parameter.borderPen = borderPen;\n    parameter.backBrush = backBrush;\n    parameter.foreBrush = new PdfBrush(this.color);\n    var rect = [nativeRectangle[0], -nativeRectangle[1] - nativeRectangle[3], nativeRectangle[2], nativeRectangle[3]];\n    graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n    graphics.save();\n    graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n    var x = nativeRectangle[2] / 2 - fontsize[0] / 2;\n    var y = nativeRectangle[3] / 2 - fontsize[1] / 2;\n    graphics.translateTransform(x, -y - font._metrics._getHeight());\n    graphics.drawString(area.toFixed(2) + ' sq ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n    graphics.restore();\n    if (typeof _isFlatten !== 'undefined' && !_isFlatten || !this._isLoaded) {\n      if (this._dictionary.has('AP')) {\n        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n      }\n      var dic = new _PdfDictionary();\n      var tem = graphics._template._content;\n      tem.dictionary._updated = true;\n      var ref = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(ref, tem);\n      graphics._template._content.reference = ref;\n      dic.set('N', ref);\n      dic._updated = true;\n      this._dictionary.set('AP', dic);\n      var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n      var size = this._page.size;\n      nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n      nativeRectangle1[2] = this.bounds.x + this.bounds.width;\n      nativeRectangle1[3] = size[1] - this.bounds.y;\n      if (this._isBounds) {\n        nativeRectangle = nativeRectangle1;\n      }\n      this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n      if (this._dictionary.has('Measure')) {\n        _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n      }\n      var reference = this._crossReference._getNextReference();\n      var measureDictionary = this._createMeasureDictionary(this._unitString);\n      this._crossReference._cacheMap.set(reference, measureDictionary);\n      measureDictionary._updated = true;\n      this._dictionary.update('Measure', reference);\n      var ds = 'font:' + font._metrics._postScriptName + ' ' + font._size + 'pt; color:' + this._colorToHex(this.color);\n      this._dictionary.update('DS', ds);\n      if (this._text && this._text !== '') {\n        this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n      } else {\n        this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n      }\n      this._dictionary.update('Subject', 'Area Measurement');\n      if (typeof this.subject === 'undefined') {\n        this._dictionary.update('Subject', 'Area Measurement');\n      }\n      this._dictionary.update('MeasurementTypes', 129);\n      this._dictionary.update('Subtype', new _PdfName('Square'));\n      this._dictionary.update('IT', new _PdfName('SquareDimension'));\n      var elements = this._dictionary.getArray('Rect');\n      var vertices = new Array(elements.length * 2);\n      vertices[0] = elements[0];\n      vertices[1] = elements[3];\n      vertices[2] = elements[0];\n      vertices[3] = elements[1];\n      vertices[4] = elements[2];\n      vertices[5] = elements[1];\n      vertices[6] = elements[2];\n      vertices[7] = elements[3];\n      this._dictionary.update('Vertices', vertices);\n    }\n    return template;\n  };\n  PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n    var area;\n    var converter = new _PdfUnitConvertor();\n    var value;\n    if (this.bounds.width === this.bounds.height) {\n      value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n      this._unitString = value.unitString;\n      var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n      area = width * width;\n    } else {\n      value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n      this._unitString = value.unitString;\n      var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n      value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n      this._unitString = value.unitString;\n      var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n      area = width * height;\n    }\n    return area;\n  };\n  return PdfSquareAnnotation;\n}(PdfComment);\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */function (_super) {\n  __extends(PdfRectangleAnnotation, _super);\n  function PdfRectangleAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Square'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.rectangleAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n    /**\n     * Gets the border effect of the rectangle annotation.\n     *\n     * @returns {PdfBorderEffect} Border effect.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n     * // Gets the border effect of the rectangle annotation.\n     * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._borderEffect === 'undefined') {\n        var value = new PdfBorderEffect();\n        value._dictionary = this._dictionary;\n        if (this._dictionary.has('BE')) {\n          var dictionary = this._dictionary.get('BE');\n          value._intensity = dictionary.get('I');\n          value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n        }\n        this._borderEffect = value;\n      }\n      return this._borderEffect;\n    },\n    /**\n     * Sets the border effect of the rectangle annotation.\n     *\n     * @param {PdfBorderEffect} value Border effect.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n     * // Sets the border effect of rectangle annotation.\n     * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._borderEffect = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfRectangleAnnotation._load = function (page, dictionary) {\n    var annot = new PdfRectangleAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dic = new _PdfDictionary(this._crossReference);\n      dic.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dic);\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n      this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n    }\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    if (typeof this._intensity === 'undefined' && typeof this._borderEffect !== 'undefined' && this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n      var dic = new _PdfDictionary(this._crossReference);\n      dic.set('I', this.borderEffect._intensity);\n      if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n        dic.set('S', _PdfName.get('C'));\n      }\n      this._dictionary.update('BE', dic);\n    }\n  };\n  PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate && isFlatten) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            var reference = dictionary.getRaw('N');\n            if (appearanceStream) {\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      if (isNormalMatrix && this._page.rotation !== PdfRotationAngle.angle0 || this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      }\n    }\n    if (!isFlatten && this._setAppearance) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_5 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_5, appearance);\n        this._dictionary.update('AP', reference_5);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n    var isValidMatrix = true;\n    var pointF = bounds;\n    if (dictionary && dictionary.has('Matrix')) {\n      var box = dictionary.getArray('BBox');\n      var matrix = dictionary.getArray('Matrix');\n      if (matrix && box && matrix.length > 3 && box.length > 2) {\n        if (typeof matrix[0] !== 'undefined' && typeof matrix[1] !== 'undefined' && typeof matrix[2] !== 'undefined' && typeof matrix[3] !== 'undefined') {\n          if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n            if (typeof box[0] !== 'undefined' && typeof box[1] !== 'undefined' && typeof box[2] !== 'undefined' && typeof box[3] !== 'undefined') {\n              if (Math.round(box[0]) !== Math.round(-matrix[4]) && Math.round(box[1]) !== Math.round(-matrix[5]) || box[0] === 0 && Math.round(-matrix[4]) === 0) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                  graphics.setTransparency(this._opacity);\n                }\n                pointF.x -= box[0];\n                pointF.y += box[1];\n                graphics._drawTemplate(appearanceTemplate, pointF);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n                isValidMatrix = false;\n              }\n            }\n          }\n        }\n      }\n    }\n    return isValidMatrix;\n  };\n  return PdfRectangleAnnotation;\n}(PdfComment);\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */function (_super) {\n  __extends(PdfPolygonAnnotation, _super);\n  function PdfPolygonAnnotation(points) {\n    var _this = _super.call(this) || this;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n    if (typeof points !== 'undefined') {\n      _this._points = points;\n    }\n    _this._type = _PdfAnnotationType.polygonAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n    /**\n     * Gets the border effect of the polygon annotation.\n     *\n     * @returns {PdfBorderEffect} Border effect.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n     * // Gets the border effect of the polygon annotation.\n     * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._borderEffect === 'undefined') {\n        var value = new PdfBorderEffect();\n        value._dictionary = this._dictionary;\n        if (this._dictionary.has('BE')) {\n          var dictionary = this._dictionary.get('BE');\n          value._intensity = dictionary.get('I');\n          value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n        }\n        this._borderEffect = value;\n      }\n      return this._borderEffect;\n    },\n    /**\n     * Sets the border effect of the polygon annotation.\n     *\n     * @param {PdfBorderEffect} value Border effect.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n     * // Sets the border effect of the polygon annotation\n     * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._borderEffect = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n    /**\n     * Gets the line extension of the polygon annotation.\n     *\n     * @returns {number} Line extension.\n     *  ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n     * // Gets the line extension of the polygon annotation\n     * let lineExtension: number = annotation.lineExtension;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n        var lineExt = this._dictionary.get('LLE');\n        if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n          this._lineExtension = lineExt;\n        }\n      }\n      return this._lineExtension;\n    },\n    /**\n     * Sets the line extension of the polygon annotation.\n     *\n     * @param {number} value Line extension.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n     * // Sets the line extension of the polygon annotation\n     * annotation.lineExtension = 5;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!Number.isNaN(value)) {\n        if (value >= 0) {\n          this._dictionary.update('LLE', value);\n          this._lineExtension = value;\n        } else {\n          throw new Error('LineExtension should be non negative number');\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  //Implementation\n  PdfPolygonAnnotation._load = function (page, dictionary) {\n    var annot = new PdfPolygonAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this._points === 'undefined' || this._points === null) {\n      throw new Error('Points cannot be null or undefined');\n    }\n    if (!this._dictionary.has('LLE')) {\n      this.lineExtension = 0;\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dic = new _PdfDictionary(this._crossReference);\n      dic.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dic);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    var array = [];\n    for (var i = 0; i < this._points.length; i++) {\n      var value = this._points[Number.parseInt(i.toString(), 10)];\n      array.push(value);\n    }\n    if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n      array[array.length] = this._points[0];\n      array[array.length] = this._points[1];\n    }\n    this._points = array;\n    var polygonBounds = this._getBoundsValue(this._points);\n    var bounds = [polygonBounds.x, polygonBounds.y, polygonBounds.x + polygonBounds.width, polygonBounds.y + polygonBounds.height];\n    this._dictionary.update('Rect', bounds);\n    this._dictionary.update('LLE', this._lineExtension);\n    if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n      this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n    }\n    this._dictionary.update('Vertices', this._points);\n    if (typeof this._intensity === 'undefined' && typeof this._borderEffect !== 'undefined' && this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n      var dic = new _PdfDictionary(this._crossReference);\n      dic.set('I', this.borderEffect._intensity);\n      if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n        dic.set('S', _PdfName.get('C'));\n      }\n      this._dictionary.update('BE', dic);\n    }\n  };\n  PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate && isFlatten) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            var reference = dictionary.getRaw('N');\n            if (appearanceStream) {\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      }\n    }\n    if (isFlatten) {\n      if (this._appearanceTemplate) {\n        var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n        if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n          var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n          if (box && box.length >= 2) {\n            this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n          }\n        }\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      } else {\n        this._removeAnnotationFromPage(this._page, this);\n      }\n    }\n    if (!isFlatten && this._setAppearance) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_6 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_6, appearance);\n        this._dictionary.update('AP', reference_6);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n    if (typeof flatten !== 'undefined' && flatten) {\n      var borderPen = void 0;\n      if (this.color && this.border.width > 0) {\n        borderPen = new PdfPen(this.color, this.border.width);\n      }\n      var backgroundBrush = void 0;\n      if (this.innerColor) {\n        backgroundBrush = new PdfBrush(this.innerColor);\n      }\n      var graphics = this._page.graphics;\n      if (borderPen || backgroundBrush) {\n        var state = void 0;\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n          state = graphics.save();\n          graphics.setTransparency(this._opacity);\n        }\n        if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n          var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n          var graphicsPath = new _PdfPath();\n          graphicsPath._addPolygon(this._getLinePoints());\n          this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n        } else {\n          graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n          graphics.restore(state);\n        }\n      }\n      return graphics._template;\n    } else {\n      var boundsValue = void 0;\n      var rect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n      if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n        this._points = this._dictionary.get('Vertices');\n        boundsValue = this._getBoundsValue(this._points);\n      } else {\n        boundsValue = this._getBoundsValue(this._points);\n      }\n      if (typeof this._borderEffect !== 'undefined' && typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 && this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        rect.x = boundsValue.x - this.borderEffect.intensity * 5 - this.border.width;\n        rect.y = boundsValue.y - this.borderEffect.intensity * 5 - this.border.width;\n        rect.width = boundsValue.width + this.borderEffect.intensity * 10 + 2 * this.border.width;\n        rect.height = boundsValue.height + this.borderEffect.intensity * 10 + 2 * this.border.width;\n      } else {\n        rect.x = boundsValue.x - this.border.width;\n        rect.y = boundsValue.y - this.border.width;\n        rect.width = boundsValue.width + 2 * this.border.width;\n        rect.height = boundsValue.height + 2 * this.border.width;\n      }\n      var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n      appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n      var template = appearance.normal;\n      _setMatrix(template, this._getRotationAngle());\n      template._writeTransformation = false;\n      var graphics = appearance.normal.graphics;\n      var parameter = new _PaintParameter();\n      if (this.innerColor) {\n        parameter.backBrush = new PdfBrush(this._innerColor);\n      }\n      if (this.border.width > 0 && this.color) {\n        parameter.borderPen = new PdfPen(this._color, this.border.width);\n      }\n      if (this.color) {\n        parameter.foreBrush = new PdfBrush(this._color);\n      }\n      if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n        graphics.save();\n        graphics.setTransparency(this._opacity);\n      } else {\n        graphics.save();\n      }\n      if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n        var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addPolygon(this._getLinePoints());\n        this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n      } else {\n        graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n      }\n      if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n        graphics.restore();\n      }\n      graphics.restore();\n      if (this._isBounds) {\n        template._content.dictionary._updated = true;\n        this._dictionary.update('LLE', this.lineExtension);\n        this._dictionary.update('Vertices', this._points);\n      }\n      this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n      return template;\n    }\n  };\n  PdfPolygonAnnotation.prototype._getLinePoints = function () {\n    var polygonPoints;\n    var pageSize = this._page.size;\n    var pageHeight = pageSize[1];\n    var pageWidth = pageSize[0];\n    if (this._dictionary.has('Vertices') && !this._isBounds) {\n      var rotation = void 0;\n      if (this._page._pageDictionary.has('Rotate')) {\n        rotation = this._page._pageDictionary.get('Rotate');\n      }\n      if (this._page.rotation) {\n        if (this._page.rotation === PdfRotationAngle.angle90) {\n          rotation = 90;\n        } else if (this._page.rotation === PdfRotationAngle.angle180) {\n          rotation = 180;\n        } else if (this._page.rotation === PdfRotationAngle.angle270) {\n          rotation = 270;\n        }\n      }\n      var linePoints = this._dictionary.getArray('Vertices');\n      if (linePoints) {\n        var points_1 = [];\n        linePoints.forEach(function (value) {\n          points_1.push(value);\n        });\n        polygonPoints = [];\n        for (var j = 0; j < points_1.length; j = j + 2) {\n          polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], pageHeight - points_1[j + 1]]);\n        }\n        if (rotation) {\n          if (rotation === 270) {\n            for (var k = 0; k < polygonPoints.length; k++) {\n              var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n              polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n              polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n            }\n          } else if (rotation === 90) {\n            for (var k = 0; k < polygonPoints.length; k++) {\n              var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n              if (this._page._origin[1] !== 0) {\n                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight - (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n              } else {\n                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight - polygonPoints[Number.parseInt(k.toString(), 10)][1];\n              }\n              polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n            }\n          } else if (rotation === 180) {\n            for (var k = 0; k < polygonPoints.length; k++) {\n              var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n              polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n              polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight - polygonPoints[Number.parseInt(k.toString(), 10)][1];\n            }\n          }\n        }\n      }\n    } else if (this._points !== null) {\n      var points_2 = [];\n      this._points.forEach(function (value) {\n        points_2.push(value);\n      });\n      polygonPoints = [];\n      for (var j = 0; j < this._points.length; j = j + 2) {\n        if (this.flatten) {\n          polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], pageHeight - points_2[j + 1]]);\n        } else {\n          polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n        }\n      }\n    }\n    return polygonPoints;\n  };\n  return PdfPolygonAnnotation;\n}(PdfComment);\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */function (_super) {\n  __extends(PdfPolyLineAnnotation, _super);\n  function PdfPolyLineAnnotation(points) {\n    var _this = _super.call(this) || this;\n    _this._beginLine = PdfLineEndingStyle.none;\n    _this._endLine = PdfLineEndingStyle.none;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n    if (typeof points !== 'undefined') {\n      _this._points = points;\n    }\n    _this._type = _PdfAnnotationType.polyLineAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n    /**\n     * Gets the begin line ending style of the annotation.\n     *\n     * @returns {PdfLineEndingStyle} Begin line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n     * // Gets the begin line ending style of the annotation.\n     * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('LE')) {\n        var lineStyles = this._dictionary.getArray('LE');\n        if (lineStyles && Array.isArray(lineStyles)) {\n          this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n        }\n      }\n      return this._beginLine;\n    },\n    /**\n     * Sets the begin line ending style of the annotation.\n     *\n     * @param {PdfLineEndingStyle} value Begin line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n     * // Sets the begin line ending style of the annotation.\n     * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._beginLine) {\n        this._beginLine = value;\n        if (this._dictionary) {\n          var lineStyle = [];\n          lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n          lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n          this._dictionary.update('LE', lineStyle);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n    /**\n     * Gets the end line ending style of the annotation.\n     *\n     * @returns {PdfLineEndingStyle} End line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n     * // Gets the end line ending style of the annotation.\n     * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('LE')) {\n        var lineStyles = this._dictionary.getArray('LE');\n        if (lineStyles && Array.isArray(lineStyles)) {\n          this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n        }\n      }\n      return this._endLine;\n    },\n    /**\n     * Sets the end line ending style of the annotation.\n     *\n     * @param {PdfLineEndingStyle} value End line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n     * // Sets the end line ending style of the annotation.\n     * annotation.endLineStyle = PdfLineEndingStyle.square;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._endLine) {\n        this._endLine = value;\n        if (this._dictionary) {\n          var lineStyle = [];\n          lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n          lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n          this._dictionary.update('LE', lineStyle);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n    /**\n     * Gets the line extension of the square annotation.\n     *\n     * @returns {number} Line extension.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n     * // Gets the line extension of annotation.\n     * let lineExtension: number = annotation.lineExtension;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n        var lineExt = this._dictionary.get('LLE');\n        if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n          this._lineExtension = lineExt;\n        }\n      }\n      return this._lineExtension;\n    },\n    /**\n     * Sets the line extension of the square annotation.\n     *\n     * @param {number} value Line extension.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n     * // Sets the line extension of the annotation.\n     * annotation.lineExtension = 3;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!Number.isNaN(value)) {\n        if (value >= 0) {\n          this._dictionary.update('LLE', value);\n          this._lineExtension = value;\n        } else {\n          throw new Error('LineExtension should be non negative number');\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfPolyLineAnnotation._load = function (page, dictionary) {\n    var annot = new PdfPolyLineAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this._points === 'undefined' || this._points === null) {\n      throw new Error('Points cannot be null or undefined');\n    }\n    if (!this._dictionary.has('LLE')) {\n      this.lineExtension = 0;\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    var points = this._getLinePoints();\n    var pathTypes = [];\n    pathTypes.push(0);\n    for (var i = 1; i < points.length; i++) {\n      pathTypes.push(1);\n    }\n    this._polylinePoints = points;\n    this._pathTypes = pathTypes;\n    var path = new _PdfPath();\n    path._points = points;\n    path._pathTypes = pathTypes;\n    this._dictionary.update('Vertices', this._points);\n    var lineStyle = [];\n    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n    this._dictionary.update('LE', lineStyle);\n    this._dictionary.update('LLE', this._lineExtension);\n    var polyLineBounds = this._getBoundsValue(this._points);\n    var rectangle = [polyLineBounds.x, polyLineBounds.y, polyLineBounds.x + polyLineBounds.width, polyLineBounds.y + polyLineBounds.height];\n    this._dictionary.update('Rect', rectangle);\n    if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n      this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n    }\n  };\n  PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate && isFlatten) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            var reference = dictionary.getRaw('N');\n            if (appearanceStream) {\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      }\n    }\n    if (isFlatten) {\n      if (this._appearanceTemplate) {\n        var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n        if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n          var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n          if (box) {\n            this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n          }\n        }\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      } else {\n        this._removeAnnotationFromPage(this._page, this);\n      }\n    }\n    if (!isFlatten && this._setAppearance) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_7 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_7, appearance);\n        this._dictionary.update('AP', reference_7);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n    if (typeof flatten !== 'undefined' && flatten) {\n      var borderPen = void 0;\n      if (this.color && this.border.width > 0) {\n        borderPen = new PdfPen(this.color, this.border.width);\n      }\n      var graphics = this._page.graphics;\n      if (borderPen) {\n        var state = void 0;\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n          state = graphics.save();\n          graphics.setTransparency(this._opacity);\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        if (points && points.length > 0) {\n          for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n          }\n          var path = new _PdfPath();\n          path._points = points;\n          path._pathTypes = pathTypes;\n          graphics._drawPath(path, borderPen);\n          if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore(state);\n          }\n        }\n      }\n      return graphics._template;\n    } else {\n      var boundsValue = void 0;\n      var rect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n      if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n        this._points = this._dictionary.get('Vertices');\n        boundsValue = this._getBoundsValue(this._points);\n      } else {\n        boundsValue = this._getBoundsValue(this._points);\n      }\n      rect.x = boundsValue.x - this.border.width;\n      rect.y = boundsValue.y - this.border.width;\n      rect.width = boundsValue.width + 2 * this.border.width;\n      rect.height = boundsValue.height + 2 * this.border.width;\n      var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n      appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n      var template = appearance.normal;\n      _setMatrix(template, this._getRotationAngle());\n      template._writeTransformation = false;\n      var graphics = appearance.normal.graphics;\n      var parameter = new _PaintParameter();\n      if (this.innerColor) {\n        parameter.backBrush = new PdfBrush(this._innerColor);\n      }\n      if (this.border.width > 0 && this.color) {\n        parameter.borderPen = new PdfPen(this._color, this.border.width);\n      }\n      if (this.color) {\n        parameter.foreBrush = new PdfBrush(this._color);\n      }\n      if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n        graphics.save();\n        graphics.setTransparency(this._opacity);\n      } else {\n        graphics.save();\n      }\n      var path = new _PdfPath();\n      if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n        path._points = this._polylinePoints;\n      } else {\n        path._points = this._getLinePoints();\n      }\n      if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n        path._pathTypes = this._pathTypes;\n      } else {\n        this._pathTypes = [];\n        this._pathTypes.push(0);\n        for (var i = 1; i < path._points.length; i++) {\n          this._pathTypes.push(1);\n        }\n        path._pathTypes = this._pathTypes;\n      }\n      graphics._drawPath(path, parameter.borderPen, parameter.backBrush);\n      if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n        graphics.restore();\n      }\n      graphics.restore();\n      if (this._isBounds) {\n        template._content.dictionary._updated = true;\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this.lineExtension);\n        this._dictionary.update('Vertices', this._points);\n      }\n      this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n      return template;\n    }\n  };\n  PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n    var pageSize = this._page.size;\n    var pageHeight = pageSize[1];\n    var points;\n    if (this._dictionary.has('Vertices') && !this._isBounds) {\n      var linePoints = this._dictionary.getArray('Vertices');\n      if (linePoints) {\n        points = [];\n        for (var j = 0; j < linePoints.length; j = j + 2) {\n          points.push([linePoints[Number.parseInt(j.toString(), 10)], pageHeight - linePoints[j + 1]]);\n        }\n      }\n    } else if (this._points) {\n      var polyLinepoints_1 = [];\n      this._points.forEach(function (value) {\n        polyLinepoints_1.push(value);\n      });\n      points = [];\n      for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n        if (this.flatten) {\n          points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], pageHeight - polyLinepoints_1[j + 1]]);\n        } else {\n          points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n        }\n      }\n    }\n    return points;\n  };\n  return PdfPolyLineAnnotation;\n}(PdfComment);\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */function (_super) {\n  __extends(PdfAngleMeasurementAnnotation, _super);\n  function PdfAngleMeasurementAnnotation(points) {\n    var _this = _super.call(this) || this;\n    _this._linePoints = [];\n    _this._firstIntersectionPoint = [0, 0];\n    _this._secondIntersectionPoint = [0, 0];\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n    if (typeof points !== 'undefined' && points.length > 0) {\n      if (points.length > 6) {\n        throw new Error('Points length should not be greater than 3');\n      }\n      _this._pointArray = points;\n      for (var i = 0; i < points.length; i++) {\n        _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n        _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n      }\n    }\n    _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n    /**\n     * Gets the flag to have measurement dictionary of the angle measurement annotation.\n     *\n     * @returns {boolean} measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n     * // Gets the flag to have measurement dictionary of the angle annotation.\n     * let measure: boolean = annotation.measure;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n        this._measure = this._dictionary.get('Measure');\n      }\n      return this._measure;\n    },\n    /**\n     * Sets the flag to add measurement dictionary to the annotation.\n     *\n     * @param {boolean} value Measure.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n     * // Sets the flag to add measurement dictionary to the annotation.\n     * annotation.measure = true;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value && !this._isLoaded) {\n        this._measure = value;\n        this.caption.cap = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n    var annot = new PdfAngleMeasurementAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n    if (!this._pointArray) {\n      throw new Error('Points cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    this._appearanceTemplate = this._createAngleMeasureAppearance();\n  };\n  PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (!isFlatten && this._setAppearance) {\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess();\n      if (!this._appearanceTemplate) {\n        if (isFlatten) {\n          if (!this._dictionary.has('AP')) {\n            this._appearanceTemplate = this._createAngleMeasureAppearance();\n          } else {\n            var dictionary = this._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n              var appearanceStream = dictionary.get('N');\n              var reference = dictionary.getRaw('N');\n              if (appearanceStream) {\n                if (reference) {\n                  appearanceStream.reference = reference;\n                }\n                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n        var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n        if (box) {\n          this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n      }\n      this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n    }\n  };\n  PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n    var borderWidth = this.border.width;\n    var font = this._obtainFont();\n    if (typeof font === 'undefined' || font === null || !this._isLoaded && font.size === 1) {\n      font = this._circleCaptionFont;\n      this._pdfFont = font;\n    }\n    var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n    var angle = this._calculateAngle() * (180.0 / Math.PI);\n    if (angle < 0) {\n      angle = -angle;\n    }\n    if (angle > 180) {\n      angle = 360 - angle;\n    }\n    this._dictionary.update('Vertices', this._linePoints);\n    var ds = 'font:' + font._metrics._postScriptName + ' ' + font._size + 'pt; color:' + this._colorToHex(this.color);\n    this._dictionary.update('DS', ds);\n    if (this.text === ' ' + angle.toFixed(2) + '°') {\n      this._dictionary.update('Contents', this.text);\n    } else if (this.text) {\n      this._dictionary.update('Contents', this.text);\n    }\n    if (typeof this.subject === 'undefined') {\n      this._dictionary.update('Subject', 'Angle Measurement');\n    }\n    this._dictionary.update('MeasurementTypes', 1152);\n    this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n    this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n    var measureDictionary = new _PdfDictionary();\n    var d = [];\n    var t = [];\n    var a = [];\n    var x = [];\n    var v = [];\n    measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n    measureDictionary.set('R', '1 in = 1 in');\n    measureDictionary.set('Subtype', 'RL');\n    measureDictionary.set('TargetUnitConversion', 0.1388889);\n    var dDictionary = new _PdfDictionary();\n    dDictionary.set('U', 'in');\n    dDictionary.set('Type', 'NumberFormat');\n    dDictionary.set('C', 1);\n    dDictionary.set('D', 1);\n    dDictionary.set('SS', '');\n    d.push(dDictionary);\n    var tDictionary = new _PdfDictionary();\n    tDictionary.set('U', '°');\n    tDictionary.set('Type', 'NumberFormat');\n    tDictionary.set('C', 1);\n    tDictionary.set('D', 1);\n    tDictionary.set('FD', true);\n    tDictionary.set('SS', '');\n    t.push(tDictionary);\n    var aDictionary = new _PdfDictionary();\n    aDictionary.set('U', 'sq in');\n    aDictionary.set('Type', 'NumberFormat');\n    aDictionary.set('C', 1);\n    aDictionary.set('D', 1);\n    aDictionary.set('FD', true);\n    aDictionary.set('SS', '');\n    a.push(aDictionary);\n    var vDictionary = new _PdfDictionary();\n    vDictionary.set('U', 'cu in');\n    vDictionary.set('Type', 'NumberFormat');\n    vDictionary.set('C', 1);\n    vDictionary.set('D', 1);\n    vDictionary.set('FD', true);\n    vDictionary.set('SS', '');\n    v.push(vDictionary);\n    var xDictionary = new _PdfDictionary();\n    xDictionary.set('U', 'in');\n    xDictionary.set('Type', 'NumberFormat');\n    xDictionary.set('C', 1);\n    xDictionary.set('D', 1);\n    xDictionary.set('SS', '');\n    x.push(xDictionary);\n    measureDictionary.set('D', d);\n    measureDictionary.set('T', t);\n    measureDictionary.set('A', a);\n    measureDictionary.set('X', x);\n    measureDictionary.set('V', v);\n    if (this._dictionary.has('Measure')) {\n      _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n    }\n    var reference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(reference, measureDictionary);\n    measureDictionary._updated = true;\n    this._dictionary.update('Measure', reference);\n    var rectValue = [0, 0, 0, 0];\n    var boundsValue = this._getAngleBoundsValue();\n    var points = this._obtainLinePoints();\n    var pathTypes = [];\n    pathTypes.push(0);\n    for (var i = 1; i < points.length; i++) {\n      pathTypes.push(1);\n    }\n    var graphicspath = new _PdfPath();\n    graphicspath._addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n    var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n    var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2, (this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2];\n    var center = [points[1][0], -points[1][1]];\n    var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + this._sweepAngle / 2) * (Math.PI / 180.0));\n    var y = points[1][1] + this._radius * Math.sin((this._startAngle + this._sweepAngle / 2) * (Math.PI / 180.0));\n    var start = [midPoint[0], midPoint[1]];\n    var xDiff = start[0] - center[0];\n    var yDiff = start[1] - center[1];\n    var midpointAngle = Math.atan2(yDiff, xDiff) * (180.0 / Math.PI);\n    var left = false;\n    var right = false;\n    var up = false;\n    var down = false;\n    if (midpointAngle > 0) {\n      if (midpointAngle < 45) {\n        right = true;\n      } else if (midpointAngle >= 45 && midpointAngle < 135) {\n        up = true;\n      } else {\n        left = true;\n      }\n    } else {\n      midpointAngle = -midpointAngle;\n      if (midpointAngle === 0) {\n        new _PdfPath()._addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n      } else if (midpointAngle < 45) {\n        right = true;\n      } else if (midpointAngle >= 45 && midpointAngle < 135) {\n        down = true;\n      } else {\n        left = true;\n      }\n    }\n    if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n      rectValue = boundsValue;\n      this.bounds = {\n        x: boundsValue[0],\n        y: boundsValue[1],\n        width: boundsValue[2],\n        height: boundsValue[3]\n      };\n    }\n    var path = new _PdfPath();\n    path._pathTypes = pathTypes;\n    path._points = points;\n    this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n    var appearance = new PdfAppearance(this, boundsValue);\n    appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n    var template = appearance.normal;\n    template._writeTransformation = false;\n    var graphics = appearance.normal.graphics;\n    var width = borderWidth / 2;\n    var pen = new PdfPen(this._color, width);\n    if (this.border.style === PdfBorderStyle.dashed) {\n      pen._dashStyle = PdfDashStyle.dash;\n    }\n    var brush = new PdfBrush(this._color);\n    graphics.save();\n    path._addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n    graphics._drawPath(path, pen);\n    if (up) {\n      graphics.drawString(angle.toString() + '°', font, [x1 - size[0] / 2, -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n    } else if (right) {\n      graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n    } else if (left) {\n      graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n    } else if (down) {\n      graphics.drawString(angle.toString() + '°', font, [x1 - size[0] / 2, y + 2, 0, 0], null, brush);\n    }\n    graphics.restore();\n    graphics._template._content.dictionary._updated = true;\n    var reference1 = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(reference1, graphics._template._content);\n    graphics._template._content.reference = reference1;\n    if (this._dictionary.has('AP')) {\n      _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n    }\n    var appearanceDictionary = new _PdfDictionary();\n    appearanceDictionary.set('N', reference1);\n    appearanceDictionary._updated = true;\n    this._dictionary.set('AP', appearanceDictionary);\n    return template;\n  };\n  PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n    var points = this._obtainLinePoints();\n    for (var i = 0; i < points.length; i++) {\n      points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n    }\n    var path = new _PdfPath();\n    path._points = points;\n    path._pathTypes = [0, 1, 1];\n    return path._getBounds();\n  };\n  PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n    var points;\n    var collection;\n    if (this._linePoints) {\n      points = new Array(this._linePoints.length);\n      for (var i = 0; i < this._linePoints.length; i++) {\n        points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n      }\n      collection = new Array(points.length / 2);\n      var count = 0;\n      for (var j = 0; j < points.length; j = j + 2) {\n        collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n        count++;\n      }\n    }\n    return collection;\n  };\n  PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n    var points = [0, 0];\n    if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n      if (this._dictionary.has('Vertices')) {\n        this._linePoints = this._dictionary.get('Vertices');\n      }\n    }\n    for (var i = 0; i < this._linePoints.length; i++) {\n      points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n    }\n    var collection = [];\n    for (var j = 0; j < points.length; j = j + 2) {\n      collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n    }\n    var point1 = collection[0];\n    var point2 = collection[1];\n    var point3 = collection[2];\n    var firstLineDistance = Math.sqrt(Math.pow(point2[0] - point1[0], 2) + Math.pow(point2[1] - point1[1], 2));\n    var secondLineDistance = Math.sqrt(Math.pow(point2[0] - point3[0], 2) + Math.pow(point2[1] - point3[1], 2));\n    this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n    var graphicsPath = new _PdfPath();\n    graphicsPath._points = collection;\n    graphicsPath._pathTypes = [0, 1, 1];\n    var intersectionPoint1;\n    var intersectionPoint2;\n    var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n    intersectionPoint1 = value.first;\n    intersectionPoint2 = value.second;\n    if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n      this._firstIntersectionPoint = intersectionPoint2;\n    }\n    intersectionPoint1 = [0, 0];\n    intersectionPoint2 = [0, 0];\n    value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n    intersectionPoint1 = value.first;\n    intersectionPoint2 = value.second;\n    if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n      this._secondIntersectionPoint = intersectionPoint2;\n    }\n    var xDiff = this._firstIntersectionPoint[0] - point2[0];\n    var yDiff = this._firstIntersectionPoint[1] - point2[1];\n    var startAngle = Math.atan2(yDiff, xDiff) * (180.0 / Math.PI);\n    xDiff = this._secondIntersectionPoint[0] - point2[0];\n    yDiff = this._secondIntersectionPoint[1] - point2[1];\n    var sweepAngle = Math.atan2(yDiff, xDiff) * (180.0 / Math.PI);\n    startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n    sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n    if (startAngle === 180 && sweepAngle === 0) {\n      this._startAngle = startAngle;\n      this._sweepAngle = 180;\n    } else if (startAngle === 0 && sweepAngle === 180) {\n      this._startAngle = sweepAngle;\n      this._sweepAngle = 180;\n    } else if (startAngle < 180) {\n      if (startAngle > sweepAngle) {\n        this._startAngle = sweepAngle;\n        this._sweepAngle = startAngle - sweepAngle;\n      } else if (startAngle + 180 < sweepAngle) {\n        this._startAngle = sweepAngle;\n        this._sweepAngle = 360 - sweepAngle + startAngle;\n      } else {\n        this._startAngle = startAngle;\n        this._sweepAngle = sweepAngle - startAngle;\n      }\n    } else {\n      if (startAngle < sweepAngle) {\n        this._startAngle = startAngle;\n        this._sweepAngle = sweepAngle - startAngle;\n      } else if (startAngle - 180 > sweepAngle) {\n        this._startAngle = startAngle;\n        this._sweepAngle = 360 - startAngle + sweepAngle;\n      } else {\n        this._startAngle = sweepAngle;\n        this._sweepAngle = startAngle - sweepAngle;\n      }\n    }\n    return Math.atan2(point3[0] - point2[0], point3[1] - point2[1]) - Math.atan2(point1[0] - point2[0], point1[1] - point2[1]);\n  };\n  PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n    var dx = point2[0] - point1[0];\n    var dy = point2[1] - point1[1];\n    var a = dx * dx + dy * dy;\n    var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n    var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n    var e = b * b - 4 * a * c;\n    if (a <= 0.0000001 || e < 0) {\n      intersection1 = [Number.NaN, Number.NaN];\n      intersection2 = [Number.NaN, Number.NaN];\n    } else if (e === 0) {\n      var t = -b / (2 * a);\n      intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n      intersection2 = [Number.NaN, Number.NaN];\n    } else {\n      var t = (-b + Math.sqrt(e)) / (2 * a);\n      intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n      t = (-b - Math.sqrt(e)) / (2 * a);\n      intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n    }\n    return {\n      first: intersection1,\n      second: intersection2\n    };\n  };\n  return PdfAngleMeasurementAnnotation;\n}(PdfComment);\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */function (_super) {\n  __extends(PdfInkAnnotation, _super);\n  function PdfInkAnnotation(points, linePoints) {\n    var _this = _super.call(this) || this;\n    _this._inkPointsCollection = [];\n    _this._previousCollection = [];\n    _this._isModified = false;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n    if (typeof points !== 'undefined') {\n      _this._points = points;\n      _this.bounds = {\n        x: points[0],\n        y: points[1],\n        width: points[2],\n        height: points[3]\n      };\n    }\n    if (typeof linePoints !== 'undefined') {\n      _this._linePoints = linePoints;\n    }\n    _this._type = _PdfAnnotationType.inkAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n    /**\n     * Gets the ink points collection of the annotation.\n     *\n     * @returns {Array<number[]>} Ink points collection.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n     * // Get the ink points collection of the annotation\n     * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n        var inkList = this._dictionary.get('InkList');\n        if (Array.isArray(inkList) && inkList.length > 0) {\n          this._inkPointsCollection = inkList;\n        }\n      }\n      return this._inkPointsCollection;\n    },\n    /**\n     * Sets the ink points collection of the annotation.\n     *\n     * @param {Array<number[]>} value Ink points collection.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * // Create a new ink annotation\n     * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n     * // Set the ink points collection of the annotation\n     * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n     * // Add annotation to the page\n     * page.annotations.add(annotation);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n        this._inkPointsCollection = value;\n        this._isModified = true;\n        if (this._isLoaded) {\n          this._dictionary.update('InkList', value);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfInkAnnotation._load = function (page, dictionary) {\n    var annot = new PdfInkAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfInkAnnotation.prototype._postProcess = function () {\n    if (typeof this._points === 'undefined' || this._points === null) {\n      throw new Error('Points cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (!this._dictionary.has('C')) {\n      this.color = [0, 0, 0];\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    var nativeRectangle = this._addInkPoints();\n    var bounds = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[0] + nativeRectangle[2], nativeRectangle[1] + nativeRectangle[3]];\n    this._dictionary.update('Rect', bounds);\n    if (this._setAppearance) {\n      var appearance = new PdfAppearance(this, nativeRectangle);\n      appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n      var template = appearance.normal;\n      _setMatrix(template, this._getRotationAngle());\n      template._writeTransformation = false;\n      this._appearanceTemplate = this._createInkAppearance(template);\n      if (this._dictionary.has('AP')) {\n        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n      }\n      var dictionary = new _PdfDictionary();\n      this._appearanceTemplate._content.dictionary._updated = true;\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      this._appearanceTemplate._content.reference = reference;\n      dictionary.set('N', reference);\n      dictionary._updated = true;\n      this._dictionary.set('AP', dictionary);\n    }\n  };\n  PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    this._isFlatten = isFlatten;\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        if (this._inkPointsCollection.length === 0) {\n          this._inkPointsCollection = this._obtainInkListCollection();\n        }\n        var rect = this._getInkBoundsValue();\n        var template = new PdfTemplate(rect, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        template._writeTransformation = false;\n        this._appearanceTemplate = this._createInkAppearance(template);\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (!isFlatten) {\n          if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n          }\n          var dictionary = new _PdfDictionary();\n          this._appearanceTemplate._content.dictionary._updated = true;\n          var reference = this._crossReference._getNextReference();\n          this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n          this._appearanceTemplate._content.reference = reference;\n          dictionary.set('N', reference);\n          dictionary._updated = true;\n          this._dictionary.set('AP', dictionary);\n        }\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess();\n      if (!this._appearanceTemplate) {\n        if (isFlatten) {\n          if (!this._dictionary.has('AP')) {\n            if (this._inkPointsCollection.length === 0) {\n              this._inkPointsCollection = this._obtainInkListCollection();\n            }\n            var rect = this._getInkBoundsValue();\n            var template = new PdfTemplate(rect, this._crossReference);\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n          } else {\n            var dictionary = this._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n              var appearanceStream = dictionary.get('N');\n              var reference = dictionary.getRaw('N');\n              if (appearanceStream) {\n                if (reference) {\n                  appearanceStream.reference = reference;\n                }\n                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate && this._appearanceTemplate._size !== null && typeof this._appearanceTemplate._size !== 'undefined') {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n        var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n        if (box) {\n          this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n      }\n      this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n    }\n  };\n  PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n    var graphics = template.graphics;\n    if (this._inkPointsCollection !== null && this._inkPointsCollection.length > 0 && this.color !== null && typeof this._color !== 'undefined') {\n      for (var l = 0; l < this._inkPointsCollection.length; l++) {\n        if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n          var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n          if (inkPoints.length === 2) {\n            var locx = inkPoints[0] - 0.5;\n            var locy = inkPoints[1] - 0.5;\n            var locw = inkPoints[0] + 0.5;\n            var loch = inkPoints[1] + 0.5;\n            inkPoints = [locx, locy, locw, loch];\n          }\n          var point = new Array(inkPoints.length / 2);\n          var count = 0;\n          for (var j = 0; j < inkPoints.length; j = j + 2) {\n            point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n            count++;\n          }\n          var pathPointCont = count + count * 2 - 2;\n          var pathPoints = new Array(pathPointCont);\n          var p1 = [];\n          var p2 = [];\n          var value = this._getControlPoints(point, p1, p2);\n          p1 = value.controlP1;\n          p2 = value.controlP2;\n          var index = 0;\n          for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n            pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n            pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n            pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n            index++;\n          }\n          pathPoints[pathPointCont - 1] = point[point.length - 1];\n          if (pathPoints !== null) {\n            var pointsCollection = pathPoints;\n            for (var k = 0; k < pointsCollection.length; k++) {\n              var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n              pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], -point_1[1]];\n            }\n            var path1 = new _PdfPath();\n            var path2 = null;\n            if (point.length === 2) {\n              var width = point[1][0] - point[0][0];\n              var height = point[1][1] - point[0][1];\n              path1._addEllipse(point[0][0] + 0.5, -(point[0][1] + height + 0.5), width, height);\n              path2 = new _PdfPath();\n              path2._pathTypes = path1._pathTypes;\n              path2._points = path1._points;\n            } else {\n              path1._addBezierPoints(pointsCollection);\n              path2 = new _PdfPath();\n              path2._pathTypes = path1._pathTypes;\n              path2._points = pointsCollection;\n            }\n            var borderPen = new PdfPen(this.color, this.border.width);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n              var state = graphics.save();\n              graphics.setTransparency(this._opacity);\n              if (this._isLoaded) {\n                borderPen._lineCap = PdfLineCap.round;\n              }\n              graphics._drawPath(path2, borderPen);\n              graphics.restore(state);\n            } else {\n              graphics._drawPath(path2, borderPen);\n            }\n          }\n        }\n      }\n      if (this._isFlatten) {\n        this.bounds = {\n          x: this.bounds.x,\n          y: this._page.size[1] - (this.bounds.y + this.bounds.height),\n          width: this.bounds.width,\n          height: this.bounds.height\n        };\n      }\n    }\n    return template;\n  };\n  PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n    if (point === null) {\n      throw new Error('pointCollection');\n    }\n    var pointCount = point.length - 1;\n    if (pointCount < 1) {\n      throw new Error('At least two knot PointFs required pointCollection');\n    }\n    if (pointCount === 1) {\n      p1 = [[(2 * point[0][0] + point[1][0]) / 3, (2 * point[0][1] + point[1][1]) / 3]];\n      p2 = [[2 * p1[0][0] - point[0][0], 2 * p1[0][1] - point[0][1]]];\n    }\n    var rightVector = [];\n    for (var i = 1; i < pointCount - 1; ++i) {\n      rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n    }\n    rightVector[0] = point[0][0] + 2 * point[1][0];\n    rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n    var xValue = this._getSingleControlPoint(rightVector);\n    for (var i = 1; i < pointCount - 1; ++i) {\n      rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n    }\n    rightVector[0] = point[0][1] + 2 * point[1][1];\n    rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n    var yValue = this._getSingleControlPoint(rightVector);\n    p1 = new Array(pointCount);\n    p2 = new Array(pointCount);\n    for (var i = 0; i < pointCount; ++i) {\n      p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n      if (i < pointCount - 1) {\n        p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n      } else {\n        var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n        var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n        p2[Number.parseInt(i.toString(), 10)] = [x, y];\n      }\n    }\n    return {\n      controlP1: p1,\n      controlP2: p2\n    };\n  };\n  PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n    var count = rightVector.length;\n    var vector = [];\n    var tmpVector = [];\n    var divisor = 2.0;\n    vector[0] = rightVector[0] / divisor;\n    for (var i = 1; i < count; i++) {\n      tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n      divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n      vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n    }\n    for (var i = 1; i < count; i++) {\n      vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n    }\n    return vector;\n  };\n  PdfInkAnnotation.prototype._addInkPoints = function () {\n    var _this = this;\n    var inkCollection = [];\n    if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n      this._inkPointsCollection.unshift(this._linePoints);\n      this._isModified = false;\n    }\n    var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n    if (this._inkPointsCollection !== null && !isEqual) {\n      for (var i = 0; i < this._inkPointsCollection.length; i++) {\n        var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n        inkCollection.push(inkList);\n      }\n      this._dictionary.update('InkList', inkCollection);\n    }\n    if (this._inkPointsCollection.length > 0) {\n      this._inkPointsCollection.forEach(function (inkList) {\n        _this._previousCollection.push(inkList);\n      });\n    }\n    return this._getInkBoundsValue();\n  };\n  PdfInkAnnotation.prototype._getInkBoundsValue = function () {\n    var bounds = [0, 0, 0, 0];\n    if (this._points) {\n      this.bounds = {\n        x: this._points[0],\n        y: this._points[1],\n        width: this._points[2],\n        height: this._points[3]\n      };\n    }\n    bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n    var borderWidth = this.border.width;\n    if (this._inkPointsCollection !== null) {\n      if (this._inkPointsCollection.length > 0) {\n        var termsList = [];\n        for (var i = 0; i < this._inkPointsCollection.length; i++) {\n          var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n          if (subList !== null) {\n            if (subList.length % 2 === 0) {\n              for (var j = 0; j < subList.length; j++) {\n                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n              }\n            }\n          }\n        }\n        var isTwoPoints = false;\n        if (!this._isLoaded && termsList.length === 2) {\n          isTwoPoints = true;\n          termsList.push(termsList[0] + 1);\n          termsList.push(termsList[1] + 1);\n        }\n        var pointCollection = new Array(termsList.length / 2);\n        var count = 0;\n        for (var j = 0; j < termsList.length; j = j + 2) {\n          pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)], termsList[j + 1]];\n          count++;\n        }\n        if (this._isLoaded) {\n          if (pointCollection.length > 0) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n              var point = pointCollection[Number.parseInt(i.toString(), 10)];\n              if (first) {\n                xMin = point[0];\n                yMin = point[1];\n                first = false;\n              } else {\n                if (point[0] < xMin) {\n                  xMin = point[0];\n                } else if (point[0] > xMax) {\n                  xMax = point[0];\n                }\n                if (point[1] < yMin) {\n                  yMin = point[1];\n                } else if (point[1] > yMax) {\n                  yMax = point[1];\n                }\n              }\n            }\n            bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n            this.bounds = {\n              x: bounds[0],\n              y: bounds[1],\n              width: bounds[2],\n              height: bounds[3]\n            };\n            if (this._isFlatten || this._setAppearance) {\n              bounds[0] = this.bounds.x - borderWidth;\n              bounds[1] = this.bounds.y - borderWidth;\n              bounds[2] = this.bounds.width + 2 * borderWidth;\n              bounds[3] = this.bounds.height + 2 * borderWidth;\n            }\n          } else {\n            if (this._points) {\n              bounds = this._points;\n            } else if (pointCollection.length > 0) {\n              bounds = this._dictionary.get('Rect');\n            } else {\n              bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            }\n          }\n        } else {\n          bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n        }\n        this.bounds = {\n          x: bounds[0],\n          y: bounds[1],\n          width: bounds[2],\n          height: bounds[3]\n        };\n      }\n    }\n    return bounds;\n  };\n  PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints) {\n    if (pointCollection.length > 5) {\n      var xMin = 0;\n      var yMin = 0;\n      var xMax = 0;\n      var yMax = 0;\n      var first = true;\n      for (var i = 0; i < pointCollection.length; i++) {\n        var point = pointCollection[Number.parseInt(i.toString(), 10)];\n        if (first) {\n          xMin = point[0];\n          yMin = point[1];\n          xMax = point[0];\n          yMax = point[1];\n          first = false;\n        } else {\n          if (point[0] < xMin) {\n            xMin = point[0];\n          } else if (point[0] > xMax) {\n            xMax = point[0];\n          }\n          if (point[1] < yMin) {\n            yMin = point[1];\n          } else if (point[1] > yMax) {\n            yMax = point[1];\n          }\n        }\n      }\n      if (bounds[2] < xMax) {\n        xMax = bounds[2];\n      }\n      if (bounds[3] < yMax) {\n        yMax = bounds[3];\n      }\n      bounds = [xMin, yMin, xMax, yMax];\n      if (this._isFlatten || this._setAppearance) {\n        var factor = isTwoPoints ? 2 : 3;\n        bounds[0] = bounds[0] - borderWidth;\n        bounds[1] = bounds[1] - borderWidth;\n        bounds[2] = bounds[2] + factor * borderWidth;\n        bounds[3] = bounds[3] + factor * borderWidth;\n      }\n    } else {\n      if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n        bounds = this._dictionary.get('Rect');\n      } else {\n        bounds = this._points;\n      }\n    }\n    return bounds;\n  };\n  PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n    var path = [];\n    if (this._dictionary.has('InkList')) {\n      var inkList = this._dictionary.getArray('InkList');\n      var list = [];\n      for (var i = 0; i < inkList.length; i++) {\n        var innerList = inkList[Number.parseInt(i.toString(), 10)];\n        for (var j = 0; j < innerList.length; j++) {\n          list.push(innerList[Number.parseInt(j.toString(), 10)]);\n        }\n        path.push(list);\n      }\n    }\n    return path;\n  };\n  return PdfInkAnnotation;\n}(PdfComment);\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */function (_super) {\n  __extends(PdfPopupAnnotation, _super);\n  function PdfPopupAnnotation(text, x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._icon = PdfPopupIcon.note;\n    _this._iconString = '';\n    _this._stateModel = PdfAnnotationStateModel.none;\n    _this._state = PdfAnnotationState.none;\n    _this._open = false;\n    _this._isReview = false;\n    _this._isComment = false;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Text'));\n    if (typeof text !== 'undefined') {\n      _this.text = text;\n    }\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.popupAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n    /**\n     * Gets the boolean flag indicating whether annotation has open or not.\n     *\n     * @returns {boolean} Caption.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Gets the boolean flag indicating whether annotation has open or not.\n     * let open: boolean =  annotation.open;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Open')) {\n        this._open = this._dictionary.get('Open');\n      }\n      return this._open;\n    },\n    /**\n     * Sets the boolean flag indicating whether annotation has open or not.\n     *\n     * @param {boolean} value Open.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Sets the boolean flag indicating whether annotation has open or not.\n     * annotation.open = true;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._open = value;\n        this._dictionary.update('Open', this._open);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n    /**\n     * Gets the icon type of the popup annotation.\n     *\n     * @returns {PdfPopupIcon} Annotation icon.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Gets the icon type of the popup annotation.\n     * let icon: PdfPopupIcon = annotation.icon;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Name')) {\n        this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n      }\n      return this._icon;\n    },\n    /**\n     * Sets the icon type of the popup annotation.\n     *\n     * @param {PdfPopupIcon} value Annotation icon.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Sets the icon type of the popup annotation.\n     * annotation.icon = PdfPopupIcon.newParagraph;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._icon = value;\n        this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n    /**\n     * Gets the state model of the popup annotation.\n     *\n     * @returns {PdfAnnotationStateModel} Annotation State Model.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Gets the state model of the popup annotation.\n     * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('StateModel')) {\n        this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n      }\n      return this._stateModel;\n    },\n    /**\n     * Sets the state model of the popup annotation.\n     *\n     * @param {PdfAnnotationStateModel} value Annotation State Model.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Sets the state model of the popup annotation.\n     * annotation.stateModel = PdfAnnotationStateModel.marked;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._stateModel = value;\n        this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n    /**\n     * Gets the state of the popup annotation.\n     *\n     * @returns {PdfAnnotationState} Annotation State.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Gets the state of the popup annotation.\n     * let state: PdfAnnotationState = annotation.state;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('State')) {\n        this._state = _mapAnnotationState(this._dictionary.get('State'));\n      }\n      return this._state;\n    },\n    /**\n     * Sets the state of the popup annotation.\n     *\n     * @param {PdfAnnotationState} value Annotation State.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n     * // Sets the state of the popup annotation.\n     * annotation.state = PdfAnnotationState.completed;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._state = value;\n        this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfPopupAnnotation._load = function (page, dictionary) {\n    var annot = new PdfPopupAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    if (dictionary.has('IRT')) {\n      annot._isReview = _checkReview(dictionary);\n      if (!annot._isReview) {\n        annot._isComment = _checkComment(dictionary);\n      }\n    }\n    return annot;\n  };\n  PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfPopupAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      this._bounds = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    var rectangle = [this.bounds.x, this.bounds.y, this.bounds.x + this.bounds.width, this.bounds.y + this.bounds.height];\n    this._dictionary.update('Rect', rectangle);\n    if (this._setAppearance) {\n      this._appearanceTemplate = this._createPopupAppearance();\n      if (this._appearanceTemplate) {\n        if (this._dictionary.has('AP')) {\n          _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        this._appearanceTemplate._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n        this._appearanceTemplate._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n      }\n    }\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n  };\n  PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (appearanceStream) {\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n          if (this._appearanceTemplate !== null) {\n            var state = this._page.graphics.save();\n            if (this.opacity < 1) {\n              this._page.graphics.setTransparency(this.opacity);\n            }\n            this._page.graphics._drawTemplate(this._appearanceTemplate, this.bounds);\n            this._page.graphics.restore(state);\n          }\n        }\n      }\n    } else {\n      this._postProcess();\n      if (!this._appearanceTemplate) {\n        if (isFlatten) {\n          if (!this._dictionary.has('AP')) {\n            this._appearanceTemplate = this._createPopupAppearance();\n          } else {\n            var dictionary = this._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n              var appearanceStream = dictionary.get('N');\n              var reference = dictionary.getRaw('N');\n              if (appearanceStream) {\n                if (reference) {\n                  appearanceStream.reference = reference;\n                }\n                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten) {\n      this._removeAnnotation(this._page, this);\n    }\n  };\n  PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n    var template;\n    if (this._dictionary.has('Name')) {\n      if (this._dictionary.get('Name').name === 'Comment') {\n        if (this._dictionary.has('Rect')) {\n          var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n          template = new PdfTemplate(nativeRectangle, this._crossReference);\n          _setMatrix(template, this._getRotationAngle());\n          var graphics = template.graphics;\n          var rectValue = this._dictionary.getArray('Rect');\n          if (rectValue !== null) {\n            var pen = new PdfPen([0, 0, 0], 0.3);\n            var brush = new PdfBrush(this.color);\n            var pen1 = new PdfPen([255, 255, 255], 1);\n            var points = new Array();\n            points.push([6, 8]);\n            points.push([9, 8]);\n            points.push([4, 12]);\n            var path = new _PdfPath();\n            if (this.color[0] === 0 && this.color[0] === 0 && this.color[0] === 0) {\n              brush = new PdfBrush([255, 215, 0]);\n            }\n            graphics.save();\n            var template_1 = new PdfTemplate([0, 0, 15, 14], this._crossReference);\n            template_1.graphics.drawRectangle(0, 0, 15, 14, pen, brush);\n            template_1.graphics.drawPolygon(points, pen, new PdfBrush([255, 255, 255]));\n            path._addEllipse(2, 2, 11, 8);\n            template_1.graphics._drawPath(path, pen, new PdfBrush([255, 255, 255]));\n            template_1.graphics.drawArc(2, 2, 11, 8, 108, 12.7, pen1);\n            template_1.graphics.drawLine(pen, 4, 12, 6.5, 10);\n            graphics._drawTemplate(template_1, {\n              x: 0,\n              y: 0,\n              width: this.bounds.width,\n              height: this.bounds.height\n            });\n            graphics.restore();\n          }\n        }\n      }\n    }\n    return template;\n  };\n  PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n    switch (icon) {\n      case PdfPopupIcon.note:\n        this._iconString = 'Note';\n        break;\n      case PdfPopupIcon.comment:\n        this._iconString = 'Comment';\n        break;\n      case PdfPopupIcon.help:\n        this._iconString = 'Help';\n        break;\n      case PdfPopupIcon.insert:\n        this._iconString = 'Insert';\n        break;\n      case PdfPopupIcon.key:\n        this._iconString = 'Key';\n        break;\n      case PdfPopupIcon.newParagraph:\n        this._iconString = 'NewParagraph';\n        break;\n      case PdfPopupIcon.paragraph:\n        this._iconString = 'Paragraph';\n        break;\n    }\n    return this._iconString;\n  };\n  return PdfPopupAnnotation;\n}(PdfComment);\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */function (_super) {\n  __extends(PdfFileLinkAnnotation, _super);\n  function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n    var _this = _super.call(this) || this;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Link'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    if (typeof fileName !== 'undefined' && fileName !== null) {\n      _this._fileName = fileName;\n    }\n    _this._type = _PdfAnnotationType.fileLinkAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n    /**\n     * Gets the action of the annotation.\n     *\n     * @returns {string} Action.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n     * // Gets the action of the annotation.\n     * let action: string = annotation.action;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n        var dictionary = this._dictionary.get('A');\n        if (dictionary && dictionary.has('Next')) {\n          var action = dictionary.get('Next');\n          if (Array.isArray(action)) {\n            for (var i = 0; i < action.length; i++) {\n              var reference = action[Number.parseInt(i.toString(), 10)];\n              if (reference && reference instanceof _PdfReference) {\n                var actionDictionary = this._crossReference._fetch(reference);\n                if (actionDictionary.has('JS')) {\n                  this._action = actionDictionary.get('JS');\n                }\n              }\n            }\n          }\n        }\n      }\n      return this._action;\n    },\n    /**\n     * Sets the action of the annotation.\n     *\n     * @param {string} value Action.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n     * // Sets the action of the annotation.\n     * annotation.action = ‘syncfusion’;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!this._isLoaded && typeof value === 'string') {\n        this._action = value;\n      }\n      if (this._isLoaded && typeof value === 'string') {\n        if (this.action !== value && this._dictionary.has('A')) {\n          var dictionary = this._dictionary.get('A');\n          if (dictionary && dictionary.has('Next')) {\n            var action = dictionary.get('Next');\n            if (Array.isArray(action)) {\n              for (var i = 0; i < action.length; i++) {\n                var reference = action[Number.parseInt(i.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                  var actionDictionary = this._crossReference._fetch(reference);\n                  if (actionDictionary.has('JS')) {\n                    actionDictionary.update('JS', value);\n                    this._action = value;\n                    this._dictionary._updated = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfFileLinkAnnotation._load = function (page, dictionary) {\n    var annot = new PdfFileLinkAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfFileLinkAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    this._addAction();\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n  };\n  PdfFileLinkAnnotation.prototype._addAction = function () {\n    var _this = this;\n    if (this._dictionary.has('A')) {\n      var action = this._dictionary.get('A');\n      if (action) {\n        if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n          var nextAction = action.get('Next');\n          if (Array.isArray(nextAction) && nextAction.length > 0) {\n            nextAction.forEach(function (reference) {\n              if (reference && reference instanceof _PdfReference && reference._isNew) {\n                _this._crossReference._cacheMap.delete(reference);\n              }\n            });\n          }\n        }\n        if (action.has('F')) {\n          _removeDuplicateReference(action, this._crossReference, 'F');\n        }\n      }\n      _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n    }\n    var dictionary = new _PdfDictionary();\n    dictionary.set('Type', _PdfName.get('Action'));\n    dictionary.set('S', _PdfName.get('Launch'));\n    var fileDictionary = new _PdfDictionary();\n    fileDictionary.set('Type', _PdfName.get('Filespec'));\n    fileDictionary.set('UF', this._fileName);\n    if (typeof this._action !== 'undefined' && this._action !== null) {\n      var actionDictionary = new _PdfDictionary();\n      actionDictionary.set('Type', _PdfName.get('Action'));\n      actionDictionary.set('S', _PdfName.get('JavaScript'));\n      actionDictionary.set('JS', this._action);\n      var ref = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(ref, actionDictionary);\n      actionDictionary._updated = true;\n      dictionary.set('Next', [ref]);\n    }\n    var reference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(reference, fileDictionary);\n    fileDictionary._updated = true;\n    dictionary.set('F', reference);\n    dictionary._updated = true;\n    this._dictionary.set('A', dictionary);\n  };\n  PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (!this._isLoaded) {\n      this._postProcess();\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  return PdfFileLinkAnnotation;\n}(PdfAnnotation);\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */function (_super) {\n  __extends(PdfUriAnnotation, _super);\n  function PdfUriAnnotation(x, y, width, height, uri) {\n    var _this = _super.call(this) || this;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Link'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    if (typeof uri !== 'undefined' && uri !== null) {\n      _this._uri = uri;\n    }\n    _this._type = _PdfAnnotationType.uriAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n    /**\n     * Gets the uri of the annotation.\n     *\n     * @returns {string} Uri.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n     * // Gets the uri of the annotation.\n     * let uri: string = annotation.uri;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n        var linkDict = this._dictionary.get('A');\n        if (linkDict.has('URI')) {\n          this._uri = linkDict.get('URI');\n        }\n      }\n      return this._uri;\n    },\n    /**\n     * Sets the uri of the annotation.\n     *\n     * @param {string} value Uri.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new URI annotation\n     * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n     * // Sets the uri of the annotation\n     * annotation.uri = ‘http://www.google.com’;\n     * // Add annotation to the page\n     * page.annotations.add(annotation);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value === 'string') {\n        if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n          var linkDict = this._dictionary.get('A');\n          if (linkDict.has('URI')) {\n            this._uri = value;\n            linkDict.update('URI', value);\n            this._dictionary._updated = true;\n          }\n        } else {\n          this._uri = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfUriAnnotation._load = function (page, dictionary) {\n    var annot = new PdfUriAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfUriAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    this._addAction();\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n  };\n  PdfUriAnnotation.prototype._addAction = function () {\n    var dictionary = new _PdfDictionary();\n    dictionary.set('Type', _PdfName.get('Action'));\n    dictionary.set('S', _PdfName.get('URI'));\n    if (typeof this._uri !== 'undefined') {\n      dictionary.set('URI', this._uri);\n    }\n    dictionary._updated = true;\n    this._dictionary.set('A', dictionary);\n    this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n  };\n  PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (!this._isLoaded) {\n      this._postProcess();\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  return PdfUriAnnotation;\n}(PdfAnnotation);\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */function (_super) {\n  __extends(PdfDocumentLinkAnnotation, _super);\n  function PdfDocumentLinkAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Link'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.documentLinkAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n    /**\n     * Gets the destination of the annotation.\n     *\n     * @returns {PdfDestination} Destination.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets the destination of the annotation.\n     * let destination: PdfDestination =annotation.destination;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoaded) {\n        this.destination = this._obtainDestination();\n      }\n      return this._destination;\n    },\n    /**\n     * Sets the destination of the annotation.\n     *\n     * @param {PdfDestination} value Destination.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Initializes a new instance of the `PdfDestination` class.\n     * let destination: PdfDestination = new PdfDestination();\n     * // Sets the zoom factor.\n     * destination.zoom = 20;\n     * // Sets the page where the destination is situated.\n     * destination.page = page;\n     * // Sets the mode of the destination.\n     * destination.mode = PdfDestinationMode.fitToPage;\n     * // Sets the location of the destination.\n     * destination.location = [20, 20];\n     * // Sets the bounds of the destination.\n     * destination.destinationBounds = [20, 20, 100, 50];\n     * // Sets destination to document link annotation.\n     * annotation.destination = destination;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== null) {\n        this._destination = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n    var annot = new PdfDocumentLinkAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    this._addDocument();\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n  };\n  PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n    if (this._dictionary.has('Dest')) {\n      var array = this._dictionary.get('Dest'); // eslint-disable-line\n      var holder = void 0;\n      if (array[0] instanceof _PdfReference) {\n        holder = array[0];\n      }\n      if ((typeof holder === 'undefined' || holder === null) && typeof array[0] === 'number') {\n        var pageNumber = array[0];\n        var page = this._crossReference._document.getPage(pageNumber);\n        if (page) {\n          var mode = array[1];\n          if (mode.name === 'XYZ') {\n            var left = array[2];\n            var top_3 = array[3];\n            var zoom = array[4];\n            var topValue = typeof top_3 !== 'undefined' && top_3 !== null ? page.size[1] - top_3 : 0;\n            var leftValue = typeof left !== 'undefined' && left !== null ? left : 0;\n            this._destination = new PdfDestination(page, [leftValue, topValue]);\n            if (typeof zoom !== 'undefined' && zoom !== null) {\n              this._destination.zoom = zoom;\n            }\n            if (typeof left === 'undefined' && left === null || typeof top_3 === 'undefined' && top_3 === null || typeof zoom === 'undefined' && zoom === null) {\n              this._destination._setValidation(false);\n            }\n          } else {\n            this._destination = new PdfDestination(page);\n            this._destination.mode = PdfDestinationMode.fitToPage;\n          }\n        }\n      }\n      if (holder) {\n        var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n        var page = this._crossReference._document.getPage(index);\n        if (array[1] instanceof _PdfName) {\n          var mode = array[1];\n          if (mode) {\n            if (mode.name === 'XYZ') {\n              var left = array[2];\n              var top_4 = array[3];\n              var zoom = array[4];\n              var topValue = typeof top_4 !== 'undefined' && top_4 !== null ? page.size[1] - top_4 : 0;\n              var leftValue = typeof left !== 'undefined' && left !== null ? left : 0;\n              this._destination = new PdfDestination(page, [leftValue, topValue]);\n              if (typeof zoom !== 'undefined' && zoom !== null) {\n                this._destination.zoom = zoom;\n              }\n              if (typeof left === 'undefined' && left === null || typeof top_4 === 'undefined' && top_4 === null || typeof zoom === 'undefined' && zoom === null) {\n                this._destination._setValidation(false);\n              }\n            } else {\n              if (page && mode.name === 'Fit') {\n                this._destination = new PdfDestination(page);\n                this._destination.mode = PdfDestinationMode.fitToPage;\n              }\n            }\n          }\n        }\n      }\n    } else if (this._dictionary.has('A') && !this._destination) {\n      var action = this._dictionary.get('A');\n      if (action.has('D')) {\n        var reference = action.get('D'); // eslint-disable-line\n        if (reference !== null && typeof reference !== 'undefined') {\n          var referenceArray = void 0; // eslint-disable-line\n          if (Array.isArray(reference)) {\n            referenceArray = reference;\n          } else if (reference instanceof _PdfReference) {\n            var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n            if (Array.isArray(referenceValue)) {\n              referenceArray = referenceValue;\n            }\n          }\n          if (referenceArray) {\n            if (referenceArray[0] instanceof _PdfReference) {\n              var document_1 = this._crossReference._document;\n              var index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n              var page = document_1.getPage(index);\n              if (page) {\n                var mode = referenceArray[1];\n                if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                  var top_5 = referenceArray[2];\n                  var topValue = typeof top_5 !== 'undefined' && top_5 !== null ? page.size[1] - top_5 : 0;\n                  this._destination = new PdfDestination(page, [0, topValue]);\n                  if (typeof top_5 === 'undefined' || top_5 === null) {\n                    this._destination._setValidation(false);\n                  }\n                } else if (mode.name === 'XYZ') {\n                  var left = referenceArray[2];\n                  var top_6 = referenceArray[3];\n                  var zoom = referenceArray[4];\n                  var topValue = typeof top_6 !== 'undefined' && top_6 !== null ? page.size[1] - top_6 : 0;\n                  var leftValue = typeof left !== 'undefined' && left !== null ? left : 0;\n                  this._destination = new PdfDestination(page, [leftValue, topValue]);\n                  if (typeof zoom !== 'undefined' && zoom !== null) {\n                    this._destination.zoom = zoom;\n                  }\n                  if (typeof left !== 'undefined' && left !== null || typeof top_6 !== 'undefined' && top_6 !== null || typeof zoom !== 'undefined' && zoom !== null) {\n                    this._destination._setValidation(false);\n                  }\n                } else if (mode.name === 'FitR') {\n                  if (referenceArray.length === 6) {\n                    var left = referenceArray[2];\n                    var bottom = referenceArray[3];\n                    var right = referenceArray[4];\n                    var top_7 = referenceArray[5];\n                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                  }\n                } else if (mode.name === 'Fit') {\n                  this._destination = new PdfDestination(page);\n                  this._destination.mode = PdfDestinationMode.fitToPage;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return this._destination;\n  };\n  PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n    if (this.destination) {\n      this._dictionary.set('Dest', this.destination._array);\n    }\n  };\n  PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (!this._isLoaded) {\n      this._postProcess();\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  return PdfDocumentLinkAnnotation;\n}(PdfAnnotation);\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */function (_super) {\n  __extends(PdfTextWebLinkAnnotation, _super);\n  function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n    var _this = _super.call(this) || this;\n    _this._isActionAdded = false;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Link'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n    if (typeof brushColor !== 'undefined' && brushColor !== null) {\n      _this._brush = new PdfBrush(brushColor);\n    }\n    if (typeof penColor !== 'undefined' && penColor !== null) {\n      _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n    }\n    _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n    /**\n     * Gets the font of the annotation.\n     *\n     * @returns {PdfFont} font.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n     * // Gets the font of the annotation.\n     * let font: PdfFont = annotation.font;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._font;\n    },\n    /**\n     * Sets the font of the annotation.\n     *\n     * @param {PdfFont} value font.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n     * // Sets the font of the annotation.\n     * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._font = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n    /**\n     * Gets the url of the annotation.\n     *\n     * @returns {string} Url.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n     * // Gets the URL of the annotation.\n     * let url: string = annotation.url;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n        var linkDict = this._dictionary.get('A');\n        if (linkDict.has('URI')) {\n          this._url = linkDict.get('URI');\n        }\n      }\n      return this._url;\n    },\n    /**\n     * Sets the url of the annotation.\n     *\n     * @param {string} value Url.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n     * // Sets the URL of the annotation.\n     * annotation.url = ‘http://www.syncfusion.com’;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value === 'string') {\n        if (this._isLoaded && this._dictionary.has('A')) {\n          var linkSource = this._dictionary._get('A'); // eslint-disable-line\n          var linkDict = this._dictionary.get('A');\n          if (linkDict && linkDict.has('URI')) {\n            this._url = value;\n            linkDict.update('URI', value);\n            if (!(linkSource instanceof _PdfReference)) {\n              this._dictionary._updated = linkDict._updated;\n            }\n          }\n        } else {\n          this._url = value;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n    var annot = new PdfTextWebLinkAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    if (!this._isActionAdded) {\n      this._addAction();\n      this._isActionAdded = true;\n    }\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n  };\n  PdfTextWebLinkAnnotation.prototype._addAction = function () {\n    var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n    if (typeof this.font === 'undefined' || this.font === null) {\n      this.font = this._lineCaptionFont;\n    }\n    var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n    this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n    var dictionary = new _PdfDictionary();\n    dictionary.set('Type', _PdfName.get('Action'));\n    dictionary.set('S', _PdfName.get('URI'));\n    if (typeof this._url !== 'undefined') {\n      dictionary.set('URI', this._url);\n    }\n    dictionary._updated = true;\n    this._dictionary.set('A', dictionary);\n    this._dictionary.update('Border', [0, 0, 0]);\n  };\n  PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (!this._isLoaded) {\n      this._postProcess();\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  return PdfTextWebLinkAnnotation;\n}(PdfAnnotation);\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */function (_super) {\n  __extends(PdfAttachmentAnnotation, _super);\n  function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n    var _this = _super.call(this) || this;\n    _this._icon = PdfAttachmentIcon.pushPin;\n    _this._iconString = '';\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    if (typeof fileName !== 'undefined') {\n      _this._fileName = fileName;\n    }\n    _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n    _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n    /**\n     * Gets the icon type of the attachment annotation.\n     *\n     * @returns {PdfAttachmentIcon} Annotation icon.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n     * // Gets the icon type of the attachment annotation.\n     * let icon: PdfAttachmentIcon = annotation.icon;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Name')) {\n        this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n      }\n      return this._icon;\n    },\n    /**\n     * Sets the icon type of the attachment annotation.\n     *\n     * @param {PdfAttachmentIcon} value Annotation icon.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as  PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n     * // Sets the icon type of the attachment annotation.\n     * annotation.icon = PdfAttachmentIcon.pushPin;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._icon = value;\n        this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfAttachmentAnnotation._load = function (page, dictionary) {\n    var annot = new PdfAttachmentAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfAttachmentAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    this._addAttachment();\n  };\n  PdfAttachmentAnnotation.prototype._addAttachment = function () {\n    if (this._dictionary.has('FS')) {\n      var fileSpecification = this._dictionary.get('FS');\n      if (fileSpecification && fileSpecification.has('EF')) {\n        var embeddedFile = fileSpecification.get('EF');\n        if (embeddedFile && embeddedFile.has('F')) {\n          _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n        }\n      }\n      _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n    }\n    var fileSpectDictionary = new _PdfDictionary();\n    fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n    fileSpectDictionary.set('Desc', this._fileName);\n    fileSpectDictionary.set('F', this._fileName);\n    fileSpectDictionary.set('UF', this._fileName);\n    var fileDictionary = new _PdfDictionary();\n    fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n    var paramsDictionary = new _PdfDictionary();\n    var dateTime = new Date();\n    paramsDictionary.set('CreationDate', dateTime.toTimeString());\n    paramsDictionary.set('ModDate', new Date().toTimeString());\n    paramsDictionary.set('Size', this._stream.length);\n    fileDictionary.set('Params', paramsDictionary);\n    this._stream.dictionary = new _PdfDictionary();\n    this._stream.dictionary = fileDictionary;\n    fileDictionary._crossReference = this._crossReference;\n    var char1 = this._crossReference._newLine.charCodeAt(0);\n    var char2 = this._crossReference._newLine.charCodeAt(1);\n    var buffer = [char1, char2, 37, 80, 68, 70, 45];\n    fileDictionary._crossReference._writeObject(this._stream, buffer);\n    var reference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(reference, this._stream);\n    fileDictionary._updated = true;\n    var efileDictionary = new _PdfDictionary();\n    efileDictionary.set('F', reference);\n    fileSpectDictionary.set('EF', efileDictionary);\n    var fsReference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n    fileSpectDictionary._updated = true;\n    this._dictionary.update('FS', fsReference);\n  };\n  PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (!this._isLoaded) {\n      this._postProcess();\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n    switch (icon) {\n      case PdfAttachmentIcon.pushPin:\n        this._iconString = 'PushPin';\n        break;\n      case PdfAttachmentIcon.tag:\n        this._iconString = 'Tag';\n        break;\n      case PdfAttachmentIcon.graph:\n        this._iconString = 'Graph';\n        break;\n      case PdfAttachmentIcon.paperClip:\n        this._iconString = 'Paperclip';\n        break;\n    }\n    return this._iconString;\n  };\n  return PdfAttachmentAnnotation;\n}(PdfComment);\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */function (_super) {\n  __extends(Pdf3DAnnotation, _super);\n  /**\n   * Initializes a new instance of the `Pdf3DAnnotation` class.\n   *\n   * @private\n   */\n  function Pdf3DAnnotation() {\n    var _this = _super.call(this) || this;\n    _this._type = _PdfAnnotationType.movieAnnotation;\n    return _this;\n  }\n  Pdf3DAnnotation._load = function (page, dictionary) {\n    var annot = new Pdf3DAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  return Pdf3DAnnotation;\n}(PdfAnnotation);\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */function (_super) {\n  __extends(PdfTextMarkupAnnotation, _super);\n  function PdfTextMarkupAnnotation(text, x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n    _this._quadPoints = new Array(8);\n    _this._boundsCollection = [];\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    if (typeof text !== 'undefined') {\n      _this._text = text;\n    }\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n      _this._boundsCollection.push([_this.bounds.x, _this.bounds.y, _this.bounds.width, _this.bounds.height]);\n    }\n    _this._type = _PdfAnnotationType.textMarkupAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n    /**\n     * Gets the text markup color of the annotation.\n     *\n     * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n     * // Gets the textMarkUp Color type of the attachment annotation.\n     * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n        this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n      }\n      return this._textMarkUpColor;\n    },\n    /**\n     * Sets the text markup color of the annotation.\n     *\n     * @param {number[]} value R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n     * // Sets the textMarkUp Color type of the attachment annotation.\n     * annotation.textMarkUpColor = [255, 255, 255];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value.length === 3) {\n        var extColor = this.color;\n        if (!this._isLoaded || typeof extColor === 'undefined' || extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2]) {\n          this._color = value;\n          this._textMarkUpColor = value;\n          this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)), Number.parseFloat((value[1] / 255).toFixed(3)), Number.parseFloat((value[2] / 255).toFixed(3))]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n    /**\n     * Gets the markup type of the annotation.\n     *\n     * @returns {PdfTextMarkupAnnotationType} Markup type.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n     * // Gets the markup type of the annotation.\n     * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Subtype')) {\n        var text = this._dictionary.get('Subtype');\n        this._textMarkupType = _mapMarkupAnnotationType(text.name);\n      }\n      return this._textMarkupType;\n    },\n    /**\n     * Sets the markup type of the annotation.\n     *\n     * @param {PdfTextMarkupAnnotationType} value Markup type.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n     * // Sets the markup type of the annotation.\n     * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._textMarkupType = value;\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n    /**\n     * Gets the markup bounds collection of the annotation.\n     *\n     * @returns {Array<number[]>} Markup bounds.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as  PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n     * // Gets the markup bounds collection of the annotation.\n     * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoaded) {\n        var collection = [];\n        if (this._dictionary.has('QuadPoints')) {\n          var points = this._dictionary.getArray('QuadPoints');\n          if (points && points.length > 0) {\n            var count = points.length / 8;\n            for (var i = 0; i < count; i++) {\n              var x = points[4 + i * 8] - points[i * 8];\n              var y = points[5 + i * 8] - points[1 + i * 8];\n              var height = Math.sqrt(x * x + y * y);\n              x = points[6 + i * 8] - points[4 + i * 8];\n              y = points[7 + i * 8] - points[5 + i * 8];\n              var width = Math.sqrt(x * x + y * y);\n              var rect = [points[i * 8], this._page.size[1] - points[1 + i * 8], width, height];\n              collection.push(rect);\n            }\n          }\n        }\n        return collection;\n      }\n      return this._boundsCollection;\n    },\n    /**\n     * Sets the markup bounds collection of the annotation.\n     *\n     * @param {Array<number[]>} value Markup bounds.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n     * // Sets the markup bounds collection of the  annotation.\n     * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!this._isLoaded && typeof value !== 'undefined') {\n        if (this._boundsCollection.length > 0) {\n          this._quadPoints = new Array(8 + value.length * 8);\n          for (var i = 0; i < value.length; i++) {\n            this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n          }\n        } else {\n          this._quadPoints = new Array(8);\n          this._boundsCollection = value;\n        }\n      }\n      if (this._isLoaded && typeof value !== 'undefined') {\n        var isChanged = false;\n        if (this.boundsCollection.length === value.length) {\n          for (var i = 0; i < value.length; i++) {\n            var values = value[Number.parseInt(i.toString(), 10)];\n            for (var j = 0; j < values.length; j++) {\n              if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !== this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                isChanged = true;\n                break;\n              }\n            }\n          }\n        } else {\n          isChanged = true;\n        }\n        if (isChanged) {\n          this._quadPoints = new Array(value.length * 8);\n          var pageHeight = this._page.size[1];\n          for (var i = 0; i < value.length; i++) {\n            this._quadPoints[0 + Number.parseInt(i.toString(), 10) * 8] = value[Number.parseInt(i.toString(), 10)][0];\n            this._quadPoints[1 + Number.parseInt(i.toString(), 10) * 8] = pageHeight - value[Number.parseInt(i.toString(), 10)][1];\n            this._quadPoints[2 + Number.parseInt(i.toString(), 10) * 8] = value[Number.parseInt(i.toString(), 10)][0] + value[Number.parseInt(i.toString(), 10)][2];\n            this._quadPoints[3 + Number.parseInt(i.toString(), 10) * 8] = pageHeight - value[Number.parseInt(i.toString(), 10)][1];\n            this._quadPoints[4 + Number.parseInt(i.toString(), 10) * 8] = value[Number.parseInt(i.toString(), 10)][0];\n            this._quadPoints[5 + Number.parseInt(i.toString(), 10) * 8] = this._quadPoints[1 + i * 8] - value[Number.parseInt(i.toString(), 10)][3];\n            this._quadPoints[6 + Number.parseInt(i.toString(), 10) * 8] = value[Number.parseInt(i.toString(), 10)][0] + value[Number.parseInt(i.toString(), 10)][2];\n            this._quadPoints[7 + Number.parseInt(i.toString(), 10) * 8] = this._quadPoints[5 + Number.parseInt(i.toString(), 10) * 8];\n          }\n          this._dictionary.update('QuadPoints', this._quadPoints);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfTextMarkupAnnotation._load = function (page, dictionary) {\n    var annot = new PdfTextMarkupAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfTextMarkupAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      dictionary.set('W', this.border.width);\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    var size = this._page.size;\n    this._setQuadPoints(size);\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    if (this._setAppearance) {\n      this._appearanceTemplate = this._createMarkupAppearance();\n      if (!this._isLoaded && this._boundsCollection.length > 1) {\n        var native = this._obtainNativeRectangle();\n        this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n      }\n      if (this._dictionary.has('AP')) {\n        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n      }\n      var dictionary = new _PdfDictionary();\n      this._appearanceTemplate._content.dictionary._updated = true;\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      this._appearanceTemplate._content.reference = reference;\n      dictionary.set('N', reference);\n      dictionary._updated = true;\n      this._dictionary.set('AP', dictionary);\n    }\n    if (typeof this._text !== 'undefined' && this._text !== null) {\n      this._dictionary.set('Contents', this._text);\n    }\n  };\n  PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createMarkupAppearance();\n        if (!isFlatten) {\n          if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n          }\n          var dictionary = new _PdfDictionary();\n          this._appearanceTemplate._content.dictionary._updated = true;\n          var reference = this._crossReference._getNextReference();\n          this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n          this._appearanceTemplate._content.reference = reference;\n          dictionary.set('N', reference);\n          dictionary._updated = true;\n          this._dictionary.set('AP', dictionary);\n        }\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          if (appearanceStream) {\n            var reference = dictionary.getRaw('N');\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess();\n      if (!this._appearanceTemplate) {\n        if (isFlatten) {\n          if (!this._dictionary.has('AP')) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n          } else {\n            var dictionary = this._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n              var appearanceStream = dictionary.get('N');\n              if (appearanceStream) {\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                  appearanceStream.reference = reference;\n                }\n                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n        var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n        if (box) {\n          this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n      }\n      if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      } else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      } else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      }\n    }\n  };\n  PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n    var width;\n    var height = 0;\n    var rectangle;\n    if (this.boundsCollection.length > 1) {\n      var pdfPath = new _PdfPath();\n      for (var i = 0; i < this.boundsCollection.length; i++) {\n        var bounds = [];\n        bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n        bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n        bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n        bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n        pdfPath._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n      }\n      var rect = pdfPath._getBounds();\n      rectangle = {\n        x: rect[0],\n        y: rect[1],\n        width: rect[2],\n        height: rect[3]\n      };\n      this.bounds = rectangle;\n      width = rectangle.width;\n      height = rectangle.height;\n    } else {\n      if (this._dictionary.has('QuadPoints')) {\n        var quadPoints = this._dictionary.get('QuadPoints');\n        if (this._quadPoints !== null) {\n          for (var i = 0; i < quadPoints.length / 8; i++) {\n            if (this._isLoaded) {\n              var point = new Array();\n              var j = 0;\n              for (var k = 0; k < quadPoints.length;) {\n                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                var y1 = quadPoints[k + 1];\n                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                k = k + 2;\n                j++;\n              }\n              var path = new _PdfPath();\n              path._addLines(point);\n              var rect = path._getBounds();\n              rectangle = {\n                x: rect[0],\n                y: rect[1],\n                width: rect[2],\n                height: rect[3]\n              };\n              width = rectangle.width;\n              height = rectangle.height;\n            } else {\n              var x = Math.floor(quadPoints[4 + i * 8]) - Math.floor(quadPoints[0 + i * 8]);\n              var y = Math.floor(quadPoints[5 + i * 8]) - Math.floor(quadPoints[1 + i * 8]);\n              height = Math.sqrt(x * x + y * y);\n              x = Math.floor(quadPoints[6 + i * 8]) - Math.floor(quadPoints[4 + i * 8]);\n              y = Math.floor(quadPoints[7 + i * 8]) - Math.floor(quadPoints[5 + i * 8]);\n              width = Math.sqrt(x * x + y * y);\n              this.bounds = {\n                x: this.bounds.x,\n                y: this.bounds.y,\n                width: width,\n                height: height\n              };\n            }\n          }\n        }\n      }\n    }\n    var nativeRectangle = [0, 0, width, height];\n    var template = new PdfTemplate(nativeRectangle, this._crossReference);\n    _setMatrix(template, this._getRotationAngle());\n    var graphics = template.graphics;\n    if (typeof this.opacity !== 'undefined') {\n      graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n    }\n    if (this.textMarkUpColor) {\n      var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n      var brush = new PdfBrush(this.textMarkUpColor);\n      var x1 = 0;\n      var y1 = 0;\n      var w1 = 0;\n      var h1 = 0;\n      if (this.boundsCollection.length > 1) {\n        for (var i = 0; i < this.boundsCollection.length; i++) {\n          var bounds = [];\n          bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n          bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n          bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n          bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n          if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n            graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n          } else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n            x1 = bounds[0] - rectangle.x;\n            y1 = bounds[1] - rectangle.y + (bounds[3] - bounds[3] / 2 / 3);\n            w1 = bounds[2] + (bounds[0] - rectangle.x);\n            h1 = bounds[1] - rectangle.y + (bounds[3] - bounds[3] / 2 / 3);\n            graphics.drawLine(pdfPen, x1, y1, w1, h1);\n          } else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n            x1 = bounds[0] - rectangle.x;\n            y1 = bounds[1] - rectangle.y + (bounds[3] - bounds[3] / 2);\n            w1 = bounds[2] + (bounds[0] - rectangle.x);\n            h1 = bounds[1] - rectangle.y + (bounds[3] - bounds[3] / 2);\n            graphics.drawLine(pdfPen, x1, y1, w1, h1);\n          } else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n            pdfPen._width = bounds[3] * 0.02;\n            graphics.save();\n            graphics.translateTransform(bounds[0] - rectangle.x, bounds[1] - rectangle.y);\n            graphics.setClip([0, 0, bounds[2], bounds[3]]);\n            graphics._drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n            graphics.restore();\n          }\n        }\n      } else {\n        if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n          graphics.drawRectangle(0, 0, width, height, brush);\n        } else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n          graphics.drawLine(pdfPen, 0, height - height / 2 / 3, width, height - height / 2 / 3);\n        } else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n          graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n        } else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n          pdfPen._width = height * 0.02;\n          graphics._drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n        }\n        if (this._isLoaded) {\n          this._dictionary.update('Rect', [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height]);\n        }\n      }\n    }\n    return template;\n  };\n  PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n    if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n      width = Math.floor(width) + 1;\n    }\n    var path = new _PdfPath();\n    var pathPoints = new Array();\n    var pathPointsCount = Math.ceil(width / height * 16);\n    var length = width / (pathPointsCount / 2);\n    var location = parseFloat(((length + length) * 0.6).toFixed(2));\n    var zigZag = location;\n    var x = 0;\n    for (var i = 0; i < pathPointsCount; i++) {\n      var y = height - location + zigZag - height * 0.02;\n      var temp = [x, parseFloat(y.toFixed(2))];\n      pathPoints.push(temp);\n      if (zigZag === 0) {\n        zigZag = location;\n      } else {\n        zigZag = 0;\n      }\n      x = x + length;\n    }\n    path._addLines(pathPoints);\n    return path;\n  };\n  PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n    var textQuadLocation = [];\n    var pageHeight = pageSize[1];\n    this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n    var noofRect = this._quadPoints.length / 8;\n    for (var i = 0; i < noofRect; i++) {\n      var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n      var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n      textQuadLocation[0 + i * 8] = locationX;\n      textQuadLocation[1 + i * 8] = pageHeight - locationY;\n      textQuadLocation[2 + i * 8] = locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2];\n      textQuadLocation[3 + i * 8] = pageHeight - locationY;\n      textQuadLocation[4 + i * 8] = locationX;\n      textQuadLocation[5 + i * 8] = textQuadLocation[1 + i * 8] - this._boundsCollection[Number.parseInt(i.toString(), 10)][3];\n      textQuadLocation[6 + i * 8] = locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2];\n      textQuadLocation[7 + i * 8] = textQuadLocation[5 + i * 8];\n    }\n    this._points = textQuadLocation;\n    this._dictionary.set('QuadPoints', this._points);\n  };\n  return PdfTextMarkupAnnotation;\n}(PdfComment);\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */function (_super) {\n  __extends(PdfWatermarkAnnotation, _super);\n  function PdfWatermarkAnnotation(text, x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._watermarkText = '';\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n    if (typeof text !== 'undefined') {\n      _this._watermarkText = text;\n      _this.text = text;\n    }\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.watermarkAnnotation;\n    return _this;\n  }\n  PdfWatermarkAnnotation._load = function (page, dictionary) {\n    var annot = new PdfWatermarkAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfWatermarkAnnotation.prototype._postProcess = function () {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    if (typeof this.color === 'undefined') {\n      this.color = [0, 0, 0];\n    }\n    this._appearanceTemplate = this._createWatermarkAppearance();\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n      this._dictionary.set('CA', this._opacity);\n    }\n  };\n  PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n    var font = this._obtainFont();\n    if (typeof font === 'undefined' || font === null || !this._isLoaded && font.size === 1) {\n      font = this._lineCaptionFont;\n      this._pdfFont = font;\n    }\n    this._rotateAngle = this._getRotationAngle();\n    if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n      if (this._rotateAngle === 0) {\n        this._rotateAngle = this.rotationAngle * 90;\n      }\n      this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n    }\n    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n    var appearance = new PdfAppearance(this, nativeRectangle);\n    appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n    var template = appearance.normal;\n    _setMatrix(template, this._rotateAngle);\n    var graphics = appearance.normal.graphics;\n    var width = this.border.width / 2;\n    var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n    var borderPen = new PdfPen(this.color, width);\n    var backBrush;\n    if (this.innerColor) {\n      backBrush = new PdfBrush(this._innerColor);\n    }\n    if (this._isLoaded) {\n      if (this._dictionary.has('Contents')) {\n        this._watermarkText = this._dictionary.get('Contents');\n      }\n      this._dictionary.update('Contents', this._watermarkText);\n    } else {\n      this._dictionary.update('Contents', this._watermarkText);\n    }\n    if (typeof this._watermarkText !== 'undefined') {\n      graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n    }\n    if (this._dictionary.has('AP')) {\n      _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n    }\n    var dictionary = new _PdfDictionary();\n    graphics._template._content.dictionary._updated = true;\n    var reference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(reference, graphics._template._content);\n    graphics._template._content.reference = reference;\n    dictionary.set('N', reference);\n    dictionary._updated = true;\n    this._dictionary.set('AP', dictionary);\n    return template;\n  };\n  PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (!isFlatten) {\n        this._appearanceTemplate = this._createWatermarkAppearance();\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          if (appearanceStream) {\n            var reference = dictionary.getRaw('N');\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess();\n      if (!this._appearanceTemplate) {\n        if (isFlatten) {\n          if (!this._dictionary.has('AP')) {\n            this._appearanceTemplate = this._createWatermarkAppearance();\n          } else {\n            var dictionary = this._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n              var appearanceStream = dictionary.get('N');\n              if (appearanceStream) {\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                  appearanceStream.reference = reference;\n                }\n                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n        var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n        if (box) {\n          this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n      }\n      this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n    }\n  };\n  return PdfWatermarkAnnotation;\n}(PdfAnnotation);\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */function (_super) {\n  __extends(PdfRubberStampAnnotation, _super);\n  function PdfRubberStampAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._icon = PdfRubberStampAnnotationIcon.draft;\n    _this._stampWidth = 0;\n    _this._iconString = '';\n    _this.rotateAngle = 0;\n    _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.rubberStampAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n    /**\n     * Gets the icon type of the rubber stamp annotation.\n     *\n     * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n     * // Gets the icon type of the rubber stamp annotation.\n     * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Name')) {\n        this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n      }\n      return this._icon;\n    },\n    /**\n     * Sets the icon type of the rubber stamp annotation.\n     *\n     * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n     * // Sets the icon type of the rubber stamp annotation.\n     * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._icon = value;\n        this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n    /**\n     * Get the appearance of the rubber stamp annotation. (Read only)\n     *\n     * @returns {PdfAppearance} Returns the appearance of the annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new rubber stamp annotation\n     * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n     * // Get the appearance of the annotation\n     * let appearance: PdfAppearance = annotation.appearance;\n     * // Access the normal template of the appearance\n     * let template: PdfTemplate = appearance.normal;\n     * // Create new image object by using JPEG image data as Base64 string format\n     * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n     * // Draw the image as the custom appearance for the annotation\n     * template.graphics.drawImage(image, 0, 0, 100, 50);\n     * // Add annotation to the page\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoaded) {\n        return null;\n      }\n      if (typeof this._appearance === 'undefined') {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        this._appearance = new PdfAppearance(this, nativeRectangle);\n        this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n      }\n      return this._appearance;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n    get: function () {\n      var innerBounds;\n      if (this._isLoaded) {\n        innerBounds = this._obtainInnerBounds();\n        innerBounds.x = this.bounds.x;\n        innerBounds.y = this.bounds.y;\n      }\n      return innerBounds;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfRubberStampAnnotation._load = function (page, dictionary) {\n    var annot = new PdfRubberStampAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfRubberStampAnnotation.prototype._postProcess = function () {\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    this._appearanceTemplate = this._createRubberStampAppearance();\n  };\n  PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n    var xCoordinate = [];\n    var yCoordinate = [];\n    var point1 = this._transformPoint(bBoxValue.x, bBoxValue.height, matrix);\n    xCoordinate[0] = point1[0];\n    yCoordinate[0] = point1[1];\n    var point2 = this._transformPoint(bBoxValue.width, bBoxValue.y, matrix);\n    xCoordinate[1] = point2[0];\n    yCoordinate[1] = point2[1];\n    var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n    xCoordinate[2] = point3[0];\n    yCoordinate[2] = point3[1];\n    var point4 = this._transformPoint(bBoxValue.width, bBoxValue.height, matrix);\n    xCoordinate[3] = point4[0];\n    yCoordinate[3] = point4[1];\n    var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate), this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n    return rect;\n  };\n  PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n    var point = [];\n    point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n    point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n    return point;\n  };\n  PdfRubberStampAnnotation.prototype._minValue = function (values) {\n    var minimum = values[0];\n    for (var i = 1; i < values.length; i++) {\n      if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n        minimum = values[Number.parseInt(i.toString(), 10)];\n      }\n    }\n    return minimum;\n  };\n  PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n    var maximum = values[0];\n    for (var i = 1; i < values.length; i++) {\n      if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n        maximum = values[Number.parseInt(i.toString(), 10)];\n      }\n    }\n    return maximum;\n  };\n  PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    var isTransformBBox = false;\n    if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n      if (!isFlatten && !this._isExport || this._setAppearance) {\n        this._appearanceTemplate = this._createRubberStampAppearance();\n      }\n      if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          if (appearanceStream) {\n            var reference = dictionary.getRaw('N');\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            var isStamp = false;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n              var isRotated = false;\n              var size = void 0;\n              var rect = void 0;\n              if (appearanceStream) {\n                isRotated = this._page.rotation === PdfRotationAngle.angle0 && this.rotateAngle === PdfRotationAngle.angle0;\n                if (!isRotated) {\n                  isRotated = this._page.rotation !== PdfRotationAngle.angle0 && this.rotateAngle === PdfRotationAngle.angle0;\n                }\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n              isStamp = true;\n              isTransformBBox = isRotated ? true : false;\n              if (isTransformBBox) {\n                var matrix = appearanceStream.dictionary.getArray('Matrix');\n                if (matrix) {\n                  var mMatrix = [];\n                  for (var i = 0; i < matrix.length; i++) {\n                    var value = matrix[Number.parseInt(i.toString(), 10)];\n                    mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                  }\n                  var bounds = appearanceStream.dictionary.getArray('BBox');\n                  if (bounds && bounds.length > 3) {\n                    rect = _toRectangle(bounds);\n                    var rectangle = this._transformBBox(rect, mMatrix);\n                    size = [rectangle[2], rectangle[3]];\n                    this._appearanceTemplate._size = size;\n                  } else {\n                    size = [rect.width, rect.height];\n                  }\n                }\n              } else {\n                size = [rect.width, rect.height];\n              }\n            }\n            if (!isStamp) {\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    } else {\n      if (!(this._isImported && this._dictionary.has('AP'))) {\n        this._postProcess();\n      }\n      if (!this._appearanceTemplate && (isFlatten || this._isImported)) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createRubberStampAppearance();\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            if (appearanceStream) {\n              var reference = dictionary.getRaw('N');\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n        var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n        if (box) {\n          this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n      }\n      if (isTransformBBox) {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n      } else {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      }\n    }\n  };\n  PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n    var appearance;\n    if (this._appearance) {\n      appearance = this._appearance;\n      if (!this._dictionary.has('Name')) {\n        this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n      }\n    } else {\n      this._iconString = this._obtainIconName(this._icon);\n      this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n      appearance = new PdfAppearance(this, nativeRectangle);\n      appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n    }\n    var template = appearance.normal;\n    if (typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n      this.rotateAngle = this._getRotationAngle();\n      if (this.rotateAngle === 0) {\n        this.rotateAngle = this.rotationAngle * 90;\n      }\n      this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n    }\n    _setMatrix(template, this.rotateAngle);\n    if (!this._appearance) {\n      this._drawStampAppearance(template);\n    }\n    if (this._dictionary.has('AP')) {\n      _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n    }\n    var dictionary = new _PdfDictionary();\n    template._content.dictionary._updated = true;\n    var reference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(reference, template._content);\n    template._content.reference = reference;\n    dictionary.set('N', reference);\n    dictionary._updated = true;\n    this._dictionary.set('AP', dictionary);\n    this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    var size = this._page.size;\n    var rectangle = [this.bounds.x, this.bounds.y + this.bounds.height, this.bounds.width, this.bounds.height];\n    rectangle[1] = size[1] - (this.bounds.y + this.bounds.height);\n    this._dictionary.set('Rect', [rectangle[0], rectangle[1], rectangle[0] + rectangle[2], rectangle[1] + rectangle[3]]);\n    return template;\n  };\n  PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n    var stringFormat = new PdfStringFormat();\n    stringFormat.alignment = PdfTextAlignment.center;\n    stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n    var backBrush = new PdfBrush(this._obtainBackGroundColor());\n    var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n    var graphics = template.graphics;\n    graphics.save();\n    graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), template._size[1] / 28);\n    var rubberFont = this._stampAppearanceFont;\n    this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n    graphics.restore();\n  };\n  PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n    switch (icon) {\n      case PdfRubberStampAnnotationIcon.approved:\n        this._iconString = 'Approved';\n        this._stampWidth = 126;\n        break;\n      case PdfRubberStampAnnotationIcon.asIs:\n        this._iconString = 'AsIs';\n        this._stampWidth = 75;\n        break;\n      case PdfRubberStampAnnotationIcon.confidential:\n        this._iconString = 'Confidential';\n        this._stampWidth = 166;\n        break;\n      case PdfRubberStampAnnotationIcon.departmental:\n        this._iconString = 'Departmental';\n        this._stampWidth = 186;\n        break;\n      case PdfRubberStampAnnotationIcon.draft:\n        this._iconString = 'Draft';\n        this._stampWidth = 90;\n        break;\n      case PdfRubberStampAnnotationIcon.experimental:\n        this._iconString = 'Experimental';\n        this._stampWidth = 176;\n        break;\n      case PdfRubberStampAnnotationIcon.expired:\n        this._iconString = 'Expired';\n        this._stampWidth = 116;\n        break;\n      case PdfRubberStampAnnotationIcon.final:\n        this._iconString = 'Final';\n        this._stampWidth = 90;\n        break;\n      case PdfRubberStampAnnotationIcon.forComment:\n        this._iconString = 'ForComment';\n        this._stampWidth = 166;\n        break;\n      case PdfRubberStampAnnotationIcon.forPublicRelease:\n        this._iconString = 'ForPublicRelease';\n        this._stampWidth = 240;\n        break;\n      case PdfRubberStampAnnotationIcon.notApproved:\n        this._iconString = 'NotApproved';\n        this._stampWidth = 186;\n        break;\n      case PdfRubberStampAnnotationIcon.notForPublicRelease:\n        this._iconString = 'NotForPublicRelease';\n        this._stampWidth = 290;\n        break;\n      case PdfRubberStampAnnotationIcon.sold:\n        this._iconString = 'Sold';\n        this._stampWidth = 75;\n        break;\n      case PdfRubberStampAnnotationIcon.topSecret:\n        this._iconString = 'TopSecret';\n        this._stampWidth = 146;\n        break;\n      case PdfRubberStampAnnotationIcon.completed:\n        this._iconString = 'Completed';\n        this._stampWidth = 136;\n        break;\n      case PdfRubberStampAnnotationIcon.void:\n        this._iconString = 'Void';\n        this._stampWidth = 75;\n        break;\n      case PdfRubberStampAnnotationIcon.informationOnly:\n        this._iconString = 'InformationOnly';\n        this._stampWidth = 230;\n        break;\n      case PdfRubberStampAnnotationIcon.preliminaryResults:\n        this._iconString = 'PreliminaryResults';\n        this._stampWidth = 260;\n        break;\n    }\n    return this._iconString;\n  };\n  PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n    var color = [];\n    var red;\n    var green;\n    var blue;\n    if (this._icon === PdfRubberStampAnnotationIcon.notApproved || this._icon === PdfRubberStampAnnotationIcon.void) {\n      red = 251;\n      green = 222;\n      blue = 221;\n      color = [red, green, blue];\n    } else if (this._icon === PdfRubberStampAnnotationIcon.approved || this._icon === PdfRubberStampAnnotationIcon.final || this._icon === PdfRubberStampAnnotationIcon.completed) {\n      red = 229;\n      green = 238;\n      blue = 222;\n      color = [red, green, blue];\n    } else {\n      red = 219;\n      green = 227;\n      blue = 240;\n      color = [red, green, blue];\n    }\n    return color;\n  };\n  PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n    var color = [];\n    var red;\n    var green;\n    var blue;\n    if (this._icon === PdfRubberStampAnnotationIcon.notApproved || this._icon === PdfRubberStampAnnotationIcon.void) {\n      red = 151;\n      green = 23;\n      blue = 15;\n      color = [red, green, blue];\n    } else if (this._icon === PdfRubberStampAnnotationIcon.approved || this._icon === PdfRubberStampAnnotationIcon.final || this._icon === PdfRubberStampAnnotationIcon.completed) {\n      red = 73;\n      green = 110;\n      blue = 38;\n      color = [red, green, blue];\n    } else {\n      red = 24;\n      green = 37;\n      blue = 100;\n      color = [red, green, blue];\n    }\n    return color;\n  };\n  PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n    graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n    var pdfBrush = new PdfBrush(this._obtainBorderColor());\n    graphics.drawString(this._iconString.toUpperCase(), font, [this._stampWidth / 2 + 1, 15, 0, 0], null, pdfBrush, format);\n  };\n  PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n    var bounds = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    if (this._dictionary && this._dictionary.has('AP')) {\n      var appearanceDictionary = this._dictionary.get('AP');\n      if (appearanceDictionary && appearanceDictionary.has('N')) {\n        var normalAppearance = appearanceDictionary.get('N');\n        if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n          var normalAppearanceDictionary = normalAppearance.dictionary;\n          if (normalAppearanceDictionary.has('BBox')) {\n            var values = normalAppearanceDictionary.getArray('BBox');\n            if (values && values.length === 4) {\n              bounds = _toRectangle(values);\n            }\n          }\n        }\n      }\n    }\n    return bounds;\n  };\n  return PdfRubberStampAnnotation;\n}(PdfComment);\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */function (_super) {\n  __extends(PdfSoundAnnotation, _super);\n  /**\n   * Initializes a new instance of the `PdfSoundAnnotation` class.\n   *\n   * @private\n   */\n  function PdfSoundAnnotation() {\n    var _this = _super.call(this) || this;\n    _this._type = _PdfAnnotationType.soundAnnotation;\n    return _this;\n  }\n  PdfSoundAnnotation._load = function (page, dictionary) {\n    var annot = new PdfSoundAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  return PdfSoundAnnotation;\n}(PdfComment);\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */function (_super) {\n  __extends(PdfFreeTextAnnotation, _super);\n  function PdfFreeTextAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._intentString = '';\n    _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n    _this._textAlignment = PdfTextAlignment.left;\n    _this._cropBoxValueX = 0;\n    _this._cropBoxValueY = 0;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.freeTextAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n    /**\n     * Gets the callout lines of the free text annotation.\n     *\n     * @returns {Array<number[]>} Callout lines.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Gets the callout lines of the free text annotation.\n     * let calloutLines: Array<number[]> = annotation.calloutLines;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._calloutLines === 'undefined') {\n        this._calloutLines = this._getCalloutLinePoints();\n      }\n      return this._calloutLines;\n    },\n    /**\n     * Sets the callout lines of the free text annotation.\n     *\n     * @param {Array<number[]>} value Callout lines.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Sets the callout lines of the free text annotation.\n     * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (!this._isLoaded) {\n        this._calloutLines = value;\n      }\n      var isChanged = false;\n      if (this._isLoaded && value.length >= 2) {\n        if (this._calloutLines.length === value.length) {\n          for (var i = 0; i < value.length; i++) {\n            var values = value[Number.parseInt(i.toString(), 10)];\n            for (var j = 0; j < values.length; j++) {\n              if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !== this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                isChanged = true;\n                break;\n              }\n            }\n          }\n        } else {\n          isChanged = true;\n        }\n      }\n      if (isChanged) {\n        var pageHeight = this._page.size[1];\n        var lines = [];\n        for (var i = 0; i < value.length; i++) {\n          if (i < value.length) {\n            lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n            lines.push(pageHeight + this._cropBoxValueY - value[Number.parseInt(i.toString(), 10)][1]);\n          } else {\n            break;\n          }\n        }\n        this._calloutLines = value;\n        this._dictionary.update('CL', lines);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n    /**\n     * Gets the line ending style of the annotation.\n     *\n     * @returns {PdfLineEndingStyle} Line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Gets the Line ending style of the annotation.\n     * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      this._lineEndingStyle = this._obtainLineEndingStyle();\n      return this._lineEndingStyle;\n    },\n    /**\n     * Sets the line ending style of the line annotation.\n     *\n     * @param {PdfLineEndingStyle} value Line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Sets the line ending style of the line annotation.\n     * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n      }\n      this._lineEndingStyle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n    /**\n     * Gets the text markup color of the annotation.\n     *\n     * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Gets the text markup color of the annotation.\n     * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._textMarkUpColor === 'undefined') {\n        var color = void 0;\n        if (this._dictionary.has('TextColor')) {\n          this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n          return this._textMarkUpColor;\n        }\n        if (this._dictionary.has('DS')) {\n          var collections = this._dictionary.get('DS').split(';');\n          for (var i = 0; i < collections.length; i++) {\n            if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n              color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n              if (color.startsWith('#')) {\n                color = color.substring(1);\n              }\n              this._textMarkUpColor = _convertToColor(color);\n              return this._textMarkUpColor;\n            }\n          }\n        }\n        if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n          //Need to code\n        }\n      }\n      return this._textMarkUpColor;\n    },\n    /**\n     * Sets the text markup color of the annotation.\n     *\n     * @param {number[]} value R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Sets the text markup color of the annotation.\n     * annotation.textMarkUpColor = [200, 200, 200];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value.length === 3) {\n        this._textMarkUpColor = value;\n        var ds = 'font:' + this.font._metrics._postScriptName + ' ' + this.font._size + 'pt;style:' + _reverseMapPdfFontStyle(this.font._style) + ';color:' + this._colorToHex(value);\n        this._dictionary.update('DS', ds);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n    /**\n     * Gets the text alignment of the annotation.\n     *\n     * @returns {PdfTextAlignment} Text alignment.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Gets the text alignment of the annotation.\n     * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Q')) {\n        this._textAlignment = this._dictionary.get('Q');\n      }\n      return this._textAlignment;\n    },\n    /**\n     * Sets the text alignment of the annotation.\n     *\n     * @param {PdfTextAlignment} value Text alignment.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Sets the text alignment of the annotation.\n     * annotation.textAlignment = PdfTextAlignment.justify;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._textAlignment !== value) {\n        this._dictionary.update('Q', value);\n      }\n      this._textAlignment = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n    /**\n     * Gets the font of the annotation.\n     *\n     * @returns {PdfFont} font.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Gets the font of the annotation.\n     * let font: PdfFont = annotation.font;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (!this._font) {\n        this._font = this._obtainFont();\n        if (this._font === null || typeof this._font === 'undefined' || !this._isLoaded && this._font.size === 1) {\n          this._font = this._markUpFont;\n        }\n      }\n      return this._font;\n    },\n    /**\n     * Sets the font of the annotation.\n     *\n     * @param {PdfFont} value font.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Sets the font of the annotation.\n     * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._font = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n    /**\n     * Gets the border color of the annotation.\n     *\n     * @returns {number[]} R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Gets the border color of the annotation.\n     * let borderColor: number[] = annotation.borderColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n        this._borderColor = this._obtainColor();\n      }\n      return this._borderColor;\n    },\n    /**\n     * Sets the border color of the annotation.\n     *\n     * @param {number[]} value R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Sets the border color of the annotation.\n     * annotation.borderColor = [150, 150, 150];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value.length === 3) {\n        this._borderColor = value;\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n    /**\n     * Gets the intent of the annotation.\n     *\n     * @returns {PdfAnnotationIntent} Annotation intent.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Gets the intent of the annotation.\n     * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('IT')) {\n        this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n      } else {\n        this._annotationIntent = PdfAnnotationIntent.none;\n      }\n      return this._annotationIntent;\n    },\n    /**\n     * Sets the intent of the annotation.\n     *\n     * @param {PdfAnnotationIntent} value Annotation intent.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n     * // Sets the intent of the annotation.\n     * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined') {\n        this._annotationIntent = value;\n        if (value === PdfAnnotationIntent.none) {\n          this._dictionary.update('Subj', 'Text Box');\n        } else {\n          this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n    get: function () {\n      var value;\n      if (this._dictionary.has('MK')) {\n        value = this._dictionary.get('MK');\n      }\n      return value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfFreeTextAnnotation._load = function (page, dictionary) {\n    var annot = new PdfFreeTextAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n    this._paddings = paddings;\n  };\n  PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    this._updateCropBoxValues();\n    if (isFlatten || this._setAppearance) {\n      this._appearanceTemplate = this._createAppearance();\n    }\n    if (!isFlatten) {\n      var size = this._page.size;\n      var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n      this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n      this._saveFreeTextDictionary();\n    }\n  };\n  PdfFreeTextAnnotation.prototype._updateCropBoxValues = function () {\n    if (this._page) {\n      var cropOrMediaBox = void 0;\n      if (this._page._pageDictionary.has('CropBox')) {\n        cropOrMediaBox = this._page._pageDictionary.getArray('CropBox');\n      } else if (this._page._pageDictionary.has('MediaBox')) {\n        cropOrMediaBox = this._page._pageDictionary.getArray('MediaBox');\n      }\n      if (cropOrMediaBox) {\n        this._cropBoxValueX = cropOrMediaBox[0];\n        this._cropBoxValueY = cropOrMediaBox[1];\n      }\n    }\n  };\n  PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (this._isLoaded) {\n      if (this._setAppearance || isFlatten && !this._dictionary.has('AP')) {\n        this._appearanceTemplate = this._createAppearance();\n      }\n      if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          var appearanceStream = dictionary.get('N');\n          if (appearanceStream) {\n            var reference = dictionary.getRaw('N');\n            if (reference) {\n              appearanceStream.reference = reference;\n            }\n            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n          }\n        }\n      }\n    } else {\n      this._postProcess(isFlatten);\n      if (!this._appearanceTemplate && isFlatten) {\n        if (!this._dictionary.has('AP')) {\n          this._appearanceTemplate = this._createAppearance();\n        } else {\n          var dictionary = this._dictionary.get('AP');\n          if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            if (appearanceStream) {\n              var reference = dictionary.getRaw('N');\n              if (reference) {\n                appearanceStream.reference = reference;\n              }\n              this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n            }\n          }\n        }\n      }\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      if (this._isLoaded) {\n        this._flattenLoadedPopUp();\n      } else {\n        this._flattenPopUp();\n      }\n    }\n    if (isFlatten && this._appearanceTemplate) {\n      var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n      if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n        var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n        if (box) {\n          this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n      }\n      if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      } else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      } else if (this._dictionary.has('AP')) {\n        if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n          this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n      }\n    }\n    if (!isFlatten && this._setAppearance) {\n      var appearance = void 0;\n      if (this._dictionary.has('AP')) {\n        appearance = this._dictionary.get('AP');\n      } else {\n        var reference_8 = this._crossReference._getNextReference();\n        appearance = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(reference_8, appearance);\n        this._dictionary.update('AP', reference_8);\n      }\n      _removeDuplicateReference(appearance, this._crossReference, 'N');\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n      appearance.update('N', reference);\n    }\n  };\n  PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n    var isValidMatrix = true;\n    var pointF = bounds;\n    if (dictionary && dictionary.has('Matrix')) {\n      var box = dictionary.getArray('BBox');\n      var matrix = dictionary.getArray('Matrix');\n      if (matrix && box && matrix.length > 3 && box.length > 2) {\n        if (typeof matrix[0] !== 'undefined' && typeof matrix[1] !== 'undefined' && typeof matrix[2] !== 'undefined' && typeof matrix[3] !== 'undefined') {\n          if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n            if (typeof box[0] !== 'undefined' && typeof box[1] !== 'undefined' && typeof box[2] !== 'undefined' && typeof box[3] !== 'undefined') {\n              if (Math.round(box[0]) !== Math.round(-matrix[4]) && Math.round(box[1]) !== Math.round(-matrix[5]) || box[0] === 0 && Math.round(-matrix[4]) === 0) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                  graphics.setTransparency(this._opacity);\n                }\n                pointF.x -= box[0];\n                pointF.y += box[1];\n                graphics._drawTemplate(appearanceTemplate, pointF);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n                isValidMatrix = false;\n              }\n            }\n          }\n        }\n      }\n    }\n    return isValidMatrix;\n  };\n  PdfFreeTextAnnotation.prototype._createAppearance = function () {\n    var template;\n    var borderWidth = this.border.width / 2;\n    var nativeRectangle = this._obtainAppearanceBounds();\n    var rotationAngle = this.rotate;\n    if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n      this._isAllRotation = false;\n    }\n    if (rotationAngle > 0 && this._isAllRotation) {\n      template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n    } else {\n      template = new PdfTemplate(nativeRectangle, this._crossReference);\n    }\n    _setMatrix(template, this._getRotationAngle());\n    var parameter = new _PaintParameter();\n    var text = this._obtainText();\n    template._writeTransformation = false;\n    var graphics = template.graphics;\n    var alignment = this._obtainTextAlignment();\n    var borderColor = this._obtainColor();\n    var borderPen = new PdfPen(borderColor, this.border.width);\n    if (this.border.width > 0) {\n      parameter.borderPen = borderPen;\n    }\n    var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n    if (this.color) {\n      parameter.foreBrush = new PdfBrush(this._color);\n    }\n    if (this.textMarkUpColor) {\n      parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n    }\n    parameter.borderWidth = this.border.width;\n    if (this.calloutLines && this._calloutLines.length >= 2) {\n      this._drawCallOuts(graphics, borderPen);\n      if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n        this._lineEndingStyle = this.lineEndingStyle;\n      }\n      if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n        var linePoints = this._obtainLinePoints();\n        var angle = this._getAngle(linePoints);\n        var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n        this._drawLineEndStyle(endPoint, graphics, angle, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n      }\n      if (!this._dictionary.has('RD')) {\n        rectangle = [this.bounds.x, -(this._page.size[1] - (this.bounds.y + this.bounds.height)), this.bounds.width, -this.bounds.height];\n      } else {\n        rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n      }\n      rectangle[0] = rectangle[0] + this._cropBoxValueX;\n      rectangle[1] = rectangle[1] - this._cropBoxValueY;\n      this._calculateRectangle(rectangle);\n      parameter.bounds = rectangle;\n    } else {\n      rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n      parameter.bounds = rectangle;\n    }\n    var outerRectangle = this._obtainAppearanceBounds();\n    var value = [rectangle[0] - outerRectangle[0], -rectangle[1] - outerRectangle[1], rectangle[2] - outerRectangle[2], -rectangle[1] - outerRectangle[1] + -rectangle[3] - outerRectangle[3]];\n    for (var i = 0; i < value.length; i++) {\n      if (value[Number.parseInt(i.toString(), 10)] < 0) {\n        value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n      }\n    }\n    this._dictionary.update('RD', value);\n    if (this.opacity && this._opacity < 1) {\n      graphics.save();\n      graphics.setTransparency(this._opacity);\n    }\n    if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n      graphics.save();\n    }\n    this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n    this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n    if (this.opacity && this._opacity < 1) {\n      graphics.restore();\n    }\n    if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n      graphics.restore();\n    }\n    var bounds = this._obtainAppearanceBounds();\n    this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n    return template;\n  };\n  PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n    var outerRectangle = this._obtainAppearanceBounds();\n    var value = [innerRectangle[0] - outerRectangle[0], -innerRectangle[1] - outerRectangle[1], innerRectangle[2] - outerRectangle[2], -innerRectangle[1] - outerRectangle[1] + -innerRectangle[3] - outerRectangle[3]];\n    for (var i = 0; i < 4; i++) {\n      if (value[Number.parseInt(i.toString(), 10)] < 0) {\n        value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n      }\n    }\n    this._dictionary.set('RD', value);\n  };\n  PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n    switch (_annotationIntent) {\n      case PdfAnnotationIntent.freeTextCallout:\n        this._intentString = 'FreeTextCallout';\n        break;\n      case PdfAnnotationIntent.freeTextTypeWriter:\n        this._intentString = 'FreeTextTypeWriter';\n        break;\n    }\n    return this._intentString;\n  };\n  PdfFreeTextAnnotation.prototype._obtainFont = function () {\n    var fontData = this._obtainFontDetails();\n    if (!fontData.size && this._dictionary.has('RC')) {\n      //Parse XML data\n    }\n    return _mapFont(fontData.name, fontData.size, fontData.style, this);\n  };\n  PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n    var isRotation = false;\n    var angle = this.rotate;\n    if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n      rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n    } else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n      rectangle = [-(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2], -rectangle[3]];\n    } else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n      rectangle = [rectangle[1] + rectangle[3], -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n    } else if (angle === 0 && !this._isAllRotation) {\n      rectangle = [rectangle[0], rectangle[1] + rectangle[3], rectangle[2], rectangle[3]];\n    }\n    if (typeof this._font === 'undefined' || this._font === null || !this._isLoaded && this._font.size === 1) {\n      this._font = this._markUpFont;\n    }\n    if (angle > 0 && this._isAllRotation) {\n      isRotation = true;\n      var bounds_1 = this.bounds;\n      var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n      var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n      if (angle > 0 && angle <= 91) {\n        graphics.translateTransform(textSize[1], -bounds_1.height);\n      } else if (angle > 91 && angle <= 181) {\n        graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n      } else if (angle > 181 && angle <= 271) {\n        graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n      } else if (angle > 271 && angle < 360) {\n        graphics.translateTransform(textSize[1], -textSize[1]);\n      }\n      graphics.rotateTransform(angle);\n      parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n    }\n    var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n    if (this._paddings && !this._isLoaded) {\n      var left = this._paddings._left;\n      var top_8 = this._paddings._top;\n      var right = this._paddings._right + this._paddings._left;\n      var bottom = this._paddings._top + this._paddings._bottom;\n      if (parameter.borderWidth > 0) {\n        var first_1 = rectangle[0] + (parameter.borderWidth + left);\n        var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n        var third = rectangle[2] - (parameter.borderWidth * 2 + right);\n        var forth = void 0;\n        if (rectangle[3] > 0) {\n          forth = rectangle[3] - (parameter.borderWidth * 2 + bottom);\n        } else {\n          forth = -rectangle[3] - (parameter.borderWidth * 2 + bottom);\n        }\n        rectangle = [first_1, second_1, third, forth];\n      } else {\n        var first_2 = rectangle[0] + left;\n        var second_2 = rectangle[1] + top_8;\n        var third = rectangle[2] - right;\n        var forth = void 0;\n        if (rectangle[3] > 0) {\n          forth = rectangle[3] - bottom;\n        } else {\n          forth = -rectangle[3] - bottom;\n        }\n        rectangle = [first_2, second_2, third, forth];\n      }\n    } else if (parameter.borderWidth > 0) {\n      rectangle = [rectangle[0] + parameter.borderWidth * 1.5, rectangle[1] + parameter.borderWidth * 1.5, rectangle[2] - parameter.borderWidth * 3, rectangle[3] > 0 ? rectangle[3] - parameter.borderWidth * 3 : -rectangle[3] - parameter.borderWidth * 3];\n    }\n    var first = this._font._metrics._getHeight() > (rectangle[3] > 0 ? rectangle[3] : -rectangle[3]);\n    var second = this._font._metrics._getHeight() <= (bounds[3] > 0 ? bounds[3] : -bounds[3]);\n    var checkPaddingWithFontHeight = first && second;\n    this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n  };\n  PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n    var isRotation = false;\n    if (this._dictionary.has('BE')) {\n      for (var i = 0; i < rectangle.length; i++) {\n        if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n          rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n        }\n      }\n      this._drawAppearance(graphics, parameter, rectangle);\n      if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n        graphics.rotateTransform(-90);\n      } else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n        graphics.rotateTransform(-180);\n      } else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n        graphics.rotateTransform(-270);\n      }\n    } else {\n      if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n        graphics.rotateTransform(-90);\n        parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0] - rectangle[3], -rectangle[2]];\n      } else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n        graphics.rotateTransform(-180);\n        parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n      } else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n        graphics.rotateTransform(-270);\n        parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n      }\n      this._drawFreeTextAnnotation(graphics, parameter, '', this._font, parameter.bounds, false, alignment, isRotation);\n    }\n  };\n  PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n    var graphicsPath = new _PdfPath();\n    graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n    if (this._dictionary.has('BE')) {\n      var dictionary = this._dictionary.get('BE');\n      if (dictionary && dictionary.has('I')) {\n        var value = dictionary.get('I');\n        var radius = value === 1 ? 4 : 9;\n        this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n      }\n    }\n  };\n  PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n    if (!isSkipDrawRectangle) {\n      g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n    } else {\n      var format = new PdfStringFormat();\n      format.lineAlignment = PdfVerticalAlignment.top;\n      format.alignment = alignment;\n      format.lineSpacing = 0;\n      if (isRotation) {\n        g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n      } else {\n        g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n      }\n    }\n  };\n  PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n    if (this._dictionary.has('CL')) {\n      var calloutLinepoints = this._dictionary.getArray('CL');\n      if (calloutLinepoints) {\n        this._calloutLines = [];\n        for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n          var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)], this._page.size[1] - calloutLinepoints[i + 1]];\n          this._calloutLines.push(points);\n        }\n      }\n    }\n    return this._calloutLines;\n  };\n  PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n    var bounds = [0, 0, 0, 0];\n    if (this.calloutLines && this._calloutLines.length > 0) {\n      var path = new _PdfPath();\n      var pointArray = [];\n      var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n      for (var i = 0; i < length_2; i++) {\n        pointArray.push([0, 0]);\n      }\n      if (this._calloutLines.length >= 2) {\n        this._obtainCallOutsNative();\n        for (var i = 0; i < this._calloutLines.length; i++) {\n          if (i < 3) {\n            pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0], this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n          } else {\n            break;\n          }\n        }\n      }\n      if (pointArray.length > 0) {\n        if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n          this._expandAppearance(pointArray);\n        }\n        path._addLines(pointArray);\n      }\n      path._addRectangle(this.bounds.x - 2, this._page.size[1] - (this.bounds.y + this.bounds.height) - 2, this.bounds.width + 2 * 2, this.bounds.height + 2 * 2);\n      bounds = path._getBounds();\n    } else {\n      bounds = [this.bounds.x, this._page.size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    }\n    return bounds;\n  };\n  PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n    if (this.calloutLines && this._calloutLines.length > 0) {\n      var size = this._page.size;\n      this._calloutsClone = [];\n      for (var i = 0; i < this._calloutLines.length; i++) {\n        this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0], size[1] - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n      }\n    }\n  };\n  PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n    var pageHeight = this._page.size[1];\n    return [this.calloutLines[1][0], pageHeight - this.calloutLines[1][1], this.calloutLines[0][0], pageHeight - this.calloutLines[0][1]];\n  };\n  PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n    var lineEndingStyle = PdfLineEndingStyle.square;\n    if (this._dictionary.has('LE')) {\n      lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n    }\n    return lineEndingStyle;\n  };\n  PdfFreeTextAnnotation.prototype._obtainText = function () {\n    var text = '';\n    if (this._dictionary.has('Contents')) {\n      var markUpText = this._dictionary.get('Contents');\n      if (markUpText) {\n        text = markUpText;\n      }\n      if (text && text !== '') {\n        this._text = text;\n      }\n      return text;\n    } else if (this._dictionary.has('RC')) {\n      //this._parseXMLData();\n      text = this._rcText;\n      return text;\n    }\n    return text;\n  };\n  PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n    var textAlignment = PdfTextAlignment.left;\n    var hasAlignment;\n    if (this._dictionary.has('Q')) {\n      var value = this._dictionary.get('Q');\n      if (typeof value !== 'undefined') {\n        textAlignment = value;\n        hasAlignment = true;\n      }\n    } else if (this._dictionary.has('RC')) {\n      //Need to add\n    }\n    if (!hasAlignment && this._dictionary.has('DS')) {\n      var value = this._dictionary.get('DS');\n      var collections = value.split(';');\n      for (var i = 0; i < collections.length; i++) {\n        if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n          switch (collections[Number.parseInt(i.toString(), 10)]) {\n            case 'left':\n              textAlignment = PdfTextAlignment.left;\n              break;\n            case 'right':\n              textAlignment = PdfTextAlignment.right;\n              break;\n            case 'center':\n              textAlignment = PdfTextAlignment.center;\n              break;\n            case 'justify':\n              textAlignment = PdfTextAlignment.justify;\n              break;\n          }\n        }\n      }\n    }\n    return textAlignment;\n  };\n  PdfFreeTextAnnotation.prototype._obtainColor = function () {\n    var color;\n    if (this._isLoaded) {\n      if (this._dictionary.has('DA')) {\n        var entry = this._dictionary.get('DA');\n        if (Array.isArray(entry) && entry.length > 0) {\n          color = [entry[0], entry[1], entry[2]];\n        } else if (typeof entry === 'string') {\n          this._da = new _PdfDefaultAppearance(entry);\n          color = this._da.color;\n        }\n      } else if (this._dictionary.has('MK')) {\n        var mkDict = this._mkDictionary;\n        if (mkDict && mkDict.has('BC')) {\n          color = _parseColor(mkDict.getArray('BC'));\n        }\n      } else {\n        color = [0, 0, 0];\n      }\n    } else {\n      color = this._borderColor ? this._borderColor : [0, 0, 0];\n    }\n    return color;\n  };\n  PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n    var pointY = pointArray[0][1];\n    var pointX = pointArray[0][0];\n    if (pointY > this.bounds.y) {\n      if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n        pointArray[0][1] -= this.border.width * 11;\n      }\n    } else {\n      pointArray[0][1] += this.border.width * 11;\n    }\n    if (pointX <= this.bounds.x) {\n      pointArray[0][0] -= this.border.width * 11;\n    } else {\n      pointArray[0][0] += this.border.width * 11;\n    }\n  };\n  PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n    var path = new _PdfPath();\n    var pointArray = [];\n    var length = this._calloutLines.length === 2 ? 2 : 3;\n    for (var i = 0; i < length; i++) {\n      pointArray.push([0, 0]);\n    }\n    if (this._calloutLines.length >= 2) {\n      this._obtainCallOutsNative();\n      for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0], -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n      }\n    }\n    if (pointArray.length > 0) {\n      path._addLines(pointArray);\n    }\n    graphics._drawPath(path, borderPen);\n  };\n  PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n    if (typeof this.font === 'undefined' || this.font === null || !this._isLoaded && this.font.size === 1) {\n      this.font = this._markUpFont;\n    }\n    this._dictionary.update('Contents', this.text);\n    if (this._isLoaded) {\n      this._textAlignment = this.textAlignment;\n    }\n    this._dictionary.update('Q', this._textAlignment);\n    if (this.annotationIntent === PdfAnnotationIntent.none) {\n      this._dictionary.update('Subj', 'Text Box');\n    } else {\n      this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n    }\n    var ds = 'font:' + this.font._metrics._postScriptName + ' ' + this.font._size + 'pt;style:' + _reverseMapPdfFontStyle(this.font._style) + ';color:' + this._colorToHex(this.textMarkUpColor);\n    this._dictionary.update('DS', ds);\n    this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n    var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\"><p dir=\"ltr\">';\n    this._dictionary.update('RC', body + (this.text ? this._getXmlFormattedString(this.text) : '') + '</p></body>');\n    if (this._calloutLines && this._calloutLines.length >= 2) {\n      var pageHeight = this._page.size[1];\n      var lines = [];\n      for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n        lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n        lines.push(pageHeight + this._cropBoxValueY - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n      }\n      this._dictionary.update('CL', lines);\n    }\n    if (this._setAppearance) {\n      var rect = this._obtainAppearanceBounds();\n      this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    }\n  };\n  PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n    markupText = markupText.replace('&', '&amp;');\n    markupText = markupText.replace('<', '&lt;');\n    markupText = markupText.replace('>', '&gt;');\n    return markupText;\n  };\n  return PdfFreeTextAnnotation;\n}(PdfComment);\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */function (_super) {\n  __extends(PdfRedactionAnnotation, _super);\n  function PdfRedactionAnnotation(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    _this._textAlignment = PdfTextAlignment.left;\n    _this._dictionary = new _PdfDictionary();\n    _this._dictionary.update('Type', _PdfName.get('Annot'));\n    _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n    if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n      _this.bounds = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n    _this._type = _PdfAnnotationType.redactionAnnotation;\n    return _this;\n  }\n  Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n    /**\n     * Gets the boolean flag indicating whether annotation has repeat text or not.\n     *\n     * @returns {boolean} repeat text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Gets the boolean flag indicating whether annotation has repeat text or not.\n     * let repeatText: boolean = annotation. repeatText;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n        this._repeat = this._dictionary.get('Repeat');\n      }\n      return this._repeat;\n    },\n    /**\n     * Sets the boolean flag indicating whether annotation has repeat text or not.\n     *\n     * @param {boolean} value repeat text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Sets the boolean flag indicating whether annotation has repeat text or not.\n     * annotation.repeatText = false;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._repeat) {\n        this._repeat = value;\n        if (this._dictionary) {\n          this._dictionary.update('Repeat', value);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n    /**\n     * Gets the text alignment of the annotation.\n     *\n     * @returns {PdfTextAlignment} Text alignment.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Gets the text alignment of the annotation.\n     * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._dictionary.has('Q')) {\n        this._textAlignment = this._dictionary.get('Q');\n      }\n      return this._textAlignment;\n    },\n    /**\n     * Sets the text alignment of the annotation.\n     *\n     * @param {PdfTextAlignment} value Text alignment.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Sets the text alignment of the annotation.\n     * annotation.textAlignment = PdfTextAlignment.justify;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._textAlignment !== value) {\n        this._dictionary.update('Q', value);\n      }\n      this._textAlignment = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n    /**\n     * Gets the text color of the annotation.\n     *\n     * @returns {number[]} R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Gets the text color of the annotation.\n     * let textColor : number[] = annotation.textColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n        this._textColor = _parseColor(this._dictionary.getArray('C'));\n      }\n      return this._textColor;\n    },\n    /**\n     * Sets the text color of the annotation.\n     *\n     * @param {number[]} value R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Sets the text color of the annotation.\n     * annotation.textColor = [255, 255, 255];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value.length === 3) {\n        var extColor = this.textColor;\n        if (!this._isLoaded || typeof extColor === 'undefined' || extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2]) {\n          this._textColor = value;\n          this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)), Number.parseFloat((value[1] / 255).toFixed(3)), Number.parseFloat((value[2] / 255).toFixed(3))]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n    /**\n     * Gets the border color of the annotation.\n     *\n     * @returns {number[]} R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Gets the border color of the annotation.\n     * let borderColor: number[] = annotation.borderColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n        this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n      }\n      return this._borderColor;\n    },\n    /**\n     * Sets the border color of the annotation.\n     *\n     * @param {number[]} value R, G, B color values in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Sets the border color of the annotation.\n     * annotation.borderColor = [255, 255, 255];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value !== 'undefined' && value.length === 3) {\n        var extColor = this.borderColor;\n        if (!this._isLoaded || typeof extColor === 'undefined' || extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2]) {\n          this._borderColor = value;\n          this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)), Number.parseFloat((value[1] / 255).toFixed(3)), Number.parseFloat((value[2] / 255).toFixed(3))]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n    /**\n     * Gets the overlay text of the annotation.\n     *\n     * @returns {string} overlay text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Gets the overlay text of the annotation.\n     * let overlayText: string =annotation.overlayText;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n        this._overlayText = this._dictionary.get('OverlayText');\n      }\n      return this._overlayText;\n    },\n    /**\n     * Sets the overlay text of the annotation.\n     *\n     * @param {string} value overlay text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Sets the overlay text of the annotation.\n     * annotation.overlayText = ‘syncfusion’;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value === 'string') {\n        this._dictionary.update('OverlayText', value);\n        this._overlayText = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n    /**\n     * Gets the font of the annotation.\n     *\n     * @returns {PdfFont} font.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Gets the font of the annotation.\n     * let font: PdfFont = annotation.font;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._font;\n    },\n    /**\n     * Sets the font of the annotation.\n     *\n     * @param {PdfFont} value font.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n     * // Sets the font of the annotation.\n     * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._font = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfRedactionAnnotation._load = function (page, dictionary) {\n    var annot = new PdfRedactionAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n    if (typeof this.bounds === 'undefined' || this.bounds === null) {\n      throw new Error('Bounds cannot be null or undefined');\n    }\n    var borderWidth;\n    if (this._dictionary.has('BS')) {\n      borderWidth = this.border.width;\n    } else {\n      var dictionary = new _PdfDictionary(this._crossReference);\n      dictionary.set('Type', _PdfName.get('Border'));\n      this._dictionary.set('BS', dictionary);\n    }\n    if (typeof borderWidth === 'undefined') {\n      borderWidth = 1;\n    }\n    if (this._setAppearance) {\n      this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n    }\n    var size = this._page.size;\n    var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n    this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n  };\n  PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (!this._isImported) {\n      if (this._isLoaded) {\n        this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n      } else {\n        this._postProcess(isFlatten);\n        if (!this._appearanceTemplate) {\n          if (isFlatten) {\n            if (!this._dictionary.has('AP')) {\n              this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            } else {\n              var dictionary = this._dictionary.get('AP');\n              if (dictionary && dictionary.has('N')) {\n                var appearanceStream = dictionary.get('N');\n                if (appearanceStream) {\n                  var reference = dictionary.getRaw('N');\n                  if (reference) {\n                    appearanceStream.reference = reference;\n                  }\n                  this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (isFlatten && this._appearanceTemplate) {\n        var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n        if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n          var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n          if (box) {\n            this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n          }\n        }\n        this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n      }\n    }\n  };\n  PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n    var normalTemplate = this._createNormalAppearance();\n    if (isFlatten) {\n      if (this._isLoaded && this._page !== null) {\n        this._removeAnnotationFromPage(this._page, this);\n      }\n    } else {\n      var borderTemplate = this._createBorderAppearance();\n      if (this._dictionary.has('AP')) {\n        var appearance = this._dictionary.get('AP');\n        _removeDuplicateReference(appearance, this._crossReference, 'N');\n        _removeDuplicateReference(appearance, this._crossReference, 'R');\n      }\n      var dictionary = new _PdfDictionary(this._crossReference);\n      borderTemplate._content.dictionary._updated = true;\n      var reference1 = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n      borderTemplate._content.reference = reference1;\n      dictionary.set('N', reference1);\n      normalTemplate._content.dictionary._updated = true;\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, normalTemplate._content);\n      normalTemplate._content.reference = reference;\n      dictionary.set('R', reference);\n      dictionary._updated = true;\n      this._dictionary.set('AP', dictionary);\n    }\n    return normalTemplate;\n  };\n  PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n    var template = new PdfTemplate(nativeRectangle, this._crossReference);\n    var width = this.border.width / 2;\n    var graphics = template.graphics;\n    var actualWidth = this.border.width;\n    var pen;\n    if (this.border.width > 0 && this.borderColor) {\n      pen = new PdfPen(this.borderColor, actualWidth);\n    }\n    var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n    if (this.opacity < 1) {\n      var state = graphics.save();\n      graphics.setTransparency(this.opacity);\n      graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n      graphics.restore(state);\n    } else {\n      graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n    }\n    return template;\n  };\n  PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n    var template = new PdfTemplate(nativeRectangle, this._crossReference);\n    _setMatrix(template, this._getRotationAngle());\n    var width = this.border.width / 2;\n    var graphics = template.graphics;\n    var parameter = new _PaintParameter();\n    var borderPen;\n    if (this.textColor && this.border.width > 0) {\n      borderPen = new PdfPen(this.textColor, this.border.width);\n    }\n    var backBrush;\n    var textcolor;\n    if (this.innerColor) {\n      backBrush = new PdfBrush(this.innerColor);\n    }\n    if (this.textColor) {\n      textcolor = new PdfBrush(this.textColor);\n    } else {\n      textcolor = new PdfBrush([128, 128, 128]);\n    }\n    parameter.backBrush = backBrush;\n    parameter.borderWidth = width;\n    var widths = this.border.width;\n    var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n    if (this.opacity < 1) {\n      var state = graphics.save();\n      graphics.setTransparency(this.opacity);\n      graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n      graphics.restore(state);\n    } else {\n      graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n    }\n    graphics.restore();\n    if (this.overlayText && this._overlayText !== '') {\n      var col = 0;\n      var row = 0;\n      if (typeof this.font === 'undefined' || this.font === null) {\n        this.font = this._lineCaptionFont;\n      }\n      var y = 0;\n      var x = 0;\n      var diff = 0;\n      var rectangle = void 0;\n      if (this._isLoaded) {\n        this._textAlignment = this.textAlignment;\n      }\n      var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.middle);\n      var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n      if (this._isLoaded && typeof this._repeat === 'undefined') {\n        this._repeat = this.repeatText;\n      }\n      if (this._repeat) {\n        if (textsize[0] <= 0) {\n          textsize[0] = 1;\n        }\n        col = this.bounds.width / textsize[0];\n        row = Math.floor(this.bounds.height / this.font._size);\n        diff = Math.abs(this.bounds.width - Math.floor(col) * textsize[0]);\n        if (this._textAlignment === PdfTextAlignment.center) {\n          x = diff / 2;\n        }\n        if (this._textAlignment === PdfTextAlignment.right) {\n          x = diff;\n        }\n        for (var i = 1; i < col; i++) {\n          for (var j = 0; j < row; j++) {\n            rectangle = [x, y, 0, 0];\n            graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n            y = y + this.font._size;\n          }\n          x = x + textsize[0];\n          y = 0;\n        }\n      } else {\n        diff = Math.abs(this.bounds.width - textsize[0]);\n        if (this._textAlignment === PdfTextAlignment.center) {\n          x = diff / 2;\n        }\n        if (this._textAlignment === PdfTextAlignment.right) {\n          x = diff;\n        }\n        rectangle = [x, 0, 0, 0];\n        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n      }\n    }\n    return template;\n  };\n  return PdfRedactionAnnotation;\n}(PdfAnnotation);\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */function (_super) {\n  __extends(PdfRichMediaAnnotation, _super);\n  /**\n   * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n   *\n   * @private\n   */\n  function PdfRichMediaAnnotation() {\n    var _this = _super.call(this) || this;\n    _this._type = _PdfAnnotationType.richMediaAnnotation;\n    return _this;\n  }\n  PdfRichMediaAnnotation._load = function (page, dictionary) {\n    var annot = new PdfRichMediaAnnotation();\n    annot._isLoaded = true;\n    annot._initialize(page, dictionary);\n    return annot;\n  };\n  PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n    _super.prototype._initialize.call(this, page, dictionary);\n  };\n  PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n      this._flattenPopUp();\n    }\n    if (isFlatten) {\n      var appearanceStream = void 0;\n      if (this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var template = new PdfTemplate(appearanceStream, this._crossReference);\n        var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n        this._flattenAnnotationTemplate(template, isNormalMatrix);\n      } else {\n        this._removeAnnotation(this._page, this);\n      }\n    }\n  };\n  return PdfRichMediaAnnotation;\n}(PdfAnnotation);\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */function (_super) {\n  __extends(PdfWidgetAnnotation, _super);\n  /**\n   * Initializes a new instance of the `PdfWidgetAnnotation` class.\n   *\n   * @private\n   */\n  function PdfWidgetAnnotation() {\n    var _this = _super.call(this) || this;\n    _this._isAutoResize = false;\n    _this._visibility = PdfFormFieldVisibility.visible;\n    _this._isFont = false;\n    _this._isTransparentBackColor = false;\n    _this._isWidget = true;\n    _this._type = _PdfAnnotationType.widgetAnnotation;\n    return _this;\n  }\n  /**\n   * Parse an existing widget annotation.\n   *\n   * @private\n   * @param {_PdfDictionary} dictionary Widget dictionary.\n   * @param {_PdfCrossReference} crossReference PDF cross reference.\n   * @returns {PdfWidgetAnnotation} Widget.\n   */\n  PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n    var widget = new PdfWidgetAnnotation();\n    widget._isLoaded = true;\n    widget._dictionary = dictionary;\n    widget._crossReference = crossReference;\n    return widget;\n  };\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n    /**\n     * Gets the page object (Read only).\n     *\n     * @returns {PdfPage} page object.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access check box field\n     * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n     * // Access first item of check box field\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Gets the page object.\n     * let page: PdfPage = item.page;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._getPage();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n    /**\n     * Gets the fore color of the annotation.\n     *\n     * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Gets the fore color of the annotation.\n     * let color: number[] = annotation.color;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._color === 'undefined' && this._defaultAppearance) {\n        this._color = this._da.color;\n      }\n      return this._color;\n    },\n    /**\n     * Sets the fore color of the annotation.\n     *\n     * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Sets the fore color of the annotation.\n     * annotation.color = [255,255,255];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof this.color === 'undefined' || this._color !== value) {\n        this._color = value;\n      }\n      var isNew = false;\n      if (!this._defaultAppearance) {\n        this._da = new _PdfDefaultAppearance('');\n        isNew = true;\n      }\n      if (isNew || this._da.color !== value) {\n        this._da.color = value;\n        this._dictionary.update('DA', this._da.toString());\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n    /**\n     * Gets the back color of the annotation.\n     *\n     * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the text box field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Gets the back color of the annotation\n     * let backColor: number[] = field.itemAt(0).backColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._parseBackColor();\n    },\n    /**\n     * Sets the back color of the annotation.\n     *\n     * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the text box field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Sets the background color of the field item\n     * field.itemAt(0).backColor = [255, 0, 0];\n     * // Sets the background color of the field item to transparent\n     * field.itemAt(1).backColor = [0, 0, 0, 0];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._updateBackColor(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n    get: function () {\n      if (this._isLoaded) {\n        var mkDictionary = this._mkDictionary;\n        return mkDictionary && mkDictionary.has('BG');\n      } else {\n        return !this._isTransparentBackColor;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n    /**\n     * Gets the border color of the annotation.\n     *\n     * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Gets the border color of the annotation.\n     * let borderColor: number[] = annotation.borderColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._borderColor === 'undefined') {\n        var mkDict = this._mkDictionary;\n        if (mkDict && mkDict.has('BC')) {\n          var bcArray = mkDict.getArray('BC');\n          if (bcArray) {\n            this._borderColor = _parseColor(bcArray);\n          }\n        }\n      }\n      if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n        this._borderColor = [0, 0, 0];\n      }\n      return this._borderColor;\n    },\n    /**\n     * Sets the border color of the annotation.\n     *\n     * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Sets the border color of the annotation.\n     * annotation.borderColor = [255,255,255];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n        if (typeof this._mkDictionary === 'undefined') {\n          this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        }\n        this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)), Number.parseFloat((value[1] / 255).toFixed(3)), Number.parseFloat((value[2] / 255).toFixed(3))]);\n        this._borderColor = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n    /**\n     * Gets the rotation angle of the annotation.\n     *\n     * @returns {number} Rotation angle as number.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Gets the rotation angle of the annotation.\n     * let rotate: number = annotation.rotate;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._rotationAngle === 'undefined') {\n        if (this._mkDictionary && this._mkDictionary.has('R')) {\n          this._rotationAngle = this._mkDictionary.get('R');\n        } else if (this._dictionary.has('R')) {\n          this._rotationAngle = this._dictionary.get('R');\n        }\n      }\n      return this._rotationAngle;\n    },\n    /**\n     * Sets the rotation angle of the annotation.\n     *\n     * @param {number} value Rotation angle as number.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Sets the rotation angle of the annotation.\n     * annotation.rotate = 90;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n        if (typeof this._mkDictionary === 'undefined') {\n          this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        }\n        this._mkDictionary.update('R', value);\n        this._rotationAngle = value;\n        this._dictionary._updated = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n    /**\n     * Gets the highlight mode of the annotation.\n     *\n     * @returns {PdfHighlightMode} Highlight mode.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Gets the highlight mode of the annotation.\n     * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n        var mode = this._dictionary.get('H');\n        this._highlightMode = _mapHighlightMode(mode.name);\n      }\n      return this._highlightMode;\n    },\n    /**\n     * Sets the highlight mode of the annotation.\n     *\n     * @param {PdfHighlightMode} value Highlight mode.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Sets the highlight mode of the annotation.\n     * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._highlightMode !== value) {\n        this._dictionary.update('H', _reverseMapHighlightMode(value));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n    /**\n     * Gets the bounds of the annotation.\n     *\n     * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Gets the bounds of the annotation.\n     * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoaded && typeof this._bounds === 'undefined') {\n        this._bounds = _calculateBounds(this._dictionary, this._getPage());\n      }\n      if (typeof this._bounds === 'undefined' || this._bounds === null) {\n        this._bounds = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      return this._bounds;\n    },\n    /**\n     * Sets the bounds of the annotation.\n     *\n     * @param {{x: number, y: number, width: number, height: number}} value Bounds\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Sets the bounds of the annotation.\n     * annotation.bounds = {0, 0, 50, 50};\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n        throw new Error('Cannot set empty bounds');\n      }\n      this._bounds = value;\n      this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n    /**\n     * Gets the text alignment of the annotation.\n     *\n     * @returns {PdfTextAlignment} Text alignment.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Gets the text alignment of the annotation.\n     * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n        this._textAlignment = this._dictionary.get('Q');\n      }\n      return this._textAlignment;\n    },\n    /**\n     * Sets the text alignment of the annotation.\n     *\n     * @param {PdfTextAlignment} value Text alignment.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Sets the text alignment of the annotation.\n     * annotation.textAlignment = PdfTextAlignment.left;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n        this._dictionary.update('Q', value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n    /**\n     * Gets the visibility.\n     *\n     * @returns {PdfFormFieldVisibility} Field visibility option.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Gets the visibility.\n     * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      var value;\n      if (this._isLoaded) {\n        value = PdfFormFieldVisibility.visible;\n        var flag = PdfAnnotationFlag.default;\n        if (this._hasFlags) {\n          flag = this.flags;\n          var flagValue = 3;\n          if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n            flagValue = 0;\n          }\n          if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n            flagValue = 1;\n          }\n          if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n            flagValue &= 2;\n          }\n          switch (flagValue) {\n            case 0:\n              value = PdfFormFieldVisibility.hidden;\n              break;\n            case 1:\n              value = PdfFormFieldVisibility.hiddenPrintable;\n              break;\n            case 2:\n              value = PdfFormFieldVisibility.visibleNotPrintable;\n              break;\n            case 3:\n              value = PdfFormFieldVisibility.visible;\n              break;\n          }\n        } else {\n          value = PdfFormFieldVisibility.visibleNotPrintable;\n        }\n      } else {\n        return this._visibility;\n      }\n      return value;\n    },\n    /**\n     * Sets the visibility.\n     *\n     * @param {PdfFormFieldVisibility} value Visibility option.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Sets the visibility.\n     * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this._isLoaded) {\n        _updateVisibility(this._dictionary, value);\n        this._dictionary._updated = true;\n      } else {\n        switch (value) {\n          case PdfFormFieldVisibility.hidden:\n            this.flags = PdfAnnotationFlag.hidden;\n            break;\n          case PdfFormFieldVisibility.hiddenPrintable:\n            this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n            break;\n          case PdfFormFieldVisibility.visible:\n            this.flags = PdfAnnotationFlag.print;\n            break;\n          case PdfFormFieldVisibility.visibleNotPrintable:\n            this.flags = PdfAnnotationFlag.default;\n            break;\n        }\n        this._visibility = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n    /**\n     * Gets the font of the item.\n     *\n     * @returns {PdfFont} font.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the form field at index 0\n     * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n     * // Get the first item of the field\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Gets the font of the item.\n     * let font: PdfFont = item.font;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (!this._pdfFont) {\n        var fontName = void 0;\n        if (this._crossReference) {\n          var form = this._crossReference._document.form;\n          var fontData = this._obtainFontDetails();\n          if (form && form._dictionary.has('DR')) {\n            var resources = form._dictionary.get('DR');\n            if (resources.has('Font')) {\n              var fonts = resources.get('Font');\n              if (fonts.has(fontData.name)) {\n                var fontDictionary = fonts.get(fontData.name);\n                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                  var baseFont = fontDictionary.get('BaseFont');\n                  var textFontStyle = PdfFontStyle.regular;\n                  if (baseFont) {\n                    fontName = baseFont.name;\n                    textFontStyle = _getFontStyle(baseFont.name);\n                    if (fontName.includes('-')) {\n                      fontName = fontName.substring(0, fontName.indexOf('-'));\n                    }\n                    this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (this._pdfFont === null || typeof this._pdfFont === 'undefined' || !this._isLoaded && this._pdfFont.size === 1) {\n        this._pdfFont = this._circleCaptionFont;\n      }\n      return this._pdfFont;\n    },\n    /**\n     * Sets the font of the item.\n     *\n     * @param {PdfFont} value font.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the form field at index 0\n     * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n     * // Get the first item of the field\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Set the font of the item.\n     * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value && value instanceof PdfFont) {\n        this._pdfFont = value;\n        this._initializeFont(value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n    get: function () {\n      if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n        var da = this._dictionary.get('DA');\n        if (da && da !== '') {\n          this._da = new _PdfDefaultAppearance(da);\n        }\n      }\n      return this._da;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n    get: function () {\n      var value;\n      if (this._dictionary.has('MK')) {\n        value = this._dictionary.get('MK');\n      }\n      return value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n    this._page = page;\n    this._crossReference = page._crossReference;\n    this._ref = this._crossReference._getNextReference();\n    this._dictionary = new _PdfDictionary(this._crossReference);\n    this._crossReference._cacheMap.set(this._ref, this._dictionary);\n    this._dictionary._currentObj = this;\n    this._dictionary.objId = this._ref.toString();\n    this._dictionary.update('Type', _PdfName.get('Annot'));\n    this._dictionary.update('Subtype', _PdfName.get('Widget'));\n    this.flags |= PdfAnnotationFlag.print;\n    this._dictionary.update('P', page._ref);\n    page._addWidget(this._ref);\n    this.border = new PdfAnnotationBorder();\n    this.bounds = bounds;\n    if (field) {\n      this._field = field;\n      this._dictionary.update('Parent', this._field._ref);\n    }\n    return this._dictionary;\n  };\n  PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n    if (isFlatten === void 0) {\n      isFlatten = false;\n    }\n    if (recreateAppearance === void 0) {\n      recreateAppearance = false;\n    }\n    if (isFlatten || recreateAppearance) {\n      var appearanceStream = void 0;\n      if (recreateAppearance || isFlatten && !this._dictionary.has('AP')) {\n        //appearanceStream = this._createAppearance();\n      }\n      if (!appearanceStream && this._dictionary.has('AP')) {\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n          appearanceStream = dictionary.get('N');\n          var reference = dictionary.getRaw('N');\n          if (reference && appearanceStream) {\n            appearanceStream.reference = reference;\n          }\n        }\n      }\n      if (appearanceStream) {\n        var bounds = void 0;\n        if (isFlatten) {\n          var template = new PdfTemplate(appearanceStream, this._crossReference);\n          var page = this._getPage();\n          if (page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n              graphics.translateTransform(graphics._size[0], graphics._size[1]);\n              graphics.rotateTransform(90);\n            } else if (page.rotation === PdfRotationAngle.angle180) {\n              graphics.translateTransform(graphics._size[0], graphics._size[1]);\n              graphics.rotateTransform(-180);\n            } else if (page.rotation === PdfRotationAngle.angle270) {\n              graphics.translateTransform(graphics._size[0], graphics._size[1]);\n              graphics.rotateTransform(270);\n            }\n            bounds = {\n              x: this.bounds.x,\n              y: this.bounds.y,\n              width: template._size[0],\n              height: template._size[1]\n            };\n            graphics._drawTemplate(template, bounds);\n            graphics.restore();\n          }\n        } else {\n          var appearance = void 0;\n          if (this._dictionary.has('AP')) {\n            appearance = this._dictionary.get('AP');\n          } else {\n            var reference_9 = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference_9, appearance);\n            this._dictionary.update('AP', reference_9);\n          }\n          _removeDuplicateReference(appearance, this._crossReference, 'N');\n          var reference = this._crossReference._getNextReference();\n          this._crossReference._cacheMap.set(reference, appearanceStream);\n          appearance.update('N', reference);\n        }\n      }\n      this._dictionary._updated = false;\n    }\n  };\n  PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n    this._pdfFont = font;\n    var document;\n    if (this._crossReference) {\n      document = this._crossReference._document;\n      var resource = void 0;\n      if (document) {\n        if (document.form._dictionary.has('DR')) {\n          resource = document.form._dictionary.get('DR');\n        } else {\n          resource = new _PdfDictionary(this._crossReference);\n        }\n      }\n      var fontDict = void 0;\n      var isReference = false;\n      if (resource.has('Font')) {\n        var obj = resource.getRaw('Font'); // eslint-disable-line\n        if (obj && obj instanceof _PdfReference) {\n          isReference = true;\n          fontDict = this._crossReference._fetch(obj);\n        } else if (obj instanceof _PdfDictionary) {\n          fontDict = obj;\n        }\n      }\n      if (!fontDict) {\n        fontDict = new _PdfDictionary(this._crossReference);\n        resource.update('Font', fontDict);\n      }\n      var keyName = _PdfName.get(_getNewGuidString());\n      var reference = this._crossReference._getNextReference();\n      this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n      if (font instanceof PdfTrueTypeFont) {\n        if (this._pdfFont._pdfFontInternals) {\n          this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n        }\n      } else if (this._pdfFont._dictionary) {\n        this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n      }\n      fontDict.update(keyName.name, reference);\n      resource._updated = true;\n      document.form._dictionary.update('DR', resource);\n      document.form._dictionary._updated = true;\n      this._fontName = keyName.name;\n      var defaultAppearance = new _PdfDefaultAppearance();\n      defaultAppearance.fontName = this._fontName;\n      defaultAppearance.fontSize = this._pdfFont._size;\n      defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n      this._dictionary.update('DA', defaultAppearance.toString());\n      if (isReference) {\n        resource._updated = true;\n      }\n      this._isFont = true;\n    }\n  };\n  PdfWidgetAnnotation.prototype._getPage = function () {\n    if (!this._page) {\n      var document_2;\n      if (this._crossReference) {\n        document_2 = this._crossReference._document;\n      }\n      var page = void 0;\n      if (this._dictionary.has('P')) {\n        var ref = this._dictionary.getRaw('P');\n        if (ref && document_2) {\n          for (var i = 0; i < document_2.pageCount; i++) {\n            var entry = document_2.getPage(i);\n            if (entry && entry._ref === ref) {\n              page = entry;\n              break;\n            }\n          }\n        }\n      }\n      if (!page && document_2 && this._ref) {\n        page = _findPage(document_2, this._ref);\n      }\n      this._page = page;\n    }\n    return this._page;\n  };\n  PdfWidgetAnnotation.prototype._beginSave = function () {\n    if (!this._isLoaded) {\n      var value = this._bounds;\n      this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n    }\n  };\n  PdfWidgetAnnotation.prototype._parseBackColor = function () {\n    var value;\n    if (this._isLoaded && this._hasBackColor || !this._isLoaded && !this._isTransparentBackColor) {\n      if (typeof this._backColor === 'undefined') {\n        var dictionary = this._mkDictionary;\n        if (dictionary && dictionary.has('BG')) {\n          var colorArray = dictionary.getArray('BG');\n          if (colorArray) {\n            this._backColor = _parseColor(colorArray);\n          }\n        }\n      }\n      if (typeof this._backColor === 'undefined' || this._backColor === null) {\n        this._backColor = [255, 255, 255];\n      }\n      value = this._backColor;\n    }\n    return value;\n  };\n  PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n    if (setAppearance === void 0) {\n      setAppearance = false;\n    }\n    var isChanged = false;\n    if (value.length === 4 && value[3] !== 255) {\n      this._isTransparentBackColor = true;\n      if (this._dictionary.has('BG')) {\n        delete this._dictionary._map.BG;\n        isChanged = true;\n      }\n      var mkDictionary = this._mkDictionary;\n      if (mkDictionary && mkDictionary.has('BG')) {\n        delete mkDictionary._map.BG;\n        this._dictionary._updated = true;\n        isChanged = true;\n      }\n    } else {\n      this._isTransparentBackColor = false;\n      if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n        if (typeof this._mkDictionary === 'undefined') {\n          this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        }\n        this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)), Number.parseFloat((value[1] / 255).toFixed(3)), Number.parseFloat((value[2] / 255).toFixed(3))]);\n        this._backColor = [value[0], value[1], value[2]];\n        this._dictionary._updated = true;\n        isChanged = true;\n      }\n    }\n    if (setAppearance && isChanged && this._field) {\n      this._field._setAppearance = true;\n    }\n  };\n  return PdfWidgetAnnotation;\n}(PdfAnnotation);\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */function (_super) {\n  __extends(PdfStateItem, _super);\n  /**\n   * Initializes a new instance of the `PdfStateItem` class.\n   *\n   * @private\n   */\n  function PdfStateItem() {\n    return _super.call(this) || this;\n  }\n  /**\n   * Parse an existing item of the field.\n   *\n   * @private\n   * @param {_PdfDictionary} dictionary Widget dictionary.\n   * @param {_PdfCrossReference} crossReference PDF cross reference.\n   * @param {PdfField} field Field object.\n   * @returns {PdfStateItem} Widget.\n   */\n  PdfStateItem._load = function (dictionary, crossReference, field) {\n    var widget = new PdfStateItem();\n    widget._isLoaded = true;\n    widget._dictionary = dictionary;\n    widget._crossReference = crossReference;\n    widget._field = field;\n    return widget;\n  };\n  Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n    /**\n     * Gets the flag to indicate whether the field item is checked or not.\n     *\n     * @returns {boolean} Checked or not.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access check box field\n     * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n     * // Access first item of check box field\n     * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n     * // Gets the flag to indicate whether the field item is checked or not.\n     * let checked: boolean = item.checked;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return _checkField(this._dictionary);\n    },\n    /**\n     * Sets the flag to indicate whether the field item is checked or not.\n     *\n     * @param {boolean} value Checked or not.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access check box field\n     * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n     * // Access first item of check box field\n     * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n     * // Sets the style of the annotation\n     * item.checked = true;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this.checked !== value) {\n        this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStateItem.prototype, \"style\", {\n    /**\n     * Gets the style of annotation.\n     *\n     * @returns {PdfCheckBoxStyle} Style of annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access check box field\n     * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n     * // Access first item of check box field\n     * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n     * // Gets the style of the annotation\n     * let style: PdfCheckBoxStyle = item.style;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoaded) {\n        var dictionary = this._mkDictionary;\n        if (dictionary && dictionary.has('CA')) {\n          this._style = _stringToStyle(dictionary.get('CA'));\n        } else {\n          this._style = PdfCheckBoxStyle.check;\n        }\n      }\n      return this._style;\n    },\n    /**\n     * Sets the style of annotation.\n     *\n     * @param {PdfCheckBoxStyle} value Style of annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access check box field\n     * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n     * // Access first item of check box field\n     * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n     * // Sets the style of the annotation\n     * item.style = PdfCheckBoxStyle.check;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (this.style !== value) {\n        this._style = value;\n        var dictionary = this._mkDictionary;\n        if (!dictionary) {\n          dictionary = new _PdfDictionary(this._crossReference);\n          this._dictionary.update('MK', dictionary);\n        }\n        dictionary.update('CA', _styleToString(value));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfStateItem.prototype._doPostProcess = function () {\n    var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n    var template = _getStateTemplate(style, this);\n    if (template) {\n      var page = this._getPage();\n      if (page) {\n        var graphics = page.graphics;\n        graphics.save();\n        if (page.rotation === PdfRotationAngle.angle90) {\n          graphics.translateTransform(graphics._size[0], graphics._size[1]);\n          graphics.rotateTransform(90);\n        } else if (page.rotation === PdfRotationAngle.angle180) {\n          graphics.translateTransform(graphics._size[0], graphics._size[1]);\n          graphics.rotateTransform(-180);\n        } else if (page.rotation === PdfRotationAngle.angle270) {\n          graphics.translateTransform(graphics._size[0], graphics._size[1]);\n          graphics.rotateTransform(270);\n        }\n        graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n        graphics._drawTemplate(template, this.bounds);\n        graphics.restore();\n      }\n    }\n    this._dictionary._updated = false;\n  };\n  PdfStateItem.prototype._postProcess = function (value) {\n    var field = this._field;\n    if (!value) {\n      value = field && field.checked ? 'Yes' : 'Off';\n    }\n    this._dictionary.update('AS', _PdfName.get(value));\n  };\n  PdfStateItem.prototype._setField = function (field) {\n    this._field = field;\n    this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n    this._field._addToKid(this);\n  };\n  return PdfStateItem;\n}(PdfWidgetAnnotation);\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */function (_super) {\n  __extends(PdfRadioButtonListItem, _super);\n  function PdfRadioButtonListItem(value, bounds, item) {\n    var _this = _super.call(this) || this;\n    if (item && value && bounds) {\n      if (item instanceof PdfField) {\n        _this._initializeItem(value, bounds, item.page, item);\n      } else {\n        _this._initializeItem(value, bounds, item);\n      }\n    }\n    return _this;\n  }\n  /**\n   * Parse an existing item of the field.\n   *\n   * @private\n   * @param {_PdfDictionary} dictionary Widget dictionary.\n   * @param {_PdfCrossReference} crossReference PDF cross reference.\n   * @param {PdfField} field Field object.\n   * @returns {PdfRadioButtonListItem} Widget.\n   */\n  PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n    var widget = new PdfRadioButtonListItem();\n    widget._isLoaded = true;\n    widget._dictionary = dictionary;\n    widget._crossReference = crossReference;\n    widget._field = field;\n    return widget;\n  };\n  Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n    /**\n     * Gets the flag to indicate whether the field item is selected or not.\n     *\n     * @returns {boolean} Selected or not.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new radio button list field\n     * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n     * // Access first list field item\n     * let item: PdfRadioButtonListItem = field.itemAt(0);\n     * // Gets the flag to indicate whether the field item is selected or not.\n     * let selected: boolean = item.selected;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._index === this._field.selectedIndex;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n    /**\n     * Gets the value of the radio button list field item\n     *\n     * @returns {string} Value of the radio button list field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new radio button list field\n     * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n     * // Access first list field item\n     * let item: PdfRadioButtonListItem = field.itemAt(0);\n     * // Gets the value of the radio button list field item\n     * let value: string = item.value;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (this._isLoaded && !this._optionValue) {\n        this._optionValue = _getItemValue(this._dictionary);\n      }\n      return this._optionValue;\n    },\n    /**\n     * Sets the value of the radio button list field item\n     *\n     * @param {string} option Value of the radio button list field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new radio button list field\n     * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n     * // Access first list field item\n     * let item: PdfRadioButtonListItem = field.itemAt(0);\n     * // Sets the value of the radio button list field item\n     * item.value = '1-9';\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (option) {\n      this._optionValue = option;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n    /**\n     * Gets the back color of the annotation.\n     *\n     * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n     * // Gets the back color of the annotation\n     * let backColor: number[] = annotation.backColor;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._parseBackColor();\n    },\n    /**\n     * Sets the back color of the annotation.\n     *\n     * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Sets the back color of the radio button list item\n     * field.itemAt(0).backColor = [255, 255, 255];\n     * // Sets the background color of the field item to transparent\n     * field.itemAt(1).backColor = [0, 0, 0, 0];\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._updateBackColor(value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n    this._optionValue = value;\n    this._page = page;\n    this._create(this._page, bounds, this._field);\n    this.textAlignment = PdfTextAlignment.left;\n    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n    this._mkDictionary.update('BC', [0, 0, 0]);\n    this._mkDictionary.update('BG', [1, 1, 1]);\n    this.style = PdfCheckBoxStyle.circle;\n    this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    if (field) {\n      this._setField(field);\n      this._dictionary.update('Parent', field._ref);\n    }\n  };\n  PdfRadioButtonListItem.prototype._postProcess = function (value) {\n    var field = this._field;\n    if (!value && field && field.selectedIndex !== -1) {\n      value = field.itemAt(field.selectedIndex).value;\n    }\n    if (this.value === value) {\n      this._dictionary.update('AS', _PdfName.get(this.value));\n    } else {\n      this._dictionary.update('AS', _PdfName.get('Off'));\n    }\n  };\n  return PdfRadioButtonListItem;\n}(PdfStateItem);\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */function (_super) {\n  __extends(PdfListFieldItem, _super);\n  function PdfListFieldItem(text, value, field) {\n    var _this = _super.call(this) || this;\n    if (text && value) {\n      _this._initializeItem(text, value, field);\n    }\n    return _this;\n  }\n  /**\n   * Parse an existing item of the field.\n   *\n   * @private\n   * @param {_PdfDictionary} dictionary Widget dictionary.\n   * @param {_PdfCrossReference} crossReference PDF cross reference.\n   * @param {PdfField} field Field object.\n   * @returns {PdfListFieldItem} Widget.\n   */\n  PdfListFieldItem._load = function (dictionary, crossReference, field) {\n    var widget = new PdfListFieldItem();\n    widget._isLoaded = true;\n    widget._dictionary = dictionary;\n    widget._crossReference = crossReference;\n    widget._field = field;\n    return widget;\n  };\n  Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n    /**\n     * Gets the text of the annotation.\n     *\n     * @returns {string} Text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new radio button list field\n     * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Access first list field item\n     * let item: PdfListFieldItem = field.itemAt(0);\n     * // Gets the text of the list field item\n     * let text: string = item.text;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._text === 'undefined' && typeof this._field !== 'undefined' && (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n        this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n      }\n      return this._text;\n    },\n    /**\n     * Sets the text of the annotation.\n     *\n     * @param {string} value Text.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new radio button list field\n     * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Access first list field item\n     * let item: PdfListFieldItem = field.itemAt(0);\n     * // Sets the text of the list field item\n     * item.text = '1-9';\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof value === 'string' && typeof this._field !== 'undefined' && (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n        if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n          this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n          this._text = value;\n          this._field._dictionary._updated = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n    /**\n     * Gets the flag to indicate whether the field item is selected or not (Read only).\n     *\n     * @returns {boolean} Selected or not.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new radio button list field\n     * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Access first list field item\n     * let item: PdfListFieldItem = field.itemAt(0);\n     * // Gets the flag to indicate whether the field item is selected or not.\n     * let selected: boolean = item.selected;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._index === this._field.selectedIndex;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n    this._text = text;\n    this._value = value;\n    if (field && field instanceof PdfListBoxField) {\n      field._addToOptions(this, field);\n    }\n  };\n  return PdfListFieldItem;\n}(PdfStateItem);\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */function () {\n  function PdfAnnotationCaption(cap, type, offset) {\n    this._cap = typeof cap !== 'undefined' ? cap : false;\n    this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n    this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n  }\n  Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n    /**\n     * Gets the boolean flag indicating whether annotation has caption or not.\n     *\n     * @returns {boolean} Caption.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the boolean flag indicating whether annotation has caption or not.\n     * let cap: boolean = annotation.caption.cap;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._cap;\n    },\n    /**\n     * Sets the boolean flag indicating whether annotation has caption or not.\n     *\n     * @param {boolean} value Caption.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the boolean flag indicating whether annotation has caption or not.\n     * annotation.caption.cap = true;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._cap) {\n        this._cap = value;\n        if (this._dictionary) {\n          this._dictionary.update('Cap', value);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n    /**\n     * Gets the caption type of the annotation.\n     *\n     * @returns {PdfLineCaptionType} Caption type.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the caption type of the annotation.\n     * let type: PdfLineCaptionType = annotation.caption.type;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._type;\n    },\n    /**\n     * Sets the caption type of the annotation.\n     *\n     * @param {PdfLineCaptionType} value Caption type.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the caption type of the annotation.\n     * annotation.caption.type = PdfLineCaptionType.inline;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._type) {\n        this._type = value;\n        if (this._dictionary) {\n          this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n    /**\n     * Gets the offset position of the annotation.\n     *\n     * @returns {Array<number>} Caption offset.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the offset position of the annotation.\n     * let offset: Array<number> = annotation.caption.offset;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._offset;\n    },\n    /**\n     * Sets the offset position of the annotation.\n     *\n     * @param {Array<number>} value Caption offset.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Sets the offset position of the annotation.\n     * annotation.caption.offset = [10, 10];\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (_areNotEqual(value, this._offset)) {\n        this._offset = value;\n        if (this._dictionary) {\n          this._dictionary.update('CO', value);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotationCaption;\n}();\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */function () {\n  function PdfAnnotationLineEndingStyle(begin, end) {\n    this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n    this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n  }\n  Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n    /**\n     * Gets the begin line ending style of the annotation.\n     *\n     * @returns {PdfLineEndingStyle} Begin line ending style.\n     * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the begin line ending style of the annotation.\n     * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._begin;\n    },\n    /**\n     * Sets the begin line ending style of the annotation.\n     *\n     * @param {PdfLineEndingStyle} value Begin line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n     * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n     * // Sets the begin line ending style of the annotation.\n     * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n     * // Sets the end line ending style of the annotation.\n     * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n     * // Sets the line ending style to the annotation\n     * annotation.lineEndingStyle = lineEndingStyle;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._begin) {\n        this._begin = value;\n        if (this._dictionary) {\n          this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n    /**\n     * Gets the begin line ending style of the annotation.\n     *\n     * @returns {PdfLineEndingStyle} End line ending style.\n     * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the end line ending style of the annotation.\n     * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._end;\n    },\n    /**\n     * Sets the begin line ending style of the annotation.\n     *\n     * @param {PdfLineEndingStyle} value End line ending style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n     * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n     * // Sets the begin line ending style of the annotation.\n     * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n     * // Sets the end line ending style of the annotation.\n     * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n     * // Sets the line ending style to the annotation\n     * annotation.lineEndingStyle = lineEndingStyle;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._end) {\n        this._end = value;\n        if (this._dictionary) {\n          this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotationLineEndingStyle;\n}();\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */function () {\n  function PdfInteractiveBorder(width, style, dash) {\n    this._width = typeof width !== 'undefined' ? width : 1;\n    this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n    if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n      this._dash = dash;\n    }\n  }\n  Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n    /**\n     * Gets the width of the field border.\n     *\n     * @returns {number} border width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the PDF form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Gets the width of the annotation border.\n     * let width: number = field.border.width;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._width;\n    },\n    /**\n     * Sets the width of the field border.\n     *\n     * @param {number} value width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the PDF form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Initializes a new instance of the `PdfInteractiveBorder` class.\n     * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n     * //Sets the width of the annotation border.\n     * border.width = 10;\n     * //Sets the style of the annotation border.\n     * border.style = PdfBorderStyle.dashed;\n     * //Sets the dash pattern of the annotation border.\n     * border.dash = [1, 2, 1];\n     * // Sets the border to the PDF form field\n     * field.border = border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._width) {\n        this._width = value;\n        if (this._dictionary) {\n          var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n          bs.update('Type', _PdfName.get('Border'));\n          bs.update('W', this._width);\n          bs.update('S', _mapBorderStyle(this._style));\n          if (this._dash) {\n            bs.update('D', this._dash);\n          }\n          this._dictionary.update('BS', bs);\n          this._dictionary._updated = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n    /**\n     * Gets the border line style of the field border.\n     *\n     * @returns {PdfBorderStyle} Border style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the PDF form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Gets the border line style of the annotation border.\n     * let style: PdfBorderStyle = field.border.style;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._style;\n    },\n    /**\n     * Sets the border line style of the field border.\n     *\n     * @param {PdfBorderStyle} value Border style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the PDF form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Initializes a new instance of the `PdfInteractiveBorder` class.\n     * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n     * //Sets the width of the annotation border.\n     * border.width = 10;\n     * //Sets the style of the annotation border.\n     * border.style = PdfBorderStyle.dashed;\n     * //Sets the dash pattern of the annotation border.\n     * border.dash = [1, 2, 1];\n     * // Sets the border to the PDF form field\n     * field.border = border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._style) {\n        this._style = value;\n        if (this._dictionary) {\n          var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n          bs.update('Type', _PdfName.get('Border'));\n          bs.update('W', this._width);\n          bs.update('S', _mapBorderStyle(this._style));\n          if (this._dash) {\n            bs.update('D', this._dash);\n          }\n          this._dictionary.update('BS', bs);\n          this._dictionary._updated = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n    /**\n     * Gets the dash pattern of the field border.\n     *\n     * @returns {Array<number>} Dash pattern.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the PDF form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Gets the dash pattern of the field border.\n     * let dash: Array<number> = field.border.dash;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._dash;\n    },\n    /**\n     * Sets the dash pattern of the field border.\n     *\n     * @param {Array<number>} value Dash pattern.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the PDF form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Initializes a new instance of the `PdfInteractiveBorder` class.\n     * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n     * //Sets the width of the annotation border.\n     * border.width = 10;\n     * //Sets the style of the annotation border.\n     * border.style = PdfBorderStyle.dashed;\n     * //Sets the dash pattern of the annotation border.\n     * border.dash = [1, 2, 1];\n     * // Sets the border to the PDF form field\n     * field.border = border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n        this._dash = value;\n        if (this._dictionary) {\n          var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n          bs.update('Type', _PdfName.get('Border'));\n          bs.update('W', this._width);\n          bs.update('S', _mapBorderStyle(this._style));\n          bs.update('D', this._dash);\n          this._dictionary.update('BS', bs);\n          this._dictionary._updated = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfInteractiveBorder;\n}();\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */function (_super) {\n  __extends(PdfAnnotationBorder, _super);\n  function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n    var _this = _super.call(this, width, style, dash) || this;\n    _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n    _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n    return _this;\n  }\n  Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n    /**\n     * Gets the width of the annotation border.\n     *\n     * @returns {number} border width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the width of the annotation border.\n     * let width: number = annotation.border.width;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._width;\n    },\n    /**\n     * Sets the width of the annotation border.\n     *\n     * @param {number} value width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n     * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n     * //Sets the width of the annotation border.\n     * border.width = 10;\n     * //Sets the style of the annotation border.\n     * border.style = PdfBorderStyle.dashed;\n     * //Sets the dash pattern of the annotation border.\n     * border.dash = [1, 2, 1];\n     * // Sets the border to the PDF form field\n     * annotation.border = border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._width) {\n        this._width = value;\n        if (this._dictionary) {\n          this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n          var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n          bs.update('Type', _PdfName.get('Border'));\n          bs.update('W', this._width);\n          bs.update('S', _mapBorderStyle(this._style));\n          if (this._dash) {\n            bs.update('D', this._dash);\n          }\n          this._dictionary.update('BS', bs);\n          this._dictionary._updated = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n    /**\n     * Gets the horizontal radius of the annotation border.\n     *\n     * @returns {number} horizontal radius.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the horizontal radius of the annotation border.\n     * let hRadius: number = annotation.border.hRadius;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._hRadius;\n    },\n    /**\n     * Sets the horizontal radius of the annotation border.\n     *\n     * @param {number} value horizontal radius.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n     * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n     * //Sets the width of the annotation border.\n     * border.width = 10;\n     * // Sets the horizontal radius of the annotation border.\n     * border.hRadius = 2;\n     * //Sets the style of the annotation border.\n     * border.style = PdfBorderStyle.dashed;\n     * //Sets the dash pattern of the annotation border.\n     * border.dash = [1, 2, 1];\n     * // Sets the border to the PDF form field\n     * annotation.border = border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._hRadius) {\n        this._hRadius = value;\n        if (this._dictionary) {\n          this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n    /**\n     * Gets the vertical radius of the annotation border.\n     *\n     * @returns {number} vertical radius.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Gets the vertical radius of the annotation border.\n     * let vRadius: number = annotation.border.vRadius;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._vRadius;\n    },\n    /**\n     * Sets the vertical radius of the annotation border.\n     *\n     * @param {number} value vertical radius.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n     * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n     * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n     * //Sets the width of the annotation border.\n     * border.width = 10;\n     * // Sets the vertical radius of the annotation border.\n     * border.vRadius = 2;\n     * //Sets the style of the annotation border.\n     * border.style = PdfBorderStyle.dashed;\n     * //Sets the dash pattern of the annotation border.\n     * border.dash = [1, 2, 1];\n     * // Sets the border to the PDF form field\n     * annotation.border = border;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._vRadius) {\n        this._vRadius = value;\n        if (this._dictionary) {\n          this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotationBorder;\n}(PdfInteractiveBorder);\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */function () {\n  function PdfBorderEffect(dictionary) {\n    this._intensity = 0;\n    if (typeof dictionary !== 'undefined' && dictionary !== null) {\n      if (dictionary.has('BE')) {\n        var borderEffect = this._dictionary.get('BE');\n        if (borderEffect) {\n          if (borderEffect.has('I')) {\n            this._intensity = borderEffect.get('I');\n          }\n          if (borderEffect.has('S')) {\n            this._style = this._getBorderEffect(borderEffect.get('S'));\n          }\n        }\n      }\n    } else {\n      this._dictionary = new _PdfDictionary();\n      this._dictionary.set('I', this._intensity);\n      this._dictionary.set('S', this._styleToEffect(this._style));\n    }\n  }\n  Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n    /**\n     * Gets the intensity of the annotation border.\n     *\n     * @returns {number} intensity.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Gets the intensity of the annotation border.\n     * let intensity: number = annotation.borderEffect.intensity;\n     * // Gets the effect style of the annotation border.\n     * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._intensity;\n    },\n    /**\n     * Sets the intensity of the annotation border.\n     *\n     * @param {number} value intensity.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Initializes a new instance of the `PdfBorderEffect` class.\n     * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n     * // Sets the intensity of the annotation border.\n     * borderEffect.intensity = 2;\n     * // Sets the effect style of the annotation border.\n     * borderEffect.style = PdfBorderEffectStyle.cloudy;\n     * // Sets border effect to the annotation.\n     * annotation.borderEffect = borderEffect;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._intensity) {\n        this._intensity = value;\n        if (this._dictionary) {\n          var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n          bs.update('I', this._intensity);\n          bs.update('S', this._styleToEffect(this._style));\n          this._dictionary.update('BE', bs);\n          this._dictionary._updated = true;\n        }\n        this._dictionary._updated = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n    /**\n     * Gets the effect style of the annotation border.\n     *\n     * @returns {PdfBorderEffectStyle} effect style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Gets the intensity of the annotation border.\n     * let intensity: number = annotation.borderEffect.intensity;\n     * // Gets the effect style of the annotation border.\n     * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._style;\n    },\n    /**\n     * Sets the effect style of the annotation border.\n     *\n     * @param {PdfBorderEffectStyle} value effect style.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n     * // Initializes a new instance of the `PdfBorderEffect` class.\n     * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n     * // Sets the intensity of the annotation border.\n     * borderEffect.intensity = 2;\n     * // Sets the effect style of the annotation border.\n     * borderEffect.style = PdfBorderEffectStyle.cloudy;\n     * // Sets border effect to the annotation.\n     * annotation.borderEffect = borderEffect;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._style) {\n        this._style = value;\n        if (this._dictionary) {\n          var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n          bs.update('I', this._intensity);\n          bs.update('S', this._styleToEffect(this._style));\n          this._dictionary.update('BE', bs);\n          this._dictionary._updated = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfBorderEffect.prototype._getBorderEffect = function (value) {\n    if (value === '/C') {\n      return PdfBorderEffectStyle.cloudy;\n    } else {\n      return PdfBorderEffectStyle.solid;\n    }\n  };\n  PdfBorderEffect.prototype._styleToEffect = function (value) {\n    if (value === PdfBorderEffectStyle.cloudy) {\n      return 'C';\n    } else {\n      return 'S';\n    }\n  };\n  return PdfBorderEffect;\n}();\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */function () {\n  function _PaintParameter() {\n    this.borderWidth = 1;\n  }\n  return _PaintParameter;\n}();\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */function () {\n  function _CloudStyleArc() {\n    this.startAngle = 0;\n    this.endAngle = 0;\n  }\n  return _CloudStyleArc;\n}();","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfDestination","_PdfDictionary","_PdfName","_PdfReference","PdfFormFieldVisibility","_PdfCheckFieldState","PdfAnnotationFlag","PdfBorderStyle","PdfLineCaptionType","PdfLineEndingStyle","PdfLineIntent","PdfRotationAngle","PdfTextAlignment","PdfBorderEffectStyle","PdfMeasurementUnit","_PdfGraphicsUnit","PdfCircleMeasurementType","PdfRubberStampAnnotationIcon","PdfCheckBoxStyle","PdfTextMarkupAnnotationType","PdfPopupIcon","PdfAnnotationState","PdfAnnotationStateModel","PdfAttachmentIcon","PdfAnnotationIntent","_PdfAnnotationType","PdfDestinationMode","PdfBlendMode","PdfDashStyle","PdfLineCap","_checkField","_removeDuplicateReference","_updateVisibility","_getPageIndex","_checkComment","_checkReview","_mapAnnotationStateModel","_mapAnnotationState","_decode","_setMatrix","_convertToColor","_findPage","_getItemValue","_areNotEqual","_calculateBounds","_parseColor","_mapHighlightMode","_reverseMapHighlightMode","_getUpdatedBounds","_mapBorderStyle","_mapLineEndingStyle","_reverseMapEndingStyle","_toRectangle","_mapBorderEffectStyle","_getStateTemplate","_mapMeasurementUnit","_mapGraphicsUnit","_stringToStyle","_styleToString","_mapMarkupAnnotationType","_reverseMarkupAnnotationType","_reverseMapAnnotationState","_reverseMapAnnotationStateModel","_mapPopupIcon","_mapRubberStampIcon","_mapAttachmentIcon","_mapAnnotationIntent","_reverseMapPdfFontStyle","_fromRectangle","_getNewGuidString","_getFontStyle","_mapFont","_checkInkPoints","PdfField","_PdfDefaultAppearance","PdfListBoxField","PdfComboBoxField","PdfTemplate","_TextRenderingMode","PdfBrush","PdfPen","_PdfTransformationMatrix","_PdfUnitConvertor","_PdfPath","PdfFontFamily","PdfStandardFont","PdfFont","PdfFontStyle","PdfTrueTypeFont","PdfStringFormat","PdfVerticalAlignment","_PdfStream","PdfAppearance","PdfPopupAnnotationCollection","PdfAnnotation","_isImported","_isLoaded","_setAppearance","_isExport","_opacity","_isAllRotation","_flatten","_hasData","_popUpFont","helvetica","_authorBoldFont","bold","_lineCaptionFont","regular","_circleCaptionFont","defineProperty","get","_author","_dictionary","has","author","set","value","hasKey","update","enumerable","configurable","_border","PdfAnnotationBorder","border","getArray","length","_hRadius","_vRadius","_width","width","Number","isNaN","style","name","_style","dashed","beveled","inset","underline","solid","dash","_dash","current","hRadius","vRadius","_isWidget","bs","_crossReference","_updated","_annotFlags","default","_color","extColor","color","parseFloat","toFixed","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_bounds","_page","_isBounds","x","bounds","y","height","size","_caption","PdfAnnotationCaption","_cap","capType","_type","top","inline","_offset","caption","cap","type","offset","opacity","_subject","_name","_text","_rotate","angle0","prevRotate","rotationAngle","angle","_getRotationAngle","_isFlattenPopups","_ratio","Math","PI","setAppearance","getValues","values","isArray","i","element","parseInt","toString","push","Error","setValues","_initialize","page","dictionary","_ref","assignXref","_getBoundsValue","linePoints","count","points","x1","y1","sort","a","_validateTemplateMatrix","template","isRotatedMatrix","isValidMatrix","matrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","point","box","graphics","state","save","setTransparency","_drawTemplate","restore","_removeAnnotationFromPage","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","lineAnnotation","mBox","mediaBox","cropBox","_pageDictionary","_needInitializeGraphics","rubberStampAnnotation","needScale","appearanceStream","rotate","angle270","rotation","angle180","_isAnnotationTemplate","_needScale","_calculateTemplateBounds","location_1","_size","_content","scaleX","scaleY","angle90","rect","graphicsRotation","_obtainGraphicsRotation","_matrix","translateTransform","rotateTransform","_origin","_o","radians","atan2","_elements","round","annotation","annotations","index","indexOf","splice","_cacheMap","delete","_removeAnnotation","_drawCloudStyle","brush","pen","radius","overlap","isAppearance","_isClockWise","sortedPoints","circles","circleOverlap","previousPoint","currentPoint","dx","dy","length_1","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","startAngle","path","sweepAngel","difference","_addArc","_closeFigure","tempPoints","_points","pdfpath","_pathTypes","_drawPath","incise","sum","first","second","radian","cosvalue","acos","_obtainStyle","borderPen","rectangle","borderWidth","parameter","dashPattern","isDash","_dashStyle","_dashPattern","_PaintParameter","array","intensity","cloudy","_createRectangleAppearance","borderEffect","rdArray","cloudRectangle","_map","RD","nativeRectangle","_writeTransformation","backBrush","foreBrush","_drawRectangleAppearance","drawRectangle","graphicsPath","_addRectangle","sublist","_addPolygon","_createCircleAppearance","nativeBounds","_drawCircleAppearance","drawEllipse","left","top_1","right","bottom","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","x2","y2","angleRatio","atan","_getAxisValue","cos","_degreeToRadian","sin","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","square","circle","openArrow","_pen","_addLine","_stateControl","_buildUpPath","_drawGraphicsPath","_fillMode","closedArrow","drawPolygon","rOpenArrow","rClosedArrow","slash","drawLine","diamond","butt","_drawLineStyle","start","end","lineStyle","begin","_obtainFontDetails","fontFamily","fontSize","fontStyle","collection","split","entry","endsWith","replace","name_1","j","substring","textCollection","styleArray","includes","forEach","toLowerCase","italic","strikeout","trim","_obtainFont","fontData","_getEqualPdfGraphicsUnit","measurementUnit","unitString","graphicsUnit","inch","centimeter","millimeter","pica","_createMeasureDictionary","measureDictionary","_colorToHex","col","_componentToHex","c","hex","_getRotatedBounds","rotateAngle","corners","_transform","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","subject","text","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","hardLight","contentRect","normal","_drawSubject","drawString","_flattenLoadedPopUp","content","_getRectangleBoundsValue","dic","fore","trackingHeight","format","middle","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","list","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","cropBoxOrMediaBox","PdfComment","_super","apply","arguments","_comments","_reviewHistory","PdfLineAnnotation","_this","call","_unit","_unitString","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","_end","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","_load","annot","_postProcess","flatten","_appearanceTemplate","_createLineMeasureAppearance","_createAppearance","boundsArray","_obtainLineBounds","updatedBounds","_doPostProcess","isFlatten","reference","getRaw","flattenPopups","measure","appearance","reference_1","_getNextReference","_isFlatten","area","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","_getBounds","font","_pdfFont","center","measureString","lineAngle","endPoint","lineDistance","pow","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","_metrics","_getHeight","ref","nativeRectangle1","ds","_postScriptName","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","max","min","xmin","xmax","ymin","ymax","dot","lineWidth","_drawLine","rectangleBounds","data","distance","_convertUnits","PdfCircleAnnotation","_measureType","diameter","circleAnnotation","converter","_createCircleMeasureAppearance","reference_2","str","fontsize","_template","rect1","PdfEllipseAnnotation","ellipseAnnotation","reference_3","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","elements","vertices","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_5","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","polygonPoints","pageSize","pageHeight","pageWidth","points_1","k","points_2","PdfPolyLineAnnotation","_beginLine","none","_endLine","polyLineAnnotation","endLineStyle","beginLineStyle","pathTypes","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","PdfAngleMeasurementAnnotation","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","t","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","graphicspath","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","appearanceDictionary","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","sweepAngle","centerX","centerY","intersection1","intersection2","e","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","inkAnnotation","inkList","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","l","inkPoints","locx","locy","locw","loch","pathPointCont","pathPoints","p1","p2","_getControlPoints","controlP1","controlP2","pointsCollection","point_1","path1","path2","_addEllipse","_addBezierPoints","_lineCap","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","termsList","subList","isTwoPoints","pointCollection","xMin","yMin","xMax","yMax","_calculateInkBounds","factor","innerList","PdfPopupAnnotation","_icon","note","_iconString","_stateModel","_state","_open","_isReview","_isComment","popupAnnotation","_obtainIconName","_createPopupAppearance","pen1","template_1","drawArc","icon","comment","help","insert","key","newParagraph","paragraph","PdfFileLinkAnnotation","fileName","_fileName","fileLinkAnnotation","_action","action","actionDictionary","_fetch","_addAction","nextAction","_isNew","fileDictionary","PdfUriAnnotation","uri","_uri","uriAnnotation","linkDict","PdfDocumentLinkAnnotation","documentLinkAnnotation","destination","_obtainDestination","_destination","_addDocument","holder","pageNumber","_document","getPage","mode","top_3","zoom","topValue","leftValue","_setValidation","fitToPage","top_4","referenceArray","referenceValue","document_1","top_5","top_6","top_7","_array","PdfTextWebLinkAnnotation","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","_brush","textWebLinkAnnotation","_font","_url","linkSource","_get","PdfAttachmentAnnotation","pushPin","_stream","fileAttachmentAnnotation","_addAttachment","fileSpecification","embeddedFile","fileSpectDictionary","paramsDictionary","toTimeString","char1","_newLine","charCodeAt","char2","buffer","_writeObject","efileDictionary","fsReference","tag","graph","paperClip","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","highlight","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","_addLines","floor","multiply","textMarkUpColor","pdfPen","w1","h1","textMarkupType","strikeOut","squiggly","setClip","_drawSquiggly","pathPointsCount","ceil","location","zigZag","temp","textQuadLocation","noofRect","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","PdfRubberStampAnnotation","draft","_stampWidth","_stampAppearanceFont","_appearance","innerBounds","_obtainInnerBounds","_createRubberStampAppearance","_transformBBox","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","mMatrix","_drawStampAppearance","stringFormat","alignment","lineAlignment","_obtainBackGroundColor","_obtainBorderColor","scaleTransform","rubberFont","_drawRubberStamp","approved","asIs","confidential","departmental","experimental","expired","final","forComment","forPublicRelease","notApproved","notForPublicRelease","sold","topSecret","completed","void","informationOnly","preliminaryResults","red","green","blue","drawRoundedRectangle","pdfBrush","toUpperCase","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_textAlignment","_cropBoxValueX","_cropBoxValueY","freeTextAnnotation","_calloutLines","_getCalloutLinePoints","lines","_obtainLineEndingStyle","collections","startsWith","_borderColor","_obtainColor","borderColor","_annotationIntent","_obtainAnnotationIntent","_setPaddings","paddings","_paddings","_updateCropBoxValues","_saveFreeTextDictionary","cropOrMediaBox","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","freeTextCallout","freeTextTypeWriter","isRotation","bounds_1","textSize","_left","top_8","_top","_right","_bottom","first_1","second_1","forth","first_2","second_2","checkPaddingWithFontHeight","_drawFreeTextAnnotation","_drawAppearance","g","isSkipDrawRectangle","lineSpacing","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","markUpText","_rcText","textAlignment","hasAlignment","justify","_da","mkDict","_mkDictionary","pointY","pointX","annotationIntent","body","_getXmlFormattedString","markupText","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","normalTemplate","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","widths","overlayText","row","diff","textsize","repeatText","abs","PdfRichMediaAnnotation","richMediaAnnotation","PdfWidgetAnnotation","_isAutoResize","_visibility","visible","_isFont","_isTransparentBackColor","widgetAnnotation","crossReference","widget","_getPage","_defaultAppearance","isNew","_parseBackColor","_updateBackColor","mkDictionary","bcArray","_rotationAngle","_highlightMode","flag","_hasFlags","flags","flagValue","hidden","noView","print","hiddenPrintable","visibleNotPrintable","fontName","form","resources","fonts","fontDictionary","baseFont","textFontStyle","_initializeFont","da","_create","field","_currentObj","objId","_addWidget","_field","recreateAppearance","reference_9","document","resource","fontDict","isReference","obj","keyName","_pdfFontInternals","_fontName","defaultAppearance","document_2","pageCount","_beginSave","_hasBackColor","_backColor","colorArray","BG","backColor","PdfStateItem","checked","check","unchecked","_sw","_setTextRenderingMode","fill","_setField","_stringFormat","_addToKid","PdfRadioButtonListItem","item","_initializeItem","_index","selectedIndex","_optionValue","option","itemAt","PdfListFieldItem","_options","_value","_addToOptions","PdfInteractiveBorder","_getBorderEffect","_styleToEffect"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/annotations/annotation.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && (this._dictionary.has('Border') || (width || vRadius || hRadius))) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                var hasKey = false;\n                if (this._dictionary.has('Subj')) {\n                    this._dictionary.update('Subj', value);\n                    this._subject = value;\n                    hasKey = true;\n                }\n                if (!hasKey || this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                    this._subject = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary.has('Rotate')) {\n            angle = this._dictionary.get('Rotate');\n        }\n        else if (this._dictionary.has('Rotation')) {\n            angle = this._dictionary.get('Rotation');\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = linePoints.length;\n        var x = [];\n        var y = [];\n        if (linePoints && count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) || (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics._drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._removeAnnotationFromPage(this._page, this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this._type === _PdfAnnotationType.lineAnnotation && !this._dictionary.has('AP')) {\n            currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                this.bounds.width, this.bounds.height]);\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox')) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox')) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else {\n                    currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(scaleX === 1 && scaleY === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            graphics._drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._removeAnnotationFromPage(this._page, this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotationFromPage = function (page, annotation) {\n        var annotations = [];\n        if (page._pageDictionary && page._pageDictionary.has('Annots')) {\n            annotations = page._pageDictionary.get('Annots');\n        }\n        annotation._dictionary.set('P', page._ref);\n        var index = annotations.indexOf(annotation._ref);\n        if (index !== -1) {\n            annotations.splice(index, 1);\n            if (this._crossReference._cacheMap.has(annotation._ref)) {\n                this._crossReference._cacheMap.delete(annotation._ref);\n            }\n        }\n        page._pageDictionary.set('Annots', annotations);\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            this._removeAnnotationFromPage(page, annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint = points[points.length - 1];\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path._closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (brush !== null) {\n            graphics._drawPath(pdfpath, null, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path._closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics._drawPath(pdfpath, pen, null);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        for (var i = 0; i < points.length; i++) {\n            var first = points[Number.parseInt(i.toString(), 10)];\n            var second = points[(i + 1) % points.length];\n            sum += (second[0] - first[0]) * (second[1] + first[1]);\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        var radius = intensity * 4.25;\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new _PdfPath();\n            graphicsPath._addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(startPoint, (angle + 60), count);\n                second = this._getAxisValue(startPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = collection[Number.parseInt(i.toString(), 10)];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = void 0;\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new _PdfPath();\n            path._addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        clientSize = _page.size;\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._removeAnnotationFromPage(this._page, this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._removeAnnotationFromPage(this._page, this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            var cropBox = this._page.cropBox;\n            if (cropBox && _areNotEqual(cropBox, [0, 0, 0, 0])) {\n                cropBoxOrMediaBox = cropBox;\n            }\n            else {\n                var mBox = this._page.mediaBox;\n                if (mBox && _areNotEqual(mBox, [0, 0, 0, 0])) {\n                    cropBoxOrMediaBox = mBox;\n                }\n            }\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            var boundsArray = this._obtainLineBounds();\n            var bounds = { x: boundsArray[0],\n                y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n            this._bounds = bounds;\n            var updatedBounds = [this._bounds.x,\n                this._bounds.y,\n                this._bounds.x + this._bounds.width,\n                this._bounds.y + this._bounds.height];\n            this._dictionary.update('Rect', updatedBounds);\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, this._getRotationAngle());\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush = new PdfBrush(typeof this.innerColor !== 'undefined' ? this._innerColor : [0, 0, 0]);\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var size = this._page.size;\n            var rect1 = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            if (this._isBounds) {\n                nativeRectangle = rect1;\n            }\n            this._dictionary.update('Rect', [rect1[0], rect1[1], rect1[0] + rect1[2], rect1[1] + rect1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this._unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics._drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            array[array.length] = this._points[0];\n            array[array.length] = this._points[1];\n        }\n        this._points = array;\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new _PdfPath();\n                    graphicsPath._addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new _PdfPath();\n                graphicsPath._addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points !== null) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new _PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics._drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new _PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics._drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new _PdfPath();\n        graphicspath._addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new _PdfPath())._addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new _PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        path._addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        graphics._drawPath(path, pen);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                _setMatrix(template, this._getRotationAngle());\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    var p1 = [];\n                    var p2 = [];\n                    var value = this._getControlPoints(point, p1, p2);\n                    p1 = value.controlP1;\n                    p2 = value.controlP2;\n                    var index = 0;\n                    for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                        pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                        index++;\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new _PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1._addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            if (this._isLoaded) {\n                                borderPen._lineCap = PdfLineCap.round;\n                            }\n                            graphics._drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics._drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n            this._isModified = false;\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n            });\n        }\n        return this._getInkBoundsValue();\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics._drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var template;\n        if (this._dictionary.has('Name')) {\n            if (this._dictionary.get('Name').name === 'Comment') {\n                if (this._dictionary.has('Rect')) {\n                    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                    template = new PdfTemplate(nativeRectangle, this._crossReference);\n                    _setMatrix(template, this._getRotationAngle());\n                    var graphics = template.graphics;\n                    var rectValue = this._dictionary.getArray('Rect');\n                    if (rectValue !== null) {\n                        var pen = new PdfPen([0, 0, 0], 0.3);\n                        var brush = new PdfBrush(this.color);\n                        var pen1 = new PdfPen([255, 255, 255], 1);\n                        var points = new Array();\n                        points.push([6, 8]);\n                        points.push([9, 8]);\n                        points.push([4, 12]);\n                        var path = new _PdfPath();\n                        if (this.color[0] === 0 && this.color[0] === 0 && this.color[0] === 0) {\n                            brush = new PdfBrush([255, 215, 0]);\n                        }\n                        graphics.save();\n                        var template_1 = new PdfTemplate([0, 0, 15, 14], this._crossReference);\n                        template_1.graphics.drawRectangle(0, 0, 15, 14, pen, brush);\n                        template_1.graphics.drawPolygon(points, pen, new PdfBrush([255, 255, 255]));\n                        path._addEllipse(2, 2, 11, 8);\n                        template_1.graphics._drawPath(path, pen, new PdfBrush([255, 255, 255]));\n                        template_1.graphics.drawArc(2, 2, 11, 8, 108, 12.7, pen1);\n                        template_1.graphics.drawLine(pen, 4, 12, 6.5, 10);\n                        graphics._drawTemplate(template_1, { x: 0, y: 0, width: this.bounds.width, height: this.bounds.height });\n                        graphics.restore();\n                    }\n                }\n            }\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== null) {\n                this._destination = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                var page = this._crossReference._document.getPage(index);\n                if (array[1] instanceof _PdfName) {\n                    var mode = array[1];\n                    if (mode) {\n                        if (mode.name === 'XYZ') {\n                            var left = array[2];\n                            var top_4 = array[3];\n                            var zoom = array[4];\n                            var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                            var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                            this._destination = new PdfDestination(page, [leftValue, topValue]);\n                            if (typeof zoom !== 'undefined' && zoom !== null) {\n                                this._destination.zoom = zoom;\n                            }\n                            if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                || (typeof zoom === 'undefined' && zoom === null)) {\n                                this._destination._setValidation(false);\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    if (referenceArray) {\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            var document_1 = this._crossReference._document;\n                            var index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                            var page = document_1.getPage(index);\n                            if (page) {\n                                var mode = referenceArray[1];\n                                if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                    var top_5 = referenceArray[2];\n                                    var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                    this._destination = new PdfDestination(page, [0, topValue]);\n                                    if (typeof top_5 === 'undefined' || top_5 === null) {\n                                        this._destination._setValidation(false);\n                                    }\n                                }\n                                else if (mode.name === 'XYZ') {\n                                    var left = referenceArray[2];\n                                    var top_6 = referenceArray[3];\n                                    var zoom = referenceArray[4];\n                                    var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                    var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                    this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                    if (typeof zoom !== 'undefined' && zoom !== null) {\n                                        this._destination.zoom = zoom;\n                                    }\n                                    if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                        || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                        this._destination._setValidation(false);\n                                    }\n                                }\n                                else if (mode.name === 'FitR') {\n                                    if (referenceArray.length === 6) {\n                                        var left = referenceArray[2];\n                                        var bottom = referenceArray[3];\n                                        var right = referenceArray[4];\n                                        var top_7 = referenceArray[5];\n                                        this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                    }\n                                }\n                                else if (mode.name === 'Fit') {\n                                    this._destination = new PdfDestination(page);\n                                    this._destination.mode = PdfDestinationMode.fitToPage;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x, size[1] - (this.bounds.y + this.bounds.height), this.bounds.width, this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n            _this._boundsCollection.push([_this.bounds.x, _this.bounds.y, _this.bounds.width, _this.bounds.height]);\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (this._boundsCollection.length > 0) {\n                    this._quadPoints = new Array(8 + (value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var size = this._page.size;\n        this._setQuadPoints(size);\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new _PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new _PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics._drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics._drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    this._dictionary.update('Rect', [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height]);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new _PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var noofRect = this._quadPoints.length / 8;\n        for (var i = 0; i < noofRect; i++) {\n            var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n            var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n            textQuadLocation[0 + (i * 8)] = locationX;\n            textQuadLocation[1 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[3 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[4 + (i * 8)] = locationX;\n            textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] - this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n            textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotationIcon = page.annotations.at(0) as PdfRubberStampAnnotationIcon;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createRubberStampAppearance();\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.width, bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        var isStamp = false;\n                        if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                            var isRotated = false;\n                            var size = void 0;\n                            var rect = void 0;\n                            if (appearanceStream) {\n                                isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                                    this.rotateAngle === PdfRotationAngle.angle0);\n                                if (!isRotated) {\n                                    isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                        this.rotateAngle === PdfRotationAngle.angle0);\n                                }\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            isStamp = true;\n                            isTransformBBox = isRotated ? true : false;\n                            if (isTransformBBox) {\n                                var matrix = appearanceStream.dictionary.getArray('Matrix');\n                                if (matrix) {\n                                    var mMatrix = [];\n                                    for (var i = 0; i < matrix.length; i++) {\n                                        var value = matrix[Number.parseInt(i.toString(), 10)];\n                                        mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                                    }\n                                    var bounds = appearanceStream.dictionary.getArray('BBox');\n                                    if (bounds && bounds.length > 3) {\n                                        rect = _toRectangle(bounds);\n                                        var rectangle = this._transformBBox(rect, mMatrix);\n                                        size = [rectangle[2], rectangle[3]];\n                                        this._appearanceTemplate._size = size;\n                                    }\n                                    else {\n                                        size = [rect.width, rect.height];\n                                    }\n                                }\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                        if (!isStamp) {\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this._icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        var size = this._page.size;\n        var rectangle = [this.bounds.x, this.bounds.y + this.bounds.height, this.bounds.width, this.bounds.height];\n        rectangle[1] = size[1] - (this.bounds.y + this.bounds.height);\n        this._dictionary.set('Rect', [rectangle[0], rectangle[1], rectangle[0] + rectangle[2], rectangle[1] + rectangle[3]]);\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._lineEndingStyle = this._obtainLineEndingStyle();\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    //Need to code\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                var ds = 'font:' +\n                    this.font._metrics._postScriptName +\n                    ' ' +\n                    this.font._size +\n                    'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n                    ';color:' +\n                    this._colorToHex(value);\n                this._dictionary.update('DS', ds);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._updateCropBoxValues();\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            var size = this._page.size;\n            var rect = [this.bounds.x,\n                size[1] - (this.bounds.y + this.bounds.height),\n                this.bounds.width,\n                this.bounds.height];\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._updateCropBoxValues = function () {\n        if (this._page) {\n            var cropOrMediaBox = void 0;\n            if (this._page._pageDictionary.has('CropBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('CropBox');\n            }\n            else if (this._page._pageDictionary.has('MediaBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('MediaBox');\n            }\n            if (cropOrMediaBox) {\n                this._cropBoxValueX = cropOrMediaBox[0];\n                this._cropBoxValueY = cropOrMediaBox[1];\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics._drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            //Parse XML data\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0] - rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, parameter.bounds, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new _PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path._addRectangle(this.bounds.x - 2, (this._page.size[1] - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x, (this._page.size[1] - (this.bounds.y + this.bounds.height)), this.bounds.width, this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0],\n                    size[1] - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0],\n            pageHeight - this.calloutLines[1][1],\n            this.calloutLines[0][0],\n            pageHeight - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        if (this._dictionary.has('Contents')) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC')) {\n            //this._parseXMLData();\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            //Need to add\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new _PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics._drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        this._dictionary.update('Contents', this.text);\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        var ds = 'font:' +\n            this.font._metrics._postScriptName +\n            ' ' +\n            this.font._size +\n            'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n            ';color:' +\n            this._colorToHex(this.textMarkUpColor);\n        this._dictionary.update('DS', ds);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\"><p dir=\"ltr\">';\n        this._dictionary.update('RC', body + (this.text ? this._getXmlFormattedString(this.text) : '') + '</p></body>');\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        var size = this._page.size;\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                _removeDuplicateReference(appearance, this._crossReference, 'N');\n                _removeDuplicateReference(appearance, this._crossReference, 'R');\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.middle);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, 0, 0];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined') {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    var bcArray = mkDict.getArray('BC');\n                    if (bcArray) {\n                        this._borderColor = _parseColor(bcArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics._drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics._drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}