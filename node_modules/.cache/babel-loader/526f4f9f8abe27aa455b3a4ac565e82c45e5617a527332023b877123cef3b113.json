{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */function (_super) {\n  __extends(PdfPredictorStream, _super);\n  function PdfPredictorStream(stream, maybeLength, params) {\n    var _this = _super.call(this, maybeLength) || this;\n    if (!(params instanceof _PdfDictionary)) {\n      return stream;\n    }\n    var predictor = _this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return stream;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new FormatError(\"Unsupported predictor: \" + predictor);\n    }\n    if (predictor === 2) {\n      _this.readBlock = _this.readBlockTiff;\n    } else {\n      _this.readBlock = _this.readBlockPng;\n    }\n    _this.stream = stream;\n    _this.dictionary = stream.dictionary;\n    var colors = _this.colors = params.get('Colors') || 1;\n    var bits = _this.bits = params.get('BPC', 'BitsPerComponent') || 8;\n    var columns = _this.columns = params.get('Columns') || 1;\n    _this.pixBytes = colors * bits + 7 >> 3;\n    _this.rowBytes = columns * colors * bits + 7 >> 3;\n    return _this;\n  }\n  PdfPredictorStream.prototype.readBlockTiff = function () {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.stream.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0;\n    var outbuf = 0;\n    var inbits = 0;\n    var outbits = 0;\n    var position = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[position++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[position++] = rawBytes[i]; // eslint-disable-line\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n        position++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[position++] = rawBytes[i]; // eslint-disable-line\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xff) << 8) + (\n        // eslint-disable-line\n        rawBytes[i + 1] & 0xff) + ((buffer[position - bytesPerPixel] & 0xff) << 8) + (buffer[position - bytesPerPixel + 1] & 0xff);\n        buffer[position++] = sum >> 8 & 0xff;\n        buffer[position++] = sum & 0xff;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0;\n      var k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xff;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask; // eslint-disable-line\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk]; // eslint-disable-line\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xff;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PdfPredictorStream.prototype.readBlockPng = function () {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.stream.getByte();\n    var rawBytes = this.stream.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i;\n    var j = bufferLength;\n    var up;\n    var c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i]; // eslint-disable-line\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i]; // eslint-disable-line\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xff; // eslint-disable-line\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xff; // eslint-disable-line\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xff; // eslint-disable-line\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i]; // eslint-disable-line\n          c = rawBytes[i]; // eslint-disable-line\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i]; // eslint-disable-line\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i]; // eslint-disable-line\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new FormatError(\"Unsupported predictor: \" + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PdfPredictorStream;\n}(_PdfDecodeStream);\nexport { PdfPredictorStream };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","_PdfDecodeStream","_PdfDictionary","FormatError","PdfPredictorStream","_super","stream","maybeLength","params","_this","call","predictor","get","readBlock","readBlockTiff","readBlockPng","dictionary","colors","bits","columns","pixBytes","rowBytes","bufferLength","buffer","ensureBuffer","rawBytes","getBytes","eof","length","inbuf","outbuf","inbits","outbits","position","i","c","bytesPerPixel","sum","compArray","Uint8Array","bitMask","j","k","kk","getByte","prevRow","subarray","up","upLeft","left","pa","pb","pc"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/predictor-stream.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}