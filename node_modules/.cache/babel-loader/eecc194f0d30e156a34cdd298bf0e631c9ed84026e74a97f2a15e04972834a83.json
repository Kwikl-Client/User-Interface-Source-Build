{"ast":null,"code":"import { NodeSelection } from './../../selection/index';\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\n/**\n * Split the Node based on selection\n *\n * @hidden\n\n */\nvar NodeCutter = /** @class */function () {\n  function NodeCutter() {\n    this.enterAction = 'P';\n    this.position = -1;\n    this.nodeSelection = new NodeSelection();\n  }\n  // Split Selection Node\n  /**\n   * GetSpliceNode method\n   *\n   * @param {Range} range - specifies the range\n   * @param {HTMLElement} node - specifies the node element.\n   * @returns {Node} - returns the node value\n   * @hidden\n    */\n  NodeCutter.prototype.GetSpliceNode = function (range, node) {\n    node = this.SplitNode(range, node, true);\n    node = this.SplitNode(range, node, false);\n    return node;\n  };\n  /**\n   * @param {Range} range - specifies the range\n   * @param {HTMLElement} node - specifies the node element.\n   * @param {boolean} isCollapsed - specifies the boolean value\n   * @returns {HTMLElement} - returns the element\n   * @hidden\n    */\n  NodeCutter.prototype.SplitNode = function (range, node, isCollapsed) {\n    if (node) {\n      var clone = range.cloneRange();\n      var parent_1 = node.parentNode;\n      var index = this.nodeSelection.getIndex(node);\n      clone.collapse(isCollapsed);\n      // eslint-disable-next-line\n      isCollapsed ? clone.setStartBefore(node) : clone.setEndAfter(node);\n      var fragment = clone.extractContents();\n      if (isCollapsed) {\n        node = parent_1.childNodes[index];\n        fragment = this.spliceEmptyNode(fragment, false);\n        if (fragment && fragment.childNodes.length > 0) {\n          var isEmpty = fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName !== 'IMG' && !(fragment.querySelectorAll('img').length > 0) && this.isRteElm(fragment) && fragment.textContent === '' ? true : false;\n          if (!isEmpty) {\n            if (node) {\n              InsertMethods.AppendBefore(fragment, node);\n            } else {\n              parent_1.appendChild(fragment);\n              var divNode = document.createElement('div');\n              divNode.innerHTML = '&#65279;&#65279;';\n              node = divNode.firstChild;\n              parent_1.appendChild(node);\n            }\n          }\n        }\n      } else {\n        node = parent_1.childNodes.length > 1 ? parent_1.childNodes[index] : parent_1.childNodes[0];\n        fragment = this.spliceEmptyNode(fragment, true);\n        if (fragment && fragment.childNodes.length > 0) {\n          var isEmpty = fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName !== 'IMG' && this.isRteElm(fragment) && fragment.textContent === '' ? true : false;\n          if (!isEmpty) {\n            if (node) {\n              InsertMethods.AppendBefore(fragment, node, true);\n            } else {\n              parent_1.appendChild(fragment);\n              var divNode = document.createElement('div');\n              divNode.innerHTML = '&#65279;&#65279;';\n              parent_1.insertBefore(divNode.firstChild, parent_1.firstChild);\n              node = parent_1.firstChild;\n            }\n          }\n        }\n      }\n      return node;\n    } else {\n      return null;\n    }\n  };\n  NodeCutter.prototype.isRteElm = function (fragment) {\n    var result = true;\n    if (fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName !== 'IMG') {\n      var firstChild = fragment.childNodes[0];\n      for (var i = 0; !isNOU(firstChild.childNodes) && i < firstChild.childNodes.length; i++) {\n        if (firstChild.childNodes[i].nodeName === 'IMG' || firstChild.childNodes[i].nodeName === 'SPAN' && (firstChild.childNodes[i].classList.contains('e-video-wrap') || firstChild.childNodes[i].classList.contains('e-embed-video-wrap') || firstChild.childNodes[i].classList.contains('e-audio-wrap'))) {\n          result = false;\n        }\n      }\n    } else {\n      result = true;\n    }\n    return result;\n  };\n  NodeCutter.prototype.spliceEmptyNode = function (fragment, isStart) {\n    var len;\n    if (fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName === '#text' && fragment.childNodes[0].textContent === '' || fragment.textContent === '') {\n      len = -1;\n    } else {\n      len = fragment.childNodes.length - 1;\n    }\n    if (len > -1 && !isStart) {\n      this.spliceEmptyNode(fragment.childNodes[len], isStart);\n    } else if (len > -1) {\n      this.spliceEmptyNode(fragment.childNodes[0], isStart);\n    } else if (fragment.nodeType !== 3 && fragment.nodeType !== 11 && fragment.nodeName !== 'IMG' && !fragment.classList.contains('e-video-wrap') && !fragment.classList.contains('e-audio-wrap')) {\n      fragment.parentNode.removeChild(fragment);\n    }\n    return fragment;\n  };\n  // Cursor Position split\n  NodeCutter.prototype.GetCursorStart = function (indexes, index, isStart) {\n    indexes = isStart ? indexes : indexes.reverse();\n    var position = indexes[0];\n    for (var num = 0; num < indexes.length && (isStart ? indexes[num] < index : indexes[num] >= index); num++) {\n      position = indexes[num];\n    }\n    return position;\n  };\n  /**\n   * GetCursorRange method\n   *\n   * @param {Document} docElement - specifies the document\n   * @param {Range} range - specifies the range\n   * @param {Node} node - specifies the node.\n   * @returns {Range} - returns the range value\n   * @hidden\n    */\n  NodeCutter.prototype.GetCursorRange = function (docElement, range, node) {\n    var cursorRange = docElement.createRange();\n    var indexes = [];\n    indexes.push(0);\n    var str = this.TrimLineBreak(node.data);\n    var index = str.indexOf(' ', 0);\n    while (index !== -1) {\n      if (indexes.indexOf(index) < 0) {\n        indexes.push(index);\n      }\n      if (new RegExp('\\\\s').test(str[index - 1]) && indexes.indexOf(index - 1) < 0) {\n        indexes.push(index - 1);\n      }\n      if (new RegExp('\\\\s').test(str[index + 1])) {\n        indexes.push(index + 1);\n      }\n      index = str.indexOf(' ', index + 1);\n    }\n    indexes.push(str.length);\n    if (indexes.indexOf(range.startOffset) >= 0 || indexes.indexOf(range.startOffset - 1) >= 0 && (range.startOffset !== 1 || range.startOffset === 1 && new RegExp('\\\\s').test(str[0])) || indexes[indexes.length - 1] - 1 === range.startOffset && range.endOffset !== str.length - 1 && !new RegExp('\\\\s').test(str[0])) {\n      cursorRange = range;\n      this.position = 1;\n    } else {\n      var startOffset = this.GetCursorStart(indexes, range.startOffset, true);\n      this.position = range.startOffset - startOffset;\n      cursorRange.setStart(range.startContainer, startOffset);\n      cursorRange.setEnd(range.startContainer, this.GetCursorStart(indexes, range.startOffset, false));\n    }\n    return cursorRange;\n  };\n  /**\n   * GetCursorNode method\n   *\n   * @param {Document} docElement - specifies the document\n   * @param {Range} range - specifies the range\n   * @param {Node} node - specifies the node.\n   * @returns {Node} - returns the node value\n   * @hidden\n    */\n  NodeCutter.prototype.GetCursorNode = function (docElement, range, node) {\n    return this.GetSpliceNode(this.GetCursorRange(docElement, range, node), node);\n  };\n  /**\n   * TrimLineBreak method\n   *\n   * @param {string} line - specifies the string value.\n   * @returns {string} - returns the string\n   * @hidden\n    */\n  NodeCutter.prototype.TrimLineBreak = function (line) {\n    return line.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, ' ');\n  };\n  return NodeCutter;\n}();\nexport { NodeCutter };","map":{"version":3,"names":["NodeSelection","isNullOrUndefined","isNOU","InsertMethods","NodeCutter","enterAction","position","nodeSelection","prototype","GetSpliceNode","range","node","SplitNode","isCollapsed","clone","cloneRange","parent_1","parentNode","index","getIndex","collapse","setStartBefore","setEndAfter","fragment","extractContents","childNodes","spliceEmptyNode","length","isEmpty","nodeName","querySelectorAll","isRteElm","textContent","AppendBefore","appendChild","divNode","document","createElement","innerHTML","firstChild","insertBefore","result","i","classList","contains","isStart","len","nodeType","removeChild","GetCursorStart","indexes","reverse","num","GetCursorRange","docElement","cursorRange","createRange","push","str","TrimLineBreak","data","indexOf","RegExp","test","startOffset","endOffset","setStart","startContainer","setEnd","GetCursorNode","line","replace"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/nodecutter.js"],"sourcesContent":["import { NodeSelection } from './../../selection/index';\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\n/**\n * Split the Node based on selection\n *\n * @hidden\n\n */\nvar NodeCutter = /** @class */ (function () {\n    function NodeCutter() {\n        this.enterAction = 'P';\n        this.position = -1;\n        this.nodeSelection = new NodeSelection();\n    }\n    // Split Selection Node\n    /**\n     * GetSpliceNode method\n     *\n     * @param {Range} range - specifies the range\n     * @param {HTMLElement} node - specifies the node element.\n     * @returns {Node} - returns the node value\n     * @hidden\n\n     */\n    NodeCutter.prototype.GetSpliceNode = function (range, node) {\n        node = this.SplitNode(range, node, true);\n        node = this.SplitNode(range, node, false);\n        return node;\n    };\n    /**\n     * @param {Range} range - specifies the range\n     * @param {HTMLElement} node - specifies the node element.\n     * @param {boolean} isCollapsed - specifies the boolean value\n     * @returns {HTMLElement} - returns the element\n     * @hidden\n\n     */\n    NodeCutter.prototype.SplitNode = function (range, node, isCollapsed) {\n        if (node) {\n            var clone = range.cloneRange();\n            var parent_1 = node.parentNode;\n            var index = this.nodeSelection.getIndex(node);\n            clone.collapse(isCollapsed);\n            // eslint-disable-next-line\n            (isCollapsed) ? clone.setStartBefore(node) : clone.setEndAfter(node);\n            var fragment = clone.extractContents();\n            if (isCollapsed) {\n                node = parent_1.childNodes[index];\n                fragment = this.spliceEmptyNode(fragment, false);\n                if (fragment && fragment.childNodes.length > 0) {\n                    var isEmpty = (fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName !== 'IMG' && !(fragment.querySelectorAll('img').length > 0)\n                        && this.isRteElm(fragment) && fragment.textContent === '') ? true : false;\n                    if (!isEmpty) {\n                        if (node) {\n                            InsertMethods.AppendBefore(fragment, node);\n                        }\n                        else {\n                            parent_1.appendChild(fragment);\n                            var divNode = document.createElement('div');\n                            divNode.innerHTML = '&#65279;&#65279;';\n                            node = divNode.firstChild;\n                            parent_1.appendChild(node);\n                        }\n                    }\n                }\n            }\n            else {\n                node = parent_1.childNodes.length > 1 ? parent_1.childNodes[index] :\n                    parent_1.childNodes[0];\n                fragment = this.spliceEmptyNode(fragment, true);\n                if (fragment && fragment.childNodes.length > 0) {\n                    var isEmpty = (fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName !== 'IMG'\n                        && this.isRteElm(fragment) && fragment.textContent === '') ? true : false;\n                    if (!isEmpty) {\n                        if (node) {\n                            InsertMethods.AppendBefore(fragment, node, true);\n                        }\n                        else {\n                            parent_1.appendChild(fragment);\n                            var divNode = document.createElement('div');\n                            divNode.innerHTML = '&#65279;&#65279;';\n                            parent_1.insertBefore(divNode.firstChild, parent_1.firstChild);\n                            node = parent_1.firstChild;\n                        }\n                    }\n                }\n            }\n            return node;\n        }\n        else {\n            return null;\n        }\n    };\n    NodeCutter.prototype.isRteElm = function (fragment) {\n        var result = true;\n        if (fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName !== 'IMG') {\n            var firstChild = fragment.childNodes[0];\n            for (var i = 0; !isNOU(firstChild.childNodes) && i < firstChild.childNodes.length; i++) {\n                if (firstChild.childNodes[i].nodeName === 'IMG' || (firstChild.childNodes[i].nodeName === 'SPAN' &&\n                    (firstChild.childNodes[i].classList.contains('e-video-wrap') ||\n                        firstChild.childNodes[i].classList.contains('e-embed-video-wrap') ||\n                        firstChild.childNodes[i].classList.contains('e-audio-wrap')))) {\n                    result = false;\n                }\n            }\n        }\n        else {\n            result = true;\n        }\n        return result;\n    };\n    NodeCutter.prototype.spliceEmptyNode = function (fragment, isStart) {\n        var len;\n        if (fragment.childNodes.length === 1 && fragment.childNodes[0].nodeName === '#text' &&\n            fragment.childNodes[0].textContent === '' || fragment.textContent === '') {\n            len = -1;\n        }\n        else {\n            len = fragment.childNodes.length - 1;\n        }\n        if (len > -1 && !isStart) {\n            this.spliceEmptyNode(fragment.childNodes[len], isStart);\n        }\n        else if (len > -1) {\n            this.spliceEmptyNode(fragment.childNodes[0], isStart);\n        }\n        else if (fragment.nodeType !== 3 && fragment.nodeType !== 11 && fragment.nodeName !== 'IMG' && !(fragment.classList.contains('e-video-wrap')) && !(fragment.classList.contains('e-audio-wrap'))) {\n            fragment.parentNode.removeChild(fragment);\n        }\n        return fragment;\n    };\n    // Cursor Position split\n    NodeCutter.prototype.GetCursorStart = function (indexes, index, isStart) {\n        indexes = (isStart) ? indexes : indexes.reverse();\n        var position = indexes[0];\n        for (var num = 0; num < indexes.length && ((isStart) ? (indexes[num] < index) : (indexes[num] >= index)); num++) {\n            position = indexes[num];\n        }\n        return position;\n    };\n    /**\n     * GetCursorRange method\n     *\n     * @param {Document} docElement - specifies the document\n     * @param {Range} range - specifies the range\n     * @param {Node} node - specifies the node.\n     * @returns {Range} - returns the range value\n     * @hidden\n\n     */\n    NodeCutter.prototype.GetCursorRange = function (docElement, range, node) {\n        var cursorRange = docElement.createRange();\n        var indexes = [];\n        indexes.push(0);\n        var str = this.TrimLineBreak(node.data);\n        var index = str.indexOf(' ', 0);\n        while (index !== -1) {\n            if (indexes.indexOf(index) < 0) {\n                indexes.push(index);\n            }\n            if (new RegExp('\\\\s').test(str[index - 1]) && (indexes.indexOf(index - 1) < 0)) {\n                indexes.push(index - 1);\n            }\n            if (new RegExp('\\\\s').test(str[index + 1])) {\n                indexes.push(index + 1);\n            }\n            index = str.indexOf(' ', (index + 1));\n        }\n        indexes.push(str.length);\n        if ((indexes.indexOf(range.startOffset) >= 0)\n            || ((indexes.indexOf(range.startOffset - 1) >= 0) && (range.startOffset !== 1\n                || (range.startOffset === 1 && new RegExp('\\\\s').test(str[0])))\n                || (((indexes[indexes.length - 1] - 1) === range.startOffset) && range.endOffset !== (str.length - 1) && !new RegExp('\\\\s').test(str[0])))) {\n            cursorRange = range;\n            this.position = 1;\n        }\n        else {\n            var startOffset = this.GetCursorStart(indexes, range.startOffset, true);\n            this.position = range.startOffset - startOffset;\n            cursorRange.setStart(range.startContainer, startOffset);\n            cursorRange.setEnd(range.startContainer, this.GetCursorStart(indexes, range.startOffset, false));\n        }\n        return cursorRange;\n    };\n    /**\n     * GetCursorNode method\n     *\n     * @param {Document} docElement - specifies the document\n     * @param {Range} range - specifies the range\n     * @param {Node} node - specifies the node.\n     * @returns {Node} - returns the node value\n     * @hidden\n\n     */\n    NodeCutter.prototype.GetCursorNode = function (docElement, range, node) {\n        return this.GetSpliceNode(this.GetCursorRange(docElement, range, node), node);\n    };\n    /**\n     * TrimLineBreak method\n     *\n     * @param {string} line - specifies the string value.\n     * @returns {string} - returns the string\n     * @hidden\n\n     */\n    NodeCutter.prototype.TrimLineBreak = function (line) {\n        return line.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, ' ');\n    };\n    return NodeCutter;\n}());\nexport { NodeCutter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}