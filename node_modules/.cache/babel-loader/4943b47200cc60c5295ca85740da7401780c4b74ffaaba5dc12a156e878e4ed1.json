{"ast":null,"code":"import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */function () {\n  /**\n   * Represents a loaded page of the PDF document.\n   *\n   * @private\n   * @param {_PdfCrossReference} crossReference Cross reference object.\n   * @param {number} pageIndex page index.\n   * @param {_PdfDictionary} dictionary page Dictionary.\n   * @param {_PdfReference} reference page reference.\n   */\n  function PdfPage(crossReference, pageIndex, dictionary, reference) {\n    this._isAnnotationParsed = false;\n    this._pageIndex = pageIndex;\n    this._pageDictionary = dictionary;\n    this._crossReference = crossReference;\n    this._ref = reference;\n  }\n  Object.defineProperty(PdfPage.prototype, \"annotations\", {\n    /**\n     * Gets the collection of the page's annotations (Read only).\n     *\n     * @returns {PdfAnnotationCollection} Annotation collection.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the annotation collection\n     * let annotations: PdfAnnotationCollection = page.annotations;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._annotations === 'undefined') {\n        if (this._pageDictionary.has('Annots')) {\n          var annots = this._getProperty('Annots');\n          if (annots && Array.isArray(annots)) {\n            var widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n            if (widgets_1 && widgets_1.length > 0) {\n              var validAnnotations_1 = [];\n              annots.forEach(function (entry) {\n                if (widgets_1.indexOf(entry) === -1) {\n                  validAnnotations_1.push(entry);\n                }\n              });\n              this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n            } else {\n              this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n            }\n          }\n        }\n        if (typeof this._annotations === 'undefined') {\n          this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n        }\n      }\n      return this._annotations;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"size\", {\n    /**\n     * Gets the size of the page (Read only).\n     *\n     * @returns {number[]} Page width and height as number array.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the width and height of the PDF page as number array\n     * let size: number[] = page.size;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._size === 'undefined') {\n        var mBox = this.mediaBox;\n        var width = 0;\n        var height = 0;\n        if (mBox) {\n          width = mBox[2] - mBox[0];\n          height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n        }\n        if (height < 0) {\n          height = -height;\n        }\n        if (width < 0) {\n          width = -width;\n        }\n        this._size = [width, height];\n      }\n      return this._size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"rotation\", {\n    /**\n     * Gets the rotation angle of the page (Read only).\n     *\n     * @returns {PdfRotationAngle} Page rotation angle.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the rotation angle of the page\n     * let rotation: PdfRotationAngle = page.rotation;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      var angle = 0;\n      if (typeof this._rotation === 'undefined') {\n        angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n      }\n      if (angle < 0) {\n        angle += 360;\n      }\n      return typeof angle !== 'undefined' ? angle / 90 % 4 : PdfRotationAngle.angle0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n    /**\n     * Gets the tab order of a PDF form field.\n     *\n     * @returns {PdfFormFieldsTabOrder} tab order.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the tab order of a PDF form field.\n     * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._obtainTabOrder();\n    },\n    /**\n     * Sets the tab order of a PDF form field.\n     *\n     * @param {PdfFormFieldsTabOrder} value tab order.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Sets the tab order of a PDF form field.\n     * page.tabOrder = PdfFormFieldsTabOrder.row;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._tabOrder = value;\n      var tabs = '';\n      if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n        if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n          tabs = 'R';\n        } else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n          tabs = 'C';\n        } else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n          tabs = 'S';\n        }\n      }\n      this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n    /**\n     * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n     *\n     * @returns {number[]} Page size as number array.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the cropBox of the PDF page as number array\n     * let cropBox: number[] = page.cropBox;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._cBox === 'undefined') {\n        this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n      }\n      if (typeof this._cBox === 'undefined') {\n        this._cBox = [0, 0, 0, 0];\n      }\n      return this._cBox;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n    /**\n     * Gets the size that specify the width and height of the page (Read only).\n     *\n     * @returns {number[]} Page size as number array.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the mediaBox of the PDF page as number array\n     * let mediaBox: number[] = page.mediaBox;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._mBox === 'undefined') {\n        this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n      }\n      if (typeof this._mBox === 'undefined') {\n        this._mBox = [0, 0, 0, 0];\n      }\n      return this._mBox;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"orientation\", {\n    /**\n     * Gets the orientation of the page (Read only).\n     *\n     * @returns {PdfPageOrientation} Page orientation.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the orientation of the PDF page\n     * let orientation: number[] = page.orientation;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._orientation === 'undefined') {\n        if (typeof this.size !== 'undefined') {\n          var size = this.size;\n          if (size[0] > size[1]) {\n            this._orientation = PdfPageOrientation.landscape;\n          } else {\n            this._orientation = PdfPageOrientation.portrait;\n          }\n        }\n      }\n      return this._orientation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"_origin\", {\n    get: function () {\n      if (typeof this._o === 'undefined' || this._o[0] === 0 && this._o[1] === 0) {\n        this._o = [this.mediaBox[0], this._mBox[1]];\n      }\n      return this._o;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"graphics\", {\n    /**\n     * Gets the graphics of the page (Read only).\n     *\n     * @returns {PdfGraphics} Page graphics.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw line on the page graphics.\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n        this._parseGraphics();\n      }\n      return this._g;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfPage.prototype._addWidget = function (reference) {\n    var annots;\n    if (this._pageDictionary.has('Annots')) {\n      annots = this._getProperty('Annots');\n    }\n    if (annots && Array.isArray(annots)) {\n      annots.push(reference);\n    } else {\n      this._pageDictionary.update('Annots', [reference]);\n    }\n    this._pageDictionary._updated = true;\n  };\n  PdfPage.prototype._getProperty = function (key, getArray) {\n    if (getArray === void 0) {\n      getArray = false;\n    }\n    var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n    if (!Array.isArray(value)) {\n      return value;\n    }\n    if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n      return value[0];\n    }\n    return _PdfDictionary.merge(this._crossReference, value);\n  };\n  PdfPage.prototype._parseGraphics = function () {\n    this._loadContents();\n    var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n    var saveReference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(saveReference, saveStream);\n    this._contents.splice(0, 0, saveReference);\n    var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n    var restoreReference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(restoreReference, restoreStream);\n    this._contents.push(restoreReference);\n    var contentStream = new _PdfContentStream([]);\n    var contentReference = this._crossReference._getNextReference();\n    this._crossReference._cacheMap.set(contentReference, contentStream);\n    this._contents.push(contentReference);\n    this._pageDictionary.set('Contents', this._contents);\n    this._pageDictionary._updated = true;\n    this._initializeGraphics(contentStream);\n  };\n  PdfPage.prototype._loadContents = function () {\n    var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n    var ref;\n    if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n      ref = contents;\n      contents = this._crossReference._fetch(ref);\n    }\n    if (contents && contents instanceof _PdfBaseStream) {\n      this._contents = [ref];\n    } else if (contents && Array.isArray(contents)) {\n      this._contents = contents;\n    } else {\n      this._contents = [];\n    }\n  };\n  PdfPage.prototype._initializeGraphics = function (stream) {\n    var isInvalidCase = false;\n    var llx = 0;\n    var lly = 0;\n    var urx = 0;\n    var ury = 0;\n    var size = this.size;\n    var mbox = this.mediaBox;\n    if (mbox && mbox.length >= 4) {\n      llx = mbox[0];\n      lly = mbox[1];\n      urx = mbox[2];\n      ury = mbox[3];\n    }\n    var cbox;\n    if (this._pageDictionary.has('CropBox')) {\n      cbox = this.cropBox;\n      if (cbox && cbox.length >= 4) {\n        var cx = cbox[0];\n        var cy = cbox[1];\n        var crx = cbox[2];\n        var cry = cbox[3];\n        var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) && Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1])) && Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0]));\n        if (isValid) {\n          this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n        } else {\n          this._g = new PdfGraphics(size, stream, this._crossReference, this);\n          this._g._cropBox = cbox;\n        }\n      } else {\n        this._g = new PdfGraphics(size, stream, this._crossReference, this);\n      }\n    } else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) && Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1])) && Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0]))) {\n      var width = Math.max(llx, urx);\n      var height = Math.max(lly, ury);\n      if (width <= 0 || height <= 0) {\n        isInvalidCase = true;\n        if (llx < 0) {\n          llx = -llx;\n        }\n        if (lly < 0) {\n          lly = -lly;\n        }\n        if (urx < 0) {\n          urx = -urx;\n        }\n        if (ury < 0) {\n          ury = -ury;\n        }\n        width = Math.max(llx, urx);\n        height = Math.max(lly, ury);\n      }\n      this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n    } else {\n      this._g = new PdfGraphics(size, stream, this._crossReference, this);\n    }\n    if (this._pageDictionary.has('MediaBox')) {\n      this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n    }\n    this._graphicsState = this._g.save();\n    var origin = this._origin;\n    if (origin[0] >= 0 && origin[1] >= 0 || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n      this._g._initializeCoordinates();\n    } else {\n      this._g._initializeCoordinates(this);\n    }\n    //Need to code - set transparency group\n    var rotation = this.rotation;\n    if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n      var rotate = void 0;\n      if (this._pageDictionary.has('Rotate')) {\n        rotate = this._pageDictionary.get('Rotate');\n      } else {\n        rotate = rotation * 90;\n      }\n      var clip = this._g._clipBounds;\n      if (rotate === 90) {\n        this._g.translateTransform(0, size[1]);\n        this._g.rotateTransform(-90);\n        this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n      } else if (rotate === 180) {\n        this._g.translateTransform(size[0], size[1]);\n        this._g.rotateTransform(-180);\n      } else if (rotate === 270) {\n        this._g.translateTransform(size[0], 0);\n        this._g.rotateTransform(-270);\n        this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n      }\n    }\n    this._needInitializeGraphics = false;\n  };\n  PdfPage.prototype._fetchResources = function () {\n    if (typeof this._resourceObject === 'undefined') {\n      if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n        var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n        if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n          this._hasResourceReference = true;\n          this._resourceObject = this._crossReference._fetch(obj);\n        } else if (obj instanceof _PdfDictionary) {\n          this._resourceObject = obj;\n        }\n      } else {\n        this._resourceObject = new _PdfDictionary(this._crossReference);\n        this._pageDictionary.update('Resources', this._resourceObject);\n      }\n    }\n    return this._resourceObject;\n  };\n  PdfPage.prototype._getCropOrMediaBox = function () {\n    var box;\n    if (this._pageDictionary.has('CropBox')) {\n      box = this._pageDictionary.getArray('CropBox');\n    } else if (this._pageDictionary.has('MediaBox')) {\n      box = this._pageDictionary.getArray('MediaBox');\n    }\n    return box;\n  };\n  PdfPage.prototype._beginSave = function () {\n    if (typeof this._graphicsState !== 'undefined') {\n      this.graphics.restore(this._graphicsState);\n      this._graphicsState = null;\n      this._needInitializeGraphics = true;\n    }\n  };\n  PdfPage.prototype._destroy = function () {\n    this._pageDictionary = undefined;\n    this._size = undefined;\n    this._mBox = undefined;\n    this._cBox = undefined;\n    this._o = undefined;\n    this._g = undefined;\n    this._graphicsState = undefined;\n    this._contents = undefined;\n  };\n  PdfPage.prototype._obtainTabOrder = function () {\n    if (this._pageDictionary.has('Tabs')) {\n      var tabOrder = this._pageDictionary.get('Tabs');\n      if (tabOrder === _PdfName.get('R')) {\n        this._tabOrder = PdfFormFieldsTabOrder.row;\n      } else if (tabOrder === _PdfName.get('C')) {\n        this._tabOrder = PdfFormFieldsTabOrder.column;\n      } else if (tabOrder === _PdfName.get('S')) {\n        this._tabOrder = PdfFormFieldsTabOrder.structure;\n      } else if (tabOrder === _PdfName.get('W')) {\n        this._tabOrder = PdfFormFieldsTabOrder.widget;\n      }\n    }\n    if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n      this._tabOrder = PdfFormFieldsTabOrder.none;\n    }\n    return this._tabOrder;\n  };\n  PdfPage.prototype._removeAnnotation = function (reference) {\n    if (this._pageDictionary.has('Annots')) {\n      var annots = this._getProperty('Annots');\n      if (annots && Array.isArray(annots)) {\n        var index = annots.indexOf(reference);\n        if (index >= 0) {\n          annots.splice(index, 1);\n        }\n        this._pageDictionary.set('Annots', annots);\n        this._pageDictionary._updated = true;\n      }\n    }\n  };\n  return PdfPage;\n}();\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */function () {\n  function PdfDestination(page, location) {\n    this._location = [0, 0];\n    this._destinationMode = PdfDestinationMode.location;\n    this._zoom = 0;\n    this._isValid = true;\n    this._index = 0;\n    this._destinationBounds = [0, 0, 0, 0];\n    this._array = Array(); // eslint-disable-line\n    if (typeof page !== 'undefined' && page !== null) {\n      if (page.rotation === PdfRotationAngle.angle180) {\n        this._location = [page.graphics._size[0], this._location[1]];\n      } else if (page.rotation === PdfRotationAngle.angle90) {\n        this._location = [0, 0];\n      } else if (page.rotation === PdfRotationAngle.angle270) {\n        this._location = [page.graphics._size[0], 0];\n      } else {\n        this._location = [0, this._location[1]];\n      }\n      this._page = page;\n      this._index = page._pageIndex;\n    }\n    if (typeof location !== 'undefined' && location.length === 2) {\n      this._location = location;\n    }\n    if (typeof location !== 'undefined' && location.length === 4) {\n      this._location = [location[0], location[1]];\n      this._destinationBounds = location;\n    }\n  }\n  Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n    /**\n     * Gets the zoom factor.\n     *\n     * @returns {number} zoom.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * //Access the annotation at index 0\n     * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets the zoom factor of the destination.\n     * let zoom: number = annot.destination.zoom;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._zoom;\n    },\n    /**\n     * Sets the zoom factor.\n     *\n     * @param {number} value zoom.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Initializes a new instance of the `PdfDestination` class.\n     * let destination: PdfDestination = new PdfDestination();\n     * // Sets the zoom factor.\n     * destination.zoom = 20;\n     * // Sets the page where the destination is situated.\n     * destination.page = page;\n     * // Sets the mode of the destination.\n     * destination.mode = PdfDestinationMode.fitToPage;\n     * // Sets the location of the destination.\n     * destination.location = [20, 20];\n     * // Sets the bounds of the destination.\n     * destination.destinationBounds = [20, 20, 100, 50];\n     * // Sets destination to  document link annotation.\n     * annotation.destination = destination;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._zoom) {\n        this._zoom = value;\n        this._initializePrimitive();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"page\", {\n    /**\n     * Gets the page where the destination is situated.\n     *\n     * @returns {PdfPage} page.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * //Access the annotation at index 0\n     * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets the page of the destination.\n     * let page: PdfPage = annot.destination.page;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._page;\n    },\n    /**\n     * Sets the page where the destination is situated.\n     *\n     * @param {PdfPage} value page.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Initializes a new instance of the `PdfDestination` class.\n     * let destination: PdfDestination = new PdfDestination();\n     * // Sets the zoom factor.\n     * destination.zoom = 20;\n     * // Sets the page where the destination is situated.\n     * destination.page = page;\n     * // Sets the mode of the destination.\n     * destination.mode = PdfDestinationMode.fitToPage;\n     * // Sets the location of the destination.\n     * destination.location = [20, 20];\n     * // Sets the bounds of the destination.\n     * destination.destinationBounds = [20, 20, 100, 50];\n     * // Sets destination to  document link annotation.\n     * annotation.destination = destination;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._page) {\n        this._page = value;\n        this._initializePrimitive();\n        this._index = value._pageIndex;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n    /**\n     * Gets the page index of bookmark destination (Read only).\n     *\n     * @returns {number} index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * //Access the annotation at index 0\n     * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets the page index of the destination.\n     * let pageIndex: number = annot.destination.pageIndex;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._index;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"mode\", {\n    /**\n     * Gets the mode of the destination.\n     *\n     * @returns {PdfDestinationMode} page.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * //Access the annotation at index 0\n     * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets the mode of the destination.\n     * let mode: PdfDestinationMode = annot.destination.mode;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._destinationMode;\n    },\n    /**\n     * Sets the mode of the destination.\n     *\n     * @param {PdfDestinationMode} value page.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Initializes a new instance of the `PdfDestination` class.\n     * let destination: PdfDestination = new PdfDestination();\n     * // Sets the zoom factor.\n     * destination.zoom = 20;\n     * // Sets the page where the destination is situated.\n     * destination.page = page;\n     * // Sets the mode of the destination.\n     * destination.mode = PdfDestinationMode.fitToPage;\n     * // Sets the location of the destination.\n     * destination.location = [20, 20];\n     * // Sets the bounds of the destination.\n     * destination.destinationBounds = [20, 20, 100, 50];\n     * // Sets destination to document link annotation.\n     * annotation.destination = destination;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._destinationMode) {\n        this._destinationMode = value;\n        this._initializePrimitive();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"location\", {\n    /**\n     * Gets the location of the destination.\n     *\n     * @returns {number[]} page.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets the location of the destination.\n     * let location: number[] = annot.destination.location;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._location;\n    },\n    /**\n     * Sets the location of the destination.\n     *\n     * @param {number[]} value page.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Initializes a new instance of the `PdfDestination` class.\n     * let destination: PdfDestination = new PdfDestination();\n     * // Sets the zoom factor.\n     * destination.zoom = 20;\n     * // Sets the page where the destination is situated.\n     * destination.page = page;\n     * // Sets the mode of the destination.\n     * destination.mode = PdfDestinationMode.fitToPage;\n     * // Sets the location of the destination.\n     * destination.location = [20, 20];\n     * // Sets the bounds of the destination.\n     * destination.destinationBounds = [20, 20, 100, 50];\n     * // Sets destination to  document link annotation.\n     * annotation.destination = destination;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._location) {\n        this._location = value;\n        this._initializePrimitive();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n    /**\n     * Gets the bounds of the destination.\n     *\n     * @returns {number[]} bounds.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets the bounds of the destination.\n     * let destinationBounds: number[] = annot.destination.destinationBounds;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._destinationBounds;\n    },\n    /**\n     * Sets the bounds of the destination.\n     *\n     * @param {number[]} value bounds.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Initializes a new instance of the `PdfDestination` class.\n     * let destination: PdfDestination = new PdfDestination();\n     * // Sets the zoom factor.\n     * destination.zoom = 20;\n     * // Sets the page where the destination is situated.\n     * destination.page = page;\n     * // Sets the mode of the destination.\n     * destination.mode = PdfDestinationMode.fitToPage;\n     * // Sets the location of the destination.\n     * destination.location = [20, 20];\n     * // Sets the bounds of the destination.\n     * destination.destinationBounds = [20, 20, 100, 50];\n     * // Sets destination to  document link annotation.\n     * annotation.destination = destination;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      if (value !== this._destinationBounds) {\n        this._destinationBounds = value;\n        this._initializePrimitive();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n    /**\n     * Gets a value indicating whether this instance is valid (Read only).\n     *\n     * @returns {boolean} value indicating whether this instance is valid.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n     * // Gets a value indicating whether this instance is valid.\n     * let isValid: boolean = annot.destination.isValid;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._isValid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfDestination.prototype._setValidation = function (value) {\n    this._isValid = value;\n  };\n  PdfDestination.prototype._initializePrimitive = function () {\n    this._array = [];\n    var page = this._page;\n    var element = this._page._pageDictionary;\n    if (typeof element !== 'undefined' && element !== null) {\n      this._array.push(this._page._ref);\n    }\n    switch (this._destinationMode) {\n      case PdfDestinationMode.location:\n        this._array.push(_PdfName.get('XYZ'));\n        if (typeof page !== 'undefined' && page !== null) {\n          this._array.push(this._location[0]);\n          this._array.push(this._page.graphics._size[1] - this._location[1]);\n        } else {\n          this._array.push(0);\n          this._array.push(0);\n        }\n        this._array.push(this._zoom);\n        break;\n      case PdfDestinationMode.fitToPage:\n        this._array.push(_PdfName.get('Fit'));\n        break;\n      case PdfDestinationMode.fitR:\n        this._array.push(_PdfName.get('FitR'));\n        this._array.push(this._destinationBounds[0]);\n        this._array.push(this._destinationBounds[1]);\n        this._array.push(this._destinationBounds[2]);\n        this._array.push(this._destinationBounds[3]);\n        break;\n      case PdfDestinationMode.fitH:\n        this._array.push(_PdfName.get('FitH'));\n        this._array.push(typeof page !== 'undefined' && page !== null ? page._size[1] - this._location[1] : 0);\n        break;\n    }\n    if (this._parent) {\n      this._parent._dictionary.set('D', this._array);\n      this._parent._dictionary._updated = true;\n    }\n  };\n  return PdfDestination;\n}();\nexport { PdfDestination };","map":{"version":3,"names":["_PdfDictionary","_PdfReference","_PdfName","_getInheritableProperty","PdfAnnotationCollection","PdfGraphics","_PdfBaseStream","_PdfContentStream","PdfRotationAngle","PdfDestinationMode","PdfFormFieldsTabOrder","PdfPageOrientation","PdfPage","crossReference","pageIndex","dictionary","reference","_isAnnotationParsed","_pageIndex","_pageDictionary","_crossReference","_ref","Object","defineProperty","prototype","get","_annotations","has","annots","_getProperty","Array","isArray","widgets_1","_document","form","_parseWidgetReferences","length","validAnnotations_1","forEach","entry","indexOf","push","enumerable","configurable","_size","mBox","mediaBox","width","height","angle","_rotation","angle0","_obtainTabOrder","set","value","_tabOrder","tabs","none","row","column","structure","update","_cBox","_mBox","_orientation","size","landscape","portrait","_o","_g","_needInitializeGraphics","_parseGraphics","_addWidget","_updated","key","getArray","merge","_loadContents","saveStream","saveReference","_getNextReference","_cacheMap","_contents","splice","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","getRaw","ref","_fetch","stream","isInvalidCase","llx","lly","urx","ury","mbox","cbox","cropBox","cx","cy","crx","cry","isValid","Math","floor","abs","max","_cropBox","_mediaBoxUpperRightBound","_graphicsState","save","origin","_origin","sign","_initializeCoordinates","rotation","Number","isNaN","rotate","clip","_clipBounds","translateTransform","rotateTransform","_fetchResources","_resourceObject","obj","_hasResourceReference","_getCropOrMediaBox","box","_beginSave","graphics","restore","_destroy","undefined","tabOrder","widget","_removeAnnotation","index","PdfDestination","page","location","_location","_destinationMode","_zoom","_isValid","_index","_destinationBounds","_array","angle180","angle90","angle270","_page","_initializePrimitive","_setValidation","element","fitToPage","fitR","fitH","_parent","_dictionary"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/pdf-page.js"],"sourcesContent":["import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (annots && Array.isArray(annots)) {\n                        var widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = this.mediaBox;\n                var width = 0;\n                var height = 0;\n                if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                if (height < 0) {\n                    height = -height;\n                }\n                if (width < 0) {\n                    width = -width;\n                }\n                this._size = [width, height];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n            return (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            annots = this._getProperty('Annots');\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        var rotation = this.rotation;\n        if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n            var rotate = void 0;\n            if (this._pageDictionary.has('Rotate')) {\n                rotate = this._pageDictionary.get('Rotate');\n            }\n            else {\n                rotate = rotation * 90;\n            }\n            var clip = this._g._clipBounds;\n            if (rotate === 90) {\n                this._g.translateTransform(0, size[1]);\n                this._g.rotateTransform(-90);\n                this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n            }\n            else if (rotate === 180) {\n                this._g.translateTransform(size[0], size[1]);\n                this._g.rotateTransform(-180);\n            }\n            else if (rotate === 270) {\n                this._g.translateTransform(size[0], 0);\n                this._g.rotateTransform(-270);\n                this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n            }\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary.has('CropBox')) {\n            box = this._pageDictionary.getArray('CropBox');\n        }\n        else if (this._pageDictionary.has('MediaBox')) {\n            box = this._pageDictionary.getArray('MediaBox');\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (annots && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        var element = this._page._pageDictionary;\n        if (typeof element !== 'undefined' && element !== null) {\n            this._array.push(this._page._ref);\n        }\n        switch (this._destinationMode) {\n            case PdfDestinationMode.location:\n                this._array.push(_PdfName.get('XYZ'));\n                if (typeof page !== 'undefined' && page !== null) {\n                    this._array.push(this._location[0]);\n                    this._array.push(this._page.graphics._size[1] - this._location[1]);\n                }\n                else {\n                    this._array.push(0);\n                    this._array.push(0);\n                }\n                this._array.push(this._zoom);\n                break;\n            case PdfDestinationMode.fitToPage:\n                this._array.push(_PdfName.get('Fit'));\n                break;\n            case PdfDestinationMode.fitR:\n                this._array.push(_PdfName.get('FitR'));\n                this._array.push(this._destinationBounds[0]);\n                this._array.push(this._destinationBounds[1]);\n                this._array.push(this._destinationBounds[2]);\n                this._array.push(this._destinationBounds[3]);\n                break;\n            case PdfDestinationMode.fitH:\n                this._array.push(_PdfName.get('FitH'));\n                this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                break;\n        }\n        if (this._parent) {\n            this._parent._dictionary.set('D', this._array);\n            this._parent._dictionary._updated = true;\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n"],"mappings":"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AAC;IACDlH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFrB,MAAM,CAACC,cAAc,CAACuH,cAAc,CAACtH,SAAS,EAAE,MAAM,EAAE;IACpD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACkI,KAAK;IACrB,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQtG,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAIA,KAAK,KAAK,IAAI,CAACqG,KAAK,EAAE;QACtB,IAAI,CAACA,KAAK,GAAGrG,KAAK;QAClB,IAAI,CAACsG,oBAAoB,CAAC,CAAC;QAC3B,IAAI,CAACP,MAAM,GAAG/F,KAAK,CAACpC,UAAU;MAClC;IACJ,CAAC;IACDwB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFrB,MAAM,CAACC,cAAc,CAACuH,cAAc,CAACtH,SAAS,EAAE,WAAW,EAAE;IACzD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAAC4H,MAAM;IACtB,CAAC;IACD3G,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFrB,MAAM,CAACC,cAAc,CAACuH,cAAc,CAACtH,SAAS,EAAE,MAAM,EAAE;IACpD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACyH,gBAAgB;IAChC,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ7F,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAIA,KAAK,KAAK,IAAI,CAAC4F,gBAAgB,EAAE;QACjC,IAAI,CAACA,gBAAgB,GAAG5F,KAAK;QAC7B,IAAI,CAACsG,oBAAoB,CAAC,CAAC;MAC/B;IACJ,CAAC;IACDlH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFrB,MAAM,CAACC,cAAc,CAACuH,cAAc,CAACtH,SAAS,EAAE,UAAU,EAAE;IACxD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACwH,SAAS;IACzB,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ5F,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAIA,KAAK,KAAK,IAAI,CAAC2F,SAAS,EAAE;QAC1B,IAAI,CAACA,SAAS,GAAG3F,KAAK;QACtB,IAAI,CAACsG,oBAAoB,CAAC,CAAC;MAC/B;IACJ,CAAC;IACDlH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFrB,MAAM,CAACC,cAAc,CAACuH,cAAc,CAACtH,SAAS,EAAE,mBAAmB,EAAE;IACjE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAAC6H,kBAAkB;IAClC,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;AACA;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}