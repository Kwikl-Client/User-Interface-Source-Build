{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { _ImageDecoder } from './../../graphics/images/image-decoder';\nimport { PdfImage } from './pdf-image';\nimport { _decode } from './../../utils';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */function (_super) {\n  __extends(PdfBitmap, _super);\n  function PdfBitmap(encodedString) {\n    var _this = _super.call(this) || this;\n    _this._imageStatus = true;\n    if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n      _this._initializeAsync(encodedString);\n    } else {\n      _this._initializeAsync(encodedString);\n    }\n    return _this;\n  }\n  PdfBitmap.prototype._initializeAsync = function (encodedString) {\n    var byteArray = new Uint8Array(encodedString.length);\n    if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n      byteArray = _decode(encodedString, false);\n    } else if (encodedString instanceof Uint8Array) {\n      byteArray = encodedString;\n    }\n    this._decoder = new _ImageDecoder(byteArray);\n    this.height = this._decoder._height;\n    this.width = this._decoder._width;\n    this._bitsPerComponent = this._decoder._bitsPerComponent;\n  };\n  PdfBitmap.prototype._save = function () {\n    this._imageStatus = true;\n    this._imageStream = this._decoder._getImageDictionary();\n  };\n  return PdfBitmap;\n}(PdfImage);\nexport { PdfBitmap };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","_ImageDecoder","PdfImage","_decode","PdfBitmap","_super","encodedString","_this","call","_imageStatus","_initializeAsync","byteArray","Uint8Array","length","_decoder","height","_height","width","_width","_bitsPerComponent","_save","_imageStream","_getImageDictionary"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/graphics/images/pdf-bitmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './../../graphics/images/image-decoder';\nimport { PdfImage } from './pdf-image';\nimport { _decode } from './../../utils';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = new _ImageDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}