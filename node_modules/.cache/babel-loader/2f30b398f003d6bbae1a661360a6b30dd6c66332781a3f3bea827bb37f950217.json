{"ast":null,"code":"import { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar TableCommand = /** @class */function () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element\n   * @hidden\n    */\n  function TableCommand(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  TableCommand.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n    this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n    this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n    this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n    this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n    this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n    this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n    this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n    this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n  };\n  TableCommand.prototype.createTable = function (e) {\n    var table = createElement('table', {\n      className: 'e-rte-table'\n    });\n    var tblBody = createElement('tbody');\n    if (!isNOU(e.item.width.width)) {\n      table.style.width = this.calculateStyleValue(e.item.width.width);\n    }\n    if (!isNOU(e.item.width.minWidth)) {\n      table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n    }\n    if (!isNOU(e.item.width.maxWidth)) {\n      table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n    }\n    var tdWid = parseInt(e.item.width.width, 10) > 100 ? 100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n    for (var i = 0; i < e.item.rows; i++) {\n      var row = createElement('tr');\n      for (var j = 0; j < e.item.columns; j++) {\n        var cell = createElement('td');\n        cell.appendChild(createElement('br'));\n        cell.style.width = tdWid + '%';\n        row.appendChild(cell);\n      }\n      tblBody.appendChild(row);\n    }\n    table.appendChild(tblBody);\n    e.item.selection.restore();\n    InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n    e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n    if (table.nextElementSibling === null) {\n      var insertElem = void 0;\n      if (e.enterAction === 'DIV') {\n        insertElem = createElement('div');\n        insertElem.appendChild(createElement('br'));\n      } else if (e.enterAction === 'BR') {\n        insertElem = createElement('br');\n      } else {\n        insertElem = createElement('p');\n        insertElem.appendChild(createElement('br'));\n      }\n      this.insertAfter(insertElem, table);\n    }\n    table.querySelector('td').classList.add('e-cell-select');\n    if (e.callBack) {\n      e.callBack({\n        requestType: 'Table',\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: [table]\n      });\n    }\n    return table;\n  };\n  TableCommand.prototype.calculateStyleValue = function (value) {\n    var styleValue;\n    if (typeof value === 'string') {\n      if (value.indexOf('px') >= 0 || value.indexOf('%') >= 0 || value.indexOf('auto') >= 0) {\n        styleValue = value;\n      } else {\n        styleValue = value + 'px';\n      }\n    } else {\n      styleValue = value + 'px';\n    }\n    return styleValue;\n  };\n  TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var a = 0;\n    var minI = e.length;\n    var maxI = 0;\n    var minJ = e[0].length;\n    var maxJ = 0;\n    //eslint-disable-next-line\n    for (var i = 0; a < selectedCells.length; a++) {\n      var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n      var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e);\n      //eslint-disable-next-line\n      minI = Math.min(selectedCellIndex[0], minI), maxI = Math.max(minMaxIndex[0], maxI), minJ = Math.min(selectedCellIndex[1], minJ), maxJ = Math.max(minMaxIndex[1], maxJ);\n    }\n    return {\n      startRow: minI,\n      endRow: maxI,\n      startColumn: minJ,\n      endColumn: maxJ\n    };\n  };\n  TableCommand.prototype.insertRow = function (e) {\n    var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n    var selectedCell = e.item.selection.range.startContainer;\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n      return;\n    }\n    this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n      var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n      var cloneRow = lastRow.cloneNode(true);\n      cloneRow.removeAttribute('rowspan');\n      this.insertAfter(cloneRow, lastRow);\n    } else {\n      var allCells = this.getCorrespondingColumns();\n      var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n      var newRow = createElement('tr');\n      var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n      for (var i = 0; i < allCells[minVal].length; i++) {\n        // eslint-disable-next-line max-len\n        if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] || !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n          if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n            allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n          }\n        } else {\n          var tdElement = createElement('td');\n          tdElement.appendChild(createElement('br'));\n          newRow.appendChild(tdElement);\n          tdElement.setAttribute('style', allCells[isHeaderSelect && isBelow ? allCells[minVal + 1] ? minVal + 1 : minVal : minVal][i].getAttribute('style'));\n        }\n      }\n      // eslint-disable-next-line\n      var selectedRow = void 0;\n      if (isHeaderSelect && isBelow) {\n        selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n      } else {\n        selectedRow = this.curTable.rows[minVal];\n      }\n      // eslint-disable-next-line\n      e.item.subCommand === 'InsertRowBefore' ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : this.insertAfter(newRow, selectedRow);\n    }\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.insertColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var curRow = closest(selectedCell, 'tr');\n    var curCell;\n    var allRows = closest(curRow, 'table').rows;\n    var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n    var previousWidth = parseInt(e.item.width, 10) / curRow.querySelectorAll(':scope > td, :scope > th').length;\n    var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n    var currentTabElm = closest(curRow, 'table');\n    var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].dataset.oldWidth = thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100 + '%';\n    }\n    for (var i = 0; i < allRows.length; i++) {\n      curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n      var colTemplate = curCell.cloneNode(true);\n      colTemplate.innerHTML = '';\n      colTemplate.appendChild(createElement('br'));\n      colTemplate.removeAttribute('class');\n      colTemplate.removeAttribute('colspan');\n      colTemplate.removeAttribute('rowspan');\n      // eslint-disable-next-line\n      e.item.subCommand === 'InsertColumnLeft' ? curCell.parentElement.insertBefore(colTemplate, curCell) : this.insertAfter(colTemplate, curCell);\n      colTemplate.style.width = currentWidth.toFixed(4) + '%';\n      delete colTemplate.dataset.oldWidth;\n    }\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n      delete thTdElm[i].dataset.oldWidth;\n    }\n    e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.deleteColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n    var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n    this.curTable = closest(selectedCell, 'table');\n    var curRow = closest(selectedCell, 'tr');\n    if (curRow.querySelectorAll('th,td').length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      var deleteIndex = void 0;\n      var allCells = this.getCorrespondingColumns();\n      //eslint-disable-next-line\n      var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minCol = selectedMinMaxIndex.startColumn;\n      var maxCol = selectedMinMaxIndex.endColumn;\n      for (var i = 0; i < allCells.length; i++) {\n        var currentRow = allCells[i];\n        for (var j = 0; j < currentRow.length; j++) {\n          var currentCell = currentRow[j];\n          //eslint-disable-next-line\n          var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n          var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n          if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n            if (colSpanVal > 1) {\n              currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n            } else {\n              detach(currentCell);\n              deleteIndex = j;\n              if (Browser.isIE) {\n                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n              }\n            }\n          }\n        }\n      }\n      if (deleteIndex > -1) {\n        var rowHeadEle = tBodyHeadEle.children[rowIndex];\n        var nextFocusCell = rowHeadEle && rowHeadEle.children[deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1];\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        }\n      }\n    }\n    if (e.callBack) {\n      var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n      if (sContainer.nodeName !== 'TD') {\n        var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n        var focusNode = sContainer.children[startChildLength];\n        if (focusNode) {\n          this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n        }\n      }\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.deleteRow = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n    this.curTable = closest(selectedCell, 'table');\n    var currentRow;\n    var allCells = this.getCorrespondingColumns();\n    var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n    var maxI;\n    var j;\n    if (this.curTable.rows.length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n        currentRow = this.curTable.rows[maxI];\n        for (j = 0; j < allCells[maxI].length; j++) {\n          if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n            if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n              var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1;\n              /* eslint-disable */\n              if (1 === rowSpanVal) {\n                allCells[maxI][j].removeAttribute('rowspan');\n                var cell = this.getMergedRow(this.getCorrespondingColumns())[j];\n                if (cell) {\n                  var cloneNode = cell.cloneNode(true);\n                  cloneNode.innerHTML = '<br>';\n                  if (cell.parentElement) {\n                    cell.parentElement.insertBefore(cloneNode, cell);\n                  }\n                }\n              } else {\n                allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n              }\n              /* eslint-enable */\n            }\n          }\n          // eslint-disable-next-line max-len\n          if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI || allCells[maxI][j] !== allCells[maxI - 1][j])) {\n            var element = allCells[maxI][j];\n            var index = void 0;\n            // eslint-disable-next-line max-len\n            for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n              if (index === 0) {\n                this.curTable.rows[maxI + 1].prepend(element);\n              } else {\n                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n              }\n            }\n          }\n        }\n        var deleteIndex = currentRow.rowIndex;\n        this.curTable.deleteRow(deleteIndex);\n        var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex] : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n        var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        } else {\n          e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n          this.curTable.querySelector('td, th').classList.add('e-cell-select');\n        }\n      }\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.getMergedRow = function (cells) {\n    var mergedRow;\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].length !== this.curTable.rows[0].childNodes.length) {\n        mergedRow = cells[i];\n      }\n    }\n    return mergedRow;\n  };\n  TableCommand.prototype.removeTable = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var selectedTable = closest(selectedCell.parentElement, 'table');\n    if (selectedTable) {\n      e.item.selection.restore();\n      detach(selectedTable);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.tableHeader = function (e) {\n    var headerExit = false;\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var table = closest(selectedCell.parentElement, 'table');\n    [].slice.call(table.childNodes).forEach(function (el) {\n      if (el.nodeName === 'THEAD') {\n        headerExit = true;\n      }\n    });\n    if (table && !headerExit) {\n      var cellCount = table.querySelector('tr').childElementCount;\n      var colSpanCount = 0;\n      for (var i = 0; i < cellCount; i++) {\n        colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n      }\n      var header = table.createTHead();\n      var row = header.insertRow(0);\n      for (var j = 0; j < colSpanCount; j++) {\n        var th = createElement('th');\n        th.appendChild(createElement('br'));\n        row.appendChild(th);\n      }\n    } else {\n      table.deleteTHead();\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.tableVerticalAlign = function (e) {\n    var value = '';\n    switch (e.item.subCommand) {\n      case 'AlignTop':\n        value = 'top';\n        break;\n      case 'AlignMiddle':\n        value = 'middle';\n        break;\n      case 'AlignBottom':\n        value = 'bottom';\n        break;\n    }\n    e.item.tableCell.style.verticalAlign = value;\n    if (value && value !== '' && e.item.tableCell.getAttribute('valign')) {\n      e.item.tableCell.removeAttribute('valign');\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.cellMerge = function (e) {\n    if (isNOU(this.curTable)) {\n      this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n    }\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    if (selectedCells.length < 2) {\n      return;\n    }\n    this.mergeCellContent();\n    var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n    var firstCell = selectedCells[0];\n    var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n    if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n      firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n    }\n    if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n      firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n    }\n    var totalWidth = 0;\n    for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n      totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n    }\n    firstCell.style.width = totalWidth + '%';\n    for (var i = 1; i <= selectedCells.length - 1; i++) {\n      detach(selectedCells[i]);\n    }\n    for (var i = 0; i < this.curTable.rows.length; i++) {\n      if (this.curTable.rows[i].innerHTML === '') {\n        detach(this.curTable.rows[i]);\n      }\n    }\n    this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n    this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n    if (this.parent.nodeSelection && firstCell) {\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument,\n      // eslint-disable-next-line\n      firstCell, 0);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n    var colValue;\n    var colIndex;\n    var colMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = elements;\n    //eslint-disable-next-line\n    if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n      for (colIndex === min; colIndex <= max; colIndex++) {\n        // eslint-disable-next-line\n        if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < (index = Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1)) && eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n          for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n            if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n              /* eslint-disable */\n              for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                if (1 < (attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1) && eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                  colMin += count = Math.min(count, attrValue - 1);\n                } else if (!(count = Math.max(0, count - 1))) {\n                  break;\n                }\n                /* eslint-enable */\n              }\n            }\n            if (!count) {\n              break;\n            }\n          }\n        }\n      }\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n      }\n    }\n  };\n  TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n    var rowValue;\n    var colIndex;\n    var rowMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = ele;\n    // eslint-disable-next-line\n    if (min < (max = Math.min(max, eleArray.length - 1))) {\n      for (rowValue = min; rowValue <= max; rowValue++) {\n        // eslint-disable-next-line\n        if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0])\n        // eslint-disable-next-line no-cond-assign\n        && eleArray[rowValue][0] && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) || 1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n          for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n            if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n              for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                // eslint-disable-next-line\n                if (1 < (attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1) && eleArray[rowMin][colIndex] === eleArray[rowMin + 1][colIndex]) {\n                  rowMin += count = Math.min(count, attrValue - 1);\n                }\n                // eslint-disable-next-line\n                else if (!(count = Math.max(0, count - 1))) {\n                  break;\n                }\n              }\n              if (!count) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n      }\n    }\n  };\n  TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n    var rowIndex;\n    var colIndex;\n    var spanCount;\n    for (rowIndex = min; rowIndex <= max; rowIndex++) {\n      for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n        // eslint-disable-next-line\n        min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] || firstIndex < colIndex && elements[rowIndex][colIndex] === elements[rowIndex][colIndex - 1] || 1 < (spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1) && (\n        // eslint-disable-next-line max-len\n        1 < spanCount - index ? elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString()) : elements[rowIndex][colIndex].removeAttribute(attr));\n      }\n    }\n  };\n  TableCommand.prototype.mergeCellContent = function () {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var innerHtml = selectedCells[0].innerHTML === '<br>' ? '' : selectedCells[0].innerHTML;\n    for (var i = 1; i < selectedCells.length; i++) {\n      if ('<br>' !== selectedCells[i].innerHTML) {\n        innerHtml = innerHtml ? innerHtml + '<br>' + selectedCells[i].innerHTML : innerHtml + selectedCells[i].innerHTML;\n      }\n    }\n    selectedCells[0].innerHTML = innerHtml;\n  };\n  TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    if (0 < selectedCells.length) {\n      var minRow = correspondingCells.length;\n      var maxRow = 0;\n      var minCol = correspondingCells[0].length;\n      var maxCol = 0;\n      for (var i = 0; i < selectedCells.length; i++) {\n        var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n        var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n        minRow = Math.min(currentRowCol[0], minRow);\n        maxRow = Math.max(targetRowCol[0], maxRow);\n        minCol = Math.min(currentRowCol[1], minCol);\n        maxCol = Math.max(targetRowCol[1], maxCol);\n      }\n      return {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      };\n    }\n    return null;\n  };\n  TableCommand.prototype.HorizontalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n    if (activeCellRowSpan > 1) {\n      var avgCount = Math.ceil(activeCellRowSpan / 2);\n      // eslint-disable-next-line\n      1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) : this.activeCell.removeAttribute('rowspan');\n      // eslint-disable-next-line\n      1 < activeCellRowSpan - avgCount ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n      var avgRowIndex = void 0;\n      var colIndex = void 0;\n      for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2), colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1] : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] ===\n      // eslint-disable-next-line max-len\n      correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex] === correspondingCells[avgRowIndex - 1][colIndex]);) {\n        colIndex--;\n      }\n      if (colIndex === -1) {\n        // eslint-disable-next-line\n        this.curTable.rows[avgRowIndex].firstChild ? this.curTable.rows[avgRowIndex].prepend(newCell) : this.curTable.appendChild(newCell);\n      } else {\n        correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n      }\n    } else {\n      var newTrEle = createElement('tr');\n      newTrEle.appendChild(newCell);\n      var selectedRow = correspondingCells[activeCellIndex[0]];\n      for (var j = 0; j <= selectedRow.length - 1; j++) {\n        if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n          selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ? parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n        }\n      }\n      this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.VerticalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var allRows = this.curTable.rows;\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n    if (this.activeCell.tagName === 'TH' && isNaN(avgWidth)) {\n      var cellCount = this.curTable.querySelector('tr').childElementCount;\n      var colSpanCount = 0;\n      for (var i = 0; i < cellCount; i++) {\n        colSpanCount = colSpanCount + (parseInt(this.curTable.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n      }\n      avgWidth = parseFloat((this.activeCell.offsetWidth / 2 / this.curTable.offsetWidth * 100).toFixed(1));\n    }\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingColumns = this.getCorrespondingColumns();\n    var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10);\n    if (activeCellcolSpan > 1) {\n      // eslint-disable-next-line\n      1 < Math.ceil(activeCellcolSpan / 2) ? this.activeCell.setAttribute('colspan', (activeCellcolSpan / 2).toString()) : this.activeCell.removeAttribute('colspan');\n      // eslint-disable-next-line\n      1 < activeCellcolSpan - activeCellcolSpan / 2 ? newCell.setAttribute('colspan',\n      // eslint-disable-next-line\n      (activeCellcolSpan - activeCellcolSpan / 2).toString()) : newCell.removeAttribute('colspan');\n    } else {\n      for (var i = 0; i <= allRows.length - 1; i++) {\n        if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n          var currentCell = correspondingColumns[i][activeCellIndex[1]];\n          if (currentCell !== this.activeCell) {\n            currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ? parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n          }\n        }\n      }\n    }\n    this.activeCell.style.width = avgWidth + '%';\n    newCell.style.width = avgWidth + '%';\n    this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.getCorrespondingColumns = function () {\n    var elementArray = [];\n    // eslint-disable-next-line\n    var _this = this;\n    var colspan = 0;\n    var allRows = _this.curTable.rows;\n    for (var i = 0; i <= allRows.length - 1; i++) {\n      var ele = allRows[i];\n      var index = 0;\n      for (var j = 0; j <= ele.children.length - 1; j++) {\n        /* eslint-disable */\n        var colEle = ele.children[j];\n        for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n          for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n            elementArray[rowIndex] || (elementArray[rowIndex] = []);\n            elementArray[rowIndex][colIndex] ? index++ : elementArray[rowIndex][colIndex] = colEle;\n          }\n        }\n        index += colspan;\n      }\n      /* eslint-enable */\n    }\n    return elementArray;\n  };\n  // eslint-disable-next-line\n  TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n    var nextIndex;\n    var nextCol;\n    for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n      if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n        nextIndex--;\n        break;\n      }\n      nextIndex++;\n    }\n    for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n      if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n        nextCol--;\n        break;\n      }\n      nextCol++;\n    }\n    return nextCol === cells[rowIndex].length && nextCol--, [nextIndex, nextCol];\n  };\n  TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n    //let value: RowCol = new RowCol();\n    for (var i = 0; i < allCells.length; i++) {\n      for (var j = 0; j < allCells[i].length; j++) {\n        if (allCells[i][j] === cell) {\n          return [i, j];\n        }\n      }\n    }\n    return [];\n  };\n  TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n    var j;\n    var k;\n    var startCell;\n    var endCell;\n    var minRowIndex = minRow;\n    var maxRowIndex = maxRow;\n    var minColIndex = minCol;\n    var maxColIndex = maxCol;\n    var minMaxValues = new MinMax();\n    for (j = minRowIndex; j <= maxRowIndex; j++) {\n      /* eslint-disable */\n      if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray))[0], startCell[1], eleArray))) {\n        minRowIndex = Math.min(startCell[0], minRowIndex);\n        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n        minColIndex = Math.min(startCell[1], minColIndex);\n        maxColIndex = Math.max(endCell[1], maxColIndex);\n      } else if ((1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray))[0], startCell[1], eleArray))) {\n        minRowIndex = Math.min(startCell[0], minRowIndex);\n        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n        minColIndex = Math.min(startCell[1], minColIndex);\n        maxColIndex = Math.max(endCell[1], maxColIndex);\n      }\n      for (k = minColIndex; k <= maxColIndex; k++) {\n        if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        } else if ((1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        }\n      }\n      minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n    }\n    return minMaxValues;\n    /* eslint-enable */\n  };\n  TableCommand.prototype.tableMove = function (e) {\n    this.activeCell = e.selectNode[0];\n    var target = e.event.target;\n    var activeCellTag = this.activeCell.tagName;\n    var targetCellTag = target.tagName;\n    this.curTable = closest(target, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      this.parent.nodeSelection.Clear(this.parent.currentDocument);\n    }\n    if (target.tagName !== 'TD' && target.tagName !== 'TH' && activeCellTag !== targetCellTag) {\n      return;\n    }\n    var activeRowIndex = Array.prototype.slice.call(this.activeCell.parentElement.parentElement.children).indexOf(this.activeCell.parentElement);\n    var activeColumnIndex = Array.prototype.slice.call(this.activeCell.parentElement.children).indexOf(this.activeCell);\n    var targetRowIndex = Array.prototype.slice.call(target.parentElement.parentElement.children).indexOf(target.parentElement);\n    var targetColumnIndex = Array.prototype.slice.call(target.parentElement.children).indexOf(target);\n    var activeCellList = this.curTable.querySelectorAll('.e-cell-select');\n    for (var i = activeCellList.length - 1; i >= 0; i--) {\n      if (this.activeCell !== activeCellList[i]) {\n        activeCellList[i].classList.remove('e-cell-select');\n      }\n    }\n    if (activeRowIndex === targetRowIndex && activeColumnIndex === targetColumnIndex) {\n      return;\n    }\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n    var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n    var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0], /* eslint-disable */\n    targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n    for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n      for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n        correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n      }\n    }\n    if (this.parent.nodeSelection.range) {\n      this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, this.parent.nodeSelection.range.endContainer, 0, 0);\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, 0);\n    }\n  };\n  ;\n  return TableCommand;\n}();\nexport { TableCommand };\nvar MinMax = /** @class */function () {\n  function MinMax() {}\n  return MinMax;\n}();","map":{"version":3,"names":["createElement","closest","detach","Browser","isNullOrUndefined","isNOU","CONSTANT","InsertHtml","TableCommand","parent","addEventListener","prototype","observer","on","TABLE","createTable","INSERT_ROW","insertRow","INSERT_COLUMN","insertColumn","DELETEROW","deleteRow","DELETECOLUMN","deleteColumn","REMOVETABLE","removeTable","TABLEHEADER","tableHeader","TABLE_VERTICAL_ALIGN","tableVerticalAlign","TABLE_MERGE","cellMerge","TABLE_HORIZONTAL_SPLIT","HorizontalSplit","TABLE_VERTICAL_SPLIT","VerticalSplit","TABLE_MOVE","tableMove","e","table","className","tblBody","item","width","style","calculateStyleValue","minWidth","maxWidth","tdWid","parseInt","columns","i","rows","row","j","cell","appendChild","selection","restore","Insert","currentDocument","editableElement","setSelectionText","querySelector","nextElementSibling","insertElem","enterAction","insertAfter","classList","add","callBack","requestType","editorMode","event","range","nodeSelection","getRange","elements","value","styleValue","indexOf","newNode","referenceNode","parentNode","insertBefore","nextSibling","getSelectedCellMinMaxIndex","selectedCells","curTable","querySelectorAll","a","minI","length","maxI","minJ","maxJ","selectedCellIndex","getCorrespondingIndex","minMaxIndex","FindIndex","Math","min","max","startRow","endRow","startColumn","endColumn","isBelow","subCommand","selectedCell","startContainer","nodeName","parentElement","toLowerCase","lastRow","cloneRow","cloneNode","removeAttribute","allCells","getCorrespondingColumns","minVal","newRow","isHeaderSelect","setAttribute","getAttribute","toString","tdElement","selectedRow","childNodes","getSelectedNodes","curRow","curCell","allRows","colIndex","Array","slice","call","previousWidth","currentWidth","currentTabElm","thTdElm","dataset","oldWidth","offsetWidth","colTemplate","innerHTML","toFixed","Number","split","nodeType","tBodyHeadEle","tagName","rowIndex","deleteIndex","selectedMinMaxIndex","minCol","maxCol","currentRow","currentCell","currentCellIndex","colSpanVal","isIE","rowHeadEle","children","nextFocusCell","sContainer","startChildLength","startOffset","focusNode","setCursorPoint","rowSpanVal","getMergedRow","element","index","prepend","insertAdjacentElement","focusTrEle","cells","mergedRow","selectedTable","headerExit","forEach","el","cellCount","childElementCount","colSpanCount","header","createTHead","th","deleteTHead","tableCell","verticalAlign","mergeCellContent","minMaxIndexes","getSelectedMinMaxIndexes","firstCell","rowSelectedCells","totalWidth","parseFloat","updateRowSpanStyle","updateColSpanStyle","colValue","colMin","attrValue","count","eleArray","updateCellAttribute","ele","rowValue","rowMin","attr","firstIndex","spanCount","innerHtml","correspondingCells","minRow","maxRow","currentRowCol","targetRowCol","activeCell","newCell","activeCellIndex","activeCellRowSpan","avgCount","ceil","avgRowIndex","firstChild","newTrEle","avgWidth","isNaN","correspondingColumns","activeCellcolSpan","elementArray","_this","colspan","colEle","ele_1","colspan_1","rowSpan","columnIndex","nextIndex","nextCol","highlightCells","k","startCell","endCell","minRowIndex","maxRowIndex","minColIndex","maxColIndex","minMaxValues","MinMax","selectNode","target","activeCellTag","targetCellTag","Clear","activeRowIndex","activeColumnIndex","targetRowIndex","targetColumnIndex","activeCellList","remove","activeIndexes","targetIndexes","endContainer"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/table.js"],"sourcesContent":["import { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar TableCommand = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element\n     * @hidden\n\n     */\n    function TableCommand(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    TableCommand.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n        this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n        this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n        this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n        this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n        this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n        this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n        this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n        this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n    };\n    TableCommand.prototype.createTable = function (e) {\n        var table = createElement('table', { className: 'e-rte-table' });\n        var tblBody = createElement('tbody');\n        if (!isNOU(e.item.width.width)) {\n            table.style.width = this.calculateStyleValue(e.item.width.width);\n        }\n        if (!isNOU(e.item.width.minWidth)) {\n            table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n        }\n        if (!isNOU(e.item.width.maxWidth)) {\n            table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n        }\n        var tdWid = parseInt(e.item.width.width, 10) > 100 ?\n            100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n        for (var i = 0; i < e.item.rows; i++) {\n            var row = createElement('tr');\n            for (var j = 0; j < e.item.columns; j++) {\n                var cell = createElement('td');\n                cell.appendChild(createElement('br'));\n                cell.style.width = tdWid + '%';\n                row.appendChild(cell);\n            }\n            tblBody.appendChild(row);\n        }\n        table.appendChild(tblBody);\n        e.item.selection.restore();\n        InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n        e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n        if (table.nextElementSibling === null) {\n            var insertElem = void 0;\n            if (e.enterAction === 'DIV') {\n                insertElem = createElement('div');\n                insertElem.appendChild(createElement('br'));\n            }\n            else if (e.enterAction === 'BR') {\n                insertElem = createElement('br');\n            }\n            else {\n                insertElem = createElement('p');\n                insertElem.appendChild(createElement('br'));\n            }\n            this.insertAfter(insertElem, table);\n        }\n        table.querySelector('td').classList.add('e-cell-select');\n        if (e.callBack) {\n            e.callBack({\n                requestType: 'Table',\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: [table]\n            });\n        }\n        return table;\n    };\n    TableCommand.prototype.calculateStyleValue = function (value) {\n        var styleValue;\n        if (typeof (value) === 'string') {\n            if (value.indexOf('px') >= 0 || value.indexOf('%') >= 0 || value.indexOf('auto') >= 0) {\n                styleValue = value;\n            }\n            else {\n                styleValue = value + 'px';\n            }\n        }\n        else {\n            styleValue = value + 'px';\n        }\n        return styleValue;\n    };\n    TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var a = 0;\n        var minI = e.length;\n        var maxI = 0;\n        var minJ = e[0].length;\n        var maxJ = 0;\n        //eslint-disable-next-line\n        for (var i = 0; a < selectedCells.length; a++) {\n            var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n            var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e);\n            //eslint-disable-next-line\n            minI = Math.min(selectedCellIndex[0], minI),\n                maxI = Math.max(minMaxIndex[0], maxI),\n                minJ = Math.min(selectedCellIndex[1], minJ),\n                maxJ = Math.max(minMaxIndex[1], maxJ);\n        }\n        return {\n            startRow: minI,\n            endRow: maxI,\n            startColumn: minJ,\n            endColumn: maxJ\n        };\n    };\n    TableCommand.prototype.insertRow = function (e) {\n        var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n            return;\n        }\n        this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n            var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n            var cloneRow = lastRow.cloneNode(true);\n            cloneRow.removeAttribute('rowspan');\n            this.insertAfter(cloneRow, lastRow);\n        }\n        else {\n            var allCells = this.getCorrespondingColumns();\n            var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n            var newRow = createElement('tr');\n            var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n            for (var i = 0; i < allCells[minVal].length; i++) {\n                // eslint-disable-next-line max-len\n                if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] ||\n                    !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n                    if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n                        allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n                    }\n                }\n                else {\n                    var tdElement = createElement('td');\n                    tdElement.appendChild(createElement('br'));\n                    newRow.appendChild(tdElement);\n                    tdElement.setAttribute('style', allCells[(isHeaderSelect && isBelow) ? allCells[(minVal + 1)] ? (minVal + 1) : minVal : minVal][i].getAttribute('style'));\n                }\n            }\n            // eslint-disable-next-line\n            var selectedRow = void 0;\n            if (isHeaderSelect && isBelow) {\n                selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n            }\n            else {\n                selectedRow = this.curTable.rows[minVal];\n            }\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertRowBefore') ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                (isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                    this.insertAfter(newRow, selectedRow));\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.insertColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var curRow = closest(selectedCell, 'tr');\n        var curCell;\n        var allRows = closest((curRow), 'table').rows;\n        var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n        var previousWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length);\n        var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n        var currentTabElm = closest(curRow, 'table');\n        var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].dataset.oldWidth = (thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100) + '%';\n        }\n        for (var i = 0; i < allRows.length; i++) {\n            curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n            var colTemplate = curCell.cloneNode(true);\n            colTemplate.innerHTML = '';\n            colTemplate.appendChild(createElement('br'));\n            colTemplate.removeAttribute('class');\n            colTemplate.removeAttribute('colspan');\n            colTemplate.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertColumnLeft') ? curCell.parentElement.insertBefore(colTemplate, curCell) :\n                this.insertAfter(colTemplate, curCell);\n            colTemplate.style.width = currentWidth.toFixed(4) + '%';\n            delete colTemplate.dataset.oldWidth;\n        }\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n            delete thTdElm[i].dataset.oldWidth;\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n        var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n        this.curTable = closest(selectedCell, 'table');\n        var curRow = closest(selectedCell, 'tr');\n        if (curRow.querySelectorAll('th,td').length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            var deleteIndex = void 0;\n            var allCells = this.getCorrespondingColumns();\n            //eslint-disable-next-line\n            var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minCol = selectedMinMaxIndex.startColumn;\n            var maxCol = selectedMinMaxIndex.endColumn;\n            for (var i = 0; i < allCells.length; i++) {\n                var currentRow = allCells[i];\n                for (var j = 0; j < currentRow.length; j++) {\n                    var currentCell = currentRow[j];\n                    //eslint-disable-next-line\n                    var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n                    var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n                    if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n                        if (colSpanVal > 1) {\n                            currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n                        }\n                        else {\n                            detach(currentCell);\n                            deleteIndex = j;\n                            if (Browser.isIE) {\n                                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                            }\n                        }\n                    }\n                }\n            }\n            if (deleteIndex > -1) {\n                var rowHeadEle = tBodyHeadEle.children[rowIndex];\n                var nextFocusCell = rowHeadEle &&\n                    rowHeadEle.children[(deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1)];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n            if (sContainer.nodeName !== 'TD') {\n                var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n                var focusNode = sContainer.children[startChildLength];\n                if (focusNode) {\n                    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n                }\n            }\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteRow = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n        this.curTable = closest(selectedCell, 'table');\n        var currentRow;\n        var allCells = this.getCorrespondingColumns();\n        var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n        var maxI;\n        var j;\n        if (this.curTable.rows.length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n                currentRow = this.curTable.rows[maxI];\n                for (j = 0; j < allCells[maxI].length; j++) {\n                    if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n                        if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n                            var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1;\n                            /* eslint-disable */\n                            if (1 === rowSpanVal) {\n                                allCells[maxI][j].removeAttribute('rowspan');\n                                var cell = this.getMergedRow(this.getCorrespondingColumns())[j];\n                                if (cell) {\n                                    var cloneNode = cell.cloneNode(true);\n                                    cloneNode.innerHTML = '<br>';\n                                    if (cell.parentElement) {\n                                        cell.parentElement.insertBefore(cloneNode, cell);\n                                    }\n                                }\n                            }\n                            else {\n                                allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n                            }\n                            /* eslint-enable */\n                        }\n                    }\n                    // eslint-disable-next-line max-len\n                    if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI ||\n                        allCells[maxI][j] !== allCells[maxI - 1][j])) {\n                        var element = allCells[maxI][j];\n                        var index = void 0;\n                        // eslint-disable-next-line max-len\n                        for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n                            if (index === 0) {\n                                this.curTable.rows[maxI + 1].prepend(element);\n                            }\n                            else {\n                                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n                            }\n                        }\n                    }\n                }\n                var deleteIndex = currentRow.rowIndex;\n                this.curTable.deleteRow(deleteIndex);\n                var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex]\n                    : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n                var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n                else {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                    this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.getMergedRow = function (cells) {\n        var mergedRow;\n        for (var i = 0; i < cells.length; i++) {\n            if (cells[i].length !== this.curTable.rows[0].childNodes.length) {\n                mergedRow = cells[i];\n            }\n        }\n        return mergedRow;\n    };\n    TableCommand.prototype.removeTable = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var selectedTable = closest(selectedCell.parentElement, 'table');\n        if (selectedTable) {\n            e.item.selection.restore();\n            detach(selectedTable);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableHeader = function (e) {\n        var headerExit = false;\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var table = closest(selectedCell.parentElement, 'table');\n        [].slice.call(table.childNodes).forEach(function (el) {\n            if (el.nodeName === 'THEAD') {\n                headerExit = true;\n            }\n        });\n        if (table && !headerExit) {\n            var cellCount = table.querySelector('tr').childElementCount;\n            var colSpanCount = 0;\n            for (var i = 0; i < cellCount; i++) {\n                colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n            }\n            var header = table.createTHead();\n            var row = header.insertRow(0);\n            for (var j = 0; j < colSpanCount; j++) {\n                var th = createElement('th');\n                th.appendChild(createElement('br'));\n                row.appendChild(th);\n            }\n        }\n        else {\n            table.deleteTHead();\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableVerticalAlign = function (e) {\n        var value = '';\n        switch (e.item.subCommand) {\n            case 'AlignTop':\n                value = 'top';\n                break;\n            case 'AlignMiddle':\n                value = 'middle';\n                break;\n            case 'AlignBottom':\n                value = 'bottom';\n                break;\n        }\n        e.item.tableCell.style.verticalAlign = value;\n        if (value && value !== '' && e.item.tableCell.getAttribute('valign')) {\n            e.item.tableCell.removeAttribute('valign');\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.cellMerge = function (e) {\n        if (isNOU(this.curTable)) {\n            this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        }\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (selectedCells.length < 2) {\n            return;\n        }\n        this.mergeCellContent();\n        var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n        var firstCell = selectedCells[0];\n        var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n        if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n            firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n        }\n        if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n            firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n        }\n        var totalWidth = 0;\n        for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n            totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n        }\n        firstCell.style.width = totalWidth + '%';\n        for (var i = 1; i <= selectedCells.length - 1; i++) {\n            detach(selectedCells[i]);\n        }\n        for (var i = 0; i < this.curTable.rows.length; i++) {\n            if (this.curTable.rows[i].innerHTML === '') {\n                detach(this.curTable.rows[i]);\n            }\n        }\n        this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n        this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (this.parent.nodeSelection && firstCell) {\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, \n            // eslint-disable-next-line\n            firstCell, 0);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n        var colValue;\n        var colIndex;\n        var colMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = elements;\n        //eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n            for (colIndex === min; colIndex <= max; colIndex++) {\n                // eslint-disable-next-line\n                if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < (index =\n                    Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1)) &&\n                    eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n                    for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n                        if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n                            /* eslint-disable */\n                            for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                                if (1 < (attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1) &&\n                                    eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                                    colMin += count = Math.min(count, attrValue - 1);\n                                }\n                                else if (!(count = Math.max(0, count - 1))) {\n                                    break;\n                                }\n                                /* eslint-enable */\n                            }\n                        }\n                        if (!count) {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n            }\n        }\n    };\n    TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n        var rowValue;\n        var colIndex;\n        var rowMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = ele;\n        // eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray.length - 1))) {\n            for (rowValue = min; rowValue <= max; rowValue++) {\n                // eslint-disable-next-line\n                if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0])\n                    // eslint-disable-next-line no-cond-assign\n                    && eleArray[rowValue][0] && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) ||\n                    1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n                    for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n                        if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n                            for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                                // eslint-disable-next-line\n                                if (1 < (attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1) && eleArray[rowMin][colIndex] === eleArray[rowMin + 1][colIndex]) {\n                                    rowMin += count = Math.min(count, attrValue - 1);\n                                }\n                                // eslint-disable-next-line\n                                else if (!(count = Math.max(0, count - 1))) {\n                                    break;\n                                }\n                            }\n                            if (!count) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n            }\n        }\n    };\n    TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n        var rowIndex;\n        var colIndex;\n        var spanCount;\n        for (rowIndex = min; rowIndex <= max; rowIndex++) {\n            for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n                // eslint-disable-next-line\n                min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] ||\n                    firstIndex < colIndex && elements[rowIndex][colIndex] === elements[rowIndex][colIndex - 1] ||\n                    1 < (spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1) &&\n                        // eslint-disable-next-line max-len\n                        (1 < spanCount - index ? elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString()) :\n                            elements[rowIndex][colIndex].removeAttribute(attr));\n            }\n        }\n    };\n    TableCommand.prototype.mergeCellContent = function () {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var innerHtml = selectedCells[0].innerHTML === '<br>' ? '' : selectedCells[0].innerHTML;\n        for (var i = 1; i < selectedCells.length; i++) {\n            if ('<br>' !== selectedCells[i].innerHTML) {\n                innerHtml = innerHtml ? innerHtml + '<br>' + selectedCells[i].innerHTML : innerHtml + selectedCells[i].innerHTML;\n            }\n        }\n        selectedCells[0].innerHTML = innerHtml;\n    };\n    TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (0 < selectedCells.length) {\n            var minRow = correspondingCells.length;\n            var maxRow = 0;\n            var minCol = correspondingCells[0].length;\n            var maxCol = 0;\n            for (var i = 0; i < selectedCells.length; i++) {\n                var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n                var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n                minRow = Math.min(currentRowCol[0], minRow);\n                maxRow = Math.max(targetRowCol[0], maxRow);\n                minCol = Math.min(currentRowCol[1], minCol);\n                maxCol = Math.max(targetRowCol[1], maxCol);\n            }\n            return {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            };\n        }\n        return null;\n    };\n    TableCommand.prototype.HorizontalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n        if (activeCellRowSpan > 1) {\n            var avgCount = Math.ceil(activeCellRowSpan / 2);\n            // eslint-disable-next-line\n            1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) :\n                this.activeCell.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            1 < (activeCellRowSpan - avgCount) ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n            var avgRowIndex = void 0;\n            var colIndex = void 0;\n            for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2),\n                colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1]\n                    : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] ===\n                // eslint-disable-next-line max-len\n                correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex]\n                === correspondingCells[avgRowIndex - 1][colIndex]);) {\n                colIndex--;\n            }\n            if (colIndex === -1) {\n                // eslint-disable-next-line\n                this.curTable.rows[avgRowIndex].firstChild ? this.curTable.rows[avgRowIndex].prepend(newCell) : this.curTable.appendChild(newCell);\n            }\n            else {\n                correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n            }\n        }\n        else {\n            var newTrEle = createElement('tr');\n            newTrEle.appendChild(newCell);\n            var selectedRow = correspondingCells[activeCellIndex[0]];\n            for (var j = 0; j <= selectedRow.length - 1; j++) {\n                if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n                    selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ?\n                        parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n                }\n            }\n            this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.VerticalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var allRows = this.curTable.rows;\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n        if (this.activeCell.tagName === 'TH' && isNaN(avgWidth)) {\n            var cellCount = this.curTable.querySelector('tr').childElementCount;\n            var colSpanCount = 0;\n            for (var i = 0; i < cellCount; i++) {\n                colSpanCount = colSpanCount + (parseInt(this.curTable.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n            }\n            avgWidth = parseFloat((((this.activeCell.offsetWidth / 2) / this.curTable.offsetWidth) * 100).toFixed(1));\n        }\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingColumns = this.getCorrespondingColumns();\n        var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10);\n        if (activeCellcolSpan > 1) {\n            // eslint-disable-next-line\n            1 < Math.ceil(activeCellcolSpan / 2) ? this.activeCell.setAttribute('colspan', (activeCellcolSpan / 2).toString())\n                : this.activeCell.removeAttribute('colspan');\n            // eslint-disable-next-line\n            1 < (activeCellcolSpan - activeCellcolSpan / 2) ? newCell.setAttribute('colspan', \n            // eslint-disable-next-line\n            (activeCellcolSpan - activeCellcolSpan / 2).toString()) : newCell.removeAttribute('colspan');\n        }\n        else {\n            for (var i = 0; i <= allRows.length - 1; i++) {\n                if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n                    var currentCell = correspondingColumns[i][activeCellIndex[1]];\n                    if (currentCell !== this.activeCell) {\n                        currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ?\n                            parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n                    }\n                }\n            }\n        }\n        this.activeCell.style.width = avgWidth + '%';\n        newCell.style.width = avgWidth + '%';\n        this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.getCorrespondingColumns = function () {\n        var elementArray = [];\n        // eslint-disable-next-line\n        var _this = this;\n        var colspan = 0;\n        var allRows = _this.curTable.rows;\n        for (var i = 0; i <= allRows.length - 1; i++) {\n            var ele = allRows[i];\n            var index = 0;\n            for (var j = 0; j <= ele.children.length - 1; j++) {\n                /* eslint-disable */\n                var colEle = ele.children[j];\n                for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n                    for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n                        elementArray[rowIndex] || (elementArray[rowIndex] = []);\n                        elementArray[rowIndex][colIndex] ? index++ : elementArray[rowIndex][colIndex] = colEle;\n                    }\n                }\n                index += colspan;\n            }\n            /* eslint-enable */\n        }\n        return elementArray;\n    };\n    // eslint-disable-next-line\n    TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n        var nextIndex;\n        var nextCol;\n        for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n            if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n                nextIndex--;\n                break;\n            }\n            nextIndex++;\n        }\n        for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n            if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n                nextCol--;\n                break;\n            }\n            nextCol++;\n        }\n        return nextCol === cells[rowIndex].length && nextCol--,\n            [\n                nextIndex,\n                nextCol\n            ];\n    };\n    TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n        //let value: RowCol = new RowCol();\n        for (var i = 0; i < allCells.length; i++) {\n            for (var j = 0; j < allCells[i].length; j++) {\n                if (allCells[i][j] === cell) {\n                    return [i, j];\n                }\n            }\n        }\n        return [];\n    };\n    TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n        var j;\n        var k;\n        var startCell;\n        var endCell;\n        var minRowIndex = minRow;\n        var maxRowIndex = maxRow;\n        var minColIndex = minCol;\n        var maxColIndex = maxCol;\n        var minMaxValues = new MinMax();\n        for (j = minRowIndex; j <= maxRowIndex; j++) {\n            /* eslint-disable */\n            if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) &&\n                (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray))[0], startCell[1], eleArray))) {\n                minRowIndex = Math.min(startCell[0], minRowIndex);\n                maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                minColIndex = Math.min(startCell[1], minColIndex);\n                maxColIndex = Math.max(endCell[1], maxColIndex);\n            }\n            else if ((1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1)) &&\n                (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray))[0], startCell[1], eleArray))) {\n                minRowIndex = Math.min(startCell[0], minRowIndex);\n                maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                minColIndex = Math.min(startCell[1], minColIndex);\n                maxColIndex = Math.max(endCell[1], maxColIndex);\n            }\n            for (k = minColIndex; k <= maxColIndex; k++) {\n                if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) &&\n                    (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n                else if ((1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1)) &&\n                    (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n            }\n            minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n        }\n        return minMaxValues;\n        /* eslint-enable */\n    };\n    TableCommand.prototype.tableMove = function (e) {\n        this.activeCell = e.selectNode[0];\n        var target = e.event.target;\n        var activeCellTag = this.activeCell.tagName;\n        var targetCellTag = target.tagName;\n        this.curTable = closest(target, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            this.parent.nodeSelection.Clear(this.parent.currentDocument);\n        }\n        if ((target.tagName !== 'TD' && target.tagName !== 'TH') && activeCellTag !== targetCellTag) {\n            return;\n        }\n        var activeRowIndex = Array.prototype.slice.call((this.activeCell).parentElement.parentElement.children)\n            .indexOf((this.activeCell).parentElement);\n        var activeColumnIndex = Array.prototype.slice.call((this.activeCell).parentElement.children).indexOf(this.activeCell);\n        var targetRowIndex = Array.prototype.slice.call(target.parentElement.parentElement.children)\n            .indexOf(target.parentElement);\n        var targetColumnIndex = Array.prototype.slice.call(target.parentElement.children).indexOf(target);\n        var activeCellList = this.curTable.querySelectorAll('.e-cell-select');\n        for (var i = activeCellList.length - 1; i >= 0; i--) {\n            if (this.activeCell !== activeCellList[i]) {\n                activeCellList[i].classList.remove('e-cell-select');\n            }\n        }\n        if (activeRowIndex === targetRowIndex && activeColumnIndex === targetColumnIndex) {\n            return;\n        }\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n        var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n        var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0], \n        /* eslint-disable */\n        targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n        for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n            for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n                correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n            }\n        }\n        if (this.parent.nodeSelection.range) {\n            this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, this.parent.nodeSelection.range.endContainer, 0, 0);\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, 0);\n        }\n    };\n    ;\n    return TableCommand;\n}());\nexport { TableCommand };\nvar MinMax = /** @class */ (function () {\n    function MinMax() {\n    }\n    return MinMax;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}