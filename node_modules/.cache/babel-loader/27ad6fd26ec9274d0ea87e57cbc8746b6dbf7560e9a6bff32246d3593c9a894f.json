{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { randomId, Point } from '@syncfusion/ej2-drawings';\nimport { rotatePoint } from '@syncfusion/ej2-drawings';\nimport { Rect } from '@syncfusion/ej2-drawings';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '@syncfusion/ej2-drawings';\nimport { TextElement } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { findActiveElement } from './action';\nimport { cloneObject, isLineShapes } from './drawing-util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { updatePerimeterLabel } from './connector-util';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n *\n * @hidden\n */\nvar ToolBase = /** @class */function () {\n  /**\n   * Initializes the tool\n   *\n   * @param {PdfViewer} pdfViewer - Specified the pdfviewer component.\n   * @param {PdfViewerBase} pdfViewerBase - Specified the pdfViewer base component.\n   * @param {boolean} protectChange - Set the default value as false.\n   */\n  function ToolBase(pdfViewer, pdfViewerBase, protectChange) {\n    if (protectChange === void 0) {\n      protectChange = false;\n    }\n    /**\n     * Command that is corresponding to the current action\n     */\n    this.commandHandler = null;\n    /**\n     * Sets/Gets whether the interaction is being done\n     */\n    this.inAction = false;\n    /**\n     * Sets/Gets the protect change\n     */\n    this.pdfViewerBase = null;\n    /**\n     * Sets/Gets the current element that is under mouse\n     */\n    /**   @private  */\n    this.currentElement = null;\n    /**   @private  */\n    this.blocked = false;\n    this.isTooltipVisible = false;\n    /** @private */\n    this.childTable = {};\n    /** @private */\n    this.helper = undefined;\n    /**\n     * Sets/Gets the previous object when mouse down\n     */\n    this.undoElement = {\n      annotations: []\n    };\n    this.undoParentElement = {\n      annotations: []\n    };\n    this.commandHandler = pdfViewer;\n    this.pdfViewerBase = pdfViewerBase;\n  }\n  /**\n   * @param {IElement} currentElement - Specified the current element.\n   * @returns {void}\n   */\n  ToolBase.prototype.startAction = function (currentElement) {\n    this.currentElement = currentElement;\n    this.inAction = true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {void}\n   */\n  ToolBase.prototype.mouseDown = function (args) {\n    this.currentElement = args.source;\n    this.startPosition = this.currentPosition = this.prevPosition = args.position;\n    this.isTooltipVisible = true;\n    this.startAction(args.source);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  ToolBase.prototype.mouseMove = function (args) {\n    this.currentPosition = args.position;\n    //this.currentElement = currentElement;\n    this.prevPageId = this.pdfViewerBase.activeElements.activePageID;\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {void}\n   */\n  ToolBase.prototype.mouseUp = function (args) {\n    this.currentPosition = args.position;\n    // this.currentElement = currentElement;\n    this.isTooltipVisible = false;\n    //At the end\n    this.endAction();\n    this.helper = null;\n  };\n  ToolBase.prototype.endAction = function () {\n    //remove helper\n    if (this.commandHandler) {\n      this.commandHandler.tool = '';\n      if (this.helper) {\n        this.commandHandler.remove(this.helper);\n      }\n    }\n    this.commandHandler = null;\n    this.currentElement = null;\n    this.currentPosition = null;\n    this.inAction = false;\n    this.blocked = false;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse wheel event arguments.\n   * @returns {void}\n   */\n  ToolBase.prototype.mouseWheel = function (args) {\n    this.currentPosition = args.position;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse leave event arguments.\n   * @returns {void}\n   */\n  ToolBase.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  // eslint-disable-next-line\n  ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle, isMouseUp) {\n    var zoom = this.commandHandler.viewerBase.getZoomFactor();\n    var difx = this.currentPosition.x / zoom - this.startPosition.x / zoom;\n    var dify = this.currentPosition.y / zoom - this.startPosition.y / zoom;\n    var rotateAngle = shape instanceof TextElement ? angle : shape.rotateAngle;\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, -rotateAngle, 0, 0);\n    var deltaWidth = 0;\n    var deltaHeight = 0;\n    var diff;\n    var width = shape instanceof TextElement ? shape.actualSize.width : shape.wrapper.bounds.width;\n    var height = shape instanceof TextElement ? shape.actualSize.height : shape.wrapper.bounds.height;\n    // eslint-disable-next-line\n    var obj = shape;\n    if (!shape.formFieldAnnotationType) {\n      if (!shape.annotName && !shape.shapeAnnotationType) {\n        if (shape) {\n          // eslint-disable-next-line\n          obj = shape.annotations[0];\n        }\n      }\n    }\n    // eslint-disable-next-line\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n    var isAnnotationSet = false;\n    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n      isAnnotationSet = true;\n    }\n    if (isAnnotationSet && isMouseUp) {\n      // eslint-disable-next-line\n      var size = this.getPositions(corner, difx, dify);\n      var newWidth = width + size.x;\n      var newHeight = height + size.y;\n      // eslint-disable-next-line max-len\n      if (newHeight > annotationMinHeight && newHeight < annotationMaxHeight && newWidth > annotationMinWidth && newWidth < annotationMaxWidth) {\n        // eslint-disable-next-line\n        difx = difx;\n        // eslint-disable-next-line\n        dify = dify;\n      } else {\n        if (newHeight < annotationMinHeight || newHeight > annotationMaxHeight) {\n          if (newHeight < annotationMinHeight) {\n            dify = annotationMinHeight - height;\n          } else {\n            dify = annotationMaxHeight - height;\n          }\n        }\n        if (newWidth < annotationMinWidth || newWidth > annotationMaxWidth) {\n          if (newWidth < annotationMinWidth) {\n            difx = annotationMinWidth - width;\n          } else {\n            difx = annotationMaxWidth - width;\n          }\n        }\n      }\n    }\n    switch (corner) {\n      case 'ResizeWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        deltaHeight = 1;\n        // eslint-disable-next-line\n        difx = difx;\n        dify = 0;\n        if (isAnnotationSet) {\n          if (initialBounds.width - difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n        }\n        deltaWidth = (initialBounds.width - difx) / width;\n        break;\n      case 'ResizeEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        dify = 0;\n        if (isAnnotationSet) {\n          if (initialBounds.width + difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n        }\n        deltaWidth = (initialBounds.width + difx) / width;\n        deltaHeight = 1;\n        break;\n      case 'ResizeNorth':\n        deltaWidth = 1;\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        if (isAnnotationSet) {\n          if (initialBounds.height - dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n      case 'ResizeSouth':\n        deltaWidth = 1;\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        if (isAnnotationSet) {\n          if (initialBounds.height + dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n        deltaHeight = (initialBounds.height + dify) / height;\n        break;\n      case 'ResizeNorthEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        if (isAnnotationSet) {\n          if (initialBounds.width + difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n          if (initialBounds.height - dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n        deltaWidth = (initialBounds.width + difx) / width;\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n      case 'ResizeNorthWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        if (isAnnotationSet) {\n          if (initialBounds.width - difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n          if (initialBounds.height - dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n        deltaWidth = (initialBounds.width - difx) / width;\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n      case 'ResizeSouthEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        if (isAnnotationSet) {\n          if (initialBounds.width + difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n          if (initialBounds.height + dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n        deltaHeight = (initialBounds.height + dify) / height;\n        deltaWidth = (initialBounds.width + difx) / width;\n        break;\n      case 'ResizeSouthWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        if (isAnnotationSet) {\n          if (initialBounds.width - difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n          if (initialBounds.height + dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n        deltaWidth = (initialBounds.width - difx) / width;\n        deltaHeight = (initialBounds.height + dify) / height;\n        break;\n    }\n    return {\n      width: deltaWidth,\n      height: deltaHeight\n    };\n  };\n  ToolBase.prototype.getPivot = function (corner) {\n    switch (corner) {\n      case 'ResizeWest':\n        return {\n          x: 1,\n          y: 0.5\n        };\n      case 'ResizeEast':\n        return {\n          x: 0,\n          y: 0.5\n        };\n      case 'ResizeNorth':\n        return {\n          x: 0.5,\n          y: 1\n        };\n      case 'ResizeSouth':\n        return {\n          x: 0.5,\n          y: 0\n        };\n      case 'ResizeNorthEast':\n        return {\n          x: 0,\n          y: 1\n        };\n      case 'ResizeNorthWest':\n        return {\n          x: 1,\n          y: 1\n        };\n      case 'ResizeSouthEast':\n        return {\n          x: 0,\n          y: 0\n        };\n      case 'ResizeSouthWest':\n        return {\n          x: 1,\n          y: 0\n        };\n    }\n    return {\n      x: 0.5,\n      y: 0.5\n    };\n  };\n  ToolBase.prototype.getPositions = function (corner, x, y) {\n    switch (corner) {\n      case 'ResizeEast':\n        return {\n          x: x,\n          y: 0\n        };\n      case 'ResizeSouthEast':\n        return {\n          x: x,\n          y: y\n        };\n      case 'ResizeSouth':\n        return {\n          x: 0,\n          y: y\n        };\n      case 'ResizeNorth':\n        return {\n          x: 0,\n          y: -y\n        };\n      case 'ResizeNorthEast':\n        return {\n          x: x,\n          y: -y\n        };\n      case 'ResizeNorthWest':\n        return {\n          x: -x,\n          y: -y\n        };\n      case 'ResizeWest':\n        return {\n          x: -x,\n          y: 0\n        };\n      case 'ResizeSouthWest':\n        return {\n          x: -x,\n          y: y\n        };\n    }\n    return {\n      x: x,\n      y: y\n    };\n  };\n  return ToolBase;\n}();\nexport { ToolBase };\n/**\n * Helps to select the objects\n *\n * @hidden\n */\nvar SelectTool = /** @class */function (_super) {\n  __extends(SelectTool, _super);\n  function SelectTool(commandHandler, base) {\n    return _super.call(this, commandHandler, base, true) || this;\n    //     this.action = action;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse down event arguments.\n   * @returns {void}\n   */\n  SelectTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.mouseEventHelper(args);\n    _super.prototype.mouseDown.call(this, args);\n  };\n  SelectTool.prototype.mouseEventHelper = function (args) {\n    if (this.commandHandler && this.commandHandler.annotationModule) {\n      // eslint-disable-next-line\n      this.commandHandler.annotationModule.overlappedCollections = findActiveElement(args, this.pdfViewerBase, this.commandHandler, true);\n    }\n    // eslint-disable-next-line\n    var object = findActiveElement(args, this.pdfViewerBase, this.commandHandler);\n    // if (!isNullOrUndefined(object) && (object as any).shapeAnnotationType != 'Path'){\n    var isLock = false;\n    // eslint-disable-next-line\n    if (object && object.shapeAnnotationType === 'StickyNotes') {\n      // eslint-disable-next-line\n      if (object.annotationSettings && object.annotationSettings.isLock) {\n        if (this.commandHandler.annotationModule.checkAllowedInteractions('Select', object)) {\n          isLock = false;\n        } else {\n          isLock = true;\n        }\n      }\n    }\n    if (!isLock) {\n      // eslint-disable-next-line\n      var currentSelctor = void 0;\n      if (args.source && args.annotationSelectorSettings !== null) {\n        currentSelctor = args.source.annotationSelectorSettings;\n      } else {\n        currentSelctor = '';\n      }\n      if (this.commandHandler) {\n        var selectedObject = this.commandHandler.selectedItems;\n        if (selectedObject) {\n          // eslint-disable-next-line\n          var annotation = selectedObject.annotations[0];\n          // eslint-disable-next-line\n          var formField = selectedObject.formFields[0];\n          var currentAnnot = this.commandHandler.selectedItems.annotations[0];\n          var currentSource = args.source;\n          if (selectedObject.annotations.length && args.info && !args.info.ctrlKey\n          // eslint-disable-next-line\n          && this.commandHandler.annotationModule && this.commandHandler.annotationModule.freeTextAnnotationModule.isInuptBoxInFocus === false) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          } else if (args.info && args.info.ctrlKey && (currentSource && currentSource.shapeAnnotationType === 'FreeText' || currentAnnot && currentAnnot.shapeAnnotationType === 'FreeText')) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          } else if (isNullOrUndefined(object) && this.commandHandler.formDesignerModule && !(currentSource && currentSource.shapeAnnotationType === 'FreeText' || currentAnnot && (currentAnnot.shapeAnnotationType === 'FreeText' || currentAnnot.shapeAnnotationType === 'Image' || currentAnnot.shapeAnnotationType === 'StickyNotes'))) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          }\n          if (object) {\n            if ((isNullOrUndefined(formField) || formField && formField.id !== object.id) && !isNullOrUndefined(this.pdfViewerBase.isFreeTextSelected) && !this.pdfViewerBase.isFreeTextSelected) {\n              this.commandHandler.select([object.id], currentSelctor);\n              this.commandHandler.viewerBase.isAnnotationMouseDown = true;\n            }\n            this.pdfViewerBase.isFreeTextSelected = false;\n            this.commandHandler.viewerBase.isFormFieldMouseDown = true;\n          }\n          if (selectedObject.annotations.length === 0 && annotation && annotation.shapeAnnotationType !== 'HandWrittenSignature' && annotation.shapeAnnotationType !== 'SignatureText' && annotation.shapeAnnotationType !== 'SignatureImage' && annotation.shapeAnnotationType !== 'Path' && !annotation.formFieldAnnotationType) {\n            if (this.commandHandler.enableToolbar && Browser.isDevice && !this.commandHandler.enableDesktopMode) {\n              this.commandHandler.toolbarModule.showToolbar(true);\n            }\n            this.commandHandler.fireAnnotationUnSelect(annotation.annotName, annotation.pageIndex, annotation);\n          }\n          // eslint-disable-next-line max-len\n          if (selectedObject.formFields.length === 0 && this.commandHandler.formDesignerModule && formField && formField.formFieldAnnotationType) {\n            // eslint-disable-next-line\n            var field = {\n              name: formField.name,\n              id: formField.id,\n              value: formField.value,\n              fontFamily: formField.fontFamily,\n              fontSize: formField.fontSize,\n              fontStyle: formField.fontStyle,\n              // eslint-disable-next-line\n              color: formField.color,\n              backgroundColor: formField.backgroundColor,\n              alignment: formField.alignment,\n              isReadonly: formField.isReadOnly,\n              visibility: formField.visibility,\n              // eslint-disable-next-line\n              maxLength: formField.maxLength,\n              isRequired: formField.isRequired,\n              isPrint: formField.isPrint,\n              rotation: formField.rotation,\n              tooltip: formField.tooltip,\n              // eslint-disable-next-line\n              options: formField.options,\n              isChecked: formField.isChecked,\n              isSelected: formField.isSelected\n            };\n            this.commandHandler.fireFormFieldUnselectEvent('formFieldUnselect', field, formField.pageIndex);\n          } else if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id && this.commandHandler.formFields && event.type === 'mousedown') {\n            for (var i = 0; i < this.commandHandler.formFields.length; i++) {\n              var formField_1 = this.commandHandler.formFields[parseInt(i.toString(), 10)];\n              if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id === formField_1.id) {\n                // eslint-disable-next-line\n                var field = {\n                  value: formField_1.value,\n                  fontFamily: formField_1.fontFamily,\n                  fontSize: formField_1.fontSize,\n                  fontStyle: formField_1.fontStyle,\n                  // eslint-disable-next-line\n                  color: formField_1.color,\n                  backgroundColor: formField_1.backgroundColor,\n                  alignment: formField_1.alignment,\n                  isReadonly: formField_1.isReadonly,\n                  visibility: formField_1.visibility,\n                  // eslint-disable-next-line\n                  maxLength: formField_1.maxLength,\n                  isRequired: formField_1.isRequired,\n                  isPrint: formField_1.isPrint,\n                  rotation: formField_1.rotateAngle,\n                  tooltip: formField_1.tooltip,\n                  // eslint-disable-next-line\n                  options: formField_1.options,\n                  isChecked: formField_1.isChecked,\n                  isSelected: formField_1.isSelected\n                };\n                if (!object) {\n                  this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                  this.pdfViewerBase.currentTarget = null;\n                } else {\n                  if (this.pdfViewerBase.currentTarget.id != event.target.id && event.target.className != 'e-pv-text-layer') {\n                    this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                    this.pdfViewerBase.currentTarget = null;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // } else {\n    //     if (!isNullOrUndefined(this.commandHandler))\n    //         this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n    // }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse move event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  SelectTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    //draw selected region\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {void}\n   */\n  SelectTool.prototype.mouseUp = function (args) {\n    this.mouseEventHelper(args);\n    this.inAction = false;\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse leave event arguments.\n   * @returns {void}\n   */\n  SelectTool.prototype.mouseLeave = function (args) {\n    if (this.inAction) {\n      this.mouseUp(args);\n    }\n  };\n  return SelectTool;\n}(ToolBase);\nexport { SelectTool };\n/** @hidden */\nvar MoveTool = /** @class */function (_super) {\n  __extends(MoveTool, _super);\n  function MoveTool(commandHandler, base) {\n    var _this = _super.call(this, commandHandler, base) || this;\n    /**   @private  */\n    _this.currentTarget = null;\n    /**   @private  */\n    _this.prevNode = null;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse down event arguments.\n   * @returns {void}\n   */\n  MoveTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n    this.offset = {\n      x: args.source.wrapper.offsetX,\n      y: args.source.wrapper.offsetY\n    };\n    this.startPosition = args.position;\n    var nodeMouseDown = cloneObject(args.source);\n    this.redoElement = {\n      bounds: {\n        x: nodeMouseDown.wrapper.offsetX,\n        y: nodeMouseDown.wrapper.offsetY,\n        width: nodeMouseDown.wrapper.actualSize.width,\n        height: nodeMouseDown.wrapper.actualSize.height\n      }\n      // eslint-disable-next-line\n    };\n    if (isLineShapes(nodeMouseDown)) {\n      this.redoElement.vertexPoints = nodeMouseDown.vertexPoints;\n      this.redoElement.leaderHeight = nodeMouseDown.leaderHeight;\n    }\n    this.inAction = true;\n  };\n  /**\n   * @private\n   * @param {any} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  MoveTool.prototype.mouseUp = function (args) {\n    if (this.commandHandler && args.source) {\n      this.checkisAnnotationMove(args);\n      var isDragged = false;\n      var currentSelctor = args.source.annotationSelectorSettings;\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n      this.commandHandler.select([args.source.id], currentSelctor);\n      // eslint-disable-next-line max-len\n      if (this.pdfViewerBase.activeElements.activePageID == args.source.pageIndex) {\n        this.commandHandler.dragSelectedObjects(this.calculateMouseActionXDiff(args), this.calculateMouseActionYDiff(args), this.pdfViewerBase.activeElements.activePageID, currentSelctor, null);\n      }\n      if (args.source && (args.source.formFieldAnnotationType === 'Textbox' || args.source.formFieldAnnotationType === 'Checkbox' || args.source.formFieldAnnotationType === 'RadioButton' || args.source.formFieldAnnotationType === 'ListBox' || args.source.formFieldAnnotationType === 'SignatureField' || args.source.formFieldAnnotationType === 'InitialField' || args.source.formFieldAnnotationType === 'DropdownList' || args.source.formFieldAnnotationType === 'PasswordField')) {\n        this.commandHandler.formDesignerModule.updateHTMLElement(args.source);\n      }\n      this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n      this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n      this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n      // eslint-disable-next-line\n      var newShapeObject = {\n        bounds: {\n          x: args.source.wrapper.offsetX,\n          y: args.source.wrapper.offsetY,\n          width: args.source.wrapper.actualSize.width,\n          height: args.source.wrapper.actualSize.height\n        },\n        modifiedDate: args.source.modifiedDate\n      };\n      if (isLineShapes(args.source)) {\n        newShapeObject.vertexPoints = args.source.vertexPoints;\n        newShapeObject.leaderHeight = args.source.leaderHeight;\n      }\n      if (args.target && args.target.formFieldAnnotationType) {\n        var node = args.target;\n        var field = {\n          // eslint-disable-next-line\n          value: node.value,\n          fontFamily: node.fontFamily,\n          fontSize: node.fontSize,\n          fontStyle: node.fontStyle,\n          // eslint-disable-next-line\n          color: node.color,\n          backgroundColor: node.backgroundColor,\n          borderColor: node.borderColor,\n          // eslint-disable-next-line\n          thickness: node.thickness,\n          alignment: node.alignment,\n          isReadonly: node.isReadonly,\n          visibility: node.visibility,\n          // eslint-disable-next-line\n          maxLength: node.maxLength,\n          isRequired: node.isRequired,\n          isPrint: node.isPrint,\n          rotation: node.rotateAngle,\n          tooltip: node.tooltip,\n          options: node.options,\n          // eslint-disable-next-line\n          isChecked: node.isChecked,\n          isSelected: node.isSelected\n        };\n        // eslint-disable-next-line max-len\n        var currentPosition = {\n          X: args.source.wrapper.offsetX,\n          Y: args.source.wrapper.offsetY,\n          Width: args.source.wrapper.actualSize.width,\n          Height: args.source.wrapper.actualSize.height\n        };\n        // eslint-disable-next-line max-len\n        var previousPosition = {\n          X: this.offset.x,\n          Y: this.offset.y,\n          Width: args.source.wrapper.actualSize.width,\n          Height: args.source.wrapper.actualSize.height\n        };\n        this.commandHandler.fireFormFieldMoveEvent('formFieldMove', field, node.pageIndex, previousPosition, currentPosition);\n      }\n      // eslint-disable-next-line max-len\n      if (!isNullOrUndefined(this.redoElement) && (this.redoElement.bounds.height !== newShapeObject.bounds.height || this.redoElement.bounds.width !== newShapeObject.bounds.width || this.redoElement.bounds.x !== newShapeObject.bounds.x || this.redoElement.bounds.y !== newShapeObject.bounds.y)) {\n        isDragged = true;\n      }\n      if (this.commandHandler.annotation && isDragged) {\n        // eslint-disable-next-line\n        this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Drag', '', this.redoElement, newShapeObject);\n        this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Drag');\n        this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n      }\n    }\n    var shapeAnnotationType = this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].shapeAnnotationType : null;\n    if (shapeAnnotationType && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n      _super.prototype.mouseUp.call(this, args);\n    } else if (shapeAnnotationType === 'Image' || shapeAnnotationType === 'SignatureImage') {\n      this.inAction = false;\n    } else if (this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n      _super.prototype.mouseUp.call(this, args);\n    }\n  };\n  MoveTool.prototype.calculateMouseXDiff = function () {\n    if (this.currentPosition && this.startPosition) {\n      return this.currentPosition.x - this.startPosition.x;\n    } else {\n      return 0;\n    }\n  };\n  MoveTool.prototype.calculateMouseYDiff = function () {\n    if (this.currentPosition && this.startPosition) {\n      return this.currentPosition.y - this.startPosition.y;\n    } else {\n      return 0;\n    }\n  };\n  MoveTool.prototype.calculateMouseActionXDiff = function (args) {\n    var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n    // let y: number = this.calculateMouseYDiff() / this.commandHandler.magnification.zoomFactor;\n    if (this.offset) {\n      var requiredX = this.offset.x + x;\n      // let requiredY: number = this.offset.y + y;\n      return requiredX - args.source.wrapper.offsetX;\n      //let diffY: number = requiredY - args.source.wrapper.offsetY;\n    } else {\n      return 0;\n    }\n  };\n  MoveTool.prototype.calculateMouseActionYDiff = function (args) {\n    // let x: number = this.calculateMouseXDiff() / this.commandHandler.magnification.zoomFactor;\n    var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n    if (this.offset) {\n      // let requiredX: number = this.offset.x + x;\n      var requiredY = this.offset.y + y;\n      // let diffX: number = requiredX - args.source.wrapper.offsetX;\n      return requiredY - args.source.wrapper.offsetY;\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @param {boolean} isStamp - Specified the stamp annotation or not.\n   * @param {boolean} isSkip - Specified the annotation skip or not.\n   * @returns {boolean} - Returns the true or false.\n   */\n  MoveTool.prototype.mouseMove = function (args, isStamp, isSkip) {\n    _super.prototype.mouseMove.call(this, args);\n    if (this.inAction) {\n      this.currentPosition = args.position;\n      this.currentTarget = args.target;\n      var currentSelctor = args.source.annotationSelectorSettings;\n      var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n      var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n      var requiredX = this.offset.x + x;\n      var requiredY = this.offset.y + y;\n      var diffX = this.calculateMouseActionXDiff(args);\n      var diffY = this.calculateMouseActionYDiff(args);\n      var selectedItem = this.commandHandler.selectedItems.annotations[0];\n      var cobject = void 0;\n      if (!this.helper) {\n        // eslint-disable-next-line\n        cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n        if (cobject.wrapper) {\n          diffX = requiredX - cobject.wrapper.offsetX;\n          diffY = requiredY - cobject.wrapper.offsetY;\n          // eslint-disable-next-line max-len\n          cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n        }\n        cobject.wrapper = undefined;\n        cobject.id = 'diagram_helper';\n        if (cobject.shapeAnnotationType === 'Stamp') {\n          cobject.strokeColor = '';\n          cobject.borderDashArray = '';\n          cobject.fillColor = 'transparent';\n          cobject.stampFillColor = 'transparent';\n          cobject.data = '';\n        } else if (cobject.shapeAnnotationType === 'FreeText') {\n          cobject.strokeColor = 'blue';\n          cobject.fillColor = 'transparent';\n          cobject.thickness = 1;\n          cobject.opacity = 1;\n          cobject.dynamicText = '';\n        } else if (cobject.shapeAnnotationType === 'SignatureText') {\n          cobject.strokeColor = 'red';\n          cobject.borderDashArray = '5,5';\n          cobject.fillColor = 'transparent';\n          cobject.thickness = 2;\n          cobject.opacity = 1;\n          cobject.data = '';\n        } else {\n          cobject.strokeColor = 'red';\n          cobject.borderDashArray = '5,5';\n          cobject.fillColor = 'transparent';\n          cobject.thickness = 2;\n          cobject.opacity = 1;\n        }\n        if (cobject.enableShapeLabel === true) {\n          cobject.labelContent = '';\n        }\n        var shapeAnnotationType = cobject.shapeAnnotationType;\n        if (!isStamp && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n          this.helper = cobject = this.commandHandler.add(cobject);\n        } else {\n          cobject = this.helper = args.source;\n        }\n        if (this.commandHandler.selectedItems.annotations.length > 0) {\n          this.commandHandler.selectedItems.annotations = [cobject];\n        } else {\n          this.commandHandler.selectedItems.formFields = [cobject];\n        }\n      } else {\n        diffX = requiredX - this.helper.wrapper.offsetX;\n        diffY = requiredY - this.helper.wrapper.offsetY;\n      }\n      if (this.helper && this.helper.shapeAnnotationType === 'Stamp') {\n        isStamp = true;\n      }\n      // eslint-disable-next-line max-len\n      if (this.commandHandler.checkBoundaryConstraints(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, this.helper.wrapper.bounds, isStamp, isSkip)) {\n        var shapeAnnotationType = this.helper.shapeAnnotationType;\n        if (this.helper && (shapeAnnotationType === 'Image' || shapeAnnotationType === 'SignatureImage')) {\n          this.checkisAnnotationMove(args);\n          // eslint-disable-next-line max-len\n          var currentSelctor_1 = args.source.annotationSelectorSettings;\n          this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          this.commandHandler.select([args.source.id], currentSelctor_1);\n          // eslint-disable-next-line max-len\n          this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor_1, this.helper);\n          this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor_1);\n        } else {\n          this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor, this.helper);\n        }\n        this.prevNode = this.helper;\n        this.prevPosition = this.currentPosition;\n      } else {\n        this.currentPosition = this.prevPosition;\n      }\n      if (selectedItem && selectedItem.annotName) {\n        this.commandHandler.annotation.triggerAnnotationMove(selectedItem, true);\n      }\n    }\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  MoveTool.prototype.mouseLeave = function (args) {\n    var currentSelctor = args.source.annotationSelectorSettings;\n    var requiredX = this.offset.x + this.calculateMouseXDiff();\n    var requiredY = this.offset.y + this.calculateMouseYDiff();\n    var diffX = requiredX - args.source.wrapper.offsetX;\n    var diffY = requiredY - args.source.wrapper.offsetY;\n    this.commandHandler.dragSelectedObjects(diffX, diffY, this.prevPageId, currentSelctor, null);\n    this.commandHandler.renderSelector(this.prevPageId, currentSelctor);\n    _super.prototype.mouseLeave.call(this, args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  MoveTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n    this.currentTarget = null;\n    this.prevPosition = null;\n  };\n  MoveTool.prototype.checkisAnnotationMove = function (args) {\n    // eslint-disable-next-line max-len\n    if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n      if (this.commandHandler.selectedItems.annotations[0].annotName === args.source.annotName) {\n        this.commandHandler.viewerBase.isAnnotationMouseMove = true;\n      }\n    } else {\n      this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n    }\n    // eslint-disable-next-line max-len\n    if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n      if (this.commandHandler.selectedItems.formFields[0].name === args.source.name) {\n        this.commandHandler.viewerBase.isFormFieldMouseMove = true;\n      }\n    } else {\n      this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n    }\n  };\n  return MoveTool;\n}(ToolBase);\nexport { MoveTool };\n/** @hidden */\nvar StampTool = /** @class */function (_super) {\n  __extends(StampTool, _super);\n  function StampTool() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {any} - Returns the mouse up event.\n   */\n  // eslint-disable-next-line\n  StampTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns the true or false.\n   */\n  StampTool.prototype.mouseMove = function (args) {\n    // eslint-disable-next-line\n    var newObject;\n    if (!this.inAction) {\n      var pageIndex = this.pdfViewerBase.activeElements.activePageID;\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n      // eslint-disable-next-line max-len\n      var nodeElement = this.commandHandler.annotation.stampAnnotationModule.moveStampElement(args.position.x, args.position.y, pageIndex);\n      if (nodeElement.shapeAnnotationType === 'SignatureText') {\n        var textWidth = this.getTextWidth(nodeElement.data, nodeElement.fontSize, nodeElement.fontFamily);\n        var widthRatio = 1;\n        if (textWidth > nodeElement.bounds.width) widthRatio = nodeElement.bounds.width / textWidth;\n        nodeElement.fontSize = this.getFontSize(Math.floor(nodeElement.fontSize * widthRatio));\n        var defaultFontSize = 32; // default font size.\n        nodeElement.bounds.height = nodeElement.fontSize < defaultFontSize ? nodeElement.fontSize * 2 : nodeElement.bounds.height;\n        nodeElement.thickness = 0;\n      }\n      newObject = this.commandHandler.add(nodeElement);\n      args.source = this.commandHandler.annotations[this.commandHandler.annotations.length - 1];\n      args.sourceWrapper = args.source.wrapper;\n      this.inAction = true;\n      // eslint-disable-next-line\n      var currentSource = args.source;\n      if (currentSource && (currentSource.shapeAnnotationType === 'HandWrittenSignature' || currentSource.shapeAnnotationType === 'SignatureText' || currentSource.shapeAnnotationType === 'SignatureImage')) {\n        this['offset'] = {\n          x: args.source.wrapper.offsetX - args.source.wrapper.bounds.width / 2,\n          y: args.source.wrapper.offsetY - args.source.wrapper.bounds.height / 2\n        };\n      } else {\n        this['offset'] = {\n          x: args.source.wrapper.offsetX,\n          y: args.source.wrapper.offsetY\n        };\n      }\n      this.startPosition = args.position;\n      this.commandHandler.select([newObject.id]);\n    }\n    var currentSelctor = args.source.annotationSelectorSettings;\n    _super.prototype.mouseMove.call(this, args, true, true);\n    this.commandHandler.renderSelector(args.source.pageIndex, currentSelctor);\n    return this.inAction;\n  };\n  StampTool.prototype.getTextWidth = function (text, font, fontFamily) {\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var fontName;\n    if (font) {\n      fontName = font + 'px' + ' ' + fontFamily;\n    }\n    context.font = fontName || getComputedStyle(document.body).font;\n    return context.measureText(text).width;\n  };\n  /**\n   * @param {number} fontSize - Font size.\n   * @returns {number} - Returns the font size.\n   */\n  StampTool.prototype.getFontSize = function (fontSize) {\n    return fontSize % 2 === 0 ? fontSize : --fontSize;\n  };\n  return StampTool;\n}(MoveTool);\nexport { StampTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar InkDrawingTool = /** @class */function (_super) {\n  __extends(InkDrawingTool, _super);\n  function InkDrawingTool(commandHandler, base, sourceObject) {\n    var _this = _super.call(this, commandHandler, base) || this;\n    _this.sourceObject = sourceObject;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  InkDrawingTool.prototype.mouseDown = function (args) {\n    this.pdfViewerBase.disableTextSelectionMode();\n    _super.prototype.mouseDown.call(this, args);\n    this.inAction = true;\n    // eslint-disable-next-line\n    var node = {\n      currentPosition: this.currentPosition,\n      prevPosition: this.prevPosition\n    };\n    this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  InkDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    if (this.inAction) {\n      // eslint-disable-next-line\n      var node = {\n        currentPosition: this.currentPosition,\n        prevPosition: this.pdfViewerBase.prevPosition\n      };\n      this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n    }\n    return this.inAction;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true.\n   */\n  InkDrawingTool.prototype.mouseUp = function (args) {\n    this.commandHandler.annotation.inkAnnotationModule.storePathData();\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  InkDrawingTool.prototype.mouseLeave = function (args) {\n    //this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  InkDrawingTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n  return InkDrawingTool;\n}(ToolBase);\nexport { InkDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar ConnectTool = /** @class */function (_super) {\n  __extends(ConnectTool, _super);\n  function ConnectTool(commandHandler, base, endPoint) {\n    var _this = _super.call(this, commandHandler, base, true) || this;\n    _this.endPoint = endPoint;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  ConnectTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.undoElement = undefined;\n    _super.prototype.mouseDown.call(this, args);\n    var oldValue;\n    var connectors;\n    if (args.source && args.source.annotations) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      oldValue = {\n        x: this.prevPosition.x,\n        y: this.prevPosition.y\n      };\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      connectors = args.source.annotations[0];\n    }\n    this.initialPosition = args.position;\n    this.prevSource = this.commandHandler.selectedItems.annotations[0];\n    var nodeElement = cloneObject(args.source);\n    this.redoElement = {\n      bounds: {\n        x: nodeElement.wrapper.offsetX,\n        y: nodeElement.wrapper.offsetY,\n        width: nodeElement.wrapper.actualSize.width,\n        height: nodeElement.wrapper.actualSize.height\n      }\n      // eslint-disable-next-line\n    };\n    if (isLineShapes(nodeElement)) {\n      this.redoElement.vertexPoints = nodeElement.vertexPoints;\n      this.redoElement.leaderHeight = nodeElement.leaderHeight;\n      if (nodeElement.measureType === 'Distance' || nodeElement.measureType === 'Perimeter' || nodeElement.measureType === 'Area' || nodeElement.measureType === 'Volume') {\n        this.redoElement.notes = nodeElement.notes;\n      }\n    }\n    this.currentPosition = args.position;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  ConnectTool.prototype.mouseUp = function (args) {\n    if (this.commandHandler) {\n      var node = this.commandHandler.selectedItems.annotations[0];\n      var isResized = false;\n      if (node) {\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        // eslint-disable-next-line max-len\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n          annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n          annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n          annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n          annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        if (node.vertexPoints.length > 3) {\n          // eslint-disable-next-line\n          var sizeObject = this.commandHandler.viewerBase.checkAnnotationWidth(node.vertexPoints);\n          var width = sizeObject.width;\n          var height = sizeObject.height;\n          if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            // eslint-disable-next-line max-len\n            if (height > annotationMinHeight && height < annotationMaxHeight || width > annotationMinWidth && width < annotationMaxWidth) {\n              // eslint-disable-next-line max-len\n              this.commandHandler.nodePropertyChange(this.prevSource, {\n                vertexPoints: node.vertexPoints,\n                leaderHeight: node.leaderHeight\n              });\n            }\n          } else {\n            // eslint-disable-next-line max-len\n            this.commandHandler.nodePropertyChange(this.prevSource, {\n              vertexPoints: node.vertexPoints,\n              leaderHeight: node.leaderHeight\n            });\n          }\n        } else {\n          if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            if (node.shapeAnnotationType === 'Line' || node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'LineWidthArrowHead') {\n              var x = 0;\n              var y = 0;\n              if (node.vertexPoints[0].x > node.vertexPoints[1].x) {\n                x = node.vertexPoints[0].x - node.vertexPoints[1].x;\n              } else {\n                x = node.vertexPoints[1].x - node.vertexPoints[0].x;\n              }\n              if (node.vertexPoints[0].y > node.vertexPoints[1].y) {\n                y = node.vertexPoints[0].y - node.vertexPoints[1].y;\n              } else {\n                y = node.vertexPoints[1].y - node.vertexPoints[0].y;\n              }\n              var diff = x > y ? x : y;\n              if (diff < (annotationMaxHeight || annotationMaxWidth) && diff > (annotationMinHeight || annotationMinWidth)) {\n                // eslint-disable-next-line max-len\n                this.commandHandler.nodePropertyChange(this.prevSource, {\n                  vertexPoints: node.vertexPoints,\n                  leaderHeight: node.leaderHeight\n                });\n              }\n            } else {\n              // eslint-disable-next-line max-len\n              this.commandHandler.nodePropertyChange(this.prevSource, {\n                vertexPoints: node.vertexPoints,\n                leaderHeight: node.leaderHeight\n              });\n            }\n          } else {\n            // eslint-disable-next-line max-len\n            this.commandHandler.nodePropertyChange(this.prevSource, {\n              vertexPoints: node.vertexPoints,\n              leaderHeight: node.leaderHeight\n            });\n          }\n        }\n        var currentSelctor = args.source.annotationSelectorSettings;\n        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n        this.commandHandler.select([this.prevSource.id], currentSelctor);\n        this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n        // eslint-disable-next-line\n        var newShapeElementObject = {\n          bounds: {\n            x: args.source.wrapper.offsetX,\n            y: args.source.wrapper.offsetY,\n            width: args.source.wrapper.actualSize.width,\n            height: args.source.wrapper.actualSize.height\n          }\n        };\n        if (node.measureType === 'Distance' || node.measureType === 'Perimeter' || node.measureType === 'Area' || node.measureType === 'Volume') {\n          this.commandHandler.annotation.updateCalibrateValues(this.commandHandler.selectedItems.annotations[0]);\n          newShapeElementObject.notes = args.source.notes;\n        }\n        if (isLineShapes(args.source)) {\n          newShapeElementObject.vertexPoints = args.source.vertexPoints;\n          newShapeElementObject.leaderHeight = args.source.leaderHeight;\n        }\n        if (this.redoElement.bounds.height !== newShapeElementObject.bounds.height || this.redoElement.bounds.width !== newShapeElementObject.bounds.width || this.redoElement.bounds.x !== newShapeElementObject.bounds.x || this.redoElement.bounds.y !== newShapeElementObject.bounds.y) {\n          isResized = true;\n        }\n        if (isResized) {\n          // eslint-disable-next-line\n          this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newShapeElementObject);\n        }\n      }\n    }\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  ConnectTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    var connector;\n    this.currentPosition = args.position;\n    if (this.currentPosition && this.prevPosition) {\n      var diffX = this.currentPosition.x - this.prevPosition.x;\n      var diffY = this.currentPosition.y - this.prevPosition.y;\n      var newValue = void 0;\n      var oldValue = void 0;\n      if (args.source && args.source.annotations) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        newValue = {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        oldValue = {\n          x: this.prevPosition.x,\n          y: this.prevPosition.y\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        connector = args.source.annotations[0];\n      }\n      if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n        if (!this.helper) {\n          // eslint-disable-next-line\n          var cloneShapebject = cloneObject(this.commandHandler.selectedItems.annotations[0]);\n          cloneShapebject.id = 'diagram_helper';\n          cloneShapebject.strokeColor = 'red';\n          cloneShapebject.borderDashArray = '5,5';\n          cloneShapebject.fillColor = 'transparent';\n          cloneShapebject.thickness = 2;\n          cloneShapebject.opacity = 1;\n          if (cloneShapebject.enableShapeLabel === true) {\n            cloneShapebject.labelContent = '';\n          }\n          this.helper = cloneShapebject = this.commandHandler.add(cloneShapebject);\n          this.commandHandler.selectedItems.annotations = [cloneShapebject];\n        }\n        var currentSelctor = args.source.annotationSelectorSettings;\n        this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.helper, this.currentPosition, this.selectedSegment, args.target, null, currentSelctor);\n        this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n      }\n    }\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  ConnectTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  ConnectTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n    this.prevPosition = null;\n    this.endPoint = null;\n  };\n  return ConnectTool;\n}(ToolBase);\nexport { ConnectTool };\n/**\n * Scales the selected objects\n *\n * @hidden\n */\nvar ResizeTool = /** @class */function (_super) {\n  __extends(ResizeTool, _super);\n  function ResizeTool(commandHandler, base, corner) {\n    var _this = _super.call(this, commandHandler, base, true) || this;\n    /**   @private  */\n    _this.initialBounds = new Rect();\n    _this.corner = corner;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void} - Returns true or false.\n   */\n  ResizeTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n    this.initialBounds.x = args.source.wrapper.offsetX;\n    this.initialBounds.y = args.source.wrapper.offsetY;\n    this.initialBounds.height = args.source.wrapper.actualSize.height;\n    this.initialBounds.width = args.source.wrapper.actualSize.width;\n    this.initialPosition = args.position;\n    var node = cloneObject(args.source);\n    this.redoElement = {\n      bounds: {\n        x: node.wrapper.offsetX,\n        y: node.wrapper.offsetY,\n        width: node.wrapper.actualSize.width,\n        height: node.wrapper.actualSize.height\n      }\n      // eslint-disable-next-line\n    };\n    if (isLineShapes(node)) {\n      this.redoElement.vertexPoints = node.vertexPoints;\n      this.redoElement.leaderHeight = node.leaderHeight;\n    }\n    if (node.measureType === 'Radius') {\n      this.redoElement.notes = node.notes;\n    }\n    // eslint-disable-next-line max-len\n    this.prevSource = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0] : this.commandHandler.selectedItems.formFields[0];\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @param {boolean} isPreventHistory - Specified the prevent history value.\n   * @returns {boolean} - Returns true or false.\n   */\n  ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n    var object = args.source;\n    var oldObject = cloneObject(args.source);\n    var isResized = false;\n    if (this.commandHandler && this.prevSource) {\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n      this.commandHandler.viewerBase.isAnnotationSelect = true;\n      this.commandHandler.viewerBase.isFormFieldSelect = true;\n      this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n      // eslint-disable-next-line max-len\n      var deltaValues = this.updateSize(this.prevSource, this.currentPosition, this.initialPosition, this.corner, this.initialBounds, null, true);\n      this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.initialPosition, this.prevSource, args.info.ctrlKey);\n      if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations[0] && this.commandHandler.selectedItems.annotations[0].shapeAnnotationType === 'Stamp') {\n        if (this.commandHandler.stampSettings.minHeight || this.commandHandler.stampSettings.minWidth) {\n          this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n        }\n      }\n      if (this.commandHandler.selectedItems.formFields.length > 0 && (this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Textbox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Checkbox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'RadioButton' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'InitialField' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'SignatureField' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'DropdownList' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'ListBox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'PasswordField')) {\n        if (this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'SignatureField') {\n          this.commandHandler.selectedItems.formFields[0].signatureIndicatorSettings = this.commandHandler.selectedItems.formFields[0].signatureIndicatorSettings ? this.commandHandler.selectedItems.formFields[0].signatureIndicatorSettings : {\n            opacity: 1,\n            backgroundColor: 'rgba(255, 228, 133, 0.35)',\n            width: 19,\n            height: 10,\n            fontSize: 10,\n            text: null,\n            color: 'black'\n          };\n        }\n        this.commandHandler.formDesignerModule.updateHTMLElement(this.commandHandler.selectedItems.formFields[0]);\n      }\n      this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n      if (this.commandHandler.annotation && args.source.wrapper) {\n        // eslint-disable-next-line\n        var newObject = {\n          bounds: {\n            x: args.source.wrapper.offsetX,\n            y: args.source.wrapper.offsetY,\n            width: args.source.wrapper.actualSize.width,\n            height: args.source.wrapper.actualSize.height\n          }\n        };\n        if (isLineShapes(args.source)) {\n          newObject.vertexPoints = args.source.vertexPoints;\n          newObject.leaderHeight = args.source.leaderHeight;\n        }\n        if (this.redoElement.bounds.height !== newObject.bounds.height || this.redoElement.bounds.width !== newObject.bounds.width || this.redoElement.bounds.x !== newObject.bounds.x || this.redoElement.bounds.y !== newObject.bounds.y) {\n          isResized = true;\n        }\n        if (this.prevSource.measureType === 'Radius' && isResized) {\n          newObject.notes = args.source.notes;\n          this.commandHandler.annotation.updateCalibrateValues(this.prevSource);\n        }\n        if (this.prevSource.shapeAnnotationType === 'SignatureText') {\n          var boundsRatio = newObject.bounds.width / oldObject.width;\n          newObject.fontSize = this.prevSource.wrapper.children[1].style.fontSize * boundsRatio;\n          if (args.target != null) {\n            args.target.fontSize = newObject.fontSize;\n            // eslint-disable-next-line\n            args.target.wrapper.children[1].style.fontSize = newObject.fontSize;\n            args.target.wrapper.children[1].horizontalAlignment = 'Center';\n            args.target.wrapper.children[1].verticalAlignment = 'Center';\n            args.target.wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n            // eslint-disable-next-line\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].style.fontSize = newObject.fontSize;\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].horizontalAlignment = 'Center';\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].verticalAlignment = 'Center';\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n            this.commandHandler.selectedItems.annotations[0].fontSize = newObject.fontSize;\n          }\n        }\n        if (this.prevSource.shapeAnnotationType === 'SignatureText' && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n          // eslint-disable-next-line max-len\n          this.commandHandler.nodePropertyChange(this.commandHandler.selectedItems.annotations[0], {\n            fontSize: newObject.fontSize\n          });\n        }\n        if (isResized) {\n          // eslint-disable-next-line\n          this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newObject);\n        }\n      }\n      if (args.target && args.target.formFieldAnnotationType) {\n        var node = args.target;\n        // eslint-disable-next-line\n        var field = {\n          value: node.value,\n          fontFamily: node.fontFamily,\n          fontSize: node.fontSize,\n          fontStyle: node.fontStyle,\n          // eslint-disable-next-line\n          color: node.color,\n          backgroundColor: node.backgroundColor,\n          alignment: node.alignment,\n          isReadonly: node.isReadonly,\n          visibility: node.visibility,\n          // eslint-disable-next-line\n          maxLength: node.maxLength,\n          isRequired: node.isRequired,\n          isPrint: node.isPrint,\n          rotation: node.rotateAngle,\n          tooltip: node.tooltip,\n          // eslint-disable-next-line\n          options: node.options,\n          isChecked: node.isChecked,\n          isSelected: node.isSelected\n        };\n        // eslint-disable-next-line max-len\n        var currentPosition = {\n          X: args.source.wrapper.offsetX,\n          Y: args.source.wrapper.offsetY,\n          Width: args.source.wrapper.actualSize.width,\n          Height: args.source.wrapper.actualSize.height\n        };\n        // eslint-disable-next-line max-len\n        var previousPosition = {\n          X: this.initialBounds.x,\n          Y: this.initialBounds.y,\n          Width: this.initialBounds.width,\n          Height: this.initialBounds.height\n        };\n        this.commandHandler.fireFormFieldResizeEvent('formFieldResize', field, node.pageIndex, previousPosition, currentPosition);\n      }\n      if (this.commandHandler.annotation && this.commandHandler.annotation.stampAnnotationModule) {\n        this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, this.prevSource.id, 'Resize');\n      }\n    }\n    _super.prototype.mouseUp.call(this, args);\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  ResizeTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    var object = args.source;\n    this.currentPosition = args.position;\n    var x = this.currentPosition.x - this.startPosition.x;\n    var y = this.currentPosition.y - this.startPosition.y;\n    x = x / this.commandHandler.viewerBase.getZoomFactor();\n    y = y / this.commandHandler.viewerBase.getZoomFactor();\n    // eslint-disable-next-line\n    var annotationElement = args.source;\n    // eslint-disable-next-line\n    var size = this.getPoints(x, y);\n    var width = annotationElement.width + size.x;\n    var height = annotationElement.height + size.y;\n    // eslint-disable-next-line\n    var obj = object;\n    if (object && object.annotations) {\n      // eslint-disable-next-line\n      obj = object.annotations[0];\n    }\n    // eslint-disable-next-line\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n      // eslint-disable-next-line max-len\n      if (height >= annotationMinHeight && height <= annotationMaxHeight && width >= annotationMinWidth && width <= annotationMaxWidth) {\n        // eslint-disable-next-line\n        x = x;\n        // eslint-disable-next-line\n        y = y;\n      } else {\n        if (height < annotationMinHeight || height > annotationMaxHeight) {\n          if (height < annotationMinHeight) {\n            y = annotationMinHeight - annotationElement.height;\n          } else {\n            y = annotationMaxHeight - annotationElement.height;\n          }\n        }\n        if (width < annotationMinWidth || width > annotationMaxWidth) {\n          if (width < annotationMinWidth) {\n            x = annotationMinWidth - annotationElement.width;\n          } else {\n            x = annotationMaxWidth - annotationElement.width;\n          }\n        }\n      }\n    }\n    var changes = {\n      x: x,\n      y: y\n    };\n    if (this.currentElement.wrapper) {\n      changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n    }\n    changes = this.getChanges(changes);\n    this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n    if (!this.helper) {\n      // eslint-disable-next-line\n      var cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n      cobject.id = 'diagram_helper';\n      if (cobject.shapeAnnotationType === 'Stamp') {\n        cobject.strokeColor = '';\n        cobject.borderDashArray = '';\n        cobject.fillColor = 'transparent';\n        cobject.stampFillColor = 'transparent';\n        cobject.data = '';\n      } else if (cobject.shapeAnnotationType === 'FreeText') {\n        cobject.strokeColor = 'blue';\n        cobject.fillColor = 'transparent';\n        cobject.thickness = 1;\n        cobject.opacity = 1;\n        cobject.dynamicText = '';\n      } else {\n        // eslint-disable-next-line max-len\n        cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n        cobject.strokeColor = 'red';\n        cobject.borderDashArray = '5,5';\n        cobject.fillColor = 'transparent';\n        cobject.thickness = 2;\n        cobject.opacity = 1;\n      }\n      if (cobject.enableShapeLabel === true) {\n        cobject.labelContent = '';\n      }\n      if (cobject.shapeAnnotationType === 'SignatureText') {\n        cobject.fillColor = 'transparent';\n        cobject.thickness = 1;\n        cobject.opacity = 1;\n        cobject.data = '';\n      }\n      this.helper = cobject = this.commandHandler.add(cobject);\n      if (this.commandHandler.selectedItems.annotations.length > 0) {\n        this.commandHandler.selectedItems.annotations = [cobject];\n      } else {\n        this.commandHandler.selectedItems.formFields = [cobject];\n      }\n    }\n    var deltaValues = this.updateSize(this.helper, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n    // eslint-disable-next-line max-len\n    this.blocked = !this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, this.helper, args.info.ctrlKey);\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  ResizeTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  ResizeTool.prototype.getTooltipContent = function (pdfAnnotationBaseModel) {\n    return 'W:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.width) + ' ' + 'H:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.height);\n  };\n  ResizeTool.prototype.getChanges = function (change) {\n    switch (this.corner) {\n      case 'ResizeEast':\n        return {\n          x: change.x,\n          y: 0\n        };\n      case 'ResizeSouthEast':\n        return change;\n      case 'ResizeSouth':\n        return {\n          x: 0,\n          y: change.y\n        };\n      case 'ResizeNorth':\n        return {\n          x: 0,\n          y: -change.y\n        };\n      case 'ResizeNorthEast':\n        return {\n          x: change.x,\n          y: -change.y\n        };\n      case 'ResizeNorthWest':\n        return {\n          x: -change.x,\n          y: -change.y\n        };\n      case 'ResizeWest':\n        return {\n          x: -change.x,\n          y: 0\n        };\n      case 'ResizeSouthWest':\n        return {\n          x: -change.x,\n          y: change.y\n        };\n    }\n    return change;\n  };\n  ResizeTool.prototype.getPoints = function (x, y) {\n    switch (this.corner) {\n      case 'ResizeEast':\n        return {\n          x: x,\n          y: 0\n        };\n      case 'ResizeSouthEast':\n        return {\n          x: x,\n          y: y\n        };\n      case 'ResizeSouth':\n        return {\n          x: 0,\n          y: y\n        };\n      case 'ResizeNorth':\n        return {\n          x: 0,\n          y: -y\n        };\n      case 'ResizeNorthEast':\n        return {\n          x: x,\n          y: -y\n        };\n      case 'ResizeNorthWest':\n        return {\n          x: -x,\n          y: -y\n        };\n      case 'ResizeWest':\n        return {\n          x: -x,\n          y: 0\n        };\n      case 'ResizeSouthWest':\n        return {\n          x: -x,\n          y: y\n        };\n    }\n    return {\n      x: x,\n      y: y\n    };\n  };\n  /**\n   * Updates the size with delta width and delta height using scaling.\n   * Aspect ratio used to resize the width or height based on resizing the height or width.\n   *\n   * @param {number} deltaWidth - Specified the delta width.\n   * @param {number} deltaHeight - Specified the delta height.\n   * @param {string} corner - Specified the corner value.\n   * @param {PointModel} startPoint - Specified the start point of the annotation.\n   * @param {PointModel} endPoint - Specified the end point of the annotation.\n   * @param {SelectorModel | PdfAnnotationBaseModel} source - Specified the annotation object.\n   * @param {boolean} isCtrlKeyPressed - becomes true when ctrl Key is pressed.\n   * @returns {boolean} - Returns true or false.\n   */\n  ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source, isCtrlKeyPressed) {\n    // eslint-disable-next-line\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(source) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n    var x = this.currentPosition.x - this.startPosition.x;\n    var y = this.currentPosition.y - this.startPosition.y;\n    x = x / this.commandHandler.viewerBase.getZoomFactor();\n    y = y / this.commandHandler.viewerBase.getZoomFactor();\n    // eslint-disable-next-line\n    var annotationElement = source;\n    // eslint-disable-next-line\n    var size = this.getPoints(x, y);\n    var width = annotationElement.bounds.width + size.x;\n    var height = annotationElement.bounds.height + size.y;\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n    if (source instanceof Selector && source.annotations.length === 1 && (source.annotations[0].shapeAnnotationType === 'Perimeter' || source.annotations[0].shapeAnnotationType === 'Radius' || source.shapeAnnotationType === 'Stamp')) {\n      if (!(deltaHeight === 1 && deltaWidth === 1)) {\n        deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n      } else if (startPoint !== endPoint) {\n        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n      } else {\n        deltaHeight = deltaWidth = 0;\n      }\n    } else if (source.shapeAnnotationType === 'Image' || source.shapeAnnotationType === 'HandWrittenSignature' || source.shapeAnnotationType === 'SignatureText' || source.shapeAnnotationType === 'SignatureImage') {\n      if (!(deltaHeight === 1 && deltaWidth === 1)) {\n        if (isCtrlKeyPressed) {\n          if (width >= annotationMaxWidth && height < annotationMaxHeight) {\n            deltaHeight = Math.max(deltaHeight, deltaWidth);\n          }\n          if (height >= annotationMaxHeight && width < annotationMaxWidth) {\n            deltaWidth = Math.max(deltaHeight, deltaWidth);\n          }\n          if (width < annotationMaxWidth && height < annotationMaxHeight) {\n            deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n          }\n        }\n      }\n      if (!isCtrlKeyPressed) {\n        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n      }\n    } else {\n      if (source.shapeAnnotationType === 'Perimeter' || source.shapeAnnotationType === 'Radius' || source.shapeAnnotationType === 'Stamp') {\n        if (source.shapeAnnotationType === 'Stamp') {\n          if (!annotationMaxHeight && !deltaHeight) {\n            deltaHeight = Math.max(deltaHeight === 1 ? 0 : deltaHeight);\n          }\n          if (!annotationMaxWidth && !deltaWidth) {\n            deltaWidth = Math.max(deltaWidth === 1 ? 0 : deltaWidth);\n          }\n        } else {\n          if (!annotationMaxHeight || !annotationMaxWidth) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n              deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n            }\n          }\n        }\n      }\n    }\n    this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n    return this.blocked;\n  };\n  return ResizeTool;\n}(ToolBase);\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar NodeDrawingTool = /** @class */function (_super) {\n  __extends(NodeDrawingTool, _super);\n  function NodeDrawingTool(commandHandler, base, sourceObject) {\n    var _this = _super.call(this, commandHandler, base) || this;\n    _this.sourceObject = sourceObject;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  NodeDrawingTool.prototype.mouseDown = function (args) {\n    if (!isNaN(this.pdfViewerBase.activeElements.activePageID) && event.target.className != 'e-pv-page-container') {\n      _super.prototype.mouseDown.call(this, args);\n      this.inAction = true;\n      var node = {\n        bounds: {\n          x: 100,\n          y: 300,\n          width: 100,\n          height: 100\n        },\n        pageIndex: 0,\n        strokeColor: 'red',\n        thickness: 3\n      };\n      node.id = randomId();\n      this.sourceObject.pageIndex = node.pageIndex = this.pdfViewerBase.activeElements.activePageID || 0;\n      this.sourceObject.enableShapeLabel = this.commandHandler.enableShapeLabel;\n      this.pdfViewerBase.updateFreeTextProperties(this.sourceObject);\n      this.isFormDesign = false;\n      // eslint-disable-next-line\n      var formFieldElement = document.getElementById('FormField_helper_html_element');\n      if (formFieldElement) {\n        formFieldElement.remove();\n      }\n      // eslint-disable-next-line\n      this.commandHandler.drawingObject = this.drawingObject = this.commandHandler.add(this.sourceObject || node);\n      if (this.drawingObject.formFieldAnnotationType === 'Textbox' || this.drawingObject.formFieldAnnotationType === 'SignatureField' || this.drawingObject.formFieldAnnotationType === 'InitialField' || this.drawingObject.formFieldAnnotationType === 'Checkbox' || this.drawingObject.formFieldAnnotationType === 'ListBox' || this.drawingObject.formFieldAnnotationType === 'RadioButton' || this.drawingObject.formFieldAnnotationType === 'DropdownList' || this.drawingObject.formFieldAnnotationType === 'PasswordField') {\n        this.inAction = false;\n        // eslint-disable-next-line\n        this.drawingObject.pageNumber = this.pdfViewerBase.getActivePage(true);\n        // eslint-disable-next-line\n        var bounds = this.commandHandler.formDesignerModule.updateFormFieldInitialSize(this.drawingObject.wrapper.children[0], this.drawingObject.formFieldAnnotationType);\n        var pageIndex = this.drawingObject.pageIndex;\n        var page = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex);\n        var pageWidth = page.clientWidth - bounds.width;\n        var pageHeight = page.clientHeight - bounds.height;\n        // eslint-disable-next-line\n        var left = page.offsetLeft;\n        var offsetX = void 0;\n        // eslint-disable-next-line\n        if (this.currentPosition.y >= pageHeight && event.target && event.target.parentElement && event.target.parentElement.classList.contains('foreign-object') && event.path) {\n          // eslint-disable-next-line\n          var targetParentRect = event.path[3].getBoundingClientRect();\n          // eslint-disable-next-line\n          offsetX = event.clientX - targetParentRect.left;\n        } else if (isNullOrUndefined(event.path) && (this.drawingObject.formFieldAnnotationType === 'SignatureField' || this.drawingObject.formFieldAnnotationType === 'InitialField')) {\n          offsetX = this.currentPosition.x;\n        } else {\n          offsetX = this.currentPosition.x - left;\n        }\n        // eslint-disable-next-line\n        var rect = void 0;\n        if (this.currentPosition.x >= pageWidth && this.currentPosition.y >= pageHeight) {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: pageWidth,\n            y: pageHeight,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        } else if (this.currentPosition.x >= pageWidth) {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: pageWidth,\n            y: this.currentPosition.y,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        } else if (this.currentPosition.y >= pageHeight) {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: offsetX,\n            y: pageHeight,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        } else {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: this.currentPosition.x,\n            y: this.currentPosition.y,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        }\n        this.updateNodeDimension(this.drawingObject, rect);\n        this.drawingObject.bounds.x = this.drawingObject.bounds.x - this.drawingObject.bounds.width / 2;\n        this.drawingObject.bounds.y = this.drawingObject.bounds.y - this.drawingObject.bounds.height / 2;\n        this.commandHandler.formFieldCollection.push(this.drawingObject);\n        var drawingObject = this.drawingObject;\n        // eslint-disable-next-line max-len\n        var formField = {\n          id: drawingObject.id,\n          name: drawingObject.name,\n          value: drawingObject.value,\n          // eslint-disable-next-line max-len\n          type: drawingObject.formFieldAnnotationType,\n          isReadOnly: drawingObject.isReadonly,\n          fontFamily: drawingObject.fontFamily,\n          // eslint-disable-next-line max-len\n          fontSize: drawingObject.fontSize,\n          fontStyle: drawingObject.fontStyle,\n          color: drawingObject.color,\n          backgroundColor: drawingObject.backgroundColor,\n          // eslint-disable-next-line max-len\n          alignment: drawingObject.alignment,\n          visibility: drawingObject.visibility,\n          maxLength: drawingObject.maxLength,\n          isRequired: drawingObject.isRequired,\n          // eslint-disable-next-line max-len\n          isPrint: drawingObject.isPrint,\n          isSelected: drawingObject.isSelected,\n          isChecked: drawingObject.isChecked,\n          tooltip: drawingObject.tooltip,\n          bounds: drawingObject.bounds,\n          thickness: drawingObject.thickness,\n          borderColor: drawingObject.borderColor,\n          // eslint-disable-next-line max-len\n          signatureIndicatorSettings: drawingObject.signatureIndicatorSettings,\n          pageIndex: drawingObject.pageIndex,\n          pageNumber: drawingObject.pageNumber,\n          isMultiline: drawingObject.isMultiline,\n          insertSpaces: drawingObject.insertSpaces,\n          isTransparent: drawingObject.isTransparent,\n          rotateAngle: drawingObject.rotateAngle,\n          selectedIndex: drawingObject.selectedIndex,\n          options: drawingObject.options ? drawingObject.options : [],\n          signatureType: drawingObject.signatureType,\n          zIndex: drawingObject.zIndex\n        };\n        this.commandHandler.formFieldCollections.push(formField);\n        // eslint-disable-next-line max-len\n        this.commandHandler.formDesignerModule.drawHTMLContent(this.drawingObject.formFieldAnnotationType, this.drawingObject.wrapper.children[0], this.drawingObject, this.drawingObject.pageIndex, this.commandHandler);\n        this.commandHandler.select([this.commandHandler.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n        if (this.commandHandler.annotation) {\n          this.commandHandler.annotation.addAction(this.pdfViewerBase.getActivePage(true), null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n        }\n        this.endAction();\n        this.pdfViewerBase.tool = null;\n        this.pdfViewerBase.action = 'Select';\n        this.drawingObject = null;\n        this.pdfViewerBase.isMouseDown = false;\n        this.pdfViewerBase.pdfViewer.drawingObject = null;\n        this.isFormDesign = true;\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  NodeDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      this.dragging = true;\n      var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n      this.updateNodeDimension(this.drawingObject, rect);\n      if (this.drawingObject.shapeAnnotationType === 'Radius') {\n        this.updateRadiusLinePosition(this.drawingObject.wrapper.children[1], this.drawingObject);\n      }\n    }\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  NodeDrawingTool.prototype.mouseUp = function (args) {\n    if (this.drawingObject && this.dragging) {\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n      this.commandHandler.select([this.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n      var drawnAnnotation = this.commandHandler.selectedItems.annotations[0];\n      if (!isNullOrUndefined(drawnAnnotation) && !isNullOrUndefined(drawnAnnotation.wrapper)) {\n        this.commandHandler.nodePropertyChange(drawnAnnotation, {\n          bounds: {\n            x: drawnAnnotation.wrapper.offsetX,\n            y: drawnAnnotation.wrapper.offsetY\n          }\n        });\n        this.commandHandler.annotation.updateCalibrateValues(this.drawingObject, true);\n        if (this.commandHandler && !this.isFormDesign) {\n          // eslint-disable-next-line\n          this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n        }\n        this.dragging = false;\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n      }\n    } else {\n      _super.prototype.mouseUp.call(this, args);\n    }\n    this.drawingObject = null;\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  NodeDrawingTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @param {Rect} rect - Specified the annotation rect element.\n   * @returns {void}\n   */\n  NodeDrawingTool.prototype.updateNodeDimension = function (obj, rect) {\n    var zoom = this.commandHandler.viewerBase.getZoomFactor();\n    obj.bounds.x = rect.x / zoom + rect.width / zoom;\n    obj.bounds.y = rect.y / zoom + rect.height / zoom;\n    obj.bounds.width = rect.width / zoom;\n    obj.bounds.height = rect.height / zoom;\n    // eslint-disable-next-line\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    if (annotationSettings.maxWidth || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      if (obj.bounds.width > annotationMaxWidth) {\n        obj.bounds.width = annotationMaxWidth;\n      }\n      if (obj.bounds.height > annotationMaxHeight) {\n        obj.bounds.height = annotationMaxHeight;\n      }\n      if (obj.bounds.height <= annotationMaxHeight && obj.bounds.width <= annotationMaxWidth) {\n        this.commandHandler.nodePropertyChange(obj, {\n          bounds: obj.bounds\n        });\n      }\n    } else {\n      this.commandHandler.nodePropertyChange(obj, {\n        bounds: obj.bounds\n      });\n    }\n  };\n  /**\n   * @private\n   * @param {DrawingElement} obj - Specified the drawing element.\n   * @param {PdfAnnotationBaseModel} node - Specified the annotation object.\n   * @returns {void}\n   */\n  NodeDrawingTool.prototype.updateRadiusLinePosition = function (obj, node) {\n    var trasPoint = {\n      x: node.bounds.x + node.bounds.width / 4,\n      y: node.bounds.y\n    };\n    var center = {\n      x: node.bounds.x + node.bounds.width / 2,\n      y: node.bounds.y + node.bounds.height / 2\n    };\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n    var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n    var newPoint1 = {\n      x: rotatedPoint.x,\n      y: rotatedPoint.y\n    };\n    obj.offsetX = newPoint1.x;\n    obj.offsetY = newPoint1.y;\n    obj.width = node.bounds.width / 2;\n    // eslint-disable-next-line\n    var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n    var annotationMaxWidth = 0;\n    if (annotationSettings.maxWidth) {\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      if (node.bounds.width > annotationMaxWidth) {\n        node.bounds.width = annotationMaxWidth;\n        obj.width = node.bounds.width / 2;\n      }\n    }\n    this.commandHandler.renderDrawing(undefined, node.pageIndex);\n  };\n  return NodeDrawingTool;\n}(ToolBase);\nexport { NodeDrawingTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n *\n * @hidden\n */\nvar PolygonDrawingTool = /** @class */function (_super) {\n  __extends(PolygonDrawingTool, _super);\n  function PolygonDrawingTool(commandHandler, base, action) {\n    var _this = _super.call(this, commandHandler, base) || this;\n    _this.action = action;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  PolygonDrawingTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n    this.inAction = true;\n    if (!this.drawingObject) {\n      this.startPoint = {\n        x: this.startPosition.x,\n        y: this.startPosition.y\n      };\n      var nodeAnnotElement = {\n        bounds: {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y,\n          width: 5,\n          height: 5\n        },\n        // eslint-disable-next-line max-len\n        vertexPoints: [{\n          x: this.startPoint.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.startPoint.y / this.pdfViewerBase.getZoomFactor()\n        }, {\n          x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor()\n        }],\n        shapeAnnotationType: 'Line',\n        fillColor: this.commandHandler.drawingObject.fillColor,\n        strokeColor: this.commandHandler.drawingObject.strokeColor,\n        pageIndex: this.pdfViewerBase.activeElements.activePageID,\n        // eslint-disable-next-line max-len\n        notes: this.commandHandler.drawingObject.notes,\n        thickness: this.commandHandler.drawingObject.thickness,\n        author: this.commandHandler.drawingObject.author,\n        subject: this.commandHandler.drawingObject.subject,\n        borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n        modifiedDate: this.commandHandler.drawingObject.modifiedDate,\n        borderStyle: this.commandHandler.drawingObject.borderStyle,\n        // eslint-disable-next-line max-len\n        measureType: this.commandHandler.drawingObject.measureType,\n        enableShapeLabel: this.commandHandler.enableShapeLabel,\n        opacity: this.commandHandler.drawingObject.opacity\n      };\n      this.pdfViewerBase.updateFreeTextProperties(nodeAnnotElement);\n      // eslint-disable-next-line\n      this.drawingObject = this.commandHandler.add(nodeAnnotElement);\n    } else {\n      var pt = void 0;\n      var obj = this.drawingObject;\n      pt = obj.vertexPoints[obj.vertexPoints.length - 1];\n      pt = {\n        x: pt.x,\n        y: pt.y\n      };\n      var lastPoint = this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1];\n      if (!(lastPoint.x === pt.x && lastPoint.x === pt.y)) {\n        this.drawingObject.vertexPoints.push(pt);\n      }\n      this.commandHandler.nodePropertyChange(obj, {\n        vertexPoints: obj.vertexPoints\n      });\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  PolygonDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      this.dragging = true;\n      var obj = this.drawingObject;\n      if (this.drawingObject && this.currentPosition) {\n        obj.vertexPoints[obj.vertexPoints.length - 1].x = this.currentPosition.x / this.pdfViewerBase.getZoomFactor();\n        obj.vertexPoints[obj.vertexPoints.length - 1].y = this.currentPosition.y / this.pdfViewerBase.getZoomFactor();\n        this.commandHandler.nodePropertyChange(obj, {\n          vertexPoints: obj.vertexPoints\n        });\n      }\n      if (obj.measureType === 'Perimeter') {\n        updatePerimeterLabel(obj, obj.vertexPoints, this.commandHandler.annotation.measureAnnotationModule);\n      }\n    }\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @param {boolean} isDoubleClineck - Specified the double click event or not.\n   * @param {boolean} isMouseLeave - Specified the mouse leave event or not.\n   * @returns {void}\n   */\n  PolygonDrawingTool.prototype.mouseUp = function (args, isDoubleClineck, isMouseLeave) {\n    _super.prototype.mouseMove.call(this, args);\n    // eslint-disable-next-line\n    var currentSelector;\n    if (args.source && args.annotationSelectorSettings !== null) {\n      currentSelector = args.source.annotationSelectorSettings;\n    }\n    if (this.drawingObject) {\n      // eslint-disable-next-line max-len\n      var bounds = new Rect(this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].x - 20, this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].y - 20, 40, 40);\n      var point = {\n        x: this.drawingObject.vertexPoints[0].x,\n        y: this.drawingObject.vertexPoints[0].y\n      };\n      if ((bounds.containsPoint(point) || isDoubleClineck) && this.dragging) {\n        if (this.inAction) {\n          this.inAction = false;\n          if (this.drawingObject) {\n            if (!isMouseLeave) {\n              if (this.drawingObject.vertexPoints.length > 2) {\n                this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n              }\n            }\n            if (this.action === 'Polygon') {\n              if (!isMouseLeave) {\n                // eslint-disable-next-line max-len\n                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1] = this.drawingObject.vertexPoints[0];\n              } else {\n                // eslint-disable-next-line max-len\n                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length] = this.drawingObject.vertexPoints[0];\n              }\n              this.commandHandler.nodePropertyChange(this.drawingObject, {\n                vertexPoints: this.drawingObject.vertexPoints\n              });\n              var cobject = cloneObject(this.drawingObject);\n              cobject.shapeAnnotationType = 'Polygon';\n              cobject.bounds.width = cobject.wrapper.actualSize.width;\n              cobject.bounds.height = cobject.wrapper.actualSize.height;\n              cobject.bounds.x = this.drawingObject.wrapper.bounds.x;\n              cobject.bounds.y = this.drawingObject.wrapper.bounds.y;\n              this.commandHandler.add(cobject);\n              this.commandHandler.remove(this.drawingObject);\n              this.commandHandler.select([cobject.id], currentSelector);\n              var drawingObject = this.commandHandler.selectedItems.annotations[0];\n              if (drawingObject) {\n                if (this.commandHandler.enableShapeAnnotation && (isNullOrUndefined(drawingObject.measureType) || drawingObject.measureType === '')) {\n                  // eslint-disable-next-line max-len\n                  this.commandHandler.annotation.shapeAnnotationModule.renderShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                }\n                if (this.commandHandler.enableMeasureAnnotation && (drawingObject.measureType === 'Area' || drawingObject.measureType === 'Volume')) {\n                  if (drawingObject.measureType === 'Area') {\n                    // eslint-disable-next-line max-len\n                    drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateArea(drawingObject.vertexPoints);\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                  } else if (drawingObject.measureType === 'Volume') {\n                    // eslint-disable-next-line max-len\n                    drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateVolume(drawingObject.vertexPoints);\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                  }\n                  if (drawingObject.enableShapeLabel) {\n                    drawingObject.labelContent = drawingObject.notes;\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.nodePropertyChange(drawingObject, {\n                      vertexPoints: drawingObject.vertexPoints,\n                      notes: drawingObject.notes\n                    });\n                  }\n                  // eslint-disable-next-line max-len\n                  this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                }\n              }\n            } else {\n              if (!isMouseLeave) {\n                if (isDoubleClineck) {\n                  this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                }\n              }\n              this.commandHandler.nodePropertyChange(this.drawingObject, {\n                // eslint-disable-next-line max-len\n                vertexPoints: this.drawingObject.vertexPoints,\n                sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes\n              });\n              this.commandHandler.select([this.drawingObject.id], currentSelector);\n              if (this.commandHandler.enableMeasureAnnotation && this.drawingObject.measureType === 'Perimeter') {\n                this.commandHandler.renderDrawing(null, this.drawingObject.pageIndex);\n                // eslint-disable-next-line max-len\n                this.drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculatePerimeter(this.drawingObject);\n                if (this.drawingObject.enableShapeLabel) {\n                  this.drawingObject.labelContent = this.drawingObject.notes;\n                  // eslint-disable-next-line max-len\n                  this.commandHandler.nodePropertyChange(this.drawingObject, {\n                    vertexPoints: this.drawingObject.vertexPoints,\n                    notes: this.drawingObject.notes\n                  });\n                }\n                // eslint-disable-next-line max-len\n                this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(this.drawingObject.annotName, this.drawingObject.notes);\n                // eslint-disable-next-line max-len\n                this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(this.drawingObject, this.drawingObject.pageIndex);\n              }\n            }\n            var annotationObject = this.commandHandler.selectedItems.annotations[0];\n            // eslint-disable-next-line\n            this.commandHandler.annotation.addAction(this.pageIndex, null, annotationObject, 'Addition', '', annotationObject, annotationObject);\n            this.drawingObject = null;\n          }\n        }\n        this.endAction();\n      } else if (this.inAction && !this.dragging) {\n        this.commandHandler.remove(this.drawingObject);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  PolygonDrawingTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args, true, true);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  PolygonDrawingTool.prototype.mouseWheel = function (args) {\n    _super.prototype.mouseWheel.call(this, args);\n    this.mouseMove(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  PolygonDrawingTool.prototype.endAction = function () {\n    this.inAction = false;\n    this.drawingObject = null;\n    this.commandHandler.tool = '';\n  };\n  return PolygonDrawingTool;\n}(ToolBase);\nexport { PolygonDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar LineTool = /** @class */function (_super) {\n  __extends(LineTool, _super);\n  function LineTool(commandHandler, base, endPoint, drawingObject) {\n    var _this = _super.call(this, commandHandler, base, true) || this;\n    _this.endPoint = endPoint;\n    _this.drawingObject = drawingObject;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  LineTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.undoElement = undefined;\n    _super.prototype.mouseDown.call(this, args);\n    var oldPointValue;\n    var connectorsShape;\n    if (args.source && args.source.annotations) {\n      oldPointValue = {\n        x: this.prevPosition.x,\n        y: this.prevPosition.y\n      };\n      connectorsShape = this.drawingObject;\n    }\n    this.initialPosition = args.position;\n    this.prevSource = this.drawingObject;\n    this.currentPosition = args.position;\n    if (!this.drawingObject) {\n      var measureModule = this.commandHandler.annotation.measureAnnotationModule;\n      var annotationNode = {\n        // eslint-disable-next-line max-len\n        vertexPoints: [{\n          x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.startPosition.y / this.pdfViewerBase.getZoomFactor()\n        }, {\n          x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor()\n        }],\n        bounds: {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y,\n          width: 5,\n          height: 5\n        },\n        sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n        taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes,\n        measureType: 'Distance',\n        // eslint-disable-next-line max-len\n        fillColor: this.commandHandler.drawingObject.fillColor,\n        notes: this.commandHandler.drawingObject.notes,\n        strokeColor: this.commandHandler.drawingObject.strokeColor,\n        // eslint-disable-next-line max-len\n        opacity: this.commandHandler.drawingObject.opacity,\n        thickness: this.commandHandler.drawingObject.thickness,\n        borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n        shapeAnnotationType: 'Distance',\n        pageIndex: this.pdfViewerBase.activeElements.activePageID,\n        author: this.commandHandler.drawingObject.author,\n        subject: this.commandHandler.drawingObject.subject,\n        enableShapeLabel: this.commandHandler.enableShapeLabel,\n        leaderHeight: measureModule.leaderLength\n      };\n      this.pdfViewerBase.updateFreeTextProperties(annotationNode);\n      // eslint-disable-next-line\n      this.drawingObject = this.commandHandler.add(annotationNode);\n    } else if (!this.dragging) {\n      var nodeAnnot = {\n        bounds: {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y,\n          width: 5,\n          height: 5\n        },\n        // eslint-disable-next-line max-len\n        vertexPoints: [{\n          x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.startPosition.y / this.pdfViewerBase.getZoomFactor()\n        }, {\n          x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor()\n        }],\n        // eslint-disable-next-line max-len\n        shapeAnnotationType: this.drawingObject.shapeAnnotationType,\n        sourceDecoraterShapes: this.drawingObject.sourceDecoraterShapes,\n        taregetDecoraterShapes: this.drawingObject.taregetDecoraterShapes,\n        fillColor: this.drawingObject.fillColor,\n        strokeColor: this.drawingObject.strokeColor,\n        pageIndex: this.pdfViewerBase.activeElements.activePageID,\n        // eslint-disable-next-line max-len\n        opacity: this.drawingObject.opacity || 1,\n        borderDashArray: this.drawingObject.borderDashArray,\n        thickness: this.drawingObject.thickness,\n        modifiedDate: this.drawingObject.modifiedDate,\n        author: this.drawingObject.author,\n        subject: this.drawingObject.subject,\n        lineHeadEnd: this.drawingObject.lineHeadEnd,\n        lineHeadStart: this.drawingObject.lineHeadStart,\n        measureType: this.commandHandler.drawingObject.measureType,\n        enableShapeLabel: this.commandHandler.enableShapeLabel\n      };\n      this.pdfViewerBase.updateFreeTextProperties(nodeAnnot);\n      // eslint-disable-next-line\n      this.drawingObject = this.commandHandler.add(nodeAnnot);\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  LineTool.prototype.mouseUp = function (args) {\n    if (this.dragging) {\n      _super.prototype.mouseMove.call(this, args);\n      if (this.commandHandler) {\n        // eslint-disable-next-line\n        var currentSelector = void 0;\n        if (args.source && args.annotationSelectorSettings !== null) {\n          currentSelector = args.source.annotationSelectorSettings;\n        } else {\n          currentSelector = '';\n        }\n        // eslint-disable-next-line\n        var node = this.drawingObject;\n        this.commandHandler.nodePropertyChange(node, {\n          vertexPoints: node.vertexPoints,\n          leaderHeight: node.leaderHeight\n        });\n        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n        this.commandHandler.select([node.id], currentSelector);\n        this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n      }\n      if (this.endPoint && this.endPoint.indexOf('ConnectorSegmentPoint') > -1 && this.dragging) {\n        this.commandHandler.annotation.updateCalibrateValues(this.drawingObject);\n        // eslint-disable-next-line\n        this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n        this.drawingObject = null;\n        this.dragging = false;\n        _super.prototype.mouseUp.call(this, args);\n      }\n      if (this.drawingObject) {\n        this.endPoint = 'ConnectorSegmentPoint_1';\n      }\n    } else {\n      if (this.drawingObject) {\n        this.commandHandler.remove(this.drawingObject);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  LineTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      this.currentPosition = args.position;\n      this.dragging = true;\n      if (this.currentPosition && this.prevPosition) {\n        var diffX = this.currentPosition.x - this.prevPosition.x;\n        var diffY = this.currentPosition.y - this.prevPosition.y;\n        // eslint-disable-next-line\n        var currentSelector = void 0;\n        if (args.source && args.annotationSelectorSettings !== null) {\n          currentSelector = args.source.annotationSelectorSettings;\n        } else {\n          currentSelector = '';\n        }\n        // eslint-disable-next-line max-len\n        if (this.inAction && this.commandHandler && this.drawingObject && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n          // eslint-disable-next-line max-len\n          this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.drawingObject, this.currentPosition, this.selectedSegment, args.target, null, currentSelector);\n          this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n        }\n      }\n      this.prevPosition = this.currentPosition;\n    }\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  LineTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  LineTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n    this.prevPosition = null;\n    this.endPoint = null;\n  };\n  return LineTool;\n}(ToolBase);\nexport { LineTool };\n/**\n * Rotates the selected objects\n *\n * @hidden\n */\nvar RotateTool = /** @class */function (_super) {\n  __extends(RotateTool, _super);\n  function RotateTool(commandHandler, base) {\n    return _super.call(this, commandHandler, base, true) || this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  RotateTool.prototype.mouseDown = function (args) {\n    var nodeMouseDown = cloneObject(args.source);\n    this.undoElement = {\n      bounds: {\n        x: nodeMouseDown.wrapper.offsetX,\n        y: nodeMouseDown.wrapper.offsetY,\n        width: nodeMouseDown.wrapper.actualSize.width,\n        height: nodeMouseDown.wrapper.actualSize.height\n      },\n      rotateAngle: nodeMouseDown.rotateAngle\n      // eslint-disable-next-line\n    };\n    _super.prototype.mouseDown.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  RotateTool.prototype.mouseUp = function (args) {\n    var object = args.source;\n    // eslint-disable-next-line\n    var newShapeObject;\n    if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n      // eslint-disable-next-line\n      var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n      this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n      newShapeObject = {\n        bounds: {\n          x: args.source.wrapper.offsetX,\n          y: args.source.wrapper.offsetY,\n          width: args.source.wrapper.actualSize.width,\n          height: args.source.wrapper.actualSize.height\n        },\n        rotateAngle: args.source.wrapper.rotateAngle\n      };\n    }\n    // eslint-disable-next-line\n    this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Rotate', '', this.undoElement, newShapeObject);\n    this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Rotate');\n    this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n  RotateTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n    var object = args.source;\n    // eslint-disable-next-line\n    var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n    this.currentPosition = args.position;\n    if (object.wrapper) {\n      var refPoint = {\n        x: object.wrapper.offsetX,\n        y: object.wrapper.offsetY\n      };\n      var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n      angle = (angle + 360) % 360;\n      this.blocked = !this.commandHandler.rotate(angle - object.wrapper.rotateAngle, currentSelector);\n    }\n    return !this.blocked;\n  };\n  RotateTool.prototype.getTooltipContent = function (node) {\n    return Math.round(node.rotateAngle % 360).toString() + '\\xB0';\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  RotateTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  RotateTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n  return RotateTool;\n}(ToolBase);\nexport { RotateTool };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","randomId","Point","rotatePoint","Rect","transformPointByMatrix","rotateMatrix","identityMatrix","TextElement","Selector","findActiveElement","cloneObject","isLineShapes","isNullOrUndefined","updatePerimeterLabel","Browser","ToolBase","pdfViewer","pdfViewerBase","protectChange","commandHandler","inAction","currentElement","blocked","isTooltipVisible","childTable","helper","undefined","undoElement","annotations","undoParentElement","startAction","mouseDown","args","source","startPosition","currentPosition","prevPosition","position","mouseMove","prevPageId","activeElements","activePageID","mouseUp","endAction","tool","remove","mouseWheel","mouseLeave","updateSize","shape","startPoint","endPoint","corner","initialBounds","angle","isMouseUp","zoom","viewerBase","getZoomFactor","difx","x","dify","y","rotateAngle","matrix","deltaWidth","deltaHeight","diff","width","actualSize","wrapper","bounds","height","obj","formFieldAnnotationType","annotName","shapeAnnotationType","annotationSettings","annotationModule","findAnnotationSettings","annotationMaxHeight","annotationMaxWidth","annotationMinHeight","annotationMinWidth","minWidth","maxWidth","minHeight","maxHeight","isAnnotationSet","size","getPositions","newWidth","newHeight","getPivot","SelectTool","_super","base","call","mouseEventHelper","overlappedCollections","object","isLock","checkAllowedInteractions","currentSelctor","annotationSelectorSettings","selectedObject","selectedItems","annotation","formField","formFields","currentAnnot","currentSource","length","info","ctrlKey","freeTextAnnotationModule","isInuptBoxInFocus","clearSelection","formDesignerModule","id","isFreeTextSelected","select","isAnnotationMouseDown","isFormFieldMouseDown","enableToolbar","isDevice","enableDesktopMode","toolbarModule","showToolbar","fireAnnotationUnSelect","pageIndex","field","name","value","fontFamily","fontSize","fontStyle","color","backgroundColor","alignment","isReadonly","isReadOnly","visibility","maxLength","isRequired","isPrint","rotation","tooltip","options","isChecked","isSelected","fireFormFieldUnselectEvent","currentTarget","event","type","i","formField_1","parseInt","toString","fireFocusOutFormField","target","className","MoveTool","_this","prevNode","offset","offsetX","offsetY","nodeMouseDown","redoElement","vertexPoints","leaderHeight","checkisAnnotationMove","isDragged","dragSelectedObjects","calculateMouseActionXDiff","calculateMouseActionYDiff","updateHTMLElement","renderSelector","isAnnotationMouseMove","isFormFieldMouseMove","newShapeObject","modifiedDate","node","borderColor","thickness","X","Y","Width","Height","previousPosition","fireFormFieldMoveEvent","addAction","stampAnnotationModule","updateSessionStorage","stickyNotesAnnotationModule","updateStickyNotes","calculateMouseXDiff","calculateMouseYDiff","requiredX","requiredY","isStamp","isSkip","diffX","diffY","selectedItem","cobject","strokeColor","borderDashArray","fillColor","stampFillColor","data","opacity","dynamicText","enableShapeLabel","labelContent","add","checkBoundaryConstraints","currentSelctor_1","triggerAnnotationMove","StampTool","apply","arguments","newObject","nodeElement","moveStampElement","textWidth","getTextWidth","widthRatio","getFontSize","Math","floor","defaultFontSize","sourceWrapper","text","font","canvas","document","createElement","context","getContext","fontName","getComputedStyle","body","measureText","InkDrawingTool","sourceObject","disableTextSelectionMode","inkAnnotationModule","drawInkInCanvas","storePathData","ConnectTool","oldValue","connectors","initialPosition","prevSource","measureType","notes","isResized","sizeObject","checkAnnotationWidth","nodePropertyChange","newShapeElementObject","updateCalibrateValues","connector","newValue","cloneShapebject","dragConnectorEnds","selectedSegment","ResizeTool","isPreventHistory","oldObject","isAnnotationSelect","isFormFieldSelect","deltaValues","scaleObjects","stampSettings","signatureIndicatorSettings","boundsRatio","children","style","horizontalAlignment","verticalAlignment","setOffsetWithRespectToBounds","fireFormFieldResizeEvent","annotationElement","getPoints","changes","getChanges","getTooltipContent","pdfAnnotationBaseModel","round","change","isCtrlKeyPressed","max","scaleSelectedItems","NodeDrawingTool","isNaN","updateFreeTextProperties","isFormDesign","formFieldElement","getElementById","drawingObject","pageNumber","getActivePage","updateFormFieldInitialSize","page","getElement","pageWidth","clientWidth","pageHeight","clientHeight","left","offsetLeft","parentElement","classList","contains","path","targetParentRect","getBoundingClientRect","clientX","rect","updateNodeDimension","formFieldCollection","push","isMultiline","insertSpaces","isTransparent","selectedIndex","signatureType","zIndex","formFieldCollections","drawHTMLContent","action","isMouseDown","equals","dragging","toBounds","updateRadiusLinePosition","drawnAnnotation","trasPoint","center","rotatedPoint","newPoint1","renderDrawing","PolygonDrawingTool","nodeAnnotElement","author","subject","borderStyle","pt","lastPoint","measureAnnotationModule","isDoubleClineck","isMouseLeave","currentSelector","point","containsPoint","splice","enableShapeAnnotation","shapeAnnotationModule","renderShapeAnnotations","enableMeasureAnnotation","calculateArea","addTextToComments","calculateVolume","renderMeasureShapeAnnotations","sourceDecoraterShapes","taregetDecoraterShapes","calculatePerimeter","annotationObject","LineTool","oldPointValue","connectorsShape","measureModule","annotationNode","leaderLength","nodeAnnot","lineHeadEnd","lineHeadStart","indexOf","RotateTool","refPoint","findAngle","rotate"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/tools.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { randomId, Point } from '@syncfusion/ej2-drawings';\nimport { rotatePoint } from '@syncfusion/ej2-drawings';\nimport { Rect } from '@syncfusion/ej2-drawings';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '@syncfusion/ej2-drawings';\nimport { TextElement } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { findActiveElement } from './action';\nimport { cloneObject, isLineShapes } from './drawing-util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { updatePerimeterLabel } from './connector-util';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n *\n * @hidden\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     *\n     * @param {PdfViewer} pdfViewer - Specified the pdfviewer component.\n     * @param {PdfViewerBase} pdfViewerBase - Specified the pdfViewer base component.\n     * @param {boolean} protectChange - Set the default value as false.\n     */\n    function ToolBase(pdfViewer, pdfViewerBase, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.pdfViewerBase = null;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        /**   @private  */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /** @private */\n        this.helper = undefined;\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { annotations: [] };\n        this.undoParentElement = { annotations: [] };\n        this.commandHandler = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    /**\n     * @param {IElement} currentElement - Specified the current element.\n     * @returns {void}\n     */\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        this.prevPageId = this.pdfViewerBase.activeElements.activePageID;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        //At the end\n        this.endAction();\n        this.helper = null;\n    };\n    ToolBase.prototype.endAction = function () {\n        //remove helper\n        if (this.commandHandler) {\n            this.commandHandler.tool = '';\n            if (this.helper) {\n                this.commandHandler.remove(this.helper);\n            }\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse wheel event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse leave event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    // eslint-disable-next-line\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle, isMouseUp) {\n        var zoom = this.commandHandler.viewerBase.getZoomFactor();\n        var difx = this.currentPosition.x / zoom - this.startPosition.x / zoom;\n        var dify = this.currentPosition.y / zoom - this.startPosition.y / zoom;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.wrapper.bounds.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.wrapper.bounds.height;\n        // eslint-disable-next-line\n        var obj = shape;\n        if (!shape.formFieldAnnotationType) {\n            if (!shape.annotName && !shape.shapeAnnotationType) {\n                if (shape) {\n                    // eslint-disable-next-line\n                    obj = shape.annotations[0];\n                }\n            }\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        var isAnnotationSet = false;\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            isAnnotationSet = true;\n        }\n        if (isAnnotationSet && isMouseUp) {\n            // eslint-disable-next-line\n            var size = this.getPositions(corner, difx, dify);\n            var newWidth = width + size.x;\n            var newHeight = height + size.y;\n            // eslint-disable-next-line max-len\n            if ((newHeight > annotationMinHeight && newHeight < annotationMaxHeight) && (newWidth > annotationMinWidth && newWidth < annotationMaxWidth)) {\n                // eslint-disable-next-line\n                difx = difx;\n                // eslint-disable-next-line\n                dify = dify;\n            }\n            else {\n                if (newHeight < annotationMinHeight || newHeight > annotationMaxHeight) {\n                    if (newHeight < annotationMinHeight) {\n                        dify = annotationMinHeight - height;\n                    }\n                    else {\n                        dify = annotationMaxHeight - height;\n                    }\n                }\n                if (newWidth < annotationMinWidth || newWidth > annotationMaxWidth) {\n                    if (newWidth < annotationMinWidth) {\n                        difx = annotationMinWidth - width;\n                    }\n                    else {\n                        difx = annotationMaxWidth - width;\n                    }\n                }\n            }\n        }\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                // eslint-disable-next-line\n                difx = difx;\n                dify = 0;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = 0;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                }\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    ToolBase.prototype.getPositions = function (corner, x, y) {\n        switch (corner) {\n            case 'ResizeEast':\n                return { x: x, y: 0 };\n            case 'ResizeSouthEast':\n                return { x: x, y: y };\n            case 'ResizeSouth':\n                return { x: 0, y: y };\n            case 'ResizeNorth':\n                return { x: 0, y: -y };\n            case 'ResizeNorthEast':\n                return { x: x, y: -y };\n            case 'ResizeNorthWest':\n                return { x: -x, y: -y };\n            case 'ResizeWest':\n                return { x: -x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -x, y: y };\n        }\n        return { x: x, y: y };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n *\n * @hidden\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, base) {\n        return _super.call(this, commandHandler, base, true) || this;\n        //     this.action = action;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse down event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.mouseEventHelper(args);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseEventHelper = function (args) {\n        if (this.commandHandler && this.commandHandler.annotationModule) {\n            // eslint-disable-next-line\n            this.commandHandler.annotationModule.overlappedCollections = findActiveElement(args, this.pdfViewerBase, this.commandHandler, true);\n        }\n        // eslint-disable-next-line\n        var object = findActiveElement(args, this.pdfViewerBase, this.commandHandler);\n        // if (!isNullOrUndefined(object) && (object as any).shapeAnnotationType != 'Path'){\n        var isLock = false;\n        // eslint-disable-next-line\n        if (object && object.shapeAnnotationType === 'StickyNotes') {\n            // eslint-disable-next-line\n            if (object.annotationSettings && object.annotationSettings.isLock) {\n                if (this.commandHandler.annotationModule.checkAllowedInteractions('Select', object)) {\n                    isLock = false;\n                }\n                else {\n                    isLock = true;\n                }\n            }\n        }\n        if (!isLock) {\n            // eslint-disable-next-line\n            var currentSelctor = void 0;\n            if (args.source && args.annotationSelectorSettings !== null) {\n                currentSelctor = args.source.annotationSelectorSettings;\n            }\n            else {\n                currentSelctor = '';\n            }\n            if (this.commandHandler) {\n                var selectedObject = this.commandHandler.selectedItems;\n                if (selectedObject) {\n                    // eslint-disable-next-line\n                    var annotation = selectedObject.annotations[0];\n                    // eslint-disable-next-line\n                    var formField = selectedObject.formFields[0];\n                    var currentAnnot = this.commandHandler.selectedItems.annotations[0];\n                    var currentSource = args.source;\n                    if ((selectedObject.annotations.length) && args.info && !args.info.ctrlKey\n                        // eslint-disable-next-line\n                        && this.commandHandler.annotationModule && this.commandHandler.annotationModule.freeTextAnnotationModule.isInuptBoxInFocus === false) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    else if (args.info && args.info.ctrlKey && ((currentSource && currentSource.shapeAnnotationType === 'FreeText') || (currentAnnot && currentAnnot.shapeAnnotationType === 'FreeText'))) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    else if (isNullOrUndefined(object) && this.commandHandler.formDesignerModule && !((currentSource && currentSource.shapeAnnotationType === 'FreeText') || (currentAnnot && (currentAnnot.shapeAnnotationType === 'FreeText' || currentAnnot.shapeAnnotationType === 'Image' || currentAnnot.shapeAnnotationType === 'StickyNotes')))) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    if (object) {\n                        if ((isNullOrUndefined(formField) || (formField && formField.id !== object.id)) && !isNullOrUndefined(this.pdfViewerBase.isFreeTextSelected) && !this.pdfViewerBase.isFreeTextSelected) {\n                            this.commandHandler.select([object.id], currentSelctor);\n                            this.commandHandler.viewerBase.isAnnotationMouseDown = true;\n                        }\n                        this.pdfViewerBase.isFreeTextSelected = false;\n                        this.commandHandler.viewerBase.isFormFieldMouseDown = true;\n                    }\n                    if (selectedObject.annotations.length === 0 && annotation && annotation.shapeAnnotationType !== 'HandWrittenSignature' && annotation.shapeAnnotationType !== 'SignatureText' && annotation.shapeAnnotationType !== 'SignatureImage' && annotation.shapeAnnotationType !== 'Path' && !annotation.formFieldAnnotationType) {\n                        if (this.commandHandler.enableToolbar && Browser.isDevice && !this.commandHandler.enableDesktopMode) {\n                            this.commandHandler.toolbarModule.showToolbar(true);\n                        }\n                        this.commandHandler.fireAnnotationUnSelect(annotation.annotName, annotation.pageIndex, annotation);\n                    }\n                    // eslint-disable-next-line max-len\n                    if (selectedObject.formFields.length === 0 && this.commandHandler.formDesignerModule && formField && formField.formFieldAnnotationType) {\n                        // eslint-disable-next-line\n                        var field = { name: formField.name, id: formField.id, value: formField.value, fontFamily: formField.fontFamily, fontSize: formField.fontSize, fontStyle: formField.fontStyle,\n                            // eslint-disable-next-line\n                            color: formField.color, backgroundColor: formField.backgroundColor, alignment: formField.alignment, isReadonly: formField.isReadOnly, visibility: formField.visibility,\n                            // eslint-disable-next-line\n                            maxLength: formField.maxLength, isRequired: formField.isRequired, isPrint: formField.isPrint, rotation: formField.rotation, tooltip: formField.tooltip,\n                            // eslint-disable-next-line\n                            options: formField.options, isChecked: formField.isChecked, isSelected: formField.isSelected };\n                        this.commandHandler.fireFormFieldUnselectEvent('formFieldUnselect', field, formField.pageIndex);\n                    }\n                    else if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id && this.commandHandler.formFields && event.type === 'mousedown') {\n                        for (var i = 0; i < this.commandHandler.formFields.length; i++) {\n                            var formField_1 = this.commandHandler.formFields[parseInt(i.toString(), 10)];\n                            if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id === formField_1.id) {\n                                // eslint-disable-next-line\n                                var field = {\n                                    value: formField_1.value, fontFamily: formField_1.fontFamily, fontSize: formField_1.fontSize, fontStyle: formField_1.fontStyle,\n                                    // eslint-disable-next-line\n                                    color: formField_1.color, backgroundColor: formField_1.backgroundColor, alignment: formField_1.alignment, isReadonly: formField_1.isReadonly, visibility: formField_1.visibility,\n                                    // eslint-disable-next-line\n                                    maxLength: formField_1.maxLength, isRequired: formField_1.isRequired, isPrint: formField_1.isPrint, rotation: formField_1.rotateAngle, tooltip: formField_1.tooltip,\n                                    // eslint-disable-next-line\n                                    options: formField_1.options, isChecked: formField_1.isChecked, isSelected: formField_1.isSelected\n                                };\n                                if (!object) {\n                                    this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                                    this.pdfViewerBase.currentTarget = null;\n                                }\n                                else {\n                                    if (this.pdfViewerBase.currentTarget.id != event.target.id && event.target.className != 'e-pv-text-layer') {\n                                        this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                                        this.pdfViewerBase.currentTarget = null;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // } else {\n        //     if (!isNullOrUndefined(this.commandHandler))\n        //         this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n        // }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse move event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.mouseEventHelper(args);\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse leave event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/** @hidden */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, base) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        /**   @private  */\n        _this.prevNode = null;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse down event arguments.\n     * @returns {void}\n     */\n    MoveTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.offset = { x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY };\n        this.startPosition = args.position;\n        var nodeMouseDown = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: nodeMouseDown.wrapper.offsetX, y: nodeMouseDown.wrapper.offsetY,\n                width: nodeMouseDown.wrapper.actualSize.width, height: nodeMouseDown.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(nodeMouseDown)) {\n            this.redoElement.vertexPoints = nodeMouseDown.vertexPoints;\n            this.redoElement.leaderHeight = nodeMouseDown.leaderHeight;\n        }\n        this.inAction = true;\n    };\n    /**\n     * @private\n     * @param {any} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    MoveTool.prototype.mouseUp = function (args) {\n        if (this.commandHandler && args.source) {\n            this.checkisAnnotationMove(args);\n            var isDragged = false;\n            var currentSelctor = args.source.annotationSelectorSettings;\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.select([args.source.id], currentSelctor);\n            // eslint-disable-next-line max-len\n            if (this.pdfViewerBase.activeElements.activePageID == args.source.pageIndex) {\n                this.commandHandler.dragSelectedObjects(this.calculateMouseActionXDiff(args), this.calculateMouseActionYDiff(args), this.pdfViewerBase.activeElements.activePageID, currentSelctor, null);\n            }\n            if (args.source && (args.source.formFieldAnnotationType === 'Textbox' || args.source.formFieldAnnotationType === 'Checkbox'\n                || args.source.formFieldAnnotationType === 'RadioButton' || args.source.formFieldAnnotationType === 'ListBox'\n                || args.source.formFieldAnnotationType === 'SignatureField' || args.source.formFieldAnnotationType === 'InitialField' || args.source.formFieldAnnotationType === 'DropdownList'\n                || args.source.formFieldAnnotationType === 'PasswordField')) {\n                this.commandHandler.formDesignerModule.updateHTMLElement(args.source);\n            }\n            this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n            this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n            this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n            // eslint-disable-next-line\n            var newShapeObject = {\n                bounds: {\n                    x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                }, modifiedDate: args.source.modifiedDate\n            };\n            if (isLineShapes(args.source)) {\n                newShapeObject.vertexPoints = args.source.vertexPoints;\n                newShapeObject.leaderHeight = args.source.leaderHeight;\n            }\n            if (args.target && args.target.formFieldAnnotationType) {\n                var node = args.target;\n                var field = {\n                    // eslint-disable-next-line\n                    value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color, backgroundColor: node.backgroundColor, borderColor: node.borderColor,\n                    // eslint-disable-next-line\n                    thickness: node.thickness, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip, options: node.options,\n                    // eslint-disable-next-line\n                    isChecked: node.isChecked, isSelected: node.isSelected\n                };\n                // eslint-disable-next-line max-len\n                var currentPosition = { X: args.source.wrapper.offsetX, Y: args.source.wrapper.offsetY, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                // eslint-disable-next-line max-len\n                var previousPosition = { X: this.offset.x, Y: this.offset.y, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                this.commandHandler.fireFormFieldMoveEvent('formFieldMove', field, node.pageIndex, previousPosition, currentPosition);\n            }\n            // eslint-disable-next-line max-len\n            if (!isNullOrUndefined(this.redoElement) && (this.redoElement.bounds.height !== newShapeObject.bounds.height || this.redoElement.bounds.width !== newShapeObject.bounds.width || this.redoElement.bounds.x !== newShapeObject.bounds.x || this.redoElement.bounds.y !== newShapeObject.bounds.y)) {\n                isDragged = true;\n            }\n            if (this.commandHandler.annotation && isDragged) {\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Drag', '', this.redoElement, newShapeObject);\n                this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Drag');\n                this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n            }\n        }\n        var shapeAnnotationType = this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].shapeAnnotationType : null;\n        if (shapeAnnotationType && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n            _super.prototype.mouseUp.call(this, args);\n        }\n        else if (shapeAnnotationType === 'Image' || shapeAnnotationType === 'SignatureImage') {\n            this.inAction = false;\n        }\n        else if (this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n            _super.prototype.mouseUp.call(this, args);\n        }\n    };\n    MoveTool.prototype.calculateMouseXDiff = function () {\n        if (this.currentPosition && this.startPosition) {\n            return this.currentPosition.x - this.startPosition.x;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseYDiff = function () {\n        if (this.currentPosition && this.startPosition) {\n            return this.currentPosition.y - this.startPosition.y;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseActionXDiff = function (args) {\n        var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n        // let y: number = this.calculateMouseYDiff() / this.commandHandler.magnification.zoomFactor;\n        if (this.offset) {\n            var requiredX = this.offset.x + x;\n            // let requiredY: number = this.offset.y + y;\n            return requiredX - args.source.wrapper.offsetX;\n            //let diffY: number = requiredY - args.source.wrapper.offsetY;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseActionYDiff = function (args) {\n        // let x: number = this.calculateMouseXDiff() / this.commandHandler.magnification.zoomFactor;\n        var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n        if (this.offset) {\n            // let requiredX: number = this.offset.x + x;\n            var requiredY = this.offset.y + y;\n            // let diffX: number = requiredX - args.source.wrapper.offsetX;\n            return requiredY - args.source.wrapper.offsetY;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isStamp - Specified the stamp annotation or not.\n     * @param {boolean} isSkip - Specified the annotation skip or not.\n     * @returns {boolean} - Returns the true or false.\n     */\n    MoveTool.prototype.mouseMove = function (args, isStamp, isSkip) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.currentPosition = args.position;\n            this.currentTarget = args.target;\n            var currentSelctor = args.source.annotationSelectorSettings;\n            var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n            var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n            var requiredX = this.offset.x + x;\n            var requiredY = this.offset.y + y;\n            var diffX = this.calculateMouseActionXDiff(args);\n            var diffY = this.calculateMouseActionYDiff(args);\n            var selectedItem = this.commandHandler.selectedItems.annotations[0];\n            var cobject = void 0;\n            if (!this.helper) {\n                // eslint-disable-next-line\n                cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n                if (cobject.wrapper) {\n                    diffX = requiredX - cobject.wrapper.offsetX;\n                    diffY = requiredY - cobject.wrapper.offsetY;\n                    // eslint-disable-next-line max-len\n                    cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n                }\n                cobject.wrapper = undefined;\n                cobject.id = 'diagram_helper';\n                if (cobject.shapeAnnotationType === 'Stamp') {\n                    cobject.strokeColor = '';\n                    cobject.borderDashArray = '';\n                    cobject.fillColor = 'transparent';\n                    cobject.stampFillColor = 'transparent';\n                    cobject.data = '';\n                }\n                else if (cobject.shapeAnnotationType === 'FreeText') {\n                    cobject.strokeColor = 'blue';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 1;\n                    cobject.opacity = 1;\n                    cobject.dynamicText = '';\n                }\n                else if (cobject.shapeAnnotationType === 'SignatureText') {\n                    cobject.strokeColor = 'red';\n                    cobject.borderDashArray = '5,5';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 2;\n                    cobject.opacity = 1;\n                    cobject.data = '';\n                }\n                else {\n                    cobject.strokeColor = 'red';\n                    cobject.borderDashArray = '5,5';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 2;\n                    cobject.opacity = 1;\n                }\n                if (cobject.enableShapeLabel === true) {\n                    cobject.labelContent = '';\n                }\n                var shapeAnnotationType = cobject.shapeAnnotationType;\n                if (!isStamp && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n                    this.helper = cobject = this.commandHandler.add(cobject);\n                }\n                else {\n                    cobject = this.helper = args.source;\n                }\n                if (this.commandHandler.selectedItems.annotations.length > 0) {\n                    this.commandHandler.selectedItems.annotations = [cobject];\n                }\n                else {\n                    this.commandHandler.selectedItems.formFields = [cobject];\n                }\n            }\n            else {\n                diffX = requiredX - this.helper.wrapper.offsetX;\n                diffY = requiredY - this.helper.wrapper.offsetY;\n            }\n            if (this.helper && this.helper.shapeAnnotationType === 'Stamp') {\n                isStamp = true;\n            }\n            // eslint-disable-next-line max-len\n            if (this.commandHandler.checkBoundaryConstraints(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, this.helper.wrapper.bounds, isStamp, isSkip)) {\n                var shapeAnnotationType = this.helper.shapeAnnotationType;\n                if (this.helper && (shapeAnnotationType === 'Image' || shapeAnnotationType === 'SignatureImage')) {\n                    this.checkisAnnotationMove(args);\n                    // eslint-disable-next-line max-len\n                    var currentSelctor_1 = args.source.annotationSelectorSettings;\n                    this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    this.commandHandler.select([args.source.id], currentSelctor_1);\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor_1, this.helper);\n                    this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor_1);\n                }\n                else {\n                    this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor, this.helper);\n                }\n                this.prevNode = this.helper;\n                this.prevPosition = this.currentPosition;\n            }\n            else {\n                this.currentPosition = this.prevPosition;\n            }\n            if (selectedItem && selectedItem.annotName) {\n                this.commandHandler.annotation.triggerAnnotationMove(selectedItem, true);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    MoveTool.prototype.mouseLeave = function (args) {\n        var currentSelctor = args.source.annotationSelectorSettings;\n        var requiredX = this.offset.x + this.calculateMouseXDiff();\n        var requiredY = this.offset.y + this.calculateMouseYDiff();\n        var diffX = requiredX - args.source.wrapper.offsetX;\n        var diffY = requiredY - args.source.wrapper.offsetY;\n        this.commandHandler.dragSelectedObjects(diffX, diffY, this.prevPageId, currentSelctor, null);\n        this.commandHandler.renderSelector(this.prevPageId, currentSelctor);\n        _super.prototype.mouseLeave.call(this, args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    MoveTool.prototype.checkisAnnotationMove = function (args) {\n        // eslint-disable-next-line max-len\n        if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n            if (this.commandHandler.selectedItems.annotations[0].annotName === args.source.annotName) {\n                this.commandHandler.viewerBase.isAnnotationMouseMove = true;\n            }\n        }\n        else {\n            this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n        }\n        // eslint-disable-next-line max-len\n        if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n            if (this.commandHandler.selectedItems.formFields[0].name === args.source.name) {\n                this.commandHandler.viewerBase.isFormFieldMouseMove = true;\n            }\n        }\n        else {\n            this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n        }\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/** @hidden */\nvar StampTool = /** @class */ (function (_super) {\n    __extends(StampTool, _super);\n    function StampTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {any} - Returns the mouse up event.\n     */\n    // eslint-disable-next-line\n    StampTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns the true or false.\n     */\n    StampTool.prototype.mouseMove = function (args) {\n        // eslint-disable-next-line\n        var newObject;\n        if (!this.inAction) {\n            var pageIndex = this.pdfViewerBase.activeElements.activePageID;\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            // eslint-disable-next-line max-len\n            var nodeElement = this.commandHandler.annotation.stampAnnotationModule.moveStampElement(args.position.x, args.position.y, pageIndex);\n            if (nodeElement.shapeAnnotationType === 'SignatureText') {\n                var textWidth = this.getTextWidth(nodeElement.data, nodeElement.fontSize, nodeElement.fontFamily);\n                var widthRatio = 1;\n                if (textWidth > nodeElement.bounds.width)\n                    widthRatio = nodeElement.bounds.width / textWidth;\n                nodeElement.fontSize = this.getFontSize(Math.floor((nodeElement.fontSize * widthRatio)));\n                var defaultFontSize = 32; // default font size.\n                nodeElement.bounds.height = nodeElement.fontSize < defaultFontSize ? nodeElement.fontSize * 2 : nodeElement.bounds.height;\n                nodeElement.thickness = 0;\n            }\n            newObject = this.commandHandler.add(nodeElement);\n            args.source = this.commandHandler.annotations[this.commandHandler.annotations.length - 1];\n            args.sourceWrapper = args.source.wrapper;\n            this.inAction = true;\n            // eslint-disable-next-line\n            var currentSource = args.source;\n            if (currentSource && (currentSource.shapeAnnotationType === 'HandWrittenSignature' || currentSource.shapeAnnotationType === 'SignatureText' || currentSource.shapeAnnotationType === 'SignatureImage')) {\n                this['offset'] = { x: args.source.wrapper.offsetX - (args.source.wrapper.bounds.width / 2), y: args.source.wrapper.offsetY - (args.source.wrapper.bounds.height / 2) };\n            }\n            else {\n                this['offset'] = { x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY };\n            }\n            this.startPosition = args.position;\n            this.commandHandler.select([newObject.id]);\n        }\n        var currentSelctor = args.source.annotationSelectorSettings;\n        _super.prototype.mouseMove.call(this, args, true, true);\n        this.commandHandler.renderSelector(args.source.pageIndex, currentSelctor);\n        return this.inAction;\n    };\n    StampTool.prototype.getTextWidth = function (text, font, fontFamily) {\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var fontName;\n        if (font) {\n            fontName = font + 'px' + ' ' + fontFamily;\n        }\n        context.font = fontName || getComputedStyle(document.body).font;\n        return context.measureText(text).width;\n    };\n    /**\n     * @param {number} fontSize - Font size.\n     * @returns {number} - Returns the font size.\n     */\n    StampTool.prototype.getFontSize = function (fontSize) {\n        return (fontSize % 2 === 0) ? fontSize : --fontSize;\n    };\n    return StampTool;\n}(MoveTool));\nexport { StampTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar InkDrawingTool = /** @class */ (function (_super) {\n    __extends(InkDrawingTool, _super);\n    function InkDrawingTool(commandHandler, base, sourceObject) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.mouseDown = function (args) {\n        this.pdfViewerBase.disableTextSelectionMode();\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        // eslint-disable-next-line\n        var node = { currentPosition: this.currentPosition, prevPosition: this.prevPosition };\n        this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    InkDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            // eslint-disable-next-line\n            var node = { currentPosition: this.currentPosition, prevPosition: this.pdfViewerBase.prevPosition };\n            this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n        }\n        return this.inAction;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true.\n     */\n    InkDrawingTool.prototype.mouseUp = function (args) {\n        this.commandHandler.annotation.inkAnnotationModule.storePathData();\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.mouseLeave = function (args) {\n        //this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return InkDrawingTool;\n}(ToolBase));\nexport { InkDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, base, endPoint) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.annotations) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            connectors = args.source.annotations[0];\n        }\n        this.initialPosition = args.position;\n        this.prevSource = this.commandHandler.selectedItems.annotations[0];\n        var nodeElement = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: nodeElement.wrapper.offsetX, y: nodeElement.wrapper.offsetY,\n                width: nodeElement.wrapper.actualSize.width, height: nodeElement.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(nodeElement)) {\n            this.redoElement.vertexPoints = nodeElement.vertexPoints;\n            this.redoElement.leaderHeight = nodeElement.leaderHeight;\n            if (nodeElement.measureType === 'Distance' || nodeElement.measureType === 'Perimeter' || nodeElement.measureType === 'Area' || nodeElement.measureType === 'Volume') {\n                this.redoElement.notes = nodeElement.notes;\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseUp = function (args) {\n        if (this.commandHandler) {\n            var node = this.commandHandler.selectedItems.annotations[0];\n            var isResized = false;\n            if (node) {\n                // eslint-disable-next-line\n                var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n                var annotationMaxHeight = 0;\n                var annotationMaxWidth = 0;\n                var annotationMinHeight = 0;\n                var annotationMinWidth = 0;\n                // eslint-disable-next-line max-len\n                if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n                    annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n                    annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n                    annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n                    annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n                }\n                if (node.vertexPoints.length > 3) {\n                    // eslint-disable-next-line\n                    var sizeObject = this.commandHandler.viewerBase.checkAnnotationWidth(node.vertexPoints);\n                    var width = sizeObject.width;\n                    var height = sizeObject.height;\n                    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n                        // eslint-disable-next-line max-len\n                        if ((height > annotationMinHeight && height < annotationMaxHeight) || (width > annotationMinWidth && width < annotationMaxWidth)) {\n                            // eslint-disable-next-line max-len\n                            this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line max-len\n                        this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                    }\n                }\n                else {\n                    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n                        if (node.shapeAnnotationType === 'Line' || node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'LineWidthArrowHead') {\n                            var x = 0;\n                            var y = 0;\n                            if (node.vertexPoints[0].x > node.vertexPoints[1].x) {\n                                x = node.vertexPoints[0].x - node.vertexPoints[1].x;\n                            }\n                            else {\n                                x = node.vertexPoints[1].x - node.vertexPoints[0].x;\n                            }\n                            if (node.vertexPoints[0].y > node.vertexPoints[1].y) {\n                                y = node.vertexPoints[0].y - node.vertexPoints[1].y;\n                            }\n                            else {\n                                y = node.vertexPoints[1].y - node.vertexPoints[0].y;\n                            }\n                            var diff = (x > y) ? x : y;\n                            if (diff < (annotationMaxHeight || annotationMaxWidth) && diff > (annotationMinHeight || annotationMinWidth)) {\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                            }\n                        }\n                        else {\n                            // eslint-disable-next-line max-len\n                            this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line max-len\n                        this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                    }\n                }\n                var currentSelctor = args.source.annotationSelectorSettings;\n                this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                this.commandHandler.select([this.prevSource.id], currentSelctor);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n                // eslint-disable-next-line\n                var newShapeElementObject = {\n                    bounds: {\n                        x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                        width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                    }\n                };\n                if (node.measureType === 'Distance' || node.measureType === 'Perimeter' || node.measureType === 'Area' || node.measureType === 'Volume') {\n                    this.commandHandler.annotation.updateCalibrateValues(this.commandHandler.selectedItems.annotations[0]);\n                    newShapeElementObject.notes = args.source.notes;\n                }\n                if (isLineShapes(args.source)) {\n                    newShapeElementObject.vertexPoints = args.source.vertexPoints;\n                    newShapeElementObject.leaderHeight = args.source.leaderHeight;\n                }\n                if (this.redoElement.bounds.height !== newShapeElementObject.bounds.height || this.redoElement.bounds.width !== newShapeElementObject.bounds.width || this.redoElement.bounds.x !== newShapeElementObject.bounds.x || this.redoElement.bounds.y !== newShapeElementObject.bounds.y) {\n                    isResized = true;\n                }\n                if (isResized) {\n                    // eslint-disable-next-line\n                    this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newShapeElementObject);\n                }\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var connector;\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            if (args.source && args.source.annotations) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                connector = args.source.annotations[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (!this.helper) {\n                    // eslint-disable-next-line\n                    var cloneShapebject = cloneObject(this.commandHandler.selectedItems.annotations[0]);\n                    cloneShapebject.id = 'diagram_helper';\n                    cloneShapebject.strokeColor = 'red';\n                    cloneShapebject.borderDashArray = '5,5';\n                    cloneShapebject.fillColor = 'transparent';\n                    cloneShapebject.thickness = 2;\n                    cloneShapebject.opacity = 1;\n                    if (cloneShapebject.enableShapeLabel === true) {\n                        cloneShapebject.labelContent = '';\n                    }\n                    this.helper = cloneShapebject = this.commandHandler.add(cloneShapebject);\n                    this.commandHandler.selectedItems.annotations = [cloneShapebject];\n                }\n                var currentSelctor = args.source.annotationSelectorSettings;\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.helper, this.currentPosition, this.selectedSegment, args.target, null, currentSelctor);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Scales the selected objects\n *\n * @hidden\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, base, corner) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n        this.initialPosition = args.position;\n        var node = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: node.wrapper.offsetX, y: node.wrapper.offsetY,\n                width: node.wrapper.actualSize.width, height: node.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(node)) {\n            this.redoElement.vertexPoints = node.vertexPoints;\n            this.redoElement.leaderHeight = node.leaderHeight;\n        }\n        if (node.measureType === 'Radius') {\n            this.redoElement.notes = node.notes;\n        }\n        // eslint-disable-next-line max-len\n        this.prevSource = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0] : this.commandHandler.selectedItems.formFields[0];\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isPreventHistory - Specified the prevent history value.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        var object = args.source;\n        var oldObject = cloneObject(args.source);\n        var isResized = false;\n        if (this.commandHandler && this.prevSource) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.viewerBase.isAnnotationSelect = true;\n            this.commandHandler.viewerBase.isFormFieldSelect = true;\n            this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n            // eslint-disable-next-line max-len\n            var deltaValues = this.updateSize(this.prevSource, this.currentPosition, this.initialPosition, this.corner, this.initialBounds, null, true);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.initialPosition, this.prevSource, args.info.ctrlKey);\n            if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations &&\n                this.commandHandler.selectedItems.annotations[0] && this.commandHandler.selectedItems.annotations[0].shapeAnnotationType === 'Stamp') {\n                if (this.commandHandler.stampSettings.minHeight || this.commandHandler.stampSettings.minWidth) {\n                    this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n                }\n            }\n            if (this.commandHandler.selectedItems.formFields.length > 0 && (this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Textbox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Checkbox'\n                || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'RadioButton' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'InitialField' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'SignatureField'\n                || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'DropdownList' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'ListBox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'PasswordField')) {\n                if (this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'SignatureField') {\n                    this.commandHandler.selectedItems.formFields[0].signatureIndicatorSettings = this.commandHandler.selectedItems.formFields[0].signatureIndicatorSettings ? this.commandHandler.selectedItems.formFields[0].signatureIndicatorSettings : { opacity: 1, backgroundColor: 'rgba(255, 228, 133, 0.35)', width: 19, height: 10, fontSize: 10, text: null, color: 'black' };\n                }\n                this.commandHandler.formDesignerModule.updateHTMLElement(this.commandHandler.selectedItems.formFields[0]);\n            }\n            this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n            if (this.commandHandler.annotation && args.source.wrapper) {\n                // eslint-disable-next-line\n                var newObject = {\n                    bounds: {\n                        x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                        width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                    }\n                };\n                if (isLineShapes(args.source)) {\n                    newObject.vertexPoints = args.source.vertexPoints;\n                    newObject.leaderHeight = args.source.leaderHeight;\n                }\n                if (this.redoElement.bounds.height !== newObject.bounds.height || this.redoElement.bounds.width !== newObject.bounds.width || this.redoElement.bounds.x !== newObject.bounds.x || this.redoElement.bounds.y !== newObject.bounds.y) {\n                    isResized = true;\n                }\n                if (this.prevSource.measureType === 'Radius' && isResized) {\n                    newObject.notes = args.source.notes;\n                    this.commandHandler.annotation.updateCalibrateValues(this.prevSource);\n                }\n                if (this.prevSource.shapeAnnotationType === 'SignatureText') {\n                    var boundsRatio = newObject.bounds.width / oldObject.width;\n                    newObject.fontSize = this.prevSource.wrapper.children[1].style.fontSize * boundsRatio;\n                    if (args.target != null) {\n                        args.target.fontSize = newObject.fontSize;\n                        // eslint-disable-next-line\n                        args.target.wrapper.children[1].style.fontSize = newObject.fontSize;\n                        args.target.wrapper.children[1].horizontalAlignment = 'Center';\n                        args.target.wrapper.children[1].verticalAlignment = 'Center';\n                        args.target.wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                        // eslint-disable-next-line\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].style.fontSize = newObject.fontSize;\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].horizontalAlignment = 'Center';\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].verticalAlignment = 'Center';\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                        this.commandHandler.selectedItems.annotations[0].fontSize = newObject.fontSize;\n                    }\n                }\n                if ((this.prevSource.shapeAnnotationType === 'SignatureText') && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.nodePropertyChange(this.commandHandler.selectedItems.annotations[0], { fontSize: newObject.fontSize });\n                }\n                if (isResized) {\n                    // eslint-disable-next-line\n                    this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newObject);\n                }\n            }\n            if (args.target && args.target.formFieldAnnotationType) {\n                var node = args.target;\n                // eslint-disable-next-line\n                var field = { value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                    // eslint-disable-next-line\n                    options: node.options, isChecked: node.isChecked, isSelected: node.isSelected };\n                // eslint-disable-next-line max-len\n                var currentPosition = { X: args.source.wrapper.offsetX, Y: args.source.wrapper.offsetY, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                // eslint-disable-next-line max-len\n                var previousPosition = { X: this.initialBounds.x, Y: this.initialBounds.y, Width: this.initialBounds.width, Height: this.initialBounds.height };\n                this.commandHandler.fireFormFieldResizeEvent('formFieldResize', field, node.pageIndex, previousPosition, currentPosition);\n            }\n            if (this.commandHandler.annotation && this.commandHandler.annotation.stampAnnotationModule) {\n                this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, this.prevSource.id, 'Resize');\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object = args.source;\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        x = x / this.commandHandler.viewerBase.getZoomFactor();\n        y = y / this.commandHandler.viewerBase.getZoomFactor();\n        // eslint-disable-next-line\n        var annotationElement = args.source;\n        // eslint-disable-next-line\n        var size = this.getPoints(x, y);\n        var width = annotationElement.width + size.x;\n        var height = annotationElement.height + size.y;\n        // eslint-disable-next-line\n        var obj = object;\n        if (object && object.annotations) {\n            // eslint-disable-next-line\n            obj = object.annotations[0];\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            // eslint-disable-next-line max-len\n            if ((height >= annotationMinHeight && height <= annotationMaxHeight) && (width >= annotationMinWidth && width <= annotationMaxWidth)) {\n                // eslint-disable-next-line\n                x = x;\n                // eslint-disable-next-line\n                y = y;\n            }\n            else {\n                if (height < annotationMinHeight || height > annotationMaxHeight) {\n                    if (height < annotationMinHeight) {\n                        y = annotationMinHeight - annotationElement.height;\n                    }\n                    else {\n                        y = annotationMaxHeight - annotationElement.height;\n                    }\n                }\n                if (width < annotationMinWidth || width > annotationMaxWidth) {\n                    if (width < annotationMinWidth) {\n                        x = annotationMinWidth - annotationElement.width;\n                    }\n                    else {\n                        x = annotationMaxWidth - annotationElement.width;\n                    }\n                }\n            }\n        }\n        var changes = { x: x, y: y };\n        if (this.currentElement.wrapper) {\n            changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        }\n        changes = this.getChanges(changes);\n        this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n        if (!this.helper) {\n            // eslint-disable-next-line\n            var cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n            cobject.id = 'diagram_helper';\n            if (cobject.shapeAnnotationType === 'Stamp') {\n                cobject.strokeColor = '';\n                cobject.borderDashArray = '';\n                cobject.fillColor = 'transparent';\n                cobject.stampFillColor = 'transparent';\n                cobject.data = '';\n            }\n            else if (cobject.shapeAnnotationType === 'FreeText') {\n                cobject.strokeColor = 'blue';\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 1;\n                cobject.opacity = 1;\n                cobject.dynamicText = '';\n            }\n            else {\n                // eslint-disable-next-line max-len\n                cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n                cobject.strokeColor = 'red';\n                cobject.borderDashArray = '5,5';\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 2;\n                cobject.opacity = 1;\n            }\n            if (cobject.enableShapeLabel === true) {\n                cobject.labelContent = '';\n            }\n            if (cobject.shapeAnnotationType === 'SignatureText') {\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 1;\n                cobject.opacity = 1;\n                cobject.data = '';\n            }\n            this.helper = cobject = this.commandHandler.add(cobject);\n            if (this.commandHandler.selectedItems.annotations.length > 0) {\n                this.commandHandler.selectedItems.annotations = [cobject];\n            }\n            else {\n                this.commandHandler.selectedItems.formFields = [cobject];\n            }\n        }\n        var deltaValues = this.updateSize(this.helper, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        // eslint-disable-next-line max-len\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, this.helper, args.info.ctrlKey));\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (pdfAnnotationBaseModel) {\n        return 'W:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.width) + ' ' + 'H:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    ResizeTool.prototype.getPoints = function (x, y) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: x, y: 0 };\n            case 'ResizeSouthEast':\n                return { x: x, y: y };\n            case 'ResizeSouth':\n                return { x: 0, y: y };\n            case 'ResizeNorth':\n                return { x: 0, y: -y };\n            case 'ResizeNorthEast':\n                return { x: x, y: -y };\n            case 'ResizeNorthWest':\n                return { x: -x, y: -y };\n            case 'ResizeWest':\n                return { x: -x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -x, y: y };\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     * Aspect ratio used to resize the width or height based on resizing the height or width.\n     *\n     * @param {number} deltaWidth - Specified the delta width.\n     * @param {number} deltaHeight - Specified the delta height.\n     * @param {string} corner - Specified the corner value.\n     * @param {PointModel} startPoint - Specified the start point of the annotation.\n     * @param {PointModel} endPoint - Specified the end point of the annotation.\n     * @param {SelectorModel | PdfAnnotationBaseModel} source - Specified the annotation object.\n     * @param {boolean} isCtrlKeyPressed - becomes true when ctrl Key is pressed.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source, isCtrlKeyPressed) {\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(source) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        x = x / this.commandHandler.viewerBase.getZoomFactor();\n        y = y / this.commandHandler.viewerBase.getZoomFactor();\n        // eslint-disable-next-line\n        var annotationElement = source;\n        // eslint-disable-next-line\n        var size = this.getPoints(x, y);\n        var width = annotationElement.bounds.width + size.x;\n        var height = annotationElement.bounds.height + size.y;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        if (source instanceof Selector && source.annotations.length === 1 &&\n            (source.annotations[0].shapeAnnotationType === 'Perimeter' || source.annotations[0].shapeAnnotationType === 'Radius' || source.shapeAnnotationType === 'Stamp')) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        else if (source.shapeAnnotationType === 'Image' || (source.shapeAnnotationType === 'HandWrittenSignature' || source.shapeAnnotationType === 'SignatureText' || source.shapeAnnotationType === 'SignatureImage')) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                if (isCtrlKeyPressed) {\n                    if (width >= annotationMaxWidth && height < annotationMaxHeight) {\n                        deltaHeight = Math.max(deltaHeight, deltaWidth);\n                    }\n                    if (height >= annotationMaxHeight && width < annotationMaxWidth) {\n                        deltaWidth = Math.max(deltaHeight, deltaWidth);\n                    }\n                    if (width < annotationMaxWidth && height < annotationMaxHeight) {\n                        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n                    }\n                }\n            }\n            if (!isCtrlKeyPressed) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n        }\n        else {\n            if (source.shapeAnnotationType === 'Perimeter' || source.shapeAnnotationType === 'Radius'\n                || source.shapeAnnotationType === 'Stamp') {\n                if (source.shapeAnnotationType === 'Stamp') {\n                    if (!annotationMaxHeight && !deltaHeight) {\n                        deltaHeight = Math.max(deltaHeight === 1 ? 0 : deltaHeight);\n                    }\n                    if (!annotationMaxWidth && !deltaWidth) {\n                        deltaWidth = Math.max(deltaWidth === 1 ? 0 : deltaWidth);\n                    }\n                }\n                else {\n                    if (!annotationMaxHeight || !annotationMaxWidth) {\n                        if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                            deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                        }\n                    }\n                }\n            }\n        }\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, base, sourceObject) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        if (!isNaN(this.pdfViewerBase.activeElements.activePageID) && event.target.className != 'e-pv-page-container') {\n            _super.prototype.mouseDown.call(this, args);\n            this.inAction = true;\n            var node = { bounds: { x: 100, y: 300, width: 100, height: 100 }, pageIndex: 0, strokeColor: 'red', thickness: 3 };\n            node.id = randomId();\n            this.sourceObject.pageIndex = node.pageIndex = this.pdfViewerBase.activeElements.activePageID || 0;\n            this.sourceObject.enableShapeLabel = this.commandHandler.enableShapeLabel;\n            this.pdfViewerBase.updateFreeTextProperties(this.sourceObject);\n            this.isFormDesign = false;\n            // eslint-disable-next-line\n            var formFieldElement = document.getElementById('FormField_helper_html_element');\n            if (formFieldElement) {\n                formFieldElement.remove();\n            }\n            // eslint-disable-next-line\n            this.commandHandler.drawingObject = this.drawingObject = this.commandHandler.add(this.sourceObject || node);\n            if (this.drawingObject.formFieldAnnotationType === 'Textbox' || this.drawingObject.formFieldAnnotationType === 'SignatureField' || this.drawingObject.formFieldAnnotationType === 'InitialField' ||\n                this.drawingObject.formFieldAnnotationType === 'Checkbox' || this.drawingObject.formFieldAnnotationType === 'ListBox' || this.drawingObject.formFieldAnnotationType === 'RadioButton' ||\n                this.drawingObject.formFieldAnnotationType === 'DropdownList' || this.drawingObject.formFieldAnnotationType === 'PasswordField') {\n                this.inAction = false;\n                // eslint-disable-next-line\n                this.drawingObject.pageNumber = this.pdfViewerBase.getActivePage(true);\n                // eslint-disable-next-line\n                var bounds = this.commandHandler.formDesignerModule.updateFormFieldInitialSize(this.drawingObject.wrapper.children[0], this.drawingObject.formFieldAnnotationType);\n                var pageIndex = this.drawingObject.pageIndex;\n                var page = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex);\n                var pageWidth = page.clientWidth - bounds.width;\n                var pageHeight = page.clientHeight - bounds.height;\n                // eslint-disable-next-line\n                var left = page.offsetLeft;\n                var offsetX = void 0;\n                // eslint-disable-next-line\n                if (this.currentPosition.y >= pageHeight && event.target && event.target.parentElement && event.target.parentElement.classList.contains('foreign-object') && event.path) {\n                    // eslint-disable-next-line\n                    var targetParentRect = event.path[3].getBoundingClientRect();\n                    // eslint-disable-next-line\n                    offsetX = event.clientX - targetParentRect.left;\n                }\n                else if (isNullOrUndefined(event.path) && (this.drawingObject.formFieldAnnotationType === 'SignatureField' || this.drawingObject.formFieldAnnotationType === 'InitialField')) {\n                    offsetX = this.currentPosition.x;\n                }\n                else {\n                    offsetX = this.currentPosition.x - left;\n                }\n                // eslint-disable-next-line\n                var rect = void 0;\n                if (this.currentPosition.x >= pageWidth && this.currentPosition.y >= pageHeight) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: pageWidth, y: pageHeight, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else if (this.currentPosition.x >= pageWidth) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: pageWidth, y: this.currentPosition.y, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else if (this.currentPosition.y >= pageHeight) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: offsetX, y: pageHeight, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else {\n                    // eslint-disable-next-line max-len\n                    rect = { x: this.currentPosition.x, y: this.currentPosition.y, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                this.updateNodeDimension(this.drawingObject, rect);\n                this.drawingObject.bounds.x = this.drawingObject.bounds.x - (this.drawingObject.bounds.width / 2);\n                this.drawingObject.bounds.y = this.drawingObject.bounds.y - (this.drawingObject.bounds.height / 2);\n                this.commandHandler.formFieldCollection.push(this.drawingObject);\n                var drawingObject = this.drawingObject;\n                // eslint-disable-next-line max-len\n                var formField = {\n                    id: drawingObject.id, name: drawingObject.name, value: drawingObject.value,\n                    // eslint-disable-next-line max-len\n                    type: drawingObject.formFieldAnnotationType, isReadOnly: drawingObject.isReadonly, fontFamily: drawingObject.fontFamily,\n                    // eslint-disable-next-line max-len\n                    fontSize: drawingObject.fontSize, fontStyle: drawingObject.fontStyle, color: drawingObject.color, backgroundColor: drawingObject.backgroundColor,\n                    // eslint-disable-next-line max-len\n                    alignment: drawingObject.alignment, visibility: drawingObject.visibility, maxLength: drawingObject.maxLength, isRequired: drawingObject.isRequired,\n                    // eslint-disable-next-line max-len\n                    isPrint: drawingObject.isPrint, isSelected: drawingObject.isSelected, isChecked: drawingObject.isChecked, tooltip: drawingObject.tooltip, bounds: drawingObject.bounds, thickness: drawingObject.thickness, borderColor: drawingObject.borderColor,\n                    // eslint-disable-next-line max-len\n                    signatureIndicatorSettings: drawingObject.signatureIndicatorSettings, pageIndex: drawingObject.pageIndex, pageNumber: drawingObject.pageNumber, isMultiline: drawingObject.isMultiline, insertSpaces: drawingObject.insertSpaces, isTransparent: drawingObject.isTransparent, rotateAngle: drawingObject.rotateAngle,\n                    selectedIndex: drawingObject.selectedIndex, options: drawingObject.options ? drawingObject.options : [],\n                    signatureType: drawingObject.signatureType, zIndex: drawingObject.zIndex\n                };\n                this.commandHandler.formFieldCollections.push(formField);\n                // eslint-disable-next-line max-len\n                this.commandHandler.formDesignerModule.drawHTMLContent(this.drawingObject.formFieldAnnotationType, this.drawingObject.wrapper.children[0], this.drawingObject, this.drawingObject.pageIndex, this.commandHandler);\n                this.commandHandler.select([this.commandHandler.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n                if (this.commandHandler.annotation) {\n                    this.commandHandler.annotation.addAction(this.pdfViewerBase.getActivePage(true), null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n                }\n                this.endAction();\n                this.pdfViewerBase.tool = null;\n                this.pdfViewerBase.action = 'Select';\n                this.drawingObject = null;\n                this.pdfViewerBase.isMouseDown = false;\n                this.pdfViewerBase.pdfViewer.drawingObject = null;\n                this.isFormDesign = true;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.dragging = true;\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.updateNodeDimension(this.drawingObject, rect);\n            if (this.drawingObject.shapeAnnotationType === 'Radius') {\n                this.updateRadiusLinePosition(this.drawingObject.wrapper.children[1], this.drawingObject);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.dragging) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.select([this.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n            var drawnAnnotation = this.commandHandler.selectedItems.annotations[0];\n            if (!isNullOrUndefined(drawnAnnotation) && !isNullOrUndefined(drawnAnnotation.wrapper)) {\n                this.commandHandler.nodePropertyChange(drawnAnnotation, { bounds: { x: drawnAnnotation.wrapper.offsetX, y: drawnAnnotation.wrapper.offsetY } });\n                this.commandHandler.annotation.updateCalibrateValues(this.drawingObject, true);\n                if (this.commandHandler && !this.isFormDesign) {\n                    // eslint-disable-next-line\n                    this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n                }\n                this.dragging = false;\n                _super.prototype.mouseUp.call(this, args);\n                this.inAction = false;\n            }\n        }\n        else {\n            _super.prototype.mouseUp.call(this, args);\n        }\n        this.drawingObject = null;\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @param {Rect} rect - Specified the annotation rect element.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.updateNodeDimension = function (obj, rect) {\n        var zoom = this.commandHandler.viewerBase.getZoomFactor();\n        obj.bounds.x = (rect.x / zoom) + rect.width / zoom;\n        obj.bounds.y = (rect.y / zoom) + rect.height / zoom;\n        obj.bounds.width = rect.width / zoom;\n        obj.bounds.height = rect.height / zoom;\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        if (annotationSettings.maxWidth || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            if (obj.bounds.width > annotationMaxWidth) {\n                obj.bounds.width = annotationMaxWidth;\n            }\n            if (obj.bounds.height > annotationMaxHeight) {\n                obj.bounds.height = annotationMaxHeight;\n            }\n            if (obj.bounds.height <= annotationMaxHeight && obj.bounds.width <= annotationMaxWidth) {\n                this.commandHandler.nodePropertyChange(obj, { bounds: obj.bounds });\n            }\n        }\n        else {\n            this.commandHandler.nodePropertyChange(obj, { bounds: obj.bounds });\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} obj - Specified the drawing element.\n     * @param {PdfAnnotationBaseModel} node - Specified the annotation object.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.updateRadiusLinePosition = function (obj, node) {\n        var trasPoint = { x: node.bounds.x + (node.bounds.width / 4), y: node.bounds.y };\n        var center = { x: (node.bounds.x + (node.bounds.width / 2)), y: (node.bounds.y + (node.bounds.height / 2)) };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n        var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n        var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y };\n        obj.offsetX = newPoint1.x;\n        obj.offsetY = newPoint1.y;\n        obj.width = node.bounds.width / 2;\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n        var annotationMaxWidth = 0;\n        if (annotationSettings.maxWidth) {\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            if (node.bounds.width > annotationMaxWidth) {\n                node.bounds.width = annotationMaxWidth;\n                obj.width = node.bounds.width / 2;\n            }\n        }\n        this.commandHandler.renderDrawing(undefined, node.pageIndex);\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n *\n * @hidden\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler, base, action) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var nodeAnnotElement = {\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPoint.x / this.pdfViewerBase.getZoomFactor(), y: this.startPoint.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                shapeAnnotationType: 'Line', fillColor: this.commandHandler.drawingObject.fillColor,\n                strokeColor: this.commandHandler.drawingObject.strokeColor, pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                // eslint-disable-next-line max-len\n                notes: this.commandHandler.drawingObject.notes, thickness: this.commandHandler.drawingObject.thickness, author: this.commandHandler.drawingObject.author,\n                subject: this.commandHandler.drawingObject.subject, borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n                modifiedDate: this.commandHandler.drawingObject.modifiedDate, borderStyle: this.commandHandler.drawingObject.borderStyle,\n                // eslint-disable-next-line max-len\n                measureType: this.commandHandler.drawingObject.measureType, enableShapeLabel: this.commandHandler.enableShapeLabel, opacity: this.commandHandler.drawingObject.opacity\n            };\n            this.pdfViewerBase.updateFreeTextProperties(nodeAnnotElement);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(nodeAnnotElement);\n        }\n        else {\n            var pt = void 0;\n            var obj = (this.drawingObject);\n            pt = obj.vertexPoints[obj.vertexPoints.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            var lastPoint = this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1];\n            if (!(lastPoint.x === pt.x && lastPoint.x === pt.y)) {\n                this.drawingObject.vertexPoints.push(pt);\n            }\n            this.commandHandler.nodePropertyChange(obj, { vertexPoints: obj.vertexPoints });\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.dragging = true;\n            var obj = (this.drawingObject);\n            if (this.drawingObject && this.currentPosition) {\n                obj.vertexPoints[obj.vertexPoints.length - 1].x = this.currentPosition.x / this.pdfViewerBase.getZoomFactor();\n                obj.vertexPoints[obj.vertexPoints.length - 1].y = this.currentPosition.y / this.pdfViewerBase.getZoomFactor();\n                this.commandHandler.nodePropertyChange(obj, { vertexPoints: obj.vertexPoints });\n            }\n            if (obj.measureType === 'Perimeter') {\n                updatePerimeterLabel(obj, obj.vertexPoints, this.commandHandler.annotation.measureAnnotationModule);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isDoubleClineck - Specified the double click event or not.\n     * @param {boolean} isMouseLeave - Specified the mouse leave event or not.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseUp = function (args, isDoubleClineck, isMouseLeave) {\n        _super.prototype.mouseMove.call(this, args);\n        // eslint-disable-next-line\n        var currentSelector;\n        if (args.source && args.annotationSelectorSettings !== null) {\n            currentSelector = args.source.annotationSelectorSettings;\n        }\n        if (this.drawingObject) {\n            // eslint-disable-next-line max-len\n            var bounds = new Rect(this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].x - 20, this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].y - 20, 40, 40);\n            var point = { x: this.drawingObject.vertexPoints[0].x, y: this.drawingObject.vertexPoints[0].y };\n            if ((bounds.containsPoint(point) || isDoubleClineck) && this.dragging) {\n                if (this.inAction) {\n                    this.inAction = false;\n                    if (this.drawingObject) {\n                        if (!isMouseLeave) {\n                            if (this.drawingObject.vertexPoints.length > 2) {\n                                this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                            }\n                        }\n                        if (this.action === 'Polygon') {\n                            if (!isMouseLeave) {\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1] = this.drawingObject.vertexPoints[0];\n                            }\n                            else {\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length] = this.drawingObject.vertexPoints[0];\n                            }\n                            this.commandHandler.nodePropertyChange(this.drawingObject, { vertexPoints: this.drawingObject.vertexPoints });\n                            var cobject = cloneObject(this.drawingObject);\n                            cobject.shapeAnnotationType = 'Polygon';\n                            cobject.bounds.width = cobject.wrapper.actualSize.width;\n                            cobject.bounds.height = cobject.wrapper.actualSize.height;\n                            cobject.bounds.x = this.drawingObject.wrapper.bounds.x;\n                            cobject.bounds.y = this.drawingObject.wrapper.bounds.y;\n                            this.commandHandler.add(cobject);\n                            this.commandHandler.remove(this.drawingObject);\n                            this.commandHandler.select([cobject.id], currentSelector);\n                            var drawingObject = this.commandHandler.selectedItems.annotations[0];\n                            if (drawingObject) {\n                                if (this.commandHandler.enableShapeAnnotation && (isNullOrUndefined(drawingObject.measureType) || drawingObject.measureType === '')) {\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.annotation.shapeAnnotationModule.renderShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                                }\n                                if (this.commandHandler.enableMeasureAnnotation && (drawingObject.measureType === 'Area' || drawingObject.measureType === 'Volume')) {\n                                    if (drawingObject.measureType === 'Area') {\n                                        // eslint-disable-next-line max-len\n                                        drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateArea(drawingObject.vertexPoints);\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                                    }\n                                    else if (drawingObject.measureType === 'Volume') {\n                                        // eslint-disable-next-line max-len\n                                        drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateVolume(drawingObject.vertexPoints);\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                                    }\n                                    if (drawingObject.enableShapeLabel) {\n                                        drawingObject.labelContent = drawingObject.notes;\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.nodePropertyChange(drawingObject, { vertexPoints: drawingObject.vertexPoints, notes: drawingObject.notes });\n                                    }\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isMouseLeave) {\n                                if (isDoubleClineck) {\n                                    this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                                }\n                            }\n                            this.commandHandler.nodePropertyChange(this.drawingObject, {\n                                // eslint-disable-next-line max-len\n                                vertexPoints: this.drawingObject.vertexPoints, sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes\n                            });\n                            this.commandHandler.select([this.drawingObject.id], currentSelector);\n                            if (this.commandHandler.enableMeasureAnnotation && this.drawingObject.measureType === 'Perimeter') {\n                                this.commandHandler.renderDrawing(null, this.drawingObject.pageIndex);\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculatePerimeter(this.drawingObject);\n                                if (this.drawingObject.enableShapeLabel) {\n                                    this.drawingObject.labelContent = this.drawingObject.notes;\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.nodePropertyChange(this.drawingObject, { vertexPoints: this.drawingObject.vertexPoints, notes: this.drawingObject.notes });\n                                }\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(this.drawingObject.annotName, this.drawingObject.notes);\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(this.drawingObject, this.drawingObject.pageIndex);\n                            }\n                        }\n                        var annotationObject = this.commandHandler.selectedItems.annotations[0];\n                        // eslint-disable-next-line\n                        this.commandHandler.annotation.addAction(this.pageIndex, null, annotationObject, 'Addition', '', annotationObject, annotationObject);\n                        this.drawingObject = null;\n                    }\n                }\n                this.endAction();\n            }\n            else if (this.inAction && !this.dragging) {\n                this.commandHandler.remove(this.drawingObject);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args, true, true);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n        this.commandHandler.tool = '';\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar LineTool = /** @class */ (function (_super) {\n    __extends(LineTool, _super);\n    function LineTool(commandHandler, base, endPoint, drawingObject) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        _this.endPoint = endPoint;\n        _this.drawingObject = drawingObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        _super.prototype.mouseDown.call(this, args);\n        var oldPointValue;\n        var connectorsShape;\n        if (args.source && args.source.annotations) {\n            oldPointValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectorsShape = this.drawingObject;\n        }\n        this.initialPosition = args.position;\n        this.prevSource = this.drawingObject;\n        this.currentPosition = args.position;\n        if (!this.drawingObject) {\n            var measureModule = this.commandHandler.annotation.measureAnnotationModule;\n            var annotationNode = {\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.startPosition.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes, measureType: 'Distance',\n                // eslint-disable-next-line max-len\n                fillColor: this.commandHandler.drawingObject.fillColor, notes: this.commandHandler.drawingObject.notes, strokeColor: this.commandHandler.drawingObject.strokeColor,\n                // eslint-disable-next-line max-len\n                opacity: this.commandHandler.drawingObject.opacity, thickness: this.commandHandler.drawingObject.thickness, borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n                shapeAnnotationType: 'Distance', pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                author: this.commandHandler.drawingObject.author, subject: this.commandHandler.drawingObject.subject,\n                enableShapeLabel: this.commandHandler.enableShapeLabel, leaderHeight: measureModule.leaderLength\n            };\n            this.pdfViewerBase.updateFreeTextProperties(annotationNode);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(annotationNode);\n        }\n        else if (!this.dragging) {\n            var nodeAnnot = {\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.startPosition.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                // eslint-disable-next-line max-len\n                shapeAnnotationType: this.drawingObject.shapeAnnotationType, sourceDecoraterShapes: this.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.drawingObject.taregetDecoraterShapes, fillColor: this.drawingObject.fillColor,\n                strokeColor: this.drawingObject.strokeColor, pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                // eslint-disable-next-line max-len\n                opacity: this.drawingObject.opacity || 1, borderDashArray: this.drawingObject.borderDashArray, thickness: this.drawingObject.thickness,\n                modifiedDate: this.drawingObject.modifiedDate, author: this.drawingObject.author, subject: this.drawingObject.subject,\n                lineHeadEnd: this.drawingObject.lineHeadEnd, lineHeadStart: this.drawingObject.lineHeadStart,\n                measureType: this.commandHandler.drawingObject.measureType, enableShapeLabel: this.commandHandler.enableShapeLabel\n            };\n            this.pdfViewerBase.updateFreeTextProperties(nodeAnnot);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(nodeAnnot);\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseUp = function (args) {\n        if (this.dragging) {\n            _super.prototype.mouseMove.call(this, args);\n            if (this.commandHandler) {\n                // eslint-disable-next-line\n                var currentSelector = void 0;\n                if (args.source && args.annotationSelectorSettings !== null) {\n                    currentSelector = args.source.annotationSelectorSettings;\n                }\n                else {\n                    currentSelector = '';\n                }\n                // eslint-disable-next-line\n                var node = this.drawingObject;\n                this.commandHandler.nodePropertyChange(node, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                this.commandHandler.select([node.id], currentSelector);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n            }\n            if (this.endPoint && this.endPoint.indexOf('ConnectorSegmentPoint') > -1 && this.dragging) {\n                this.commandHandler.annotation.updateCalibrateValues(this.drawingObject);\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n                this.drawingObject = null;\n                this.dragging = false;\n                _super.prototype.mouseUp.call(this, args);\n            }\n            if (this.drawingObject) {\n                this.endPoint = 'ConnectorSegmentPoint_1';\n            }\n        }\n        else {\n            if (this.drawingObject) {\n                this.commandHandler.remove(this.drawingObject);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    LineTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.currentPosition = args.position;\n            this.dragging = true;\n            if (this.currentPosition && this.prevPosition) {\n                var diffX = this.currentPosition.x - this.prevPosition.x;\n                var diffY = this.currentPosition.y - this.prevPosition.y;\n                // eslint-disable-next-line\n                var currentSelector = void 0;\n                if (args.source && args.annotationSelectorSettings !== null) {\n                    currentSelector = args.source.annotationSelectorSettings;\n                }\n                else {\n                    currentSelector = '';\n                }\n                // eslint-disable-next-line max-len\n                if (this.inAction && this.commandHandler && this.drawingObject && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                    // eslint-disable-next-line max-len\n                    this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.drawingObject, this.currentPosition, this.selectedSegment, args.target, null, currentSelector);\n                    this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n                }\n            }\n            this.prevPosition = this.currentPosition;\n        }\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    LineTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return LineTool;\n}(ToolBase));\nexport { LineTool };\n/**\n * Rotates the selected objects\n *\n * @hidden\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler, base) {\n        return _super.call(this, commandHandler, base, true) || this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseDown = function (args) {\n        var nodeMouseDown = cloneObject(args.source);\n        this.undoElement = {\n            bounds: {\n                x: nodeMouseDown.wrapper.offsetX, y: nodeMouseDown.wrapper.offsetY,\n                width: nodeMouseDown.wrapper.actualSize.width, height: nodeMouseDown.wrapper.actualSize.height\n            }, rotateAngle: nodeMouseDown.rotateAngle\n            // eslint-disable-next-line\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object = args.source;\n        // eslint-disable-next-line\n        var newShapeObject;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            // eslint-disable-next-line\n            var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n            this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n            newShapeObject = {\n                bounds: {\n                    x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                }, rotateAngle: args.source.wrapper.rotateAngle\n            };\n        }\n        // eslint-disable-next-line\n        this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Rotate', '', this.undoElement, newShapeObject);\n        this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Rotate');\n        this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object = args.source;\n        // eslint-disable-next-line\n        var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n        this.currentPosition = args.position;\n        if (object.wrapper) {\n            var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n            var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n            angle = (angle + 360) % 360;\n            this.blocked = !(this.commandHandler.rotate(angle - object.wrapper.rotateAngle, currentSelector));\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}