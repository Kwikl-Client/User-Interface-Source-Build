{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */function () {\n  function PdfFont(size, style) {\n    if (typeof size === 'number' && typeof style === 'undefined') {\n      this._size = size;\n    } else {\n      this._size = size;\n      this._style = style;\n    }\n  }\n  Object.defineProperty(PdfFont.prototype, \"size\", {\n    /**\n     * Gets the size of the PDF font.\n     *\n     * @returns {number} size.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n     * // Gets the font size\n     * let size: number = font.size;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFont.prototype, \"style\", {\n    /**\n     * Gets the style of the PDF font.\n     *\n     * @returns {PdfFontStyle} size.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n     * // Gets the font style\n     * let style: PdfFontStyle = font.style;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._style;\n    },\n    /**\n     * Sets the style of the PDF font.\n     *\n     * @param {PdfFontStyle} value to font style.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n     * // Sets the font style\n     * font.style = PdfFontStyle.italic;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    set: function (value) {\n      this._style = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n    /**\n     * Gets the boolean flag indicating whether the font has underline style or not.\n     *\n     * @returns {boolean} isUnderline.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n     * // Gets the boolean flag indicating whether the font has underline style or not.\n     * let underline: boolean = font.isUnderline;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return (this.style & PdfFontStyle.underline) > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n    /**\n     * Gets the boolean flag indicating whether the font has strike out style or not.\n     *\n     * @returns {boolean} isStrikeout.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n     * // Gets the boolean flag indicating whether the font has strike out style or not.\n     * let strikeout: boolean = font.isStrikeout;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return (this.style & PdfFontStyle.strikeout) > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n    get: function () {\n      return this._fontMetrics;\n    },\n    set: function (value) {\n      this._fontMetrics = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFont.prototype, \"isBold\", {\n    /**\n     * Gets the boolean flag indicating whether the font has bold style or not.\n     *\n     * @returns {boolean} isBold.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n     * // Gets the boolean flag indicating whether the font has bold style or not.\n     * let bold: boolean = font.isBold;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return (this.style & PdfFontStyle.bold) > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n    /**\n     * Gets the boolean flag indicating whether the font has italic style or not.\n     *\n     * @returns {boolean} isItalic.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n     * // Gets the boolean flag indicating whether the font has italic style or not.\n     * let italic: boolean = font.isItalic;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return (this.style & PdfFontStyle.italic) > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfFont.prototype, \"height\", {\n    /**\n     * Gets the font height.\n     *\n     * @returns {number} height.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n     * // Gets the font height\n     * let height: number = font.height;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._metrics._getHeight();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfFont.prototype._setInternals = function (internals) {\n    if (internals == null) {\n      throw new Error('ArgumentNullException:internals');\n    }\n    this._pdfFontInternals = internals;\n  };\n  PdfFont.prototype._getCharacterCount = function (text, symbols) {\n    if (typeof symbols === 'string') {\n      var numSymbols = 0;\n      var curIndex = 0;\n      curIndex = text.indexOf(symbols, curIndex);\n      while (curIndex !== -1) {\n        numSymbols++;\n        curIndex++;\n        curIndex = text.indexOf(symbols, curIndex);\n      }\n      return numSymbols;\n    } else {\n      var count = 0;\n      for (var i = 0; i < text.length; i++) {\n        if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n          count++;\n        }\n      }\n      return count;\n    }\n  };\n  PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n    if (typeof text === 'string' && typeof arg2 === 'undefined') {\n      return this.measureString(text, null);\n    } else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n      var temparg2 = arg2;\n      var charactersFitted = 0;\n      var linesFilled = 0;\n      return this.measureString(text, temparg2, charactersFitted, linesFilled);\n    } else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n      var temparg2 = arg2;\n      return this.measureString(text, 0, temparg2, arg3, arg4);\n    } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n      var layoutArea = [arg2, 0];\n      var temparg3 = arg3;\n      return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n    } else {\n      var temparg2 = arg2;\n      var temparg3 = arg3;\n      var layouter = new _PdfStringLayouter();\n      var result = layouter._layout(text, this, temparg3, temparg2);\n      arg4 = text.length;\n      arg5 = result._empty ? 0 : result._lines.length;\n      return result._actualSize;\n    }\n  };\n  PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n    var realWidth = width;\n    if (typeof format !== 'undefined' && format !== null && width > 0) {\n      if (format.characterSpacing !== 0) {\n        realWidth += (line.length - 1) * format.characterSpacing;\n      }\n      if (format.wordSpacing !== 0) {\n        realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n      }\n    }\n    return realWidth;\n  };\n  return PdfFont;\n}();\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */function (_super) {\n  __extends(PdfStandardFont, _super);\n  function PdfStandardFont(fontFamily, size, style) {\n    var _this = _super.call(this, size, typeof style === 'undefined' ? PdfFontStyle.regular : style) || this;\n    _this._fontFamily = fontFamily;\n    _this._checkStyle();\n    _this._initializeInternals();\n    return _this;\n  }\n  Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n    /**\n     * Gets the font family of the PDF standard font.\n     *\n     * @returns {PdfFontFamily} fontFamily.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n     * // Gets the font family\n     * let fontFamily: PdfFontFamily = font.fontFamily;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._fontFamily;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfStandardFont.prototype._checkStyle = function () {\n    if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n      this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n    }\n  };\n  /**\n   * Gets the line width.\n   *\n   * @param {string} line Line.\n   * @param {PdfStringFormat} format String format.\n   * @returns {number} width.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Gets the first page\n   * let page: PdfPage = document.getPage(0) as PdfPage;\n   * // Create a new PDF standard font\n   * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n   * // Create a new PDF string format\n   * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n   * // Get the text width\n   * let width: number = font.getLineWidth('Syncfusion', format);\n   * // Save the document\n   * document.save('output.pdf');\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfStandardFont.prototype.getLineWidth = function (line, format) {\n    var width = 0;\n    for (var i = 0, len = line.length; i < len; i++) {\n      width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n    }\n    width *= 0.001 * this._metrics._size;\n    width = this._applyFormatSettings(line, format, width);\n    return width;\n  };\n  PdfStandardFont.prototype._initializeInternals = function () {\n    this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n    this._dictionary = this._createInternals();\n  };\n  PdfStandardFont.prototype._createInternals = function () {\n    var dictionary = new _PdfDictionary();\n    dictionary._updated = true;\n    dictionary.set('Type', _PdfName.get('Font'));\n    dictionary.set('Subtype', _PdfName.get('Type1'));\n    dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n    if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n      dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n    }\n    return dictionary;\n  };\n  PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n    var width = 0;\n    var code = 0;\n    code = charCode.charCodeAt(0);\n    if (this._metrics._name === '0' || this._metrics._name === '1' || this._metrics._name === '2' || this._metrics._name === '3' || this._metrics._name === '4') {\n      code = code - 32;\n    }\n    code = code >= 0 && code !== 128 ? code : 0;\n    var widthTable = this._metrics._widthTable;\n    width = widthTable._itemAt(code);\n    return width;\n  };\n  return PdfStandardFont;\n}(PdfFont);\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */function (_super) {\n  __extends(PdfCjkStandardFont, _super);\n  function PdfCjkStandardFont(fontFamily, size, style) {\n    var _this = _super.call(this, size, typeof style === 'undefined' ? PdfFontStyle.regular : style) || this;\n    _this._fontFamily = fontFamily;\n    _this._size = size;\n    _this._initializeInternals();\n    return _this;\n  }\n  Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n    /**\n     * Gets the font family of the PDF CJK font.\n     *\n     * @returns {PdfCjkFontFamily} fontFamily.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n     * // Gets the font family\n     * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._fontFamily;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfCjkStandardFont.prototype._initializeInternals = function () {\n    this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n    this._dictionary = this._createInternals();\n  };\n  PdfCjkStandardFont.prototype._createInternals = function () {\n    var dictionary = new _PdfDictionary();\n    dictionary._updated = true;\n    dictionary.set('Type', _PdfName.get('Font'));\n    dictionary.set('Subtype', _PdfName.get('Type0'));\n    dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n    dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n    dictionary.set('DescendantFonts', this._getDescendantFont());\n    return dictionary;\n  };\n  PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n    var encoding = 'Unknown';\n    switch (fontFamily) {\n      case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n      case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n        encoding = 'UniKS-UCS2-H';\n        break;\n      case PdfCjkFontFamily.heiseiKakuGothicW5:\n      case PdfCjkFontFamily.heiseiMinchoW3:\n        encoding = 'UniJIS-UCS2-H';\n        break;\n      case PdfCjkFontFamily.monotypeHeiMedium:\n      case PdfCjkFontFamily.monotypeSungLight:\n        encoding = 'UniCNS-UCS2-H';\n        break;\n      case PdfCjkFontFamily.sinoTypeSongLight:\n        encoding = 'UniGB-UCS2-H';\n        break;\n    }\n    return new _PdfName(encoding);\n  };\n  PdfCjkStandardFont.prototype._getDescendantFont = function () {\n    var dictionary = new _PdfDictionary();\n    dictionary._updated = true;\n    dictionary.set('Type', _PdfName.get('Font'));\n    dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n    dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n    dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n    dictionary.set('W', this._metrics._widthTable._toArray());\n    dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n    dictionary.set('CIDSystemInfo', this._getSystemInformation());\n    return [dictionary];\n  };\n  PdfCjkStandardFont.prototype._getSystemInformation = function () {\n    var systemInformation = new _PdfDictionary();\n    systemInformation._updated = true;\n    systemInformation.set('Registry', 'Adobe');\n    switch (this._fontFamily) {\n      case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n      case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n        systemInformation.set('Ordering', 'Korea1');\n        systemInformation.set('Supplement', 1);\n        break;\n      case PdfCjkFontFamily.heiseiKakuGothicW5:\n      case PdfCjkFontFamily.heiseiMinchoW3:\n        systemInformation.set('Ordering', 'Japan1');\n        systemInformation.set('Supplement', 2);\n        break;\n      case PdfCjkFontFamily.monotypeHeiMedium:\n      case PdfCjkFontFamily.monotypeSungLight:\n        systemInformation.set('Ordering', 'CNS1');\n        systemInformation.set('Supplement', '0');\n        break;\n      case PdfCjkFontFamily.sinoTypeSongLight:\n        systemInformation.set('Ordering', 'GB1');\n        systemInformation.set('Supplement', 2);\n        break;\n    }\n    return systemInformation;\n  };\n  /**\n   * Gets the line width.\n   *\n   * @param {string} line Line.\n   * @param {PdfStringFormat} format String format.\n   * @returns {number} width.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Gets the first page\n   * let page: PdfPage = document.getPage(0) as PdfPage;\n   * // Create a new PDF CJK standard font\n   * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n   * // Create a new PDF string format\n   * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n   * // Get the text width\n   * let width: number = font.getLineWidth('Syncfusion', format);\n   * // Save the document\n   * document.save('output.pdf');\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n    var width = 0;\n    for (var i = 0; i < line.length; i++) {\n      width += this._getCharacterWidthInternal(line.charCodeAt(i));\n    }\n    width *= 0.001 * this._metrics._size;\n    width = this._applyFormatSettings(line, format, width);\n    return width;\n  };\n  PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n    charCode = charCode >= 0 ? charCode : 0;\n    return this._metrics._widthTable._itemAt(charCode);\n  };\n  return PdfCjkStandardFont;\n}(PdfFont);\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */function (_super) {\n  __extends(PdfTrueTypeFont, _super);\n  function PdfTrueTypeFont(base64String, size, style) {\n    var _this = _super.call(this, size, typeof style === 'undefined' ? PdfFontStyle.regular : style) || this;\n    _this._isEmbedFont = false;\n    _this._isUnicode = true;\n    if (style !== undefined) {\n      _this._createFontInternal(base64String, style);\n    } else {\n      _this._createFontInternal(base64String, PdfFontStyle.regular);\n    }\n    return _this;\n  }\n  Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n    /**\n     * Gets the boolean flag indicating whether the font has unicode or not.\n     *\n     * @returns {boolean} unicode.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n     * // Gets the boolean flag indicating whether the font has or not.\n     * let isUnicode: boolean = font.isUnicode;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._isUnicode;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n    /**\n     * Gets the boolean flag indicating whether the font is embedded or not.\n     *\n     * @returns {boolean} isEmbed.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n     * // Gets the boolean flag indicating whether the font is embedded or not.\n     * let isEmbed: boolean = font.isEmbed;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this._isEmbedFont;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n    this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n    this._calculateStyle(style);\n    this._initializeInternals();\n  };\n  PdfTrueTypeFont.prototype._calculateStyle = function (style) {\n    var iStyle = this._fontInternal._ttfMetrics._macStyle;\n    if ((style & PdfFontStyle.underline) !== 0) {\n      iStyle |= PdfFontStyle.underline;\n    }\n    if ((style & PdfFontStyle.strikeout) !== 0) {\n      iStyle |= PdfFontStyle.strikeout;\n    }\n    this.style = iStyle;\n  };\n  PdfTrueTypeFont.prototype._initializeInternals = function () {\n    var internals = null;\n    if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n      this._fontInternal._isEmbed = this._isEmbedFont;\n    }\n    this._fontInternal._createInternals();\n    internals = this._fontInternal._getInternals();\n    this._metrics = this._fontInternal._metrics;\n    this._metrics._isUnicodeFont = true;\n    this._setInternals(internals);\n  };\n  /**\n   * Gets the line width.\n   *\n   * @param {string} line Line.\n   * @param {PdfStringFormat} format String format.\n   * @returns {number} width.\n   *\n   * ```typescript\n   * // Load an existing PDF document\n   * let document: PdfDocument = new PdfDocument(data, password);\n   * // Gets the first page\n   * let page: PdfPage = document.getPage(0) as PdfPage;\n   * // Create a new PDF truetype font\n   * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n   * // Create a new PDF string format\n   * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n   * // Get the text width\n   * let width: number = font.getLineWidth('Syncfusion', format);\n   * // Save the document\n   * document.save('output.pdf');\n   * // Destroy the document\n   * document.destroy();\n   * ```\n   */\n  PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n    var width = 0;\n    if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n      width = this._getUnicodeLineWidth(line, width);\n    } else {\n      for (var i = 0, len = line.length; i < len; i++) {\n        width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n      }\n    }\n    width *= 0.001 * this._metrics._size;\n    width = this._applyFormatSettings(line, format, width);\n    return width;\n  };\n  PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n    width = 0;\n    var glyphIndex = [];\n    var result = false;\n    var rtlRender = new _RtlRenderer();\n    var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n    result = value._result;\n    glyphIndex = value._glyphIndex;\n    if (result && glyphIndex !== null) {\n      var ttfReader = this._fontInternal._ttfReader;\n      for (var i = 0, len = glyphIndex.length; i < len; i++) {\n        var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n        var glyph = ttfReader._getGlyph(index);\n        if (glyph !== null && typeof glyph !== 'undefined') {\n          width += glyph._width;\n        }\n      }\n    }\n    return width;\n  };\n  PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n    var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n    var size = this._metrics._getSize(format);\n    codeWidth *= 0.001 * size;\n    return codeWidth;\n  };\n  PdfTrueTypeFont.prototype._setSymbols = function (text) {\n    var internalFont = this._fontInternal;\n    if (internalFont !== null && typeof internalFont !== 'undefined') {\n      internalFont._setSymbols(text);\n    }\n  };\n  PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n    var width = 0;\n    var code = 0;\n    code = charCode.charCodeAt(0);\n    if (this._metrics._name === '0' || this._metrics._name === '1' || this._metrics._name === '2' || this._metrics._name === '3' || this._metrics._name === '4') {\n      code = code - 32;\n    }\n    code = code >= 0 && code !== 128 ? code : 0;\n    var widthTable = this._metrics._widthTable;\n    width = widthTable._itemAt(code);\n    return width;\n  };\n  return PdfTrueTypeFont;\n}(PdfFont);\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */function () {\n  function _PdfStandardFontMetricsFactory() {}\n  _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n    var metrics = null;\n    switch (fontFamily) {\n      case PdfFontFamily.helvetica:\n        metrics = this._getHelveticaMetrics(fontStyle, size);\n        break;\n      case PdfFontFamily.courier:\n        metrics = this._getCourierMetrics(fontStyle, size);\n        break;\n      case PdfFontFamily.timesRoman:\n        metrics = this._getTimesMetrics(fontStyle, size);\n        break;\n      case PdfFontFamily.symbol:\n        metrics = this._getSymbolMetrics(size);\n        break;\n      case PdfFontFamily.zapfDingbats:\n        metrics = this._getZapfDingbatsMetrics(size);\n        break;\n      default:\n        metrics = this._getHelveticaMetrics(fontStyle, size);\n        break;\n    }\n    metrics._name = fontFamily.toString();\n    metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n    metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n    return metrics;\n  };\n  _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n      metrics._ascent = this._helveticaBoldItalicAscent;\n      metrics._descent = this._helveticaBoldItalicDescent;\n      metrics._postScriptName = this._helveticaBoldItalicName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else if ((fontStyle & PdfFontStyle.bold) > 0) {\n      metrics._ascent = this._helveticaBoldAscent;\n      metrics._descent = this._helveticaBoldDescent;\n      metrics._postScriptName = this._helveticaBoldName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else if ((fontStyle & PdfFontStyle.italic) > 0) {\n      metrics._ascent = this._helveticaItalicAscent;\n      metrics._descent = this._helveticaItalicDescent;\n      metrics._postScriptName = this._helveticaItalicName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else {\n      metrics._ascent = this._helveticaAscent;\n      metrics._descent = this._helveticaDescent;\n      metrics._postScriptName = this._helveticaName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    }\n    return metrics;\n  };\n  _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n      metrics._ascent = this._courierBoldItalicAscent;\n      metrics._descent = this._courierBoldItalicDescent;\n      metrics._postScriptName = this._courierBoldItalicName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else if ((fontStyle & PdfFontStyle.bold) > 0) {\n      metrics._ascent = this._courierBoldAscent;\n      metrics._descent = this._courierBoldDescent;\n      metrics._postScriptName = this._courierBoldName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else if ((fontStyle & PdfFontStyle.italic) > 0) {\n      metrics._ascent = this._courierItalicAscent;\n      metrics._descent = this._courierItalicDescent;\n      metrics._postScriptName = this._courierItalicName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else {\n      metrics._ascent = this._courierAscent;\n      metrics._descent = this._courierDescent;\n      metrics._postScriptName = this._courierName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    }\n    return metrics;\n  };\n  _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n      metrics._ascent = this._timesBoldItalicAscent;\n      metrics._descent = this._timesBoldItalicDescent;\n      metrics._postScriptName = this._timesBoldItalicName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else if ((fontStyle & PdfFontStyle.bold) > 0) {\n      metrics._ascent = this._timesBoldAscent;\n      metrics._descent = this._timesBoldDescent;\n      metrics._postScriptName = this._timesBoldName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else if ((fontStyle & PdfFontStyle.italic) > 0) {\n      metrics._ascent = this._timesItalicAscent;\n      metrics._descent = this._timesItalicDescent;\n      metrics._postScriptName = this._timesItalicName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    } else {\n      metrics._ascent = this._timesAscent;\n      metrics._descent = this._timesDescent;\n      metrics._postScriptName = this._timesName;\n      metrics._size = size;\n      metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n      metrics._height = metrics._ascent - metrics._descent;\n    }\n    return metrics;\n  };\n  _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n    var metrics = new _PdfFontMetrics();\n    metrics._ascent = this._symbolAscent;\n    metrics._descent = this._symbolDescent;\n    metrics._postScriptName = this._symbolName;\n    metrics._size = size;\n    metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n    metrics._height = metrics._ascent - metrics._descent;\n    return metrics;\n  };\n  _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n    var metrics = new _PdfFontMetrics();\n    metrics._ascent = this._zapfDingbatsAscent;\n    metrics._descent = this._zapfDingbatsDescent;\n    metrics._postScriptName = this._zapfDingbatsName;\n    metrics._size = size;\n    metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n    metrics._height = metrics._ascent - metrics._descent;\n    return metrics;\n  };\n  _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n  _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n  _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n  _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n  _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n  _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n  _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n  _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n  _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n  _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n  _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n  _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n  _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n  _PdfStandardFontMetricsFactory._courierAscent = 805;\n  _PdfStandardFontMetricsFactory._courierDescent = -250;\n  _PdfStandardFontMetricsFactory._courierName = 'Courier';\n  _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n  _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n  _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n  _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n  _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n  _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n  _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n  _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n  _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n  _PdfStandardFontMetricsFactory._timesAscent = 898;\n  _PdfStandardFontMetricsFactory._timesDescent = -218;\n  _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n  _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n  _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n  _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n  _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n  _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n  _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n  _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n  _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n  _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n  _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n  _PdfStandardFontMetricsFactory._symbolDescent = -293;\n  _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n  _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n  _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n  _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n  _PdfStandardFontMetricsFactory._arialWidth = [278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0, 611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0, 500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0, 737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500, 556, 500];\n  _PdfStandardFontMetricsFactory._arialBoldWidth = [278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0, 611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0, 500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0, 737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556, 611, 556];\n  _PdfStandardFontMetricsFactory._fixedWidthn  _PdfStandardFontMetricsFactory._timesRomanWidth = [250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333, 250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564, 564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889, 722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333, 469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778, 500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480, 541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0, 611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0, 444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0, 760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750, 750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333, 333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722, 556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278, 278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500, 500, 500];\n  _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333, 250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570, 570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944, 722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333, 581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833, 556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394, 520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0, 667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0, 444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0, 747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750, 750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389, 389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722, 611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278, 278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500, 556, 500];\n  _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333, 250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675, 675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833, 667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389, 422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722, 500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400, 541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0, 556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0, 389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0, 760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750, 750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333, 333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556, 611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278, 278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444, 500, 444];\n  _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333, 250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570, 570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889, 722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333, 570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778, 556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348, 570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0, 611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0, 389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0, 747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750, 750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389, 389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611, 611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278, 278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444, 500, 444];\n  _PdfStandardFontMetricsFactory._symbolWidth = [250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549, 250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333, 631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768, 645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439, 521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603, 439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247, 549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400, 549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000, 658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713, 713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603, 1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384, 384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384, 384, 384, 384, 384, 494, 494, 494, -1];\n  _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855, 911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759, 754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823, 789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776, 768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696, 689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892, 892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317, 317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544, 910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918, 927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836, 836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967, 888, 831, 873, 927, 970, 918];\n  return _PdfStandardFontMetricsFactory;\n}();\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */function () {\n  function _PdfCjkStandardFontMetricsFactory() {}\n  _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    var widthTable = new _CjkWidthTable(1000);\n    widthTable._add(new _CjkSameWidth(1, 127, 500));\n    widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n    metrics._widthTable = widthTable;\n    metrics._ascent = 880;\n    metrics._descent = -120;\n    metrics._size = size;\n    metrics._height = metrics._ascent - metrics._descent;\n    if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n    } else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n      metrics._postScriptName = 'HYGoThic-Medium,Bold';\n    } else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HYGoThic-Medium,Italic';\n    } else {\n      metrics._postScriptName = 'HYGoThic-Medium';\n    }\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    var widthTable = new _CjkWidthTable(1000);\n    widthTable._add(new _CjkSameWidth(1, 95, 500));\n    widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n    metrics._widthTable = widthTable;\n    metrics._ascent = 880;\n    metrics._descent = -120;\n    metrics._size = size;\n    metrics._height = metrics._ascent - metrics._descent;\n    if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n    } else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n      metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n    } else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n    } else {\n      metrics._postScriptName = 'HYSMyeongJo-Medium';\n    }\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    var widthTable = new _CjkWidthTable(1000);\n    widthTable._add(new _CjkSameWidth(1, 95, 500));\n    widthTable._add(new _CjkSameWidth(231, 632, 500));\n    metrics._widthTable = widthTable;\n    metrics._ascent = 857;\n    metrics._descent = -125;\n    metrics._size = size;\n    metrics._height = metrics._ascent - metrics._descent;\n    if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n    } else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n      metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n    } else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n    } else {\n      metrics._postScriptName = 'HeiseiKakuGo-W5';\n    }\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    var widthTable = new _CjkWidthTable(1000);\n    widthTable._add(new _CjkSameWidth(1, 95, 500));\n    widthTable._add(new _CjkSameWidth(231, 632, 500));\n    metrics._widthTable = widthTable;\n    metrics._ascent = 857;\n    metrics._descent = -143;\n    metrics._size = size;\n    metrics._height = metrics._ascent - metrics._descent;\n    if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n    } else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n      metrics._postScriptName = 'HeiseiMin-W3,Bold';\n    } else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'HeiseiMin-W3,Italic';\n    } else {\n      metrics._postScriptName = 'HeiseiMin-W3';\n    }\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    var widthTable = new _CjkWidthTable(1000);\n    widthTable._add(new _CjkSameWidth(1, 95, 500));\n    widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n    metrics._widthTable = widthTable;\n    metrics._ascent = 880;\n    metrics._descent = -120;\n    metrics._size = size;\n    metrics._height = metrics._ascent - metrics._descent;\n    if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'MHei-Medium,BoldItalic';\n    } else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n      metrics._postScriptName = 'MHei-Medium,Bold';\n    } else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'MHei-Medium,Italic';\n    } else {\n      metrics._postScriptName = 'MHei-Medium';\n    }\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    var widthTable = new _CjkWidthTable(1000);\n    widthTable._add(new _CjkSameWidth(1, 95, 500));\n    widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n    metrics._widthTable = widthTable;\n    metrics._ascent = 880;\n    metrics._descent = -120;\n    metrics._size = size;\n    metrics._height = metrics._ascent - metrics._descent;\n    if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'MSung-Light,BoldItalic';\n    } else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n      metrics._postScriptName = 'MSung-Light,Bold';\n    } else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'MSung-Light,Italic';\n    } else {\n      metrics._postScriptName = 'MSung-Light';\n    }\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n    var metrics = new _PdfFontMetrics();\n    var widthTable = new _CjkWidthTable(1000);\n    widthTable._add(new _CjkSameWidth(1, 95, 500));\n    widthTable._add(new _CjkSameWidth(814, 939, 500));\n    widthTable._add(new _CjkDifferentWidth(7712, [500]));\n    widthTable._add(new _CjkDifferentWidth(7716, [500]));\n    metrics._ascent = 880;\n    metrics._descent = -120;\n    metrics._size = size;\n    metrics._height = metrics._ascent - metrics._descent;\n    if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'STSong-Light,BoldItalic';\n    } else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n      metrics._postScriptName = 'STSong-Light,Bold';\n    } else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n      metrics._postScriptName = 'STSong-Light,Italic';\n    } else {\n      metrics._postScriptName = 'STSong-Light';\n    }\n    metrics._widthTable = widthTable;\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n    var metrics;\n    switch (fontFamily) {\n      case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n        metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n        metrics._name = 'HanyangSystemsGothicMedium';\n        break;\n      case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n        metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n        metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n        break;\n      case PdfCjkFontFamily.heiseiKakuGothicW5:\n        metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n        metrics._name = 'HeiseiKakuGothicW5';\n        break;\n      case PdfCjkFontFamily.heiseiMinchoW3:\n        metrics = this._getHeiseiMinchoW3(fontStyle, size);\n        metrics._name = 'HeiseiMinchoW3';\n        break;\n      case PdfCjkFontFamily.monotypeHeiMedium:\n        metrics = this._getMonotypeHeiMedium(fontStyle, size);\n        metrics._name = 'MonotypeHeiMedium';\n        break;\n      case PdfCjkFontFamily.monotypeSungLight:\n        metrics = this._getMonotypeSungLight(fontStyle, size);\n        metrics._name = 'MonotypeSungLight';\n        break;\n      case PdfCjkFontFamily.sinoTypeSongLight:\n        metrics = this._getSinoTypeSongLight(fontStyle, size);\n        metrics._name = 'SinoTypeSongLight';\n        break;\n    }\n    metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n    metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n    return metrics;\n  };\n  _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n  return _PdfCjkStandardFontMetricsFactory;\n}();\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */function () {\n  function _PdfCjkFontDescriptorFactory() {}\n  _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n    var fontBox = {\n      x: -160,\n      y: -249,\n      width: 1175,\n      height: 1137\n    };\n    this._fillFontBox(fontDescriptor, fontBox);\n    this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n    fontDescriptor.set('StemV', 93);\n    fontDescriptor.set('StemH', 93);\n    fontDescriptor.set('AvgWidth', 1000);\n    fontDescriptor.set('MaxWidth', 1000);\n    fontDescriptor.set('CapHeight', 880);\n    fontDescriptor.set('XHeight', 616);\n    fontDescriptor.set('Leading', 250);\n  };\n  _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n    var fontBox = {\n      x: -92,\n      y: -250,\n      width: 1102,\n      height: 1172\n    };\n    var fontBoxItalic = {\n      x: -92,\n      y: -250,\n      width: 1102,\n      height: 1932\n    };\n    if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n      this._fillFontBox(fontDescriptor, fontBox);\n    } else {\n      this._fillFontBox(fontDescriptor, fontBoxItalic);\n    }\n    this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n    fontDescriptor.set('StemV', 93);\n    fontDescriptor.set('StemH', 93);\n    fontDescriptor.set('AvgWidth', 689);\n    fontDescriptor.set('MaxWidth', 1000);\n    fontDescriptor.set('CapHeight', 718);\n    fontDescriptor.set('XHeight', 500);\n    fontDescriptor.set('Leading', 250);\n  };\n  _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n    var fontBox = {\n      x: 0,\n      y: -148,\n      width: 1001,\n      height: 1028\n    };\n    this._fillFontBox(fontDescriptor, fontBox);\n    this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n    fontDescriptor.set('StemV', 93);\n    fontDescriptor.set('StemH', 93);\n    fontDescriptor.set('AvgWidth', 1000);\n    fontDescriptor.set('MaxWidth', 1000);\n    fontDescriptor.set('CapHeight', 880);\n    fontDescriptor.set('XHeight', 616);\n    fontDescriptor.set('Leading', 250);\n  };\n  _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n    var fontBox = {\n      x: -123,\n      y: -257,\n      width: 1124,\n      height: 1167\n    };\n    this._fillFontBox(fontDescriptor, fontBox);\n    this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n    fontDescriptor.set('StemV', 93);\n    fontDescriptor.set('StemH', 93);\n    fontDescriptor.set('AvgWidth', 702);\n    fontDescriptor.set('MaxWidth', 1000);\n    fontDescriptor.set('CapHeight', 718);\n    fontDescriptor.set('XHeight', 500);\n    fontDescriptor.set('Leading', 250);\n  };\n  _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n    var fontBox = {\n      x: -25,\n      y: -254,\n      width: 1025,\n      height: 1134\n    };\n    this._fillFontBox(fontDescriptor, fontBox);\n    this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n    fontDescriptor.set('StemV', 93);\n    fontDescriptor.set('StemH', 93);\n    fontDescriptor.set('AvgWidth', 1000);\n    fontDescriptor.set('MaxWidth', 1000);\n    fontDescriptor.set('CapHeight', 880);\n    fontDescriptor.set('XHeight', 616);\n    fontDescriptor.set('Leading', 250);\n  };\n  _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n    var fontBox = {\n      x: -45,\n      y: -250,\n      width: 1060,\n      height: 1137\n    };\n    this._fillFontBox(fontDescriptor, fontBox);\n    this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n    fontDescriptor.set('StemV', 93);\n    fontDescriptor.set('StemH', 93);\n    fontDescriptor.set('AvgWidth', 1000);\n    fontDescriptor.set('MaxWidth', 1000);\n    fontDescriptor.set('CapHeight', 880);\n    fontDescriptor.set('XHeight', 616);\n    fontDescriptor.set('Leading', 250);\n  };\n  _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n    var fontBox = {\n      x: -6,\n      y: -145,\n      width: 1009,\n      height: 1025\n    };\n    this._fillFontBox(fontDescriptor, fontBox);\n    this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n    fontDescriptor.set('Flags', 4);\n    fontDescriptor.set('StemV', 93);\n    fontDescriptor.set('StemH', 93);\n    fontDescriptor.set('AvgWidth', 1000);\n    fontDescriptor.set('MaxWidth', 1000);\n    fontDescriptor.set('CapHeight', 880);\n    fontDescriptor.set('XHeight', 616);\n    fontDescriptor.set('Leading', 250);\n  };\n  _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n    fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n  };\n  _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n    fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n    fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n    fontDescriptor.set('ItalicAngle', 0);\n    fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n    fontDescriptor.set('Ascent', fontMetrics._ascent);\n    fontDescriptor.set('Descent', fontMetrics._descent);\n    switch (fontFamily) {\n      case PdfCjkFontFamily.monotypeHeiMedium:\n      case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n      case PdfCjkFontFamily.heiseiKakuGothicW5:\n        fontDescriptor.set('Flags', 4);\n        break;\n      case PdfCjkFontFamily.sinoTypeSongLight:\n      case PdfCjkFontFamily.monotypeSungLight:\n      case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n      case PdfCjkFontFamily.heiseiMinchoW3:\n        fontDescriptor.set('Flags', 6);\n        break;\n    }\n  };\n  _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n    var fontDescriptor = new _PdfDictionary();\n    fontDescriptor._updated = true;\n    switch (fontFamily) {\n      case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n        this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n        break;\n      case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n        this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n        break;\n      case PdfCjkFontFamily.heiseiKakuGothicW5:\n        this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n        break;\n      case PdfCjkFontFamily.heiseiMinchoW3:\n        this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n        break;\n      case PdfCjkFontFamily.monotypeHeiMedium:\n        this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n        break;\n      case PdfCjkFontFamily.monotypeSungLight:\n        this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n        break;\n      case PdfCjkFontFamily.sinoTypeSongLight:\n        this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n        break;\n      default:\n        break;\n    }\n    return fontDescriptor;\n  };\n  return _PdfCjkFontDescriptorFactory;\n}();\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n  /**\n   * Specifies the font style `regular`.\n   */\n  PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n  /**\n   * Specifies the font style `bold`.\n   */\n  PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n  /**\n   * Specifies the font style `italic`.\n   */\n  PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n  /**\n   * Specifies the font style `underline`.\n   */\n  PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n  /**\n   * Specifies the font style `strikeout`.\n   */\n  PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n  /**\n   * Specifies the `helvetica` font family.\n   */\n  PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n  /**\n   * Specifies the `courier` font family.\n   */\n  PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n  /**\n   * Specifies the `timesRoman` font family.\n   */\n  PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n  /**\n   * Specifies the `symbol` font family.\n   */\n  PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n  /**\n   * Specifies the `zapfDingbats` font family.\n   */\n  PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n  /**\n   * Specifies the `heiseiKakuGothicW5` CJK font family.\n   */\n  PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n  /**\n   * Specifies the `heiseiMinchoW3` CJK font family.\n   */\n  PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n  /**\n   * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n   */\n  PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n  /**\n   * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n   */\n  PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n  /**\n   * Specifies the `monotypeHeiMedium` CJK font family.\n   */\n  PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n  /**\n   * Specifies the `monotypeSungLight` CJK font family.\n   */\n  PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n  /**\n   * Specifies the `sinoTypeSongLight` CJK font family.\n   */\n  PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */function () {\n  function _UnicodeLine() {\n    this._result = false;\n    this._glyphIndex = [];\n  }\n  return _UnicodeLine;\n}();\nexport { _UnicodeLine };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfStringFormat","_PdfFontMetrics","_CjkWidthTable","_StandardWidthTable","_CjkSameWidth","_CjkDifferentWidth","_PdfDictionary","_PdfName","_PdfStringLayouter","_UnicodeTrueTypeFont","_fromRectangle","PdfTextDirection","_RtlRenderer","PdfFont","size","style","_size","_style","defineProperty","get","enumerable","configurable","set","value","PdfFontStyle","underline","strikeout","_fontMetrics","bold","italic","_metrics","_getHeight","_setInternals","internals","Error","_pdfFontInternals","_getCharacterCount","text","symbols","numSymbols","curIndex","indexOf","count","i","length","Number","parseInt","toString","measureString","arg2","arg3","arg4","arg5","temparg2","charactersFitted","linesFilled","layoutArea","temparg3","layouter","result","_layout","_empty","_lines","_actualSize","_applyFormatSettings","line","format","width","realWidth","characterSpacing","wordSpacing","PdfStandardFont","_super","fontFamily","_this","call","regular","_fontFamily","_checkStyle","_initializeInternals","PdfFontFamily","symbol","zapfDingbats","getLineWidth","len","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_dictionary","_createInternals","dictionary","_updated","_postScriptName","charCode","code","charCodeAt","_name","widthTable","_widthTable","_itemAt","PdfCjkStandardFont","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","encoding","PdfCjkFontFamily","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","monotypeHeiMedium","monotypeSungLight","sinoTypeSongLight","_defaultWidth","_toArray","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","PdfTrueTypeFont","base64String","_isEmbedFont","_isUnicode","undefined","_createFontInternal","_fontInternal","_calculateStyle","iStyle","_ttfMetrics","_macStyle","_isEmbed","_getInternals","_isUnicodeFont","textDirection","none","_getUnicodeLineWidth","glyphIndex","rtlRender","_getGlyphIndex","_result","_glyphIndex","ttfReader","_ttfReader","index","glyph","_getGlyph","_width","_getCharacterWidth","codeWidth","_getSize","_setSymbols","internalFont","fontStyle","metrics","helvetica","_getHelveticaMetrics","courier","_getCourierMetrics","timesRoman","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subScriptSizeFactor","_subSuperScriptFactor","_superscriptSizeFactor","_ascent","_helveticaBoldItalicAscent","_descent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_height","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","_add","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontDescriptor","fontMetrics","fontBox","x","y","height","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","fontBoxItalic","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","_UnicodeLine"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdf/src/pdf/core/fonts/pdf-standard-font.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this._calculateStyle(style);\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._calculateStyle = function (style) {\n        var iStyle = this._fontInternal._ttfMetrics._macStyle;\n        if ((style & PdfFontStyle.underline) !== 0) {\n            iStyle |= PdfFontStyle.underline;\n        }\n        if ((style & PdfFontStyle.strikeout) !== 0) {\n            iStyle |= PdfFontStyle.strikeout;\n        }\n        this.style = iStyle;\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n        }\n        metrics._name = fontFamily.toString();\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACJ,SAASI,eAAe,QAAQ,qBAAqB;AACrD,SAASC,eAAe,EAAEC,cAAc,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC5H,SAASC,cAAc,EAAEC,QAAQ,QAAQ,qBAAqB;AAC9D,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,YAAY,QAAQ,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAG,aAAe,YAAY;EACrC,SAASA,OAAOA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAC1B,IAAI,OAAOD,IAAI,KAAK,QAAQ,IAAI,OAAOC,KAAK,KAAK,WAAW,EAAE;MAC1D,IAAI,CAACC,KAAK,GAAGF,IAAI;IACrB,CAAC,MACI;MACD,IAAI,CAACE,KAAK,GAAGF,IAAI;MACjB,IAAI,CAACG,MAAM,GAAGF,KAAK;IACvB;EACJ;EACAzB,MAAM,CAAC4B,cAAc,CAACL,OAAO,CAACf,SAAS,EAAE,MAAM,EAAE;IAC7C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQqB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACH,KAAK;IACrB,CAAC;IACDI,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF/B,MAAM,CAAC4B,cAAc,CAACL,OAAO,CAACf,SAAS,EAAE,OAAO,EAAE;IAC9C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQqB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACF,MAAM;IACtB,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQK,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACN,MAAM,GAAGM,KAAK;IACvB,CAAC;IACDH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF/B,MAAM,CAAC4B,cAAc,CAACL,OAAO,CAACf,SAAS,EAAE,aAAa,EAAE;IACpD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQqB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,CAAC,IA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,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC/E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAC3E,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAC1E,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAC1E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EA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EAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC/E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9E,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAC3E,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAC1E,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAC1E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EA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G,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACrE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EACtE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACrE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CACxC;EACDhI,8BAA8B,CAACoI,kBAAkB,GAAG,CAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACrE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}