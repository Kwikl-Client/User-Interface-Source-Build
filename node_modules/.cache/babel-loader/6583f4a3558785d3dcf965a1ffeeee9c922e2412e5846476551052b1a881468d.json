{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfTextBoxField, PdfFormFieldVisibility, PdfTextAlignment, PdfSignatureField, PdfFreeTextAnnotation, PdfFontFamily, PdfStandardFont, PdfAnnotationFlag, PdfRubberStampAnnotation, PdfBitmap, PdfFontStyle as FontStyle, PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfListFieldItem, PdfRadioButtonListField, PdfRadioButtonListItem, PdfRotationAngle, PdfFontStyle, PdfInkAnnotation, PdfTrueTypeFont } from '@syncfusion/ej2-pdf';\nimport { PageRenderer } from '../index';\nimport { getArialFontData } from '../pdf-base/fontData';\nimport { Rect } from '@syncfusion/ej2-drawings';\n/**\n * FormFieldsBase\n *\n * @hidden\n */\nvar FormFieldsBase = /** @class */function () {\n  /**\n   * @param {PdfViewer} pdfViewer - The PdfViewer.\n   * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n   * @private\n   */\n  function FormFieldsBase(pdfViewer, pdfViewerBase, digitalSignatruePresent) {\n    /**\n     * @private\n     */\n    this.PdfRenderedFormFields = [];\n    this.pdfViewer = pdfViewer;\n    this.pdfViewerBase = pdfViewerBase;\n    this.formFieldLoadedDocument = this.pdfViewer.pdfRendererModule.loadedDocument;\n    this.m_isDigitalSignaturePresent = digitalSignatruePresent;\n  }\n  /**\n   * @private\n   * @param textSignature\n   * @param isAnnotationFlattern\n   */\n  FormFieldsBase.prototype.drawFreeTextAnnotations = function (textSignature, loadedDocument, isAnnotationFlattern) {\n    var stampObjects = textSignature.data;\n    var textData = stampObjects.replace(/\"/g, '');\n    var boundsObject = JSON.parse(textSignature.bounds);\n    var page = loadedDocument.getPage(textSignature.pageIndex);\n    if (stampObjects != \"\") {\n      var left = this.convertPixelToPoint(boundsObject.left);\n      var top_1 = this.convertPixelToPoint(boundsObject.top);\n      var width = this.convertPixelToPoint(boundsObject.width);\n      var height = this.convertPixelToPoint(boundsObject.height);\n      var annotation = new PdfFreeTextAnnotation(left, top_1, width, height);\n      annotation._dictionary.set('NM', textSignature.signatureName.toString());\n      var fontSize = textSignature.fontSize;\n      annotation.border.width = 0;\n      var fontFamilyEnum = PdfFontFamily.helvetica;\n      var fontName = textSignature.fontFamily.toString();\n      if (!isNullOrUndefined(fontName)) {\n        var family = fontName.toString();\n        if (family.includes(\"Times New Roman\")) {\n          fontFamilyEnum = PdfFontFamily.timesRoman;\n        } else if (family.includes(\"Courier\")) {\n          fontFamilyEnum = PdfFontFamily.courier;\n        } else if (family.includes(\"Symbol\")) {\n          fontFamilyEnum = PdfFontFamily.symbol;\n        } else if (family.includes(\"ZapfDingbats\")) {\n          fontFamilyEnum = PdfFontFamily.zapfDingbats;\n        }\n      }\n      fontSize = Math.floor(this.convertPixelToPoint(fontSize));\n      var fontStyle = FontStyle.regular;\n      annotation.font = new PdfStandardFont(fontFamilyEnum, fontSize, fontStyle);\n      annotation.text = textData;\n      annotation.borderColor = [0, 0, 0];\n      annotation.textAlignment = PdfTextAlignment.center;\n      annotation._annotFlags = PdfAnnotationFlag.print;\n      if (isAnnotationFlattern) {\n        var rotateAngle = this.getRotateAngle(page.rotation);\n        annotation.rotationAngle = Math.abs(rotateAngle);\n      }\n      annotation.setValues('AnnotationType', 'Signature');\n      if (isAnnotationFlattern) {\n        annotation.flatten = true;\n      }\n      annotation.setAppearance(true);\n      page.annotations.add(annotation);\n    }\n  };\n  FormFieldsBase.prototype.getRotateAngle = function (angleString) {\n    var angle = 0;\n    switch (angleString) {\n      case PdfRotationAngle.angle0:\n        angle = 0;\n        break;\n      case PdfRotationAngle.angle180:\n        angle = 2;\n        break;\n      case PdfRotationAngle.angle270:\n        angle = 3;\n        break;\n      case PdfRotationAngle.angle90:\n        angle = 1;\n        break;\n    }\n    return angle;\n  };\n  /**\n   * @private\n   * @param textSignature\n   * @param isAnnotationFlattern\n   */\n  FormFieldsBase.prototype.drawImage = function (signatureImage, loadedDocument, isAnnotationFlattern) {\n    var stampObjects = signatureImage.data;\n    var boundsObject = JSON.parse(signatureImage.bounds);\n    var page = loadedDocument.getPage(signatureImage.pageIndex);\n    if (stampObjects != '') {\n      var imageUrl = stampObjects.toString().split(',')[1];\n      var left = this.convertPixelToPoint(boundsObject.left);\n      var top_2 = this.convertPixelToPoint(boundsObject.top);\n      var width = this.convertPixelToPoint(boundsObject.width);\n      var height = this.convertPixelToPoint(boundsObject.height);\n      var rectangle = new Rect(left, top_2, width, height);\n      var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top_2, width, height);\n      var bitmap = new PdfBitmap(imageUrl);\n      var graphics = page.graphics;\n      var appearance = rubberStampAnnotation.appearance.normal;\n      rubberStampAnnotation._dictionary.set('NM', signatureImage.signatureName.toString());\n      if (isAnnotationFlattern) {\n        var rotationAngle = this.getRotateAngle(page.rotation);\n        rubberStampAnnotation.rotationAngle = Math.abs(rotationAngle);\n        rubberStampAnnotation.flatten = true;\n      }\n      if (!isAnnotationFlattern) {\n        var state = graphics.save();\n        appearance.graphics.drawImage(bitmap, 0, 0, width, height);\n        appearance.graphics.restore(state);\n      } else {\n        appearance.graphics.drawImage(bitmap, 0, 0, width, height);\n      }\n      page.annotations.add(rubberStampAnnotation);\n    }\n  };\n  /**\n   * @private\n   * @param jsonObject\n   */\n  FormFieldsBase.prototype.saveFormFieldsDesignerData = function (jsonObject) {\n    if (jsonObject.hasOwnProperty(\"formDesigner\")) {\n      var formFields = jsonObject[\"formDesigner\"];\n      if (!isNullOrUndefined(formFields)) {\n        var data = JSON.parse(formFields);\n        var myList = [];\n        var formFieldsPageList = jsonObject.hasOwnProperty(\"formFieldsPageList\") ? JSON.parse(jsonObject[\"formFieldsPageList\"]) : myList;\n        //Removing form fields from the page.\n        if (!isNullOrUndefined(this.formFieldLoadedDocument.form)) {\n          var initialCount = this.formFieldLoadedDocument.form._fields.length;\n          //Get the loaded form.\n          var loadedForm = this.formFieldLoadedDocument.form;\n          for (var k = initialCount - 1; k >= 0; k--) {\n            var formFieldPage = loadedForm.fieldAt(k);\n            var pageNumber = formFieldPage.page._pageIndex;\n            var signField = null;\n            if (formFieldPage instanceof PdfSignatureField) {\n              signField = formFieldPage;\n            }\n            var signed = !isNullOrUndefined(signField) ? signField.isSigned : true;\n            //Removing the formfields from a page\n            if (formFieldsPageList.includes(pageNumber + 1) && (signField == null || !signed)) {\n              loadedForm.removeField(loadedForm.fieldAt(k));\n            }\n          }\n        }\n        for (var i = 0; i < data.length; i++) {\n          this.addFormFieldsToDocument(data[parseInt(i.toString(), 10)].FormField);\n        }\n      }\n      if (!isNullOrUndefined(this.formFieldLoadedDocument.form)) {\n        this.formFieldLoadedDocument.form.setDefaultAppearance(false);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param jsonObject\n   */\n  FormFieldsBase.prototype.saveFormFieldsData = function (jsonObject) {\n    if (jsonObject.hasOwnProperty(\"fieldsData\")) {\n      var formFields = jsonObject[\"fieldsData\"];\n      var data = JSON.parse(formFields);\n      if (!isNullOrUndefined(data) && Object.keys(data).length > 0 && !isNullOrUndefined(this.formFieldLoadedDocument.form)) {\n        if (this.formFieldLoadedDocument.form._fields.length > 0) {\n          this.formFieldLoadedDocument.form.setDefaultAppearance(false);\n        }\n        for (var i = 0; i < this.formFieldLoadedDocument.form._fields.length; i++) {\n          var currentField = this.formFieldLoadedDocument.form.fieldAt(i);\n          var currentFieldName = \"\";\n          var actualFieldName = \"\";\n          if (!isNullOrUndefined(currentField.name)) {\n            currentFieldName = currentField.name.replace(/[^0-9a-zA-Z]+/g, \"\").replace(/\\s+/g, \"\");\n            actualFieldName = currentField.name;\n          }\n          if (currentField instanceof PdfTextBoxField) {\n            if (!currentField.password) {\n              if (data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName]) || data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName])) {\n                if (data.hasOwnProperty(actualFieldName)) {\n                  currentFieldName = actualFieldName;\n                }\n                var field = data[\"\" + currentFieldName];\n                if (!isNullOrUndefined(field) && field.hasOwnProperty(\"isReadOnly\")) {\n                  currentField.text = field[\"fieldValue\"];\n                  currentField.readOnly = field[\"isReadOnly\"] === 'true' ? true : false;\n                }\n              }\n            } else {\n              if (data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName]) || data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName])) {\n                if (data.hasOwnProperty(actualFieldName)) {\n                  currentFieldName = actualFieldName;\n                }\n                var field = data[\"\" + currentFieldName];\n                if (!isNullOrUndefined(field) && field.hasOwnProperty(\"isReadOnly\")) {\n                  currentField.text = field[\"fieldValue\"];\n                  currentField.readOnly = field[\"isReadOnly\"] === 'true' ? true : false;\n                }\n              }\n            }\n          } else if (currentField instanceof PdfComboBoxField) {\n            if (data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName]) || data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName])) {\n              if (data.hasOwnProperty(actualFieldName)) {\n                currentFieldName = actualFieldName;\n              }\n              var field = data[\"\" + currentFieldName];\n              var count = currentField.itemsCount;\n              var fieldName = '';\n              if (!isNullOrUndefined(field)) {\n                if (field.hasOwnProperty('isReadOnly')) {\n                  currentField.readOnly = field[\"isReadOnly\"] === 'true' ? true : false;\n                }\n                if (!isNullOrUndefined(field[\"fieldValue\"])) {\n                  fieldName = field[\"fieldValue\"];\n                }\n              }\n              var isExists = false;\n              for (var j = 0; j < count; j++) {\n                var optionArray = void 0;\n                var text = void 0;\n                if (currentField._dictionary.has('Opt')) {\n                  optionArray = currentField._dictionary.get('Opt');\n                  text = optionArray[parseInt(j.toString(), 10)];\n                } else if (!isNullOrUndefined(currentField.itemAt(j))) {\n                  text = currentField.itemAt(j).text;\n                }\n                if (text === fieldName) {\n                  currentField.selectedIndex = j;\n                  isExists = true;\n                }\n              }\n              if (currentField.editable && !isExists) {\n                currentField.selectedValue = fieldName;\n              }\n            }\n          } else if (currentField instanceof PdfCheckBoxField) {\n            if (data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName]) || data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName])) {\n              if (data.hasOwnProperty(actualFieldName)) {\n                currentFieldName = actualFieldName;\n              }\n              var field = data[\"\" + currentFieldName];\n              var fields = field[\"isSelected\"];\n              var fieldValueString = fields.toString();\n              var fieldValue = field[\"fieldValue\"];\n              if (!isNullOrUndefined(fieldValue)) {\n                currentField._dictionary.set(\"ExportValue\", fieldValue);\n              }\n              if (fieldValueString.toLowerCase() === \"true\" || fieldValueString.toLowerCase() === \"false\") {\n                currentField.checked = fields;\n                if (!isNullOrUndefined(field) && field.hasOwnProperty(\"isReadOnly\")) {\n                  currentField.readOnly = field.readonly;\n                }\n                if (fieldValueString.toLowerCase() === \"false\") {\n                  var checkBoxField = currentField;\n                  for (var k = 0; k < checkBoxField.itemsCount; k++) {\n                    checkBoxField.itemAt(k).checked = false;\n                  }\n                  currentField.checked = false;\n                }\n              } else {\n                var integerValue = isNullOrUndefined(fields) ? -1 : 0;\n                var checkBoxField_1 = currentField;\n                if (checkBoxField_1.itemsCount > 0) {\n                  if (integerValue == -1) {\n                    for (var n = 0; n < checkBoxField_1.itemsCount; n++) {\n                      checkBoxField_1.itemAt(n).checked = false;\n                    }\n                    currentField.checked = false;\n                  } else if (!isNullOrUndefined(checkBoxField_1.itemAt(integerValue))) {\n                    checkBoxField_1.itemAt(integerValue).checked = true;\n                  }\n                }\n              }\n            }\n          } else if (currentField instanceof PdfListBoxField) {\n            if (data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName]) || data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName])) {\n              if (data.hasOwnProperty(actualFieldName)) {\n                currentFieldName = actualFieldName;\n              }\n              var table = data[\"\" + currentFieldName];\n              var count = currentField.itemsCount;\n              var fieldName = '';\n              if (!isNullOrUndefined(table)) {\n                if (table.hasOwnProperty('fieldValue') && !isNullOrUndefined(table[\"fieldValue\"])) {\n                  fieldName = table[\"fieldValue\"];\n                }\n                if (table.hasOwnProperty('isReadOnly')) {\n                  currentField.readOnly = table[\"isReadOnly\"] === 'true' ? true : false;\n                }\n              }\n              fieldName = JSON.parse(fieldName)[0].replace(/[^0-9a-zA-Z]+/g, '');\n              var selectedIndexes = [];\n              for (var k = 0; k < count; k++) {\n                var text = currentField.itemAt(k).text;\n                if (text === fieldName) {\n                  selectedIndexes.push(k);\n                }\n              }\n              currentField.selectedIndex = selectedIndexes;\n            }\n          } else if (currentField instanceof PdfRadioButtonListField) {\n            if (data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName]) || data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName])) {\n              if (data.hasOwnProperty(actualFieldName)) {\n                currentFieldName = actualFieldName;\n              }\n              var field = data[\"\" + currentFieldName];\n              if (!isNullOrUndefined(field) && field.hasOwnProperty('isReadOnly')) {\n                var selectedValue = field[\"fieldValue\"];\n                if (selectedValue) {\n                  for (var i_1 = 0; i_1 < currentField.itemsCount; i_1++) {\n                    var item = currentField.itemAt(i_1);\n                    if (item && (item.value === selectedValue || item._optionValue === selectedValue)) {\n                      currentField.selectedIndex = i_1;\n                      break;\n                    }\n                  }\n                }\n                currentField.readOnly = field['isReadOnly'] === 'true' ? true : false;\n              }\n            }\n          } else if (currentField instanceof PdfSignatureField) {\n            if (data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName]) || data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName])) {\n              if (data.hasOwnProperty(actualFieldName)) {\n                currentFieldName = actualFieldName;\n              }\n              var signatureFields = currentField;\n              if (data.hasOwnProperty(currentFieldName + \"fontName\")) {\n                this.drawFieldFreeTextAnnotations(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\"], data[currentFieldName + \"fontName\"], data[currentFieldName + \"fontSize\"]);\n              } else if (data.hasOwnProperty(currentFieldName + \"ImageData\")) {\n                this.drawFieldImage(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\"]);\n              } else if (data.hasOwnProperty(currentFieldName + \"bounds\")) {\n                this.drawFieldPath(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\"]);\n              }\n              var signatureFieldListCount = signatureFields.itemsCount;\n              if (signatureFieldListCount > 0) {\n                for (var k = 0; k < signatureFieldListCount; k++) {\n                  if (data.hasOwnProperty(currentFieldName + \"fontName\" + \"_\" + k)) {\n                    this.drawFieldFreeTextAnnotations(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\" + \"_\" + k], data[currentFieldName + \"fontName\" + \"_\" + k], data[currentFieldName + \"fontSize\" + \"_\" + k]);\n                  } else if (data.hasOwnProperty(currentFieldName + \"ImageData\" + \"_\" + k)) {\n                    this.drawFieldImage(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\" + \"_\" + k]);\n                  } else if (data.hasOwnProperty(currentFieldName + \"bounds\" + \"_\" + k)) {\n                    this.drawFieldPath(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\" + \"_\" + k]);\n                  }\n                }\n              }\n            }\n            if (data.hasOwnProperty(currentFieldName + \"isReadOnly\") || data.hasOwnProperty(actualFieldName + \"isReadOnly\")) {\n              if (data.hasOwnProperty(actualFieldName + \"isReadOnly\")) {\n                currentFieldName = actualFieldName;\n              }\n              currentField.readOnly = data[\"isReadOnly\"] === 'true' ? true : false;\n            }\n          }\n        }\n      }\n    }\n  };\n  FormFieldsBase.prototype.addFormFieldsToDocument = function (formFieldAttributes) {\n    var loadedPage = this.formFieldLoadedDocument.getPage(formFieldAttributes.pageNumber - 1);\n    var field;\n    switch (formFieldAttributes.formFieldAnnotationType) {\n      case \"Textbox\":\n      case \"PasswordField\":\n        //Create a password and text box field for name\n        field = this.saveTextBoxField(loadedPage, formFieldAttributes);\n        break;\n      case \"Checkbox\":\n        // Create Check Box field.\n        field = this.SaveCheckBoxField(loadedPage, formFieldAttributes);\n        break;\n      case \"RadioButton\":\n        field = this.saveRadioButtonField(formFieldAttributes);\n        break;\n      case \"DropdownList\":\n        // Create Drop Down field.\n        field = this.saveDropDownField(loadedPage, formFieldAttributes);\n        break;\n      case \"ListBox\":\n        field = this.saveListBoxField(loadedPage, formFieldAttributes);\n        break;\n      case \"SignatureField\":\n      case \"InitialField\":\n        //Create PDF Signature and Initial field.\n        field = this.saveSignatureField(loadedPage, formFieldAttributes);\n        break;\n    }\n    if (field) {\n      this.formFieldLoadedDocument.form.add(field);\n    }\n  };\n  FormFieldsBase.prototype.saveTextBoxField = function (loadedPage, formFieldAttributes) {\n    var textboxName = isNullOrUndefined(formFieldAttributes.name) ? formFieldAttributes.type === 'Password' ? 'passwordTextbox' : \"textbox\" : formFieldAttributes.name;\n    var textBounds = this.convertFieldBounds(formFieldAttributes);\n    var rotationAngle = loadedPage.rotation;\n    var isFieldRotated = false;\n    if (formFieldAttributes.rotation !== 0) {\n      isFieldRotated = true;\n    }\n    var fieldBounds = this.getBounds(textBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n    var bound = {\n      x: fieldBounds.X,\n      y: fieldBounds.Y,\n      width: fieldBounds.Width,\n      height: fieldBounds.Height\n    };\n    //Create a new text box field\n    var textbox = new PdfTextBoxField(loadedPage, textboxName, bound);\n    textbox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n    if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n      textbox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n    }\n    textbox.maxLength = formFieldAttributes.maxLength;\n    textbox.insertSpaces = formFieldAttributes.insertSpaces;\n    textbox.readOnly = formFieldAttributes.isReadonly;\n    textbox.required = formFieldAttributes.isRequired;\n    textbox.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n    textbox.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n    textbox.text = isNullOrUndefined(formFieldAttributes.value) ? \"\" : formFieldAttributes.value;\n    textbox.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? \"\" : formFieldAttributes.tooltip;\n    textbox.color = [formFieldAttributes.fontColor.r, formFieldAttributes.fontColor.g, formFieldAttributes.fontColor.b];\n    textbox.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n    textbox.border.width = formFieldAttributes.thickness;\n    textbox.multiLine = formFieldAttributes.Multiline;\n    var pdfFontStyle = this.getFontStyle(formFieldAttributes);\n    textbox._dictionary.set('FontStyle', pdfFontStyle);\n    var hasUnicode = /[^\\u0000-\\u007F]/.test(textbox.text);\n    if (hasUnicode) {\n      textbox.font = this.getTrueFont(formFieldAttributes.fontSize, pdfFontStyle);\n    } else {\n      textbox.font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.FontFamily), this.convertPixelToPoint(formFieldAttributes.fontSize), pdfFontStyle);\n    }\n    if (formFieldAttributes.formFieldAnnotationType === 'PasswordField') {\n      textbox.password = true;\n    }\n    if (!isFieldRotated) {\n      textbox.rotate = this.getFormfieldRotation(loadedPage.rotation);\n    }\n    return textbox;\n  };\n  FormFieldsBase.prototype.saveDropDownField = function (loadedPage, formFieldAttributes) {\n    var dropdownListName = isNullOrUndefined(formFieldAttributes.name) ? 'dropdownList' : formFieldAttributes.name;\n    var dropDownListbounds = this.convertFieldBounds(formFieldAttributes);\n    var rotationAngle = loadedPage.rotation;\n    var isFieldRotated = false;\n    if (formFieldAttributes.rotation !== 0) {\n      isFieldRotated = true;\n    }\n    var fieldBounds = this.getBounds(dropDownListbounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n    var bound = {\n      x: fieldBounds.X,\n      y: fieldBounds.Y,\n      width: fieldBounds.Width,\n      height: fieldBounds.Height\n    };\n    var comboBox = new PdfComboBoxField(loadedPage, dropdownListName, bound);\n    var hasUnicode = false;\n    for (var i = 0; i < formFieldAttributes.option.length; i++) {\n      var item = new PdfListFieldItem(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName, formFieldAttributes.option[parseInt(i.toString(), 10)].itemValue);\n      comboBox.addItem(item);\n      var flag = /[^\\u0000-\\u007F]/.test(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName);\n      if (flag) {\n        hasUnicode = true;\n      }\n    }\n    comboBox.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n    var pdfFontStyle = this.getFontStyle(formFieldAttributes);\n    comboBox._dictionary.set('FontStyle', pdfFontStyle);\n    if (hasUnicode) {\n      comboBox.font = this.getTrueFont(formFieldAttributes.FontSize, pdfFontStyle);\n    } else {\n      comboBox.font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.FontFamily), this.convertPixelToPoint(formFieldAttributes.FontSize), pdfFontStyle);\n    }\n    if (comboBox.itemsCount > 0) {\n      if (formFieldAttributes.selectedIndex.length > 0) {\n        comboBox.selectedIndex = formFieldAttributes.selectedIndex[0];\n      } else {\n        comboBox.selectedIndex = 0;\n      }\n    }\n    comboBox.required = formFieldAttributes.isRequired;\n    comboBox.readOnly = formFieldAttributes.isReadonly;\n    comboBox.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n    comboBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n    if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n      comboBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n    }\n    comboBox.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n    comboBox.border.width = formFieldAttributes.thickness;\n    comboBox.color = [formFieldAttributes.fontColor.r, formFieldAttributes.fontColor.g, formFieldAttributes.fontColor.b];\n    if (!isFieldRotated) {\n      comboBox.rotate = this.getFormfieldRotation(loadedPage.rotation);\n    }\n    comboBox.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? '' : formFieldAttributes.tooltip;\n    comboBox._font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.fontFamily), this.convertPixelToPoint(formFieldAttributes.fontSize), pdfFontStyle);\n    return comboBox;\n  };\n  FormFieldsBase.prototype.SaveCheckBoxField = function (loadedPage, formFieldAttributes) {\n    var checkboxFieldName = isNullOrUndefined(formFieldAttributes.name) && formFieldAttributes.name === '' ? \"checkboxField\" : formFieldAttributes.name;\n    var checkBounds = this.convertFieldBounds(formFieldAttributes);\n    var rotationAngle = loadedPage.rotation;\n    var isFieldRotated = false;\n    if (formFieldAttributes.rotation !== 0) {\n      isFieldRotated = true;\n    }\n    var fieldBounds = this.getBounds(checkBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n    var bound = {\n      x: fieldBounds.X,\n      y: fieldBounds.Y,\n      width: fieldBounds.Width,\n      height: fieldBounds.Height\n    };\n    //Create a new Check box field\n    var checkBoxField = new PdfCheckBoxField(checkboxFieldName, bound, loadedPage);\n    checkBoxField.readOnly = formFieldAttributes.isReadonly;\n    checkBoxField.required = formFieldAttributes.isRequired;\n    checkBoxField.checked = formFieldAttributes.isChecked;\n    checkBoxField.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n    checkBoxField._dictionary.set('ExportValue', formFieldAttributes.value);\n    checkBoxField.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n    if (formFieldAttributes.backgroundColor.r === 0 && formFieldAttributes.backgroundColor.g === 0 && formFieldAttributes.backgroundColor.b === 0 && formFieldAttributes.backgroundColor.a === 0) {\n      checkBoxField.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n    }\n    checkBoxField.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n    checkBoxField.border.width = formFieldAttributes.thickness;\n    checkBoxField.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? \"\" : formFieldAttributes.tooltip;\n    if (!isFieldRotated) {\n      checkBoxField.rotate = this.getFormfieldRotation(loadedPage.rotation);\n    }\n    return checkBoxField;\n  };\n  FormFieldsBase.prototype.saveListBoxField = function (loadedPage, formFieldAttributes) {\n    var listBoxName = isNullOrUndefined(formFieldAttributes.name) ? 'listBox' : formFieldAttributes.name;\n    var listBounds = this.convertFieldBounds(formFieldAttributes);\n    var rotationAngle = loadedPage.rotation;\n    var isFieldRotated = false;\n    if (formFieldAttributes.rotation !== 0) {\n      isFieldRotated = true;\n    }\n    var fieldBounds = this.getBounds(listBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n    var bound = {\n      x: fieldBounds.X,\n      y: fieldBounds.Y,\n      width: fieldBounds.Width,\n      height: fieldBounds.Height\n    };\n    var listBox = new PdfListBoxField(loadedPage, listBoxName, bound);\n    var flag = false;\n    var hasUnicode = false;\n    for (var i = 0; i < formFieldAttributes.option.length; i++) {\n      var item = new PdfListFieldItem(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName, formFieldAttributes.option[parseInt(i.toString(), 10)].itemValue);\n      listBox.addItem(item);\n      var unicode = /[^\\u0000-\\u007F]/.test(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName);\n      if (unicode) {\n        hasUnicode = true;\n      }\n      if (!isNullOrUndefined(item && item._dictionary && !flag)) {\n        item.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n        flag = true;\n      }\n    }\n    if (listBox.itemsCount > 0) {\n      var count = formFieldAttributes.selectedIndex.length;\n      if (Array.isArray(formFieldAttributes.selectedIndex) && count > 0) {\n        if (count === 1) {\n          listBox.selectedIndex = formFieldAttributes.selectedIndex[0];\n        } else {\n          var selectedIndexes = [];\n          for (var j = 0; j < count; j++) {\n            selectedIndexes.push(formFieldAttributes.selectedIndex[parseInt(j.toString(), 10)]);\n          }\n          listBox.selectedIndex = selectedIndexes;\n        }\n      } else {\n        listBox.selectedIndex = 0;\n      }\n    }\n    listBox.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n    listBox.multiSelect = true;\n    listBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n    if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n      listBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n    }\n    listBox.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n    listBox.border.width = formFieldAttributes.thickness;\n    var pdfFontStyle = this.getFontStyle(formFieldAttributes);\n    listBox._dictionary.set('FontStyle', pdfFontStyle);\n    if (hasUnicode) {\n      listBox.font = this.getTrueFont(formFieldAttributes.FontSize, pdfFontStyle);\n    } else {\n      listBox.font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.fontFamily), this.convertPixelToPoint(formFieldAttributes.fontSize), pdfFontStyle);\n    }\n    listBox.readOnly = formFieldAttributes.isReadonly;\n    listBox.required = formFieldAttributes.isRequired;\n    listBox.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n    listBox.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? \"\" : formFieldAttributes.tooltip;\n    if (!isFieldRotated) {\n      listBox.rotate = this.getFormfieldRotation(loadedPage.rotation);\n    }\n    return listBox;\n  };\n  FormFieldsBase.prototype.saveRadioButtonField = function (formFieldAttributes) {\n    var loadedPage = this.formFieldLoadedDocument.getPage(formFieldAttributes.pageNumber - 1);\n    var fieldName = isNullOrUndefined(formFieldAttributes.name) ? 'radiobuttonField' : formFieldAttributes.name;\n    var field = new PdfRadioButtonListField(loadedPage, fieldName);\n    var selectedIndex = 0;\n    var isSelectedItem = false;\n    var isReadOnly = false;\n    var isRequired = false;\n    for (var i = 0; i < formFieldAttributes.radiobuttonItem.length; i++) {\n      var radiobuttonItem = formFieldAttributes.radiobuttonItem[parseInt(i.toString(), 10)];\n      var page = this.formFieldLoadedDocument.getPage(radiobuttonItem.pageNumber - 1);\n      var radioButtonName = !(isNullOrUndefined(radiobuttonItem.value) || radiobuttonItem.value === '') ? radiobuttonItem.value : fieldName;\n      var rotationAngle = this.getRotateAngle(page.rotation);\n      var bounds = this.convertFieldBounds(radiobuttonItem);\n      var isFieldRotated = false;\n      if (formFieldAttributes.rotation != 0) {\n        isFieldRotated = true;\n      }\n      var fieldBounds = this.getBounds(bounds, page.size[1], page.size[0], rotationAngle, isFieldRotated);\n      var bound = {\n        x: fieldBounds.X,\n        y: fieldBounds.Y,\n        width: fieldBounds.Width,\n        height: fieldBounds.Height\n      };\n      var radioButtonItem = new PdfRadioButtonListItem(radioButtonName, bound, page);\n      if (isFieldRotated) {\n        radioButtonItem.rotationAngle = this.GetRotateAngle(page.rotation);\n      }\n      if (radiobuttonItem.isReadonly) {\n        isReadOnly = true;\n      }\n      if (radiobuttonItem.isRequired) {\n        isRequired = true;\n      }\n      radioButtonItem.borderColor = [radiobuttonItem.borderColor.r, radiobuttonItem.borderColor.g, radiobuttonItem.borderColor.b];\n      radioButtonItem.border.width = radiobuttonItem.thickness;\n      radioButtonItem.backColor = [radiobuttonItem.backgroundColor.r, radiobuttonItem.backgroundColor.g, radiobuttonItem.backgroundColor.b];\n      if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n        radioButtonItem.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n      }\n      radioButtonItem.visibility = this.getFormFieldsVisibility(radiobuttonItem.visibility);\n      field.add(radioButtonItem);\n      if (radiobuttonItem.isSelected) {\n        selectedIndex = i;\n        isSelectedItem = true;\n      }\n    }\n    field.readOnly = isReadOnly;\n    field.required = isRequired;\n    field.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? '' : formFieldAttributes.tooltip;\n    if (isSelectedItem) field.selectedIndex = selectedIndex;\n    return field;\n  };\n  FormFieldsBase.prototype.saveSignatureField = function (loadedPage, formFieldAttributes) {\n    var signatureFieldName = isNullOrUndefined(formFieldAttributes.name) ? 'signatureField' : formFieldAttributes.name;\n    var signatureFieldBounds = this.convertFieldBounds(formFieldAttributes);\n    var rotationAngle = loadedPage.rotation;\n    var isFieldRotated = false;\n    if (formFieldAttributes.rotation !== 0) {\n      isFieldRotated = true;\n    }\n    var fieldBounds = this.getBounds(signatureFieldBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n    var bound = {\n      x: fieldBounds.X,\n      y: fieldBounds.Y,\n      width: fieldBounds.Width,\n      height: fieldBounds.Height\n    };\n    var signatureField = new PdfSignatureField(loadedPage, signatureFieldName, bound);\n    //let page: PdfPage = signatureField.page;\n    signatureField.toolTip = formFieldAttributes.tooltip;\n    signatureField.required = formFieldAttributes.isRequired;\n    signatureField.readOnly = formFieldAttributes.isReadonly;\n    if (formFieldAttributes.formFieldAnnotationType === \"InitialField\") {\n      signatureField._dictionary.set(\"InitialField\", true);\n    }\n    signatureField.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n    signatureField.border.width = formFieldAttributes.thickness;\n    if (formFieldAttributes.visibility === \"hidden\") {\n      signatureField.visible = false;\n    } else if (formFieldAttributes.visibility === \"visible\") {\n      signatureField.visible = true;\n    }\n    if (formFieldAttributes.signatureType === \"Text\") {\n      this.drawDesignerFieldFreeTextAnnotations(signatureField, signatureFieldName, formFieldAttributes);\n    } else if (formFieldAttributes.signatureType === \"Image\") {\n      this.drawDesignerFieldImage(signatureField, signatureFieldName, formFieldAttributes);\n    } else if (formFieldAttributes.signatureType = \"Path\") {\n      if (!isNullOrUndefined(formFieldAttributes.value) && formFieldAttributes.value !== \"\") {\n        this.drawDesignerFieldPath(signatureField, signatureFieldName, formFieldAttributes);\n      }\n    }\n    if (!isFieldRotated) {\n      signatureField.rotate = this.getFormfieldRotation(loadedPage.rotation);\n    }\n    return signatureField;\n  };\n  FormFieldsBase.prototype.drawDesignerFieldFreeTextAnnotations = function (signatureField, currentFieldName, formFieldAttributes) {\n    var boundsObjects = {\n      X: formFieldAttributes.signatureBound.x,\n      Y: formFieldAttributes.signatureBound.y,\n      Width: formFieldAttributes.signatureBound.width,\n      Height: formFieldAttributes.signatureBound.height\n    };\n    var page = signatureField.page;\n    var pageRotationAngle = page.rotation;\n    var zoomvalue = formFieldAttributes.zoomValue;\n    var signBounds = {\n      X: this.convertPixelToPoint(boundsObjects.X / zoomvalue),\n      Y: this.convertPixelToPoint(boundsObjects.Y / zoomvalue),\n      Width: this.convertPixelToPoint(boundsObjects.Width / zoomvalue),\n      Height: this.convertPixelToPoint(boundsObjects.Height / zoomvalue)\n    };\n    var isFieldRotated = false;\n    if (formFieldAttributes.rotation !== 0) {\n      isFieldRotated = true;\n    }\n    signBounds = this.getBounds(signBounds, page.size[1], page.size[0], pageRotationAngle, isFieldRotated);\n    if (!isNullOrUndefined(formFieldAttributes)) {\n      var left = signBounds.X;\n      var top_3 = signBounds.Y;\n      var width = signBounds.Width;\n      var height = signBounds.Height;\n      var freeTextBounds = {\n        X: left,\n        Y: top_3,\n        Width: width,\n        Height: height\n      };\n      var annotation = new PdfFreeTextAnnotation(left, top_3, width, height);\n      annotation.setAppearance(true);\n      annotation._dictionary.set(\"T\", currentFieldName);\n      var font = formFieldAttributes.fontSize;\n      var fontFamilyEnum = PdfFontFamily.helvetica;\n      if (!isNullOrUndefined(formFieldAttributes.fontFamily)) {\n        fontFamilyEnum = this.getFontFamily(formFieldAttributes.fontFamily);\n      }\n      var fontStyle = this.getFontStyle(formFieldAttributes);\n      var hasUnicode = /[^\\u0000-\\u007F]/.test(formFieldAttributes.value);\n      if (hasUnicode) {\n        annotation.font = this.getTrueFont(this.convertPixelToPoint(font), fontStyle);\n      } else {\n        annotation.font = new PdfStandardFont(fontFamilyEnum, this.convertPixelToPoint(formFieldAttributes.fontSize), fontStyle);\n      }\n      annotation.text = formFieldAttributes.value;\n      this.setFontSize(this.convertPixelToPoint(font), annotation.font, formFieldAttributes.value, freeTextBounds, fontFamilyEnum, fontStyle);\n      annotation.border.width = 0;\n      annotation.textAlignment = PdfTextAlignment.center;\n      annotation.flags = PdfAnnotationFlag.print;\n      if (!isFieldRotated) {\n        annotation.rotationAngle = Math.abs(this.getRotateAngle(page.rotation));\n      }\n      annotation.setValues(\"AnnotationType\", \"Signature\");\n      annotation.setAppearance(true);\n      page.annotations.add(annotation);\n    }\n  };\n  FormFieldsBase.prototype.drawDesignerFieldImage = function (signatureField, currentFieldName, formFieldAttributes) {\n    var boundsObjects = {\n      X: formFieldAttributes.signatureBound.x,\n      Y: formFieldAttributes.signatureBound.y,\n      Width: formFieldAttributes.signatureBound.width,\n      Height: formFieldAttributes.signatureBound.height\n    };\n    var page = signatureField.page;\n    var pageRotationAngle = page.rotation;\n    var zoomvalue = formFieldAttributes.zoomValue;\n    var signBounds = {\n      X: this.convertPixelToPoint(boundsObjects.X / zoomvalue),\n      Y: this.convertPixelToPoint(boundsObjects.Y / zoomvalue),\n      Width: this.convertPixelToPoint(boundsObjects.Width / zoomvalue),\n      Height: this.convertPixelToPoint(boundsObjects.Height / zoomvalue)\n    };\n    var isFieldRotated = false;\n    if (formFieldAttributes.rotation !== 0) {\n      isFieldRotated = true;\n    }\n    signBounds = this.getBounds(signBounds, page.size[1], page.size[0], pageRotationAngle, isFieldRotated);\n    if (!isNullOrUndefined(formFieldAttributes)) {\n      var left = signBounds.X;\n      var top_4 = signBounds.Y;\n      var width = signBounds.Width;\n      var height = signBounds.Height;\n      var imageUrl = formFieldAttributes.value.toString().split(',')[1];\n      var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top_4, width, height);\n      var bitmap = new PdfBitmap(imageUrl);\n      rubberStampAnnotation.appearance.normal.graphics.drawImage(bitmap, 0, 0, width, height);\n      if (!isFieldRotated) {\n        rubberStampAnnotation.rotationAngle = Math.abs(this.getRotateAngle(page.rotation));\n      }\n      rubberStampAnnotation._dictionary.set(\"T\", currentFieldName);\n      rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n      page.annotations.add(rubberStampAnnotation);\n    }\n  };\n  FormFieldsBase.prototype.drawDesignerFieldPath = function (signatureField, currentFieldName, formFieldAttributes) {\n    var stampObjects = JSON.parse(formFieldAttributes.value);\n    var boundsObjects = {\n      X: formFieldAttributes.signatureBound.x,\n      Y: formFieldAttributes.signatureBound.y,\n      Width: formFieldAttributes.signatureBound.width,\n      Height: formFieldAttributes.signatureBound.height\n    };\n    var page = signatureField.page;\n    var pageRotationAngle = page.rotation;\n    var zoomvalue = formFieldAttributes.zoomValue;\n    var signBounds = {\n      X: this.convertPixelToPoint(boundsObjects.X / zoomvalue),\n      Y: this.convertPixelToPoint(boundsObjects.Y / zoomvalue),\n      Width: this.convertPixelToPoint(boundsObjects.Width / zoomvalue),\n      Height: this.convertPixelToPoint(boundsObjects.Height / zoomvalue)\n    };\n    signBounds = this.getBounds(signBounds, page.size[1], page.size[0], pageRotationAngle, false);\n    var pageNumber = 0;\n    for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n      if (page === this.formFieldLoadedDocument.getPage(k)) {\n        break;\n      }\n      pageNumber++;\n    }\n    // Need to check and implement the logic of skia sharp to reduced the ink annotation thickness\n    if (stampObjects.length > 0) {\n      var left = signBounds.X;\n      var top_5 = signBounds.Y;\n      var width = signBounds.Width;\n      var height = signBounds.Height;\n      var minimumX = -1;\n      var minimumY = -1;\n      var maximumX = -1;\n      var maximumY = -1;\n      for (var p = 0; p < stampObjects.length; p++) {\n        var value = stampObjects[parseInt(p.toString(), 10)];\n        if (minimumX == -1) {\n          minimumX = value.x;\n          minimumY = value.y;\n          maximumX = value.x;\n          maximumY = value.x;\n        } else {\n          var point1 = value.x;\n          var point2 = value.y;\n          0;\n          if (minimumX >= point1) {\n            minimumX = point1;\n          }\n          if (minimumY >= point2) {\n            minimumY = point2;\n          }\n          if (maximumX <= point1) {\n            maximumX = point1;\n          }\n          if (maximumY <= point2) {\n            maximumY = point2;\n          }\n        }\n      }\n      var newDifferenceX = (maximumX - minimumX) / width;\n      var newDifferenceY = (maximumY - minimumY) / height;\n      var linePoints = [];\n      var isNewValues = 0;\n      if (pageRotationAngle !== 0) {\n        for (var j = 0; j < stampObjects.length; j++) {\n          var value = stampObjects[parseInt(j.toString(), 10)];\n          var path = value.command.toString();\n          if (path == \"M\" && j !== 0) {\n            isNewValues = j;\n            break;\n          }\n          linePoints.push(parseFloat(value.x));\n          linePoints.push(parseFloat(value.y));\n        }\n        linePoints = [];\n        for (var z = 0; z < stampObjects.length; z++) {\n          var value = stampObjects[parseInt(z.toString(), 10)];\n          linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n          linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - (parseFloat(value.y) - minimumY) / newDifferenceY - top_5);\n        }\n      } else {\n        for (var k = 0; k < stampObjects.length; k++) {\n          var value = stampObjects[parseInt(k.toString(), 10)];\n          var path = value.command.toString();\n          if (path == \"M\" && k !== 0) {\n            isNewValues = k;\n            break;\n          }\n          linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n          var newX = (parseFloat(value.y) - minimumY) / newDifferenceY;\n          linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_5);\n        }\n      }\n      var inkAnnotation = new PdfInkAnnotation([left, top_5, width, height], linePoints);\n      inkAnnotation.flags = PdfAnnotationFlag.print;\n      inkAnnotation.bounds = {\n        x: signBounds.X,\n        y: signBounds.Y,\n        width: signBounds.Width,\n        height: signBounds.Height\n      };\n      inkAnnotation.border.width = 0;\n      inkAnnotation.color = [0, 0, 0];\n      inkAnnotation.setValues(\"annotationSignature\", \"annotationSignature\");\n      linePoints = [];\n      if (pageRotationAngle !== 0) {\n        var pathCollection = [];\n        for (var t = isNewValues; t < stampObjects.length; t++) {\n          var value = stampObjects[parseInt(t.toString(), 10)];\n          var path = value.command.toString();\n          if (path === \"M\" && t !== isNewValues) {\n            pathCollection.push(linePoints);\n            linePoints = [];\n          }\n          linePoints.push(parseFloat(value.x));\n          linePoints.push(parseFloat(value.y));\n        }\n        if (linePoints.length > 0) {\n          pathCollection.push(linePoints);\n        }\n        for (var w = 0; w < pathCollection.length; w++) {\n          var pointsCollections = pathCollection[parseInt(w.toString(), 10)];\n          linePoints = [];\n          if (pointsCollections.length > 0) {\n            for (var z = 0; z < stampObjects.length; z++) {\n              var value = stampObjects[parseInt(z.toString(), 10)];\n              linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n              linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - (parseFloat(value.y) - minimumY) / newDifferenceY - top_5);\n            }\n            inkAnnotation.inkPointsCollection.push(linePoints);\n          }\n          linePoints = [];\n        }\n      } else {\n        for (var r = 0; r < stampObjects.length; r++) {\n          var value = stampObjects[parseInt(r.toString(), 10)];\n          var path = value.command.toString();\n          if (path == \"M\" && r !== 0) {\n            inkAnnotation.inkPointsCollection.push(linePoints);\n            linePoints = [];\n          }\n          linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n          var newX = (parseFloat(value.y) - minimumY) / newDifferenceY;\n          linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_5);\n        }\n        if (linePoints.length > 0) {\n          inkAnnotation.inkPointsCollection.push(linePoints);\n        }\n      }\n      inkAnnotation._dictionary.set(\"T\", currentFieldName);\n      inkAnnotation.setAppearance(true);\n      inkAnnotation.rotationAngle = Math.abs(this.getRotateAngle(page.rotation));\n      this.formFieldLoadedDocument.getPage(pageNumber).annotations.add(inkAnnotation);\n    }\n  };\n  FormFieldsBase.prototype.setFontSize = function (fontSize, font, text, freeTextBounds, fontFamilyEnum, fontStyle) {\n    var minimumFontSize = 0.25;\n    font = new PdfStandardFont(fontFamilyEnum, fontSize, fontStyle);\n    do {\n      fontSize = fontSize - 0.001;\n      font._size = fontSize;\n      if (fontSize < minimumFontSize) {\n        font._size = minimumFontSize;\n        break;\n      }\n      var sizeF = font.measureString(text);\n      if (sizeF[0] < freeTextBounds.Width && sizeF[1] < freeTextBounds.height) {\n        font._size = fontSize;\n        break;\n      }\n    } while (fontSize > minimumFontSize);\n  };\n  FormFieldsBase.prototype.getTrueFont = function (fontSize, fontStyle) {\n    var font = new PdfTrueTypeFont(getArialFontData(), this.convertPixelToPoint(fontSize), fontStyle);\n    return font;\n  };\n  FormFieldsBase.prototype.convertFieldBounds = function (formFieldAttributes) {\n    var zoomvalue = formFieldAttributes.zoomValue;\n    return {\n      X: this.convertPixelToPoint(formFieldAttributes.lineBound.X / zoomvalue),\n      Y: this.convertPixelToPoint(formFieldAttributes.lineBound.Y / zoomvalue),\n      Width: this.convertPixelToPoint(formFieldAttributes.lineBound.Width / zoomvalue),\n      Height: this.convertPixelToPoint(formFieldAttributes.lineBound.Height / zoomvalue)\n    };\n  };\n  FormFieldsBase.prototype.getFontFamily = function (font) {\n    var fontFamily = PdfFontFamily.helvetica;\n    switch (font) {\n      case 'Courier':\n        fontFamily = PdfFontFamily.courier;\n        break;\n      case 'Times New Roman':\n        fontFamily = PdfFontFamily.timesRoman;\n        break;\n      case 'Symbol':\n        fontFamily = PdfFontFamily.symbol;\n        break;\n      case 'ZapfDingbats':\n        fontFamily = PdfFontFamily.zapfDingbats;\n        break;\n    }\n    return fontFamily;\n  };\n  //Need to calculate bound for all rotation\n  FormFieldsBase.prototype.getBounds = function (bounds, pageHeight, pageWidth, pageRotation, isFieldRotated) {\n    var bound = {};\n    if (pageRotation === 0) {\n      bound = {\n        X: bounds.X,\n        Y: bounds.Y,\n        Width: bounds.Width,\n        Height: bounds.Height\n      };\n    } else if (pageRotation === 1) {\n      if (isFieldRotated) {\n        bound = {\n          X: bounds.Y - (bounds.Width / 2 - bounds.Height / 2),\n          Y: pageHeight - bounds.X - bounds.Height - (bounds.Width / 2 - bounds.Height / 2),\n          Width: bounds.Width,\n          Height: bounds.Height\n        };\n      } else {\n        bound = {\n          X: bounds.Y,\n          Y: pageHeight - bounds.X - bounds.Width,\n          Width: bounds.Height,\n          Height: bounds.Width\n        };\n      }\n    } else if (pageRotation === 2) {\n      bound = {\n        X: pageWidth - bounds.X - bounds.Width,\n        Y: pageHeight - bounds.Y - bounds.Height,\n        Width: bounds.Width,\n        Height: bounds.Height\n      };\n    } else if (pageRotation === 3) {\n      if (isFieldRotated) {\n        bound = {\n          X: pageWidth - bounds.Y - bounds.Height - (bounds.Width / 2 - bounds.Height / 2),\n          Y: bounds.X + (bounds.Width / 2 - bounds.Height / 2),\n          Width: bounds.Width,\n          Height: bounds.Height\n        };\n      } else {\n        bound = {\n          X: pageWidth - bounds.Y - bounds.Height,\n          Y: bounds.X,\n          Width: bounds.Height,\n          Height: bounds.Width\n        };\n      }\n    }\n    return bound;\n  };\n  FormFieldsBase.prototype.getFormfieldRotation = function (rotation) {\n    var angle = 0;\n    switch (rotation) {\n      case 1:\n        angle = 90;\n        break;\n      case 2:\n        angle = 180;\n        break;\n      case 3:\n        angle = 270;\n        break;\n      case 4:\n        angle = 360;\n        break;\n    }\n    return angle;\n  };\n  //Need to check the form field textAlignment property\n  FormFieldsBase.prototype.getTextAlignment = function (alignment) {\n    var textAlignment;\n    switch (alignment) {\n      case 'left':\n        textAlignment = PdfTextAlignment.left;\n        break;\n      case 'right':\n        textAlignment = PdfTextAlignment.right;\n        break;\n      case 'center':\n        textAlignment = PdfTextAlignment.center;\n        break;\n      case 'justify':\n        textAlignment = PdfTextAlignment.justify;\n        break;\n    }\n    return textAlignment;\n  };\n  //Need to check the form field visibility property\n  FormFieldsBase.prototype.getFormFieldsVisibility = function (visibility) {\n    var fieldVisibility;\n    switch (visibility) {\n      case 'visible':\n        fieldVisibility = PdfFormFieldVisibility.visible;\n        break;\n      case 'hidden':\n        fieldVisibility = PdfFormFieldVisibility.hidden;\n        break;\n      case 'visibleNotPrintable':\n        fieldVisibility = PdfFormFieldVisibility.visibleNotPrintable;\n        break;\n      case 'hiddenPrintable':\n        fieldVisibility = PdfFormFieldVisibility.hiddenPrintable;\n        break;\n    }\n    return fieldVisibility;\n  };\n  FormFieldsBase.prototype.getFontStyle = function (formFieldAttributes) {\n    var fontStyle;\n    fontStyle = PdfFontStyle.regular;\n    if (!isNullOrUndefined(formFieldAttributes) && !isNullOrUndefined(formFieldAttributes.font)) {\n      if (formFieldAttributes.font.isBold) {\n        fontStyle |= PdfFontStyle.bold;\n      }\n      if (formFieldAttributes.font.isItalic) {\n        fontStyle |= PdfFontStyle.italic;\n      }\n      if (formFieldAttributes.font.isUnderline) {\n        fontStyle |= PdfFontStyle.underline;\n      }\n      if (formFieldAttributes.font.isStrikeout) {\n        fontStyle |= PdfFontStyle.strikeout;\n      }\n    }\n    return fontStyle;\n  };\n  FormFieldsBase.prototype.convertPixelToPoint = function (value) {\n    return value * 72 / 96;\n  };\n  FormFieldsBase.prototype.convertPointtoPixel = function (value) {\n    return value * 96 / 72;\n  };\n  FormFieldsBase.prototype.fontConvert = function (font) {\n    return {\n      Bold: font.isBold,\n      FontFamily: this.getFontFamilyString(font.fontFamily),\n      Height: font.height,\n      Italic: font.isItalic,\n      Name: this.getFontFamilyString(font.fontFamily).toString(),\n      Size: font.size,\n      Strikeout: font.isStrikeout,\n      Underline: font.isUnderline,\n      Style: font.style\n    };\n  };\n  FormFieldsBase.prototype.parseFontStyle = function (numberValue, fontObject) {\n    if ((numberValue & PdfFontStyle.underline) > 0) {\n      fontObject.Underline = true;\n    }\n    if ((numberValue & PdfFontStyle.strikeout) > 0) {\n      fontObject.Strikeout = true;\n    }\n    if ((numberValue & PdfFontStyle.bold) > 0) {\n      fontObject.Bold = true;\n    }\n    if ((numberValue & PdfFontStyle.italic) > 0) {\n      fontObject.Italic = true;\n    }\n    return fontObject;\n  };\n  /**\n   * @private\n   */\n  FormFieldsBase.prototype.GetFormFields = function () {\n    this.PdfRenderedFormFields = [];\n    var loadedForm = this.formFieldLoadedDocument.form;\n    if (!isNullOrUndefined(loadedForm) && !isNullOrUndefined(loadedForm._fields)) {\n      loadedForm.orderFormFields();\n      for (var i = 0; i < loadedForm.count; i++) {\n        var field = loadedForm.fieldAt(i);\n        var page = field.page;\n        var pageNumber = 0;\n        for (var j = 0; j < this.formFieldLoadedDocument.pageCount; j++) {\n          if (page === this.formFieldLoadedDocument.getPage(j)) {\n            break;\n          }\n          pageNumber++;\n        }\n        if (!isNullOrUndefined(field.page)) {\n          if (field instanceof PdfTextBoxField) {\n            var textBox = field;\n            if (textBox.itemsCount > 0) {\n              this.addTextBoxFieldItems(textBox);\n            } else {\n              this.addTextBoxField(textBox, pageNumber, textBox.bounds, null);\n            }\n          } else if (field instanceof PdfComboBoxField) {\n            var comboBoxField = loadedForm.fieldAt(i);\n            this.addComboBoxField(comboBoxField, pageNumber);\n          } else if (field instanceof PdfCheckBoxField) {\n            var checkbox = field;\n            if (checkbox.itemsCount > 1) {\n              this.addCheckBoxFieldItems(checkbox);\n            } else {\n              this.addCheckBoxField(checkbox, pageNumber, checkbox.bounds, null);\n            }\n          } else if (field instanceof PdfListBoxField) {\n            var listBoxField = field;\n            this.addListBoxField(listBoxField, pageNumber);\n          } else if (field instanceof PdfRadioButtonListField) {\n            for (var i_2 = 0; i_2 < field.itemsCount; i_2++) {\n              var item = field.itemAt(i_2);\n              if (item) {\n                var page_1 = item.page;\n                if (page_1) {\n                  this.addRadioButtonField(item, page_1._pageIndex, field.name);\n                }\n              }\n            }\n          } else if (loadedForm.fieldAt(i) instanceof PdfSignatureField) {\n            var signatureField = loadedForm.fieldAt(i);\n            if (signatureField.isSigned && this.showDigitalSignatureAppearance) {\n              this.m_isDigitalSignaturePresent = true;\n              signatureField.flatten = true;\n            } else if (!signatureField.isSigned || !this.hideEmptyDigitalSignatureFields) {\n              if (signatureField.itemsCount > 0) {\n                this.addSigntureFieldItems(signatureField);\n              } else {\n                this.addSignatureField(signatureField, pageNumber, signatureField.bounds);\n              }\n            }\n          }\n        }\n      }\n    }\n    this.retrieveInkAnnotation(this.formFieldLoadedDocument);\n  };\n  FormFieldsBase.prototype.addTextBoxFieldItems = function (field) {\n    if (field instanceof PdfTextBoxField) {\n      var textBoxField = field;\n      if (textBoxField.itemsCount > 0) {\n        for (var i = 0; i < textBoxField.itemsCount; i++) {\n          var item = textBoxField.itemAt(i).page;\n          if (!isNullOrUndefined(item)) {\n            var j = 0;\n            for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n              if (item == this.formFieldLoadedDocument.getPage(j)) {\n                break;\n              }\n              j++;\n            }\n            this.addTextBoxField(textBoxField, j, textBoxField.itemAt(i).bounds, textBoxField.itemAt(i).font);\n          }\n        }\n      }\n    }\n  };\n  FormFieldsBase.prototype.addTextBoxField = function (textBox, pageNumber, bounds, font) {\n    var formFields = new PdfRenderedFields();\n    formFields.FieldName = textBox.name;\n    formFields.ActualFieldName = textBox.name;\n    if (textBox.password) {\n      formFields.Name = \"Password\";\n    } else {\n      formFields.Name = \"Textbox\";\n    }\n    formFields.ToolTip = textBox.toolTip;\n    if (!isNullOrUndefined(bounds)) {\n      formFields.LineBounds = {\n        X: bounds.x,\n        Y: bounds.y,\n        Width: bounds.width,\n        Height: bounds.height\n      };\n    } else {\n      formFields.LineBounds = {\n        X: textBox.bounds.x,\n        Y: textBox.bounds.y,\n        Width: textBox.bounds.width,\n        Height: textBox.bounds.height\n      };\n    }\n    formFields.TabIndex = textBox.tabIndex;\n    formFields.PageIndex = pageNumber;\n    formFields.BorderWidth = textBox.border.width;\n    formFields.BorderStyle = textBox.border.style;\n    if (!isNullOrUndefined(textBox.backColor)) {\n      formFields.BackColor = {\n        R: textBox.backColor[0],\n        G: textBox.backColor[1],\n        B: textBox.backColor[2]\n      };\n    } else {\n      formFields.IsTransparent = true;\n    }\n    formFields.Alignment = textBox.textAlignment;\n    formFields.MaxLength = textBox.maxLength;\n    formFields.Visible = textBox.visibility;\n    formFields.InsertSpaces = textBox.insertSpaces;\n    if (!isNullOrUndefined(font)) {\n      formFields.Font = this.fontConvert(font);\n    } else {\n      formFields.Font = this.fontConvert(textBox.font);\n    }\n    if (textBox._dictionary.has(\"FontStyle\")) {\n      var fontStyle = textBox._dictionary.get(\"FontStyle\");\n      formFields.Font = this.parseFontStyle(fontStyle, formFields.Font);\n    }\n    formFields.Rotation = textBox.rotationAngle;\n    formFields.IsReadonly = textBox.readOnly;\n    formFields.IsRequired = textBox.required;\n    if (!isNullOrUndefined(textBox.color)) {\n      formFields.FontColor = {\n        R: textBox.color[0],\n        G: textBox.color[1],\n        B: textBox.color[2]\n      };\n      ;\n    }\n    formFields.BorderColor = {\n      R: textBox.borderColor[0],\n      G: textBox.borderColor[1],\n      B: textBox.borderColor[2]\n    };\n    formFields.Text = textBox.text ? textBox.text.replace(\"\\\"\", \"\") : '';\n    formFields.Multiline = textBox.multiLine;\n    formFields.RotationAngle = this.GetRotateAngle(textBox.page.rotation);\n    formFields.TextList = [];\n    this.PdfRenderedFormFields.push(formFields);\n  };\n  FormFieldsBase.prototype.addComboBoxField = function (comboBoxField, pageNumber) {\n    var formFields = new PdfRenderedFields();\n    formFields.Name = 'DropDown';\n    formFields.ToolTip = comboBoxField.toolTip;\n    formFields.FieldName = comboBoxField.name;\n    formFields.Font = this.fontConvert(comboBoxField.font);\n    formFields.IsAutoSize = comboBoxField._isAutoFontSize;\n    formFields.Selected = comboBoxField.editable;\n    if (comboBoxField._dictionary.has('FontStyle')) {\n      var fontStyle = comboBoxField._dictionary.get('FontStyle');\n      formFields.Font = this.parseFontStyle(fontStyle, formFields.Font);\n    }\n    formFields.ActualFieldName = comboBoxField.name;\n    formFields.SelectedValue = comboBoxField.selectedValue;\n    formFields.selectedIndex = comboBoxField.selectedIndex;\n    formFields.LineBounds = {\n      X: comboBoxField.bounds.x,\n      Y: comboBoxField.bounds.y,\n      Width: comboBoxField.bounds.width,\n      Height: comboBoxField.bounds.height\n    };\n    formFields.TabIndex = comboBoxField.tabIndex;\n    formFields.PageIndex = pageNumber;\n    if (!isNullOrUndefined(comboBoxField.backColor)) {\n      formFields.BackColor = {\n        R: comboBoxField.backColor[0],\n        G: comboBoxField.backColor[1],\n        B: comboBoxField.backColor[2]\n      };\n    } else {\n      formFields.IsTransparent = true;\n    }\n    formFields.BorderWidth = comboBoxField.border.width;\n    formFields.BorderStyle = comboBoxField.border.style;\n    formFields.BorderColor = {\n      R: comboBoxField.borderColor[0],\n      G: comboBoxField.borderColor[1],\n      B: comboBoxField.borderColor[2]\n    };\n    formFields.FontColor = {\n      R: comboBoxField.color[0],\n      G: comboBoxField.color[1],\n      B: comboBoxField.color[2]\n    };\n    formFields.Rotation = comboBoxField.rotationAngle;\n    formFields.IsRequired = comboBoxField.required;\n    formFields.IsReadonly = comboBoxField.readOnly;\n    formFields.Visible = comboBoxField.visibility;\n    formFields.RotationAngle = this.GetRotateAngle(comboBoxField.page.rotation);\n    formFields.Alignment = comboBoxField.textAlignment;\n    formFields.TextList = [];\n    if (comboBoxField._dictionary.has('Opt')) {\n      var options = comboBoxField._dictionary.get('Opt');\n      if (options.length > 0) {\n        formFields.TextList = options.map(function (item) {\n          return typeof item === \"string\" ? item : typeof item === \"object\" ? item[0] : \"\";\n        });\n      }\n    }\n    if (formFields.TextList.length === 0) {\n      for (var i = 0; i < comboBoxField.itemsCount; i++) {\n        var item = comboBoxField.itemAt(i);\n        if (item) {\n          formFields.TextList.push(item.text);\n          if (i == 0) {\n            formFields.Alignment = item.textAlignment;\n          }\n        }\n      }\n    }\n    this.PdfRenderedFormFields.push(formFields);\n  };\n  FormFieldsBase.prototype.addCheckBoxFieldItems = function (field) {\n    var page = field.page;\n    if (field instanceof PdfCheckBoxField) {\n      var checkBoxField = field;\n      if (checkBoxField.itemsCount > 0) {\n        for (var i = 0; i < checkBoxField.itemsCount; i++) {\n          var item = checkBoxField.itemAt(i).page;\n          if (!isNullOrUndefined(item)) {\n            var j = 0;\n            for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n              if (item == this.formFieldLoadedDocument.getPage(j)) {\n                break;\n              }\n              j++;\n            }\n            this.addCheckBoxField(checkBoxField, j, checkBoxField.itemAt(i).bounds, i.toString());\n          }\n        }\n      }\n    }\n  };\n  FormFieldsBase.prototype.addCheckBoxField = function (chkField, index, bounds, checkBoxIndex) {\n    var formFields = new PdfRenderedFields();\n    formFields.Name = \"CheckBox\";\n    formFields.ToolTip = chkField.toolTip;\n    if (!bounds.IsEmpty) {\n      formFields.LineBounds = {\n        X: bounds.x,\n        Y: bounds.y,\n        Width: bounds.width,\n        Height: bounds.height\n      };\n    } else {\n      formFields.LineBounds = {\n        X: chkField.bounds.x,\n        Y: chkField.bounds.y,\n        Width: chkField.bounds.width,\n        Height: chkField.bounds.height\n      };\n    }\n    formFields.Selected = chkField.checked;\n    formFields.TabIndex = chkField.tabIndex;\n    formFields.GroupName = chkField.name.replace(/[^0-9a-zA-Z]+/g, \"\");\n    formFields.ActualFieldName = chkField.name;\n    formFields.PageIndex = index;\n    formFields.BorderWidth = chkField.border.width;\n    if (!isNullOrUndefined(chkField.backColor)) {\n      formFields.BackColor = {\n        R: chkField.backColor[0],\n        G: chkField.backColor[1],\n        B: chkField.backColor[2]\n      };\n    } else {\n      formFields.IsTransparent = true;\n    }\n    formFields.BorderStyle = chkField.border.style;\n    formFields.BorderColor = {\n      R: chkField.borderColor[0],\n      G: chkField.borderColor[1],\n      B: chkField.borderColor[2]\n    };\n    formFields.RotationAngle = this.GetRotateAngle(chkField.page.rotation);\n    formFields.IsReadonly = chkField.readOnly;\n    formFields.IsRequired = chkField.required;\n    formFields.Visible = chkField.visibility;\n    var value = chkField._dictionary._get(\"ExportValue\");\n    if (chkField._dictionary._get(\"ExportValue\") && !isNullOrUndefined(value)) {\n      formFields.Value = value;\n    }\n    if (!isNullOrUndefined(checkBoxIndex)) {\n      formFields.CheckBoxIndex = checkBoxIndex;\n      var chekckboxField = chkField.itemAt(parseInt(checkBoxIndex));\n      if (!isNullOrUndefined(chekckboxField)) {\n        formFields.Selected = chekckboxField.checked;\n      }\n    }\n    formFields.RotationAngle = this.GetRotateAngle(chkField.page.rotation);\n    this.PdfRenderedFormFields.push(formFields);\n  };\n  FormFieldsBase.prototype.addListBoxField = function (listBoxField, pageNumber) {\n    var formFields = new PdfRenderedFields();\n    formFields.Name = 'ListBox';\n    formFields.ToolTip = listBoxField.toolTip;\n    formFields.Text = listBoxField.name.replace(/[^0-9a-zA-Z]+/g, '');\n    formFields.ActualFieldName = listBoxField.name;\n    var itemCount = listBoxField.itemsCount;\n    if (itemCount > 0) {\n      var selectedIndex = listBoxField.selectedIndex;\n      if (Array.isArray(selectedIndex)) {\n        for (var i = 0; i < selectedIndex.length; i++) {\n          formFields.SelectedList.push(selectedIndex[parseInt(i.toString(), 10)]);\n        }\n      } else {\n        formFields.SelectedList.push(selectedIndex);\n      }\n    }\n    formFields.Font = this.fontConvert(listBoxField.font);\n    if (listBoxField._dictionary.has('FontStyle')) {\n      var fontStyle = listBoxField._dictionary.get('FontStyle');\n      formFields.Font = this.parseFontStyle(fontStyle, formFields.Font);\n    }\n    formFields.LineBounds = {\n      X: listBoxField.bounds.x,\n      Y: listBoxField.bounds.y,\n      Width: listBoxField.bounds.width,\n      Height: listBoxField.bounds.height\n    };\n    formFields.TabIndex = listBoxField.tabIndex;\n    formFields.PageIndex = pageNumber;\n    formFields.BorderWidth = listBoxField.border.width;\n    formFields.BorderStyle = listBoxField.border.style;\n    if (!isNullOrUndefined(listBoxField.backColor)) {\n      formFields.BackColor = {\n        R: listBoxField.backColor[0],\n        G: listBoxField.backColor[1],\n        B: listBoxField.backColor[2]\n      };\n    } else {\n      formFields.IsTransparent = true;\n    }\n    formFields.FontColor = {\n      R: listBoxField.color[0],\n      G: listBoxField.color[1],\n      B: listBoxField.color[2]\n    };\n    formFields.BorderColor = {\n      R: listBoxField.borderColor[0],\n      G: listBoxField.borderColor[1],\n      B: listBoxField.borderColor[2]\n    };\n    formFields.Rotation = listBoxField.rotationAngle;\n    formFields.IsReadonly = listBoxField.readOnly;\n    formFields.IsRequired = listBoxField.required;\n    formFields.Visible = listBoxField.visibility;\n    formFields.MultiSelect = listBoxField.multiSelect;\n    //Need to implement selected value\n    if (itemCount > 0) {\n      if (Array.isArray(listBoxField.selectedIndex) && Array.isArray(listBoxField.selectedValue)) {\n        formFields.selectedIndex = listBoxField.selectedIndex[0];\n        formFields.SelectedValue = listBoxField.selectedValue[0];\n      }\n    }\n    for (var i = 0; i < itemCount; i++) {\n      var item = listBoxField.itemAt(i);\n      if (item) {\n        formFields.TextList.push(item.text);\n        if (i === 0) {\n          formFields.Alignment = listBoxField.textAlignment;\n        }\n      }\n    }\n    formFields.RotationAngle = this.GetRotateAngle(listBoxField.page.rotation);\n    this.PdfRenderedFormFields.push(formFields);\n  };\n  FormFieldsBase.prototype.addRadioButtonField = function (item, index, radioButtonName) {\n    var parent = item._field;\n    var formFields = new PdfRenderedFields();\n    formFields.Name = 'RadioButton';\n    formFields.ToolTip = parent.toolTip;\n    if (!isNullOrUndefined(parent.actualName)) {\n      formFields.GroupName = parent.actualName.replace(/[^0-9a-zA-Z]+/g, '');\n      formFields.ActualFieldName = radioButtonName;\n    }\n    formFields.TabIndex = parent.tabIndex;\n    formFields.Selected = item.selected;\n    formFields.LineBounds = {\n      X: item.bounds.x,\n      Y: item.bounds.y,\n      Width: item.bounds.width,\n      Height: item.bounds.height\n    };\n    formFields.Value = item.value;\n    formFields.PageIndex = index;\n    if (!isNullOrUndefined(item.backColor)) {\n      formFields.BackColor = {\n        R: item.backColor[0],\n        G: item.backColor[1],\n        B: item.backColor[2]\n      };\n    } else {\n      formFields.IsTransparent = true;\n    }\n    formFields.BorderWidth = item.border.width;\n    formFields.BorderStyle = item.border.style;\n    formFields.BorderColor = {\n      R: parent.borderColor[0],\n      G: parent.borderColor[1],\n      B: parent.borderColor[2]\n    };\n    formFields.Rotation = parent.rotationAngle;\n    formFields.IsRequired = parent.required;\n    formFields.IsReadonly = parent.readOnly;\n    formFields.Visible = parent.visibility;\n    formFields.RotationAngle = this.GetRotateAngle(item.page.rotation);\n    this.PdfRenderedFormFields.push(formFields);\n  };\n  FormFieldsBase.prototype.checkTransparent = function (backColor) {\n    var IsTransparent = false;\n    if (backColor.R === 0 && backColor.G === 0 && backColor.B === 0) {\n      IsTransparent = true;\n    }\n    return IsTransparent;\n  };\n  FormFieldsBase.prototype.GetRotateAngle = function (angleString) {\n    var angle = 0;\n    switch (angleString) {\n      case 0:\n        angle = 0;\n        break;\n      case 1:\n        angle = -90;\n        break;\n      case 2:\n        angle = -180;\n        break;\n      case 3:\n        angle = -270;\n        break;\n    }\n    return angle;\n  };\n  FormFieldsBase.prototype.drawFieldFreeTextAnnotations = function (resultObjects, signatureFields, currentFieldName, signatureBounds, fontName, fontSizes) {\n    var stampObjects = JSON.parse(resultObjects);\n    var boundsObjects = JSON.parse(signatureBounds);\n    var page = signatureFields.page;\n    var pageNumber = 0;\n    for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n      if (page == this.formFieldLoadedDocument.getPage(k)) {\n        break;\n      }\n      pageNumber++;\n    }\n    if (!isNullOrUndefined(stampObjects) && stampObjects !== \"\") {\n      var left = this.convertPixelToPoint(boundsObjects[\"x\"]);\n      var top_6 = this.convertPixelToPoint(boundsObjects[\"y\"]);\n      var width = this.convertPixelToPoint(boundsObjects[\"width\"]);\n      var height = this.convertPixelToPoint(boundsObjects[\"height\"]);\n      var annotation = new PdfFreeTextAnnotation(left, top_6, width, height);\n      annotation.setAppearance(true);\n      annotation._dictionary.set(\"T\", currentFieldName);\n      var fontSize = fontSizes > 0 ? fontSizes : height / 2;\n      var fontFamilyEnum = PdfFontFamily.helvetica;\n      if (!isNullOrUndefined(fontName)) {\n        var family = fontName;\n        if (family.includes(\"Times New Roman\")) {\n          fontFamilyEnum = PdfFontFamily.timesRoman;\n        } else if (family.includes(\"Courier\")) {\n          fontFamilyEnum = PdfFontFamily.courier;\n        } else if (family.includes(\"Symbol\")) {\n          fontFamilyEnum = PdfFontFamily.symbol;\n        } else if (family.includes(\"ZapfDingbats\")) {\n          fontFamilyEnum = PdfFontFamily.zapfDingbats;\n        }\n      }\n      var fontStyle = this.getFontStyle();\n      annotation.font = new PdfStandardFont(fontFamilyEnum, this.convertPixelToPoint(fontSize), fontStyle);\n      annotation.text = stampObjects;\n      annotation.rotationAngle = this.getRotateAngle(page.rotation);\n      annotation.flags = PdfAnnotationFlag.print;\n      annotation.setValues(\"AnnotationType\", \"Signature\");\n      annotation.setAppearance(true);\n      page.annotations.add(annotation);\n    }\n  };\n  FormFieldsBase.prototype.drawFieldImage = function (resultObjects, signatureFields, currentFieldName, signatureBounds) {\n    var stampObjects = JSON.parse(resultObjects);\n    var boundsObjects = JSON.parse(signatureBounds);\n    var page = signatureFields.page;\n    var pageNumber = 0;\n    for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n      if (page == this.formFieldLoadedDocument.getPage(k)) {\n        break;\n      }\n      pageNumber++;\n    }\n    if (!isNullOrUndefined(stampObjects) && stampObjects !== \"\") {\n      var imageUrl = stampObjects.toString().split(',')[1];\n      var left = this.convertPixelToPoint(boundsObjects[\"x\"]);\n      var top_7 = this.convertPixelToPoint(boundsObjects[\"y\"]);\n      var width = this.convertPixelToPoint(boundsObjects[\"width\"]);\n      var height = this.convertPixelToPoint(boundsObjects[\"height\"]);\n      var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top_7, width, height);\n      var bitmap = new PdfBitmap(imageUrl);\n      rubberStampAnnotation.appearance.normal.graphics.drawImage(bitmap, 0, 0, width, height);\n      rubberStampAnnotation.rotationAngle = this.getRotateAngle(page.rotation);\n      rubberStampAnnotation._dictionary.set(\"T\", currentFieldName);\n      rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n      rubberStampAnnotation.setAppearance(true);\n      page.annotations.add(rubberStampAnnotation);\n    }\n  };\n  FormFieldsBase.prototype.drawFieldPath = function (resultObjects, signatureFields, currentFieldName, signatureBounds) {\n    var stampObjects = JSON.parse(resultObjects);\n    var boundsObjects = JSON.parse(signatureBounds);\n    var page = signatureFields.page;\n    var pageNumber = 0;\n    for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n      if (page == this.formFieldLoadedDocument.getPage(k)) {\n        break;\n      }\n      pageNumber++;\n    }\n    if (stampObjects.length > 0) {\n      var rotationAngle = this.GetRotateAngle(page.rotation);\n      var left = this.convertPixelToPoint(boundsObjects[\"x\"]);\n      var top_8 = this.convertPixelToPoint(boundsObjects[\"y\"]);\n      var width = this.convertPixelToPoint(boundsObjects[\"width\"]);\n      var height = this.convertPixelToPoint(boundsObjects[\"height\"]);\n      if (rotationAngle != 0) {\n        left = this.convertPixelToPoint(signatureFields.bounds.x);\n        top_8 = this.convertPixelToPoint(signatureFields.bounds.y);\n        width = this.convertPixelToPoint(signatureFields.bounds.width);\n        height = this.convertPixelToPoint(signatureFields.bounds.height);\n      }\n      var minimumX = -1;\n      var minimumY = -1;\n      var maximumX = -1;\n      var maximumY = -1;\n      for (var p = 0; p < stampObjects.length; p++) {\n        var value = stampObjects[parseInt(p.toString(), 10)];\n        if (minimumX == -1) {\n          minimumX = value.x;\n          minimumY = value.y;\n          maximumX = value.x;\n          maximumY = value.y;\n        } else {\n          var point1 = value.x;\n          var point2 = value.y;\n          if (minimumX >= point1) {\n            minimumX = point1;\n          }\n          if (minimumY >= point2) {\n            minimumY = point2;\n          }\n          if (maximumX <= point1) {\n            maximumX = point1;\n          }\n          if (maximumY <= point2) {\n            maximumY = point2;\n          }\n        }\n      }\n      var newDifferenceX = (maximumX - minimumX) / width;\n      var newDifferenceY = (maximumY - minimumY) / height;\n      var linePoints = [];\n      var isNewValues = 0;\n      if (rotationAngle !== 0) {\n        for (var j = 0; j < stampObjects.length; j++) {\n          var value = stampObjects[parseInt(j.toString(), 10)];\n          var path = value.command.toString();\n          if (path == \"M\" && j !== 0) {\n            isNewValues = j;\n            break;\n          }\n          linePoints.push(parseFloat(value.x));\n          linePoints.push(parseFloat(value.y));\n        }\n        linePoints = [];\n        for (var z = 0; z < stampObjects.length; z++) {\n          var value = stampObjects[parseInt(z.toString(), 10)];\n          linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n          linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - (parseFloat(value.y) - minimumY) / newDifferenceY - top_8);\n        }\n      } else {\n        for (var k = 0; k < stampObjects.length; k++) {\n          var value = stampObjects[parseInt(k.toString(), 10)];\n          var path = value.command.toString();\n          if (path == \"M\" && k !== 0) {\n            isNewValues = k;\n            break;\n          }\n          linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n          var newX = (parseFloat(value.y) - minimumY) / newDifferenceY;\n          linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_8);\n        }\n      }\n      var inkAnnotation = new PdfInkAnnotation([left, top_8, width, height], linePoints);\n      inkAnnotation.flags = PdfAnnotationFlag.print;\n      var bounds = {\n        x: inkAnnotation.bounds.x,\n        y: page.size[1] - (inkAnnotation.bounds.y + inkAnnotation.bounds.height),\n        width: inkAnnotation.bounds.width,\n        height: inkAnnotation.bounds.height\n      };\n      inkAnnotation.bounds = bounds;\n      inkAnnotation.border.width = 0;\n      inkAnnotation.color = inkAnnotation.color;\n      linePoints = [];\n      if (rotationAngle !== 0) {\n        var pathCollection = [];\n        for (var t = isNewValues; t < stampObjects.length; t++) {\n          var value = stampObjects[parseInt(t.toString(), 10)];\n          var path = value.command.toString();\n          if (path === \"M\" && t !== isNewValues) {\n            pathCollection.push(linePoints);\n            linePoints = [];\n          }\n          linePoints.push(parseFloat(value.x));\n          linePoints.push(parseFloat(value.y));\n        }\n        if (linePoints.length > 0) {\n          pathCollection.push(linePoints);\n        }\n        for (var w = 0; w < pathCollection.length; w++) {\n          var pointsCollections = pathCollection[parseInt(w.toString(), 10)];\n          linePoints = [];\n          if (pointsCollections.length > 0) {\n            for (var z = 0; z < stampObjects.length; z++) {\n              var value = stampObjects[parseInt(z.toString(), 10)];\n              linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n              linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - (parseFloat(value.y) - minimumY) / newDifferenceY - top_8);\n            }\n            inkAnnotation.inkPointsCollection.push(linePoints);\n          }\n          linePoints = [];\n        }\n      } else {\n        for (var r = 0; r < stampObjects.length; r++) {\n          var value = stampObjects[parseInt(r.toString(), 10)];\n          var path = value.command.toString();\n          if (path == \"M\" && r !== 0) {\n            inkAnnotation.inkPointsCollection.push(linePoints);\n            linePoints = [];\n          }\n          linePoints.push((parseFloat(value.x) - minimumX) / newDifferenceX + left);\n          var newX = (parseFloat(value.y) - minimumY) / newDifferenceY;\n          linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_8);\n        }\n        if (linePoints.length > 0) {\n          inkAnnotation.inkPointsCollection.push(linePoints);\n        }\n      }\n      inkAnnotation._dictionary.set(\"T\", currentFieldName);\n      inkAnnotation.setAppearance(true);\n      this.formFieldLoadedDocument.getPage(pageNumber).annotations.add(inkAnnotation);\n    }\n  };\n  FormFieldsBase.prototype.addSigntureFieldItems = function (field) {\n    var page = field.page;\n    if (field instanceof PdfSignatureField) {\n      var signatureField = field;\n      if (signatureField.itemsCount > 0) {\n        for (var i = 0; i < signatureField.itemsCount; i++) {\n          if (!isNullOrUndefined(signatureField.itemAt(i).page)) {\n            var item = signatureField.itemAt(i).page;\n            var j = 0;\n            for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n              if (item == this.formFieldLoadedDocument.getPage(j)) {\n                break;\n              }\n              j++;\n            }\n            this.addSignatureField(signatureField, j, signatureField.itemAt(i).bounds);\n          }\n        }\n      }\n    }\n  };\n  FormFieldsBase.prototype.addSignatureField = function (signatureField, index, bounds) {\n    var formFields = new PdfRenderedFields();\n    formFields.Name = \"SignatureField\";\n    formFields.ToolTip = signatureField.toolTip;\n    formFields.FieldName = signatureField.name.replace(/[^0-9a-zA-Z]+/g, \"\");\n    formFields.ActualFieldName = signatureField.name;\n    if (!bounds.IsEmpty) {\n      formFields.LineBounds = {\n        X: bounds.x,\n        Y: bounds.y,\n        Width: bounds.width,\n        Height: bounds.height\n      };\n    } else {\n      formFields.LineBounds = {\n        X: signatureField.bounds.x,\n        Y: signatureField.bounds.y,\n        Width: signatureField.bounds.width,\n        Height: signatureField.bounds.height\n      };\n    }\n    formFields.PageIndex = index;\n    formFields.TabIndex = signatureField.tabIndex;\n    formFields.BorderWidth = signatureField.border.width;\n    formFields.BorderStyle = signatureField.border.style;\n    formFields.IsReadonly = signatureField.readOnly;\n    formFields.IsRequired = signatureField.required;\n    formFields.Visible = signatureField.visibility;\n    formFields.IsSignatureField = true;\n    formFields.Rotation = signatureField.rotationAngle;\n    formFields.RotationAngle = this.GetRotateAngle(signatureField.page.rotation);\n    var initialField = signatureField._dictionary.get(\"InitialField\");\n    if (!isNullOrUndefined(initialField)) {\n      formFields.IsInitialField = initialField;\n    }\n    this.PdfRenderedFormFields.push(formFields);\n  };\n  FormFieldsBase.prototype.retrieveInkAnnotation = function (loadedDocument) {\n    var count = 1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n      var loadedPage = loadedDocument.getPage(i);\n      var oldPageAnnotations = loadedPage.annotations;\n      var totalAnnotation = parseInt(oldPageAnnotations.count.toString(), 10);\n      for (var j = 0; j < totalAnnotation; j++) {\n        var annotation = oldPageAnnotations.at(j);\n        if (annotation instanceof PdfInkAnnotation) {\n          var outputstring = \"\";\n          var inkAnnot = annotation;\n          var inkListX = [];\n          var inkListY = [];\n          if (inkAnnot._dictionary.has(\"T\") && !inkAnnot._dictionary.has(\"NM\")) {\n            var annotColor = inkAnnot.color;\n            if (!isNullOrUndefined(inkAnnot.inkPointsCollection)) {\n              for (var m = 0; m < inkAnnot.inkPointsCollection.length; m++) {\n                var inkList = inkAnnot.inkPointsCollection[parseInt(m.toString(), 10)];\n                for (var k = 0; k < inkList.length; k += 2) {\n                  var x = void 0;\n                  var y = void 0;\n                  if (loadedPage.rotation === PdfRotationAngle.angle90) {\n                    x = inkList[k + 1];\n                    y = inkList[parseInt(k.toString(), 10)];\n                  } else if (loadedPage.rotation === PdfRotationAngle.angle180) {\n                    x = loadedPage.size[0] - inkList[k + 1];\n                    y = inkList[k + 1];\n                  } else if (loadedPage.rotation === PdfRotationAngle.angle270) {\n                    x = loadedPage.size[0] - inkList[k + 1];\n                    y = loadedPage.size[1] - inkList[parseInt(k.toString(), 10)];\n                  } else {\n                    x = inkList[parseInt(k.toString(), 10)];\n                    y = loadedPage.size[1] - inkList[k + 1];\n                  }\n                  if (k == 0) {\n                    outputstring += \"M\" + x + \",\" + y + \" \";\n                  } else {\n                    outputstring += \"L\" + x + \",\" + y + \" \";\n                  }\n                  inkListX.push(x);\n                  inkListY.push(y);\n                }\n              }\n            }\n            var formFields = new PdfRenderedFields();\n            if (inkAnnot._dictionary.has(\"T\")) {\n              formFields.FieldName = inkAnnot._dictionary.get(\"T\");\n            }\n            formFields.FieldName = formFields.FieldName + \"_\" + count;\n            formFields.Name = \"ink\";\n            var rotationAngle = loadedPage.rotation;\n            var isFieldRotated = false;\n            if (annotation.rotationAngle !== 0) {\n              isFieldRotated = true;\n            }\n            var bounds = {\n              X: inkAnnot.bounds.x,\n              Y: inkAnnot.bounds.y,\n              Width: inkAnnot.bounds.width,\n              Height: inkAnnot.bounds.height\n            };\n            formFields.LineBounds = this.getBounds(bounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, !isFieldRotated);\n            formFields.Value = outputstring;\n            formFields.PageIndex = i;\n            formFields.BorderColor = [inkAnnot.color[0], inkAnnot.color[1], inkAnnot.color[2]];\n            formFields.Rotation = annotation.rotationAngle;\n            this.PdfRenderedFormFields.push(formFields);\n            count++;\n          }\n        } else if (annotation instanceof PdfFreeTextAnnotation) {\n          var inkAnnot = annotation;\n          if (inkAnnot._dictionary.has(\"T\") && !inkAnnot._dictionary.has(\"NM\") && !inkAnnot._dictionary.has(\"M\")) {\n            var formFields = new PdfRenderedFields();\n            formFields.FieldName = inkAnnot._dictionary.get(\"T\") + \"_\" + count;\n            var bounds = {\n              X: inkAnnot.bounds.x,\n              Y: inkAnnot.bounds.y,\n              Width: inkAnnot.bounds.width,\n              Height: inkAnnot.bounds.height\n            };\n            formFields.LineBounds = bounds;\n            formFields.Name = \"SignatureText\";\n            formFields.FontFamily = this.getFontFamilyString(inkAnnot.font._fontFamily);\n            formFields.FontSize = this.convertPointtoPixel(inkAnnot.font.size);\n            formFields.Value = inkAnnot.text;\n            formFields.PageIndex = i;\n            formFields.BorderColor = inkAnnot.borderColor;\n            this.PdfRenderedFormFields.push(formFields);\n            count++;\n          }\n        } else if (annotation instanceof PdfRubberStampAnnotation) {\n          var stampAnnotation = annotation;\n          if (stampAnnotation._dictionary.has(\"T\") && !stampAnnotation._dictionary.has(\"NM\") && !stampAnnotation._dictionary.has(\"M\")) {\n            var formFields = new PdfRenderedFields();\n            formFields.FieldName = stampAnnotation._dictionary.get(\"T\") + \"_\" + count;\n            var dictionary = annotation._dictionary.get(\"AP\");\n            var pageRender = new PageRenderer(this.pdfViewer, this.pdfViewerBase);\n            if (isNullOrUndefined(dictionary)) {\n              var pdfReference = annotation._dictionary.get(\"AP\");\n              if (!isNullOrUndefined(pdfReference) && !isNullOrUndefined(pdfReference.dictionary) && pdfReference.dictionary.has(\"N\")) {\n                var ap_Dictionary = pdfReference.dictionary;\n                if (!isNullOrUndefined(ap_Dictionary)) {\n                  pageRender.findStampImage(annotation);\n                }\n              }\n            } else if (dictionary.has(\"N\")) {\n              pageRender.findStampImage(annotation);\n            }\n            formFields.LineBounds = {\n              X: stampAnnotation.bounds.x,\n              Y: stampAnnotation.bounds.y,\n              Width: stampAnnotation.bounds.width,\n              Height: stampAnnotation.bounds.height\n            };\n            formFields.Value = pageRender.Imagedata;\n            formFields.Name = \"SignatureImage\";\n            formFields.PageIndex = i;\n            this.PdfRenderedFormFields.push(formFields);\n            count++;\n          }\n        }\n      }\n    }\n  };\n  FormFieldsBase.prototype.getFontFamilyString = function (fontFamily) {\n    switch (fontFamily) {\n      case PdfFontFamily.helvetica:\n        return 'Helvetica';\n      case PdfFontFamily.timesRoman:\n        return 'TimesRoman';\n      case PdfFontFamily.courier:\n        return 'Courier';\n      case PdfFontFamily.symbol:\n        return 'Symbol';\n      case PdfFontFamily.zapfDingbats:\n        return 'ZapfDingbats';\n      default:\n        return 'Helvetica';\n    }\n  };\n  return FormFieldsBase;\n}();\nexport { FormFieldsBase };\n/**\n  * @private\n  */\nvar PdfRenderedFields = /** @class */function () {\n  function PdfRenderedFields() {\n    this.ActualFieldName = null;\n    this.FontColor = {\n      R: 0,\n      G: 0,\n      B: 0\n    };\n    this.BackColor = {\n      R: 0,\n      G: 0,\n      B: 0\n    };\n    this.BorderColor = {\n      R: 0,\n      G: 0,\n      B: 0\n    };\n    this.CheckBoxGroupName = null;\n    this.Alignment = 0;\n    this.BorderStyle = 0;\n    this.BorderWidth = 0;\n    this.CheckBoxGroupName = null;\n    this.CheckBoxIndex = null;\n    this.FieldName = null;\n    this.Font = null;\n    this.FontFamily = null;\n    this.FontSize = 0;\n    this.FontStyle = 0;\n    this.GroupName = null;\n    this.InsertSpaces = false;\n    this.IsAutoSize = false, this.IsInitialField = false;\n    this.IsReadonly = false;\n    this.IsRequired = false;\n    this.IsSignatureField = false;\n    this.IsTransparent = false;\n    this.MaxLength = 0;\n    this.MultiSelect = false;\n    this.Multiline = false;\n    this.Name = null;\n    this.PageIndex = 0;\n    this.Rotation = 0;\n    this.RotationAngle = 0;\n    this.Selected = false;\n    this.SelectedList = [];\n    this.SelectedValue = null;\n    this.TabIndex = 0;\n    this.Text = null;\n    this.TextList = [];\n    this.ToolTip = null;\n    this.Value = null;\n    this.Visible = 0;\n  }\n  return PdfRenderedFields;\n}();\nexport { PdfRenderedFields };","map":{"version":3,"names":["isNullOrUndefined","PdfTextBoxField","PdfFormFieldVisibility","PdfTextAlignment","PdfSignatureField","PdfFreeTextAnnotation","PdfFontFamily","PdfStandardFont","PdfAnnotationFlag","PdfRubberStampAnnotation","PdfBitmap","PdfFontStyle","FontStyle","PdfCheckBoxField","PdfComboBoxField","PdfListBoxField","PdfListFieldItem","PdfRadioButtonListField","PdfRadioButtonListItem","PdfRotationAngle","PdfInkAnnotation","PdfTrueTypeFont","PageRenderer","getArialFontData","Rect","FormFieldsBase","pdfViewer","pdfViewerBase","digitalSignatruePresent","PdfRenderedFormFields","formFieldLoadedDocument","pdfRendererModule","loadedDocument","m_isDigitalSignaturePresent","prototype","drawFreeTextAnnotations","textSignature","isAnnotationFlattern","stampObjects","data","textData","replace","boundsObject","JSON","parse","bounds","page","getPage","pageIndex","left","convertPixelToPoint","top_1","top","width","height","annotation","_dictionary","set","signatureName","toString","fontSize","border","fontFamilyEnum","helvetica","fontName","fontFamily","family","includes","timesRoman","courier","symbol","zapfDingbats","Math","floor","fontStyle","regular","font","text","borderColor","textAlignment","center","_annotFlags","print","rotateAngle","getRotateAngle","rotation","rotationAngle","abs","setValues","flatten","setAppearance","annotations","add","angleString","angle","angle0","angle180","angle270","angle90","drawImage","signatureImage","imageUrl","split","top_2","rectangle","rubberStampAnnotation","bitmap","graphics","appearance","normal","state","save","restore","saveFormFieldsDesignerData","jsonObject","hasOwnProperty","formFields","myList","formFieldsPageList","form","initialCount","_fields","length","loadedForm","k","formFieldPage","fieldAt","pageNumber","_pageIndex","signField","signed","isSigned","removeField","i","addFormFieldsToDocument","parseInt","FormField","setDefaultAppearance","saveFormFieldsData","Object","keys","currentField","currentFieldName","actualFieldName","name","password","field","readOnly","count","itemsCount","fieldName","isExists","j","optionArray","has","get","itemAt","selectedIndex","editable","selectedValue","fields","fieldValueString","fieldValue","toLowerCase","checked","readonly","checkBoxField","integerValue","checkBoxField_1","n","table","selectedIndexes","push","i_1","item","value","_optionValue","signatureFields","drawFieldFreeTextAnnotations","drawFieldImage","drawFieldPath","signatureFieldListCount","formFieldAttributes","loadedPage","formFieldAnnotationType","saveTextBoxField","SaveCheckBoxField","saveRadioButtonField","saveDropDownField","saveListBoxField","saveSignatureField","textboxName","type","textBounds","convertFieldBounds","isFieldRotated","fieldBounds","getBounds","size","bound","x","X","y","Y","Width","Height","textbox","backColor","backgroundColor","r","g","b","a","maxLength","insertSpaces","isReadonly","required","isRequired","getTextAlignment","textAlign","visibility","getFormFieldsVisibility","toolTip","tooltip","color","fontColor","thickness","multiLine","Multiline","pdfFontStyle","getFontStyle","hasUnicode","test","getTrueFont","getFontFamily","FontFamily","rotate","getFormfieldRotation","dropdownListName","dropDownListbounds","comboBox","option","itemName","itemValue","addItem","flag","FontSize","_font","checkboxFieldName","checkBounds","isChecked","listBoxName","listBounds","listBox","unicode","Array","isArray","multiSelect","isSelectedItem","isReadOnly","radiobuttonItem","radioButtonName","radioButtonItem","GetRotateAngle","isSelected","signatureFieldName","signatureFieldBounds","signatureField","visible","signatureType","drawDesignerFieldFreeTextAnnotations","drawDesignerFieldImage","drawDesignerFieldPath","boundsObjects","signatureBound","pageRotationAngle","zoomvalue","zoomValue","signBounds","top_3","freeTextBounds","setFontSize","flags","top_4","pageCount","top_5","minimumX","minimumY","maximumX","maximumY","p","point1","point2","newDifferenceX","newDifferenceY","linePoints","isNewValues","path","command","parseFloat","z","newX","inkAnnotation","pathCollection","t","w","pointsCollections","inkPointsCollection","minimumFontSize","_size","sizeF","measureString","lineBound","pageHeight","pageWidth","pageRotation","alignment","right","justify","fieldVisibility","hidden","visibleNotPrintable","hiddenPrintable","isBold","bold","isItalic","italic","isUnderline","underline","isStrikeout","strikeout","convertPointtoPixel","fontConvert","Bold","getFontFamilyString","Italic","Name","Size","Strikeout","Underline","Style","style","parseFontStyle","numberValue","fontObject","GetFormFields","orderFormFields","textBox","addTextBoxFieldItems","addTextBoxField","comboBoxField","addComboBoxField","checkbox","addCheckBoxFieldItems","addCheckBoxField","listBoxField","addListBoxField","i_2","page_1","addRadioButtonField","showDigitalSignatureAppearance","hideEmptyDigitalSignatureFields","addSigntureFieldItems","addSignatureField","retrieveInkAnnotation","textBoxField","PdfRenderedFields","FieldName","ActualFieldName","ToolTip","LineBounds","TabIndex","tabIndex","PageIndex","BorderWidth","BorderStyle","BackColor","R","G","B","IsTransparent","Alignment","MaxLength","Visible","InsertSpaces","Font","Rotation","IsReadonly","IsRequired","FontColor","BorderColor","Text","RotationAngle","TextList","IsAutoSize","_isAutoFontSize","Selected","SelectedValue","options","map","chkField","index","checkBoxIndex","IsEmpty","GroupName","_get","Value","CheckBoxIndex","chekckboxField","itemCount","SelectedList","MultiSelect","parent","_field","actualName","selected","checkTransparent","resultObjects","signatureBounds","fontSizes","top_6","top_7","top_8","IsSignatureField","initialField","IsInitialField","oldPageAnnotations","totalAnnotation","at","outputstring","inkAnnot","inkListX","inkListY","annotColor","m","inkList","_fontFamily","stampAnnotation","dictionary","pageRender","pdfReference","ap_Dictionary","findStampImage","Imagedata","CheckBoxGroupName"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/pdf-base/form-fields-base.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfTextBoxField, PdfFormFieldVisibility, PdfTextAlignment, PdfSignatureField, PdfFreeTextAnnotation, PdfFontFamily, PdfStandardFont, PdfAnnotationFlag, PdfRubberStampAnnotation, PdfBitmap, PdfFontStyle as FontStyle, PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfListFieldItem, PdfRadioButtonListField, PdfRadioButtonListItem, PdfRotationAngle, PdfFontStyle, PdfInkAnnotation, PdfTrueTypeFont } from '@syncfusion/ej2-pdf';\nimport { PageRenderer } from '../index';\nimport { getArialFontData } from '../pdf-base/fontData';\nimport { Rect } from '@syncfusion/ej2-drawings';\n/**\n * FormFieldsBase\n *\n * @hidden\n */\nvar FormFieldsBase = /** @class */ (function () {\n    /**\n     * @param {PdfViewer} pdfViewer - The PdfViewer.\n     * @param {PdfViewerBase} pdfViewerBase - The PdfViewerBase.\n     * @private\n     */\n    function FormFieldsBase(pdfViewer, pdfViewerBase, digitalSignatruePresent) {\n        /**\n         * @private\n         */\n        this.PdfRenderedFormFields = [];\n        this.pdfViewer = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n        this.formFieldLoadedDocument = this.pdfViewer.pdfRendererModule.loadedDocument;\n        this.m_isDigitalSignaturePresent = digitalSignatruePresent;\n    }\n    /**\n     * @private\n     * @param textSignature\n     * @param isAnnotationFlattern\n     */\n    FormFieldsBase.prototype.drawFreeTextAnnotations = function (textSignature, loadedDocument, isAnnotationFlattern) {\n        var stampObjects = textSignature.data;\n        var textData = stampObjects.replace(/\"/g, '');\n        var boundsObject = JSON.parse(textSignature.bounds);\n        var page = loadedDocument.getPage(textSignature.pageIndex);\n        if (stampObjects != \"\") {\n            var left = this.convertPixelToPoint(boundsObject.left);\n            var top_1 = this.convertPixelToPoint(boundsObject.top);\n            var width = this.convertPixelToPoint(boundsObject.width);\n            var height = this.convertPixelToPoint(boundsObject.height);\n            var annotation = new PdfFreeTextAnnotation(left, top_1, width, height);\n            annotation._dictionary.set('NM', textSignature.signatureName.toString());\n            var fontSize = textSignature.fontSize;\n            annotation.border.width = 0;\n            var fontFamilyEnum = PdfFontFamily.helvetica;\n            var fontName = textSignature.fontFamily.toString();\n            if (!isNullOrUndefined(fontName)) {\n                var family = fontName.toString();\n                if (family.includes(\"Times New Roman\")) {\n                    fontFamilyEnum = PdfFontFamily.timesRoman;\n                }\n                else if (family.includes(\"Courier\")) {\n                    fontFamilyEnum = PdfFontFamily.courier;\n                }\n                else if (family.includes(\"Symbol\")) {\n                    fontFamilyEnum = PdfFontFamily.symbol;\n                }\n                else if (family.includes(\"ZapfDingbats\")) {\n                    fontFamilyEnum = PdfFontFamily.zapfDingbats;\n                }\n            }\n            fontSize = Math.floor(this.convertPixelToPoint(fontSize));\n            var fontStyle = FontStyle.regular;\n            annotation.font = new PdfStandardFont(fontFamilyEnum, fontSize, fontStyle);\n            annotation.text = textData;\n            annotation.borderColor = [0, 0, 0];\n            annotation.textAlignment = PdfTextAlignment.center;\n            annotation._annotFlags = PdfAnnotationFlag.print;\n            if (isAnnotationFlattern) {\n                var rotateAngle = this.getRotateAngle(page.rotation);\n                annotation.rotationAngle = Math.abs(rotateAngle);\n            }\n            annotation.setValues('AnnotationType', 'Signature');\n            if (isAnnotationFlattern) {\n                annotation.flatten = true;\n            }\n            annotation.setAppearance(true);\n            page.annotations.add(annotation);\n        }\n    };\n    FormFieldsBase.prototype.getRotateAngle = function (angleString) {\n        var angle = 0;\n        switch (angleString) {\n            case PdfRotationAngle.angle0:\n                angle = 0;\n                break;\n            case PdfRotationAngle.angle180:\n                angle = 2;\n                break;\n            case PdfRotationAngle.angle270:\n                angle = 3;\n                break;\n            case PdfRotationAngle.angle90:\n                angle = 1;\n                break;\n        }\n        return angle;\n    };\n    /**\n     * @private\n     * @param textSignature\n     * @param isAnnotationFlattern\n     */\n    FormFieldsBase.prototype.drawImage = function (signatureImage, loadedDocument, isAnnotationFlattern) {\n        var stampObjects = signatureImage.data;\n        var boundsObject = JSON.parse(signatureImage.bounds);\n        var page = loadedDocument.getPage(signatureImage.pageIndex);\n        if (stampObjects != '') {\n            var imageUrl = (stampObjects.toString()).split(',')[1];\n            var left = this.convertPixelToPoint(boundsObject.left);\n            var top_2 = this.convertPixelToPoint(boundsObject.top);\n            var width = this.convertPixelToPoint(boundsObject.width);\n            var height = this.convertPixelToPoint(boundsObject.height);\n            var rectangle = new Rect(left, top_2, width, height);\n            var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top_2, width, height);\n            var bitmap = new PdfBitmap(imageUrl);\n            var graphics = page.graphics;\n            var appearance = rubberStampAnnotation.appearance.normal;\n            rubberStampAnnotation._dictionary.set('NM', signatureImage.signatureName.toString());\n            if (isAnnotationFlattern) {\n                var rotationAngle = this.getRotateAngle(page.rotation);\n                rubberStampAnnotation.rotationAngle = Math.abs(rotationAngle);\n                rubberStampAnnotation.flatten = true;\n            }\n            if (!isAnnotationFlattern) {\n                var state = graphics.save();\n                appearance.graphics.drawImage(bitmap, 0, 0, width, height);\n                appearance.graphics.restore(state);\n            }\n            else {\n                appearance.graphics.drawImage(bitmap, 0, 0, width, height);\n            }\n            page.annotations.add(rubberStampAnnotation);\n        }\n    };\n    /**\n     * @private\n     * @param jsonObject\n     */\n    FormFieldsBase.prototype.saveFormFieldsDesignerData = function (jsonObject) {\n        if (jsonObject.hasOwnProperty(\"formDesigner\")) {\n            var formFields = jsonObject[\"formDesigner\"];\n            if (!isNullOrUndefined(formFields)) {\n                var data = JSON.parse(formFields);\n                var myList = [];\n                var formFieldsPageList = jsonObject.hasOwnProperty(\"formFieldsPageList\") ? JSON.parse(jsonObject[\"formFieldsPageList\"]) : myList;\n                //Removing form fields from the page.\n                if (!isNullOrUndefined(this.formFieldLoadedDocument.form)) {\n                    var initialCount = this.formFieldLoadedDocument.form._fields.length;\n                    //Get the loaded form.\n                    var loadedForm = this.formFieldLoadedDocument.form;\n                    for (var k = initialCount - 1; k >= 0; k--) {\n                        var formFieldPage = loadedForm.fieldAt(k);\n                        var pageNumber = formFieldPage.page._pageIndex;\n                        var signField = null;\n                        if (formFieldPage instanceof PdfSignatureField) {\n                            signField = formFieldPage;\n                        }\n                        var signed = !isNullOrUndefined(signField) ? signField.isSigned : true;\n                        //Removing the formfields from a page\n                        if (formFieldsPageList.includes(pageNumber + 1) && (signField == null || !signed)) {\n                            loadedForm.removeField(loadedForm.fieldAt(k));\n                        }\n                    }\n                }\n                for (var i = 0; i < data.length; i++) {\n                    this.addFormFieldsToDocument(data[parseInt(i.toString(), 10)].FormField);\n                }\n            }\n            if (!isNullOrUndefined(this.formFieldLoadedDocument.form)) {\n                this.formFieldLoadedDocument.form.setDefaultAppearance(false);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param jsonObject\n     */\n    FormFieldsBase.prototype.saveFormFieldsData = function (jsonObject) {\n        if (jsonObject.hasOwnProperty(\"fieldsData\")) {\n            var formFields = jsonObject[\"fieldsData\"];\n            var data = JSON.parse(formFields);\n            if (!isNullOrUndefined(data) && Object.keys(data).length > 0 && !isNullOrUndefined(this.formFieldLoadedDocument.form)) {\n                if (this.formFieldLoadedDocument.form._fields.length > 0) {\n                    this.formFieldLoadedDocument.form.setDefaultAppearance(false);\n                }\n                for (var i = 0; i < this.formFieldLoadedDocument.form._fields.length; i++) {\n                    var currentField = this.formFieldLoadedDocument.form.fieldAt(i);\n                    var currentFieldName = \"\";\n                    var actualFieldName = \"\";\n                    if (!isNullOrUndefined(currentField.name)) {\n                        currentFieldName = currentField.name.replace(/[^0-9a-zA-Z]+/g, \"\").replace(/\\s+/g, \"\");\n                        actualFieldName = currentField.name;\n                    }\n                    if (currentField instanceof PdfTextBoxField) {\n                        if (!currentField.password) {\n                            if ((data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName])) || (data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName]))) {\n                                if (data.hasOwnProperty(actualFieldName)) {\n                                    currentFieldName = actualFieldName;\n                                }\n                                var field = data[\"\" + currentFieldName];\n                                if (!isNullOrUndefined(field) && field.hasOwnProperty(\"isReadOnly\")) {\n                                    currentField.text = field[\"fieldValue\"];\n                                    currentField.readOnly = field[\"isReadOnly\"] === 'true' ? true : false;\n                                }\n                            }\n                        }\n                        else {\n                            if ((data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName])) || (data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName]))) {\n                                if (data.hasOwnProperty(actualFieldName)) {\n                                    currentFieldName = actualFieldName;\n                                }\n                                var field = data[\"\" + currentFieldName];\n                                if (!isNullOrUndefined(field) && field.hasOwnProperty(\"isReadOnly\")) {\n                                    currentField.text = field[\"fieldValue\"];\n                                    currentField.readOnly = field[\"isReadOnly\"] === 'true' ? true : false;\n                                }\n                            }\n                        }\n                    }\n                    else if (currentField instanceof PdfComboBoxField) {\n                        if ((data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName])) || (data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName]))) {\n                            if (data.hasOwnProperty(actualFieldName)) {\n                                currentFieldName = actualFieldName;\n                            }\n                            var field = data[\"\" + currentFieldName];\n                            var count = currentField.itemsCount;\n                            var fieldName = '';\n                            if (!isNullOrUndefined(field)) {\n                                if (field.hasOwnProperty('isReadOnly')) {\n                                    currentField.readOnly = field[\"isReadOnly\"] === 'true' ? true : false;\n                                }\n                                if (!isNullOrUndefined(field[\"fieldValue\"])) {\n                                    fieldName = field[\"fieldValue\"];\n                                }\n                            }\n                            var isExists = false;\n                            for (var j = 0; j < count; j++) {\n                                var optionArray = void 0;\n                                var text = void 0;\n                                if (currentField._dictionary.has('Opt')) {\n                                    optionArray = currentField._dictionary.get('Opt');\n                                    text = optionArray[parseInt(j.toString(), 10)];\n                                }\n                                else if (!isNullOrUndefined(currentField.itemAt(j))) {\n                                    text = currentField.itemAt(j).text;\n                                }\n                                if (text === fieldName) {\n                                    currentField.selectedIndex = j;\n                                    isExists = true;\n                                }\n                            }\n                            if (currentField.editable && !isExists) {\n                                currentField.selectedValue = fieldName;\n                            }\n                        }\n                    }\n                    else if (currentField instanceof PdfCheckBoxField) {\n                        if ((data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName])) || (data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName]))) {\n                            if (data.hasOwnProperty(actualFieldName)) {\n                                currentFieldName = actualFieldName;\n                            }\n                            var field = data[\"\" + currentFieldName];\n                            var fields = field[\"isSelected\"];\n                            var fieldValueString = fields.toString();\n                            var fieldValue = field[\"fieldValue\"];\n                            if (!isNullOrUndefined(fieldValue)) {\n                                currentField._dictionary.set(\"ExportValue\", fieldValue);\n                            }\n                            if (fieldValueString.toLowerCase() === \"true\" || fieldValueString.toLowerCase() === \"false\") {\n                                currentField.checked = fields;\n                                if (!isNullOrUndefined(field) && field.hasOwnProperty(\"isReadOnly\")) {\n                                    currentField.readOnly = field.readonly;\n                                }\n                                if (fieldValueString.toLowerCase() === \"false\") {\n                                    var checkBoxField = currentField;\n                                    for (var k = 0; k < checkBoxField.itemsCount; k++) {\n                                        checkBoxField.itemAt(k).checked = false;\n                                    }\n                                    currentField.checked = false;\n                                }\n                            }\n                            else {\n                                var integerValue = isNullOrUndefined(fields) ? -1 : 0;\n                                var checkBoxField_1 = currentField;\n                                if (checkBoxField_1.itemsCount > 0) {\n                                    if (integerValue == -1) {\n                                        for (var n = 0; n < checkBoxField_1.itemsCount; n++) {\n                                            checkBoxField_1.itemAt(n).checked = false;\n                                        }\n                                        currentField.checked = false;\n                                    }\n                                    else if (!isNullOrUndefined(checkBoxField_1.itemAt(integerValue))) {\n                                        checkBoxField_1.itemAt(integerValue).checked = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else if (currentField instanceof PdfListBoxField) {\n                        if ((data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName])) || (data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName]))) {\n                            if (data.hasOwnProperty(actualFieldName)) {\n                                currentFieldName = actualFieldName;\n                            }\n                            var table = data[\"\" + currentFieldName];\n                            var count = currentField.itemsCount;\n                            var fieldName = '';\n                            if (!isNullOrUndefined(table)) {\n                                if (table.hasOwnProperty('fieldValue') && !isNullOrUndefined(table[\"fieldValue\"])) {\n                                    fieldName = table[\"fieldValue\"];\n                                }\n                                if (table.hasOwnProperty('isReadOnly')) {\n                                    currentField.readOnly = table[\"isReadOnly\"] === 'true' ? true : false;\n                                }\n                            }\n                            fieldName = JSON.parse(fieldName)[0].replace(/[^0-9a-zA-Z]+/g, '');\n                            var selectedIndexes = [];\n                            for (var k = 0; k < count; k++) {\n                                var text = currentField.itemAt(k).text;\n                                if (text === fieldName) {\n                                    selectedIndexes.push(k);\n                                }\n                            }\n                            currentField.selectedIndex = selectedIndexes;\n                        }\n                    }\n                    else if (currentField instanceof PdfRadioButtonListField) {\n                        if ((data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName])) || (data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName]))) {\n                            if (data.hasOwnProperty(actualFieldName)) {\n                                currentFieldName = actualFieldName;\n                            }\n                            var field = data[\"\" + currentFieldName];\n                            if (!isNullOrUndefined(field) && field.hasOwnProperty('isReadOnly')) {\n                                var selectedValue = field[\"fieldValue\"];\n                                if (selectedValue) {\n                                    for (var i_1 = 0; i_1 < currentField.itemsCount; i_1++) {\n                                        var item = currentField.itemAt(i_1);\n                                        if (item && (item.value === selectedValue || item._optionValue === selectedValue)) {\n                                            currentField.selectedIndex = i_1;\n                                            break;\n                                        }\n                                    }\n                                }\n                                currentField.readOnly = field['isReadOnly'] === 'true' ? true : false;\n                            }\n                        }\n                    }\n                    else if (currentField instanceof PdfSignatureField) {\n                        if ((data.hasOwnProperty(currentFieldName) && !isNullOrUndefined(data[\"\" + currentFieldName])) || (data.hasOwnProperty(actualFieldName) && !isNullOrUndefined(data[\"\" + actualFieldName]))) {\n                            if (data.hasOwnProperty(actualFieldName)) {\n                                currentFieldName = actualFieldName;\n                            }\n                            var signatureFields = currentField;\n                            if (data.hasOwnProperty(currentFieldName + \"fontName\")) {\n                                this.drawFieldFreeTextAnnotations(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\"], data[currentFieldName + \"fontName\"], data[currentFieldName + \"fontSize\"]);\n                            }\n                            else if (data.hasOwnProperty(currentFieldName + \"ImageData\")) {\n                                this.drawFieldImage(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\"]);\n                            }\n                            else if (data.hasOwnProperty(currentFieldName + \"bounds\")) {\n                                this.drawFieldPath(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\"]);\n                            }\n                            var signatureFieldListCount = signatureFields.itemsCount;\n                            if (signatureFieldListCount > 0) {\n                                for (var k = 0; k < signatureFieldListCount; k++) {\n                                    if (data.hasOwnProperty(currentFieldName + \"fontName\" + \"_\" + k)) {\n                                        this.drawFieldFreeTextAnnotations(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\" + \"_\" + k], data[currentFieldName + \"fontName\" + \"_\" + k], data[currentFieldName + \"fontSize\" + \"_\" + k]);\n                                    }\n                                    else if (data.hasOwnProperty(currentFieldName + \"ImageData\" + \"_\" + k)) {\n                                        this.drawFieldImage(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\" + \"_\" + k]);\n                                    }\n                                    else if (data.hasOwnProperty(currentFieldName + \"bounds\" + \"_\" + k)) {\n                                        this.drawFieldPath(data[\"\" + currentFieldName], signatureFields, currentFieldName, data[currentFieldName + \"bounds\" + \"_\" + k]);\n                                    }\n                                }\n                            }\n                        }\n                        if (data.hasOwnProperty(currentFieldName + \"isReadOnly\") || data.hasOwnProperty(actualFieldName + \"isReadOnly\")) {\n                            if (data.hasOwnProperty(actualFieldName + \"isReadOnly\")) {\n                                currentFieldName = actualFieldName;\n                            }\n                            currentField.readOnly = data[\"isReadOnly\"] === 'true' ? true : false;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    FormFieldsBase.prototype.addFormFieldsToDocument = function (formFieldAttributes) {\n        var loadedPage = this.formFieldLoadedDocument.getPage(formFieldAttributes.pageNumber - 1);\n        var field;\n        switch (formFieldAttributes.formFieldAnnotationType) {\n            case \"Textbox\":\n            case \"PasswordField\":\n                //Create a password and text box field for name\n                field = this.saveTextBoxField(loadedPage, formFieldAttributes);\n                break;\n            case \"Checkbox\":\n                // Create Check Box field.\n                field = this.SaveCheckBoxField(loadedPage, formFieldAttributes);\n                break;\n            case \"RadioButton\":\n                field = this.saveRadioButtonField(formFieldAttributes);\n                break;\n            case \"DropdownList\":\n                // Create Drop Down field.\n                field = this.saveDropDownField(loadedPage, formFieldAttributes);\n                break;\n            case \"ListBox\":\n                field = this.saveListBoxField(loadedPage, formFieldAttributes);\n                break;\n            case \"SignatureField\":\n            case \"InitialField\":\n                //Create PDF Signature and Initial field.\n                field = this.saveSignatureField(loadedPage, formFieldAttributes);\n                break;\n        }\n        if (field) {\n            this.formFieldLoadedDocument.form.add(field);\n        }\n    };\n    FormFieldsBase.prototype.saveTextBoxField = function (loadedPage, formFieldAttributes) {\n        var textboxName = isNullOrUndefined(formFieldAttributes.name) ? formFieldAttributes.type === 'Password' ? 'passwordTextbox' : \"textbox\" : formFieldAttributes.name;\n        var textBounds = this.convertFieldBounds(formFieldAttributes);\n        var rotationAngle = loadedPage.rotation;\n        var isFieldRotated = false;\n        if (formFieldAttributes.rotation !== 0) {\n            isFieldRotated = true;\n        }\n        var fieldBounds = this.getBounds(textBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n        var bound = { x: fieldBounds.X, y: fieldBounds.Y, width: fieldBounds.Width, height: fieldBounds.Height };\n        //Create a new text box field\n        var textbox = new PdfTextBoxField(loadedPage, textboxName, bound);\n        textbox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n        if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n            textbox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n        }\n        textbox.maxLength = formFieldAttributes.maxLength;\n        textbox.insertSpaces = formFieldAttributes.insertSpaces;\n        textbox.readOnly = formFieldAttributes.isReadonly;\n        textbox.required = formFieldAttributes.isRequired;\n        textbox.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n        textbox.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n        textbox.text = isNullOrUndefined(formFieldAttributes.value) ? \"\" : formFieldAttributes.value;\n        textbox.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? \"\" : formFieldAttributes.tooltip;\n        textbox.color = [formFieldAttributes.fontColor.r, formFieldAttributes.fontColor.g, formFieldAttributes.fontColor.b];\n        textbox.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n        textbox.border.width = formFieldAttributes.thickness;\n        textbox.multiLine = formFieldAttributes.Multiline;\n        var pdfFontStyle = this.getFontStyle(formFieldAttributes);\n        textbox._dictionary.set('FontStyle', pdfFontStyle);\n        var hasUnicode = /[^\\u0000-\\u007F]/.test(textbox.text);\n        if (hasUnicode) {\n            textbox.font = this.getTrueFont(formFieldAttributes.fontSize, pdfFontStyle);\n        }\n        else {\n            textbox.font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.FontFamily), this.convertPixelToPoint(formFieldAttributes.fontSize), pdfFontStyle);\n        }\n        if (formFieldAttributes.formFieldAnnotationType === 'PasswordField') {\n            textbox.password = true;\n        }\n        if (!isFieldRotated) {\n            textbox.rotate = this.getFormfieldRotation(loadedPage.rotation);\n        }\n        return textbox;\n    };\n    FormFieldsBase.prototype.saveDropDownField = function (loadedPage, formFieldAttributes) {\n        var dropdownListName = isNullOrUndefined(formFieldAttributes.name) ? 'dropdownList' : formFieldAttributes.name;\n        var dropDownListbounds = this.convertFieldBounds(formFieldAttributes);\n        var rotationAngle = loadedPage.rotation;\n        var isFieldRotated = false;\n        if (formFieldAttributes.rotation !== 0) {\n            isFieldRotated = true;\n        }\n        var fieldBounds = this.getBounds(dropDownListbounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n        var bound = { x: fieldBounds.X, y: fieldBounds.Y, width: fieldBounds.Width, height: fieldBounds.Height };\n        var comboBox = new PdfComboBoxField(loadedPage, dropdownListName, bound);\n        var hasUnicode = false;\n        for (var i = 0; i < formFieldAttributes.option.length; i++) {\n            var item = new PdfListFieldItem(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName, formFieldAttributes.option[parseInt(i.toString(), 10)].itemValue);\n            comboBox.addItem(item);\n            var flag = /[^\\u0000-\\u007F]/.test(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName);\n            if (flag) {\n                hasUnicode = true;\n            }\n        }\n        comboBox.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n        var pdfFontStyle = this.getFontStyle(formFieldAttributes);\n        comboBox._dictionary.set('FontStyle', pdfFontStyle);\n        if (hasUnicode) {\n            comboBox.font = this.getTrueFont(formFieldAttributes.FontSize, pdfFontStyle);\n        }\n        else {\n            comboBox.font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.FontFamily), this.convertPixelToPoint(formFieldAttributes.FontSize), pdfFontStyle);\n        }\n        if (comboBox.itemsCount > 0) {\n            if (formFieldAttributes.selectedIndex.length > 0) {\n                comboBox.selectedIndex = formFieldAttributes.selectedIndex[0];\n            }\n            else {\n                comboBox.selectedIndex = 0;\n            }\n        }\n        comboBox.required = formFieldAttributes.isRequired;\n        comboBox.readOnly = formFieldAttributes.isReadonly;\n        comboBox.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n        comboBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n        if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n            comboBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n        }\n        comboBox.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n        comboBox.border.width = formFieldAttributes.thickness;\n        comboBox.color = [formFieldAttributes.fontColor.r, formFieldAttributes.fontColor.g, formFieldAttributes.fontColor.b];\n        if (!isFieldRotated) {\n            comboBox.rotate = this.getFormfieldRotation(loadedPage.rotation);\n        }\n        comboBox.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? '' : formFieldAttributes.tooltip;\n        comboBox._font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.fontFamily), this.convertPixelToPoint(formFieldAttributes.fontSize), pdfFontStyle);\n        return comboBox;\n    };\n    FormFieldsBase.prototype.SaveCheckBoxField = function (loadedPage, formFieldAttributes) {\n        var checkboxFieldName = isNullOrUndefined(formFieldAttributes.name) && formFieldAttributes.name === '' ? \"checkboxField\" : formFieldAttributes.name;\n        var checkBounds = this.convertFieldBounds(formFieldAttributes);\n        var rotationAngle = loadedPage.rotation;\n        var isFieldRotated = false;\n        if (formFieldAttributes.rotation !== 0) {\n            isFieldRotated = true;\n        }\n        var fieldBounds = this.getBounds(checkBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n        var bound = { x: fieldBounds.X, y: fieldBounds.Y, width: fieldBounds.Width, height: fieldBounds.Height };\n        //Create a new Check box field\n        var checkBoxField = new PdfCheckBoxField(checkboxFieldName, bound, loadedPage);\n        checkBoxField.readOnly = formFieldAttributes.isReadonly;\n        checkBoxField.required = formFieldAttributes.isRequired;\n        checkBoxField.checked = formFieldAttributes.isChecked;\n        checkBoxField.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n        checkBoxField._dictionary.set('ExportValue', formFieldAttributes.value);\n        checkBoxField.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n        if (formFieldAttributes.backgroundColor.r === 0 && formFieldAttributes.backgroundColor.g === 0 && formFieldAttributes.backgroundColor.b === 0 && formFieldAttributes.backgroundColor.a === 0) {\n            checkBoxField.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n        }\n        checkBoxField.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n        checkBoxField.border.width = formFieldAttributes.thickness;\n        checkBoxField.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? \"\" : formFieldAttributes.tooltip;\n        if (!isFieldRotated) {\n            checkBoxField.rotate = this.getFormfieldRotation(loadedPage.rotation);\n        }\n        return checkBoxField;\n    };\n    FormFieldsBase.prototype.saveListBoxField = function (loadedPage, formFieldAttributes) {\n        var listBoxName = isNullOrUndefined(formFieldAttributes.name) ? 'listBox' : formFieldAttributes.name;\n        var listBounds = this.convertFieldBounds(formFieldAttributes);\n        var rotationAngle = loadedPage.rotation;\n        var isFieldRotated = false;\n        if (formFieldAttributes.rotation !== 0) {\n            isFieldRotated = true;\n        }\n        var fieldBounds = this.getBounds(listBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n        var bound = { x: fieldBounds.X, y: fieldBounds.Y, width: fieldBounds.Width, height: fieldBounds.Height };\n        var listBox = new PdfListBoxField(loadedPage, listBoxName, bound);\n        var flag = false;\n        var hasUnicode = false;\n        for (var i = 0; i < formFieldAttributes.option.length; i++) {\n            var item = new PdfListFieldItem(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName, formFieldAttributes.option[parseInt(i.toString(), 10)].itemValue);\n            listBox.addItem(item);\n            var unicode = /[^\\u0000-\\u007F]/.test(formFieldAttributes.option[parseInt(i.toString(), 10)].itemName);\n            if (unicode) {\n                hasUnicode = true;\n            }\n            if (!isNullOrUndefined(item && item._dictionary && !flag)) {\n                item.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n                flag = true;\n            }\n        }\n        if (listBox.itemsCount > 0) {\n            var count = formFieldAttributes.selectedIndex.length;\n            if (Array.isArray(formFieldAttributes.selectedIndex) && count > 0) {\n                if (count === 1) {\n                    listBox.selectedIndex = formFieldAttributes.selectedIndex[0];\n                }\n                else {\n                    var selectedIndexes = [];\n                    for (var j = 0; j < count; j++) {\n                        selectedIndexes.push(formFieldAttributes.selectedIndex[parseInt(j.toString(), 10)]);\n                    }\n                    listBox.selectedIndex = selectedIndexes;\n                }\n            }\n            else {\n                listBox.selectedIndex = 0;\n            }\n        }\n        listBox.textAlignment = this.getTextAlignment(formFieldAttributes.textAlign);\n        listBox.multiSelect = true;\n        listBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b];\n        if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n            listBox.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n        }\n        listBox.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n        listBox.border.width = formFieldAttributes.thickness;\n        var pdfFontStyle = this.getFontStyle(formFieldAttributes);\n        listBox._dictionary.set('FontStyle', pdfFontStyle);\n        if (hasUnicode) {\n            listBox.font = this.getTrueFont(formFieldAttributes.FontSize, pdfFontStyle);\n        }\n        else {\n            listBox.font = new PdfStandardFont(this.getFontFamily(formFieldAttributes.fontFamily), this.convertPixelToPoint(formFieldAttributes.fontSize), pdfFontStyle);\n        }\n        listBox.readOnly = formFieldAttributes.isReadonly;\n        listBox.required = formFieldAttributes.isRequired;\n        listBox.visibility = this.getFormFieldsVisibility(formFieldAttributes.visibility);\n        listBox.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? \"\" : formFieldAttributes.tooltip;\n        if (!isFieldRotated) {\n            listBox.rotate = this.getFormfieldRotation(loadedPage.rotation);\n        }\n        return listBox;\n    };\n    FormFieldsBase.prototype.saveRadioButtonField = function (formFieldAttributes) {\n        var loadedPage = this.formFieldLoadedDocument.getPage(formFieldAttributes.pageNumber - 1);\n        var fieldName = isNullOrUndefined(formFieldAttributes.name) ? 'radiobuttonField' : formFieldAttributes.name;\n        var field = new PdfRadioButtonListField(loadedPage, fieldName);\n        var selectedIndex = 0;\n        var isSelectedItem = false;\n        var isReadOnly = false;\n        var isRequired = false;\n        for (var i = 0; i < formFieldAttributes.radiobuttonItem.length; i++) {\n            var radiobuttonItem = formFieldAttributes.radiobuttonItem[parseInt(i.toString(), 10)];\n            var page = this.formFieldLoadedDocument.getPage(radiobuttonItem.pageNumber - 1);\n            var radioButtonName = !(isNullOrUndefined(radiobuttonItem.value) || radiobuttonItem.value === '') ? radiobuttonItem.value : fieldName;\n            var rotationAngle = this.getRotateAngle(page.rotation);\n            var bounds = this.convertFieldBounds(radiobuttonItem);\n            var isFieldRotated = false;\n            if (formFieldAttributes.rotation != 0) {\n                isFieldRotated = true;\n            }\n            var fieldBounds = this.getBounds(bounds, page.size[1], page.size[0], rotationAngle, isFieldRotated);\n            var bound = { x: fieldBounds.X, y: fieldBounds.Y, width: fieldBounds.Width, height: fieldBounds.Height };\n            var radioButtonItem = new PdfRadioButtonListItem(radioButtonName, bound, page);\n            if (isFieldRotated) {\n                radioButtonItem.rotationAngle = this.GetRotateAngle(page.rotation);\n            }\n            if (radiobuttonItem.isReadonly) {\n                isReadOnly = true;\n            }\n            if (radiobuttonItem.isRequired) {\n                isRequired = true;\n            }\n            radioButtonItem.borderColor = [radiobuttonItem.borderColor.r, radiobuttonItem.borderColor.g, radiobuttonItem.borderColor.b];\n            radioButtonItem.border.width = radiobuttonItem.thickness;\n            radioButtonItem.backColor = [radiobuttonItem.backgroundColor.r, radiobuttonItem.backgroundColor.g, radiobuttonItem.backgroundColor.b];\n            if (formFieldAttributes.backgroundColor.r == 0 && formFieldAttributes.backgroundColor.g == 0 && formFieldAttributes.backgroundColor.b == 0 && formFieldAttributes.backgroundColor.a == 0) {\n                radioButtonItem.backColor = [formFieldAttributes.backgroundColor.r, formFieldAttributes.backgroundColor.g, formFieldAttributes.backgroundColor.b, formFieldAttributes.backgroundColor.a];\n            }\n            radioButtonItem.visibility = this.getFormFieldsVisibility(radiobuttonItem.visibility);\n            field.add(radioButtonItem);\n            if (radiobuttonItem.isSelected) {\n                selectedIndex = i;\n                isSelectedItem = true;\n            }\n        }\n        field.readOnly = isReadOnly;\n        field.required = isRequired;\n        field.toolTip = isNullOrUndefined(formFieldAttributes.tooltip) ? '' : formFieldAttributes.tooltip;\n        if (isSelectedItem)\n            field.selectedIndex = selectedIndex;\n        return field;\n    };\n    FormFieldsBase.prototype.saveSignatureField = function (loadedPage, formFieldAttributes) {\n        var signatureFieldName = isNullOrUndefined(formFieldAttributes.name) ? 'signatureField' : formFieldAttributes.name;\n        var signatureFieldBounds = this.convertFieldBounds(formFieldAttributes);\n        var rotationAngle = loadedPage.rotation;\n        var isFieldRotated = false;\n        if (formFieldAttributes.rotation !== 0) {\n            isFieldRotated = true;\n        }\n        var fieldBounds = this.getBounds(signatureFieldBounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, isFieldRotated);\n        var bound = { x: fieldBounds.X, y: fieldBounds.Y, width: fieldBounds.Width, height: fieldBounds.Height };\n        var signatureField = new PdfSignatureField(loadedPage, signatureFieldName, bound);\n        //let page: PdfPage = signatureField.page;\n        signatureField.toolTip = formFieldAttributes.tooltip;\n        signatureField.required = formFieldAttributes.isRequired;\n        signatureField.readOnly = formFieldAttributes.isReadonly;\n        if (formFieldAttributes.formFieldAnnotationType === \"InitialField\") {\n            signatureField._dictionary.set(\"InitialField\", true);\n        }\n        signatureField.borderColor = [formFieldAttributes.borderColor.r, formFieldAttributes.borderColor.g, formFieldAttributes.borderColor.b];\n        signatureField.border.width = formFieldAttributes.thickness;\n        if (formFieldAttributes.visibility === \"hidden\") {\n            signatureField.visible = false;\n        }\n        else if (formFieldAttributes.visibility === \"visible\") {\n            signatureField.visible = true;\n        }\n        if (formFieldAttributes.signatureType === \"Text\") {\n            this.drawDesignerFieldFreeTextAnnotations(signatureField, signatureFieldName, formFieldAttributes);\n        }\n        else if (formFieldAttributes.signatureType === \"Image\") {\n            this.drawDesignerFieldImage(signatureField, signatureFieldName, formFieldAttributes);\n        }\n        else if (formFieldAttributes.signatureType = \"Path\") {\n            if (!isNullOrUndefined(formFieldAttributes.value) && formFieldAttributes.value !== \"\") {\n                this.drawDesignerFieldPath(signatureField, signatureFieldName, formFieldAttributes);\n            }\n        }\n        if (!isFieldRotated) {\n            signatureField.rotate = this.getFormfieldRotation(loadedPage.rotation);\n        }\n        return signatureField;\n    };\n    FormFieldsBase.prototype.drawDesignerFieldFreeTextAnnotations = function (signatureField, currentFieldName, formFieldAttributes) {\n        var boundsObjects = { X: formFieldAttributes.signatureBound.x, Y: formFieldAttributes.signatureBound.y, Width: formFieldAttributes.signatureBound.width, Height: formFieldAttributes.signatureBound.height };\n        var page = signatureField.page;\n        var pageRotationAngle = page.rotation;\n        var zoomvalue = formFieldAttributes.zoomValue;\n        var signBounds = { X: this.convertPixelToPoint(boundsObjects.X / zoomvalue), Y: this.convertPixelToPoint(boundsObjects.Y / zoomvalue), Width: this.convertPixelToPoint(boundsObjects.Width / zoomvalue), Height: this.convertPixelToPoint(boundsObjects.Height / zoomvalue) };\n        var isFieldRotated = false;\n        if (formFieldAttributes.rotation !== 0) {\n            isFieldRotated = true;\n        }\n        signBounds = this.getBounds(signBounds, page.size[1], page.size[0], pageRotationAngle, isFieldRotated);\n        if (!isNullOrUndefined(formFieldAttributes)) {\n            var left = signBounds.X;\n            var top_3 = signBounds.Y;\n            var width = signBounds.Width;\n            var height = signBounds.Height;\n            var freeTextBounds = { X: left, Y: top_3, Width: width, Height: height };\n            var annotation = new PdfFreeTextAnnotation(left, top_3, width, height);\n            annotation.setAppearance(true);\n            annotation._dictionary.set(\"T\", currentFieldName);\n            var font = formFieldAttributes.fontSize;\n            var fontFamilyEnum = PdfFontFamily.helvetica;\n            if (!isNullOrUndefined(formFieldAttributes.fontFamily)) {\n                fontFamilyEnum = this.getFontFamily(formFieldAttributes.fontFamily);\n            }\n            var fontStyle = this.getFontStyle(formFieldAttributes);\n            var hasUnicode = /[^\\u0000-\\u007F]/.test(formFieldAttributes.value);\n            if (hasUnicode) {\n                annotation.font = this.getTrueFont(this.convertPixelToPoint(font), fontStyle);\n            }\n            else {\n                annotation.font = new PdfStandardFont(fontFamilyEnum, this.convertPixelToPoint(formFieldAttributes.fontSize), fontStyle);\n            }\n            annotation.text = formFieldAttributes.value;\n            this.setFontSize(this.convertPixelToPoint(font), annotation.font, formFieldAttributes.value, freeTextBounds, fontFamilyEnum, fontStyle);\n            annotation.border.width = 0;\n            annotation.textAlignment = PdfTextAlignment.center;\n            annotation.flags = PdfAnnotationFlag.print;\n            if (!isFieldRotated) {\n                annotation.rotationAngle = Math.abs(this.getRotateAngle(page.rotation));\n            }\n            annotation.setValues(\"AnnotationType\", \"Signature\");\n            annotation.setAppearance(true);\n            page.annotations.add(annotation);\n        }\n    };\n    FormFieldsBase.prototype.drawDesignerFieldImage = function (signatureField, currentFieldName, formFieldAttributes) {\n        var boundsObjects = { X: formFieldAttributes.signatureBound.x, Y: formFieldAttributes.signatureBound.y, Width: formFieldAttributes.signatureBound.width, Height: formFieldAttributes.signatureBound.height };\n        var page = signatureField.page;\n        var pageRotationAngle = page.rotation;\n        var zoomvalue = formFieldAttributes.zoomValue;\n        var signBounds = { X: this.convertPixelToPoint(boundsObjects.X / zoomvalue), Y: this.convertPixelToPoint(boundsObjects.Y / zoomvalue), Width: this.convertPixelToPoint(boundsObjects.Width / zoomvalue), Height: this.convertPixelToPoint(boundsObjects.Height / zoomvalue) };\n        var isFieldRotated = false;\n        if (formFieldAttributes.rotation !== 0) {\n            isFieldRotated = true;\n        }\n        signBounds = this.getBounds(signBounds, page.size[1], page.size[0], pageRotationAngle, isFieldRotated);\n        if (!isNullOrUndefined(formFieldAttributes)) {\n            var left = signBounds.X;\n            var top_4 = signBounds.Y;\n            var width = signBounds.Width;\n            var height = signBounds.Height;\n            var imageUrl = (formFieldAttributes.value.toString()).split(',')[1];\n            var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top_4, width, height);\n            var bitmap = new PdfBitmap(imageUrl);\n            rubberStampAnnotation.appearance.normal.graphics.drawImage(bitmap, 0, 0, width, height);\n            if (!isFieldRotated) {\n                rubberStampAnnotation.rotationAngle = Math.abs(this.getRotateAngle(page.rotation));\n            }\n            rubberStampAnnotation._dictionary.set(\"T\", currentFieldName);\n            rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n            page.annotations.add(rubberStampAnnotation);\n        }\n    };\n    FormFieldsBase.prototype.drawDesignerFieldPath = function (signatureField, currentFieldName, formFieldAttributes) {\n        var stampObjects = JSON.parse(formFieldAttributes.value);\n        var boundsObjects = { X: formFieldAttributes.signatureBound.x, Y: formFieldAttributes.signatureBound.y, Width: formFieldAttributes.signatureBound.width, Height: formFieldAttributes.signatureBound.height };\n        var page = signatureField.page;\n        var pageRotationAngle = page.rotation;\n        var zoomvalue = formFieldAttributes.zoomValue;\n        var signBounds = { X: this.convertPixelToPoint(boundsObjects.X / zoomvalue), Y: this.convertPixelToPoint(boundsObjects.Y / zoomvalue), Width: this.convertPixelToPoint(boundsObjects.Width / zoomvalue), Height: this.convertPixelToPoint(boundsObjects.Height / zoomvalue) };\n        signBounds = this.getBounds(signBounds, page.size[1], page.size[0], pageRotationAngle, false);\n        var pageNumber = 0;\n        for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n            if (page === this.formFieldLoadedDocument.getPage(k)) {\n                break;\n            }\n            pageNumber++;\n        }\n        // Need to check and implement the logic of skia sharp to reduced the ink annotation thickness\n        if (stampObjects.length > 0) {\n            var left = signBounds.X;\n            var top_5 = signBounds.Y;\n            var width = signBounds.Width;\n            var height = signBounds.Height;\n            var minimumX = -1;\n            var minimumY = -1;\n            var maximumX = -1;\n            var maximumY = -1;\n            for (var p = 0; p < stampObjects.length; p++) {\n                var value = stampObjects[parseInt(p.toString(), 10)];\n                if (minimumX == -1) {\n                    minimumX = value.x;\n                    minimumY = value.y;\n                    maximumX = value.x;\n                    maximumY = value.x;\n                }\n                else {\n                    var point1 = value.x;\n                    var point2 = value.y;\n                    0;\n                    if (minimumX >= point1) {\n                        minimumX = point1;\n                    }\n                    if (minimumY >= point2) {\n                        minimumY = point2;\n                    }\n                    if (maximumX <= point1) {\n                        maximumX = point1;\n                    }\n                    if (maximumY <= point2) {\n                        maximumY = point2;\n                    }\n                }\n            }\n            var newDifferenceX = (maximumX - minimumX) / width;\n            var newDifferenceY = (maximumY - minimumY) / height;\n            var linePoints = [];\n            var isNewValues = 0;\n            if (pageRotationAngle !== 0) {\n                for (var j = 0; j < stampObjects.length; j++) {\n                    var value = stampObjects[parseInt(j.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path == \"M\" && j !== 0) {\n                        isNewValues = j;\n                        break;\n                    }\n                    linePoints.push(parseFloat(value.x));\n                    linePoints.push(parseFloat(value.y));\n                }\n                linePoints = [];\n                for (var z = 0; z < stampObjects.length; z++) {\n                    var value = stampObjects[parseInt(z.toString(), 10)];\n                    linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                    linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - ((parseFloat(value.y) - minimumY) / newDifferenceY) - top_5);\n                }\n            }\n            else {\n                for (var k = 0; k < stampObjects.length; k++) {\n                    var value = stampObjects[parseInt(k.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path == \"M\" && k !== 0) {\n                        isNewValues = k;\n                        break;\n                    }\n                    linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                    var newX = ((parseFloat(value.y) - minimumY) / newDifferenceY);\n                    linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_5);\n                }\n            }\n            var inkAnnotation = new PdfInkAnnotation([left, top_5, width, height], linePoints);\n            inkAnnotation.flags = PdfAnnotationFlag.print;\n            inkAnnotation.bounds = { x: signBounds.X, y: signBounds.Y, width: signBounds.Width, height: signBounds.Height };\n            inkAnnotation.border.width = 0;\n            inkAnnotation.color = [0, 0, 0];\n            inkAnnotation.setValues(\"annotationSignature\", \"annotationSignature\");\n            linePoints = [];\n            if (pageRotationAngle !== 0) {\n                var pathCollection = [];\n                for (var t = isNewValues; t < stampObjects.length; t++) {\n                    var value = stampObjects[parseInt(t.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path === \"M\" && t !== isNewValues) {\n                        pathCollection.push(linePoints);\n                        linePoints = [];\n                    }\n                    linePoints.push(parseFloat(value.x));\n                    linePoints.push(parseFloat(value.y));\n                }\n                if (linePoints.length > 0) {\n                    pathCollection.push(linePoints);\n                }\n                for (var w = 0; w < pathCollection.length; w++) {\n                    var pointsCollections = pathCollection[parseInt(w.toString(), 10)];\n                    linePoints = [];\n                    if (pointsCollections.length > 0) {\n                        for (var z = 0; z < stampObjects.length; z++) {\n                            var value = stampObjects[parseInt(z.toString(), 10)];\n                            linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                            linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - ((parseFloat(value.y) - minimumY) / newDifferenceY) - top_5);\n                        }\n                        inkAnnotation.inkPointsCollection.push(linePoints);\n                    }\n                    linePoints = [];\n                }\n            }\n            else {\n                for (var r = 0; r < stampObjects.length; r++) {\n                    var value = stampObjects[parseInt(r.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path == \"M\" && r !== 0) {\n                        inkAnnotation.inkPointsCollection.push(linePoints);\n                        linePoints = [];\n                    }\n                    linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                    var newX = ((parseFloat(value.y) - minimumY) / newDifferenceY);\n                    linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_5);\n                }\n                if (linePoints.length > 0) {\n                    inkAnnotation.inkPointsCollection.push(linePoints);\n                }\n            }\n            inkAnnotation._dictionary.set(\"T\", currentFieldName);\n            inkAnnotation.setAppearance(true);\n            inkAnnotation.rotationAngle = Math.abs(this.getRotateAngle(page.rotation));\n            this.formFieldLoadedDocument.getPage(pageNumber).annotations.add(inkAnnotation);\n        }\n    };\n    FormFieldsBase.prototype.setFontSize = function (fontSize, font, text, freeTextBounds, fontFamilyEnum, fontStyle) {\n        var minimumFontSize = 0.25;\n        font = new PdfStandardFont(fontFamilyEnum, fontSize, fontStyle);\n        do {\n            fontSize = fontSize - 0.001;\n            font._size = fontSize;\n            if (fontSize < minimumFontSize) {\n                font._size = minimumFontSize;\n                break;\n            }\n            var sizeF = font.measureString(text);\n            if (sizeF[0] < freeTextBounds.Width && sizeF[1] < freeTextBounds.height) {\n                font._size = fontSize;\n                break;\n            }\n        } while (fontSize > minimumFontSize);\n    };\n    FormFieldsBase.prototype.getTrueFont = function (fontSize, fontStyle) {\n        var font = new PdfTrueTypeFont(getArialFontData(), this.convertPixelToPoint(fontSize), fontStyle);\n        return font;\n    };\n    FormFieldsBase.prototype.convertFieldBounds = function (formFieldAttributes) {\n        var zoomvalue = formFieldAttributes.zoomValue;\n        return { X: this.convertPixelToPoint(formFieldAttributes.lineBound.X / zoomvalue),\n            Y: this.convertPixelToPoint(formFieldAttributes.lineBound.Y / zoomvalue),\n            Width: this.convertPixelToPoint(formFieldAttributes.lineBound.Width / zoomvalue),\n            Height: this.convertPixelToPoint(formFieldAttributes.lineBound.Height / zoomvalue) };\n    };\n    FormFieldsBase.prototype.getFontFamily = function (font) {\n        var fontFamily = PdfFontFamily.helvetica;\n        switch (font) {\n            case 'Courier':\n                fontFamily = PdfFontFamily.courier;\n                break;\n            case 'Times New Roman':\n                fontFamily = PdfFontFamily.timesRoman;\n                break;\n            case 'Symbol':\n                fontFamily = PdfFontFamily.symbol;\n                break;\n            case 'ZapfDingbats':\n                fontFamily = PdfFontFamily.zapfDingbats;\n                break;\n        }\n        return fontFamily;\n    };\n    //Need to calculate bound for all rotation\n    FormFieldsBase.prototype.getBounds = function (bounds, pageHeight, pageWidth, pageRotation, isFieldRotated) {\n        var bound = {};\n        if (pageRotation === 0) {\n            bound = { X: bounds.X, Y: bounds.Y, Width: bounds.Width, Height: bounds.Height };\n        }\n        else if (pageRotation === 1) {\n            if (isFieldRotated) {\n                bound = { X: bounds.Y - (bounds.Width / 2 - bounds.Height / 2), Y: pageHeight - bounds.X - bounds.Height - (bounds.Width / 2 - bounds.Height / 2), Width: bounds.Width, Height: bounds.Height };\n            }\n            else {\n                bound = { X: bounds.Y, Y: pageHeight - bounds.X - bounds.Width, Width: bounds.Height, Height: bounds.Width };\n            }\n        }\n        else if (pageRotation === 2) {\n            bound = { X: pageWidth - bounds.X - bounds.Width, Y: pageHeight - bounds.Y - bounds.Height, Width: bounds.Width, Height: bounds.Height };\n        }\n        else if (pageRotation === 3) {\n            if (isFieldRotated) {\n                bound = { X: pageWidth - bounds.Y - bounds.Height - (bounds.Width / 2 - bounds.Height / 2), Y: bounds.X + (bounds.Width / 2 - bounds.Height / 2), Width: bounds.Width, Height: bounds.Height };\n            }\n            else {\n                bound = { X: pageWidth - bounds.Y - bounds.Height, Y: bounds.X, Width: bounds.Height, Height: bounds.Width };\n            }\n        }\n        return bound;\n    };\n    FormFieldsBase.prototype.getFormfieldRotation = function (rotation) {\n        var angle = 0;\n        switch (rotation) {\n            case 1:\n                angle = 90;\n                break;\n            case 2:\n                angle = 180;\n                break;\n            case 3:\n                angle = 270;\n                break;\n            case 4:\n                angle = 360;\n                break;\n        }\n        return angle;\n    };\n    //Need to check the form field textAlignment property\n    FormFieldsBase.prototype.getTextAlignment = function (alignment) {\n        var textAlignment;\n        switch (alignment) {\n            case 'left':\n                textAlignment = PdfTextAlignment.left;\n                break;\n            case 'right':\n                textAlignment = PdfTextAlignment.right;\n                break;\n            case 'center':\n                textAlignment = PdfTextAlignment.center;\n                break;\n            case 'justify':\n                textAlignment = PdfTextAlignment.justify;\n                break;\n        }\n        return textAlignment;\n    };\n    //Need to check the form field visibility property\n    FormFieldsBase.prototype.getFormFieldsVisibility = function (visibility) {\n        var fieldVisibility;\n        switch (visibility) {\n            case 'visible':\n                fieldVisibility = PdfFormFieldVisibility.visible;\n                break;\n            case 'hidden':\n                fieldVisibility = PdfFormFieldVisibility.hidden;\n                break;\n            case 'visibleNotPrintable':\n                fieldVisibility = PdfFormFieldVisibility.visibleNotPrintable;\n                break;\n            case 'hiddenPrintable':\n                fieldVisibility = PdfFormFieldVisibility.hiddenPrintable;\n                break;\n        }\n        return fieldVisibility;\n    };\n    FormFieldsBase.prototype.getFontStyle = function (formFieldAttributes) {\n        var fontStyle;\n        fontStyle = PdfFontStyle.regular;\n        if (!isNullOrUndefined(formFieldAttributes) && !isNullOrUndefined(formFieldAttributes.font)) {\n            if (formFieldAttributes.font.isBold) {\n                fontStyle |= PdfFontStyle.bold;\n            }\n            if (formFieldAttributes.font.isItalic) {\n                fontStyle |= PdfFontStyle.italic;\n            }\n            if (formFieldAttributes.font.isUnderline) {\n                fontStyle |= PdfFontStyle.underline;\n            }\n            if (formFieldAttributes.font.isStrikeout) {\n                fontStyle |= PdfFontStyle.strikeout;\n            }\n        }\n        return fontStyle;\n    };\n    FormFieldsBase.prototype.convertPixelToPoint = function (value) {\n        return (value * 72 / 96);\n    };\n    FormFieldsBase.prototype.convertPointtoPixel = function (value) {\n        return (value * 96 / 72);\n    };\n    FormFieldsBase.prototype.fontConvert = function (font) {\n        return {\n            Bold: font.isBold,\n            FontFamily: this.getFontFamilyString(font.fontFamily),\n            Height: font.height,\n            Italic: font.isItalic,\n            Name: this.getFontFamilyString(font.fontFamily).toString(),\n            Size: font.size,\n            Strikeout: font.isStrikeout,\n            Underline: font.isUnderline,\n            Style: font.style,\n        };\n    };\n    FormFieldsBase.prototype.parseFontStyle = function (numberValue, fontObject) {\n        if ((numberValue & PdfFontStyle.underline) > 0) {\n            fontObject.Underline = true;\n        }\n        if ((numberValue & PdfFontStyle.strikeout) > 0) {\n            fontObject.Strikeout = true;\n        }\n        if ((numberValue & PdfFontStyle.bold) > 0) {\n            fontObject.Bold = true;\n        }\n        if ((numberValue & PdfFontStyle.italic) > 0) {\n            fontObject.Italic = true;\n        }\n        return fontObject;\n    };\n    /**\n     * @private\n     */\n    FormFieldsBase.prototype.GetFormFields = function () {\n        this.PdfRenderedFormFields = [];\n        var loadedForm = this.formFieldLoadedDocument.form;\n        if (!isNullOrUndefined(loadedForm) && !isNullOrUndefined(loadedForm._fields)) {\n            loadedForm.orderFormFields();\n            for (var i = 0; i < loadedForm.count; i++) {\n                var field = loadedForm.fieldAt(i);\n                var page = field.page;\n                var pageNumber = 0;\n                for (var j = 0; j < this.formFieldLoadedDocument.pageCount; j++) {\n                    if (page === this.formFieldLoadedDocument.getPage(j)) {\n                        break;\n                    }\n                    pageNumber++;\n                }\n                if (!isNullOrUndefined(field.page)) {\n                    if (field instanceof PdfTextBoxField) {\n                        var textBox = field;\n                        if (textBox.itemsCount > 0) {\n                            this.addTextBoxFieldItems(textBox);\n                        }\n                        else {\n                            this.addTextBoxField(textBox, pageNumber, textBox.bounds, null);\n                        }\n                    }\n                    else if (field instanceof PdfComboBoxField) {\n                        var comboBoxField = loadedForm.fieldAt(i);\n                        this.addComboBoxField(comboBoxField, pageNumber);\n                    }\n                    else if (field instanceof PdfCheckBoxField) {\n                        var checkbox = field;\n                        if (checkbox.itemsCount > 1) {\n                            this.addCheckBoxFieldItems(checkbox);\n                        }\n                        else {\n                            this.addCheckBoxField(checkbox, pageNumber, checkbox.bounds, null);\n                        }\n                    }\n                    else if (field instanceof PdfListBoxField) {\n                        var listBoxField = field;\n                        this.addListBoxField(listBoxField, pageNumber);\n                    }\n                    else if (field instanceof PdfRadioButtonListField) {\n                        for (var i_2 = 0; i_2 < field.itemsCount; i_2++) {\n                            var item = field.itemAt(i_2);\n                            if (item) {\n                                var page_1 = item.page;\n                                if (page_1) {\n                                    this.addRadioButtonField(item, page_1._pageIndex, field.name);\n                                }\n                            }\n                        }\n                    }\n                    else if (loadedForm.fieldAt(i) instanceof PdfSignatureField) {\n                        var signatureField = loadedForm.fieldAt(i);\n                        if (signatureField.isSigned && this.showDigitalSignatureAppearance) {\n                            this.m_isDigitalSignaturePresent = true;\n                            signatureField.flatten = true;\n                        }\n                        else if (!signatureField.isSigned || !this.hideEmptyDigitalSignatureFields) {\n                            if (signatureField.itemsCount > 0) {\n                                this.addSigntureFieldItems(signatureField);\n                            }\n                            else {\n                                this.addSignatureField(signatureField, pageNumber, signatureField.bounds);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.retrieveInkAnnotation(this.formFieldLoadedDocument);\n    };\n    FormFieldsBase.prototype.addTextBoxFieldItems = function (field) {\n        if (field instanceof PdfTextBoxField) {\n            var textBoxField = field;\n            if (textBoxField.itemsCount > 0) {\n                for (var i = 0; i < textBoxField.itemsCount; i++) {\n                    var item = textBoxField.itemAt(i).page;\n                    if (!isNullOrUndefined(item)) {\n                        var j = 0;\n                        for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n                            if (item == this.formFieldLoadedDocument.getPage(j)) {\n                                break;\n                            }\n                            j++;\n                        }\n                        this.addTextBoxField(textBoxField, j, textBoxField.itemAt(i).bounds, textBoxField.itemAt(i).font);\n                    }\n                }\n            }\n        }\n    };\n    FormFieldsBase.prototype.addTextBoxField = function (textBox, pageNumber, bounds, font) {\n        var formFields = new PdfRenderedFields();\n        formFields.FieldName = textBox.name;\n        formFields.ActualFieldName = textBox.name;\n        if (textBox.password) {\n            formFields.Name = \"Password\";\n        }\n        else {\n            formFields.Name = \"Textbox\";\n        }\n        formFields.ToolTip = textBox.toolTip;\n        if (!isNullOrUndefined(bounds)) {\n            formFields.LineBounds = { X: bounds.x, Y: bounds.y, Width: bounds.width, Height: bounds.height };\n        }\n        else {\n            formFields.LineBounds = { X: textBox.bounds.x, Y: textBox.bounds.y, Width: textBox.bounds.width, Height: textBox.bounds.height };\n        }\n        formFields.TabIndex = textBox.tabIndex;\n        formFields.PageIndex = pageNumber;\n        formFields.BorderWidth = textBox.border.width;\n        formFields.BorderStyle = textBox.border.style;\n        if (!isNullOrUndefined(textBox.backColor)) {\n            formFields.BackColor = { R: textBox.backColor[0], G: textBox.backColor[1], B: textBox.backColor[2] };\n        }\n        else {\n            formFields.IsTransparent = true;\n        }\n        formFields.Alignment = textBox.textAlignment;\n        formFields.MaxLength = textBox.maxLength;\n        formFields.Visible = textBox.visibility;\n        formFields.InsertSpaces = textBox.insertSpaces;\n        if (!isNullOrUndefined(font)) {\n            formFields.Font = this.fontConvert(font);\n        }\n        else {\n            formFields.Font = this.fontConvert(textBox.font);\n        }\n        if (textBox._dictionary.has(\"FontStyle\")) {\n            var fontStyle = textBox._dictionary.get(\"FontStyle\");\n            formFields.Font = this.parseFontStyle(fontStyle, formFields.Font);\n        }\n        formFields.Rotation = textBox.rotationAngle;\n        formFields.IsReadonly = textBox.readOnly;\n        formFields.IsRequired = textBox.required;\n        if (!isNullOrUndefined(textBox.color)) {\n            formFields.FontColor = { R: textBox.color[0], G: textBox.color[1], B: textBox.color[2] };\n            ;\n        }\n        formFields.BorderColor = { R: textBox.borderColor[0], G: textBox.borderColor[1], B: textBox.borderColor[2] };\n        formFields.Text = textBox.text ? textBox.text.replace(\"\\\"\", \"\") : '';\n        formFields.Multiline = textBox.multiLine;\n        formFields.RotationAngle = this.GetRotateAngle(textBox.page.rotation);\n        formFields.TextList = [];\n        this.PdfRenderedFormFields.push(formFields);\n    };\n    FormFieldsBase.prototype.addComboBoxField = function (comboBoxField, pageNumber) {\n        var formFields = new PdfRenderedFields();\n        formFields.Name = 'DropDown';\n        formFields.ToolTip = comboBoxField.toolTip;\n        formFields.FieldName = comboBoxField.name;\n        formFields.Font = this.fontConvert(comboBoxField.font);\n        formFields.IsAutoSize = comboBoxField._isAutoFontSize;\n        formFields.Selected = comboBoxField.editable;\n        if (comboBoxField._dictionary.has('FontStyle')) {\n            var fontStyle = comboBoxField._dictionary.get('FontStyle');\n            formFields.Font = this.parseFontStyle(fontStyle, formFields.Font);\n        }\n        formFields.ActualFieldName = comboBoxField.name;\n        formFields.SelectedValue = comboBoxField.selectedValue;\n        formFields.selectedIndex = comboBoxField.selectedIndex;\n        formFields.LineBounds = { X: comboBoxField.bounds.x, Y: comboBoxField.bounds.y, Width: comboBoxField.bounds.width, Height: comboBoxField.bounds.height };\n        formFields.TabIndex = comboBoxField.tabIndex;\n        formFields.PageIndex = pageNumber;\n        if (!isNullOrUndefined(comboBoxField.backColor)) {\n            formFields.BackColor = { R: comboBoxField.backColor[0], G: comboBoxField.backColor[1], B: comboBoxField.backColor[2] };\n        }\n        else {\n            formFields.IsTransparent = true;\n        }\n        formFields.BorderWidth = comboBoxField.border.width;\n        formFields.BorderStyle = comboBoxField.border.style;\n        formFields.BorderColor = { R: comboBoxField.borderColor[0], G: comboBoxField.borderColor[1], B: comboBoxField.borderColor[2] };\n        formFields.FontColor = { R: comboBoxField.color[0], G: comboBoxField.color[1], B: comboBoxField.color[2] };\n        formFields.Rotation = comboBoxField.rotationAngle;\n        formFields.IsRequired = comboBoxField.required;\n        formFields.IsReadonly = comboBoxField.readOnly;\n        formFields.Visible = comboBoxField.visibility;\n        formFields.RotationAngle = this.GetRotateAngle(comboBoxField.page.rotation);\n        formFields.Alignment = comboBoxField.textAlignment;\n        formFields.TextList = [];\n        if (comboBoxField._dictionary.has('Opt')) {\n            var options = comboBoxField._dictionary.get('Opt');\n            if (options.length > 0) {\n                formFields.TextList = options.map(function (item) { return (typeof item === \"string\" ? item : (typeof item === \"object\" ? item[0] : \"\")); });\n            }\n        }\n        if (formFields.TextList.length === 0) {\n            for (var i = 0; i < comboBoxField.itemsCount; i++) {\n                var item = comboBoxField.itemAt(i);\n                if (item) {\n                    formFields.TextList.push(item.text);\n                    if (i == 0) {\n                        formFields.Alignment = item.textAlignment;\n                    }\n                }\n            }\n        }\n        this.PdfRenderedFormFields.push(formFields);\n    };\n    FormFieldsBase.prototype.addCheckBoxFieldItems = function (field) {\n        var page = field.page;\n        if (field instanceof PdfCheckBoxField) {\n            var checkBoxField = field;\n            if (checkBoxField.itemsCount > 0) {\n                for (var i = 0; i < checkBoxField.itemsCount; i++) {\n                    var item = checkBoxField.itemAt(i).page;\n                    if (!isNullOrUndefined(item)) {\n                        var j = 0;\n                        for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n                            if (item == this.formFieldLoadedDocument.getPage(j)) {\n                                break;\n                            }\n                            j++;\n                        }\n                        this.addCheckBoxField(checkBoxField, j, checkBoxField.itemAt(i).bounds, i.toString());\n                    }\n                }\n            }\n        }\n    };\n    FormFieldsBase.prototype.addCheckBoxField = function (chkField, index, bounds, checkBoxIndex) {\n        var formFields = new PdfRenderedFields();\n        formFields.Name = \"CheckBox\";\n        formFields.ToolTip = chkField.toolTip;\n        if (!bounds.IsEmpty) {\n            formFields.LineBounds = { X: bounds.x, Y: bounds.y, Width: bounds.width, Height: bounds.height };\n        }\n        else {\n            formFields.LineBounds = { X: chkField.bounds.x, Y: chkField.bounds.y, Width: chkField.bounds.width, Height: chkField.bounds.height };\n        }\n        formFields.Selected = chkField.checked;\n        formFields.TabIndex = chkField.tabIndex;\n        formFields.GroupName = chkField.name.replace(/[^0-9a-zA-Z]+/g, \"\");\n        formFields.ActualFieldName = chkField.name;\n        formFields.PageIndex = index;\n        formFields.BorderWidth = chkField.border.width;\n        if (!isNullOrUndefined(chkField.backColor)) {\n            formFields.BackColor = { R: chkField.backColor[0], G: chkField.backColor[1], B: chkField.backColor[2] };\n        }\n        else {\n            formFields.IsTransparent = true;\n        }\n        formFields.BorderStyle = chkField.border.style;\n        formFields.BorderColor = { R: chkField.borderColor[0], G: chkField.borderColor[1], B: chkField.borderColor[2] };\n        formFields.RotationAngle = this.GetRotateAngle(chkField.page.rotation);\n        formFields.IsReadonly = chkField.readOnly;\n        formFields.IsRequired = chkField.required;\n        formFields.Visible = chkField.visibility;\n        var value = chkField._dictionary._get(\"ExportValue\");\n        if (chkField._dictionary._get(\"ExportValue\") && !isNullOrUndefined(value)) {\n            formFields.Value = value;\n        }\n        if (!isNullOrUndefined(checkBoxIndex)) {\n            formFields.CheckBoxIndex = checkBoxIndex;\n            var chekckboxField = chkField.itemAt(parseInt(checkBoxIndex));\n            if (!isNullOrUndefined(chekckboxField)) {\n                formFields.Selected = chekckboxField.checked;\n            }\n        }\n        formFields.RotationAngle = this.GetRotateAngle(chkField.page.rotation);\n        this.PdfRenderedFormFields.push(formFields);\n    };\n    FormFieldsBase.prototype.addListBoxField = function (listBoxField, pageNumber) {\n        var formFields = new PdfRenderedFields();\n        formFields.Name = 'ListBox';\n        formFields.ToolTip = listBoxField.toolTip;\n        formFields.Text = listBoxField.name.replace(/[^0-9a-zA-Z]+/g, '');\n        formFields.ActualFieldName = listBoxField.name;\n        var itemCount = listBoxField.itemsCount;\n        if (itemCount > 0) {\n            var selectedIndex = listBoxField.selectedIndex;\n            if (Array.isArray(selectedIndex)) {\n                for (var i = 0; i < selectedIndex.length; i++) {\n                    formFields.SelectedList.push(selectedIndex[parseInt(i.toString(), 10)]);\n                }\n            }\n            else {\n                formFields.SelectedList.push(selectedIndex);\n            }\n        }\n        formFields.Font = this.fontConvert(listBoxField.font);\n        if (listBoxField._dictionary.has('FontStyle')) {\n            var fontStyle = listBoxField._dictionary.get('FontStyle');\n            formFields.Font = this.parseFontStyle(fontStyle, formFields.Font);\n        }\n        formFields.LineBounds = { X: listBoxField.bounds.x, Y: listBoxField.bounds.y, Width: listBoxField.bounds.width, Height: listBoxField.bounds.height };\n        formFields.TabIndex = listBoxField.tabIndex;\n        formFields.PageIndex = pageNumber;\n        formFields.BorderWidth = listBoxField.border.width;\n        formFields.BorderStyle = listBoxField.border.style;\n        if (!isNullOrUndefined(listBoxField.backColor)) {\n            formFields.BackColor = { R: listBoxField.backColor[0], G: listBoxField.backColor[1], B: listBoxField.backColor[2] };\n        }\n        else {\n            formFields.IsTransparent = true;\n        }\n        formFields.FontColor = { R: listBoxField.color[0], G: listBoxField.color[1], B: listBoxField.color[2] };\n        formFields.BorderColor = { R: listBoxField.borderColor[0], G: listBoxField.borderColor[1], B: listBoxField.borderColor[2] };\n        formFields.Rotation = listBoxField.rotationAngle;\n        formFields.IsReadonly = listBoxField.readOnly;\n        formFields.IsRequired = listBoxField.required;\n        formFields.Visible = listBoxField.visibility;\n        formFields.MultiSelect = listBoxField.multiSelect;\n        //Need to implement selected value\n        if (itemCount > 0) {\n            if (Array.isArray(listBoxField.selectedIndex) && Array.isArray(listBoxField.selectedValue)) {\n                formFields.selectedIndex = listBoxField.selectedIndex[0];\n                formFields.SelectedValue = listBoxField.selectedValue[0];\n            }\n        }\n        for (var i = 0; i < itemCount; i++) {\n            var item = listBoxField.itemAt(i);\n            if (item) {\n                formFields.TextList.push(item.text);\n                if (i === 0) {\n                    formFields.Alignment = listBoxField.textAlignment;\n                }\n            }\n        }\n        formFields.RotationAngle = this.GetRotateAngle(listBoxField.page.rotation);\n        this.PdfRenderedFormFields.push(formFields);\n    };\n    FormFieldsBase.prototype.addRadioButtonField = function (item, index, radioButtonName) {\n        var parent = item._field;\n        var formFields = new PdfRenderedFields();\n        formFields.Name = 'RadioButton';\n        formFields.ToolTip = parent.toolTip;\n        if (!isNullOrUndefined(parent.actualName)) {\n            formFields.GroupName = parent.actualName.replace(/[^0-9a-zA-Z]+/g, '');\n            formFields.ActualFieldName = radioButtonName;\n        }\n        formFields.TabIndex = parent.tabIndex;\n        formFields.Selected = item.selected;\n        formFields.LineBounds = { X: item.bounds.x, Y: item.bounds.y, Width: item.bounds.width, Height: item.bounds.height };\n        formFields.Value = item.value;\n        formFields.PageIndex = index;\n        if (!isNullOrUndefined(item.backColor)) {\n            formFields.BackColor = { R: item.backColor[0], G: item.backColor[1], B: item.backColor[2] };\n        }\n        else {\n            formFields.IsTransparent = true;\n        }\n        formFields.BorderWidth = item.border.width;\n        formFields.BorderStyle = item.border.style;\n        formFields.BorderColor = { R: parent.borderColor[0], G: parent.borderColor[1], B: parent.borderColor[2] };\n        formFields.Rotation = parent.rotationAngle;\n        formFields.IsRequired = parent.required;\n        formFields.IsReadonly = parent.readOnly;\n        formFields.Visible = parent.visibility;\n        formFields.RotationAngle = this.GetRotateAngle(item.page.rotation);\n        this.PdfRenderedFormFields.push(formFields);\n    };\n    FormFieldsBase.prototype.checkTransparent = function (backColor) {\n        var IsTransparent = false;\n        if (backColor.R === 0 && backColor.G === 0 && backColor.B === 0) {\n            IsTransparent = true;\n        }\n        return IsTransparent;\n    };\n    FormFieldsBase.prototype.GetRotateAngle = function (angleString) {\n        var angle = 0;\n        switch (angleString) {\n            case 0:\n                angle = 0;\n                break;\n            case 1:\n                angle = -90;\n                break;\n            case 2:\n                angle = -180;\n                break;\n            case 3:\n                angle = -270;\n                break;\n        }\n        return angle;\n    };\n    FormFieldsBase.prototype.drawFieldFreeTextAnnotations = function (resultObjects, signatureFields, currentFieldName, signatureBounds, fontName, fontSizes) {\n        var stampObjects = JSON.parse(resultObjects);\n        var boundsObjects = JSON.parse(signatureBounds);\n        var page = signatureFields.page;\n        var pageNumber = 0;\n        for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n            if (page == this.formFieldLoadedDocument.getPage(k)) {\n                break;\n            }\n            pageNumber++;\n        }\n        if (!isNullOrUndefined(stampObjects) && stampObjects !== \"\") {\n            var left = this.convertPixelToPoint(boundsObjects[\"x\"]);\n            var top_6 = this.convertPixelToPoint(boundsObjects[\"y\"]);\n            var width = this.convertPixelToPoint(boundsObjects[\"width\"]);\n            var height = this.convertPixelToPoint(boundsObjects[\"height\"]);\n            var annotation = new PdfFreeTextAnnotation(left, top_6, width, height);\n            annotation.setAppearance(true);\n            annotation._dictionary.set(\"T\", currentFieldName);\n            var fontSize = fontSizes > 0 ? fontSizes : height / 2;\n            var fontFamilyEnum = PdfFontFamily.helvetica;\n            if (!isNullOrUndefined(fontName)) {\n                var family = fontName;\n                if (family.includes(\"Times New Roman\")) {\n                    fontFamilyEnum = PdfFontFamily.timesRoman;\n                }\n                else if (family.includes(\"Courier\")) {\n                    fontFamilyEnum = PdfFontFamily.courier;\n                }\n                else if (family.includes(\"Symbol\")) {\n                    fontFamilyEnum = PdfFontFamily.symbol;\n                }\n                else if (family.includes(\"ZapfDingbats\")) {\n                    fontFamilyEnum = PdfFontFamily.zapfDingbats;\n                }\n            }\n            var fontStyle = this.getFontStyle();\n            annotation.font = new PdfStandardFont(fontFamilyEnum, this.convertPixelToPoint(fontSize), fontStyle);\n            annotation.text = stampObjects;\n            annotation.rotationAngle = this.getRotateAngle(page.rotation);\n            annotation.flags = PdfAnnotationFlag.print;\n            annotation.setValues(\"AnnotationType\", \"Signature\");\n            annotation.setAppearance(true);\n            page.annotations.add(annotation);\n        }\n    };\n    FormFieldsBase.prototype.drawFieldImage = function (resultObjects, signatureFields, currentFieldName, signatureBounds) {\n        var stampObjects = JSON.parse(resultObjects);\n        var boundsObjects = JSON.parse(signatureBounds);\n        var page = signatureFields.page;\n        var pageNumber = 0;\n        for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n            if (page == this.formFieldLoadedDocument.getPage(k)) {\n                break;\n            }\n            pageNumber++;\n        }\n        if (!isNullOrUndefined(stampObjects) && stampObjects !== \"\") {\n            var imageUrl = (stampObjects.toString()).split(',')[1];\n            var left = this.convertPixelToPoint(boundsObjects[\"x\"]);\n            var top_7 = this.convertPixelToPoint(boundsObjects[\"y\"]);\n            var width = this.convertPixelToPoint(boundsObjects[\"width\"]);\n            var height = this.convertPixelToPoint(boundsObjects[\"height\"]);\n            var rubberStampAnnotation = new PdfRubberStampAnnotation(left, top_7, width, height);\n            var bitmap = new PdfBitmap(imageUrl);\n            rubberStampAnnotation.appearance.normal.graphics.drawImage(bitmap, 0, 0, width, height);\n            rubberStampAnnotation.rotationAngle = this.getRotateAngle(page.rotation);\n            rubberStampAnnotation._dictionary.set(\"T\", currentFieldName);\n            rubberStampAnnotation.flags = PdfAnnotationFlag.print;\n            rubberStampAnnotation.setAppearance(true);\n            page.annotations.add(rubberStampAnnotation);\n        }\n    };\n    FormFieldsBase.prototype.drawFieldPath = function (resultObjects, signatureFields, currentFieldName, signatureBounds) {\n        var stampObjects = JSON.parse(resultObjects);\n        var boundsObjects = JSON.parse(signatureBounds);\n        var page = signatureFields.page;\n        var pageNumber = 0;\n        for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n            if (page == this.formFieldLoadedDocument.getPage(k)) {\n                break;\n            }\n            pageNumber++;\n        }\n        if (stampObjects.length > 0) {\n            var rotationAngle = this.GetRotateAngle(page.rotation);\n            var left = this.convertPixelToPoint(boundsObjects[\"x\"]);\n            var top_8 = this.convertPixelToPoint(boundsObjects[\"y\"]);\n            var width = this.convertPixelToPoint(boundsObjects[\"width\"]);\n            var height = this.convertPixelToPoint(boundsObjects[\"height\"]);\n            if (rotationAngle != 0) {\n                left = this.convertPixelToPoint(signatureFields.bounds.x);\n                top_8 = this.convertPixelToPoint(signatureFields.bounds.y);\n                width = this.convertPixelToPoint(signatureFields.bounds.width);\n                height = this.convertPixelToPoint(signatureFields.bounds.height);\n            }\n            var minimumX = -1;\n            var minimumY = -1;\n            var maximumX = -1;\n            var maximumY = -1;\n            for (var p = 0; p < stampObjects.length; p++) {\n                var value = stampObjects[parseInt(p.toString(), 10)];\n                if (minimumX == -1) {\n                    minimumX = value.x;\n                    minimumY = value.y;\n                    maximumX = value.x;\n                    maximumY = value.y;\n                }\n                else {\n                    var point1 = value.x;\n                    var point2 = value.y;\n                    if (minimumX >= point1) {\n                        minimumX = point1;\n                    }\n                    if (minimumY >= point2) {\n                        minimumY = point2;\n                    }\n                    if (maximumX <= point1) {\n                        maximumX = point1;\n                    }\n                    if (maximumY <= point2) {\n                        maximumY = point2;\n                    }\n                }\n            }\n            var newDifferenceX = (maximumX - minimumX) / width;\n            var newDifferenceY = (maximumY - minimumY) / height;\n            var linePoints = [];\n            var isNewValues = 0;\n            if (rotationAngle !== 0) {\n                for (var j = 0; j < stampObjects.length; j++) {\n                    var value = stampObjects[parseInt(j.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path == \"M\" && j !== 0) {\n                        isNewValues = j;\n                        break;\n                    }\n                    linePoints.push(parseFloat(value.x));\n                    linePoints.push(parseFloat(value.y));\n                }\n                linePoints = [];\n                for (var z = 0; z < stampObjects.length; z++) {\n                    var value = stampObjects[parseInt(z.toString(), 10)];\n                    linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                    linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - ((parseFloat(value.y) - minimumY) / newDifferenceY) - top_8);\n                }\n            }\n            else {\n                for (var k = 0; k < stampObjects.length; k++) {\n                    var value = stampObjects[parseInt(k.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path == \"M\" && k !== 0) {\n                        isNewValues = k;\n                        break;\n                    }\n                    linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                    var newX = ((parseFloat(value.y) - minimumY) / newDifferenceY);\n                    linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_8);\n                }\n            }\n            var inkAnnotation = new PdfInkAnnotation([left, top_8, width, height], linePoints);\n            inkAnnotation.flags = PdfAnnotationFlag.print;\n            var bounds = { x: inkAnnotation.bounds.x, y: (page.size[1] - (inkAnnotation.bounds.y + inkAnnotation.bounds.height)), width: inkAnnotation.bounds.width, height: inkAnnotation.bounds.height };\n            inkAnnotation.bounds = bounds;\n            inkAnnotation.border.width = 0;\n            inkAnnotation.color = inkAnnotation.color;\n            linePoints = [];\n            if (rotationAngle !== 0) {\n                var pathCollection = [];\n                for (var t = isNewValues; t < stampObjects.length; t++) {\n                    var value = stampObjects[parseInt(t.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path === \"M\" && t !== isNewValues) {\n                        pathCollection.push(linePoints);\n                        linePoints = [];\n                    }\n                    linePoints.push(parseFloat(value.x));\n                    linePoints.push(parseFloat(value.y));\n                }\n                if (linePoints.length > 0) {\n                    pathCollection.push(linePoints);\n                }\n                for (var w = 0; w < pathCollection.length; w++) {\n                    var pointsCollections = pathCollection[parseInt(w.toString(), 10)];\n                    linePoints = [];\n                    if (pointsCollections.length > 0) {\n                        for (var z = 0; z < stampObjects.length; z++) {\n                            var value = stampObjects[parseInt(z.toString(), 10)];\n                            linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                            linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - ((parseFloat(value.y) - minimumY) / newDifferenceY) - top_8);\n                        }\n                        inkAnnotation.inkPointsCollection.push(linePoints);\n                    }\n                    linePoints = [];\n                }\n            }\n            else {\n                for (var r = 0; r < stampObjects.length; r++) {\n                    var value = stampObjects[parseInt(r.toString(), 10)];\n                    var path = value.command.toString();\n                    if (path == \"M\" && r !== 0) {\n                        inkAnnotation.inkPointsCollection.push(linePoints);\n                        linePoints = [];\n                    }\n                    linePoints.push(((parseFloat(value.x) - minimumX) / newDifferenceX) + left);\n                    var newX = ((parseFloat(value.y) - minimumY) / newDifferenceY);\n                    linePoints.push(this.formFieldLoadedDocument.getPage(pageNumber).size[1] - newX - top_8);\n                }\n                if (linePoints.length > 0) {\n                    inkAnnotation.inkPointsCollection.push(linePoints);\n                }\n            }\n            inkAnnotation._dictionary.set(\"T\", currentFieldName);\n            inkAnnotation.setAppearance(true);\n            this.formFieldLoadedDocument.getPage(pageNumber).annotations.add(inkAnnotation);\n        }\n    };\n    FormFieldsBase.prototype.addSigntureFieldItems = function (field) {\n        var page = field.page;\n        if (field instanceof PdfSignatureField) {\n            var signatureField = field;\n            if (signatureField.itemsCount > 0) {\n                for (var i = 0; i < signatureField.itemsCount; i++) {\n                    if (!isNullOrUndefined(signatureField.itemAt(i).page)) {\n                        var item = signatureField.itemAt(i).page;\n                        var j = 0;\n                        for (var k = 0; k < this.formFieldLoadedDocument.pageCount; k++) {\n                            if (item == this.formFieldLoadedDocument.getPage(j)) {\n                                break;\n                            }\n                            j++;\n                        }\n                        this.addSignatureField(signatureField, j, signatureField.itemAt(i).bounds);\n                    }\n                }\n            }\n        }\n    };\n    FormFieldsBase.prototype.addSignatureField = function (signatureField, index, bounds) {\n        var formFields = new PdfRenderedFields();\n        formFields.Name = \"SignatureField\";\n        formFields.ToolTip = signatureField.toolTip;\n        formFields.FieldName = signatureField.name.replace(/[^0-9a-zA-Z]+/g, \"\");\n        formFields.ActualFieldName = signatureField.name;\n        if (!bounds.IsEmpty) {\n            formFields.LineBounds = { X: bounds.x, Y: bounds.y, Width: bounds.width, Height: bounds.height };\n        }\n        else {\n            formFields.LineBounds = { X: signatureField.bounds.x, Y: signatureField.bounds.y, Width: signatureField.bounds.width, Height: signatureField.bounds.height };\n        }\n        formFields.PageIndex = index;\n        formFields.TabIndex = signatureField.tabIndex;\n        formFields.BorderWidth = signatureField.border.width;\n        formFields.BorderStyle = signatureField.border.style;\n        formFields.IsReadonly = signatureField.readOnly;\n        formFields.IsRequired = signatureField.required;\n        formFields.Visible = signatureField.visibility;\n        formFields.IsSignatureField = true;\n        formFields.Rotation = signatureField.rotationAngle;\n        formFields.RotationAngle = this.GetRotateAngle(signatureField.page.rotation);\n        var initialField = signatureField._dictionary.get(\"InitialField\");\n        if (!isNullOrUndefined(initialField)) {\n            formFields.IsInitialField = initialField;\n        }\n        this.PdfRenderedFormFields.push(formFields);\n    };\n    FormFieldsBase.prototype.retrieveInkAnnotation = function (loadedDocument) {\n        var count = 1;\n        for (var i = 0; i < loadedDocument.pageCount; i++) {\n            var loadedPage = loadedDocument.getPage(i);\n            var oldPageAnnotations = loadedPage.annotations;\n            var totalAnnotation = parseInt(oldPageAnnotations.count.toString(), 10);\n            for (var j = 0; j < totalAnnotation; j++) {\n                var annotation = oldPageAnnotations.at(j);\n                if (annotation instanceof PdfInkAnnotation) {\n                    var outputstring = \"\";\n                    var inkAnnot = annotation;\n                    var inkListX = [];\n                    var inkListY = [];\n                    if (inkAnnot._dictionary.has(\"T\") && !inkAnnot._dictionary.has(\"NM\")) {\n                        var annotColor = inkAnnot.color;\n                        if (!isNullOrUndefined(inkAnnot.inkPointsCollection)) {\n                            for (var m = 0; m < inkAnnot.inkPointsCollection.length; m++) {\n                                var inkList = inkAnnot.inkPointsCollection[parseInt(m.toString(), 10)];\n                                for (var k = 0; k < inkList.length; k += 2) {\n                                    var x = void 0;\n                                    var y = void 0;\n                                    if (loadedPage.rotation === PdfRotationAngle.angle90) {\n                                        x = inkList[k + 1];\n                                        y = inkList[parseInt(k.toString(), 10)];\n                                    }\n                                    else if (loadedPage.rotation === PdfRotationAngle.angle180) {\n                                        x = loadedPage.size[0] - inkList[k + 1];\n                                        y = inkList[k + 1];\n                                    }\n                                    else if (loadedPage.rotation === PdfRotationAngle.angle270) {\n                                        x = loadedPage.size[0] - inkList[k + 1];\n                                        y = loadedPage.size[1] - inkList[parseInt(k.toString(), 10)];\n                                    }\n                                    else {\n                                        x = inkList[parseInt(k.toString(), 10)];\n                                        y = loadedPage.size[1] - inkList[k + 1];\n                                    }\n                                    if (k == 0) {\n                                        outputstring += \"M\" + x + \",\" + y + \" \";\n                                    }\n                                    else {\n                                        outputstring += \"L\" + x + \",\" + y + \" \";\n                                    }\n                                    inkListX.push(x);\n                                    inkListY.push(y);\n                                }\n                            }\n                        }\n                        var formFields = new PdfRenderedFields();\n                        if (inkAnnot._dictionary.has(\"T\")) {\n                            formFields.FieldName = inkAnnot._dictionary.get(\"T\");\n                        }\n                        formFields.FieldName = formFields.FieldName + \"_\" + count;\n                        formFields.Name = \"ink\";\n                        var rotationAngle = loadedPage.rotation;\n                        var isFieldRotated = false;\n                        if (annotation.rotationAngle !== 0) {\n                            isFieldRotated = true;\n                        }\n                        var bounds = { X: inkAnnot.bounds.x, Y: inkAnnot.bounds.y, Width: inkAnnot.bounds.width, Height: inkAnnot.bounds.height };\n                        formFields.LineBounds = this.getBounds(bounds, loadedPage.size[1], loadedPage.size[0], rotationAngle, !isFieldRotated);\n                        formFields.Value = outputstring;\n                        formFields.PageIndex = i;\n                        formFields.BorderColor = [inkAnnot.color[0], inkAnnot.color[1], inkAnnot.color[2]];\n                        formFields.Rotation = annotation.rotationAngle;\n                        this.PdfRenderedFormFields.push(formFields);\n                        count++;\n                    }\n                }\n                else if (annotation instanceof PdfFreeTextAnnotation) {\n                    var inkAnnot = annotation;\n                    if (inkAnnot._dictionary.has(\"T\") && !inkAnnot._dictionary.has(\"NM\") && !inkAnnot._dictionary.has(\"M\")) {\n                        var formFields = new PdfRenderedFields();\n                        formFields.FieldName = inkAnnot._dictionary.get(\"T\") + \"_\" + count;\n                        var bounds = { X: inkAnnot.bounds.x, Y: inkAnnot.bounds.y, Width: inkAnnot.bounds.width, Height: inkAnnot.bounds.height };\n                        formFields.LineBounds = bounds;\n                        formFields.Name = \"SignatureText\";\n                        formFields.FontFamily = this.getFontFamilyString(inkAnnot.font._fontFamily);\n                        formFields.FontSize = this.convertPointtoPixel(inkAnnot.font.size);\n                        formFields.Value = inkAnnot.text;\n                        formFields.PageIndex = i;\n                        formFields.BorderColor = inkAnnot.borderColor;\n                        this.PdfRenderedFormFields.push(formFields);\n                        count++;\n                    }\n                }\n                else if (annotation instanceof PdfRubberStampAnnotation) {\n                    var stampAnnotation = annotation;\n                    if (stampAnnotation._dictionary.has(\"T\") && !stampAnnotation._dictionary.has(\"NM\") && !stampAnnotation._dictionary.has(\"M\")) {\n                        var formFields = new PdfRenderedFields();\n                        formFields.FieldName = stampAnnotation._dictionary.get(\"T\") + \"_\" + count;\n                        var dictionary = annotation._dictionary.get(\"AP\");\n                        var pageRender = new PageRenderer(this.pdfViewer, this.pdfViewerBase);\n                        if (isNullOrUndefined(dictionary)) {\n                            var pdfReference = annotation._dictionary.get(\"AP\");\n                            if (!isNullOrUndefined(pdfReference) && !isNullOrUndefined(pdfReference.dictionary) && pdfReference.dictionary.has(\"N\")) {\n                                var ap_Dictionary = pdfReference.dictionary;\n                                if (!isNullOrUndefined(ap_Dictionary)) {\n                                    pageRender.findStampImage(annotation);\n                                }\n                            }\n                        }\n                        else if (dictionary.has(\"N\")) {\n                            pageRender.findStampImage(annotation);\n                        }\n                        formFields.LineBounds = { X: stampAnnotation.bounds.x, Y: stampAnnotation.bounds.y, Width: stampAnnotation.bounds.width, Height: stampAnnotation.bounds.height };\n                        formFields.Value = pageRender.Imagedata;\n                        formFields.Name = \"SignatureImage\";\n                        formFields.PageIndex = i;\n                        this.PdfRenderedFormFields.push(formFields);\n                        count++;\n                    }\n                }\n            }\n        }\n    };\n    FormFieldsBase.prototype.getFontFamilyString = function (fontFamily) {\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                return 'Helvetica';\n            case PdfFontFamily.timesRoman:\n                return 'TimesRoman';\n            case PdfFontFamily.courier:\n                return 'Courier';\n            case PdfFontFamily.symbol:\n                return 'Symbol';\n            case PdfFontFamily.zapfDingbats:\n                return 'ZapfDingbats';\n            default:\n                return 'Helvetica';\n        }\n    };\n    return FormFieldsBase;\n}());\nexport { FormFieldsBase };\n/**\n  * @private\n  */\nvar PdfRenderedFields = /** @class */ (function () {\n    function PdfRenderedFields() {\n        this.ActualFieldName = null;\n        this.FontColor = { R: 0, G: 0, B: 0 };\n        this.BackColor = { R: 0, G: 0, B: 0 };\n        this.BorderColor = { R: 0, G: 0, B: 0 };\n        this.CheckBoxGroupName = null;\n        this.Alignment = 0;\n        this.BorderStyle = 0;\n        this.BorderWidth = 0;\n        this.CheckBoxGroupName = null;\n        this.CheckBoxIndex = null;\n        this.FieldName = null;\n        this.Font = null;\n        this.FontFamily = null;\n        this.FontSize = 0;\n        this.FontStyle = 0;\n        this.GroupName = null;\n        this.InsertSpaces = false;\n        this.IsAutoSize = false,\n            this.IsInitialField = false;\n        this.IsReadonly = false;\n        this.IsRequired = false;\n        this.IsSignatureField = false;\n        this.IsTransparent = false;\n        this.MaxLength = 0;\n        this.MultiSelect = false;\n        this.Multiline = false;\n        this.Name = null;\n        this.PageIndex = 0;\n        this.Rotation = 0;\n        this.RotationAngle = 0;\n        this.Selected = false;\n        this.SelectedList = [];\n        this.SelectedValue = null;\n        this.TabIndex = 0;\n        this.Text = null;\n        this.TextList = [];\n        this.ToolTip = null;\n        this.Value = null;\n        this.Visible = 0;\n    }\n    return PdfRenderedFields;\n}());\nexport { PdfRenderedFields };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}