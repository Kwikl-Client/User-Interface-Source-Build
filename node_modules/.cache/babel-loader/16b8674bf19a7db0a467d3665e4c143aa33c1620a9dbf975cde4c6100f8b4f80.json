{"ast":null,"code":"import * as events from '../base/constant';\nimport { PdfDocument, PdfGrid, PdfBorders, PdfPen, PdfPaddings } from '@syncfusion/ej2-pdf-export';\nimport { PdfStandardFont, PdfFontFamily, PdfFontStyle, PdfBitmap } from '@syncfusion/ej2-pdf-export';\nimport { PdfStringFormat, PdfTextAlignment, PdfColor, PdfSolidBrush, PdfTextWebLink } from '@syncfusion/ej2-pdf-export';\nimport { PdfVerticalAlignment, RectangleF, PdfPageTemplateElement } from '@syncfusion/ej2-pdf-export';\nimport { PointF, PdfPageNumberField, PdfCompositeField } from '@syncfusion/ej2-pdf-export';\nimport { PdfPageCountField, SizeF, PdfPageSettings, PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PdfTrueTypeFont } from '@syncfusion/ej2-pdf-export';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { Data } from '../actions/data';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { compile, getEnumValue, isNullOrUndefined, detach } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getUid, getPrintGridModel, measureColumnDepth, isExportColumns, updateColumnTypeForExportColumns, prepareColumns } from '../base/util';\n/**\n * `PDF Export` module is used to handle the exportToPDF action.\n *\n * @hidden\n */\nvar PdfExport = /** @class */function () {\n  /**\n   * Constructor for the Grid PDF Export module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @hidden\n   */\n  function PdfExport(parent) {\n    this.hideColumnInclude = false;\n    this.currentViewData = false;\n    this.customDataSource = false;\n    this.isGrouping = false;\n    this.headerOnPages = [];\n    this.drawPosition = {\n      xPosition: 0,\n      yPosition: 0\n    };\n    this.parent = parent;\n    this.helper = new ExportHelper(parent);\n    this.gridPool = {};\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   */\n  PdfExport.prototype.getModuleName = function () {\n    return 'PdfExport';\n  };\n  PdfExport.prototype.init = function (parent) {\n    this.exportValueFormatter = new ExportValueFormatter(parent.locale);\n    this.pdfDocument = undefined;\n    this.hideColumnInclude = false;\n    this.currentViewData = false;\n    this.parent = parent;\n    this.isGrouping = false;\n    this.isExporting = true;\n    parent.id = getUid('main-grid');\n    this.gridPool[parent.id] = false;\n    this.pdfPageSettings = new PdfPageSettings();\n  };\n  PdfExport.prototype.exportWithData = function (parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject) {\n    var _this = this;\n    this.init(parent);\n    if (!isNullOrUndefined(pdfDoc)) {\n      this.pdfDocument = pdfDoc;\n    } else {\n      this.pdfDocument = new PdfDocument();\n    }\n    this.processExport(parent, returnType, pdfExportProperties, isMultipleExport).then(function () {\n      _this.isExporting = false;\n      parent.trigger(events.pdfExportComplete, _this.isBlob ? {\n        promise: _this.blobPromise\n      } : {\n        gridInstance: _this.parent\n      });\n      _this.parent.log('exporting_complete', _this.getModuleName());\n      resolve(_this.pdfDocument);\n    }).catch(function (e) {\n      reject(_this.pdfDocument);\n      _this.parent.trigger(events.actionFailure, e);\n    });\n  };\n  /**\n   * Used to map the input data\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {PdfExportProperties} pdfExportProperties - specifies the PdfExportProperties\n   * @param {boolean} isMultipleExport - specifies the isMultipleExport\n   * @param {Object} pdfDoc - specifies the pdfDoc\n   * @param {boolean} isBlob - speciies whether it is Blob or not\n   * @returns {void}\n   */\n  PdfExport.prototype.Map = function (parent, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    var _this = this;\n    this.data = new Data(this.parent);\n    this.isBlob = isBlob;\n    this.gridPool = {};\n    var query = pdfExportProperties && pdfExportProperties.query ? pdfExportProperties.query : new Query();\n    if ((parent.childGrid || parent.detailTemplate) && !(!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.hierarchyExportMode === 'None')) {\n      parent.expandedRows = getPrintGridModel(parent).expandedRows;\n    }\n    var args = {\n      requestType: 'beforePdfExport',\n      cancel: false,\n      headerPageNumbers: [],\n      gridDrawPosition: {\n        xPosition: 0,\n        yPosition: 0\n      },\n      generateQuery: false\n    };\n    var gridObject = 'gridObject';\n    args[\"\" + gridObject] = parent;\n    var can = 'cancel';\n    var generateQuery = 'generateQuery';\n    var header = 'headerPageNumbers';\n    var drawPos = 'gridDrawPosition';\n    parent.trigger(events.beforePdfExport, args);\n    if (args[\"\" + can] === true) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      return new Promise(function (resolve, reject) {\n        return resolve();\n      });\n    }\n    if (isExportColumns(pdfExportProperties)) {\n      updateColumnTypeForExportColumns(pdfExportProperties, parent);\n    }\n    if (args[\"\" + generateQuery]) {\n      query = ExportHelper.getQuery(parent, this.data);\n    }\n    this.headerOnPages = args[\"\" + header];\n    this.drawPosition = args[\"\" + drawPos];\n    this.parent.log('exporting_begin', this.getModuleName());\n    if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n      pdfExportProperties.dataSource = pdfExportProperties.dataSource instanceof DataManager ? pdfExportProperties.dataSource : new DataManager(pdfExportProperties.dataSource);\n      if (isNullOrUndefined(query.isCountRequired) || parent.aggregates) {\n        query.isCountRequired = true;\n      }\n      return new Promise(function (resolve, reject) {\n        pdfExportProperties.dataSource.executeQuery(query).then(function (returnType) {\n          _this.exportWithData(parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject);\n        });\n      });\n    } else if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType === 'CurrentPage') {\n      return new Promise(function (resolve, reject) {\n        _this.exportWithData(parent, pdfDoc, resolve, _this.parent.getCurrentViewRecords(), pdfExportProperties, isMultipleExport, reject);\n      });\n    } else {\n      var allPromise_1 = [];\n      allPromise_1.push(this.data.getData({}, ExportHelper.getQuery(parent, this.data)));\n      allPromise_1.push(this.helper.getColumnData(parent));\n      return new Promise(function (resolve, reject) {\n        Promise.all(allPromise_1).then(function (e) {\n          _this.init(parent);\n          if (!isNullOrUndefined(pdfDoc)) {\n            _this.pdfDocument = pdfDoc['document'];\n          } else {\n            _this.pdfDocument = new PdfDocument();\n          }\n          _this.processExport(parent, e[0], pdfExportProperties, isMultipleExport, pdfDoc).then(function (results) {\n            _this.isExporting = false;\n            parent.trigger(events.pdfExportComplete, _this.isBlob ? {\n              promise: _this.blobPromise\n            } : {\n              gridInstance: _this.parent\n            });\n            _this.parent.log('exporting_complete', _this.getModuleName());\n            if (pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage') {\n              resolve(results);\n            } else {\n              resolve(_this.pdfDocument);\n            }\n          }).catch(function (e) {\n            reject(_this.pdfDocument);\n            _this.parent.trigger(events.actionFailure, e);\n          });\n        });\n      });\n    }\n  };\n  PdfExport.prototype.processExport = function (gObj, returnType, pdfExportProperties, isMultipleExport, pdfDoc) {\n    var _this = this;\n    var section = !(pdfDoc && pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage') ? this.pdfDocument.sections.add() : null;\n    var pdfGrid;\n    this.processSectionExportProperties(section, pdfExportProperties);\n    var pdfPage = pdfDoc && pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage' ? pdfDoc['result'].page : section.pages.add();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Promise(function (resolve, reject) {\n      pdfGrid = _this.processGridExport(gObj, returnType, pdfExportProperties);\n      _this.globalResolve = resolve;\n      _this.gridPool[gObj.id] = true;\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n    }).then(function () {\n      // draw the grid\n      var xPosition = _this.drawPosition['xPosition'];\n      var yPosition;\n      if (pdfDoc && pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage') {\n        yPosition = pdfDoc['result'].bounds.height;\n        if (pdfExportProperties.multipleExport.blankSpace) {\n          yPosition = pdfDoc['result'].bounds.height + pdfDoc['result'].bounds.height;\n        }\n      } else {\n        yPosition = _this.drawPosition['yPosition'];\n      }\n      var result = pdfGrid.draw(pdfPage, xPosition, yPosition);\n      _this.drawHeader(pdfExportProperties);\n      if (!isMultipleExport) {\n        // save the PDF\n        if (!_this.isBlob) {\n          if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.fileName) {\n            _this.pdfDocument.save(pdfExportProperties.fileName);\n          } else {\n            _this.pdfDocument.save('Export.pdf');\n          }\n        } else {\n          _this.blobPromise = _this.pdfDocument.save();\n        }\n        _this.pdfDocument.destroy();\n        delete gObj.expandedRows;\n      }\n      if (pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage') {\n        return {\n          document: _this.pdfDocument,\n          result: result\n        };\n      } else {\n        return _this.pdfDocument;\n      }\n    });\n  };\n  PdfExport.prototype.processSectionExportProperties = function (section, pdfExportProperties) {\n    if (!isNullOrUndefined(pdfExportProperties) && (!isNullOrUndefined(pdfExportProperties.pageOrientation) || !isNullOrUndefined(pdfExportProperties.pageSize))) {\n      this.pdfPageSettings.orientation = pdfExportProperties.pageOrientation === 'Landscape' ? PdfPageOrientation.Landscape : PdfPageOrientation.Portrait;\n      this.pdfPageSettings.size = this.getPageSize(pdfExportProperties.pageSize);\n      section.setPageSettings(this.pdfPageSettings);\n    }\n    return section;\n  };\n  PdfExport.prototype.processGridExport = function (gObj, returnType, pdfExportProperties) {\n    var allowHorizontalOverflow = true;\n    if (!isNullOrUndefined(pdfExportProperties)) {\n      this.gridTheme = pdfExportProperties.theme;\n      allowHorizontalOverflow = isNullOrUndefined(pdfExportProperties.allowHorizontalOverflow) ? true : pdfExportProperties.allowHorizontalOverflow;\n    }\n    var helper = new ExportHelper(gObj, this.helper.getForeignKeyData());\n    var dataSource = this.processExportProperties(pdfExportProperties, returnType.result);\n    var columns = isExportColumns(pdfExportProperties) ? prepareColumns(pdfExportProperties.columns, gObj.enableColumnVirtualization) : helper.getGridExportColumns(gObj.columns);\n    columns = columns.filter(function (columns) {\n      return isNullOrUndefined(columns.commands);\n    });\n    var isGrouping = false;\n    if (gObj.groupSettings.columns.length) {\n      isGrouping = true;\n    }\n    if ((gObj.childGrid || gObj.detailTemplate) && !isNullOrUndefined(pdfExportProperties)) {\n      gObj.hierarchyPrintMode = pdfExportProperties.hierarchyExportMode || 'Expanded';\n    }\n    // create a grid\n    var pdfGrid = new PdfGrid();\n    // get header theme style\n    var headerThemeStyle = this.getHeaderThemeStyle();\n    var border = headerThemeStyle.border;\n    var headerFont = headerThemeStyle.font;\n    var headerBrush = headerThemeStyle.brush;\n    var returnValue = helper.getHeaders(columns, this.hideColumnInclude);\n    // Column collection with respect to the records in the grid\n    var gridColumns = returnValue.columns;\n    // process grid header content\n    pdfGrid = this.processGridHeaders(gObj.groupSettings.columns.length, pdfGrid, returnValue.rows, gridColumns, border, headerFont, headerBrush, gObj, allowHorizontalOverflow, columns);\n    // set alignment, width and type of the values of the column\n    this.setColumnProperties(gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow);\n    var captionThemeStyle = this.getSummaryCaptionThemeStyle();\n    if (!isNullOrUndefined(dataSource) && dataSource.length) {\n      if (isGrouping) {\n        if (!isNullOrUndefined(captionThemeStyle.border)) {\n          border = captionThemeStyle.border;\n        }\n        this.processGroupedRecords(pdfGrid, dataSource, gridColumns, gObj, border, 0, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, returnType, pdfExportProperties, helper, 0);\n      } else {\n        this.processRecord(border, gridColumns, gObj, dataSource, pdfGrid, 0, pdfExportProperties, helper, 0);\n      }\n      if (!isNullOrUndefined(returnType.aggregates)) {\n        var summaryModel = new SummaryModelGenerator(gObj);\n        var sRows = void 0;\n        var column = summaryModel.getColumns();\n        column = column.filter(function (col) {\n          return isNullOrUndefined(col.commands) && col.type !== 'checkbox';\n        });\n        if (gObj.aggregates.length && this.parent !== gObj) {\n          gObj.aggregateModule.prepareSummaryInfo();\n        }\n        if (this.customDataSource) {\n          sRows = summaryModel.generateRows(dataSource, returnType.aggregates);\n        } else if (this.currentViewData) {\n          sRows = summaryModel.generateRows(this.parent.getCurrentViewRecords(), returnType.aggregates);\n        } else if (isGrouping) {\n          sRows = summaryModel.generateRows(dataSource.records, returnType.aggregates);\n        } else {\n          sRows = summaryModel.generateRows(returnType.result, returnType.aggregates, null, null, column);\n        }\n        this.processAggregates(sRows, pdfGrid, border, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, false, null, null, null, isGrouping ? false : true);\n      }\n    } else {\n      var row = pdfGrid.rows.addRow();\n      row.style.setBorder(border);\n    }\n    return pdfGrid;\n  };\n  PdfExport.prototype.getSummaryCaptionThemeStyle = function () {\n    if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.caption)) {\n      var fontSize = !isNullOrUndefined(this.gridTheme.caption.fontSize) ? this.gridTheme.caption.fontSize : 9.75;\n      var fontFamily = !isNullOrUndefined(this.gridTheme.caption.fontName) ? this.getFontFamily(this.gridTheme.caption.fontName) : PdfFontFamily.Helvetica;\n      var fontStyle = this.getFontStyle(this.gridTheme.caption);\n      var pdfColor = new PdfColor(0, 0, 0);\n      if (!isNullOrUndefined(this.gridTheme.caption.fontColor)) {\n        var penBrushColor = this.hexToRgb(this.gridTheme.caption.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n      var borderCaption = this.gridTheme.caption.border ? this.getBorderStyle(this.gridTheme.caption.border) : null;\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n      if (!isNullOrUndefined(this.gridTheme.caption.font)) {\n        font = this.gridTheme.caption.font;\n      }\n      return {\n        font: font,\n        brush: new PdfSolidBrush(pdfColor),\n        backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246)),\n        border: borderCaption\n      };\n    } else {\n      //Material theme\n      return {\n        font: new PdfStandardFont(PdfFontFamily.Helvetica, 9.75),\n        brush: new PdfSolidBrush(new PdfColor(0, 0, 0)),\n        backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246))\n      };\n    }\n  };\n  PdfExport.prototype.getGridPdfFont = function (args) {\n    var fontFamily = 'fontFamily';\n    var fontSize = 'fontSize';\n    var fontStyle = 'fontStyle';\n    var isTrueType = 'isTrueType';\n    var style = 0;\n    if (args.header && args.header.font) {\n      var headerFont = args.header.font[\"\" + fontFamily];\n      var headerSize = args.header.font[\"\" + fontSize];\n      var headerStyle = args.header.font[\"\" + fontStyle];\n      style = isNullOrUndefined(PdfFontStyle[\"\" + headerStyle]) ? 0 : PdfFontStyle[\"\" + headerStyle];\n      if (args.header.font[\"\" + isTrueType]) {\n        args.header.font = new PdfTrueTypeFont(headerFont, headerSize, style);\n      } else {\n        var fontFamily_1 = !isNullOrUndefined(headerFont) ? this.getFontFamily(headerFont) : PdfFontFamily.Helvetica;\n        args.header.font = new PdfStandardFont(fontFamily_1, headerSize, style);\n      }\n    }\n    if (args.caption && args.caption.font) {\n      var captionFont = args.caption.font[\"\" + fontFamily];\n      var captionSize = args.caption.font[\"\" + fontSize];\n      var captionStyle = args.caption.font[\"\" + fontStyle];\n      style = isNullOrUndefined(PdfFontStyle[\"\" + captionStyle]) ? 0 : PdfFontStyle[\"\" + captionStyle];\n      if (args.caption.font[\"\" + isTrueType]) {\n        args.caption.font = new PdfTrueTypeFont(captionFont, captionSize, style);\n      } else {\n        var fontFamily_2 = !isNullOrUndefined(captionFont) ? this.getFontFamily(captionFont) : PdfFontFamily.Helvetica;\n        args.caption.font = new PdfStandardFont(fontFamily_2, captionSize, style);\n      }\n    }\n    if (args.record && args.record.font) {\n      var recordFont = args.record.font[\"\" + fontFamily];\n      var recordSize = args.record.font[\"\" + fontSize];\n      var recordStyle = args.record.font[\"\" + fontStyle];\n      style = isNullOrUndefined(PdfFontStyle[\"\" + recordStyle]) ? 0 : PdfFontStyle[\"\" + recordStyle];\n      if (args.record.font[\"\" + isTrueType]) {\n        args.record.font = new PdfTrueTypeFont(recordFont, recordSize, style);\n      } else {\n        var fontFamily_3 = !isNullOrUndefined(recordFont) ? this.getFontFamily(recordFont) : PdfFontFamily.Helvetica;\n        args.record.font = new PdfStandardFont(fontFamily_3, recordSize, style);\n      }\n    }\n  };\n  PdfExport.prototype.getHeaderThemeStyle = function () {\n    var border = new PdfBorders();\n    if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.header)) {\n      var fontFamily = !isNullOrUndefined(this.gridTheme.header.fontName) ? this.getFontFamily(this.gridTheme.header.fontName) : PdfFontFamily.Helvetica;\n      var fontStyle = this.getFontStyle(this.gridTheme.header);\n      var fontSize = !isNullOrUndefined(this.gridTheme.header.fontSize) ? this.gridTheme.header.fontSize : 10.5;\n      var pdfColor = new PdfColor();\n      if (!isNullOrUndefined(this.gridTheme.header.fontColor)) {\n        var penBrushColor = this.hexToRgb(this.gridTheme.header.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n      if (!isNullOrUndefined(this.gridTheme.header.font)) {\n        font = this.gridTheme.header.font;\n      }\n      return {\n        border: this.getBorderStyle(this.gridTheme.header.border),\n        font: font,\n        brush: new PdfSolidBrush(pdfColor)\n      };\n    } else {\n      //Material theme\n      border.all = new PdfPen(new PdfColor(234, 234, 234));\n      return {\n        border: border,\n        font: new PdfStandardFont(PdfFontFamily.Helvetica, 10.5),\n        brush: new PdfSolidBrush(new PdfColor(102, 102, 102))\n      };\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.processGroupedRecords = function (pdfGrid, dataSource, gridColumns, gObj, border, level, font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index) {\n    var _this = this;\n    var groupIndex = level;\n    var _loop_1 = function (dataSourceItems) {\n      var row = pdfGrid.rows.addRow();\n      var col = gObj.getColumnByField(dataSourceItems.field);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var args = {\n        value: dataSourceItems.key,\n        column: col,\n        style: undefined,\n        isForeignKey: col.isForeignColumn()\n      };\n      var value = gObj.getColumnByField(dataSourceItems.field).headerText + ': ' + (!col.enableGroupByFormat ? this_1.exportValueFormatter.formatCellValue(args) : dataSourceItems.key) + ' - ' + dataSourceItems.count + (dataSource.count > 1 ? ' items' : ' item');\n      var cArgs = {\n        captionText: value,\n        type: 'PDF',\n        data: dataSourceItems,\n        style: undefined\n      };\n      this_1.parent.trigger(events.exportGroupCaption, cArgs, function (cArgs) {\n        row.cells.getCell(groupIndex).value = cArgs.captionText;\n        row.cells.getCell(groupIndex).style.stringFormat = new PdfStringFormat(PdfTextAlignment.Left);\n        row.style.setBorder(border);\n        row.style.setFont(font);\n        row.style.setTextBrush(brush);\n        row.style.setBackgroundBrush(backgroundBrush);\n        if (!isNullOrUndefined(cArgs.style)) {\n          _this.processCellStyle(row.cells.getCell(groupIndex), cArgs);\n        }\n        var sRows;\n        var captionSummaryModel = new CaptionSummaryModelGenerator(gObj);\n        if (!isNullOrUndefined(dataSourceItems.items.records)) {\n          sRows = captionSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n        } else {\n          sRows = captionSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n        }\n        if (!isNullOrUndefined(sRows) && sRows.length === 0) {\n          row.cells.getCell(groupIndex + 1).columnSpan = pdfGrid.columns.count - (groupIndex + 1);\n        }\n        if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex, null, null, gObj);\n          _this.processGroupedRecords(pdfGrid, dataSourceItems.items, gridColumns, gObj, border, groupIndex + 1, font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index);\n          index = _this.rowIndex;\n          var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n          sRows = groupSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false);\n        } else {\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex, null, null, gObj);\n          index = _this.processRecord(border, gridColumns, gObj, dataSourceItems.items, pdfGrid, groupIndex + 1, pdfExportProperties, helper, index);\n          var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n          sRows = groupSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n          var isGroupedFooter = true;\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false, null, null, isGroupedFooter, null, gObj);\n        }\n      });\n    };\n    var this_1 = this;\n    for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n      var dataSourceItems = dataSource_1[_i];\n      _loop_1(dataSourceItems);\n    }\n  };\n  PdfExport.prototype.processGridHeaders = function (childLevels, pdfGrid, rows, gridColumn, border, headerFont, headerBrush, grid, allowHorizontalOverflow, eCols) {\n    var _this = this;\n    var columnCount = gridColumn.length + childLevels;\n    var depth = measureColumnDepth(eCols);\n    var cols = eCols;\n    var index = 0;\n    var rowNumber = [];\n    for (var i = 0; i < rows.length; i++) {\n      rowNumber[parseInt(i.toString(), 10)] = 0;\n    }\n    if (grid.groupSettings.columns.length) {\n      index = grid.groupSettings.columns.length - 1;\n      columnCount = columnCount - 1;\n    }\n    pdfGrid.columns.add(columnCount);\n    pdfGrid.headers.add(rows.length);\n    var applyTextAndSpan = function (rowIdx, colIdx, col, rowSpan, colSpan) {\n      var gridHeader = pdfGrid.headers.getHeader(rowIdx);\n      var pdfCell = gridHeader.cells.getCell(colIdx);\n      var cell = rows[parseInt(rowIdx.toString(), 10)].cells[grid.groupSettings.columns.length ? colIdx : rowNumber[parseInt(rowIdx.toString(), 10)]];\n      rowNumber[parseInt(rowIdx.toString(), 10)] = rowNumber[parseInt(rowIdx.toString(), 10)] + 1;\n      if (!isNullOrUndefined(col.headerTextAlign)) {\n        pdfCell.style.stringFormat = _this.getHorizontalAlignment(col.headerTextAlign);\n      }\n      if (rowSpan > 0) {\n        pdfCell.rowSpan = rowSpan;\n        pdfCell.style.stringFormat = _this.getVerticalAlignment('Bottom', pdfCell.style.stringFormat, col.textAlign);\n      }\n      if (colSpan > 0) {\n        pdfCell.columnSpan = colSpan;\n      }\n      gridHeader.style.setBorder(border);\n      gridHeader.style.setFont(headerFont);\n      gridHeader.style.setTextBrush(headerBrush);\n      pdfCell.value = col.headerText;\n      if (!isNullOrUndefined(cell) && (cell.cellType === CellType.HeaderIndent || cell.cellType === CellType.DetailHeader)) {\n        pdfCell.value = '';\n        pdfCell.width = 20;\n      }\n      var args = {\n        cell: pdfCell,\n        gridCell: cell,\n        style: pdfCell.style\n      };\n      _this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n      var evtArgs = args;\n      var setCellBorder = args.style.borders;\n      var setCellFont = args.style.font;\n      var setHeaderBrush = args.style.textBrush;\n      if (!isNullOrUndefined(setCellBorder)) {\n        gridHeader.style.setBorder(setCellBorder);\n      }\n      if (!isNullOrUndefined(setCellFont)) {\n        gridHeader.style.setFont(setCellFont);\n      }\n      if (!isNullOrUndefined(setHeaderBrush)) {\n        gridHeader.style.setTextBrush(setHeaderBrush);\n      }\n      if (!isNullOrUndefined(evtArgs.style.verticalAlignment)) {\n        pdfCell.style.stringFormat = _this.getVerticalAlignment(evtArgs.style.verticalAlignment, pdfCell.style.stringFormat);\n      }\n      if (!isNullOrUndefined(evtArgs.image)) {\n        pdfCell.value = new PdfBitmap(evtArgs.image.base64);\n      }\n      if (!isNullOrUndefined(evtArgs.hyperLink)) {\n        pdfCell.value = _this.setHyperLink(evtArgs);\n      }\n    };\n    var recuHeader = function (cols, depth, spanCnt, colIndex, rowIndex, isRoot) {\n      var cidx = 0;\n      for (var i = 0; i < cols.length; i++) {\n        if (isRoot) {\n          cidx = cidx + spanCnt + (i === 0 ? 0 : -1);\n          colIndex = cidx;\n          spanCnt = 0;\n        }\n        if (!isRoot && !cols[parseInt(i.toString(), 10)].visible) {\n          colIndex = colIndex - 1;\n        }\n        if (cols[parseInt(i.toString(), 10)].columns && cols[parseInt(i.toString(), 10)].columns.length) {\n          var newSpanCnt = recuHeader(cols[parseInt(i.toString(), 10)].columns, depth - 1, 0, i + colIndex, rowIndex + 1, false);\n          applyTextAndSpan(rowIndex, i + colIndex + index, cols[parseInt(i.toString(), 10)], 0, newSpanCnt);\n          spanCnt = spanCnt + newSpanCnt;\n          colIndex = colIndex + newSpanCnt - 1;\n        } else if (cols[parseInt(i.toString(), 10)].visible || _this.hideColumnInclude) {\n          spanCnt++;\n          applyTextAndSpan(rowIndex, i + colIndex + index, cols[parseInt(i.toString(), 10)], depth, 0);\n        }\n      }\n      return spanCnt;\n    };\n    recuHeader(cols, depth, 0, 0, 0, true);\n    if (pdfGrid.columns.count >= 6 && allowHorizontalOverflow) {\n      pdfGrid.style.allowHorizontalOverflow = true;\n    }\n    return pdfGrid;\n  };\n  PdfExport.prototype.processExportProperties = function (pdfExportProperties, dataSource) {\n    if (!isNullOrUndefined(pdfExportProperties)) {\n      if (!isNullOrUndefined(pdfExportProperties.theme)) {\n        this.gridTheme = pdfExportProperties.theme;\n      }\n      var clientSize = this.pdfPageSettings.size;\n      this.drawHeader(pdfExportProperties);\n      if (!isNullOrUndefined(pdfExportProperties.footer)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var footer = pdfExportProperties.footer;\n        var position = new PointF(0, clientSize.width - 80 - footer.fromBottom * 0.75);\n        var size = new SizeF(clientSize.width - 80, footer.height * 0.75);\n        var bounds = new RectangleF(position, size);\n        this.pdfDocument.template.bottom = this.drawPageTemplate(new PdfPageTemplateElement(bounds), footer);\n      }\n      if (!isNullOrUndefined(pdfExportProperties.includeHiddenColumn) && !this.isGrouping) {\n        this.hideColumnInclude = pdfExportProperties.includeHiddenColumn;\n      }\n      if (!isNullOrUndefined(pdfExportProperties.dataSource)) {\n        this.customDataSource = true;\n        this.currentViewData = false;\n      } else if (!isNullOrUndefined(pdfExportProperties.exportType)) {\n        if (pdfExportProperties.exportType === 'CurrentPage') {\n          dataSource = this.parent.currentViewData;\n          this.currentViewData = true;\n          this.customDataSource = false;\n        } else {\n          this.currentViewData = false;\n          this.customDataSource = false;\n        }\n      } else {\n        this.currentViewData = false;\n        this.customDataSource = false;\n      }\n    } else {\n      this.currentViewData = false;\n      this.customDataSource = false;\n    }\n    return dataSource;\n  };\n  PdfExport.prototype.drawHeader = function (pdfExportProperties) {\n    var _this = this;\n    var clientSize = this.pdfPageSettings.size;\n    if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var header = pdfExportProperties.header;\n      var position = new PointF(0, header.fromTop);\n      var size = new SizeF(clientSize.width - 80, header.height * 0.75);\n      var bounds = new RectangleF(position, size);\n      if (!this.headerOnPages.length) {\n        this.pdfDocument.template.top = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n      } else {\n        var headerTemplate_1 = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n        this.headerOnPages.filter(function (index) {\n          if (index - 1 >= 0 && index - 1 <= _this.pdfDocument.pages.count - 1) {\n            _this.pdfDocument.pages.getPageByIndex(index - 1).graphics.drawPdfTemplate(headerTemplate_1.template, new PointF(0, 0));\n          }\n        });\n      }\n    }\n  };\n  PdfExport.prototype.drawPageTemplate = function (template, element) {\n    for (var _i = 0, _a = element.contents; _i < _a.length; _i++) {\n      var content = _a[_i];\n      this.processContentValidation(content);\n      switch (content.type) {\n        case 'Text':\n          if (content.value === '' || content.value === undefined || content.value === null || typeof content.value !== 'string') {\n            throw new Error('please enter the valid input value in text content...');\n          }\n          this.drawText(template, content);\n          break;\n        case 'PageNumber':\n          this.drawPageNumber(template, content);\n          break;\n        case 'Image':\n          if (content.src === undefined || content.src === null || content.src === '') {\n            throw new Error('please enter the valid base64 string in image content...');\n          }\n          this.drawImage(template, content);\n          break;\n        case 'Line':\n          this.drawLine(template, content);\n          break;\n        default:\n          throw new Error('Please set valid content type...');\n      }\n    }\n    return template;\n  };\n  PdfExport.prototype.processContentValidation = function (content) {\n    if (content.type === undefined || content.type === null) {\n      throw new Error('please set valid content type...');\n    } else {\n      if (content.type === 'Line') {\n        if (content.points === undefined || content.points === null) {\n          throw new Error('please enter valid points in ' + content.type + ' content...');\n        } else {\n          if (content.points.x1 === undefined || content.points.x1 === null || typeof content.points.x1 !== 'number') {\n            throw new Error('please enter valid x1 co-ordinate in ' + content.type + ' points...');\n          }\n          if (content.points.y1 === undefined || content.points.y1 === null || typeof content.points.y1 !== 'number') {\n            throw new Error('please enter valid y1 co-ordinate in ' + content.type + ' points...');\n          }\n          if (content.points.x2 === undefined || content.points.x2 === null || typeof content.points.x2 !== 'number') {\n            throw new Error('please enter valid x2 co-ordinate in ' + content.type + ' points...');\n          }\n          if (content.points.y2 === undefined || content.points.y2 === null || typeof content.points.y2 !== 'number') {\n            throw new Error('please enter valid y2 co-ordinate in ' + content.type + ' points...');\n          }\n        }\n      } else {\n        if (content.position === undefined || content.position === null) {\n          throw new Error('please enter valid position in ' + content.type + ' content...');\n        } else {\n          if (content.position.x === undefined || content.position.x === null || typeof content.position.x !== 'number') {\n            throw new Error('please enter valid x co-ordinate in ' + content.type + ' position...');\n          }\n          if (content.position.y === undefined || content.position.y === null || typeof content.position.y !== 'number') {\n            throw new Error('please enter valid y co-ordinate in ' + content.type + ' position...');\n          }\n        }\n      }\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.drawText = function (pageTemplate, content) {\n    var font = this.getFont(content);\n    var brush = this.getBrushFromContent(content);\n    var pen = null;\n    if (!isNullOrUndefined(content.style.textPenColor)) {\n      var penColor = this.hexToRgb(content.style.textPenColor);\n      pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n    }\n    if (brush == null && pen == null) {\n      brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    }\n    var value = content.value.toString();\n    var x = content.position.x * 0.75;\n    var y = content.position.y * 0.75;\n    var format = new PdfStringFormat();\n    if (!isNullOrUndefined(content.style.stringFormat)) {\n      format.alignment = content.style.stringFormat.alignment;\n    }\n    var result = this.setContentFormat(content, format);\n    if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n      pageTemplate.graphics.drawString(value, font, pen, brush, x, y, result.size.width, result.size.height, result.format);\n    } else {\n      pageTemplate.graphics.drawString(value, font, pen, brush, x, y, format);\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.drawPageNumber = function (documentHeader, content) {\n    var font = this.getFont(content);\n    var brush = null;\n    if (!isNullOrUndefined(content.style.textBrushColor)) {\n      var brushColor = this.hexToRgb(content.style.textBrushColor);\n      brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n    } else {\n      brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    }\n    var pageNumber = new PdfPageNumberField(font, brush);\n    pageNumber.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n    var compositeField;\n    var format;\n    if (!isNullOrUndefined(content.format)) {\n      var total = '$total';\n      var current = '$current';\n      if (content.format.indexOf(total) !== -1 && content.format.indexOf(current) !== -1) {\n        var pageCount = new PdfPageCountField(font);\n        pageCount.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n        if (content.format.indexOf(total) > content.format.indexOf(current)) {\n          format = content.format.replace(current, '0');\n          format = format.replace(total, '1');\n        } else {\n          format = content.format.replace(current, '1');\n          format = format.replace(total, '0');\n        }\n        compositeField = new PdfCompositeField(font, brush, format, pageNumber, pageCount);\n      } else if (content.format.indexOf(current) !== -1 && content.format.indexOf(total) === -1) {\n        format = content.format.replace(current, '0');\n        compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n      } else {\n        var pageCount = new PdfPageCountField(font);\n        format = content.format.replace(total, '0');\n        compositeField = new PdfCompositeField(font, brush, format, pageCount);\n      }\n    } else {\n      format = '{0}';\n      compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n    }\n    var x = content.position.x * 0.75;\n    var y = content.position.y * 0.75;\n    var result = this.setContentFormat(content, compositeField.stringFormat);\n    if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n      compositeField.stringFormat = result.format;\n      compositeField.bounds = new RectangleF(x, y, result.size.width, result.size.height);\n    }\n    compositeField.draw(documentHeader.graphics, x, y);\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.drawImage = function (documentHeader, content) {\n    var x = content.position.x * 0.75;\n    var y = content.position.y * 0.75;\n    var width = !isNullOrUndefined(content.size) ? content.size.width * 0.75 : undefined;\n    var height = !isNullOrUndefined(content.size) ? content.size.height * 0.75 : undefined;\n    var image = new PdfBitmap(content.src);\n    if (!isNullOrUndefined(width)) {\n      documentHeader.graphics.drawImage(image, x, y, width, height);\n    } else {\n      documentHeader.graphics.drawImage(image, x, y);\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.drawLine = function (documentHeader, content) {\n    var x1 = content.points.x1 * 0.75;\n    var y1 = content.points.y1 * 0.75;\n    var x2 = content.points.x2 * 0.75;\n    var y2 = content.points.y2 * 0.75;\n    var pen = this.getPenFromContent(content);\n    if (!isNullOrUndefined(content.style) && content.style !== null) {\n      if (!isNullOrUndefined(content.style.penSize) && content.style.penSize !== null && typeof content.style.penSize === 'number') {\n        pen.width = content.style.penSize * 0.75;\n      }\n      pen.dashStyle = this.getDashStyle(content.style.dashStyle);\n    }\n    documentHeader.graphics.drawLine(pen, x1, y1, x2, y2);\n  };\n  PdfExport.prototype.processAggregates = function (sRows, pdfGrid, border, font, brush, backgroundBrush, isCaption, captionRow, groupIndex, isGroupedFooter, isAggregate, gObj) {\n    for (var _i = 0, sRows_1 = sRows; _i < sRows_1.length; _i++) {\n      var row = sRows_1[_i];\n      var leastCaptionSummaryIndex = -1;\n      var index = 0;\n      var isEmpty = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var value = [];\n      var aggIdx = isAggregate ? 0 : 1;\n      var gridRow = void 0;\n      if (isNullOrUndefined(captionRow)) {\n        gridRow = pdfGrid.rows.addRow();\n        gridRow.style.setBorder(border);\n        gridRow.style.setFont(font);\n        gridRow.style.setTextBrush(brush);\n        gridRow.style.setBackgroundBrush(backgroundBrush);\n      }\n      for (var i = 0; i < pdfGrid.columns.count + aggIdx; i++) {\n        var cell = row.cells[parseInt(index.toString(), 10)];\n        if (cell.cellType === CellType.DetailFooterIntent) {\n          i--;\n          index++;\n          continue;\n        }\n        if (!this.hideColumnInclude) {\n          while (cell.visible === undefined) {\n            if (cell.cellType === CellType.DetailFooterIntent) {\n              continue;\n            }\n            if (!isNullOrUndefined(captionRow)) {\n              if (!isNullOrUndefined(captionRow.cells.getCell(i).value)) {\n                value.push(captionRow.cells.getCell(i).value);\n                isEmpty = false;\n                if (!isCaption) {\n                  i += 1;\n                }\n              } else {\n                value.push('');\n              }\n            } else {\n              value.push('');\n            }\n            i += 1;\n            index = index + 1;\n            cell = row.cells[parseInt(index.toString(), 10)];\n          }\n          while (!isNullOrUndefined(cell.visible) && !cell.visible) {\n            index = index + 1;\n            cell = row.cells[parseInt(index.toString(), 10)];\n          }\n        }\n        if (cell.isDataCell) {\n          var templateFn = {};\n          var footerTemplate = !isNullOrUndefined(cell.column.footerTemplate);\n          var groupFooterTemplate = !isNullOrUndefined(cell.column.groupFooterTemplate);\n          var groupCaptionTemplate = !isNullOrUndefined(cell.column.groupCaptionTemplate);\n          if (footerTemplate || groupCaptionTemplate || groupFooterTemplate) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var result = this.getTemplateFunction(templateFn, i, leastCaptionSummaryIndex, cell);\n            templateFn = result.templateFunction;\n            leastCaptionSummaryIndex = result.leastCaptionSummaryIndex;\n            var txt = void 0;\n            var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n            if ((this.parent.isReact || this.parent.isVue || this.parent.isVue3 || this.parent.isAngular) && !(typeof cell.column.footerTemplate === 'string' || typeof cell.column.groupFooterTemplate === 'string' || typeof cell.column.groupCaptionTemplate === 'string')) {\n              txt = data[cell.column.type];\n              txt = !isNullOrUndefined(txt) ? txt : '';\n            } else {\n              txt = templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent);\n              txt = !isNullOrUndefined(txt[0]) ? txt[0].textContent : '';\n            }\n            isEmpty = false;\n            var args = {\n              row: row,\n              type: footerTemplate ? 'Footer' : groupFooterTemplate ? 'GroupFooter' : 'GroupCaption',\n              style: isNullOrUndefined(captionRow) ? gridRow.cells : captionRow.cells,\n              cell: cell,\n              value: txt\n            };\n            this.parent.trigger(events.pdfAggregateQueryCellInfo, args);\n            value.push(args.value);\n          } else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var result = this.getSummaryWithoutTemplate(row.data[cell.column.field]);\n            if (!isNullOrUndefined(result)) {\n              value.push(result);\n            }\n          }\n        } else {\n          value.push('');\n        }\n        if (isEmpty && value[parseInt(i.toString(), 10)] !== '' && !isNullOrUndefined(value[parseInt(i.toString(), 10)]) && value[parseInt(i.toString(), 10)] !== null) {\n          isEmpty = false;\n        }\n        index += 1;\n      }\n      if (!isAggregate) {\n        if (!isCaption) {\n          value.splice(0, 1);\n        } else {\n          for (var i = gObj.groupSettings.columns.length; i < value.length - 1; i++) {\n            value[parseInt(i.toString(), 10)] = value[i + 1];\n            value[i + 1] = value[i + 2] ? value[i + 2] : '';\n          }\n        }\n      }\n      if (!isEmpty) {\n        if (!isCaption) {\n          for (var i = 0; i < pdfGrid.columns.count; i++) {\n            gridRow.cells.getCell(i).value = value[parseInt(i.toString(), 10)].toString();\n          }\n        } else {\n          for (var i = 0; i < pdfGrid.columns.count; i++) {\n            captionRow.cells.getCell(i).value = value[parseInt(i.toString(), 10)].toString();\n            if (i === groupIndex && leastCaptionSummaryIndex !== -1 && leastCaptionSummaryIndex !== 1) {\n              captionRow.cells.getCell(i).columnSpan = leastCaptionSummaryIndex - 1 - groupIndex;\n            } else if (i === groupIndex && leastCaptionSummaryIndex === -1) {\n              captionRow.cells.getCell(i).columnSpan = pdfGrid.columns.count - groupIndex;\n            }\n          }\n        }\n      }\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.getTemplateFunction = function (templateFn, index, leastCaptionSummaryIndex, cell) {\n    if (!isNullOrUndefined(cell.column.footerTemplate) && cell.cellType === CellType.Summary) {\n      templateFn[getEnumValue(CellType, CellType.Summary)] = compile(cell.column.footerTemplate);\n    } else if (!isNullOrUndefined(cell.column.groupCaptionTemplate)) {\n      if (leastCaptionSummaryIndex === -1) {\n        leastCaptionSummaryIndex = index;\n      }\n      templateFn[getEnumValue(CellType, CellType.CaptionSummary)] = compile(cell.column.groupCaptionTemplate);\n    } else {\n      templateFn[getEnumValue(CellType, CellType.GroupSummary)] = compile(cell.column.groupFooterTemplate);\n    }\n    return {\n      templateFunction: templateFn,\n      leastCaptionSummaryIndex: leastCaptionSummaryIndex\n    };\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.getSummaryWithoutTemplate = function (data) {\n    if (!isNullOrUndefined(data.Sum)) {\n      return data.Sum;\n    } else if (!isNullOrUndefined(data.Average)) {\n      return data.Average;\n    } else if (!isNullOrUndefined(data.Max)) {\n      return data.Max;\n    } else if (!isNullOrUndefined(data.Min)) {\n      return data.Min;\n    } else if (!isNullOrUndefined(data.Count)) {\n      return data.Count;\n    } else if (!isNullOrUndefined(data.TrueCount)) {\n      return data.TrueCount;\n    } else if (!isNullOrUndefined(data.FalseCount)) {\n      return data.FalseCount;\n    } else if (!isNullOrUndefined(data.Custom)) {\n      return data.Custom;\n    }\n  };\n  /**\n   * Set alignment, width and type of the values of the column\n   *\n   * @param {Column[]} gridColumns - specifies the grid column\n   * @param {PdfGrid} pdfGrid - specifies the pdfGrid\n   * @param {ExportHelper} helper - specifies the helper\n   * @param {IGrid} gObj - specifies the IGrid\n   * @param {boolean} allowHorizontalOverflow - specifies the allowHorizontalOverflow\n   * @returns {void}\n   */\n  PdfExport.prototype.setColumnProperties = function (gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow) {\n    var startIndex = gObj.groupSettings.columns.length ? gObj.groupSettings.columns.length - 1 : 0;\n    for (var i = 0; i < startIndex; i++) {\n      pdfGrid.columns.getColumn(i).width = 20;\n    }\n    for (var i = 0; i < gridColumns.length; i++) {\n      if (!isNullOrUndefined(gridColumns[parseInt(i.toString(), 10)].textAlign)) {\n        pdfGrid.columns.getColumn(i + startIndex).format = this.getHorizontalAlignment(gridColumns[parseInt(i.toString(), 10)].textAlign);\n      }\n      // Need to add width consideration with % value\n      if (pdfGrid.style.allowHorizontalOverflow && !isNullOrUndefined(gridColumns[parseInt(i.toString(), 10)].width) && allowHorizontalOverflow) {\n        pdfGrid.columns.getColumn(i + startIndex).width = typeof gridColumns[parseInt(i.toString(), 10)].width === 'number' ? gridColumns[parseInt(i.toString(), 10)].width * 0.75 : helper.getConvertedWidth(gridColumns[parseInt(i.toString(), 10)].width) * 0.75;\n      }\n    }\n  };\n  /**\n   * set default style properties of each rows in exporting grid\n   *\n   * @param {PdfGridRow} row - specifies the PdfGridRow\n   * @param {PdfBorders} border - specifies the PdfBorders\n   * @returns {PdfGrid} returns the pdfgrid\n   * @private\n   */\n  PdfExport.prototype.setRecordThemeStyle = function (row, border) {\n    if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.record)) {\n      var fontFamily = !isNullOrUndefined(this.gridTheme.record.fontName) ? this.getFontFamily(this.gridTheme.record.fontName) : PdfFontFamily.Helvetica;\n      var fontSize = !isNullOrUndefined(this.gridTheme.record.fontSize) ? this.gridTheme.record.fontSize : 9.75;\n      var fontStyle = this.getFontStyle(this.gridTheme.record);\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n      if (!isNullOrUndefined(this.gridTheme.record.font)) {\n        font = this.gridTheme.record.font;\n      }\n      row.style.setFont(font);\n      var pdfColor = new PdfColor();\n      if (!isNullOrUndefined(this.gridTheme.record.fontColor)) {\n        var penBrushColor = this.hexToRgb(this.gridTheme.record.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n      row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n    } else {\n      row.style.setTextBrush(new PdfSolidBrush(new PdfColor(0, 0, 0)));\n    }\n    var borderRecord = this.gridTheme && this.gridTheme.record && this.gridTheme.record.border ? this.getBorderStyle(this.gridTheme.record.border) : border;\n    row.style.setBorder(borderRecord);\n    return row;\n  };\n  /**\n   * generate the formatted cell values\n   *\n   * @param {PdfBorders} border - specifies the border\n   * @param {Column[]} columns - specifies the columns\n   * @param {IGrid} gObj - specifies the IGrid\n   * @param {Object[]} dataSource - specifies the datasource\n   * @param {PdfGrid} pdfGrid - specifies the pdfGrid\n   * @param {number} startIndex - specifies the startindex\n   * @param {PdfExportProperties} pdfExportProperties - specifies the pdfExportProperties\n   * @param {ExportHelper} helper - specifies the helper\n   * @param {number} rowIndex - specifies the rowIndex\n   * @returns {number} returns the number of records\n   * @private\n   */\n  PdfExport.prototype.processRecord = function (border, columns, gObj, dataSource, pdfGrid, startIndex, pdfExportProperties, helper, rowIndex) {\n    var rows = helper.getGridRowModel(columns, dataSource, gObj, rowIndex);\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n      rowIndex++;\n      this.rowIndex = rowIndex;\n      // create a new row and set default style properties\n      var gridRow = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n      var cellLength = row.cells.length;\n      for (var j = 0; j < cellLength; j++) {\n        var gridCell = row.cells[parseInt(j.toString(), 10)];\n        if (gridCell.cellType !== CellType.Data) {\n          continue;\n        }\n        var column = gridCell.column;\n        var field = column.field;\n        var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n        var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n        var foreignKeyData = void 0;\n        if (column.isForeignColumn && column.isForeignColumn()) {\n          foreignKeyData = helper.getFData(value, column);\n          value = getValue(column.foreignKeyValue, foreignKeyData);\n        }\n        var data = row.data;\n        var cell = gridRow.cells.getCell(j);\n        var args = {\n          data: data,\n          value: value,\n          column: column,\n          style: undefined,\n          colSpan: 1,\n          cell: cell\n        };\n        args.value = args.column.type === 'boolean' && typeof args.value === 'string' ? args.value : this.exportValueFormatter.formatCellValue(args);\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n        if (!isNullOrUndefined(args.image)) {\n          args.value = new PdfBitmap(args.image.base64);\n          args.value.height = args.image.height || args.value.height;\n          args.value.width = args.image.width || args.value.width;\n        }\n        cell.value = args.value;\n        if (!isNullOrUndefined(args.hyperLink)) {\n          cell.value = this.setHyperLink(args);\n        }\n        if (!isNullOrUndefined(args.style)) {\n          this.processCellStyle(cell, args);\n        }\n        if (args.colSpan > 1) {\n          if (j + 1 + args.colSpan > gridRow.cells.count) {\n            args.colSpan = gridRow.cells.count - (j + 1);\n          }\n          cell.columnSpan = args.colSpan;\n          for (var i = 1; i < cell.columnSpan; i++) {\n            var spanCell = gridRow.cells.getCell(j + i);\n            spanCell.value = '';\n          }\n          j += args.colSpan - 1;\n        }\n      }\n      if (row.isExpand) {\n        var gridRow_1 = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n        var startIndexVal = this.parent.childGrid || this.parent.detailTemplate ? 0 : startIndex;\n        var cell = gridRow_1.cells.getCell(startIndexVal);\n        cell.columnSpan = gridRow_1.cells.count - startIndexVal;\n        cell.style.cellPadding = new PdfPaddings(10, 10, 10, 10);\n        if (this.parent.childGrid) {\n          gObj.isPrinting = true;\n          var exportType = !isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType ? pdfExportProperties.exportType : 'AllPages';\n          var returnValue = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n          var childGridObj = returnValue.childGrid;\n          var element = returnValue.element;\n          childGridObj.actionFailure = helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n          var args = {\n            childGrid: childGridObj,\n            row: row,\n            cell: cell,\n            exportProperties: pdfExportProperties\n          };\n          this.parent.trigger(events.exportDetailDataBound, args);\n          childGridObj.beforeDataBound = this.childGridCell(cell, childGridObj, pdfExportProperties);\n          childGridObj.appendTo(element);\n        } else if (this.parent.detailTemplate) {\n          var args = {\n            parentRow: row,\n            row: gridRow_1,\n            value: {},\n            action: 'pdfexport',\n            gridInstance: gObj\n          };\n          this.parent.trigger(events.exportDetailTemplate, args);\n          cell.value = this.processDetailTemplate(args);\n        }\n      }\n      this.parent.notify(events.exportRowDataBound, {\n        type: 'pdf',\n        rowObj: row\n      });\n    }\n    return rowIndex;\n  };\n  PdfExport.prototype.processDetailTemplate = function (templateData) {\n    var _this = this;\n    if (templateData.value.columnHeader || templateData.value.rows) {\n      // create a grid\n      var pdfGrid = new PdfGrid();\n      // get header theme style\n      var headerThemeStyle = this.getHeaderThemeStyle();\n      var border_1 = headerThemeStyle.border;\n      var headerFont_1 = headerThemeStyle.font;\n      var headerBrush_1 = headerThemeStyle.brush;\n      var processRow = function (row, gridRow, isHeader) {\n        if (isHeader) {\n          gridRow.style.setBorder(border_1);\n          gridRow.style.setFont(headerFont_1);\n          gridRow.style.setTextBrush(headerBrush_1);\n        }\n        for (var j = 0; j < row.cells.length; j++) {\n          var currentCell = row.cells[parseInt(j.toString(), 10)];\n          var pdfCell = gridRow.cells.getCell(currentCell.index ? currentCell.index : j);\n          if (currentCell.rowSpan > 0) {\n            pdfCell.rowSpan = currentCell.rowSpan;\n          }\n          if (currentCell.colSpan > 0) {\n            pdfCell.columnSpan = currentCell.colSpan;\n          }\n          pdfCell.value = currentCell.value;\n          if (!isNullOrUndefined(currentCell.image)) {\n            pdfCell.value = new PdfBitmap(currentCell.image.base64);\n            pdfCell.value.height = currentCell.image.height;\n            pdfCell.value.width = currentCell.image.width;\n          }\n          if (!isNullOrUndefined(currentCell.hyperLink)) {\n            pdfCell.value = _this.setHyperLink(currentCell);\n          }\n          if (!isNullOrUndefined(currentCell.style)) {\n            var cellStyle = {\n              style: {\n                backgroundColor: currentCell.style.backColor,\n                textAlignment: currentCell.style.pdfTextAlignment,\n                verticalAlignment: currentCell.style.pdfVerticalAlignment,\n                textBrushColor: currentCell.style.fontColor,\n                textPenColor: currentCell.style.pdfTextPenColor,\n                fontFamily: currentCell.style.pdfFontFamily,\n                fontSize: currentCell.style.fontSize,\n                bold: currentCell.style.bold,\n                italic: currentCell.style.italic,\n                underline: currentCell.style.underline,\n                strikeout: currentCell.style.strikeThrough,\n                border: currentCell.style.pdfBorder,\n                paragraphIndent: currentCell.style.pdfParagraphIndent,\n                cellPadding: currentCell.style.pdfCellPadding\n              }\n            };\n            _this.processCellStyle(pdfCell, cellStyle);\n          }\n        }\n      };\n      if (templateData.value.columnCount) {\n        pdfGrid.columns.add(templateData.value.columnCount);\n      } else {\n        if (templateData.value.columnHeader && templateData.value.columnHeader.length) {\n          pdfGrid.columns.add(templateData.value.columnHeader[0].cells.length);\n        } else if (templateData.value.rows && templateData.value.rows.length) {\n          pdfGrid.columns.add(templateData.value.rows[0].cells.length);\n        }\n      }\n      if (templateData.value.columnHeader) {\n        pdfGrid.headers.add(templateData.value.columnHeader.length);\n        for (var i = 0; i < templateData.value.columnHeader.length; i++) {\n          var gridHeader = pdfGrid.headers.getHeader(parseInt(i.toString(), 10));\n          processRow(templateData.value.columnHeader[parseInt(i.toString(), 10)], gridHeader, true);\n        }\n      }\n      if (templateData.value.rows) {\n        for (var _i = 0, _a = templateData.value.rows; _i < _a.length; _i++) {\n          var row = _a[_i];\n          // create a new row and set default style properties\n          var gridRow = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border_1);\n          processRow(row, gridRow, false);\n        }\n      }\n      return pdfGrid;\n    } else if (templateData.value.image) {\n      return new PdfBitmap(templateData.value.image.base64);\n    } else if (templateData.value.text) {\n      return templateData.value.text;\n    } else if (templateData.value.hyperLink) {\n      return this.setHyperLink(templateData.value);\n    }\n    return '';\n  };\n  PdfExport.prototype.setHyperLink = function (args) {\n    // create the Text Web Link\n    var textLink = new PdfTextWebLink();\n    // set the hyperlink\n    textLink.url = args.hyperLink.target;\n    // set the link text\n    textLink.text = args.hyperLink.displayText || args.hyperLink.target;\n    // set the font\n    textLink.font = new PdfStandardFont(PdfFontFamily.Helvetica, 9.75);\n    // set the brush and pen for the text color\n    textLink.brush = new PdfSolidBrush(new PdfColor(51, 102, 187));\n    return textLink;\n  };\n  PdfExport.prototype.childGridCell = function (cell, childGridObj, pdfExportProperties) {\n    var _this = this;\n    return function (result) {\n      childGridObj.beforeDataBound = null;\n      result.cancel = true;\n      cell.value = _this.processGridExport(childGridObj, result, pdfExportProperties);\n      childGridObj.destroy();\n      detach(childGridObj.element);\n      _this.gridPool[childGridObj.id] = true;\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n      return cell;\n    };\n  };\n  PdfExport.prototype.processCellStyle = function (cell, args) {\n    if (!isNullOrUndefined(args.style.backgroundColor)) {\n      var backColor = this.hexToRgb(args.style.backgroundColor);\n      cell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n    }\n    if (!isNullOrUndefined(args.style.textAlignment)) {\n      cell.style.stringFormat = this.getHorizontalAlignment(args.style.textAlignment);\n    }\n    if (!isNullOrUndefined(args.style.cellPadding)) {\n      cell.style.cellPadding = args.style.cellPadding;\n    }\n    if (!isNullOrUndefined(args.style.verticalAlignment)) {\n      cell.style.stringFormat = this.getVerticalAlignment(args.style.verticalAlignment, cell.style.stringFormat);\n    }\n    if (!isNullOrUndefined(args.style.textBrushColor)) {\n      var textBrushColor = this.hexToRgb(args.style.textBrushColor);\n      cell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n    }\n    if (!isNullOrUndefined(args.style.textPenColor)) {\n      var textPenColor = this.hexToRgb(args.style.textPenColor);\n      cell.style.textPen = new PdfPen(new PdfColor(textPenColor.r, textPenColor.g, textPenColor.b));\n    }\n    if (!isNullOrUndefined(args.style.fontFamily) || !isNullOrUndefined(args.style.fontSize) || !isNullOrUndefined(args.style.bold) || !isNullOrUndefined(args.style.italic) || !isNullOrUndefined(args.style.underline) || !isNullOrUndefined(args.style.strikeout)) {\n      cell.style.font = this.getFont(args);\n    }\n    if (!isNullOrUndefined(args.style.border)) {\n      var border = new PdfBorders();\n      var borderWidth = args.style.border.width;\n      // set border width\n      var width = !isNullOrUndefined(borderWidth) && typeof borderWidth === 'number' ? borderWidth * 0.75 : undefined;\n      // set border color\n      var color = new PdfColor(196, 196, 196);\n      if (!isNullOrUndefined(args.style.border.color)) {\n        var borderColor = this.hexToRgb(args.style.border.color);\n        color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n      }\n      var pen = new PdfPen(color, width);\n      // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n      if (!isNullOrUndefined(args.style.border.dashStyle)) {\n        pen.dashStyle = this.getDashStyle(args.style.border.dashStyle);\n      }\n      border.all = pen;\n      cell.style.borders = border;\n    }\n    if (!isNullOrUndefined(args.style.paragraphIndent)) {\n      cell.style.stringFormat = new PdfStringFormat();\n      cell.style.stringFormat.paragraphIndent = args.style.paragraphIndent;\n    }\n  };\n  /**\n   * set text alignment of each columns in exporting grid\n   *\n   * @param {string} textAlign - specifies the textAlign\n   * @param {PdfStringFormat} format - specifies the PdfStringFormat\n   * @returns {PdfStringFormat} returns the PdfStringFormat\n   * @private\n   */\n  PdfExport.prototype.getHorizontalAlignment = function (textAlign, format) {\n    if (format === undefined) {\n      format = new PdfStringFormat();\n    }\n    switch (textAlign) {\n      case 'Right':\n        format.alignment = PdfTextAlignment.Right;\n        break;\n      case 'Center':\n        format.alignment = PdfTextAlignment.Center;\n        break;\n      case 'Justify':\n        format.alignment = PdfTextAlignment.Justify;\n        break;\n      case 'Left':\n        format.alignment = PdfTextAlignment.Left;\n        break;\n    }\n    return format;\n  };\n  /**\n   * set vertical alignment of each columns in exporting grid\n   *\n   * @param {string} verticalAlign - specifies the verticalAlign\n   * @param {PdfStringFormat} format - specifies the PdfStringFormat\n   * @param {string} textAlign - specifies the text align\n   * @returns {PdfStringFormat} returns the PdfStringFormat\n   * @private\n   */\n  PdfExport.prototype.getVerticalAlignment = function (verticalAlign, format, textAlign) {\n    if (format === undefined) {\n      format = new PdfStringFormat();\n      format = this.getHorizontalAlignment(textAlign, format);\n    }\n    switch (verticalAlign) {\n      case 'Bottom':\n        format.lineAlignment = PdfVerticalAlignment.Bottom;\n        break;\n      case 'Middle':\n        format.lineAlignment = PdfVerticalAlignment.Middle;\n        break;\n      case 'Top':\n        format.lineAlignment = PdfVerticalAlignment.Top;\n        break;\n    }\n    return format;\n  };\n  PdfExport.prototype.getFontFamily = function (fontFamily) {\n    switch (fontFamily) {\n      case 'TimesRoman':\n        return 2;\n      case 'Courier':\n        return 1;\n      case 'Symbol':\n        return 3;\n      case 'ZapfDingbats':\n        return 4;\n      default:\n        return 0;\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PdfExport.prototype.getFont = function (content) {\n    if (content.font) {\n      return content.font;\n    }\n    var fontSize = !isNullOrUndefined(content.style.fontSize) ? content.style.fontSize * 0.75 : 9.75;\n    var fontFamily = !isNullOrUndefined(content.style.fontFamily) ? this.getFontFamily(content.style.fontFamily) : PdfFontFamily.TimesRoman;\n    var fontStyle = PdfFontStyle.Regular;\n    if (!isNullOrUndefined(content.style.bold) && content.style.bold) {\n      fontStyle |= PdfFontStyle.Bold;\n    }\n    if (!isNullOrUndefined(content.style.italic) && content.style.italic) {\n      fontStyle |= PdfFontStyle.Italic;\n    }\n    if (!isNullOrUndefined(content.style.underline) && content.style.underline) {\n      fontStyle |= PdfFontStyle.Underline;\n    }\n    if (!isNullOrUndefined(content.style.strikeout) && content.style.strikeout) {\n      fontStyle |= PdfFontStyle.Strikeout;\n    }\n    return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n  };\n  PdfExport.prototype.getPageNumberStyle = function (pageNumberType) {\n    switch (pageNumberType) {\n      case 'LowerLatin':\n        return 2;\n      case 'LowerRoman':\n        return 3;\n      case 'UpperLatin':\n        return 4;\n      case 'UpperRoman':\n        return 5;\n      default:\n        return 1;\n    }\n  };\n  PdfExport.prototype.setContentFormat = function (content, format) {\n    if (!isNullOrUndefined(content.size)) {\n      var width = content.size.width * 0.75;\n      var height = content.size.height * 0.75;\n      format = new PdfStringFormat(PdfTextAlignment.Left, PdfVerticalAlignment.Middle);\n      if (!isNullOrUndefined(content.style.hAlign)) {\n        switch (content.style.hAlign) {\n          case 'Right':\n            format.alignment = PdfTextAlignment.Right;\n            break;\n          case 'Center':\n            format.alignment = PdfTextAlignment.Center;\n            break;\n          case 'Justify':\n            format.alignment = PdfTextAlignment.Justify;\n            break;\n          default:\n            format.alignment = PdfTextAlignment.Left;\n        }\n      }\n      if (!isNullOrUndefined(content.style.vAlign)) {\n        format = this.getVerticalAlignment(content.style.vAlign, format);\n      }\n      return {\n        format: format,\n        size: new SizeF(width, height)\n      };\n    }\n    return null;\n  };\n  PdfExport.prototype.getPageSize = function (pageSize) {\n    switch (pageSize) {\n      case 'Letter':\n        return new SizeF(612, 792);\n      case 'Note':\n        return new SizeF(540, 720);\n      case 'Legal':\n        return new SizeF(612, 1008);\n      case 'A0':\n        return new SizeF(2380, 3368);\n      case 'A1':\n        return new SizeF(1684, 2380);\n      case 'A2':\n        return new SizeF(1190, 1684);\n      case 'A3':\n        return new SizeF(842, 1190);\n      case 'A5':\n        return new SizeF(421, 595);\n      case 'A6':\n        return new SizeF(297, 421);\n      case 'A7':\n        return new SizeF(210, 297);\n      case 'A8':\n        return new SizeF(148, 210);\n      case 'A9':\n        return new SizeF(105, 148);\n      // case 'A10':\n      // return new SizeF(74, 105);\n      case 'B0':\n        return new SizeF(2836, 4008);\n      case 'B1':\n        return new SizeF(2004, 2836);\n      case 'B2':\n        return new SizeF(1418, 2004);\n      case 'B3':\n        return new SizeF(1002, 1418);\n      case 'B4':\n        return new SizeF(709, 1002);\n      case 'B5':\n        return new SizeF(501, 709);\n      case 'Archa':\n        return new SizeF(648, 864);\n      case 'Archb':\n        return new SizeF(864, 1296);\n      case 'Archc':\n        return new SizeF(1296, 1728);\n      case 'Archd':\n        return new SizeF(1728, 2592);\n      case 'Arche':\n        return new SizeF(2592, 3456);\n      case 'Flsa':\n        return new SizeF(612, 936);\n      case 'HalfLetter':\n        return new SizeF(396, 612);\n      case 'Letter11x17':\n        return new SizeF(792, 1224);\n      case 'Ledger':\n        return new SizeF(1224, 792);\n      default:\n        return new SizeF(595, 842);\n    }\n  };\n  PdfExport.prototype.getDashStyle = function (dashStyle) {\n    switch (dashStyle) {\n      case 'Dash':\n        return 1;\n      case 'Dot':\n        return 2;\n      case 'DashDot':\n        return 3;\n      case 'DashDotDot':\n        return 4;\n      default:\n        return 0;\n    }\n  };\n  PdfExport.prototype.getPenFromContent = function (content) {\n    var pen = new PdfPen(new PdfColor(0, 0, 0));\n    if (!isNullOrUndefined(content.style) && content.style !== null && !isNullOrUndefined(content.style.penColor)) {\n      var penColor = this.hexToRgb(content.style.penColor);\n      pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n    }\n    return pen;\n  };\n  PdfExport.prototype.getBrushFromContent = function (content) {\n    var brush = null;\n    if (!isNullOrUndefined(content.style.textBrushColor)) {\n      /* tslint:disable-next-line:max-line-length */\n      var brushColor = this.hexToRgb(content.style.textBrushColor);\n      brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n    }\n    return brush;\n  };\n  PdfExport.prototype.hexToRgb = function (hex) {\n    if (hex === null || hex === '' || hex.length !== 7) {\n      throw new Error('please set valid hex value for color...');\n    }\n    hex = hex.substring(1);\n    var bigint = parseInt(hex, 16);\n    var r = bigint >> 16 & 255;\n    var g = bigint >> 8 & 255;\n    var b = bigint & 255;\n    return {\n      r: r,\n      g: g,\n      b: b\n    };\n  };\n  PdfExport.prototype.getFontStyle = function (theme) {\n    var fontStyle = PdfFontStyle.Regular;\n    if (!isNullOrUndefined(theme) && theme.bold) {\n      fontStyle |= PdfFontStyle.Bold;\n    }\n    if (!isNullOrUndefined(theme) && theme.italic) {\n      fontStyle |= PdfFontStyle.Italic;\n    }\n    if (!isNullOrUndefined(theme) && theme.underline) {\n      fontStyle |= PdfFontStyle.Underline;\n    }\n    if (!isNullOrUndefined(theme) && theme.strikeout) {\n      fontStyle |= PdfFontStyle.Strikeout;\n    }\n    return fontStyle;\n  };\n  PdfExport.prototype.getBorderStyle = function (border) {\n    var borders = new PdfBorders();\n    if (!isNullOrUndefined(border)) {\n      var borderWidth = border.width;\n      // set border width\n      var width = !isNullOrUndefined(borderWidth) && typeof borderWidth === 'number' ? borderWidth * 0.75 : undefined;\n      // set border color\n      var color = new PdfColor(196, 196, 196);\n      if (!isNullOrUndefined(border.color)) {\n        var borderColor = this.hexToRgb(border.color);\n        color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n      }\n      var pen = new PdfPen(color, width);\n      // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n      if (!isNullOrUndefined(border.dashStyle)) {\n        pen.dashStyle = this.getDashStyle(border.dashStyle);\n      }\n      borders.all = pen;\n    } else {\n      borders.all = new PdfPen(new PdfColor(234, 234, 234));\n    }\n    return borders;\n  };\n  PdfExport.prototype.destroy = function () {\n    //destroy for exporting\n  };\n  return PdfExport;\n}();\nexport { PdfExport };","map":{"version":3,"names":["events","PdfDocument","PdfGrid","PdfBorders","PdfPen","PdfPaddings","PdfStandardFont","PdfFontFamily","PdfFontStyle","PdfBitmap","PdfStringFormat","PdfTextAlignment","PdfColor","PdfSolidBrush","PdfTextWebLink","PdfVerticalAlignment","RectangleF","PdfPageTemplateElement","PointF","PdfPageNumberField","PdfCompositeField","PdfPageCountField","SizeF","PdfPageSettings","PdfPageOrientation","PdfTrueTypeFont","ExportHelper","ExportValueFormatter","Data","SummaryModelGenerator","GroupSummaryModelGenerator","CaptionSummaryModelGenerator","compile","getEnumValue","isNullOrUndefined","detach","CellType","DataManager","Query","getValue","getUid","getPrintGridModel","measureColumnDepth","isExportColumns","updateColumnTypeForExportColumns","prepareColumns","PdfExport","parent","hideColumnInclude","currentViewData","customDataSource","isGrouping","headerOnPages","drawPosition","xPosition","yPosition","helper","gridPool","prototype","getModuleName","init","exportValueFormatter","locale","pdfDocument","undefined","isExporting","id","pdfPageSettings","exportWithData","pdfDoc","resolve","returnType","pdfExportProperties","isMultipleExport","reject","_this","processExport","then","trigger","pdfExportComplete","isBlob","promise","blobPromise","gridInstance","log","catch","e","actionFailure","Map","data","query","childGrid","detailTemplate","hierarchyExportMode","expandedRows","args","requestType","cancel","headerPageNumbers","gridDrawPosition","generateQuery","gridObject","can","header","drawPos","beforePdfExport","Promise","getQuery","dataSource","isCountRequired","aggregates","executeQuery","exportType","getCurrentViewRecords","allPromise_1","push","getData","getColumnData","all","results","multipleExport","type","gObj","section","sections","add","pdfGrid","processSectionExportProperties","pdfPage","page","pages","processGridExport","globalResolve","checkAndExport","bounds","height","blankSpace","result","draw","drawHeader","fileName","save","destroy","document","pageOrientation","pageSize","orientation","Landscape","Portrait","size","getPageSize","setPageSettings","allowHorizontalOverflow","gridTheme","theme","getForeignKeyData","processExportProperties","columns","enableColumnVirtualization","getGridExportColumns","filter","commands","groupSettings","length","hierarchyPrintMode","headerThemeStyle","getHeaderThemeStyle","border","headerFont","font","headerBrush","brush","returnValue","getHeaders","gridColumns","processGridHeaders","rows","setColumnProperties","captionThemeStyle","getSummaryCaptionThemeStyle","processGroupedRecords","backgroundBrush","processRecord","summaryModel","sRows","column","getColumns","col","aggregateModule","prepareSummaryInfo","generateRows","records","processAggregates","row","addRow","style","setBorder","caption","fontSize","fontFamily","fontName","getFontFamily","Helvetica","fontStyle","getFontStyle","pdfColor","fontColor","penBrushColor","hexToRgb","r","g","b","borderCaption","getBorderStyle","getGridPdfFont","isTrueType","headerSize","headerStyle","fontFamily_1","captionFont","captionSize","captionStyle","fontFamily_2","record","recordFont","recordSize","recordStyle","fontFamily_3","level","index","groupIndex","_loop_1","dataSourceItems","getColumnByField","field","value","key","isForeignKey","isForeignColumn","headerText","enableGroupByFormat","this_1","formatCellValue","count","cArgs","captionText","exportGroupCaption","cells","getCell","stringFormat","Left","setFont","setTextBrush","setBackgroundBrush","processCellStyle","captionSummaryModel","items","columnSpan","childLevels","rowIndex","groupSummaryModel","isGroupedFooter","_i","dataSource_1","gridColumn","grid","eCols","columnCount","depth","cols","rowNumber","i","parseInt","toString","headers","applyTextAndSpan","rowIdx","colIdx","rowSpan","colSpan","gridHeader","getHeader","pdfCell","cell","headerTextAlign","getHorizontalAlignment","getVerticalAlignment","textAlign","cellType","HeaderIndent","DetailHeader","width","gridCell","pdfHeaderQueryCellInfo","evtArgs","setCellBorder","borders","setCellFont","setHeaderBrush","textBrush","verticalAlignment","image","base64","hyperLink","setHyperLink","recuHeader","spanCnt","colIndex","isRoot","cidx","visible","newSpanCnt","clientSize","footer","position","fromBottom","template","bottom","drawPageTemplate","includeHiddenColumn","fromTop","top","headerTemplate_1","getPageByIndex","graphics","drawPdfTemplate","element","_a","contents","content","processContentValidation","Error","drawText","drawPageNumber","src","drawImage","drawLine","points","x1","y1","x2","y2","x","y","pageTemplate","getFont","getBrushFromContent","pen","textPenColor","penColor","format","alignment","setContentFormat","drawString","documentHeader","textBrushColor","brushColor","pageNumber","numberStyle","getPageNumberStyle","pageNumberType","compositeField","total","current","indexOf","pageCount","replace","getPenFromContent","penSize","dashStyle","getDashStyle","isCaption","captionRow","isAggregate","sRows_1","leastCaptionSummaryIndex","isEmpty","aggIdx","gridRow","DetailFooterIntent","isDataCell","templateFn","footerTemplate","groupFooterTemplate","groupCaptionTemplate","getTemplateFunction","templateFunction","txt","columnName","isReact","isVue","isVue3","isAngular","textContent","pdfAggregateQueryCellInfo","getSummaryWithoutTemplate","splice","Summary","CaptionSummary","GroupSummary","Sum","Average","Max","Min","Count","TrueCount","FalseCount","Custom","startIndex","getColumn","getConvertedWidth","setRecordThemeStyle","borderRecord","getGridRowModel","rows_1","cellLength","j","cellValue","valueAccessor","foreignKeyData","getFData","foreignKeyValue","pdfQueryCellInfo","spanCell","isExpand","gridRow_1","startIndexVal","cellPadding","isPrinting","createChildGrid","childGridObj","failureHandler","exportProperties","exportDetailDataBound","beforeDataBound","childGridCell","appendTo","parentRow","action","exportDetailTemplate","processDetailTemplate","notify","exportRowDataBound","rowObj","templateData","columnHeader","border_1","headerFont_1","headerBrush_1","processRow","isHeader","currentCell","cellStyle","backgroundColor","backColor","textAlignment","pdfTextAlignment","pdfVerticalAlignment","pdfTextPenColor","pdfFontFamily","bold","italic","underline","strikeout","strikeThrough","pdfBorder","paragraphIndent","pdfParagraphIndent","pdfCellPadding","text","textLink","url","target","displayText","textPen","borderWidth","color","borderColor","Right","Center","Justify","verticalAlign","lineAlignment","Bottom","Middle","Top","TimesRoman","Regular","Bold","Italic","Underline","Strikeout","hAlign","vAlign","hex","substring","bigint"],"sources":["/Users/saleem/Desktop/KClient/Web App/Ver_3.6/User Interface/website_Source files/node_modules/@syncfusion/ej2-grids/src/grid/actions/pdf-export.js"],"sourcesContent":["import * as events from '../base/constant';\nimport { PdfDocument, PdfGrid, PdfBorders, PdfPen, PdfPaddings } from '@syncfusion/ej2-pdf-export';\nimport { PdfStandardFont, PdfFontFamily, PdfFontStyle, PdfBitmap } from '@syncfusion/ej2-pdf-export';\nimport { PdfStringFormat, PdfTextAlignment, PdfColor, PdfSolidBrush, PdfTextWebLink } from '@syncfusion/ej2-pdf-export';\nimport { PdfVerticalAlignment, RectangleF, PdfPageTemplateElement } from '@syncfusion/ej2-pdf-export';\nimport { PointF, PdfPageNumberField, PdfCompositeField } from '@syncfusion/ej2-pdf-export';\nimport { PdfPageCountField, SizeF, PdfPageSettings, PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PdfTrueTypeFont } from '@syncfusion/ej2-pdf-export';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { Data } from '../actions/data';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { compile, getEnumValue, isNullOrUndefined, detach } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getUid, getPrintGridModel, measureColumnDepth, isExportColumns, updateColumnTypeForExportColumns, prepareColumns } from '../base/util';\n/**\n * `PDF Export` module is used to handle the exportToPDF action.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for the Grid PDF Export module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @hidden\n     */\n    function PdfExport(parent) {\n        this.hideColumnInclude = false;\n        this.currentViewData = false;\n        this.customDataSource = false;\n        this.isGrouping = false;\n        this.headerOnPages = [];\n        this.drawPosition = { xPosition: 0, yPosition: 0 };\n        this.parent = parent;\n        this.helper = new ExportHelper(parent);\n        this.gridPool = {};\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    PdfExport.prototype.init = function (parent) {\n        this.exportValueFormatter = new ExportValueFormatter(parent.locale);\n        this.pdfDocument = undefined;\n        this.hideColumnInclude = false;\n        this.currentViewData = false;\n        this.parent = parent;\n        this.isGrouping = false;\n        this.isExporting = true;\n        parent.id = getUid('main-grid');\n        this.gridPool[parent.id] = false;\n        this.pdfPageSettings = new PdfPageSettings();\n    };\n    PdfExport.prototype.exportWithData = function (parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject) {\n        var _this = this;\n        this.init(parent);\n        if (!isNullOrUndefined(pdfDoc)) {\n            this.pdfDocument = pdfDoc;\n        }\n        else {\n            this.pdfDocument = new PdfDocument();\n        }\n        this.processExport(parent, returnType, pdfExportProperties, isMultipleExport).then(function () {\n            _this.isExporting = false;\n            parent.trigger(events.pdfExportComplete, _this.isBlob ? { promise: _this.blobPromise } : { gridInstance: _this.parent });\n            _this.parent.log('exporting_complete', _this.getModuleName());\n            resolve(_this.pdfDocument);\n        }).catch(function (e) {\n            reject(_this.pdfDocument);\n            _this.parent.trigger(events.actionFailure, e);\n        });\n    };\n    /**\n     * Used to map the input data\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {PdfExportProperties} pdfExportProperties - specifies the PdfExportProperties\n     * @param {boolean} isMultipleExport - specifies the isMultipleExport\n     * @param {Object} pdfDoc - specifies the pdfDoc\n     * @param {boolean} isBlob - speciies whether it is Blob or not\n     * @returns {void}\n     */\n    PdfExport.prototype.Map = function (parent, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        this.data = new Data(this.parent);\n        this.isBlob = isBlob;\n        this.gridPool = {};\n        var query = pdfExportProperties && pdfExportProperties.query ? pdfExportProperties.query : new Query();\n        if ((parent.childGrid || parent.detailTemplate) && !(!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.hierarchyExportMode === 'None')) {\n            parent.expandedRows = getPrintGridModel(parent).expandedRows;\n        }\n        var args = {\n            requestType: 'beforePdfExport', cancel: false,\n            headerPageNumbers: [], gridDrawPosition: { xPosition: 0, yPosition: 0 }, generateQuery: false\n        };\n        var gridObject = 'gridObject';\n        args[\"\" + gridObject] = parent;\n        var can = 'cancel';\n        var generateQuery = 'generateQuery';\n        var header = 'headerPageNumbers';\n        var drawPos = 'gridDrawPosition';\n        parent.trigger(events.beforePdfExport, args);\n        if (args[\"\" + can] === true) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                return resolve();\n            });\n        }\n        if (isExportColumns(pdfExportProperties)) {\n            updateColumnTypeForExportColumns(pdfExportProperties, parent);\n        }\n        if (args[\"\" + generateQuery]) {\n            query = ExportHelper.getQuery(parent, this.data);\n        }\n        this.headerOnPages = args[\"\" + header];\n        this.drawPosition = args[\"\" + drawPos];\n        this.parent.log('exporting_begin', this.getModuleName());\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n            pdfExportProperties.dataSource = pdfExportProperties.dataSource instanceof DataManager ?\n                pdfExportProperties.dataSource : new DataManager(pdfExportProperties.dataSource);\n            if (isNullOrUndefined(query.isCountRequired) || parent.aggregates) {\n                query.isCountRequired = true;\n            }\n            return new Promise(function (resolve, reject) {\n                pdfExportProperties.dataSource.executeQuery(query).then(function (returnType) {\n                    _this.exportWithData(parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject);\n                });\n            });\n        }\n        else if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType === 'CurrentPage') {\n            return new Promise(function (resolve, reject) {\n                _this.exportWithData(parent, pdfDoc, resolve, _this.parent.getCurrentViewRecords(), pdfExportProperties, isMultipleExport, reject);\n            });\n        }\n        else {\n            var allPromise_1 = [];\n            allPromise_1.push(this.data.getData({}, ExportHelper.getQuery(parent, this.data)));\n            allPromise_1.push(this.helper.getColumnData(parent));\n            return new Promise(function (resolve, reject) {\n                Promise.all(allPromise_1).then(function (e) {\n                    _this.init(parent);\n                    if (!isNullOrUndefined(pdfDoc)) {\n                        _this.pdfDocument = pdfDoc['document'];\n                    }\n                    else {\n                        _this.pdfDocument = new PdfDocument();\n                    }\n                    _this.processExport(parent, e[0], pdfExportProperties, isMultipleExport, pdfDoc).then(function (results) {\n                        _this.isExporting = false;\n                        parent.trigger(events.pdfExportComplete, _this.isBlob ? { promise: _this.blobPromise }\n                            : { gridInstance: _this.parent });\n                        _this.parent.log('exporting_complete', _this.getModuleName());\n                        if (pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage') {\n                            resolve(results);\n                        }\n                        else {\n                            resolve(_this.pdfDocument);\n                        }\n                    }).catch(function (e) {\n                        reject(_this.pdfDocument);\n                        _this.parent.trigger(events.actionFailure, e);\n                    });\n                });\n            });\n        }\n    };\n    PdfExport.prototype.processExport = function (gObj, returnType, pdfExportProperties, isMultipleExport, pdfDoc) {\n        var _this = this;\n        var section = !(pdfDoc && pdfExportProperties && pdfExportProperties.multipleExport &&\n            pdfExportProperties.multipleExport.type === 'AppendToPage') ? this.pdfDocument.sections.add() : null;\n        var pdfGrid;\n        this.processSectionExportProperties(section, pdfExportProperties);\n        var pdfPage = pdfDoc && pdfExportProperties && pdfExportProperties.multipleExport &&\n            pdfExportProperties.multipleExport.type === 'AppendToPage' ? pdfDoc['result'].page : section.pages.add();\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        return new Promise(function (resolve, reject) {\n            pdfGrid = _this.processGridExport(gObj, returnType, pdfExportProperties);\n            _this.globalResolve = resolve;\n            _this.gridPool[gObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n        }).then(function () {\n            // draw the grid\n            var xPosition = _this.drawPosition['xPosition'];\n            var yPosition;\n            if (pdfDoc && pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage') {\n                yPosition = pdfDoc['result'].bounds.height;\n                if (pdfExportProperties.multipleExport.blankSpace) {\n                    yPosition = pdfDoc['result'].bounds.height + pdfDoc['result'].bounds.height;\n                }\n            }\n            else {\n                yPosition = _this.drawPosition['yPosition'];\n            }\n            var result = pdfGrid.draw(pdfPage, xPosition, yPosition);\n            _this.drawHeader(pdfExportProperties);\n            if (!isMultipleExport) {\n                // save the PDF\n                if (!_this.isBlob) {\n                    if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.fileName) {\n                        _this.pdfDocument.save(pdfExportProperties.fileName);\n                    }\n                    else {\n                        _this.pdfDocument.save('Export.pdf');\n                    }\n                }\n                else {\n                    _this.blobPromise = _this.pdfDocument.save();\n                }\n                _this.pdfDocument.destroy();\n                delete gObj.expandedRows;\n            }\n            if (pdfExportProperties && pdfExportProperties.multipleExport && pdfExportProperties.multipleExport.type === 'AppendToPage') {\n                return { document: _this.pdfDocument, result: result };\n            }\n            else {\n                return _this.pdfDocument;\n            }\n        });\n    };\n    PdfExport.prototype.processSectionExportProperties = function (section, pdfExportProperties) {\n        if (!isNullOrUndefined(pdfExportProperties) && (!isNullOrUndefined(pdfExportProperties.pageOrientation)\n            || !isNullOrUndefined(pdfExportProperties.pageSize))) {\n            this.pdfPageSettings.orientation = (pdfExportProperties.pageOrientation === 'Landscape') ?\n                PdfPageOrientation.Landscape : PdfPageOrientation.Portrait;\n            this.pdfPageSettings.size = this.getPageSize(pdfExportProperties.pageSize);\n            section.setPageSettings(this.pdfPageSettings);\n        }\n        return section;\n    };\n    PdfExport.prototype.processGridExport = function (gObj, returnType, pdfExportProperties) {\n        var allowHorizontalOverflow = true;\n        if (!isNullOrUndefined(pdfExportProperties)) {\n            this.gridTheme = pdfExportProperties.theme;\n            allowHorizontalOverflow = isNullOrUndefined(pdfExportProperties.allowHorizontalOverflow) ?\n                true : pdfExportProperties.allowHorizontalOverflow;\n        }\n        var helper = new ExportHelper(gObj, this.helper.getForeignKeyData());\n        var dataSource = this.processExportProperties(pdfExportProperties, returnType.result);\n        var columns = isExportColumns(pdfExportProperties) ?\n            prepareColumns(pdfExportProperties.columns, gObj.enableColumnVirtualization) :\n            helper.getGridExportColumns(gObj.columns);\n        columns = columns.filter(function (columns) { return isNullOrUndefined(columns.commands); });\n        var isGrouping = false;\n        if (gObj.groupSettings.columns.length) {\n            isGrouping = true;\n        }\n        if ((gObj.childGrid || gObj.detailTemplate) && !isNullOrUndefined(pdfExportProperties)) {\n            gObj.hierarchyPrintMode = pdfExportProperties.hierarchyExportMode || 'Expanded';\n        }\n        // create a grid\n        var pdfGrid = new PdfGrid();\n        // get header theme style\n        var headerThemeStyle = this.getHeaderThemeStyle();\n        var border = headerThemeStyle.border;\n        var headerFont = headerThemeStyle.font;\n        var headerBrush = headerThemeStyle.brush;\n        var returnValue = helper.getHeaders(columns, this.hideColumnInclude);\n        // Column collection with respect to the records in the grid\n        var gridColumns = returnValue.columns;\n        // process grid header content\n        pdfGrid = this.processGridHeaders(gObj.groupSettings.columns.length, pdfGrid, returnValue.rows, gridColumns, border, headerFont, headerBrush, gObj, allowHorizontalOverflow, columns);\n        // set alignment, width and type of the values of the column\n        this.setColumnProperties(gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow);\n        var captionThemeStyle = this.getSummaryCaptionThemeStyle();\n        if (!isNullOrUndefined(dataSource) && dataSource.length) {\n            if (isGrouping) {\n                if (!isNullOrUndefined(captionThemeStyle.border)) {\n                    border = captionThemeStyle.border;\n                }\n                this.processGroupedRecords(pdfGrid, dataSource, gridColumns, gObj, border, 0, captionThemeStyle.font, captionThemeStyle.\n                    brush, captionThemeStyle.backgroundBrush, returnType, pdfExportProperties, helper, 0);\n            }\n            else {\n                this.processRecord(border, gridColumns, gObj, dataSource, pdfGrid, 0, pdfExportProperties, helper, 0);\n            }\n            if (!isNullOrUndefined(returnType.aggregates)) {\n                var summaryModel = new SummaryModelGenerator(gObj);\n                var sRows = void 0;\n                var column = summaryModel.getColumns();\n                column = column.filter(function (col) { return isNullOrUndefined(col.commands) && col.type !== 'checkbox'; });\n                if (gObj.aggregates.length && this.parent !== gObj) {\n                    gObj.aggregateModule.prepareSummaryInfo();\n                }\n                if (this.customDataSource) {\n                    sRows = summaryModel.generateRows(dataSource, returnType.aggregates);\n                }\n                else if (this.currentViewData) {\n                    sRows = summaryModel.generateRows(this.parent.getCurrentViewRecords(), returnType.aggregates);\n                }\n                else if (isGrouping) {\n                    sRows = summaryModel.generateRows(dataSource.records, returnType.aggregates);\n                }\n                else {\n                    sRows = summaryModel.generateRows(returnType.result, returnType.aggregates, null, null, column);\n                }\n                this.processAggregates(sRows, pdfGrid, border, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, false, null, null, null, isGrouping ? false : true);\n            }\n        }\n        else {\n            var row = pdfGrid.rows.addRow();\n            row.style.setBorder(border);\n        }\n        return pdfGrid;\n    };\n    PdfExport.prototype.getSummaryCaptionThemeStyle = function () {\n        if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.caption)) {\n            var fontSize = !isNullOrUndefined(this.gridTheme.caption.fontSize) ? this.gridTheme.caption.fontSize : 9.75;\n            var fontFamily = !isNullOrUndefined(this.gridTheme.caption.fontName) ?\n                this.getFontFamily(this.gridTheme.caption.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridTheme.caption);\n            var pdfColor = new PdfColor(0, 0, 0);\n            if (!isNullOrUndefined(this.gridTheme.caption.fontColor)) {\n                var penBrushColor = this.hexToRgb(this.gridTheme.caption.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var borderCaption = this.gridTheme.caption.border ? this.getBorderStyle(this.gridTheme.caption.border) : null;\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridTheme.caption.font)) {\n                font = this.gridTheme.caption.font;\n            }\n            return { font: font, brush: new PdfSolidBrush(pdfColor), backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246)),\n                border: borderCaption };\n        }\n        else {\n            //Material theme\n            return { font: new PdfStandardFont(PdfFontFamily.Helvetica, 9.75), brush: new PdfSolidBrush(new PdfColor(0, 0, 0)),\n                backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246)) };\n        }\n    };\n    PdfExport.prototype.getGridPdfFont = function (args) {\n        var fontFamily = 'fontFamily';\n        var fontSize = 'fontSize';\n        var fontStyle = 'fontStyle';\n        var isTrueType = 'isTrueType';\n        var style = 0;\n        if (args.header && args.header.font) {\n            var headerFont = args.header.font[\"\" + fontFamily];\n            var headerSize = args.header.font[\"\" + fontSize];\n            var headerStyle = args.header.font[\"\" + fontStyle];\n            style = (isNullOrUndefined(PdfFontStyle[\"\" + headerStyle]) ? 0 : PdfFontStyle[\"\" + headerStyle]);\n            if (args.header.font[\"\" + isTrueType]) {\n                args.header.font = new PdfTrueTypeFont(headerFont, headerSize, style);\n            }\n            else {\n                var fontFamily_1 = !isNullOrUndefined(headerFont) ?\n                    this.getFontFamily(headerFont) : PdfFontFamily.Helvetica;\n                args.header.font = new PdfStandardFont(fontFamily_1, headerSize, style);\n            }\n        }\n        if (args.caption && args.caption.font) {\n            var captionFont = args.caption.font[\"\" + fontFamily];\n            var captionSize = args.caption.font[\"\" + fontSize];\n            var captionStyle = args.caption.font[\"\" + fontStyle];\n            style = (isNullOrUndefined(PdfFontStyle[\"\" + captionStyle]) ? 0 : PdfFontStyle[\"\" + captionStyle]);\n            if (args.caption.font[\"\" + isTrueType]) {\n                args.caption.font = new PdfTrueTypeFont(captionFont, captionSize, style);\n            }\n            else {\n                var fontFamily_2 = !isNullOrUndefined(captionFont) ?\n                    this.getFontFamily(captionFont) : PdfFontFamily.Helvetica;\n                args.caption.font = new PdfStandardFont(fontFamily_2, captionSize, style);\n            }\n        }\n        if (args.record && args.record.font) {\n            var recordFont = args.record.font[\"\" + fontFamily];\n            var recordSize = args.record.font[\"\" + fontSize];\n            var recordStyle = args.record.font[\"\" + fontStyle];\n            style = (isNullOrUndefined(PdfFontStyle[\"\" + recordStyle]) ? 0 : PdfFontStyle[\"\" + recordStyle]);\n            if (args.record.font[\"\" + isTrueType]) {\n                args.record.font = new PdfTrueTypeFont(recordFont, recordSize, style);\n            }\n            else {\n                var fontFamily_3 = !isNullOrUndefined(recordFont) ?\n                    this.getFontFamily(recordFont) : PdfFontFamily.Helvetica;\n                args.record.font = new PdfStandardFont(fontFamily_3, recordSize, style);\n            }\n        }\n    };\n    PdfExport.prototype.getHeaderThemeStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.header)) {\n            var fontFamily = !isNullOrUndefined(this.gridTheme.header.fontName) ?\n                this.getFontFamily(this.gridTheme.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridTheme.header);\n            var fontSize = !isNullOrUndefined(this.gridTheme.header.fontSize) ? this.gridTheme.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridTheme.header.fontColor)) {\n                var penBrushColor = this.hexToRgb(this.gridTheme.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridTheme.header.font)) {\n                font = this.gridTheme.header.font;\n            }\n            return { border: this.getBorderStyle(this.gridTheme.header.border), font: font, brush: new PdfSolidBrush(pdfColor) };\n        }\n        else {\n            //Material theme\n            border.all = new PdfPen(new PdfColor(234, 234, 234));\n            return { border: border, font: new PdfStandardFont(PdfFontFamily.Helvetica, 10.5),\n                brush: new PdfSolidBrush(new PdfColor(102, 102, 102)) };\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.processGroupedRecords = function (pdfGrid, dataSource, gridColumns, gObj, border, level, font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index) {\n        var _this = this;\n        var groupIndex = level;\n        var _loop_1 = function (dataSourceItems) {\n            var row = pdfGrid.rows.addRow();\n            var col = gObj.getColumnByField(dataSourceItems.field);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var args = {\n                value: dataSourceItems.key,\n                column: col,\n                style: undefined,\n                isForeignKey: col.isForeignColumn()\n            };\n            var value = gObj.getColumnByField(dataSourceItems.field).headerText + ': ' + (!col.enableGroupByFormat ? this_1.exportValueFormatter.formatCellValue(args) : dataSourceItems.key) + ' - ' + dataSourceItems.count + (dataSource.count > 1 ? ' items' : ' item');\n            var cArgs = { captionText: value, type: 'PDF', data: dataSourceItems, style: undefined };\n            this_1.parent.trigger(events.exportGroupCaption, cArgs, function (cArgs) {\n                row.cells.getCell(groupIndex).value = cArgs.captionText;\n                row.cells.getCell(groupIndex).style.stringFormat = new PdfStringFormat(PdfTextAlignment.Left);\n                row.style.setBorder(border);\n                row.style.setFont(font);\n                row.style.setTextBrush(brush);\n                row.style.setBackgroundBrush(backgroundBrush);\n                if (!isNullOrUndefined(cArgs.style)) {\n                    _this.processCellStyle(row.cells.getCell(groupIndex), cArgs);\n                }\n                var sRows;\n                var captionSummaryModel = new CaptionSummaryModelGenerator(gObj);\n                if (!isNullOrUndefined(dataSourceItems.items.records)) {\n                    sRows = captionSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n                }\n                else {\n                    sRows = captionSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n                }\n                if (!isNullOrUndefined(sRows) && sRows.length === 0) {\n                    row.cells.getCell(groupIndex + 1).columnSpan = pdfGrid.columns.count - (groupIndex + 1);\n                }\n                if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex, null, null, gObj);\n                    _this.processGroupedRecords(pdfGrid, dataSourceItems.items, gridColumns, gObj, border, (groupIndex + 1), font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index);\n                    index = _this.rowIndex;\n                    var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n                    sRows = groupSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false);\n                }\n                else {\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex, null, null, gObj);\n                    index = _this.processRecord(border, gridColumns, gObj, dataSourceItems.items, pdfGrid, (groupIndex + 1), pdfExportProperties, helper, index);\n                    var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n                    sRows = groupSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n                    var isGroupedFooter = true;\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false, null, null, isGroupedFooter, null, gObj);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n            var dataSourceItems = dataSource_1[_i];\n            _loop_1(dataSourceItems);\n        }\n    };\n    PdfExport.prototype.processGridHeaders = function (childLevels, pdfGrid, rows, gridColumn, border, headerFont, headerBrush, grid, allowHorizontalOverflow, eCols) {\n        var _this = this;\n        var columnCount = gridColumn.length + childLevels;\n        var depth = measureColumnDepth(eCols);\n        var cols = eCols;\n        var index = 0;\n        var rowNumber = [];\n        for (var i = 0; i < rows.length; i++) {\n            rowNumber[parseInt(i.toString(), 10)] = 0;\n        }\n        if (grid.groupSettings.columns.length) {\n            index = grid.groupSettings.columns.length - 1;\n            columnCount = columnCount - 1;\n        }\n        pdfGrid.columns.add(columnCount);\n        pdfGrid.headers.add(rows.length);\n        var applyTextAndSpan = function (rowIdx, colIdx, col, rowSpan, colSpan) {\n            var gridHeader = pdfGrid.headers.getHeader(rowIdx);\n            var pdfCell = gridHeader.cells.getCell(colIdx);\n            var cell = rows[parseInt(rowIdx.toString(), 10)].cells[grid.groupSettings.columns.length ?\n                colIdx : rowNumber[parseInt(rowIdx.toString(), 10)]];\n            rowNumber[parseInt(rowIdx.toString(), 10)] = rowNumber[parseInt(rowIdx.toString(), 10)] + 1;\n            if (!isNullOrUndefined(col.headerTextAlign)) {\n                pdfCell.style.stringFormat = _this.getHorizontalAlignment(col.headerTextAlign);\n            }\n            if (rowSpan > 0) {\n                pdfCell.rowSpan = rowSpan;\n                pdfCell.style.stringFormat = _this.getVerticalAlignment('Bottom', pdfCell.style.stringFormat, col.textAlign);\n            }\n            if (colSpan > 0) {\n                pdfCell.columnSpan = colSpan;\n            }\n            gridHeader.style.setBorder(border);\n            gridHeader.style.setFont(headerFont);\n            gridHeader.style.setTextBrush(headerBrush);\n            pdfCell.value = col.headerText;\n            if (!isNullOrUndefined(cell) && (cell.cellType === CellType.HeaderIndent || cell.cellType === CellType.DetailHeader)) {\n                pdfCell.value = '';\n                pdfCell.width = 20;\n            }\n            var args = {\n                cell: pdfCell,\n                gridCell: cell,\n                style: pdfCell.style\n            };\n            _this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n            var evtArgs = args;\n            var setCellBorder = args.style.borders;\n            var setCellFont = args.style.font;\n            var setHeaderBrush = args.style.textBrush;\n            if (!isNullOrUndefined(setCellBorder)) {\n                gridHeader.style.setBorder(setCellBorder);\n            }\n            if (!isNullOrUndefined(setCellFont)) {\n                gridHeader.style.setFont(setCellFont);\n            }\n            if (!isNullOrUndefined(setHeaderBrush)) {\n                gridHeader.style.setTextBrush(setHeaderBrush);\n            }\n            if (!isNullOrUndefined(evtArgs.style.verticalAlignment)) {\n                pdfCell.style.stringFormat = _this.getVerticalAlignment(evtArgs.style.verticalAlignment, pdfCell.style.stringFormat);\n            }\n            if (!isNullOrUndefined(evtArgs.image)) {\n                pdfCell.value = new PdfBitmap(evtArgs.image.base64);\n            }\n            if (!isNullOrUndefined(evtArgs.hyperLink)) {\n                pdfCell.value = _this.setHyperLink(evtArgs);\n            }\n        };\n        var recuHeader = function (cols, depth, spanCnt, colIndex, rowIndex, isRoot) {\n            var cidx = 0;\n            for (var i = 0; i < cols.length; i++) {\n                if (isRoot) {\n                    cidx = cidx + spanCnt + (i === 0 ? 0 : -1);\n                    colIndex = cidx;\n                    spanCnt = 0;\n                }\n                if (!isRoot && !cols[parseInt(i.toString(), 10)].visible) {\n                    colIndex = colIndex - 1;\n                }\n                if (cols[parseInt(i.toString(), 10)].columns && cols[parseInt(i.toString(), 10)].columns.length) {\n                    var newSpanCnt = recuHeader(cols[parseInt(i.toString(), 10)]\n                        .columns, depth - 1, 0, i + colIndex, rowIndex + 1, false);\n                    applyTextAndSpan(rowIndex, i + colIndex + index, cols[parseInt(i.toString(), 10)], 0, newSpanCnt);\n                    spanCnt = spanCnt + newSpanCnt;\n                    colIndex = colIndex + newSpanCnt - 1;\n                }\n                else if (cols[parseInt(i.toString(), 10)].visible || _this.hideColumnInclude) {\n                    spanCnt++;\n                    applyTextAndSpan(rowIndex, i + colIndex + index, cols[parseInt(i.toString(), 10)], depth, 0);\n                }\n            }\n            return spanCnt;\n        };\n        recuHeader(cols, depth, 0, 0, 0, true);\n        if (pdfGrid.columns.count >= 6 && allowHorizontalOverflow) {\n            pdfGrid.style.allowHorizontalOverflow = true;\n        }\n        return pdfGrid;\n    };\n    PdfExport.prototype.processExportProperties = function (pdfExportProperties, dataSource) {\n        if (!isNullOrUndefined(pdfExportProperties)) {\n            if (!isNullOrUndefined(pdfExportProperties.theme)) {\n                this.gridTheme = pdfExportProperties.theme;\n            }\n            var clientSize = this.pdfPageSettings.size;\n            this.drawHeader(pdfExportProperties);\n            if (!isNullOrUndefined(pdfExportProperties.footer)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var footer = pdfExportProperties.footer;\n                var position = new PointF(0, ((clientSize.width - 80) - (footer.fromBottom * 0.75)));\n                var size = new SizeF((clientSize.width - 80), (footer.height * 0.75));\n                var bounds = new RectangleF(position, size);\n                this.pdfDocument.template.bottom = this.drawPageTemplate(new PdfPageTemplateElement(bounds), footer);\n            }\n            if (!isNullOrUndefined(pdfExportProperties.includeHiddenColumn) && !this.isGrouping) {\n                this.hideColumnInclude = pdfExportProperties.includeHiddenColumn;\n            }\n            if (!isNullOrUndefined(pdfExportProperties.dataSource)) {\n                this.customDataSource = true;\n                this.currentViewData = false;\n            }\n            else if (!isNullOrUndefined(pdfExportProperties.exportType)) {\n                if (pdfExportProperties.exportType === 'CurrentPage') {\n                    dataSource = this.parent.currentViewData;\n                    this.currentViewData = true;\n                    this.customDataSource = false;\n                }\n                else {\n                    this.currentViewData = false;\n                    this.customDataSource = false;\n                }\n            }\n            else {\n                this.currentViewData = false;\n                this.customDataSource = false;\n            }\n        }\n        else {\n            this.currentViewData = false;\n            this.customDataSource = false;\n        }\n        return dataSource;\n    };\n    PdfExport.prototype.drawHeader = function (pdfExportProperties) {\n        var _this = this;\n        var clientSize = this.pdfPageSettings.size;\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var header = pdfExportProperties.header;\n            var position = new PointF(0, header.fromTop);\n            var size = new SizeF((clientSize.width - 80), (header.height * 0.75));\n            var bounds = new RectangleF(position, size);\n            if (!this.headerOnPages.length) {\n                this.pdfDocument.template.top = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n            }\n            else {\n                var headerTemplate_1 = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n                this.headerOnPages.filter(function (index) {\n                    if (index - 1 >= 0 && index - 1 <= _this.pdfDocument.pages.count - 1) {\n                        _this.pdfDocument.pages.getPageByIndex(index - 1).graphics\n                            .drawPdfTemplate(headerTemplate_1.template, new PointF(0, 0));\n                    }\n                });\n            }\n        }\n    };\n    PdfExport.prototype.drawPageTemplate = function (template, element) {\n        for (var _i = 0, _a = element.contents; _i < _a.length; _i++) {\n            var content = _a[_i];\n            this.processContentValidation(content);\n            switch (content.type) {\n                case 'Text':\n                    if (content.value === '' || content.value === undefined || content.value === null || typeof content.value !== 'string') {\n                        throw new Error('please enter the valid input value in text content...');\n                    }\n                    this.drawText(template, content);\n                    break;\n                case 'PageNumber':\n                    this.drawPageNumber(template, content);\n                    break;\n                case 'Image':\n                    if (content.src === undefined || content.src === null || content.src === '') {\n                        throw new Error('please enter the valid base64 string in image content...');\n                    }\n                    this.drawImage(template, content);\n                    break;\n                case 'Line':\n                    this.drawLine(template, content);\n                    break;\n                default:\n                    throw new Error('Please set valid content type...');\n            }\n        }\n        return template;\n    };\n    PdfExport.prototype.processContentValidation = function (content) {\n        if (content.type === undefined || content.type === null) {\n            throw new Error('please set valid content type...');\n        }\n        else {\n            if (content.type === 'Line') {\n                if (content.points === undefined || content.points === null) {\n                    throw new Error('please enter valid points in ' + content.type + ' content...');\n                }\n                else {\n                    if (content.points.x1 === undefined || content.points.x1 === null || typeof content.points.x1 !== 'number') {\n                        throw new Error('please enter valid x1 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (content.points.y1 === undefined || content.points.y1 === null || typeof content.points.y1 !== 'number') {\n                        throw new Error('please enter valid y1 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (content.points.x2 === undefined || content.points.x2 === null || typeof content.points.x2 !== 'number') {\n                        throw new Error('please enter valid x2 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (content.points.y2 === undefined || content.points.y2 === null || typeof content.points.y2 !== 'number') {\n                        throw new Error('please enter valid y2 co-ordinate in ' + content.type + ' points...');\n                    }\n                }\n            }\n            else {\n                if (content.position === undefined || content.position === null) {\n                    throw new Error('please enter valid position in ' + content.type + ' content...');\n                }\n                else {\n                    if (content.position.x === undefined || content.position.x === null || typeof content.position.x !== 'number') {\n                        throw new Error('please enter valid x co-ordinate in ' + content.type + ' position...');\n                    }\n                    if (content.position.y === undefined || content.position.y === null || typeof content.position.y !== 'number') {\n                        throw new Error('please enter valid y co-ordinate in ' + content.type + ' position...');\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.drawText = function (pageTemplate, content) {\n        var font = this.getFont(content);\n        var brush = this.getBrushFromContent(content);\n        var pen = null;\n        if (!isNullOrUndefined(content.style.textPenColor)) {\n            var penColor = this.hexToRgb(content.style.textPenColor);\n            pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n        }\n        if (brush == null && pen == null) {\n            brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var value = content.value.toString();\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var format = new PdfStringFormat();\n        if (!isNullOrUndefined(content.style.stringFormat)) {\n            format.alignment = content.style.stringFormat.alignment;\n        }\n        var result = this.setContentFormat(content, format);\n        if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n            pageTemplate.graphics.drawString(value, font, pen, brush, x, y, result.size.width, result.size.height, result.format);\n        }\n        else {\n            pageTemplate.graphics.drawString(value, font, pen, brush, x, y, format);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.drawPageNumber = function (documentHeader, content) {\n        var font = this.getFont(content);\n        var brush = null;\n        if (!isNullOrUndefined(content.style.textBrushColor)) {\n            var brushColor = this.hexToRgb(content.style.textBrushColor);\n            brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n        }\n        else {\n            brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var pageNumber = new PdfPageNumberField(font, brush);\n        pageNumber.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n        var compositeField;\n        var format;\n        if (!isNullOrUndefined(content.format)) {\n            var total = '$total';\n            var current = '$current';\n            if (content.format.indexOf(total) !== -1 && content.format.indexOf(current) !== -1) {\n                var pageCount = new PdfPageCountField(font);\n                pageCount.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n                if (content.format.indexOf(total) > content.format.indexOf(current)) {\n                    format = content.format.replace(current, '0');\n                    format = format.replace(total, '1');\n                }\n                else {\n                    format = content.format.replace(current, '1');\n                    format = format.replace(total, '0');\n                }\n                compositeField = new PdfCompositeField(font, brush, format, pageNumber, pageCount);\n            }\n            else if (content.format.indexOf(current) !== -1 && content.format.indexOf(total) === -1) {\n                format = content.format.replace(current, '0');\n                compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n            }\n            else {\n                var pageCount = new PdfPageCountField(font);\n                format = content.format.replace(total, '0');\n                compositeField = new PdfCompositeField(font, brush, format, pageCount);\n            }\n        }\n        else {\n            format = '{0}';\n            compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n        }\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var result = this.setContentFormat(content, compositeField.stringFormat);\n        if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n            compositeField.stringFormat = result.format;\n            compositeField.bounds = new RectangleF(x, y, result.size.width, result.size.height);\n        }\n        compositeField.draw(documentHeader.graphics, x, y);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.drawImage = function (documentHeader, content) {\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var width = (!isNullOrUndefined(content.size)) ? (content.size.width * 0.75) : undefined;\n        var height = (!isNullOrUndefined(content.size)) ? (content.size.height * 0.75) : undefined;\n        var image = new PdfBitmap(content.src);\n        if (!isNullOrUndefined(width)) {\n            documentHeader.graphics.drawImage(image, x, y, width, height);\n        }\n        else {\n            documentHeader.graphics.drawImage(image, x, y);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.drawLine = function (documentHeader, content) {\n        var x1 = content.points.x1 * 0.75;\n        var y1 = content.points.y1 * 0.75;\n        var x2 = content.points.x2 * 0.75;\n        var y2 = content.points.y2 * 0.75;\n        var pen = this.getPenFromContent(content);\n        if (!isNullOrUndefined(content.style) && content.style !== null) {\n            if (!isNullOrUndefined(content.style.penSize) && content.style.penSize !== null && typeof content.style.penSize === 'number') {\n                pen.width = content.style.penSize * 0.75;\n            }\n            pen.dashStyle = this.getDashStyle(content.style.dashStyle);\n        }\n        documentHeader.graphics.drawLine(pen, x1, y1, x2, y2);\n    };\n    PdfExport.prototype.processAggregates = function (sRows, pdfGrid, border, font, brush, backgroundBrush, isCaption, captionRow, groupIndex, isGroupedFooter, isAggregate, gObj) {\n        for (var _i = 0, sRows_1 = sRows; _i < sRows_1.length; _i++) {\n            var row = sRows_1[_i];\n            var leastCaptionSummaryIndex = -1;\n            var index = 0;\n            var isEmpty = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var value = [];\n            var aggIdx = isAggregate ? 0 : 1;\n            var gridRow = void 0;\n            if (isNullOrUndefined(captionRow)) {\n                gridRow = pdfGrid.rows.addRow();\n                gridRow.style.setBorder(border);\n                gridRow.style.setFont(font);\n                gridRow.style.setTextBrush(brush);\n                gridRow.style.setBackgroundBrush(backgroundBrush);\n            }\n            for (var i = 0; i < pdfGrid.columns.count + aggIdx; i++) {\n                var cell = row.cells[parseInt(index.toString(), 10)];\n                if (cell.cellType === CellType.DetailFooterIntent) {\n                    i--;\n                    index++;\n                    continue;\n                }\n                if (!this.hideColumnInclude) {\n                    while (cell.visible === undefined) {\n                        if (cell.cellType === CellType.DetailFooterIntent) {\n                            continue;\n                        }\n                        if (!isNullOrUndefined(captionRow)) {\n                            if (!isNullOrUndefined(captionRow.cells.getCell(i).value)) {\n                                value.push(captionRow.cells.getCell(i).value);\n                                isEmpty = false;\n                                if (!isCaption) {\n                                    i += 1;\n                                }\n                            }\n                            else {\n                                value.push('');\n                            }\n                        }\n                        else {\n                            value.push('');\n                        }\n                        i += 1;\n                        index = index + 1;\n                        cell = row.cells[parseInt(index.toString(), 10)];\n                    }\n                    while (!isNullOrUndefined(cell.visible) && !cell.visible) {\n                        index = index + 1;\n                        cell = row.cells[parseInt(index.toString(), 10)];\n                    }\n                }\n                if (cell.isDataCell) {\n                    var templateFn = {};\n                    var footerTemplate = !isNullOrUndefined(cell.column.footerTemplate);\n                    var groupFooterTemplate = !isNullOrUndefined(cell.column.groupFooterTemplate);\n                    var groupCaptionTemplate = !isNullOrUndefined(cell.column.groupCaptionTemplate);\n                    if (footerTemplate || groupCaptionTemplate || groupFooterTemplate) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var result = this.getTemplateFunction(templateFn, i, leastCaptionSummaryIndex, cell);\n                        templateFn = result.templateFunction;\n                        leastCaptionSummaryIndex = result.leastCaptionSummaryIndex;\n                        var txt = void 0;\n                        var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n                        if ((this.parent.isReact || this.parent.isVue || this.parent.isVue3 || this.parent.isAngular) &&\n                            !(typeof cell.column.footerTemplate === 'string' || typeof cell.column.groupFooterTemplate === 'string' || typeof cell.column.groupCaptionTemplate === 'string')) {\n                            txt = data[(cell.column.type)];\n                            txt = !isNullOrUndefined(txt) ? txt : '';\n                        }\n                        else {\n                            txt = (templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent));\n                            txt = !isNullOrUndefined(txt[0]) ? txt[0].textContent : '';\n                        }\n                        isEmpty = false;\n                        var args = {\n                            row: row,\n                            type: footerTemplate ? 'Footer' : groupFooterTemplate ? 'GroupFooter' : 'GroupCaption',\n                            style: isNullOrUndefined(captionRow) ? gridRow.cells : captionRow.cells,\n                            cell: cell,\n                            value: txt\n                        };\n                        this.parent.trigger(events.pdfAggregateQueryCellInfo, args);\n                        value.push(args.value);\n                    }\n                    else {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var result = this.getSummaryWithoutTemplate(row.data[cell.column.field]);\n                        if (!isNullOrUndefined(result)) {\n                            value.push(result);\n                        }\n                    }\n                }\n                else {\n                    value.push('');\n                }\n                if (isEmpty && value[parseInt(i.toString(), 10)] !== '' && !isNullOrUndefined(value[parseInt(i.toString(), 10)]) && value[parseInt(i.toString(), 10)] !== null) {\n                    isEmpty = false;\n                }\n                index += 1;\n            }\n            if (!isAggregate) {\n                if (!isCaption) {\n                    value.splice(0, 1);\n                }\n                else {\n                    for (var i = gObj.groupSettings.columns.length; i < value.length - 1; i++) {\n                        value[parseInt(i.toString(), 10)] = value[i + 1];\n                        value[i + 1] = value[i + 2] ? value[i + 2] : '';\n                    }\n                }\n            }\n            if (!isEmpty) {\n                if (!isCaption) {\n                    for (var i = 0; i < pdfGrid.columns.count; i++) {\n                        gridRow.cells.getCell(i).value = value[parseInt(i.toString(), 10)].toString();\n                    }\n                }\n                else {\n                    for (var i = 0; i < pdfGrid.columns.count; i++) {\n                        captionRow.cells.getCell(i).value = value[parseInt(i.toString(), 10)].toString();\n                        if (i === groupIndex && leastCaptionSummaryIndex !== -1 && leastCaptionSummaryIndex !== 1) {\n                            captionRow.cells.getCell(i).columnSpan = (leastCaptionSummaryIndex - 1) - groupIndex;\n                        }\n                        else if (i === groupIndex && leastCaptionSummaryIndex === -1) {\n                            captionRow.cells.getCell(i).columnSpan = pdfGrid.columns.count - groupIndex;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.getTemplateFunction = function (templateFn, index, leastCaptionSummaryIndex, cell) {\n        if (!isNullOrUndefined(cell.column.footerTemplate) && cell.cellType === CellType.Summary) {\n            templateFn[getEnumValue(CellType, CellType.Summary)] = compile(cell.column.footerTemplate);\n        }\n        else if (!isNullOrUndefined(cell.column.groupCaptionTemplate)) {\n            if (leastCaptionSummaryIndex === -1) {\n                leastCaptionSummaryIndex = index;\n            }\n            templateFn[getEnumValue(CellType, CellType.CaptionSummary)] = compile(cell.column.groupCaptionTemplate);\n        }\n        else {\n            templateFn[getEnumValue(CellType, CellType.GroupSummary)] = compile(cell.column.groupFooterTemplate);\n        }\n        return { templateFunction: templateFn, leastCaptionSummaryIndex: leastCaptionSummaryIndex };\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.getSummaryWithoutTemplate = function (data) {\n        if (!isNullOrUndefined(data.Sum)) {\n            return data.Sum;\n        }\n        else if (!isNullOrUndefined(data.Average)) {\n            return data.Average;\n        }\n        else if (!isNullOrUndefined(data.Max)) {\n            return data.Max;\n        }\n        else if (!isNullOrUndefined(data.Min)) {\n            return data.Min;\n        }\n        else if (!isNullOrUndefined(data.Count)) {\n            return data.Count;\n        }\n        else if (!isNullOrUndefined(data.TrueCount)) {\n            return data.TrueCount;\n        }\n        else if (!isNullOrUndefined(data.FalseCount)) {\n            return data.FalseCount;\n        }\n        else if (!isNullOrUndefined(data.Custom)) {\n            return data.Custom;\n        }\n    };\n    /**\n     * Set alignment, width and type of the values of the column\n     *\n     * @param {Column[]} gridColumns - specifies the grid column\n     * @param {PdfGrid} pdfGrid - specifies the pdfGrid\n     * @param {ExportHelper} helper - specifies the helper\n     * @param {IGrid} gObj - specifies the IGrid\n     * @param {boolean} allowHorizontalOverflow - specifies the allowHorizontalOverflow\n     * @returns {void}\n     */\n    PdfExport.prototype.setColumnProperties = function (gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow) {\n        var startIndex = gObj.groupSettings.columns.length ? gObj.groupSettings.columns.length - 1 : 0;\n        for (var i = 0; i < startIndex; i++) {\n            pdfGrid.columns.getColumn(i).width = 20;\n        }\n        for (var i = 0; i < gridColumns.length; i++) {\n            if (!isNullOrUndefined(gridColumns[parseInt(i.toString(), 10)].textAlign)) {\n                pdfGrid.columns.getColumn(i + startIndex).format = this\n                    .getHorizontalAlignment(gridColumns[parseInt(i.toString(), 10)].textAlign);\n            }\n            // Need to add width consideration with % value\n            if (pdfGrid.style.allowHorizontalOverflow && !isNullOrUndefined(gridColumns[parseInt(i.toString(), 10)].width)\n                && allowHorizontalOverflow) {\n                pdfGrid.columns.getColumn(i + startIndex).width = typeof gridColumns[parseInt(i.toString(), 10)].width === 'number' ?\n                    gridColumns[parseInt(i.toString(), 10)].width * 0.75 :\n                    helper.getConvertedWidth(gridColumns[parseInt(i.toString(), 10)].width) * 0.75;\n            }\n        }\n    };\n    /**\n     * set default style properties of each rows in exporting grid\n     *\n     * @param {PdfGridRow} row - specifies the PdfGridRow\n     * @param {PdfBorders} border - specifies the PdfBorders\n     * @returns {PdfGrid} returns the pdfgrid\n     * @private\n     */\n    PdfExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridTheme.record.fontName) ?\n                this.getFontFamily(this.gridTheme.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridTheme.record.fontSize) ? this.gridTheme.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridTheme.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridTheme.record.font)) {\n                font = this.gridTheme.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridTheme.record.fontColor)) {\n                var penBrushColor = this.hexToRgb(this.gridTheme.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        else {\n            row.style.setTextBrush(new PdfSolidBrush(new PdfColor(0, 0, 0)));\n        }\n        var borderRecord = this.gridTheme && this.gridTheme.record &&\n            this.gridTheme.record.border ? this.getBorderStyle(this.gridTheme.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * generate the formatted cell values\n     *\n     * @param {PdfBorders} border - specifies the border\n     * @param {Column[]} columns - specifies the columns\n     * @param {IGrid} gObj - specifies the IGrid\n     * @param {Object[]} dataSource - specifies the datasource\n     * @param {PdfGrid} pdfGrid - specifies the pdfGrid\n     * @param {number} startIndex - specifies the startindex\n     * @param {PdfExportProperties} pdfExportProperties - specifies the pdfExportProperties\n     * @param {ExportHelper} helper - specifies the helper\n     * @param {number} rowIndex - specifies the rowIndex\n     * @returns {number} returns the number of records\n     * @private\n     */\n    PdfExport.prototype.processRecord = function (border, columns, gObj, dataSource, pdfGrid, startIndex, pdfExportProperties, helper, rowIndex) {\n        var rows = helper.getGridRowModel(columns, dataSource, gObj, rowIndex);\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            rowIndex++;\n            this.rowIndex = rowIndex;\n            // create a new row and set default style properties\n            var gridRow = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n            var cellLength = row.cells.length;\n            for (var j = 0; j < cellLength; j++) {\n                var gridCell = row.cells[parseInt(j.toString(), 10)];\n                if (gridCell.cellType !== CellType.Data) {\n                    continue;\n                }\n                var column = gridCell.column;\n                var field = column.field;\n                var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n                var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n                var foreignKeyData = void 0;\n                if (column.isForeignColumn && column.isForeignColumn()) {\n                    foreignKeyData = helper.getFData(value, column);\n                    value = getValue(column.foreignKeyValue, foreignKeyData);\n                }\n                var data = row.data;\n                var cell = gridRow.cells.getCell(j);\n                var args = {\n                    data: data,\n                    value: value,\n                    column: column,\n                    style: undefined,\n                    colSpan: 1,\n                    cell: cell\n                };\n                args.value = args.column.type === 'boolean' && typeof args.value === 'string' ? args.value :\n                    this.exportValueFormatter.formatCellValue(args);\n                this.parent.trigger(events.pdfQueryCellInfo, args);\n                if (!isNullOrUndefined(args.image)) {\n                    args.value = new PdfBitmap(args.image.base64);\n                    args.value.height = args.image.height || args.value.height;\n                    args.value.width = args.image.width || args.value.width;\n                }\n                cell.value = args.value;\n                if (!isNullOrUndefined(args.hyperLink)) {\n                    cell.value = this.setHyperLink(args);\n                }\n                if (!isNullOrUndefined(args.style)) {\n                    this.processCellStyle(cell, args);\n                }\n                if (args.colSpan > 1) {\n                    if ((j + 1 + args.colSpan) > gridRow.cells.count) {\n                        args.colSpan = gridRow.cells.count - (j + 1);\n                    }\n                    cell.columnSpan = args.colSpan;\n                    for (var i = 1; i < cell.columnSpan; i++) {\n                        var spanCell = gridRow.cells.getCell(j + i);\n                        spanCell.value = '';\n                    }\n                    j += (args.colSpan - 1);\n                }\n            }\n            if (row.isExpand) {\n                var gridRow_1 = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n                var startIndexVal = (this.parent.childGrid || this.parent.detailTemplate) ? 0 : startIndex;\n                var cell = gridRow_1.cells.getCell(startIndexVal);\n                cell.columnSpan = gridRow_1.cells.count - (startIndexVal);\n                cell.style.cellPadding = new PdfPaddings(10, 10, 10, 10);\n                if (this.parent.childGrid) {\n                    gObj.isPrinting = true;\n                    var exportType = (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType) ?\n                        pdfExportProperties.exportType : 'AllPages';\n                    var returnValue = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n                    var childGridObj = returnValue.childGrid;\n                    var element = returnValue.element;\n                    childGridObj.actionFailure =\n                        helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n                    var args = {\n                        childGrid: childGridObj, row: row, cell: cell, exportProperties: pdfExportProperties\n                    };\n                    this.parent.trigger(events.exportDetailDataBound, args);\n                    childGridObj.beforeDataBound = this.childGridCell(cell, childGridObj, pdfExportProperties);\n                    childGridObj.appendTo(element);\n                }\n                else if (this.parent.detailTemplate) {\n                    var args = { parentRow: row, row: gridRow_1, value: {}, action: 'pdfexport', gridInstance: gObj };\n                    this.parent.trigger(events.exportDetailTemplate, args);\n                    cell.value = this.processDetailTemplate(args);\n                }\n            }\n            this.parent.notify(events.exportRowDataBound, { type: 'pdf', rowObj: row });\n        }\n        return rowIndex;\n    };\n    PdfExport.prototype.processDetailTemplate = function (templateData) {\n        var _this = this;\n        if (templateData.value.columnHeader || templateData.value.rows) {\n            // create a grid\n            var pdfGrid = new PdfGrid();\n            // get header theme style\n            var headerThemeStyle = this.getHeaderThemeStyle();\n            var border_1 = headerThemeStyle.border;\n            var headerFont_1 = headerThemeStyle.font;\n            var headerBrush_1 = headerThemeStyle.brush;\n            var processRow = function (row, gridRow, isHeader) {\n                if (isHeader) {\n                    gridRow.style.setBorder(border_1);\n                    gridRow.style.setFont(headerFont_1);\n                    gridRow.style.setTextBrush(headerBrush_1);\n                }\n                for (var j = 0; j < row.cells.length; j++) {\n                    var currentCell = row.cells[parseInt(j.toString(), 10)];\n                    var pdfCell = gridRow.cells.getCell(currentCell.index ? currentCell.index : j);\n                    if (currentCell.rowSpan > 0) {\n                        pdfCell.rowSpan = currentCell.rowSpan;\n                    }\n                    if (currentCell.colSpan > 0) {\n                        pdfCell.columnSpan = currentCell.colSpan;\n                    }\n                    pdfCell.value = currentCell.value;\n                    if (!isNullOrUndefined(currentCell.image)) {\n                        pdfCell.value = new PdfBitmap(currentCell.image.base64);\n                        pdfCell.value.height = currentCell.image.height;\n                        pdfCell.value.width = currentCell.image.width;\n                    }\n                    if (!isNullOrUndefined(currentCell.hyperLink)) {\n                        pdfCell.value = _this.setHyperLink(currentCell);\n                    }\n                    if (!isNullOrUndefined(currentCell.style)) {\n                        var cellStyle = {\n                            style: {\n                                backgroundColor: currentCell.style.backColor,\n                                textAlignment: currentCell.style.pdfTextAlignment,\n                                verticalAlignment: currentCell.style.pdfVerticalAlignment,\n                                textBrushColor: currentCell.style.fontColor,\n                                textPenColor: currentCell.style.pdfTextPenColor,\n                                fontFamily: currentCell.style.pdfFontFamily,\n                                fontSize: currentCell.style.fontSize,\n                                bold: currentCell.style.bold,\n                                italic: currentCell.style.italic,\n                                underline: currentCell.style.underline,\n                                strikeout: currentCell.style.strikeThrough,\n                                border: currentCell.style.pdfBorder,\n                                paragraphIndent: currentCell.style.pdfParagraphIndent,\n                                cellPadding: currentCell.style.pdfCellPadding\n                            }\n                        };\n                        _this.processCellStyle(pdfCell, cellStyle);\n                    }\n                }\n            };\n            if (templateData.value.columnCount) {\n                pdfGrid.columns.add(templateData.value.columnCount);\n            }\n            else {\n                if (templateData.value.columnHeader && templateData.value.columnHeader.length) {\n                    pdfGrid.columns.add(templateData.value.columnHeader[0].cells.length);\n                }\n                else if (templateData.value.rows && templateData.value.rows.length) {\n                    pdfGrid.columns.add(templateData.value.rows[0].cells.length);\n                }\n            }\n            if (templateData.value.columnHeader) {\n                pdfGrid.headers.add(templateData.value.columnHeader.length);\n                for (var i = 0; i < templateData.value.columnHeader.length; i++) {\n                    var gridHeader = pdfGrid.headers.getHeader(parseInt(i.toString(), 10));\n                    processRow(templateData.value.columnHeader[parseInt(i.toString(), 10)], gridHeader, true);\n                }\n            }\n            if (templateData.value.rows) {\n                for (var _i = 0, _a = templateData.value.rows; _i < _a.length; _i++) {\n                    var row = _a[_i];\n                    // create a new row and set default style properties\n                    var gridRow = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border_1);\n                    processRow(row, gridRow, false);\n                }\n            }\n            return pdfGrid;\n        }\n        else if (templateData.value.image) {\n            return new PdfBitmap(templateData.value.image.base64);\n        }\n        else if (templateData.value.text) {\n            return templateData.value.text;\n        }\n        else if (templateData.value.hyperLink) {\n            return this.setHyperLink(templateData.value);\n        }\n        return '';\n    };\n    PdfExport.prototype.setHyperLink = function (args) {\n        // create the Text Web Link\n        var textLink = new PdfTextWebLink();\n        // set the hyperlink\n        textLink.url = args.hyperLink.target;\n        // set the link text\n        textLink.text = args.hyperLink.displayText || args.hyperLink.target;\n        // set the font\n        textLink.font = new PdfStandardFont(PdfFontFamily.Helvetica, 9.75);\n        // set the brush and pen for the text color\n        textLink.brush = new PdfSolidBrush(new PdfColor(51, 102, 187));\n        return textLink;\n    };\n    PdfExport.prototype.childGridCell = function (cell, childGridObj, pdfExportProperties) {\n        var _this = this;\n        return function (result) {\n            childGridObj.beforeDataBound = null;\n            result.cancel = true;\n            cell.value = _this.processGridExport(childGridObj, result, pdfExportProperties);\n            childGridObj.destroy();\n            detach(childGridObj.element);\n            _this.gridPool[childGridObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n            return cell;\n        };\n    };\n    PdfExport.prototype.processCellStyle = function (cell, args) {\n        if (!isNullOrUndefined(args.style.backgroundColor)) {\n            var backColor = this.hexToRgb(args.style.backgroundColor);\n            cell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(args.style.textAlignment)) {\n            cell.style.stringFormat = this.getHorizontalAlignment(args.style.textAlignment);\n        }\n        if (!isNullOrUndefined(args.style.cellPadding)) {\n            cell.style.cellPadding = args.style.cellPadding;\n        }\n        if (!isNullOrUndefined(args.style.verticalAlignment)) {\n            cell.style.stringFormat = this.getVerticalAlignment(args.style.verticalAlignment, cell.style.stringFormat);\n        }\n        if (!isNullOrUndefined(args.style.textBrushColor)) {\n            var textBrushColor = this.hexToRgb(args.style.textBrushColor);\n            cell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(args.style.textPenColor)) {\n            var textPenColor = this.hexToRgb(args.style.textPenColor);\n            cell.style.textPen = new PdfPen(new PdfColor(textPenColor.r, textPenColor.g, textPenColor.b));\n        }\n        if (!isNullOrUndefined(args.style.fontFamily) || !isNullOrUndefined(args.style.fontSize) || !isNullOrUndefined(args.style.bold) ||\n            !isNullOrUndefined(args.style.italic) || !isNullOrUndefined(args.style.underline) || !isNullOrUndefined(args.style.strikeout)) {\n            cell.style.font = this.getFont(args);\n        }\n        if (!isNullOrUndefined(args.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = args.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(args.style.border.color)) {\n                var borderColor = this.hexToRgb(args.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(args.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(args.style.border.dashStyle);\n            }\n            border.all = pen;\n            cell.style.borders = border;\n        }\n        if (!isNullOrUndefined(args.style.paragraphIndent)) {\n            cell.style.stringFormat = new PdfStringFormat();\n            cell.style.stringFormat.paragraphIndent = args.style.paragraphIndent;\n        }\n    };\n    /**\n     * set text alignment of each columns in exporting grid\n     *\n     * @param {string} textAlign - specifies the textAlign\n     * @param {PdfStringFormat} format - specifies the PdfStringFormat\n     * @returns {PdfStringFormat} returns the PdfStringFormat\n     * @private\n     */\n    PdfExport.prototype.getHorizontalAlignment = function (textAlign, format) {\n        if (format === undefined) {\n            format = new PdfStringFormat();\n        }\n        switch (textAlign) {\n            case 'Right':\n                format.alignment = PdfTextAlignment.Right;\n                break;\n            case 'Center':\n                format.alignment = PdfTextAlignment.Center;\n                break;\n            case 'Justify':\n                format.alignment = PdfTextAlignment.Justify;\n                break;\n            case 'Left':\n                format.alignment = PdfTextAlignment.Left;\n                break;\n        }\n        return format;\n    };\n    /**\n     * set vertical alignment of each columns in exporting grid\n     *\n     * @param {string} verticalAlign - specifies the verticalAlign\n     * @param {PdfStringFormat} format - specifies the PdfStringFormat\n     * @param {string} textAlign - specifies the text align\n     * @returns {PdfStringFormat} returns the PdfStringFormat\n     * @private\n     */\n    PdfExport.prototype.getVerticalAlignment = function (verticalAlign, format, textAlign) {\n        if (format === undefined) {\n            format = new PdfStringFormat();\n            format = this.getHorizontalAlignment(textAlign, format);\n        }\n        switch (verticalAlign) {\n            case 'Bottom':\n                format.lineAlignment = PdfVerticalAlignment.Bottom;\n                break;\n            case 'Middle':\n                format.lineAlignment = PdfVerticalAlignment.Middle;\n                break;\n            case 'Top':\n                format.lineAlignment = PdfVerticalAlignment.Top;\n                break;\n        }\n        return format;\n    };\n    PdfExport.prototype.getFontFamily = function (fontFamily) {\n        switch (fontFamily) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PdfExport.prototype.getFont = function (content) {\n        if (content.font) {\n            return content.font;\n        }\n        var fontSize = (!isNullOrUndefined(content.style.fontSize)) ? (content.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(content.style.fontFamily)) ?\n            (this.getFontFamily(content.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(content.style.bold) && content.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(content.style.italic) && content.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(content.style.underline) && content.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(content.style.strikeout) && content.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PdfExport.prototype.getPageNumberStyle = function (pageNumberType) {\n        switch (pageNumberType) {\n            case 'LowerLatin':\n                return 2;\n            case 'LowerRoman':\n                return 3;\n            case 'UpperLatin':\n                return 4;\n            case 'UpperRoman':\n                return 5;\n            default:\n                return 1;\n        }\n    };\n    PdfExport.prototype.setContentFormat = function (content, format) {\n        if (!isNullOrUndefined(content.size)) {\n            var width = content.size.width * 0.75;\n            var height = content.size.height * 0.75;\n            format = new PdfStringFormat(PdfTextAlignment.Left, PdfVerticalAlignment.Middle);\n            if (!isNullOrUndefined(content.style.hAlign)) {\n                switch (content.style.hAlign) {\n                    case 'Right':\n                        format.alignment = PdfTextAlignment.Right;\n                        break;\n                    case 'Center':\n                        format.alignment = PdfTextAlignment.Center;\n                        break;\n                    case 'Justify':\n                        format.alignment = PdfTextAlignment.Justify;\n                        break;\n                    default:\n                        format.alignment = PdfTextAlignment.Left;\n                }\n            }\n            if (!isNullOrUndefined(content.style.vAlign)) {\n                format = this.getVerticalAlignment(content.style.vAlign, format);\n            }\n            return { format: format, size: new SizeF(width, height) };\n        }\n        return null;\n    };\n    PdfExport.prototype.getPageSize = function (pageSize) {\n        switch (pageSize) {\n            case 'Letter':\n                return new SizeF(612, 792);\n            case 'Note':\n                return new SizeF(540, 720);\n            case 'Legal':\n                return new SizeF(612, 1008);\n            case 'A0':\n                return new SizeF(2380, 3368);\n            case 'A1':\n                return new SizeF(1684, 2380);\n            case 'A2':\n                return new SizeF(1190, 1684);\n            case 'A3':\n                return new SizeF(842, 1190);\n            case 'A5':\n                return new SizeF(421, 595);\n            case 'A6':\n                return new SizeF(297, 421);\n            case 'A7':\n                return new SizeF(210, 297);\n            case 'A8':\n                return new SizeF(148, 210);\n            case 'A9':\n                return new SizeF(105, 148);\n            // case 'A10':\n            // return new SizeF(74, 105);\n            case 'B0':\n                return new SizeF(2836, 4008);\n            case 'B1':\n                return new SizeF(2004, 2836);\n            case 'B2':\n                return new SizeF(1418, 2004);\n            case 'B3':\n                return new SizeF(1002, 1418);\n            case 'B4':\n                return new SizeF(709, 1002);\n            case 'B5':\n                return new SizeF(501, 709);\n            case 'Archa':\n                return new SizeF(648, 864);\n            case 'Archb':\n                return new SizeF(864, 1296);\n            case 'Archc':\n                return new SizeF(1296, 1728);\n            case 'Archd':\n                return new SizeF(1728, 2592);\n            case 'Arche':\n                return new SizeF(2592, 3456);\n            case 'Flsa':\n                return new SizeF(612, 936);\n            case 'HalfLetter':\n                return new SizeF(396, 612);\n            case 'Letter11x17':\n                return new SizeF(792, 1224);\n            case 'Ledger':\n                return new SizeF(1224, 792);\n            default:\n                return new SizeF(595, 842);\n        }\n    };\n    PdfExport.prototype.getDashStyle = function (dashStyle) {\n        switch (dashStyle) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PdfExport.prototype.getPenFromContent = function (content) {\n        var pen = new PdfPen(new PdfColor(0, 0, 0));\n        if (!isNullOrUndefined(content.style) && content.style !== null && !isNullOrUndefined(content.style.penColor)) {\n            var penColor = this.hexToRgb(content.style.penColor);\n            pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n        }\n        return pen;\n    };\n    PdfExport.prototype.getBrushFromContent = function (content) {\n        var brush = null;\n        if (!isNullOrUndefined(content.style.textBrushColor)) {\n            /* tslint:disable-next-line:max-line-length */\n            var brushColor = this.hexToRgb(content.style.textBrushColor);\n            brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n        }\n        return brush;\n    };\n    PdfExport.prototype.hexToRgb = function (hex) {\n        if (hex === null || hex === '' || hex.length !== 7) {\n            throw new Error('please set valid hex value for color...');\n        }\n        hex = hex.substring(1);\n        var bigint = parseInt(hex, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PdfExport.prototype.getFontStyle = function (theme) {\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return fontStyle;\n    };\n    PdfExport.prototype.getBorderStyle = function (border) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(border)) {\n            var borderWidth = border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(border.color)) {\n                var borderColor = this.hexToRgb(border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(border.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            borders.all = new PdfPen(new PdfColor(234, 234, 234));\n        }\n        return borders;\n    };\n    PdfExport.prototype.destroy = function () {\n        //destroy for exporting\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}